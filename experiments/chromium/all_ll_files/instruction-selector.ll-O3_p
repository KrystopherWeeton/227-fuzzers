; ModuleID = '../../v8/src/compiler/backend/instruction-selector.cc'
source_filename = "../../v8/src/compiler/backend/instruction-selector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::pair.1394" = type { i32, i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::CallInterfaceDescriptorData" = type { i32, i32, i32, %"class.v8::base::Flags.1569", i32, i32, %"class.v8::internal::Register"*, %"class.v8::internal::MachineType"* }
%"class.v8::base::Flags.1569" = type { i32 }
%"class.v8::internal::Register" = type { %"class.v8::internal::RegisterBase" }
%"class.v8::internal::RegisterBase" = type { i32 }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"class.v8::internal::compiler::InstructionSelector" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::SourcePositionTable"*, i32, %"class.v8::internal::compiler::InstructionSelector::Features", %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::ZoneVector.1325", %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1331", %"class.v8::internal::ZoneVector.1331", %"class.v8::internal::ZoneVector.1193", %"class.v8::internal::ZoneVector.1193", %"class.v8::internal::ZoneVector.1193", %"class.v8::internal::compiler::InstructionScheduler"*, i32, i32, i32, [4 x i8], %"class.v8::internal::ZoneUnorderedMap", i32, %"class.v8::internal::compiler::Frame"*, i8, %"class.v8::internal::ZoneVector.1391", i32, %"class.v8::internal::TickCounter"*, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i64*, %"class.v8::internal::ZoneVector.1512" }
%"class.v8::internal::compiler::InstructionSelector::Features" = type { i32 }
%"class.v8::internal::compiler::BasicBlock" = type { i32, i32, i8, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.1318", %"class.v8::internal::ZoneVector.1311", %"class.v8::internal::ZoneVector.1311", %"class.v8::internal::compiler::BasicBlock::Id" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector.1318" = type { %"class.std::__1::vector.1319" }
%"class.std::__1::vector.1319" = type { %"class.std::__1::__vector_base.1320" }
%"class.std::__1::__vector_base.1320" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322", %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.v8::internal::ZoneAllocator.1324" }
%"class.v8::internal::ZoneAllocator.1324" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1311" = type { %"class.std::__1::vector.1312" }
%"class.std::__1::vector.1312" = type { %"class.std::__1::__vector_base.1313" }
%"class.std::__1::__vector_base.1313" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315", %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { %"class.v8::internal::compiler::BasicBlock"** }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.v8::internal::ZoneAllocator.1317" }
%"class.v8::internal::ZoneAllocator.1317" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock::Id" = type { i64 }
%"class.v8::internal::ZoneVector.1325" = type { %"class.std::__1::vector.1326" }
%"class.std::__1::vector.1326" = type { %"class.std::__1::__vector_base.1327" }
%"class.std::__1::__vector_base.1327" = type { %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"**, %"class.std::__1::__compressed_pair.1328" }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.1233" }
%"class.v8::internal::ZoneVector.1233" = type { %"class.std::__1::vector.1234" }
%"class.std::__1::vector.1234" = type { %"class.std::__1::__vector_base.1235" }
%"class.std::__1::__vector_base.1235" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.1236" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237", %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.v8::internal::ZoneAllocator.1239" }
%"class.v8::internal::ZoneAllocator.1239" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.1240", i32, [4 x i8] }>
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.1184", %"class.v8::internal::ZoneVector.1184", %"class.v8::internal::ZoneVector.1190", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.1184" = type { %"class.std::__1::vector.1185" }
%"class.std::__1::vector.1185" = type { %"class.std::__1::__vector_base.1186" }
%"class.std::__1::__vector_base.1186" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188", %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1190" = type { %"class.std::__1::vector.1191" }
%"class.std::__1::vector.1191" = type { %"class.std::__1::__vector_base.1192" }
%"class.std::__1::__vector_base.1192" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.1199" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.1193" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200", %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.v8::internal::ZoneAllocator.1202" }
%"class.v8::internal::ZoneAllocator.1202" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329", %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.v8::internal::compiler::Instruction"** }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.v8::internal::ZoneAllocator.1254" }
%"class.v8::internal::ZoneAllocator.1254" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1240" = type { %"class.std::__1::vector.1241" }
%"class.std::__1::vector.1241" = type { %"class.std::__1::__vector_base.1242" }
%"class.std::__1::__vector_base.1242" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244", %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.v8::internal::ZoneAllocator.1246" }
%"class.v8::internal::ZoneAllocator.1246" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1331" = type { %"class.std::__1::vector.1332" }
%"class.std::__1::vector.1332" = type { i64*, i64, %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.v8::internal::ZoneAllocator.1335" }
%"class.v8::internal::ZoneAllocator.1335" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1193" = type { %"class.std::__1::vector.1194" }
%"class.std::__1::vector.1194" = type { %"class.std::__1::__vector_base.1195" }
%"class.std::__1::__vector_base.1195" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.869", %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.869" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.v8::internal::ZoneAllocator.1198" }
%"class.v8::internal::ZoneAllocator.1198" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionScheduler" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*, %"class.v8::internal::ZoneMap.1355", %"class.v8::base::Optional.1364" }
%"class.v8::internal::ZoneVector.1336" = type { %"class.std::__1::vector.1337" }
%"class.std::__1::vector.1337" = type { %"class.std::__1::__vector_base.1338" }
%"class.std::__1::__vector_base.1338" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"**, %"class.std::__1::__compressed_pair.1352" }
%"class.std::__1::__compressed_pair.1352" = type { %"struct.std::__1::__compressed_pair_elem.1353", %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1353" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"** }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.v8::internal::ZoneAllocator.1351" }
%"class.v8::internal::ZoneAllocator.1351" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode" = type { %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::ZoneDeque.1339", i32, i32, i32, i32 }
%"class.v8::internal::ZoneDeque.1339" = type { %"class.std::__1::deque.1340" }
%"class.std::__1::deque.1340" = type { %"class.std::__1::__deque_base.1341" }
%"class.std::__1::__deque_base.1341" = type { %"struct.std::__1::__split_buffer.1342", i64, %"class.std::__1::__compressed_pair.1348" }
%"struct.std::__1::__split_buffer.1342" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"***, %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344", %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"class.v8::internal::compiler::InstructionScheduler::ScheduleGraphNode"*** }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.v8::internal::RecyclingZoneAllocator.1346" }
%"class.v8::internal::RecyclingZoneAllocator.1346" = type { %"class.v8::internal::ZoneAllocator.1347", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1347" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.v8::internal::RecyclingZoneAllocator.1350" }
%"class.v8::internal::RecyclingZoneAllocator.1350" = type { %"class.v8::internal::ZoneAllocator.1351", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::InstructionScheduler::ScheduleGraphNode *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneMap.1355" = type { %"class.std::__1::map.1356" }
%"class.std::__1::map.1356" = type { %"class.std::__1::__tree.1357" }
%"class.std::__1::__tree.1357" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1358", %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"class.v8::internal::ZoneAllocator.1360" }
%"class.v8::internal::ZoneAllocator.1360" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::Optional.1364" = type { %"class.v8::base::internal::OptionalBase.1365" }
%"class.v8::base::internal::OptionalBase.1365" = type { %"struct.v8::base::internal::OptionalStorage.1366" }
%"struct.v8::base::internal::OptionalStorage.1366" = type { %"struct.v8::base::internal::OptionalStorageBase.1367" }
%"struct.v8::base::internal::OptionalStorageBase.1367" = type { i8, %union.anon.1368 }
%union.anon.1368 = type { %"class.v8::base::RandomNumberGenerator" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1369" }
%"class.std::__1::unordered_map.1369" = type { %"class.std::__1::__hash_table.1370" }
%"class.std::__1::__hash_table.1370" = type <{ %"class.std::__1::unique_ptr.1371", %"class.std::__1::__compressed_pair.1380", %"class.std::__1::__compressed_pair.1384", %"class.std::__1::__compressed_pair.1387", [4 x i8] }>
%"class.std::__1::unique_ptr.1371" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373", %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"struct.std::__1::__hash_node_base.1374"** }
%"struct.std::__1::__hash_node_base.1374" = type { %"struct.std::__1::__hash_node_base.1374"* }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"class.std::__1::__bucket_list_deallocator.1376" }
%"class.std::__1::__bucket_list_deallocator.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.v8::internal::ZoneAllocator.1379" }
%"class.v8::internal::ZoneAllocator.1379" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381", %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"struct.std::__1::__hash_node_base.1374" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"class.v8::internal::ZoneAllocator.1383" }
%"class.v8::internal::ZoneAllocator.1383" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.v8::internal::ZoneVector.1391" = type { %"class.std::__1::vector.1392" }
%"class.std::__1::vector.1392" = type { %"class.std::__1::__vector_base.1393" }
%"class.std::__1::__vector_base.1393" = type { %"struct.std::__1::pair.1394"*, %"struct.std::__1::pair.1394"*, %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396", %"struct.std::__1::__compressed_pair_elem.1397" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.std::__1::pair.1394"* }
%"struct.std::__1::__compressed_pair_elem.1397" = type { %"class.v8::internal::ZoneAllocator.1398" }
%"class.v8::internal::ZoneAllocator.1398" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1512" = type { %"class.std::__1::vector.1513" }
%"class.std::__1::vector.1513" = type { %"class.std::__1::__vector_base.1514" }
%"class.std::__1::__vector_base.1514" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1515" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.1516", %"struct.std::__1::__compressed_pair_elem.1517" }
%"struct.std::__1::__compressed_pair_elem.1516" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1517" = type { %"class.v8::internal::ZoneAllocator.1518" }
%"class.v8::internal::ZoneAllocator.1518" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Linkage" = type { %"class.v8::internal::compiler::CallDescriptor"* }
%"class.v8::internal::compiler::CallDescriptor" = type { i32, %"class.v8::internal::MachineType", [2 x i8], %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::Signature"*, i64, i64, %"class.v8::base::Flags", i32, i32, i32, %"class.v8::base::Flags.18", i32, i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::internal::compiler::LinkageLocation" = type <{ i32, %"class.v8::internal::MachineType", [2 x i8] }>
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::compiler::LinkageLocation"* }
%"class.v8::base::Flags.18" = type { i32 }
%"class.v8::CFunctionInfo" = type opaque
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.1215", %"class.v8::internal::ZoneVector.1223", %"class.v8::internal::ZoneVector.1184", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.1255", %"class.v8::internal::ZoneVector.1268", i32, %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.24", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.652", %"class.std::__1::unique_ptr.673", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.683", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.866", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.879", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.889", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.900", %"struct.std::__1::atomic.177", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.975", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1021"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1029", i32, i8, i8, i32, i32, %"class.std::__1::vector.1035", %"class.std::__1::vector.1035", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1042", i64, %"class.std::__1::unordered_map.1043", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.548", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.185", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1099", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1137", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1171", %"class.std::__1::vector.1175", %"class.std::__1::vector.1175", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.53", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.171", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.186", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.190", %"class.std::__1::vector.190", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.487", %"class.std::__1::unique_ptr.487", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.499", %"class.std::__1::shared_ptr.505", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.510", %"class.std::__1::unique_ptr.536", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.542", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.555", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.355", i8, [7 x i8], %"class.std::__1::unordered_map.561", %"class.std::__1::unordered_map.587", %"class.std::__1::unordered_map.561", %"class.std::__1::unordered_map.611", %"class.std::__1::vector.639", i8, %"class.std::__1::unique_ptr.646", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.48" }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i64 }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.128" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.122" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.62", %"class.std::__1::vector.62", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.64" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.69" }
%"class.std::__1::__hash_table.69" = type <{ %"class.std::__1::unique_ptr.70", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.87", [4 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base.73"** }
%"struct.std::__1::__hash_node_base.73" = type { %"struct.std::__1::__hash_node_base.73"* }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::__bucket_list_deallocator.75" }
%"class.std::__1::__bucket_list_deallocator.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base.73" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.48", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.103"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.111", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.48", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.92", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.96" }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.98" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl.113" }
%"struct.std::__1::__cxx_atomic_impl.113" = type { %"struct.std::__1::__cxx_atomic_base_impl.114" }
%"struct.std::__1::__cxx_atomic_base_impl.114" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.115", i8, [7 x i8] }>
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { i64*, i64*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"struct.std::__1::pair.130"*, %"struct.std::__1::pair.130"*, %"class.std::__1::__compressed_pair.131" }
%"struct.std::__1::pair.130" = type { i32, i64 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::pair.130"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.136" }
%"class.std::__1::unordered_map.136" = type { %"class.std::__1::__hash_table.137" }
%"class.std::__1::__hash_table.137" = type <{ %"class.std::__1::unique_ptr.138", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140", %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base.141"** }
%"struct.std::__1::__hash_node_base.141" = type { %"struct.std::__1::__hash_node_base.141"* }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.std::__1::__bucket_list_deallocator.143" }
%"class.std::__1::__bucket_list_deallocator.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base.141" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.164", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.166" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1104", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1108", %"class.std::__1::unique_ptr.1114", %"class.std::__1::unique_ptr.499", %"class.std::__1::vector.1120", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1104" = type { %"struct.std::__1::__atomic_base.1105" }
%"struct.std::__1::__atomic_base.1105" = type { %"struct.std::__1::__cxx_atomic_impl.1106" }
%"struct.std::__1::__cxx_atomic_impl.1106" = type { %"struct.std::__1::__cxx_atomic_base_impl.1107" }
%"struct.std::__1::__cxx_atomic_base_impl.1107" = type { i32 }
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.859" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { i64**, i64**, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { i64** }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.859", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1120" = type { %"class.std::__1::__vector_base.1121" }
%"class.std::__1::__vector_base.1121" = type { %"struct.std::__1::pair.1122"*, %"struct.std::__1::pair.1122"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.std::__1::pair.1122" = type opaque
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::pair.1122"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.177", %"struct.std::__1::atomic.181", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.185" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.192" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.305", %"class.std::__1::vector.305", %"class.std::__1::vector.305", %"class.std::__1::vector.312", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.206", %"class.std::__1::vector.207", %"class.std::__1::vector.214", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.206" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.209" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.std::__1::unique_ptr.216"*, %"class.std::__1::unique_ptr.216"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::unique_ptr.216" = type opaque
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.std::__1::unique_ptr.216"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.222", %"class.v8::internal::Worklist.224", %"class.v8::internal::Worklist.224", %"class.v8::internal::Worklist.224", %"class.v8::internal::Worklist.226", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.222" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.224" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.226" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.228" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.230" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.238", i8, i64 }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.254" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.206"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.254" = type { %"class.std::__1::__hash_table.255" }
%"class.std::__1::__hash_table.255" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.259"** }
%"struct.std::__1::__hash_node_base.259" = type { %"struct.std::__1::__hash_node_base.259"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__bucket_list_deallocator.261" }
%"class.std::__1::__bucket_list_deallocator.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.259" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.281" }
%"class.std::__1::unordered_map.281" = type { %"class.std::__1::__hash_table.282" }
%"class.std::__1::__hash_table.282" = type <{ %"class.std::__1::unique_ptr.283", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285", %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base.286"** }
%"struct.std::__1::__hash_node_base.286" = type { %"struct.std::__1::__hash_node_base.286"* }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::__bucket_list_deallocator.288" }
%"class.std::__1::__bucket_list_deallocator.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.286" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"struct.std::__1::pair.314"*, %"struct.std::__1::pair.314"*, %"class.std::__1::__compressed_pair.315" }
%"struct.std::__1::pair.314" = type opaque
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.std::__1::pair.314"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.320", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.305"], [3 x %"class.std::__1::vector.305"], i8, %"struct.std::__1::atomic.177", [6 x i8], %"class.std::__1::vector.305", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.330"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.305", %"class.std::__1::vector.305", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.330" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.355", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.348"], %"class.std::__1::unique_ptr.320" }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.387", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.391", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.396" }
%"struct.std::__1::atomic.387" = type { %"struct.std::__1::__atomic_base.388" }
%"struct.std::__1::__atomic_base.388" = type { %"struct.std::__1::__cxx_atomic_impl.389" }
%"struct.std::__1::__cxx_atomic_impl.389" = type { %"struct.std::__1::__cxx_atomic_base_impl.390" }
%"struct.std::__1::__cxx_atomic_base_impl.390" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__cxx_atomic_impl.393" }
%"struct.std::__1::__cxx_atomic_impl.393" = type { %"struct.std::__1::__cxx_atomic_base_impl.394" }
%"struct.std::__1::__cxx_atomic_base_impl.394" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.396" = type { %"class.std::__1::__hash_table.397" }
%"class.std::__1::__hash_table.397" = type <{ %"class.std::__1::unique_ptr.398", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.416", [4 x i8] }>
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400", %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.401"** }
%"struct.std::__1::__hash_node_base.401" = type { %"struct.std::__1::__hash_node_base.401"* }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.std::__1::__bucket_list_deallocator.403" }
%"class.std::__1::__bucket_list_deallocator.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::__hash_node_base.401" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.320", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.177", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.426", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.426" = type { %"class.std::__1::__hash_table.427" }
%"class.std::__1::__hash_table.427" = type <{ %"class.std::__1::unique_ptr.428", %"class.std::__1::__compressed_pair.438", %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.446", [4 x i8] }>
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430", %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.std::__1::__hash_node_base.431"** }
%"struct.std::__1::__hash_node_base.431" = type { %"struct.std::__1::__hash_node_base.431"* }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.std::__1::__bucket_list_deallocator.433" }
%"class.std::__1::__bucket_list_deallocator.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"struct.std::__1::__hash_node_base.431" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.462" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.505" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.506", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.548", %"class.std::__1::vector.548" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.355" = type { %"class.std::__1::__hash_table.356" }
%"class.std::__1::__hash_table.356" = type <{ %"class.std::__1::unique_ptr.357", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376", [4 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.360"** }
%"struct.std::__1::__hash_node_base.360" = type { %"struct.std::__1::__hash_node_base.360"* }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__bucket_list_deallocator.362" }
%"class.std::__1::__bucket_list_deallocator.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.360" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.587" = type { %"class.std::__1::__hash_table.588" }
%"class.std::__1::__hash_table.588" = type <{ %"class.std::__1::unique_ptr.589", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.607", [4 x i8] }>
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591", %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::__hash_node_base.592"** }
%"struct.std::__1::__hash_node_base.592" = type { %"struct.std::__1::__hash_node_base.592"* }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.std::__1::__bucket_list_deallocator.594" }
%"class.std::__1::__bucket_list_deallocator.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.592" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.561" = type { %"class.std::__1::__hash_table.562" }
%"class.std::__1::__hash_table.562" = type <{ %"class.std::__1::unique_ptr.563", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.581", [4 x i8] }>
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565", %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::__hash_node_base.566"** }
%"struct.std::__1::__hash_node_base.566" = type { %"struct.std::__1::__hash_node_base.566"* }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.std::__1::__bucket_list_deallocator.568" }
%"class.std::__1::__bucket_list_deallocator.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.566" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.611" = type { %"class.std::__1::__hash_table.612" }
%"class.std::__1::__hash_table.612" = type <{ %"class.std::__1::unique_ptr.613", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.616"** }
%"struct.std::__1::__hash_node_base.616" = type { %"struct.std::__1::__hash_node_base.616"* }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::__bucket_list_deallocator.618" }
%"class.std::__1::__bucket_list_deallocator.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.616" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.641" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.548" }
%"class.std::__1::shared_ptr.652" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.164", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.667" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.656" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.std::__1::unique_ptr.658"*, %"class.std::__1::unique_ptr.658"*, %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.std::__1::unique_ptr.658"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.676", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.676" = type { %"struct.std::__1::__atomic_base.677" }
%"struct.std::__1::__atomic_base.677" = type { %"struct.std::__1::__cxx_atomic_impl.678" }
%"struct.std::__1::__cxx_atomic_impl.678" = type { %"struct.std::__1::__cxx_atomic_base_impl.679" }
%"struct.std::__1::__cxx_atomic_base_impl.679" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.683" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.684", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.684" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.685", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"class.std::__1::unique_ptr.687"*, %"class.std::__1::unique_ptr.687"*, %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::unique_ptr.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.std::__1::unique_ptr.687"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", %"struct.std::__1::atomic.177", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::set.735", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.735" = type { %"class.std::__1::__tree.736" }
%"class.std::__1::__tree.736" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.737", %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.744" }
%"class.v8::internal::TaggedImpl.744" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.743" }
%"class.v8::internal::TaggedImpl.743" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.782", %"class.std::__1::unique_ptr.789" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.745", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.769", %"class.v8::internal::Handle.781", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.745" = type { %"class.std::__1::__vector_base.746" }
%"class.std::__1::__vector_base.746" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.764" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.747", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.759", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.747" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.755" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.750" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.748", %union.anon.749 }
%"class.v8::internal::Handle.748" = type { %"class.v8::internal::HandleBase" }
%union.anon.749 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::Optional.759" = type { %"class.v8::base::internal::OptionalBase.760" }
%"class.v8::base::internal::OptionalBase.760" = type { %"struct.v8::base::internal::OptionalStorage.761" }
%"struct.v8::base::internal::OptionalStorage.761" = type { %"struct.v8::base::internal::OptionalStorageBase.762" }
%"struct.v8::base::internal::OptionalStorageBase.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { i8 }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.769" = type { %"class.std::__1::__deque_base.770" }
%"class.std::__1::__deque_base.770" = type { %"struct.std::__1::__split_buffer.771", i64, %"class.std::__1::__compressed_pair.777" }
%"struct.std::__1::__split_buffer.771" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.772" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Handle.781" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.784" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.795", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.802", %"class.v8::internal::DetachableVector.801", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.802" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.803", %"class.std::__1::vector.809", %"class.std::__1::unique_ptr.816", %"class.std::__1::vector.823", %"class.std::__1::unique_ptr.830", i64, %"class.std::__1::vector.836", %"class.std::__1::vector.844", %"class.std::__1::vector.852", i8, i8, i32 }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.811" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::NodeSpace.819"* }
%"class.v8::internal::GlobalHandles::NodeSpace.819" = type opaque
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.825" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"struct.std::__1::pair.846"*, %"struct.std::__1::pair.846"*, %"class.std::__1::__compressed_pair.847" }
%"struct.std::__1::pair.846" = type opaque
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::pair.846"* }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.854" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.859", %"class.std::__1::vector.866" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.873" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { i32*, i32*, %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.879" = type { %"struct.std::__1::__atomic_base.880" }
%"struct.std::__1::__atomic_base.880" = type { %"struct.std::__1::__cxx_atomic_impl.881" }
%"struct.std::__1::__cxx_atomic_impl.881" = type { %"struct.std::__1::__cxx_atomic_base_impl.882" }
%"struct.std::__1::__cxx_atomic_base_impl.882" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.889" = type { %"struct.std::__1::__atomic_base.890" }
%"struct.std::__1::__atomic_base.890" = type { %"struct.std::__1::__cxx_atomic_impl.891" }
%"struct.std::__1::__cxx_atomic_impl.891" = type { %"struct.std::__1::__cxx_atomic_base_impl.892" }
%"struct.std::__1::__cxx_atomic_base_impl.892" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.896 }
%union.anon.896 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.900" = type { %"class.std::__1::__hash_table.901" }
%"class.std::__1::__hash_table.901" = type <{ %"class.std::__1::unique_ptr.902", %"class.std::__1::__compressed_pair.912", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.920", [4 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904", %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.905"** }
%"struct.std::__1::__hash_node_base.905" = type { %"struct.std::__1::__hash_node_base.905"* }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::__bucket_list_deallocator.907" }
%"class.std::__1::__bucket_list_deallocator.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.905" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::Handle.932", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.933", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.933" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.934", %"class.std::__1::vector.940", %"class.std::__1::unique_ptr.948", %"class.std::__1::unique_ptr.954", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.960", %"class.std::__1::vector.966", %"struct.std::__1::pair.974" }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { %"class.std::__1::unique_ptr.942"*, %"class.std::__1::unique_ptr.942"*, %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::unique_ptr.942" = type opaque
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::unique_ptr.942"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"struct.std::__1::pair.968"*, %"struct.std::__1::pair.968"*, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::pair.968" = type opaque
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::pair.968"* }
%"struct.std::__1::pair.974" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.23"*, i16, i8*)*, i8* }
%"class.v8::Local.23" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.978", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.978" = type { %"class.std::__1::__hash_table.979" }
%"class.std::__1::__hash_table.979" = type <{ %"class.std::__1::unique_ptr.980", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.999", [4 x i8] }>
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982", %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.983"** }
%"struct.std::__1::__hash_node_base.983" = type { %"struct.std::__1::__hash_node_base.983"* }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.std::__1::__bucket_list_deallocator.985" }
%"class.std::__1::__bucket_list_deallocator.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::__hash_node_base.983" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1007" }
%"class.std::__1::deque.1007" = type { %"class.std::__1::__deque_base.1008" }
%"class.std::__1::__deque_base.1008" = type { %"struct.std::__1::__split_buffer.1009", i64, %"class.std::__1::__compressed_pair.1016" }
%"struct.std::__1::__split_buffer.1009" = type { %"struct.std::__1::pair.1010"**, %"struct.std::__1::pair.1010"**, %"struct.std::__1::pair.1010"**, %"class.std::__1::__compressed_pair.1011" }
%"struct.std::__1::pair.1010" = type opaque
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::pair.1010"** }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1021" = type { %"class.std::__1::__vector_base.1022" }
%"class.std::__1::__vector_base.1022" = type { %"class.v8::internal::Handle.748"*, %"class.v8::internal::Handle.748"*, %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.v8::internal::Handle.748"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.1028" }
%"class.v8::internal::PointerToIndexHashMap.1028" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.884", i32, %"class.v8::Local.23" }
%"class.v8::Local.884" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1035" = type { %"class.std::__1::__vector_base.1036" }
%"class.std::__1::__vector_base.1036" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1042" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1043" = type { %"class.std::__1::__hash_table.1044" }
%"class.std::__1::__hash_table.1044" = type <{ %"class.std::__1::unique_ptr.1045", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1063", [4 x i8] }>
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047", %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.std::__1::__hash_node_base.1048"** }
%"struct.std::__1::__hash_node_base.1048" = type { %"struct.std::__1::__hash_node_base.1048"* }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.std::__1::__bucket_list_deallocator.1050" }
%"class.std::__1::__bucket_list_deallocator.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.std::__1::__hash_node_base.1048" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.185" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1067", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1096", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1097", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1067" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1092, %union.anon.1094, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1092 = type { i64 }
%union.anon.1094 = type { i64 }
%"class.std::__1::weak_ptr.1096" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1097" = type { %"class.v8::PersistentBase.1098" }
%"class.v8::PersistentBase.1098" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1068", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1068" = type { %"class.std::__1::__hash_table.1069" }
%"class.std::__1::__hash_table.1069" = type <{ %"class.std::__1::unique_ptr.1070", %"class.std::__1::__compressed_pair.1080", %"class.std::__1::__compressed_pair.1085", %"class.std::__1::__compressed_pair.1088", [4 x i8] }>
%"class.std::__1::unique_ptr.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072", %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.std::__1::__hash_node_base.1073"** }
%"struct.std::__1::__hash_node_base.1073" = type { %"struct.std::__1::__hash_node_base.1073"* }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.std::__1::__bucket_list_deallocator.1075" }
%"class.std::__1::__bucket_list_deallocator.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"struct.std::__1::__hash_node_base.1073" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1128", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.885", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.885" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1145" }
%"class.std::__1::unordered_map.1145" = type { %"class.std::__1::__hash_table.1146" }
%"class.std::__1::__hash_table.1146" = type <{ %"class.std::__1::unique_ptr.1147", %"class.std::__1::__compressed_pair.1157", %"class.std::__1::__compressed_pair.1162", %"class.std::__1::__compressed_pair.1165", [4 x i8] }>
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149", %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"struct.std::__1::__hash_node_base.1150"** }
%"struct.std::__1::__hash_node_base.1150" = type { %"struct.std::__1::__hash_node_base.1150"* }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.std::__1::__bucket_list_deallocator.1152" }
%"class.std::__1::__bucket_list_deallocator.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"struct.std::__1::__hash_node_base.1150" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::atomic.1171" = type { %"struct.std::__1::__atomic_base.1172" }
%"struct.std::__1::__atomic_base.1172" = type { %"struct.std::__1::__cxx_atomic_impl.1173" }
%"struct.std::__1::__cxx_atomic_impl.1173" = type { %"struct.std::__1::__cxx_atomic_base_impl.1174" }
%"struct.std::__1::__cxx_atomic_base_impl.1174" = type { %"class.std::__1::vector.1175"* }
%"class.std::__1::vector.1175" = type { %"class.std::__1::__vector_base.1176" }
%"class.std::__1::__vector_base.1176" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1177" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1182" }
%"class.std::__1::vector.1182" = type { %"class.std::__1::__vector_base.1183" }
%"class.std::__1::__vector_base.1183" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204", %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.v8::internal::ZoneAllocator.1206" }
%"class.v8::internal::ZoneAllocator.1206" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1207" }
%"class.std::__1::__tree.1207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1208", %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.v8::internal::ZoneAllocator.1210" }
%"class.v8::internal::ZoneAllocator.1210" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.1215" = type { %"class.std::__1::__tree.1216" }
%"class.std::__1::__tree.1216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1217", %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.v8::internal::ZoneAllocator.1219" }
%"class.v8::internal::ZoneAllocator.1219" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneVector.1223" = type { %"class.std::__1::vector.1224" }
%"class.std::__1::vector.1224" = type { %"class.std::__1::__vector_base.1225" }
%"class.std::__1::__vector_base.1225" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.1226" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227", %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.v8::internal::ZoneAllocator.1229" }
%"class.v8::internal::ZoneAllocator.1229" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.1230" }
%"class.std::__1::deque.1230" = type { %"class.std::__1::__deque_base.1231" }
%"class.std::__1::__deque_base.1231" = type { %"struct.std::__1::__split_buffer.1232", i64, %"class.std::__1::__compressed_pair.1251" }
%"struct.std::__1::__split_buffer.1232" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248", %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.1250", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1250" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.v8::internal::RecyclingZoneAllocator.1253" }
%"class.v8::internal::RecyclingZoneAllocator.1253" = type { %"class.v8::internal::ZoneAllocator.1254", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.1255" = type { %"class.std::__1::deque.1256" }
%"class.std::__1::deque.1256" = type { %"class.std::__1::__deque_base.1257" }
%"class.std::__1::__deque_base.1257" = type { %"struct.std::__1::__split_buffer.1258", i64, %"class.std::__1::__compressed_pair.1264" }
%"struct.std::__1::__split_buffer.1258" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260", %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.v8::internal::RecyclingZoneAllocator.1262" }
%"class.v8::internal::RecyclingZoneAllocator.1262" = type { %"class.v8::internal::ZoneAllocator.1263", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1263" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.v8::internal::RecyclingZoneAllocator.1266" }
%"class.v8::internal::RecyclingZoneAllocator.1266" = type { %"class.v8::internal::ZoneAllocator.1267", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1267" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.1268" = type { %"class.std::__1::vector.1269" }
%"class.std::__1::vector.1269" = type { %"class.std::__1::__vector_base.1270" }
%"class.std::__1::__vector_base.1270" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272", %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"class.v8::internal::ZoneAllocator.1274" }
%"class.v8::internal::ZoneAllocator.1274" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1275" = type { %"class.std::__1::vector.1276" }
%"class.std::__1::vector.1276" = type { %"class.std::__1::__vector_base.1277" }
%"class.std::__1::__vector_base.1277" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.1293" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.1278", %"class.v8::internal::ZoneVector.1286" }
%"class.v8::internal::ZoneVector.1278" = type { %"class.std::__1::vector.1279" }
%"class.std::__1::vector.1279" = type { %"class.std::__1::__vector_base.1280" }
%"class.std::__1::__vector_base.1280" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.1282" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.1281 }
%union.anon.1281 = type { i64 }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283", %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.v8::internal::ZoneAllocator.1285" }
%"class.v8::internal::ZoneAllocator.1285" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1286" = type { %"class.std::__1::vector.1287" }
%"class.std::__1::vector.1287" = type { %"class.std::__1::__vector_base.1288" }
%"class.std::__1::__vector_base.1288" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290", %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.v8::internal::ZoneAllocator.1292" }
%"class.v8::internal::ZoneAllocator.1292" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.781", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294", %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.v8::internal::ZoneAllocator.1296" }
%"class.v8::internal::ZoneAllocator.1296" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Schedule" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.1311", %"class.v8::internal::ZoneVector.1311", %"class.v8::internal::ZoneVector.1311", %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::compiler::SourcePositionTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::SourcePosition", %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector.1297" }
%"class.v8::internal::ZoneVector.1297" = type { %"class.std::__1::vector.1298" }
%"class.std::__1::vector.1298" = type { %"class.std::__1::__vector_base.1299" }
%"class.std::__1::__vector_base.1299" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.1300" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301", %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.v8::internal::ZoneAllocator.1303" }
%"class.v8::internal::ZoneAllocator.1303" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::SourcePositionTable::Decorator" = type opaque
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.1304" }
%"class.v8::internal::ZoneVector.1304" = type { %"class.std::__1::vector.1305" }
%"class.std::__1::vector.1305" = type { %"class.std::__1::__vector_base.1306" }
%"class.std::__1::__vector_base.1306" = type { %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"*, %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308", %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.v8::internal::SourcePosition"* }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.v8::internal::ZoneAllocator.1310" }
%"class.v8::internal::ZoneAllocator.1310" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Frame" = type { i32, i32, i32, %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"* }
%"class.v8::internal::AlignedSlotAllocator" = type { i32, i32, i32, i32 }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::compiler::JSHeapBroker" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::base::Optional.1399", %"class.v8::internal::compiler::RefsMap"*, %"class.v8::internal::RootIndexMap", %"class.v8::internal::ZoneUnorderedSet", i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::unique_ptr.1114", %"class.v8::internal::LocalIsolate"*, %"class.std::__1::unique_ptr.795", i32, [4 x i8], %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::ZoneUnorderedMap.1427", %"class.v8::internal::ZoneUnorderedMap.1450", %"class.v8::internal::ZoneUnorderedMap.1473", %"class.v8::internal::ZoneVector.1496", %"class.v8::internal::ZoneMultimap", i32, [4 x i8] }>
%"class.v8::base::Optional.1399" = type { %"class.v8::base::internal::OptionalBase.1400" }
%"class.v8::base::internal::OptionalBase.1400" = type { %"struct.v8::base::internal::OptionalStorage.1401" }
%"struct.v8::base::internal::OptionalStorage.1401" = type { %"struct.v8::base::internal::OptionalStorageBase.1402" }
%"struct.v8::base::internal::OptionalStorageBase.1402" = type { i8, %union.anon.1403 }
%union.anon.1403 = type { %"class.v8::internal::compiler::NativeContextRef" }
%"class.v8::internal::compiler::NativeContextRef" = type { %"class.v8::internal::compiler::ContextRef" }
%"class.v8::internal::compiler::ContextRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::RefsMap" = type { %"class.v8::base::TemplateHashMapImpl.1404" }
%"class.v8::base::TemplateHashMapImpl.1404" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1406"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1406" = type opaque
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1407" }
%"class.std::__1::unordered_set.1407" = type { %"class.std::__1::__hash_table.1408" }
%"class.std::__1::__hash_table.1408" = type <{ %"class.std::__1::unique_ptr.1409", %"class.std::__1::__compressed_pair.1418", %"class.std::__1::__compressed_pair.1422", %"class.std::__1::__compressed_pair.1424", [4 x i8] }>
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411", %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"struct.std::__1::__hash_node_base.1412"** }
%"struct.std::__1::__hash_node_base.1412" = type { %"struct.std::__1::__hash_node_base.1412"* }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.std::__1::__bucket_list_deallocator.1414" }
%"class.std::__1::__bucket_list_deallocator.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.v8::internal::ZoneAllocator.1417" }
%"class.v8::internal::ZoneAllocator.1417" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419", %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"struct.std::__1::__hash_node_base.1412" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.v8::internal::ZoneAllocator.1421" }
%"class.v8::internal::ZoneAllocator.1421" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1422" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::ZoneUnorderedMap.1427" = type { %"class.std::__1::unordered_map.1428" }
%"class.std::__1::unordered_map.1428" = type { %"class.std::__1::__hash_table.1429" }
%"class.std::__1::__hash_table.1429" = type <{ %"class.std::__1::unique_ptr.1430", %"class.std::__1::__compressed_pair.1439", %"class.std::__1::__compressed_pair.1443", %"class.std::__1::__compressed_pair.1446", [4 x i8] }>
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432", %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"struct.std::__1::__hash_node_base.1433"** }
%"struct.std::__1::__hash_node_base.1433" = type { %"struct.std::__1::__hash_node_base.1433"* }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.std::__1::__bucket_list_deallocator.1435" }
%"class.std::__1::__bucket_list_deallocator.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.v8::internal::ZoneAllocator.1438" }
%"class.v8::internal::ZoneAllocator.1438" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440", %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"struct.std::__1::__hash_node_base.1433" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.v8::internal::ZoneAllocator.1442" }
%"class.v8::internal::ZoneAllocator.1442" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::ZoneUnorderedMap.1450" = type { %"class.std::__1::unordered_map.1451" }
%"class.std::__1::unordered_map.1451" = type { %"class.std::__1::__hash_table.1452" }
%"class.std::__1::__hash_table.1452" = type <{ %"class.std::__1::unique_ptr.1453", %"class.std::__1::__compressed_pair.1462", %"class.std::__1::__compressed_pair.1466", %"class.std::__1::__compressed_pair.1469", [4 x i8] }>
%"class.std::__1::unique_ptr.1453" = type { %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.1455", %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1455" = type { %"struct.std::__1::__hash_node_base.1456"** }
%"struct.std::__1::__hash_node_base.1456" = type { %"struct.std::__1::__hash_node_base.1456"* }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.std::__1::__bucket_list_deallocator.1458" }
%"class.std::__1::__bucket_list_deallocator.1458" = type { %"class.std::__1::__compressed_pair.1459" }
%"class.std::__1::__compressed_pair.1459" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1460" = type { %"class.v8::internal::ZoneAllocator.1461" }
%"class.v8::internal::ZoneAllocator.1461" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463", %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"struct.std::__1::__hash_node_base.1456" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"class.v8::internal::ZoneAllocator.1465" }
%"class.v8::internal::ZoneAllocator.1465" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::ZoneUnorderedMap.1473" = type { %"class.std::__1::unordered_map.1474" }
%"class.std::__1::unordered_map.1474" = type { %"class.std::__1::__hash_table.1475" }
%"class.std::__1::__hash_table.1475" = type <{ %"class.std::__1::unique_ptr.1476", %"class.std::__1::__compressed_pair.1485", %"class.std::__1::__compressed_pair.1489", %"class.std::__1::__compressed_pair.1492", [4 x i8] }>
%"class.std::__1::unique_ptr.1476" = type { %"class.std::__1::__compressed_pair.1477" }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.1478", %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1478" = type { %"struct.std::__1::__hash_node_base.1479"** }
%"struct.std::__1::__hash_node_base.1479" = type { %"struct.std::__1::__hash_node_base.1479"* }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.std::__1::__bucket_list_deallocator.1481" }
%"class.std::__1::__bucket_list_deallocator.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"class.v8::internal::ZoneAllocator.1484" }
%"class.v8::internal::ZoneAllocator.1484" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486", %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"struct.std::__1::__hash_node_base.1479" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.v8::internal::ZoneAllocator.1488" }
%"class.v8::internal::ZoneAllocator.1488" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.v8::internal::ZoneVector.1496" = type { %"class.std::__1::vector.1497" }
%"class.std::__1::vector.1497" = type { %"class.std::__1::__vector_base.1498" }
%"class.std::__1::__vector_base.1498" = type { %"class.v8::internal::compiler::ObjectData"**, %"class.v8::internal::compiler::ObjectData"**, %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500", %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.v8::internal::compiler::ObjectData"** }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"class.v8::internal::ZoneAllocator.1502" }
%"class.v8::internal::ZoneAllocator.1502" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1503" }
%"class.std::__1::__tree.1503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1504", %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"class.v8::internal::ZoneAllocator.1506" }
%"class.v8::internal::ZoneAllocator.1506" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneAllocator.1677" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.std::__1::map.1520" = type { %"class.std::__1::__tree.1521" }
%"class.std::__1::__tree.1521" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1522", %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__tree_node.1686" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1687", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1687" = type { %"struct.std::__1::pair.1688" }
%"struct.std::__1::pair.1688" = type { i32, i32 }
%"class.v8::internal::compiler::FlagsContinuation" = type { i32, i32, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource", %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::InstructionOperand"*, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::ExternalReference" = type { i64 }
%"class.v8::internal::compiler::OperandGenerator" = type { %"class.v8::internal::compiler::InstructionSelector"* }
%"class.v8::internal::compiler::StateObjectDeduplicator" = type { %"class.v8::internal::ZoneVector.1318" }
%"class.v8::internal::ZoneVector.1533" = type { %"class.std::__1::vector.1534" }
%"class.std::__1::vector.1534" = type { %"class.std::__1::__vector_base.1535" }
%"class.std::__1::__vector_base.1535" = type { %"class.v8::internal::MachineType"*, %"class.v8::internal::MachineType"*, %"class.std::__1::__compressed_pair.1536" }
%"class.std::__1::__compressed_pair.1536" = type { %"struct.std::__1::__compressed_pair_elem.1537", %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1537" = type { %"class.v8::internal::MachineType"* }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"class.v8::internal::ZoneAllocator.1539" }
%"class.v8::internal::ZoneAllocator.1539" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::InstructionSelector::FrameStateInput" = type <{ %"class.v8::internal::compiler::Node"*, i32, [4 x i8] }>
%"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder" = type { %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::ZoneVector.1240"*, %"class.v8::internal::compiler::StateObjectDeduplicator"*, i64, i64, i64, i64 }
%"class.v8::internal::compiler::StateValuesAccess::iterator" = type { [8 x %"class.v8::internal::compiler::SparseInputMask::InputIterator"], i32, [4 x i8] }
%"class.v8::internal::compiler::SparseInputMask::InputIterator" = type <{ i32, [4 x i8], %"class.v8::internal::compiler::Node"*, i32, [4 x i8] }>
%"struct.v8::internal::compiler::InstructionSelector::CachedStateValues" = type { %"class.v8::internal::ZoneVector.1240", %"struct.v8::internal::compiler::StateValueList::Slice" }
%"struct.v8::internal::compiler::StateValueList::Slice" = type { %"class.std::__1::__wrap_iter.1541", i64 }
%"class.std::__1::__wrap_iter.1541" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.v8::internal::compiler::CallBuffer" = type { %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::ZoneVector.1544", %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1544" }
%"class.v8::internal::ZoneVector.1544" = type { %"class.std::__1::vector.1545" }
%"class.std::__1::vector.1545" = type { %"class.std::__1::__vector_base.1546" }
%"class.std::__1::__vector_base.1546" = type { %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"*, %"class.std::__1::__compressed_pair.1547" }
%"struct.v8::internal::compiler::PushParameter" = type { %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::LinkageLocation" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548", %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"struct.v8::internal::compiler::PushParameter"* }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.v8::internal::ZoneAllocator.1550" }
%"class.v8::internal::ZoneAllocator.1550" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CaseInfo" = type { i32, i32, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::ZoneVector.1555" = type { %"class.std::__1::vector.1556" }
%"class.std::__1::vector.1556" = type { %"class.std::__1::__vector_base.1557" }
%"class.std::__1::__vector_base.1557" = type { %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"*, %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559", %"struct.std::__1::__compressed_pair_elem.1560" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"struct.v8::internal::compiler::CaseInfo"* }
%"struct.std::__1::__compressed_pair_elem.1560" = type { %"class.v8::internal::ZoneAllocator.1561" }
%"class.v8::internal::ZoneAllocator.1561" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::SwitchInfo" = type { %"class.v8::internal::ZoneVector.1555"*, i32, i32, i64, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::compiler::DeoptimizeParameters" = type { i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource", i8, [7 x i8] }
%"class.v8::internal::compiler::IfValueParameters" = type <{ i32, i32, i8, [3 x i8] }>
%"class.v8::internal::DynamicCheckMapsDescriptor" = type { %"class.v8::internal::StaticCallInterfaceDescriptor" }
%"class.v8::internal::StaticCallInterfaceDescriptor" = type { %"class.v8::internal::CallInterfaceDescriptor" }
%"class.v8::internal::CallInterfaceDescriptor" = type { %"class.v8::internal::CallInterfaceDescriptorData"* }
%"class.v8::internal::compiler::UnparkedScopeIfNeeded" = type { %"class.v8::base::Optional.1573" }
%"class.v8::base::Optional.1573" = type { %"class.v8::base::internal::OptionalBase.1574" }
%"class.v8::base::internal::OptionalBase.1574" = type { %"struct.v8::base::internal::OptionalStorage.1575" }
%"struct.v8::base::internal::OptionalStorage.1575" = type { %"struct.v8::base::internal::OptionalStorageBase.1576" }
%"struct.v8::base::internal::OptionalStorageBase.1576" = type { i8, %union.anon.1577 }
%union.anon.1577 = type { %"class.v8::internal::UnparkedScope" }
%"class.v8::internal::UnparkedScope" = type { %"class.v8::internal::LocalHeap"* }
%class.anon.1640 = type { i8 }
%"class.std::__1::vector.1563" = type { %"class.std::__1::__vector_base.1564" }
%"class.std::__1::__vector_base.1564" = type { %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"*, %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1662" }
%"struct.std::__1::pair.1662" = type { i32, %"class.v8::internal::compiler::Constant" }
%"class.v8::internal::compiler::FrameStateInfo" = type { %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", %"class.v8::internal::compiler::FrameStateFunctionInfo"* }
%"class.v8::internal::compiler::FrameStateFunctionInfo" = type { i32, i32, i32, %"class.v8::internal::Handle.747" }
%"class.v8::internal::Signature.1670" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::compiler::JSToWasmFrameStateDescriptor" = type <{ %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::base::Optional.759", [6 x i8] }>
%"class.v8::internal::compiler::S128ImmediateParameter" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.v8::internal::StringConstantBase" = type { i32, %"class.v8::internal::Handle.1603" }
%"class.v8::internal::Handle.1603" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1374", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1540" }
%"struct.std::__1::pair.1540" = type { %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* }

$_ZNSt3__16vectorINS_4pairIiiEEN2v88internal13ZoneAllocatorIS2_EEE6assignEmRKS2_ = comdat any

$_ZN2v88internal8compiler14StateValueList21PushArgumentsElementsENS0_19CreateArgumentsTypeE = comdat any

$_ZN2v88internal8compiler14StateValueList19PushArgumentsLengthEv = comdat any

$_ZNK2v88internal8compiler4Node7InputAtEi = comdat any

$_ZN2v88internal8compiler14StateValueList13PushDuplicateEm = comdat any

$_ZN2v88internal8compiler14StateValueList9PushPlainENS0_11MachineTypeE = comdat any

$_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler19InstructionSelector13MarkAsSimd128EPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CallBufferC2EPNS0_4ZoneEPKNS1_14CallDescriptorEPNS1_20FrameStateDescriptorE = comdat any

$_ZN2v88internal8compiler21UnparkedScopeIfNeededC2EPNS1_12JSHeapBrokerEb = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEmRS9_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler18InstructionOperandENS2_13ZoneAllocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZN2v88internal4Zone3NewINS0_8compiler19InstructionSelector17CachedStateValuesEJRPS1_RPNS3_14StateValueListERmRPNS0_10ZoneVectorINS3_18InstructionOperandEEESB_EEEPT_DpOT0_ = comdat any

$_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE = comdat any

$_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE = comdat any

$_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIiN2v88internal13ZoneAllocatorIiEEE8__appendEmRKi = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JRS6_S8_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler13PushParameterENS2_13ZoneAllocatorIS4_EEE8__appendEm = comdat any

@.ref.tmp = private constant %"struct.std::__1::pair.1394" { i32 -1, i32 0 }, align 4
@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Unexpected operator #%d:%s @ node #%d\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"unimplemented code\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"Expected Turbofan static assert to hold, but got non-true input:\0A  %s\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"InputCountField::is_valid(input_count)\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"OperatorProperties::HasFrameStateInput(node->op())\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZN2v88internal15CallDescriptors21call_descriptor_data_E = external global [404 x %"class.v8::internal::CallInterfaceDescriptorData"], align 16
@switch.table._ZN2v88internal8compiler19InstructionSelector20InitializeCallBufferEPNS1_4NodeEPNS1_10CallBufferENS_4base5FlagsINS2_14CallBufferFlagEiEEbi = private unnamed_addr constant [14 x i32] [i32 0, i32 0, i32 1, i32 2, i32 3, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3, i32 4], align 4

@_ZN2v88internal8compiler19InstructionSelectorC1EPNS0_4ZoneEmPNS1_7LinkageEPNS1_19InstructionSequenceEPNS1_8ScheduleEPNS1_19SourcePositionTableEPNS1_5FrameENS2_21EnableSwitchJumpTableEPNS0_11TickCounterEPNS1_12JSHeapBrokerEPmSK_NS2_18SourcePositionModeENS2_8FeaturesENS2_16EnableSchedulingENS2_29EnableRootsRelativeAddressingENS0_24PoisoningMitigationLevelENS2_20EnableTraceTurboJsonE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Frame"*, i32, %"class.v8::internal::TickCounter"*, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i64*, i32, i32, i32, i32, i32, i32), void (%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Frame"*, i32, %"class.v8::internal::TickCounter"*, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i64*, i32, i32, i32, i32, i32, i32)* @_ZN2v88internal8compiler19InstructionSelectorC2EPNS0_4ZoneEmPNS1_7LinkageEPNS1_19InstructionSequenceEPNS1_8ScheduleEPNS1_19SourcePositionTableEPNS1_5FrameENS2_21EnableSwitchJumpTableEPNS0_11TickCounterEPNS1_12JSHeapBrokerEPmSK_NS2_18SourcePositionModeENS2_8FeaturesENS2_16EnableSchedulingENS2_29EnableRootsRelativeAddressingENS0_24PoisoningMitigationLevelENS2_20EnableTraceTurboJsonE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelectorC2EPNS0_4ZoneEmPNS1_7LinkageEPNS1_19InstructionSequenceEPNS1_8ScheduleEPNS1_19SourcePositionTableEPNS1_5FrameENS2_21EnableSwitchJumpTableEPNS0_11TickCounterEPNS1_12JSHeapBrokerEPmSK_NS2_18SourcePositionModeENS2_8FeaturesENS2_16EnableSchedulingENS2_29EnableRootsRelativeAddressingENS0_24PoisoningMitigationLevelENS2_20EnableTraceTurboJsonE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Frame"*, i32, %"class.v8::internal::TickCounter"*, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i64*, i32, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %20 = alloca i8, align 1
  %21 = alloca %"class.v8::internal::ZoneAllocator.1677", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.v8::internal::ZoneAllocator.1677", align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::Linkage"* %3, %"class.v8::internal::compiler::Linkage"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::InstructionSequence"* %4, %"class.v8::internal::compiler::InstructionSequence"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::SourcePositionTable"* %6, %"class.v8::internal::compiler::SourcePositionTable"** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 4
  store i32 %13, i32* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 5, i32 0
  store i32 %14, i32* %29, align 4
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 6
  store %"class.v8::internal::compiler::Schedule"* %5, %"class.v8::internal::compiler::Schedule"** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8
  %33 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.1330"* %34 to i64*
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false)
  store i64 %33, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9
  %38 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 1
  %39 = bitcast %"class.v8::internal::Zone"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1
  %42 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %41 to i64*
  %43 = bitcast %"class.v8::internal::ZoneVector.1240"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #12
  store i64 %40, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10
  %45 = load i64, i64* %39, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %46 to i64*
  %48 = bitcast %"class.v8::internal::ZoneVector.1240"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #12
  store i64 %45, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 11
  %50 = load i64, i64* %39, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %51 to i64*
  %53 = bitcast %"class.v8::internal::ZoneVector.1240"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #12
  store i64 %50, i64* %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22)
  store i8 0, i8* %22, align 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0
  %55 = bitcast %"class.v8::internal::ZoneAllocator.1677"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.1677", %"class.v8::internal::ZoneAllocator.1677"* %23, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %56, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.1332"* %54, i64 %2, i8* nonnull dereferenceable(1) %22, %"class.v8::internal::ZoneAllocator.1677"* nonnull dereferenceable(8) %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20)
  store i8 0, i8* %20, align 1
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0
  %58 = bitcast %"class.v8::internal::ZoneAllocator.1677"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.1677", %"class.v8::internal::ZoneAllocator.1677"* %21, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %59, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.1332"* %57, i64 %2, i8* nonnull dereferenceable(1) %20, %"class.v8::internal::ZoneAllocator.1677"* nonnull dereferenceable(8) %21) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20)
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 2, i32 1
  %62 = bitcast %"struct.std::__1::__compressed_pair_elem.1197"* %61 to i64*
  %63 = bitcast %"class.v8::internal::ZoneVector.1193"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %62, align 8
  %64 = icmp eq i64 %2, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %19
  %66 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 2, i32 1
  %68 = bitcast %"struct.std::__1::__compressed_pair_elem.1197"* %67 to i64*
  %69 = bitcast %"class.v8::internal::ZoneVector.1193"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %68, align 8
  br label %120

70:                                               ; preds = %19
  %71 = icmp ugt i64 %2, 536870911
  br i1 %71, label %72, label %74

72:                                               ; preds = %70
  %73 = bitcast %"class.v8::internal::ZoneVector.1193"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #13
  unreachable

74:                                               ; preds = %70
  %75 = shl i64 %2, 2
  %76 = add nuw nsw i64 %75, 7
  %77 = and i64 %76, -8
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %81, %79
  %83 = icmp ugt i64 %77, %82
  br i1 %83, label %84, label %86, !prof !2

84:                                               ; preds = %74
  %85 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %77) #12
  br label %88

86:                                               ; preds = %74
  %87 = add i64 %79, %77
  store i64 %87, i64* %78, align 8
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi i64 [ %85, %84 ], [ %79, %86 ]
  %90 = inttoptr i64 %89 to i32*
  %91 = inttoptr i64 %89 to i8*
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.v8::internal::ZoneVector.1193", %"class.v8::internal::ZoneVector.1193"* %60, i64 0, i32 0, i32 0, i32 0
  store i32* %90, i32** %93, align 8
  %94 = getelementptr inbounds i32, i32* %90, i64 %2
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %94, i32** %95, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 %75, i1 false)
  %96 = bitcast i32** %92 to i64*
  %97 = ptrtoint i32* %94 to i64
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 2, i32 1
  %100 = bitcast %"struct.std::__1::__compressed_pair_elem.1197"* %99 to i64*
  %101 = bitcast %"class.v8::internal::ZoneVector.1193"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %100, align 8
  %102 = load i64, i64* %78, align 8
  %103 = load i64, i64* %80, align 8
  %104 = sub i64 %103, %102
  %105 = icmp ugt i64 %77, %104
  br i1 %105, label %106, label %108, !prof !2

106:                                              ; preds = %88
  %107 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %77) #12
  br label %110

108:                                              ; preds = %88
  %109 = add i64 %102, %77
  store i64 %109, i64* %78, align 8
  br label %110

110:                                              ; preds = %108, %106
  %111 = phi i64 [ %107, %106 ], [ %102, %108 ]
  %112 = inttoptr i64 %111 to i32*
  %113 = inttoptr i64 %111 to i8*
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.v8::internal::ZoneVector.1193", %"class.v8::internal::ZoneVector.1193"* %98, i64 0, i32 0, i32 0, i32 0
  store i32* %112, i32** %115, align 8
  %116 = getelementptr inbounds i32, i32* %112, i64 %2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %116, i32** %117, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 -1, i64 %75, i1 false)
  %118 = bitcast i32** %114 to i64*
  %119 = ptrtoint i32* %116 to i64
  store i64 %119, i64* %118, align 8
  br label %120

120:                                              ; preds = %65, %110
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16
  %122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 2, i32 1
  %123 = bitcast %"struct.std::__1::__compressed_pair_elem.1197"* %122 to i64*
  %124 = bitcast %"class.v8::internal::ZoneVector.1193"* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  store %"class.v8::internal::compiler::InstructionScheduler"* null, %"class.v8::internal::compiler::InstructionScheduler"** %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 18
  store i32 %15, i32* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 19
  store i32 %16, i32* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 20
  store i32 %8, i32* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22
  %130 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::ZoneUnorderedMap"* %129, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %132 = bitcast %"struct.std::__1::__compressed_pair_elem.1378"* %131 to i64*
  %133 = bitcast %"class.v8::internal::ZoneUnorderedMap"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #12
  store i64 %33, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 1, i32 1
  %136 = bitcast %"struct.std::__1::__compressed_pair_elem.1382"* %135 to i64*
  store i64 %33, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 3
  %139 = bitcast %"class.std::__1::__compressed_pair.1387"* %138 to i32*
  store i32 1065353216, i32* %139, align 4
  %140 = call i64 @_ZNSt3__112__next_primeEm(i64 100) #12
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp ugt i64 %140, %142
  br i1 %143, label %144, label %145

144:                                              ; preds = %120
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1370"* %130, i64 %140) #12
  br label %174

145:                                              ; preds = %120
  %146 = icmp ult i64 %140, %142
  br i1 %146, label %147, label %174

147:                                              ; preds = %145
  %148 = icmp ugt i64 %142, 2
  %149 = call i64 @llvm.ctpop.i64(i64 %142) #12, !range !3
  %150 = icmp ult i64 %149, 2
  %151 = and i1 %148, %150
  %152 = load i64, i64* %137, align 8
  %153 = uitofp i64 %152 to float
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0, i32 3, i32 0, i32 0
  %155 = load float, float* %154, align 4
  %156 = fdiv float %153, %155
  %157 = call float @llvm.ceil.f32(float %156) #12
  %158 = fptoui float %157 to i64
  br i1 %151, label %159, label %166

159:                                              ; preds = %147
  %160 = icmp ult i64 %158, 2
  br i1 %160, label %168, label %161

161:                                              ; preds = %159
  %162 = add i64 %158, -1
  %163 = call i64 @llvm.ctlz.i64(i64 %162, i1 true) #12, !range !3
  %164 = sub nuw nsw i64 64, %163
  %165 = shl i64 1, %164
  br label %168

166:                                              ; preds = %147
  %167 = call i64 @_ZNSt3__112__next_primeEm(i64 %158) #12
  br label %168

168:                                              ; preds = %166, %161, %159
  %169 = phi i64 [ %167, %166 ], [ %165, %161 ], [ %158, %159 ]
  %170 = icmp ult i64 %140, %169
  %171 = select i1 %170, i64 %169, i64 %140
  %172 = icmp ult i64 %171, %142
  br i1 %172, label %173, label %174

173:                                              ; preds = %168
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1370"* %130, i64 %171) #12
  br label %174

174:                                              ; preds = %144, %145, %168, %173
  %175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  store i32 %17, i32* %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 24
  store %"class.v8::internal::compiler::Frame"* %7, %"class.v8::internal::compiler::Frame"** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 25
  store i8 0, i8* %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 26
  %179 = load i64, i64* %39, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 26, i32 0, i32 0, i32 2, i32 1
  %181 = bitcast %"struct.std::__1::__compressed_pair_elem.1397"* %180 to i64*
  %182 = bitcast %"class.v8::internal::ZoneVector.1391"* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 24, i1 false) #12
  store i64 %179, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 27
  store i32 %18, i32* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 28
  store %"class.v8::internal::TickCounter"* %9, %"class.v8::internal::TickCounter"** %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 29
  store %"class.v8::internal::compiler::JSHeapBroker"* %10, %"class.v8::internal::compiler::JSHeapBroker"** %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 30
  store i64* %11, i64** %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 31
  store i64* %12, i64** %187, align 8
  %188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 32
  %189 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 32, i32 0, i32 0, i32 2, i32 1
  %190 = bitcast %"struct.std::__1::__compressed_pair_elem.1517"* %189 to i64*
  %191 = bitcast %"class.v8::internal::ZoneVector.1512"* %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %190, align 8
  br i1 %64, label %214, label %192

192:                                              ; preds = %174
  %193 = add nuw nsw i64 %2, 7
  %194 = and i64 %193, -8
  %195 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %198 = load i64, i64* %197, align 8
  %199 = sub i64 %198, %196
  %200 = icmp ugt i64 %194, %199
  br i1 %200, label %201, label %203, !prof !2

201:                                              ; preds = %192
  %202 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %194) #12
  br label %205

203:                                              ; preds = %192
  %204 = add i64 %196, %194
  store i64 %204, i64* %195, align 8
  br label %205

205:                                              ; preds = %203, %201
  %206 = phi i64 [ %202, %201 ], [ %196, %203 ]
  %207 = inttoptr i64 %206 to i8*
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 32, i32 0, i32 0, i32 1
  %209 = getelementptr inbounds %"class.v8::internal::ZoneVector.1512", %"class.v8::internal::ZoneVector.1512"* %188, i64 0, i32 0, i32 0, i32 0
  store i8* %207, i8** %209, align 8
  %210 = getelementptr inbounds i8, i8* %207, i64 %2
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 32, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %210, i8** %211, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %207, i8 0, i64 %2, i1 false) #12
  %212 = bitcast i8** %208 to i64*
  %213 = ptrtoint i8* %210 to i64
  store i64 %213, i64* %212, align 8
  br label %214

214:                                              ; preds = %174, %205
  %215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %216 = bitcast %"class.v8::internal::compiler::Instruction"*** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::internal::ZoneVector.1325"* %32 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %217, %219
  %221 = ashr exact i64 %220, 3
  %222 = icmp ult i64 %221, %2
  br i1 %222, label %223, label %428

223:                                              ; preds = %214
  %224 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %225 = bitcast %"class.v8::internal::compiler::Instruction"*** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %226, %219
  %228 = ashr exact i64 %227, 3
  %229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %230 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %229, align 8
  %231 = shl i64 %2, 3
  %232 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %230, i64 0, i32 2
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %230, i64 0, i32 3
  %235 = load i64, i64* %234, align 8
  %236 = sub i64 %235, %233
  %237 = icmp ugt i64 %231, %236
  br i1 %237, label %238, label %240, !prof !2

238:                                              ; preds = %223
  %239 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %230, i64 %231) #12
  br label %242

240:                                              ; preds = %223
  %241 = add i64 %233, %231
  store i64 %241, i64* %232, align 8
  br label %242

242:                                              ; preds = %240, %238
  %243 = phi i64 [ %239, %238 ], [ %233, %240 ]
  %244 = inttoptr i64 %243 to %"class.v8::internal::compiler::Instruction"**
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %244, i64 %228
  %246 = ptrtoint %"class.v8::internal::compiler::Instruction"** %245 to i64
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %244, i64 %2
  %248 = ptrtoint %"class.v8::internal::compiler::Instruction"** %247 to i64
  %249 = getelementptr inbounds %"class.v8::internal::ZoneVector.1325", %"class.v8::internal::ZoneVector.1325"* %32, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %249, align 8
  %251 = ptrtoint %"class.v8::internal::compiler::Instruction"** %250 to i64
  %252 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %224, align 8
  %253 = icmp eq %"class.v8::internal::compiler::Instruction"** %252, %250
  br i1 %253, label %426, label %254

254:                                              ; preds = %242
  %255 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 -1
  %256 = ptrtoint %"class.v8::internal::compiler::Instruction"** %255 to i64
  %257 = sub i64 %256, %251
  %258 = lshr i64 %257, 3
  %259 = add nuw nsw i64 %258, 1
  %260 = icmp ult i64 %259, 4
  br i1 %260, label %353, label %261

261:                                              ; preds = %254
  %262 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 -1
  %263 = ptrtoint %"class.v8::internal::compiler::Instruction"** %262 to i64
  %264 = sub i64 %263, %251
  %265 = lshr i64 %264, 3
  %266 = xor i64 %265, -1
  %267 = add nsw i64 %228, %266
  %268 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %244, i64 %267
  %269 = xor i64 %265, -1
  %270 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 %269
  %271 = icmp ult %"class.v8::internal::compiler::Instruction"** %268, %252
  %272 = icmp ult %"class.v8::internal::compiler::Instruction"** %270, %245
  %273 = and i1 %271, %272
  br i1 %273, label %353, label %274

274:                                              ; preds = %261
  %275 = and i64 %259, 4611686018427387900
  %276 = sub nsw i64 0, %275
  %277 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %245, i64 %276
  %278 = sub nsw i64 0, %275
  %279 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 %278
  %280 = add nsw i64 %275, -4
  %281 = lshr exact i64 %280, 2
  %282 = add nuw nsw i64 %281, 1
  %283 = and i64 %282, 1
  %284 = icmp eq i64 %280, 0
  br i1 %284, label %329, label %285

285:                                              ; preds = %274
  %286 = sub nuw nsw i64 %282, %283
  %287 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %245, i64 -1
  %288 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 -1
  %289 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %245, i64 -1
  %290 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 -1
  br label %291

291:                                              ; preds = %291, %285
  %292 = phi i64 [ 0, %285 ], [ %326, %291 ]
  %293 = phi i64 [ %286, %285 ], [ %327, %291 ]
  %294 = sub i64 0, %292
  %295 = sub i64 0, %292
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %287, i64 %294
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %288, i64 %295
  %298 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %297, i64 -1
  %299 = bitcast %"class.v8::internal::compiler::Instruction"** %298 to <2 x i64>*
  %300 = load <2 x i64>, <2 x i64>* %299, align 8, !alias.scope !4
  %301 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %297, i64 -2
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %301, i64 -1
  %303 = bitcast %"class.v8::internal::compiler::Instruction"** %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !4
  %305 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %296, i64 -1
  %306 = bitcast %"class.v8::internal::compiler::Instruction"** %305 to <2 x i64>*
  store <2 x i64> %300, <2 x i64>* %306, align 8, !alias.scope !7, !noalias !4
  %307 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %296, i64 -2
  %308 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %307, i64 -1
  %309 = bitcast %"class.v8::internal::compiler::Instruction"** %308 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %309, align 8, !alias.scope !7, !noalias !4
  %310 = sub nuw nsw i64 -4, %292
  %311 = sub nuw nsw i64 -4, %292
  %312 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %289, i64 %310
  %313 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %290, i64 %311
  %314 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %313, i64 -1
  %315 = bitcast %"class.v8::internal::compiler::Instruction"** %314 to <2 x i64>*
  %316 = load <2 x i64>, <2 x i64>* %315, align 8, !alias.scope !4
  %317 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %313, i64 -2
  %318 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %317, i64 -1
  %319 = bitcast %"class.v8::internal::compiler::Instruction"** %318 to <2 x i64>*
  %320 = load <2 x i64>, <2 x i64>* %319, align 8, !alias.scope !4
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %312, i64 -1
  %322 = bitcast %"class.v8::internal::compiler::Instruction"** %321 to <2 x i64>*
  store <2 x i64> %316, <2 x i64>* %322, align 8, !alias.scope !7, !noalias !4
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %312, i64 -2
  %324 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %323, i64 -1
  %325 = bitcast %"class.v8::internal::compiler::Instruction"** %324 to <2 x i64>*
  store <2 x i64> %320, <2 x i64>* %325, align 8, !alias.scope !7, !noalias !4
  %326 = add i64 %292, 8
  %327 = add i64 %293, -2
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %291, !llvm.loop !9

329:                                              ; preds = %291, %274
  %330 = phi i64 [ 0, %274 ], [ %326, %291 ]
  %331 = icmp eq i64 %283, 0
  br i1 %331, label %351, label %332

332:                                              ; preds = %329
  %333 = sub i64 0, %330
  %334 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %245, i64 -1
  %335 = sub i64 0, %330
  %336 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %252, i64 -1
  %337 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %334, i64 %333
  %338 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %336, i64 %335
  %339 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %338, i64 -1
  %340 = bitcast %"class.v8::internal::compiler::Instruction"** %339 to <2 x i64>*
  %341 = load <2 x i64>, <2 x i64>* %340, align 8, !alias.scope !4
  %342 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %338, i64 -2
  %343 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %342, i64 -1
  %344 = bitcast %"class.v8::internal::compiler::Instruction"** %343 to <2 x i64>*
  %345 = load <2 x i64>, <2 x i64>* %344, align 8, !alias.scope !4
  %346 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %337, i64 -1
  %347 = bitcast %"class.v8::internal::compiler::Instruction"** %346 to <2 x i64>*
  store <2 x i64> %341, <2 x i64>* %347, align 8, !alias.scope !7, !noalias !4
  %348 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %337, i64 -2
  %349 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %348, i64 -1
  %350 = bitcast %"class.v8::internal::compiler::Instruction"** %349 to <2 x i64>*
  store <2 x i64> %345, <2 x i64>* %350, align 8, !alias.scope !7, !noalias !4
  br label %351

351:                                              ; preds = %329, %332
  %352 = icmp eq i64 %259, %275
  br i1 %352, label %423, label %353

353:                                              ; preds = %351, %261, %254
  %354 = phi %"class.v8::internal::compiler::Instruction"** [ %245, %261 ], [ %245, %254 ], [ %277, %351 ]
  %355 = phi %"class.v8::internal::compiler::Instruction"** [ %252, %261 ], [ %252, %254 ], [ %279, %351 ]
  %356 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %355, i64 -1
  %357 = ptrtoint %"class.v8::internal::compiler::Instruction"** %356 to i64
  %358 = sub i64 %357, %251
  %359 = lshr i64 %358, 3
  %360 = add nuw nsw i64 %359, 1
  %361 = and i64 %360, 7
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %374, label %363

363:                                              ; preds = %353, %363
  %364 = phi %"class.v8::internal::compiler::Instruction"** [ %367, %363 ], [ %354, %353 ]
  %365 = phi %"class.v8::internal::compiler::Instruction"** [ %368, %363 ], [ %355, %353 ]
  %366 = phi i64 [ %372, %363 ], [ %361, %353 ]
  %367 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %364, i64 -1
  %368 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %365, i64 -1
  %369 = bitcast %"class.v8::internal::compiler::Instruction"** %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast %"class.v8::internal::compiler::Instruction"** %367 to i64*
  store i64 %370, i64* %371, align 8
  %372 = add i64 %366, -1
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %363, !llvm.loop !11

374:                                              ; preds = %363, %353
  %375 = phi %"class.v8::internal::compiler::Instruction"** [ undef, %353 ], [ %367, %363 ]
  %376 = phi %"class.v8::internal::compiler::Instruction"** [ %354, %353 ], [ %367, %363 ]
  %377 = phi %"class.v8::internal::compiler::Instruction"** [ %355, %353 ], [ %368, %363 ]
  %378 = icmp ult i64 %358, 56
  br i1 %378, label %423, label %379

379:                                              ; preds = %374, %379
  %380 = phi %"class.v8::internal::compiler::Instruction"** [ %417, %379 ], [ %376, %374 ]
  %381 = phi %"class.v8::internal::compiler::Instruction"** [ %418, %379 ], [ %377, %374 ]
  %382 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -1
  %383 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -1
  %384 = bitcast %"class.v8::internal::compiler::Instruction"** %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = bitcast %"class.v8::internal::compiler::Instruction"** %382 to i64*
  store i64 %385, i64* %386, align 8
  %387 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -2
  %388 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -2
  %389 = bitcast %"class.v8::internal::compiler::Instruction"** %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = bitcast %"class.v8::internal::compiler::Instruction"** %387 to i64*
  store i64 %390, i64* %391, align 8
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -3
  %393 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -3
  %394 = bitcast %"class.v8::internal::compiler::Instruction"** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = bitcast %"class.v8::internal::compiler::Instruction"** %392 to i64*
  store i64 %395, i64* %396, align 8
  %397 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -4
  %398 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -4
  %399 = bitcast %"class.v8::internal::compiler::Instruction"** %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = bitcast %"class.v8::internal::compiler::Instruction"** %397 to i64*
  store i64 %400, i64* %401, align 8
  %402 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -5
  %403 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -5
  %404 = bitcast %"class.v8::internal::compiler::Instruction"** %403 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = bitcast %"class.v8::internal::compiler::Instruction"** %402 to i64*
  store i64 %405, i64* %406, align 8
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -6
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -6
  %409 = bitcast %"class.v8::internal::compiler::Instruction"** %408 to i64*
  %410 = load i64, i64* %409, align 8
  %411 = bitcast %"class.v8::internal::compiler::Instruction"** %407 to i64*
  store i64 %410, i64* %411, align 8
  %412 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -7
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -7
  %414 = bitcast %"class.v8::internal::compiler::Instruction"** %413 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %"class.v8::internal::compiler::Instruction"** %412 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -8
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %381, i64 -8
  %419 = bitcast %"class.v8::internal::compiler::Instruction"** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %"class.v8::internal::compiler::Instruction"** %417 to i64*
  store i64 %420, i64* %421, align 8
  %422 = icmp eq %"class.v8::internal::compiler::Instruction"** %418, %250
  br i1 %422, label %423, label %379, !llvm.loop !13

423:                                              ; preds = %374, %379, %351
  %424 = phi %"class.v8::internal::compiler::Instruction"** [ %277, %351 ], [ %375, %374 ], [ %417, %379 ]
  %425 = ptrtoint %"class.v8::internal::compiler::Instruction"** %424 to i64
  br label %426

426:                                              ; preds = %423, %242
  %427 = phi i64 [ %425, %423 ], [ %246, %242 ]
  store i64 %427, i64* %218, align 8
  store i64 %246, i64* %225, align 8
  store i64 %248, i64* %216, align 8
  br label %428

428:                                              ; preds = %214, %426
  %429 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %430 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.v8::internal::ZoneVector.1240"* %37 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = sub i64 %431, %433
  %435 = ashr exact i64 %434, 3
  %436 = icmp ult i64 %435, 5
  br i1 %436, label %437, label %624

437:                                              ; preds = %428
  %438 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %439 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = sub i64 %440, %433
  %442 = ashr exact i64 %441, 3
  %443 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %444 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %443, align 8
  %445 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %444, i64 0, i32 2
  %446 = load i64, i64* %445, align 8
  %447 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %444, i64 0, i32 3
  %448 = load i64, i64* %447, align 8
  %449 = sub i64 %448, %446
  %450 = icmp ult i64 %449, 40
  br i1 %450, label %451, label %453, !prof !2

451:                                              ; preds = %437
  %452 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %444, i64 40) #12
  br label %455

453:                                              ; preds = %437
  %454 = add i64 %446, 40
  store i64 %454, i64* %445, align 8
  br label %455

455:                                              ; preds = %453, %451
  %456 = phi i64 [ %452, %451 ], [ %446, %453 ]
  %457 = inttoptr i64 %456 to %"class.v8::internal::compiler::InstructionOperand"*
  %458 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %457, i64 %442
  %459 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %458 to i64
  %460 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %457, i64 5
  %461 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %460 to i64
  %462 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %37, i64 0, i32 0, i32 0, i32 0
  %463 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %462, align 8
  %464 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %463 to i64
  %465 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %438, align 8
  %466 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %465, %463
  br i1 %466, label %622, label %467

467:                                              ; preds = %455
  %468 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -1, i32 0
  %469 = ptrtoint i64* %468 to i64
  %470 = sub i64 %469, %464
  %471 = lshr i64 %470, 3
  %472 = add nuw nsw i64 %471, 1
  %473 = icmp ult i64 %472, 4
  br i1 %473, label %563, label %474

474:                                              ; preds = %467
  %475 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -1, i32 0
  %476 = ptrtoint i64* %475 to i64
  %477 = sub i64 %476, %464
  %478 = lshr i64 %477, 3
  %479 = xor i64 %478, -1
  %480 = add nsw i64 %442, %479
  %481 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %457, i64 %480
  %482 = xor i64 %478, -1
  %483 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 %482
  %484 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %481, %465
  %485 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %483, %458
  %486 = and i1 %484, %485
  br i1 %486, label %563, label %487

487:                                              ; preds = %474
  %488 = and i64 %472, 4611686018427387900
  %489 = sub nsw i64 0, %488
  %490 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %458, i64 %489
  %491 = sub nsw i64 0, %488
  %492 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 %491
  %493 = add nsw i64 %488, -4
  %494 = lshr exact i64 %493, 2
  %495 = add nuw nsw i64 %494, 1
  %496 = and i64 %495, 1
  %497 = icmp eq i64 %493, 0
  br i1 %497, label %540, label %498

498:                                              ; preds = %487
  %499 = sub nuw nsw i64 %495, %496
  %500 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -1
  %501 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -1
  br label %502

502:                                              ; preds = %502, %498
  %503 = phi i64 [ 0, %498 ], [ %537, %502 ]
  %504 = phi i64 [ %499, %498 ], [ %538, %502 ]
  %505 = sub i64 0, %503
  %506 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %458, i64 %505
  %507 = sub i64 0, %503
  %508 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %500, i64 %507
  %509 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %508, i64 0, i32 0
  %510 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %506, i64 -1, i32 0
  %511 = getelementptr inbounds i64, i64* %509, i64 -1
  %512 = bitcast i64* %511 to <2 x i64>*
  %513 = load <2 x i64>, <2 x i64>* %512, align 8, !alias.scope !14
  %514 = getelementptr inbounds i64, i64* %509, i64 -3
  %515 = bitcast i64* %514 to <2 x i64>*
  %516 = load <2 x i64>, <2 x i64>* %515, align 8, !alias.scope !14
  %517 = getelementptr inbounds i64, i64* %510, i64 -1
  %518 = bitcast i64* %517 to <2 x i64>*
  store <2 x i64> %513, <2 x i64>* %518, align 8, !alias.scope !17, !noalias !14
  %519 = getelementptr inbounds i64, i64* %510, i64 -3
  %520 = bitcast i64* %519 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %520, align 8, !alias.scope !17, !noalias !14
  %521 = sub nuw nsw i64 -4, %503
  %522 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %458, i64 %521
  %523 = sub nuw nsw i64 -4, %503
  %524 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %501, i64 %523
  %525 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %524, i64 0, i32 0
  %526 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %522, i64 -1, i32 0
  %527 = getelementptr inbounds i64, i64* %525, i64 -1
  %528 = bitcast i64* %527 to <2 x i64>*
  %529 = load <2 x i64>, <2 x i64>* %528, align 8, !alias.scope !14
  %530 = getelementptr inbounds i64, i64* %525, i64 -3
  %531 = bitcast i64* %530 to <2 x i64>*
  %532 = load <2 x i64>, <2 x i64>* %531, align 8, !alias.scope !14
  %533 = getelementptr inbounds i64, i64* %526, i64 -1
  %534 = bitcast i64* %533 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %534, align 8, !alias.scope !17, !noalias !14
  %535 = getelementptr inbounds i64, i64* %526, i64 -3
  %536 = bitcast i64* %535 to <2 x i64>*
  store <2 x i64> %532, <2 x i64>* %536, align 8, !alias.scope !17, !noalias !14
  %537 = add i64 %503, 8
  %538 = add i64 %504, -2
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %502, !llvm.loop !19

540:                                              ; preds = %502, %487
  %541 = phi i64 [ 0, %487 ], [ %537, %502 ]
  %542 = icmp eq i64 %496, 0
  br i1 %542, label %561, label %543

543:                                              ; preds = %540
  %544 = sub i64 0, %541
  %545 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %458, i64 %544
  %546 = sub i64 0, %541
  %547 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -1
  %548 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %547, i64 %546
  %549 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %548, i64 0, i32 0
  %550 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %545, i64 -1, i32 0
  %551 = getelementptr inbounds i64, i64* %549, i64 -1
  %552 = bitcast i64* %551 to <2 x i64>*
  %553 = load <2 x i64>, <2 x i64>* %552, align 8, !alias.scope !14
  %554 = getelementptr inbounds i64, i64* %549, i64 -3
  %555 = bitcast i64* %554 to <2 x i64>*
  %556 = load <2 x i64>, <2 x i64>* %555, align 8, !alias.scope !14
  %557 = getelementptr inbounds i64, i64* %550, i64 -1
  %558 = bitcast i64* %557 to <2 x i64>*
  store <2 x i64> %553, <2 x i64>* %558, align 8, !alias.scope !17, !noalias !14
  %559 = getelementptr inbounds i64, i64* %550, i64 -3
  %560 = bitcast i64* %559 to <2 x i64>*
  store <2 x i64> %556, <2 x i64>* %560, align 8, !alias.scope !17, !noalias !14
  br label %561

561:                                              ; preds = %540, %543
  %562 = icmp eq i64 %472, %488
  br i1 %562, label %619, label %563

563:                                              ; preds = %561, %474, %467
  %564 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %458, %474 ], [ %458, %467 ], [ %490, %561 ]
  %565 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %465, %474 ], [ %465, %467 ], [ %492, %561 ]
  %566 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %565, i64 -1, i32 0
  %567 = ptrtoint i64* %566 to i64
  %568 = sub i64 %567, %464
  %569 = lshr i64 %568, 3
  %570 = add nuw nsw i64 %569, 1
  %571 = and i64 %570, 7
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %584, label %573

573:                                              ; preds = %563, %573
  %574 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %581, %573 ], [ %564, %563 ]
  %575 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %577, %573 ], [ %565, %563 ]
  %576 = phi i64 [ %582, %573 ], [ %571, %563 ]
  %577 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %575, i64 -1
  %578 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %577, i64 0, i32 0
  %579 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %574, i64 -1, i32 0
  %580 = load i64, i64* %578, align 8
  store i64 %580, i64* %579, align 8
  %581 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %574, i64 -1
  %582 = add i64 %576, -1
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %584, label %573, !llvm.loop !20

584:                                              ; preds = %573, %563
  %585 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %563 ], [ %581, %573 ]
  %586 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %564, %563 ], [ %581, %573 ]
  %587 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %565, %563 ], [ %577, %573 ]
  %588 = icmp ult i64 %568, 56
  br i1 %588, label %619, label %589

589:                                              ; preds = %584, %589
  %590 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %617, %589 ], [ %586, %584 ]
  %591 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %613, %589 ], [ %587, %584 ]
  %592 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -1, i32 0
  %593 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -1, i32 0
  %594 = load i64, i64* %592, align 8
  store i64 %594, i64* %593, align 8
  %595 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -2, i32 0
  %596 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -2, i32 0
  %597 = load i64, i64* %595, align 8
  store i64 %597, i64* %596, align 8
  %598 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -3, i32 0
  %599 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -3, i32 0
  %600 = load i64, i64* %598, align 8
  store i64 %600, i64* %599, align 8
  %601 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -4, i32 0
  %602 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -4, i32 0
  %603 = load i64, i64* %601, align 8
  store i64 %603, i64* %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -5, i32 0
  %605 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -5, i32 0
  %606 = load i64, i64* %604, align 8
  store i64 %606, i64* %605, align 8
  %607 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -6, i32 0
  %608 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -6, i32 0
  %609 = load i64, i64* %607, align 8
  store i64 %609, i64* %608, align 8
  %610 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -7, i32 0
  %611 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -7, i32 0
  %612 = load i64, i64* %610, align 8
  store i64 %612, i64* %611, align 8
  %613 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %591, i64 -8
  %614 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 0, i32 0
  %615 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -8, i32 0
  %616 = load i64, i64* %614, align 8
  store i64 %616, i64* %615, align 8
  %617 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %590, i64 -8
  %618 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %613, %463
  br i1 %618, label %619, label %589, !llvm.loop !21

619:                                              ; preds = %584, %589, %561
  %620 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %490, %561 ], [ %585, %584 ], [ %617, %589 ]
  %621 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %620 to i64
  br label %622

622:                                              ; preds = %619, %455
  %623 = phi i64 [ %621, %619 ], [ %459, %455 ]
  store i64 %623, i64* %432, align 8
  store i64 %459, i64* %439, align 8
  store i64 %461, i64* %430, align 8
  br label %624

624:                                              ; preds = %428, %622
  %625 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %626 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %625 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = bitcast %"class.v8::internal::ZoneVector.1240"* %44 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = sub i64 %627, %629
  %631 = ashr exact i64 %630, 3
  %632 = icmp ult i64 %631, 2
  br i1 %632, label %633, label %820

633:                                              ; preds = %624
  %634 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %635 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = sub i64 %636, %629
  %638 = ashr exact i64 %637, 3
  %639 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %640 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %639, align 8
  %641 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %640, i64 0, i32 2
  %642 = load i64, i64* %641, align 8
  %643 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %640, i64 0, i32 3
  %644 = load i64, i64* %643, align 8
  %645 = sub i64 %644, %642
  %646 = icmp ult i64 %645, 16
  br i1 %646, label %647, label %649, !prof !2

647:                                              ; preds = %633
  %648 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %640, i64 16) #12
  br label %651

649:                                              ; preds = %633
  %650 = add i64 %642, 16
  store i64 %650, i64* %641, align 8
  br label %651

651:                                              ; preds = %649, %647
  %652 = phi i64 [ %648, %647 ], [ %642, %649 ]
  %653 = inttoptr i64 %652 to %"class.v8::internal::compiler::InstructionOperand"*
  %654 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %653, i64 %638
  %655 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %654 to i64
  %656 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %653, i64 2
  %657 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %656 to i64
  %658 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %44, i64 0, i32 0, i32 0, i32 0
  %659 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %658, align 8
  %660 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %659 to i64
  %661 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %634, align 8
  %662 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %661, %659
  br i1 %662, label %818, label %663

663:                                              ; preds = %651
  %664 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 -1, i32 0
  %665 = ptrtoint i64* %664 to i64
  %666 = sub i64 %665, %660
  %667 = lshr i64 %666, 3
  %668 = add nuw nsw i64 %667, 1
  %669 = icmp ult i64 %668, 4
  br i1 %669, label %759, label %670

670:                                              ; preds = %663
  %671 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 -1, i32 0
  %672 = ptrtoint i64* %671 to i64
  %673 = sub i64 %672, %660
  %674 = lshr i64 %673, 3
  %675 = xor i64 %674, -1
  %676 = add nsw i64 %638, %675
  %677 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %653, i64 %676
  %678 = xor i64 %674, -1
  %679 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 %678
  %680 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %677, %661
  %681 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %679, %654
  %682 = and i1 %680, %681
  br i1 %682, label %759, label %683

683:                                              ; preds = %670
  %684 = and i64 %668, 4611686018427387900
  %685 = sub nsw i64 0, %684
  %686 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %654, i64 %685
  %687 = sub nsw i64 0, %684
  %688 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 %687
  %689 = add nsw i64 %684, -4
  %690 = lshr exact i64 %689, 2
  %691 = add nuw nsw i64 %690, 1
  %692 = and i64 %691, 1
  %693 = icmp eq i64 %689, 0
  br i1 %693, label %738, label %694

694:                                              ; preds = %683
  %695 = sub nuw nsw i64 %691, %692
  %696 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 -1
  %697 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 -1
  br label %698

698:                                              ; preds = %698, %694
  %699 = phi i64 [ 0, %694 ], [ %733, %698 ]
  %700 = phi i64 [ %695, %694 ], [ %734, %698 ]
  %701 = sub i64 0, %699
  %702 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %654, i64 %701
  %703 = sub i64 0, %699
  %704 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %696, i64 %703
  %705 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %704, i64 0, i32 0
  %706 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %702, i64 -1, i32 0
  %707 = getelementptr inbounds i64, i64* %705, i64 -1
  %708 = bitcast i64* %707 to <2 x i64>*
  %709 = load <2 x i64>, <2 x i64>* %708, align 8, !alias.scope !22
  %710 = getelementptr inbounds i64, i64* %705, i64 -3
  %711 = bitcast i64* %710 to <2 x i64>*
  %712 = load <2 x i64>, <2 x i64>* %711, align 8, !alias.scope !22
  %713 = getelementptr inbounds i64, i64* %706, i64 -1
  %714 = bitcast i64* %713 to <2 x i64>*
  store <2 x i64> %709, <2 x i64>* %714, align 8, !alias.scope !25, !noalias !22
  %715 = getelementptr inbounds i64, i64* %706, i64 -3
  %716 = bitcast i64* %715 to <2 x i64>*
  store <2 x i64> %712, <2 x i64>* %716, align 8, !alias.scope !25, !noalias !22
  %717 = sub nuw nsw i64 -4, %699
  %718 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %654, i64 %717
  %719 = sub nuw nsw i64 -4, %699
  %720 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %697, i64 %719
  %721 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %720, i64 0, i32 0
  %722 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %718, i64 -1, i32 0
  %723 = getelementptr inbounds i64, i64* %721, i64 -1
  %724 = bitcast i64* %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !22
  %726 = getelementptr inbounds i64, i64* %721, i64 -3
  %727 = bitcast i64* %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !22
  %729 = getelementptr inbounds i64, i64* %722, i64 -1
  %730 = bitcast i64* %729 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %730, align 8, !alias.scope !25, !noalias !22
  %731 = getelementptr inbounds i64, i64* %722, i64 -3
  %732 = bitcast i64* %731 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %732, align 8, !alias.scope !25, !noalias !22
  %733 = add i64 %699, 8
  %734 = add i64 %700, -2
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %736, label %698, !llvm.loop !27

736:                                              ; preds = %698
  %737 = sub nuw nsw i64 -8, %699
  br label %738

738:                                              ; preds = %736, %683
  %739 = phi i64 [ 0, %683 ], [ %737, %736 ]
  %740 = icmp eq i64 %692, 0
  br i1 %740, label %757, label %741

741:                                              ; preds = %738
  %742 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %654, i64 %739
  %743 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 -1
  %744 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %743, i64 %739
  %745 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %744, i64 0, i32 0
  %746 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %742, i64 -1, i32 0
  %747 = getelementptr inbounds i64, i64* %745, i64 -1
  %748 = bitcast i64* %747 to <2 x i64>*
  %749 = load <2 x i64>, <2 x i64>* %748, align 8, !alias.scope !22
  %750 = getelementptr inbounds i64, i64* %745, i64 -3
  %751 = bitcast i64* %750 to <2 x i64>*
  %752 = load <2 x i64>, <2 x i64>* %751, align 8, !alias.scope !22
  %753 = getelementptr inbounds i64, i64* %746, i64 -1
  %754 = bitcast i64* %753 to <2 x i64>*
  store <2 x i64> %749, <2 x i64>* %754, align 8, !alias.scope !25, !noalias !22
  %755 = getelementptr inbounds i64, i64* %746, i64 -3
  %756 = bitcast i64* %755 to <2 x i64>*
  store <2 x i64> %752, <2 x i64>* %756, align 8, !alias.scope !25, !noalias !22
  br label %757

757:                                              ; preds = %738, %741
  %758 = icmp eq i64 %668, %684
  br i1 %758, label %815, label %759

759:                                              ; preds = %757, %670, %663
  %760 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %654, %670 ], [ %654, %663 ], [ %686, %757 ]
  %761 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %661, %670 ], [ %661, %663 ], [ %688, %757 ]
  %762 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %761, i64 -1, i32 0
  %763 = ptrtoint i64* %762 to i64
  %764 = sub i64 %763, %660
  %765 = lshr i64 %764, 3
  %766 = add nuw nsw i64 %765, 1
  %767 = and i64 %766, 7
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %780, label %769

769:                                              ; preds = %759, %769
  %770 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %777, %769 ], [ %760, %759 ]
  %771 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %773, %769 ], [ %761, %759 ]
  %772 = phi i64 [ %778, %769 ], [ %767, %759 ]
  %773 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %771, i64 -1
  %774 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %773, i64 0, i32 0
  %775 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %770, i64 -1, i32 0
  %776 = load i64, i64* %774, align 8
  store i64 %776, i64* %775, align 8
  %777 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %770, i64 -1
  %778 = add i64 %772, -1
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %780, label %769, !llvm.loop !28

780:                                              ; preds = %769, %759
  %781 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %759 ], [ %777, %769 ]
  %782 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %760, %759 ], [ %777, %769 ]
  %783 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %761, %759 ], [ %773, %769 ]
  %784 = icmp ult i64 %764, 56
  br i1 %784, label %815, label %785

785:                                              ; preds = %780, %785
  %786 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %813, %785 ], [ %782, %780 ]
  %787 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %809, %785 ], [ %783, %780 ]
  %788 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -1, i32 0
  %789 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -1, i32 0
  %790 = load i64, i64* %788, align 8
  store i64 %790, i64* %789, align 8
  %791 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -2, i32 0
  %792 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -2, i32 0
  %793 = load i64, i64* %791, align 8
  store i64 %793, i64* %792, align 8
  %794 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -3, i32 0
  %795 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -3, i32 0
  %796 = load i64, i64* %794, align 8
  store i64 %796, i64* %795, align 8
  %797 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -4, i32 0
  %798 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -4, i32 0
  %799 = load i64, i64* %797, align 8
  store i64 %799, i64* %798, align 8
  %800 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -5, i32 0
  %801 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -5, i32 0
  %802 = load i64, i64* %800, align 8
  store i64 %802, i64* %801, align 8
  %803 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -6, i32 0
  %804 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -6, i32 0
  %805 = load i64, i64* %803, align 8
  store i64 %805, i64* %804, align 8
  %806 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -7, i32 0
  %807 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -7, i32 0
  %808 = load i64, i64* %806, align 8
  store i64 %808, i64* %807, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %787, i64 -8
  %810 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %809, i64 0, i32 0
  %811 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -8, i32 0
  %812 = load i64, i64* %810, align 8
  store i64 %812, i64* %811, align 8
  %813 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %786, i64 -8
  %814 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %809, %659
  br i1 %814, label %815, label %785, !llvm.loop !29

815:                                              ; preds = %780, %785, %757
  %816 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %686, %757 ], [ %781, %780 ], [ %813, %785 ]
  %817 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %816 to i64
  br label %818

818:                                              ; preds = %815, %651
  %819 = phi i64 [ %817, %815 ], [ %655, %651 ]
  store i64 %819, i64* %628, align 8
  store i64 %655, i64* %635, align 8
  store i64 %657, i64* %626, align 8
  br label %820

820:                                              ; preds = %624, %818
  %821 = load i32, i32* %183, align 8
  %822 = icmp eq i32 %821, 1
  br i1 %822, label %823, label %825

823:                                              ; preds = %820
  %824 = getelementptr inbounds %"class.v8::internal::ZoneVector.1391", %"class.v8::internal::ZoneVector.1391"* %178, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_4pairIiiEEN2v88internal13ZoneAllocatorIS2_EEE6assignEmRKS2_(%"class.std::__1::vector.1392"* %824, i64 %2, %"struct.std::__1::pair.1394"* nonnull dereferenceable(8) @.ref.tmp)
  br label %825

825:                                              ; preds = %823, %820
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIiiEEN2v88internal13ZoneAllocatorIS2_EEE6assignEmRKS2_(%"class.std::__1::vector.1392"*, i64, %"struct.std::__1::pair.1394"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1392", %"class.std::__1::vector.1392"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"struct.std::__1::pair.1394"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1392"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.1394"*
  br i1 %11, label %202, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::vector.1392", %"class.std::__1::vector.1392"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.1394"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %8
  %18 = ashr exact i64 %17, 3
  %19 = getelementptr inbounds %"class.std::__1::vector.1392", %"class.std::__1::vector.1392"* %0, i64 0, i32 0, i32 0
  %20 = icmp ult i64 %18, %1
  %21 = select i1 %20, i64 %18, i64 %1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %67, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %2, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %2, i64 0, i32 1
  %26 = add i64 %21, -1
  %27 = and i64 %21, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %23, %29
  %30 = phi %"struct.std::__1::pair.1394"* [ %37, %29 ], [ %12, %23 ]
  %31 = phi i64 [ %38, %29 ], [ %21, %23 ]
  %32 = phi i64 [ %39, %29 ], [ %27, %23 ]
  %33 = load i32, i32* %24, align 4
  %34 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %30, i64 0, i32 0
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* %25, align 4
  %36 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %30, i64 0, i32 1
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %30, i64 1
  %38 = add i64 %31, -1
  %39 = add i64 %32, -1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %29, !llvm.loop !30

41:                                               ; preds = %29, %23
  %42 = phi %"struct.std::__1::pair.1394"* [ %12, %23 ], [ %37, %29 ]
  %43 = phi i64 [ %21, %23 ], [ %38, %29 ]
  %44 = icmp ult i64 %26, 3
  br i1 %44, label %67, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"struct.std::__1::pair.1394"* [ %64, %45 ], [ %42, %41 ]
  %47 = phi i64 [ %65, %45 ], [ %43, %41 ]
  %48 = load i32, i32* %24, align 4
  %49 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 0, i32 0
  store i32 %48, i32* %49, align 4
  %50 = load i32, i32* %25, align 4
  %51 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 0, i32 1
  store i32 %50, i32* %51, align 4
  %52 = load i32, i32* %24, align 4
  %53 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 1, i32 0
  store i32 %52, i32* %53, align 4
  %54 = load i32, i32* %25, align 4
  %55 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 1, i32 1
  store i32 %54, i32* %55, align 4
  %56 = load i32, i32* %24, align 4
  %57 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 2, i32 0
  store i32 %56, i32* %57, align 4
  %58 = load i32, i32* %25, align 4
  %59 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 2, i32 1
  store i32 %58, i32* %59, align 4
  %60 = load i32, i32* %24, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 3, i32 0
  store i32 %60, i32* %61, align 4
  %62 = load i32, i32* %25, align 4
  %63 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 3, i32 1
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %46, i64 4
  %65 = add i64 %47, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %45

67:                                               ; preds = %41, %45, %13
  br i1 %20, label %68, label %199

68:                                               ; preds = %67
  %69 = sub i64 %1, %18
  %70 = load i64, i64* %15, align 8
  %71 = inttoptr i64 %70 to %"struct.std::__1::pair.1394"*
  %72 = inttoptr i64 %70 to i8*
  %73 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %69
  %74 = icmp eq i64 %69, 0
  br i1 %74, label %197, label %75

75:                                               ; preds = %68
  %76 = bitcast %"struct.std::__1::pair.1394"* %2 to i64*
  %77 = shl i64 %1, 3
  %78 = add i64 %77, -8
  %79 = sub i64 %78, %17
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = icmp ult i64 %81, 4
  br i1 %82, label %83, label %106

83:                                               ; preds = %166, %106, %75
  %84 = phi %"struct.std::__1::pair.1394"* [ %71, %106 ], [ %71, %75 ], [ %120, %166 ]
  %85 = ptrtoint %"struct.std::__1::pair.1394"* %84 to i64
  %86 = xor i64 %18, -1
  %87 = add i64 %86, %1
  %88 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %87, i32 0
  %89 = ptrtoint i32* %88 to i64
  %90 = sub i64 %89, %85
  %91 = lshr i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 7
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %83, %95
  %96 = phi %"struct.std::__1::pair.1394"* [ %100, %95 ], [ %84, %83 ]
  %97 = phi i64 [ %101, %95 ], [ %93, %83 ]
  %98 = bitcast %"struct.std::__1::pair.1394"* %96 to i64*
  %99 = load i64, i64* %76, align 4
  store i64 %99, i64* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %96, i64 1
  %101 = add i64 %97, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %95, !llvm.loop !31

103:                                              ; preds = %95, %83
  %104 = phi %"struct.std::__1::pair.1394"* [ %84, %83 ], [ %100, %95 ]
  %105 = icmp ult i64 %90, 56
  br i1 %105, label %168, label %170

106:                                              ; preds = %75
  %107 = shl i64 %1, 3
  %108 = add i64 %107, -8
  %109 = sub i64 %108, %17
  %110 = lshr i64 %109, 3
  %111 = add nuw nsw i64 %110, 1
  %112 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %111
  %113 = bitcast %"struct.std::__1::pair.1394"* %2 to i8*
  %114 = getelementptr i8, i8* %113, i64 1
  %115 = icmp ugt i8* %114, %72
  %116 = icmp ugt %"struct.std::__1::pair.1394"* %112, %2
  %117 = and i1 %115, %116
  br i1 %117, label %83, label %118

118:                                              ; preds = %106
  %119 = and i64 %81, 4611686018427387900
  %120 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %119
  %121 = add nsw i64 %119, -4
  %122 = lshr exact i64 %121, 2
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %121, 0
  br i1 %125, label %153, label %126

126:                                              ; preds = %118
  %127 = sub nuw nsw i64 %123, %124
  %128 = load i64, i64* %76, align 4, !alias.scope !32
  %129 = insertelement <2 x i64> undef, i64 %128, i32 0
  %130 = shufflevector <2 x i64> %129, <2 x i64> undef, <2 x i32> zeroinitializer
  %131 = insertelement <2 x i64> undef, i64 %128, i32 0
  %132 = shufflevector <2 x i64> %131, <2 x i64> undef, <2 x i32> zeroinitializer
  %133 = load i64, i64* %76, align 4, !alias.scope !32
  %134 = insertelement <2 x i64> undef, i64 %133, i32 0
  %135 = shufflevector <2 x i64> %134, <2 x i64> undef, <2 x i32> zeroinitializer
  %136 = insertelement <2 x i64> undef, i64 %133, i32 0
  %137 = shufflevector <2 x i64> %136, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %138

138:                                              ; preds = %138, %126
  %139 = phi i64 [ 0, %126 ], [ %150, %138 ]
  %140 = phi i64 [ %127, %126 ], [ %151, %138 ]
  %141 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %139
  %142 = bitcast %"struct.std::__1::pair.1394"* %141 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %142, align 4, !alias.scope !35, !noalias !32
  %143 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %141, i64 2
  %144 = bitcast %"struct.std::__1::pair.1394"* %143 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %144, align 4, !alias.scope !35, !noalias !32
  %145 = or i64 %139, 4
  %146 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %145
  %147 = bitcast %"struct.std::__1::pair.1394"* %146 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %147, align 4, !alias.scope !35, !noalias !32
  %148 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %146, i64 2
  %149 = bitcast %"struct.std::__1::pair.1394"* %148 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %149, align 4, !alias.scope !35, !noalias !32
  %150 = add i64 %139, 8
  %151 = add i64 %140, -2
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %138, !llvm.loop !37

153:                                              ; preds = %138, %118
  %154 = phi i64 [ 0, %118 ], [ %150, %138 ]
  %155 = icmp eq i64 %124, 0
  br i1 %155, label %166, label %156

156:                                              ; preds = %153
  %157 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %71, i64 %154
  %158 = load i64, i64* %76, align 4, !alias.scope !32
  %159 = insertelement <2 x i64> undef, i64 %158, i32 0
  %160 = shufflevector <2 x i64> %159, <2 x i64> undef, <2 x i32> zeroinitializer
  %161 = insertelement <2 x i64> undef, i64 %158, i32 0
  %162 = shufflevector <2 x i64> %161, <2 x i64> undef, <2 x i32> zeroinitializer
  %163 = bitcast %"struct.std::__1::pair.1394"* %157 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %163, align 4, !alias.scope !35, !noalias !32
  %164 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %157, i64 2
  %165 = bitcast %"struct.std::__1::pair.1394"* %164 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %165, align 4, !alias.scope !35, !noalias !32
  br label %166

166:                                              ; preds = %153, %156
  %167 = icmp eq i64 %81, %119
  br i1 %167, label %168, label %83

168:                                              ; preds = %103, %170, %166
  %169 = ptrtoint %"struct.std::__1::pair.1394"* %73 to i64
  br label %197

170:                                              ; preds = %103, %170
  %171 = phi %"struct.std::__1::pair.1394"* [ %195, %170 ], [ %104, %103 ]
  %172 = bitcast %"struct.std::__1::pair.1394"* %171 to i64*
  %173 = load i64, i64* %76, align 4
  store i64 %173, i64* %172, align 4
  %174 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 1
  %175 = bitcast %"struct.std::__1::pair.1394"* %174 to i64*
  %176 = load i64, i64* %76, align 4
  store i64 %176, i64* %175, align 4
  %177 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 2
  %178 = bitcast %"struct.std::__1::pair.1394"* %177 to i64*
  %179 = load i64, i64* %76, align 4
  store i64 %179, i64* %178, align 4
  %180 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 3
  %181 = bitcast %"struct.std::__1::pair.1394"* %180 to i64*
  %182 = load i64, i64* %76, align 4
  store i64 %182, i64* %181, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 4
  %184 = bitcast %"struct.std::__1::pair.1394"* %183 to i64*
  %185 = load i64, i64* %76, align 4
  store i64 %185, i64* %184, align 4
  %186 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 5
  %187 = bitcast %"struct.std::__1::pair.1394"* %186 to i64*
  %188 = load i64, i64* %76, align 4
  store i64 %188, i64* %187, align 4
  %189 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 6
  %190 = bitcast %"struct.std::__1::pair.1394"* %189 to i64*
  %191 = load i64, i64* %76, align 4
  store i64 %191, i64* %190, align 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 7
  %193 = bitcast %"struct.std::__1::pair.1394"* %192 to i64*
  %194 = load i64, i64* %76, align 4
  store i64 %194, i64* %193, align 4
  %195 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %171, i64 8
  %196 = icmp eq %"struct.std::__1::pair.1394"* %195, %73
  br i1 %196, label %168, label %170, !llvm.loop !38

197:                                              ; preds = %68, %168
  %198 = phi i64 [ %169, %168 ], [ %70, %68 ]
  store i64 %198, i64* %15, align 8
  br label %363

199:                                              ; preds = %67
  %200 = load %"struct.std::__1::pair.1394"*, %"struct.std::__1::pair.1394"** %19, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %200, i64 %1
  store %"struct.std::__1::pair.1394"* %201, %"struct.std::__1::pair.1394"** %14, align 8
  br label %363

202:                                              ; preds = %3
  %203 = getelementptr inbounds %"class.std::__1::vector.1392", %"class.std::__1::vector.1392"* %0, i64 0, i32 0, i32 0
  %204 = icmp eq i64 %8, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %202
  %206 = bitcast %"class.std::__1::vector.1392"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %206, i8 0, i64 24, i1 false) #12
  br label %207

207:                                              ; preds = %202, %205
  %208 = phi i64 [ %6, %202 ], [ 0, %205 ]
  %209 = icmp ugt i64 %1, 268435455
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  %211 = bitcast %"class.std::__1::vector.1392"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %211) #13
  unreachable

212:                                              ; preds = %207
  %213 = ashr exact i64 %208, 3
  %214 = icmp ult i64 %213, 134217727
  br i1 %214, label %215, label %222

215:                                              ; preds = %212
  %216 = ashr exact i64 %208, 2
  %217 = icmp ult i64 %216, %1
  br i1 %217, label %222, label %218

218:                                              ; preds = %215
  %219 = icmp ugt i64 %216, 268435455
  br i1 %219, label %220, label %222

220:                                              ; preds = %218
  %221 = bitcast %"class.std::__1::vector.1392"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %221) #13
  unreachable

222:                                              ; preds = %215, %212, %218
  %223 = phi i64 [ %216, %218 ], [ 268435455, %212 ], [ %1, %215 ]
  %224 = getelementptr inbounds %"class.std::__1::vector.1392", %"class.std::__1::vector.1392"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %225 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %224, align 8
  %226 = shl i64 %223, 3
  %227 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %225, i64 0, i32 2
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %225, i64 0, i32 3
  %230 = load i64, i64* %229, align 8
  %231 = sub i64 %230, %228
  %232 = icmp ugt i64 %226, %231
  br i1 %232, label %233, label %235, !prof !2

233:                                              ; preds = %222
  %234 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %225, i64 %226) #12
  br label %237

235:                                              ; preds = %222
  %236 = add i64 %228, %226
  store i64 %236, i64* %227, align 8
  br label %237

237:                                              ; preds = %235, %233
  %238 = phi i64 [ %234, %233 ], [ %228, %235 ]
  %239 = inttoptr i64 %238 to %"struct.std::__1::pair.1394"*
  %240 = getelementptr inbounds %"class.std::__1::vector.1392", %"class.std::__1::vector.1392"* %0, i64 0, i32 0, i32 1
  store %"struct.std::__1::pair.1394"* %239, %"struct.std::__1::pair.1394"** %240, align 8
  store %"struct.std::__1::pair.1394"* %239, %"struct.std::__1::pair.1394"** %203, align 8
  %241 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %223
  store %"struct.std::__1::pair.1394"* %241, %"struct.std::__1::pair.1394"** %4, align 8
  %242 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %1
  %243 = bitcast %"struct.std::__1::pair.1394"* %2 to i64*
  %244 = shl nsw i64 %1, 3
  %245 = add i64 %244, -8
  %246 = lshr exact i64 %245, 3
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %311, label %249

249:                                              ; preds = %237
  %250 = inttoptr i64 %238 to i8*
  %251 = shl nsw i64 %1, 3
  %252 = add i64 %251, -8
  %253 = lshr exact i64 %252, 3
  %254 = add nuw nsw i64 %253, 1
  %255 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %254
  %256 = bitcast %"struct.std::__1::pair.1394"* %2 to i8*
  %257 = getelementptr i8, i8* %256, i64 1
  %258 = icmp ugt i8* %257, %250
  %259 = icmp ugt %"struct.std::__1::pair.1394"* %255, %2
  %260 = and i1 %258, %259
  br i1 %260, label %311, label %261

261:                                              ; preds = %249
  %262 = and i64 %247, 4611686018427387900
  %263 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %262
  %264 = add nsw i64 %262, -4
  %265 = lshr exact i64 %264, 2
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 1
  %268 = icmp eq i64 %264, 0
  br i1 %268, label %296, label %269

269:                                              ; preds = %261
  %270 = sub nuw nsw i64 %266, %267
  %271 = load i64, i64* %243, align 4, !alias.scope !39
  %272 = insertelement <2 x i64> undef, i64 %271, i32 0
  %273 = shufflevector <2 x i64> %272, <2 x i64> undef, <2 x i32> zeroinitializer
  %274 = insertelement <2 x i64> undef, i64 %271, i32 0
  %275 = shufflevector <2 x i64> %274, <2 x i64> undef, <2 x i32> zeroinitializer
  %276 = load i64, i64* %243, align 4, !alias.scope !39
  %277 = insertelement <2 x i64> undef, i64 %276, i32 0
  %278 = shufflevector <2 x i64> %277, <2 x i64> undef, <2 x i32> zeroinitializer
  %279 = insertelement <2 x i64> undef, i64 %276, i32 0
  %280 = shufflevector <2 x i64> %279, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %281

281:                                              ; preds = %281, %269
  %282 = phi i64 [ 0, %269 ], [ %293, %281 ]
  %283 = phi i64 [ %270, %269 ], [ %294, %281 ]
  %284 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %282
  %285 = bitcast %"struct.std::__1::pair.1394"* %284 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %285, align 4, !alias.scope !42, !noalias !39
  %286 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %284, i64 2
  %287 = bitcast %"struct.std::__1::pair.1394"* %286 to <2 x i64>*
  store <2 x i64> %275, <2 x i64>* %287, align 4, !alias.scope !42, !noalias !39
  %288 = or i64 %282, 4
  %289 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %288
  %290 = bitcast %"struct.std::__1::pair.1394"* %289 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %290, align 4, !alias.scope !42, !noalias !39
  %291 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %289, i64 2
  %292 = bitcast %"struct.std::__1::pair.1394"* %291 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %292, align 4, !alias.scope !42, !noalias !39
  %293 = add i64 %282, 8
  %294 = add i64 %283, -2
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %281, !llvm.loop !44

296:                                              ; preds = %281, %261
  %297 = phi i64 [ 0, %261 ], [ %293, %281 ]
  %298 = icmp eq i64 %267, 0
  br i1 %298, label %309, label %299

299:                                              ; preds = %296
  %300 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %297
  %301 = load i64, i64* %243, align 4, !alias.scope !39
  %302 = insertelement <2 x i64> undef, i64 %301, i32 0
  %303 = shufflevector <2 x i64> %302, <2 x i64> undef, <2 x i32> zeroinitializer
  %304 = insertelement <2 x i64> undef, i64 %301, i32 0
  %305 = shufflevector <2 x i64> %304, <2 x i64> undef, <2 x i32> zeroinitializer
  %306 = bitcast %"struct.std::__1::pair.1394"* %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %306, align 4, !alias.scope !42, !noalias !39
  %307 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %300, i64 2
  %308 = bitcast %"struct.std::__1::pair.1394"* %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 4, !alias.scope !42, !noalias !39
  br label %309

309:                                              ; preds = %296, %299
  %310 = icmp eq i64 %247, %262
  br i1 %310, label %360, label %311

311:                                              ; preds = %309, %249, %237
  %312 = phi %"struct.std::__1::pair.1394"* [ %239, %249 ], [ %239, %237 ], [ %263, %309 ]
  %313 = ptrtoint %"struct.std::__1::pair.1394"* %312 to i64
  %314 = add i64 %1, -1
  %315 = getelementptr %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %239, i64 %314, i32 0
  %316 = ptrtoint i32* %315 to i64
  %317 = sub i64 %316, %313
  %318 = lshr i64 %317, 3
  %319 = add nuw nsw i64 %318, 1
  %320 = and i64 %319, 7
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %311, %322
  %323 = phi %"struct.std::__1::pair.1394"* [ %327, %322 ], [ %312, %311 ]
  %324 = phi i64 [ %328, %322 ], [ %320, %311 ]
  %325 = bitcast %"struct.std::__1::pair.1394"* %323 to i64*
  %326 = load i64, i64* %243, align 4
  store i64 %326, i64* %325, align 4
  %327 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %323, i64 1
  %328 = add i64 %324, -1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %322, !llvm.loop !45

330:                                              ; preds = %322, %311
  %331 = phi %"struct.std::__1::pair.1394"* [ %312, %311 ], [ %327, %322 ]
  %332 = icmp ult i64 %317, 56
  br i1 %332, label %360, label %333

333:                                              ; preds = %330, %333
  %334 = phi %"struct.std::__1::pair.1394"* [ %358, %333 ], [ %331, %330 ]
  %335 = bitcast %"struct.std::__1::pair.1394"* %334 to i64*
  %336 = load i64, i64* %243, align 4
  store i64 %336, i64* %335, align 4
  %337 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 1
  %338 = bitcast %"struct.std::__1::pair.1394"* %337 to i64*
  %339 = load i64, i64* %243, align 4
  store i64 %339, i64* %338, align 4
  %340 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 2
  %341 = bitcast %"struct.std::__1::pair.1394"* %340 to i64*
  %342 = load i64, i64* %243, align 4
  store i64 %342, i64* %341, align 4
  %343 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 3
  %344 = bitcast %"struct.std::__1::pair.1394"* %343 to i64*
  %345 = load i64, i64* %243, align 4
  store i64 %345, i64* %344, align 4
  %346 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 4
  %347 = bitcast %"struct.std::__1::pair.1394"* %346 to i64*
  %348 = load i64, i64* %243, align 4
  store i64 %348, i64* %347, align 4
  %349 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 5
  %350 = bitcast %"struct.std::__1::pair.1394"* %349 to i64*
  %351 = load i64, i64* %243, align 4
  store i64 %351, i64* %350, align 4
  %352 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 6
  %353 = bitcast %"struct.std::__1::pair.1394"* %352 to i64*
  %354 = load i64, i64* %243, align 4
  store i64 %354, i64* %353, align 4
  %355 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 7
  %356 = bitcast %"struct.std::__1::pair.1394"* %355 to i64*
  %357 = load i64, i64* %243, align 4
  store i64 %357, i64* %356, align 4
  %358 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %334, i64 8
  %359 = icmp eq %"struct.std::__1::pair.1394"* %358, %242
  br i1 %359, label %360, label %333, !llvm.loop !46

360:                                              ; preds = %330, %333, %309
  %361 = bitcast %"struct.std::__1::pair.1394"** %240 to i64*
  %362 = ptrtoint %"struct.std::__1::pair.1394"* %242 to i64
  store i64 %362, i64* %361, align 8
  br label %363

363:                                              ; preds = %197, %199, %360
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19InstructionSelector18SelectInstructionsEv(%"class.v8::internal::compiler::InstructionSelector"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 6
  %3 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %3, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  br label %16

11:                                               ; preds = %112
  %12 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi %"class.v8::internal::compiler::BasicBlock"** [ %12, %11 ], [ %5, %1 ]
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 25
  br label %115

16:                                               ; preds = %9, %112
  %17 = phi %"class.v8::internal::compiler::BasicBlock"** [ %5, %9 ], [ %113, %112 ]
  %18 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 7
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %20, null
  br i1 %21, label %112, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 11, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 11, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %24, %26
  br i1 %27, label %112, label %28

28:                                               ; preds = %22, %109
  %29 = phi %"class.v8::internal::compiler::Node"** [ %110, %109 ], [ %24, %22 ]
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %30, i64 0, i32 0
  %32 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %32, i64 0, i32 2
  %34 = load i16, i16* %33, align 8
  %35 = icmp eq i16 %34, 35
  br i1 %35, label %36, label %109

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %30, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = lshr i32 %38, 24
  %40 = and i32 %39, 15
  %41 = icmp eq i32 %40, 15
  %42 = ptrtoint %"class.v8::internal::compiler::Node"* %30 to i64
  %43 = add i64 %42, 32
  br i1 %41, label %44, label %51

44:                                               ; preds = %36
  %45 = inttoptr i64 %43 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %46 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %45, align 8
  %47 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %46 to i64
  %48 = add i64 %47, 16
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  br label %51

51:                                               ; preds = %36, %44
  %52 = phi i32 [ %50, %44 ], [ %40, %36 ]
  %53 = phi i64 [ %48, %44 ], [ %43, %36 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::Node"**
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, i64 %55
  %57 = icmp eq i32 %52, 0
  br i1 %57, label %109, label %58

58:                                               ; preds = %51
  %59 = shl nsw i64 %55, 3
  %60 = add nsw i64 %59, -8
  %61 = and i64 %60, 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %77

63:                                               ; preds = %58
  %64 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 16777215
  %68 = zext i32 %67 to i64
  %69 = load i64*, i64** %10, align 8
  %70 = lshr i64 %68, 6
  %71 = getelementptr inbounds i64, i64* %69, i64 %70
  %72 = and i64 %68, 63
  %73 = shl i64 1, %72
  %74 = load i64, i64* %71, align 8
  %75 = or i64 %73, %74
  store i64 %75, i64* %71, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, i64 1
  br label %77

77:                                               ; preds = %63, %58
  %78 = phi %"class.v8::internal::compiler::Node"** [ %76, %63 ], [ %54, %58 ]
  %79 = icmp eq i64 %60, 0
  br i1 %79, label %109, label %80

80:                                               ; preds = %77, %80
  %81 = phi %"class.v8::internal::compiler::Node"** [ %107, %80 ], [ %78, %77 ]
  %82 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 16777215
  %86 = zext i32 %85 to i64
  %87 = load i64*, i64** %10, align 8
  %88 = lshr i64 %86, 6
  %89 = getelementptr inbounds i64, i64* %87, i64 %88
  %90 = and i64 %86, 63
  %91 = shl i64 1, %90
  %92 = load i64, i64* %89, align 8
  %93 = or i64 %91, %92
  store i64 %93, i64* %89, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 1
  %95 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %95, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 16777215
  %99 = zext i32 %98 to i64
  %100 = load i64*, i64** %10, align 8
  %101 = lshr i64 %99, 6
  %102 = getelementptr inbounds i64, i64* %100, i64 %101
  %103 = and i64 %99, 63
  %104 = shl i64 1, %103
  %105 = load i64, i64* %102, align 8
  %106 = or i64 %104, %105
  store i64 %106, i64* %102, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 2
  %108 = icmp eq %"class.v8::internal::compiler::Node"** %107, %56
  br i1 %108, label %109, label %80

109:                                              ; preds = %77, %80, %51, %28
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 1
  %111 = icmp eq %"class.v8::internal::compiler::Node"** %110, %26
  br i1 %111, label %112, label %28

112:                                              ; preds = %109, %22, %16
  %113 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, i64 1
  %114 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %113, %7
  br i1 %114, label %11, label %16

115:                                              ; preds = %119, %13
  %116 = phi %"class.v8::internal::compiler::BasicBlock"** [ %14, %13 ], [ %120, %119 ]
  %117 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %4, align 8
  %118 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %116, %117
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %116, i64 -1
  %121 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %120, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector10VisitBlockEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::BasicBlock"* %121)
  %122 = load i8, i8* %15, align 8, !range !47
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %115, label %418

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 18
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %149

128:                                              ; preds = %124
  %129 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %129, label %130, label %149

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %132 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %134 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %132, i64 0, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %132, i64 0, i32 3
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %138, %136
  %140 = icmp ult i64 %139, 168
  br i1 %140, label %141, label %143, !prof !2

141:                                              ; preds = %130
  %142 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %132, i64 168) #12
  br label %145

143:                                              ; preds = %130
  %144 = add i64 %136, 168
  store i64 %144, i64* %135, align 8
  br label %145

145:                                              ; preds = %141, %143
  %146 = phi i64 [ %142, %141 ], [ %136, %143 ]
  %147 = inttoptr i64 %146 to %"class.v8::internal::compiler::InstructionScheduler"*
  tail call void @_ZN2v88internal8compiler20InstructionSchedulerC1EPNS0_4ZoneEPNS1_19InstructionSequenceE(%"class.v8::internal::compiler::InstructionScheduler"* %147, %"class.v8::internal::Zone"* %132, %"class.v8::internal::compiler::InstructionSequence"* %134) #12
  %148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  store %"class.v8::internal::compiler::InstructionScheduler"* %147, %"class.v8::internal::compiler::InstructionScheduler"** %148, align 8
  br label %149

149:                                              ; preds = %124, %145, %128
  %150 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %4, align 8
  %151 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  %152 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %150, %151
  br i1 %152, label %418, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %157 = bitcast i32** %156 to i64*
  %158 = bitcast %"class.std::__1::vector.1194"* %155 to i64*
  %159 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  %160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %161

161:                                              ; preds = %153, %415
  %162 = phi %"class.v8::internal::compiler::BasicBlock"** [ %150, %153 ], [ %416, %415 ]
  %163 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %162, align 8
  %164 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %154, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %164, i64 0, i32 2
  %168 = bitcast %"class.v8::internal::ZoneVector"** %167 to %"class.std::__1::vector.1182"**
  %169 = load %"class.std::__1::vector.1182"*, %"class.std::__1::vector.1182"** %168, align 8
  %170 = sext i32 %166 to i64
  %171 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %169, i64 0, i32 0, i32 1
  %172 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::vector.1182"* %169 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ugt i64 %177, %170
  br i1 %178, label %181, label %179

179:                                              ; preds = %161
  %180 = bitcast %"class.std::__1::vector.1182"* %169 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %180) #13
  unreachable

181:                                              ; preds = %161
  %182 = inttoptr i64 %175 to %"class.v8::internal::compiler::InstructionBlock"**
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %182, i64 %170
  %184 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %184, i64 0, i32 2, i32 0
  %186 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %184, i64 0, i32 2, i32 0, i32 0, i32 1
  %187 = bitcast %"class.v8::internal::compiler::PhiInstruction"*** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.std::__1::vector.1191"* %185 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %188, %190
  br i1 %191, label %194, label %216

192:                                              ; preds = %265
  %193 = load i32, i32* %165, align 4
  br label %194

194:                                              ; preds = %192, %181
  %195 = phi i32 [ %193, %192 ], [ %166, %181 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %184, i64 0, i32 9
  %197 = load i32, i32* %196, align 8
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %184, i64 0, i32 8
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = load i32, i32* %125, align 8
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %208

204:                                              ; preds = %194
  %205 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %205, label %206, label %208

206:                                              ; preds = %204
  %207 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %159, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"* %207, i32 %195) #12
  br label %210

208:                                              ; preds = %204, %194
  %209 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %154, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"* %209, i32 %195) #12
  br label %210

210:                                              ; preds = %206, %208
  %211 = icmp eq i32 %197, %200
  br i1 %211, label %405, label %212

212:                                              ; preds = %210
  %213 = add nsw i64 %198, 1
  %214 = icmp ult i64 %213, %201
  %215 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %160, align 8
  br i1 %214, label %272, label %341

216:                                              ; preds = %181, %265
  %217 = phi i64 [ %266, %265 ], [ %190, %181 ]
  %218 = phi i64 [ %267, %265 ], [ %188, %181 ]
  %219 = phi i64 [ %268, %265 ], [ 0, %181 ]
  %220 = inttoptr i64 %217 to %"class.v8::internal::compiler::PhiInstruction"**
  %221 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %220, i64 %219
  %222 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %222, i64 0, i32 2, i32 0
  %224 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %222, i64 0, i32 2, i32 0, i32 0, i32 1
  %225 = bitcast i32** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.std::__1::vector.1194"* %223 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = icmp eq i64 %226, %228
  br i1 %229, label %265, label %230

230:                                              ; preds = %216, %255
  %231 = phi i64 [ %256, %255 ], [ %228, %216 ]
  %232 = phi i64 [ %257, %255 ], [ %226, %216 ]
  %233 = phi i64 [ %258, %255 ], [ 0, %216 ]
  %234 = inttoptr i64 %231 to i32*
  %235 = getelementptr inbounds i32, i32* %234, i64 %233
  %236 = load i32, i32* %235, align 4
  %237 = load i64, i64* %157, align 8
  %238 = load i64, i64* %158, align 8
  %239 = sub i64 %237, %238
  %240 = ashr exact i64 %239, 2
  %241 = inttoptr i64 %238 to i32*
  br label %242

242:                                              ; preds = %246, %230
  %243 = phi i32 [ %236, %230 ], [ %248, %246 ]
  %244 = sext i32 %243 to i64
  %245 = icmp ugt i64 %240, %244
  br i1 %245, label %246, label %250

246:                                              ; preds = %242
  %247 = getelementptr inbounds i32, i32* %241, i64 %244
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, -1
  br i1 %249, label %250, label %242

250:                                              ; preds = %246, %242
  %251 = icmp eq i32 %236, %243
  br i1 %251, label %255, label %252

252:                                              ; preds = %250
  tail call void @_ZN2v88internal8compiler14PhiInstruction11RenameInputEmi(%"class.v8::internal::compiler::PhiInstruction"* %222, i64 %233, i32 %243) #12
  %253 = load i64, i64* %225, align 8
  %254 = load i64, i64* %227, align 8
  br label %255

255:                                              ; preds = %252, %250
  %256 = phi i64 [ %231, %250 ], [ %254, %252 ]
  %257 = phi i64 [ %232, %250 ], [ %253, %252 ]
  %258 = add nuw i64 %233, 1
  %259 = sub i64 %257, %256
  %260 = ashr exact i64 %259, 2
  %261 = icmp ult i64 %258, %260
  br i1 %261, label %230, label %262

262:                                              ; preds = %255
  %263 = load i64, i64* %187, align 8
  %264 = load i64, i64* %189, align 8
  br label %265

265:                                              ; preds = %262, %216
  %266 = phi i64 [ %264, %262 ], [ %217, %216 ]
  %267 = phi i64 [ %263, %262 ], [ %218, %216 ]
  %268 = add nuw i64 %219, 1
  %269 = sub i64 %267, %266
  %270 = ashr exact i64 %269, 3
  %271 = icmp ult i64 %268, %270
  br i1 %271, label %216, label %192

272:                                              ; preds = %212, %338
  %273 = phi %"class.v8::internal::compiler::Instruction"** [ %340, %338 ], [ %215, %212 ]
  %274 = phi i64 [ %275, %338 ], [ %201, %212 ]
  %275 = add i64 %274, -1
  %276 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, i64 %275
  %277 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %277, i64 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = and i32 %279, 16776960
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %327, label %282

282:                                              ; preds = %272, %316
  %283 = phi i32 [ %317, %316 ], [ %279, %272 ]
  %284 = phi i64 [ %318, %316 ], [ 0, %272 ]
  %285 = and i32 %283, 255
  %286 = zext i32 %285 to i64
  %287 = add nuw i64 %284, %286
  %288 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %277, i64 0, i32 5, i64 %287, i32 0
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 1
  br i1 %291, label %292, label %316

292:                                              ; preds = %282
  %293 = lshr i64 %289, 3
  %294 = trunc i64 %293 to i32
  %295 = load i64, i64* %157, align 8
  %296 = load i64, i64* %158, align 8
  %297 = sub i64 %295, %296
  %298 = ashr exact i64 %297, 2
  %299 = inttoptr i64 %296 to i32*
  br label %300

300:                                              ; preds = %304, %292
  %301 = phi i32 [ %294, %292 ], [ %306, %304 ]
  %302 = sext i32 %301 to i64
  %303 = icmp ugt i64 %298, %302
  br i1 %303, label %304, label %308

304:                                              ; preds = %300
  %305 = getelementptr inbounds i32, i32* %299, i64 %302
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, -1
  br i1 %307, label %308, label %300

308:                                              ; preds = %304, %300
  %309 = icmp eq i32 %301, %294
  br i1 %309, label %316, label %310

310:                                              ; preds = %308
  %311 = and i64 %289, -34359738361
  %312 = zext i32 %301 to i64
  %313 = shl nuw nsw i64 %312, 3
  %314 = or i64 %313, %311
  store i64 %314, i64* %288, align 8
  %315 = load i32, i32* %278, align 4
  br label %316

316:                                              ; preds = %310, %308, %282
  %317 = phi i32 [ %283, %282 ], [ %283, %308 ], [ %315, %310 ]
  %318 = add nuw nsw i64 %284, 1
  %319 = lshr i32 %317, 8
  %320 = and i32 %319, 65535
  %321 = zext i32 %320 to i64
  %322 = icmp ult i64 %318, %321
  br i1 %322, label %282, label %323

323:                                              ; preds = %316
  %324 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %160, align 8
  %325 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %324, i64 %275
  %326 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %325, align 8
  br label %327

327:                                              ; preds = %323, %272
  %328 = phi %"class.v8::internal::compiler::Instruction"* [ %326, %323 ], [ %277, %272 ]
  %329 = load i32, i32* %125, align 8
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %335

331:                                              ; preds = %327
  %332 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %332, label %333, label %335

333:                                              ; preds = %331
  %334 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %159, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %334, %"class.v8::internal::compiler::Instruction"* %328) #12
  br label %338

335:                                              ; preds = %331, %327
  %336 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %154, align 8
  %337 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %336, %"class.v8::internal::compiler::Instruction"* %328) #12
  br label %338

338:                                              ; preds = %333, %335
  %339 = icmp ugt i64 %275, %213
  %340 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %160, align 8
  br i1 %339, label %272, label %341

341:                                              ; preds = %338, %212
  %342 = phi %"class.v8::internal::compiler::Instruction"** [ %215, %212 ], [ %340, %338 ]
  %343 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %342, i64 %198
  %344 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %343, align 8
  %345 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %344, i64 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = and i32 %346, 16776960
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %394, label %349

349:                                              ; preds = %341, %383
  %350 = phi i32 [ %384, %383 ], [ %346, %341 ]
  %351 = phi i64 [ %385, %383 ], [ 0, %341 ]
  %352 = and i32 %350, 255
  %353 = zext i32 %352 to i64
  %354 = add nuw i64 %351, %353
  %355 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %344, i64 0, i32 5, i64 %354, i32 0
  %356 = load i64, i64* %355, align 8
  %357 = and i64 %356, 7
  %358 = icmp eq i64 %357, 1
  br i1 %358, label %359, label %383

359:                                              ; preds = %349
  %360 = lshr i64 %356, 3
  %361 = trunc i64 %360 to i32
  %362 = load i64, i64* %157, align 8
  %363 = load i64, i64* %158, align 8
  %364 = sub i64 %362, %363
  %365 = ashr exact i64 %364, 2
  %366 = inttoptr i64 %363 to i32*
  br label %367

367:                                              ; preds = %371, %359
  %368 = phi i32 [ %361, %359 ], [ %373, %371 ]
  %369 = sext i32 %368 to i64
  %370 = icmp ugt i64 %365, %369
  br i1 %370, label %371, label %375

371:                                              ; preds = %367
  %372 = getelementptr inbounds i32, i32* %366, i64 %369
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, -1
  br i1 %374, label %375, label %367

375:                                              ; preds = %371, %367
  %376 = icmp eq i32 %368, %361
  br i1 %376, label %383, label %377

377:                                              ; preds = %375
  %378 = and i64 %356, -34359738361
  %379 = zext i32 %368 to i64
  %380 = shl nuw nsw i64 %379, 3
  %381 = or i64 %380, %378
  store i64 %381, i64* %355, align 8
  %382 = load i32, i32* %345, align 4
  br label %383

383:                                              ; preds = %377, %375, %349
  %384 = phi i32 [ %350, %349 ], [ %350, %375 ], [ %382, %377 ]
  %385 = add nuw nsw i64 %351, 1
  %386 = lshr i32 %384, 8
  %387 = and i32 %386, 65535
  %388 = zext i32 %387 to i64
  %389 = icmp ult i64 %385, %388
  br i1 %389, label %349, label %390

390:                                              ; preds = %383
  %391 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %160, align 8
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %391, i64 %198
  %393 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %392, align 8
  br label %394

394:                                              ; preds = %390, %341
  %395 = phi %"class.v8::internal::compiler::Instruction"* [ %393, %390 ], [ %344, %341 ]
  %396 = load i32, i32* %125, align 8
  %397 = icmp eq i32 %396, 1
  br i1 %397, label %398, label %402

398:                                              ; preds = %394
  %399 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %399, label %400, label %402

400:                                              ; preds = %398
  %401 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %159, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler13AddTerminatorEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %401, %"class.v8::internal::compiler::Instruction"* %395) #12
  br label %405

402:                                              ; preds = %398, %394
  %403 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %154, align 8
  %404 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %403, %"class.v8::internal::compiler::Instruction"* %395) #12
  br label %405

405:                                              ; preds = %402, %400, %210
  %406 = load i32, i32* %165, align 4
  %407 = load i32, i32* %125, align 8
  %408 = icmp eq i32 %407, 1
  br i1 %408, label %409, label %413

409:                                              ; preds = %405
  %410 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %410, label %411, label %413

411:                                              ; preds = %409
  %412 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %159, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"* %412, i32 %406) #12
  br label %415

413:                                              ; preds = %409, %405
  %414 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %154, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"* %414, i32 %406) #12
  br label %415

415:                                              ; preds = %411, %413
  %416 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %162, i64 1
  %417 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %416, %151
  br i1 %417, label %418, label %161

418:                                              ; preds = %119, %415, %149
  %419 = phi i1 [ true, %149 ], [ true, %415 ], [ false, %119 ]
  ret i1 %419
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector10MarkAsUsedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = lshr i64 %6, 6
  %10 = getelementptr inbounds i64, i64* %8, i64 %9
  %11 = and i64 %6, 63
  %12 = shl i64 1, %11
  %13 = load i64, i64* %10, align 8
  %14 = or i64 %12, %13
  store i64 %14, i64* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector10VisitBlockEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::Instruction"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1326"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"** %14, %16
  br i1 %17, label %49, label %18

18:                                               ; preds = %2
  %19 = ptrtoint %"class.v8::internal::compiler::Node"** %14 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %21 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 -1
  %22 = ptrtoint %"class.v8::internal::compiler::Node"** %21 to i64
  %23 = sub i64 %22, %19
  %24 = lshr i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %24, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %18
  %29 = sub nuw nsw i64 %25, %26
  br label %54

30:                                               ; preds = %565, %18
  %31 = phi i32 [ undef, %18 ], [ %566, %565 ]
  %32 = phi i32 [ 0, %18 ], [ %566, %565 ]
  %33 = phi %"class.v8::internal::compiler::Node"** [ %14, %18 ], [ %567, %565 ]
  %34 = icmp eq i64 %26, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %36, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 16777215
  %40 = zext i32 %39 to i64
  %41 = load i32*, i32** %20, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 %40
  store i32 %32, i32* %42, align 4
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %36, i64 0, i32 0
  %44 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %44, i64 0, i32 2
  %46 = load i16, i16* %45, align 8
  switch i16 %46, label %49 [
    i16 440, label %47
    i16 505, label %47
    i16 49, label %47
    i16 512, label %47
    i16 513, label %47
    i16 741, label %47
    i16 407, label %47
    i16 408, label %47
    i16 409, label %47
    i16 410, label %47
    i16 411, label %47
    i16 412, label %47
    i16 413, label %47
    i16 414, label %47
    i16 415, label %47
    i16 416, label %47
    i16 417, label %47
    i16 418, label %47
    i16 419, label %47
    i16 420, label %47
    i16 421, label %47
    i16 422, label %47
    i16 423, label %47
    i16 424, label %47
    i16 425, label %47
    i16 426, label %47
    i16 427, label %47
    i16 428, label %47
    i16 429, label %47
    i16 430, label %47
    i16 431, label %47
    i16 432, label %47
    i16 433, label %47
    i16 514, label %47
  ]

47:                                               ; preds = %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35
  %48 = add nsw i32 %32, 1
  br label %49

49:                                               ; preds = %30, %35, %47, %2
  %50 = phi i32 [ 0, %2 ], [ %31, %30 ], [ %48, %47 ], [ %32, %35 ]
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %53 = icmp eq %"class.v8::internal::compiler::Node"* %52, null
  br i1 %53, label %93, label %85

54:                                               ; preds = %565, %28
  %55 = phi i32 [ 0, %28 ], [ %566, %565 ]
  %56 = phi %"class.v8::internal::compiler::Node"** [ %14, %28 ], [ %567, %565 ]
  %57 = phi i64 [ %29, %28 ], [ %568, %565 ]
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, 16777215
  %62 = zext i32 %61 to i64
  %63 = load i32*, i32** %20, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  store i32 %55, i32* %64, align 4
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 0
  %66 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %66, i64 0, i32 2
  %68 = load i16, i16* %67, align 8
  switch i16 %68, label %71 [
    i16 440, label %69
    i16 505, label %69
    i16 49, label %69
    i16 512, label %69
    i16 513, label %69
    i16 741, label %69
    i16 407, label %69
    i16 408, label %69
    i16 409, label %69
    i16 410, label %69
    i16 411, label %69
    i16 412, label %69
    i16 413, label %69
    i16 414, label %69
    i16 415, label %69
    i16 416, label %69
    i16 417, label %69
    i16 418, label %69
    i16 419, label %69
    i16 420, label %69
    i16 421, label %69
    i16 422, label %69
    i16 423, label %69
    i16 424, label %69
    i16 425, label %69
    i16 426, label %69
    i16 427, label %69
    i16 428, label %69
    i16 429, label %69
    i16 430, label %69
    i16 431, label %69
    i16 432, label %69
    i16 433, label %69
    i16 514, label %69
  ]

69:                                               ; preds = %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54
  %70 = add nsw i32 %55, 1
  br label %71

71:                                               ; preds = %54, %69
  %72 = phi i32 [ %70, %69 ], [ %55, %54 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, i64 1
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 16777215
  %78 = zext i32 %77 to i64
  %79 = load i32*, i32** %20, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %78
  store i32 %72, i32* %80, align 4
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 0
  %82 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %82, i64 0, i32 2
  %84 = load i16, i16* %83, align 8
  switch i16 %84, label %565 [
    i16 440, label %563
    i16 505, label %563
    i16 49, label %563
    i16 512, label %563
    i16 513, label %563
    i16 741, label %563
    i16 407, label %563
    i16 408, label %563
    i16 409, label %563
    i16 410, label %563
    i16 411, label %563
    i16 412, label %563
    i16 413, label %563
    i16 414, label %563
    i16 415, label %563
    i16 416, label %563
    i16 417, label %563
    i16 418, label %563
    i16 419, label %563
    i16 420, label %563
    i16 421, label %563
    i16 422, label %563
    i16 423, label %563
    i16 424, label %563
    i16 425, label %563
    i16 426, label %563
    i16 427, label %563
    i16 428, label %563
    i16 429, label %563
    i16 430, label %563
    i16 431, label %563
    i16 432, label %563
    i16 433, label %563
    i16 514, label %563
  ]

85:                                               ; preds = %49
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %52, i64 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 16777215
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 %89
  store i32 %50, i32* %92, align 4
  br label %93

93:                                               ; preds = %49, %85
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitControlEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::BasicBlock"* %1)
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 25
  %96 = load i8, i8* %95, align 8, !range !47
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %562

98:                                               ; preds = %93
  %99 = load i64, i64* %6, align 8
  %100 = load i64, i64* %8, align 8
  %101 = sub i64 %99, %100
  %102 = lshr exact i64 %101, 3
  %103 = trunc i64 %102 to i32
  %104 = icmp eq i32 %103, %12
  %105 = inttoptr i64 %99 to %"class.v8::internal::compiler::Instruction"**
  br i1 %104, label %150, label %106

106:                                              ; preds = %98
  %107 = inttoptr i64 %100 to %"class.v8::internal::compiler::Instruction"**
  %108 = shl i64 %10, 29
  %109 = ashr exact i64 %108, 32
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %107, i64 %109
  %111 = icmp eq %"class.v8::internal::compiler::Instruction"** %110, %105
  br i1 %111, label %125, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %105, i64 -1
  %114 = icmp ugt %"class.v8::internal::compiler::Instruction"** %113, %110
  br i1 %114, label %115, label %125

115:                                              ; preds = %112, %115
  %116 = phi %"class.v8::internal::compiler::Instruction"** [ %123, %115 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Instruction"** [ %122, %115 ], [ %110, %112 ]
  %118 = bitcast %"class.v8::internal::compiler::Instruction"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::compiler::Instruction"** %116 to i64*
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %118, align 8
  store i64 %119, i64* %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %117, i64 1
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %116, i64 -1
  %124 = icmp ult %"class.v8::internal::compiler::Instruction"** %122, %123
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %112, %106
  %126 = icmp eq %"class.v8::internal::compiler::Node"* %94, null
  br i1 %126, label %150, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 3
  %129 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %128, align 8
  %130 = icmp eq %"class.v8::internal::compiler::SourcePositionTable"* %129, null
  br i1 %130, label %150, label %131

131:                                              ; preds = %127
  %132 = tail call i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"* nonnull %129, %"class.v8::internal::compiler::Node"* nonnull %94) #12
  %133 = and i64 %132, 140737488355327
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %150, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %94, i64 0, i32 0
  %141 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %141, i64 0, i32 2
  %143 = load i16, i16* %142, align 8
  switch i16 %143, label %150 [
    i16 49, label %144
    i16 15, label %144
    i16 16, label %144
    i16 512, label %144
    i16 513, label %144
  ]

144:                                              ; preds = %139, %139, %139, %139, %139, %135
  %145 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %146 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %145, align 8
  %147 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %5, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %147, i64 -1
  %149 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %148, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence17SetSourcePositionEPKNS1_11InstructionENS0_14SourcePositionE(%"class.v8::internal::compiler::InstructionSequence"* %146, %"class.v8::internal::compiler::Instruction"* %149, i64 %132) #12
  br label %150

150:                                              ; preds = %98, %125, %127, %139, %144, %131
  %151 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %15, align 8, !noalias !48
  %152 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, align 8, !noalias !48
  %153 = icmp eq %"class.v8::internal::compiler::Node"** %151, %152
  br i1 %153, label %276, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 3
  %158 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 4
  %159 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 27
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  br label %162

162:                                              ; preds = %154, %274
  %163 = phi %"class.v8::internal::compiler::Node"** [ %151, %154 ], [ %164, %274 ]
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %165 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, align 8
  %166 = load i64, i64* %6, align 8
  %167 = load i64, i64* %8, align 8
  %168 = sub i64 %166, %167
  %169 = lshr exact i64 %168, 3
  %170 = trunc i64 %169 to i32
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %165, i64 0, i32 0
  %172 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %172, i64 0, i32 2
  %174 = load i16, i16* %173, align 8
  %175 = icmp eq i16 %174, 56
  br i1 %175, label %194, label %176

176:                                              ; preds = %162
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %172, i64 0, i32 3, i32 0
  %178 = load i8, i8* %177, align 2
  %179 = and i8 %178, 112
  %180 = icmp eq i8 %179, 112
  br i1 %180, label %181, label %194

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %165, i64 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 16777215
  %185 = zext i32 %184 to i64
  %186 = load i64*, i64** %155, align 8
  %187 = lshr i64 %185, 6
  %188 = getelementptr inbounds i64, i64* %186, i64 %187
  %189 = and i64 %185, 63
  %190 = shl i64 1, %189
  %191 = load i64, i64* %188, align 8
  %192 = and i64 %190, %191
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %258, label %194

194:                                              ; preds = %181, %176, %162
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %165, i64 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = and i32 %196, 16777215
  %198 = zext i32 %197 to i64
  %199 = load i64*, i64** %156, align 8
  %200 = lshr i64 %198, 6
  %201 = getelementptr inbounds i64, i64* %199, i64 %200
  %202 = and i64 %198, 63
  %203 = shl i64 1, %202
  %204 = load i64, i64* %201, align 8
  %205 = and i64 %203, %204
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %258

207:                                              ; preds = %194
  tail call void @_ZN2v88internal8compiler19InstructionSelector9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %165)
  %208 = load i8, i8* %95, align 8, !range !47
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %562

210:                                              ; preds = %207
  %211 = load i64, i64* %6, align 8
  %212 = load i64, i64* %8, align 8
  %213 = sub i64 %211, %212
  %214 = lshr exact i64 %213, 3
  %215 = trunc i64 %214 to i32
  %216 = icmp eq i32 %215, %170
  %217 = inttoptr i64 %211 to %"class.v8::internal::compiler::Instruction"**
  br i1 %216, label %258, label %218

218:                                              ; preds = %210
  %219 = inttoptr i64 %212 to %"class.v8::internal::compiler::Instruction"**
  %220 = shl i64 %168, 29
  %221 = ashr exact i64 %220, 32
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %219, i64 %221
  %223 = icmp eq %"class.v8::internal::compiler::Instruction"** %222, %217
  br i1 %223, label %237, label %224

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %217, i64 -1
  %226 = icmp ugt %"class.v8::internal::compiler::Instruction"** %225, %222
  br i1 %226, label %227, label %237

227:                                              ; preds = %224, %227
  %228 = phi %"class.v8::internal::compiler::Instruction"** [ %235, %227 ], [ %225, %224 ]
  %229 = phi %"class.v8::internal::compiler::Instruction"** [ %234, %227 ], [ %222, %224 ]
  %230 = bitcast %"class.v8::internal::compiler::Instruction"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::Instruction"** %228 to i64*
  %233 = load i64, i64* %232, align 8
  store i64 %233, i64* %230, align 8
  store i64 %231, i64* %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %229, i64 1
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %228, i64 -1
  %236 = icmp ult %"class.v8::internal::compiler::Instruction"** %234, %235
  br i1 %236, label %227, label %237

237:                                              ; preds = %227, %224, %218
  %238 = icmp eq %"class.v8::internal::compiler::Node"* %165, null
  br i1 %238, label %258, label %239

239:                                              ; preds = %237
  %240 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %157, align 8
  %241 = icmp eq %"class.v8::internal::compiler::SourcePositionTable"* %240, null
  br i1 %241, label %258, label %242

242:                                              ; preds = %239
  %243 = tail call i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"* nonnull %240, %"class.v8::internal::compiler::Node"* nonnull %165) #12
  %244 = and i64 %243, 140737488355327
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %258, label %246

246:                                              ; preds = %242
  %247 = load i32, i32* %158, align 8
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %253, label %249

249:                                              ; preds = %246
  %250 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %171, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %250, i64 0, i32 2
  %252 = load i16, i16* %251, align 8
  switch i16 %252, label %258 [
    i16 49, label %253
    i16 15, label %253
    i16 16, label %253
    i16 512, label %253
    i16 513, label %253
  ]

253:                                              ; preds = %249, %249, %249, %249, %249, %246
  %254 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %159, align 8
  %255 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %5, align 8
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %255, i64 -1
  %257 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %256, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence17SetSourcePositionEPKNS1_11InstructionENS0_14SourcePositionE(%"class.v8::internal::compiler::InstructionSequence"* %254, %"class.v8::internal::compiler::Instruction"* %257, i64 %243) #12
  br label %258

258:                                              ; preds = %181, %194, %242, %253, %249, %239, %237, %210
  %259 = load i32, i32* %160, align 8
  %260 = icmp eq i32 %259, 1
  br i1 %260, label %261, label %274

261:                                              ; preds = %258
  %262 = load i64, i64* %6, align 8
  %263 = load i64, i64* %8, align 8
  %264 = sub i64 %262, %263
  %265 = lshr exact i64 %264, 3
  %266 = trunc i64 %265 to i32
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %165, i64 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, 16777215
  %270 = zext i32 %269 to i64
  %271 = load %"struct.std::__1::pair.1394"*, %"struct.std::__1::pair.1394"** %161, align 8
  %272 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %271, i64 %270, i32 0
  store i32 %266, i32* %272, align 4
  %273 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %271, i64 %270, i32 1
  store i32 %170, i32* %273, align 4
  br label %274

274:                                              ; preds = %261, %258
  %275 = icmp eq %"class.v8::internal::compiler::Node"** %164, %152
  br i1 %275, label %276, label %162

276:                                              ; preds = %274, %150
  %277 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %278 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %277, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %278, i64 0, i32 2
  %282 = bitcast %"class.v8::internal::ZoneVector"** %281 to %"class.std::__1::vector.1182"**
  %283 = load %"class.std::__1::vector.1182"*, %"class.std::__1::vector.1182"** %282, align 8
  %284 = sext i32 %280 to i64
  %285 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %283, i64 0, i32 0, i32 1
  %286 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.std::__1::vector.1182"* %283 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = sub i64 %287, %289
  %291 = ashr exact i64 %290, 3
  %292 = icmp ugt i64 %291, %284
  br i1 %292, label %295, label %293

293:                                              ; preds = %276
  %294 = bitcast %"class.std::__1::vector.1182"* %283 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %294) #13
  unreachable

295:                                              ; preds = %276
  %296 = inttoptr i64 %289 to %"class.v8::internal::compiler::InstructionBlock"**
  %297 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %296, i64 %284
  %298 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %297, align 8
  %299 = load i64, i64* %6, align 8
  %300 = load i64, i64* %8, align 8
  %301 = sub i64 %299, %300
  %302 = lshr exact i64 %301, 3
  %303 = trunc i64 %302 to i32
  %304 = icmp eq i32 %303, %12
  br i1 %304, label %305, label %554

305:                                              ; preds = %295
  %306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %278, i64 0, i32 1
  %307 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %306, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %307, i64 0, i32 2
  %309 = load i64, i64* %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %307, i64 0, i32 3
  %311 = load i64, i64* %310, align 8
  %312 = sub i64 %311, %309
  %313 = icmp ult i64 %312, 48
  br i1 %313, label %314, label %316, !prof !2

314:                                              ; preds = %305
  %315 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %307, i64 48) #12
  br label %318

316:                                              ; preds = %305
  %317 = add i64 %309, 48
  store i64 %317, i64* %308, align 8
  br label %318

318:                                              ; preds = %314, %316
  %319 = phi i64 [ %315, %314 ], [ %309, %316 ]
  %320 = inttoptr i64 %319 to %"class.v8::internal::compiler::Instruction"*
  tail call void @_ZN2v88internal8compiler11InstructionC1EjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::Instruction"* %320, i32 15, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  %321 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %5, align 8
  %322 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %323 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %322, align 8
  %324 = icmp eq %"class.v8::internal::compiler::Instruction"** %321, %323
  %325 = ptrtoint %"class.v8::internal::compiler::Instruction"** %323 to i64
  br i1 %324, label %331, label %326

326:                                              ; preds = %318
  %327 = bitcast %"class.v8::internal::compiler::Instruction"** %321 to i64*
  store i64 %319, i64* %327, align 8
  %328 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %321, i64 1
  %329 = ptrtoint %"class.v8::internal::compiler::Instruction"** %328 to i64
  store i64 %329, i64* %6, align 8
  %330 = load i64, i64* %8, align 8
  br label %554

331:                                              ; preds = %318
  %332 = ptrtoint %"class.v8::internal::compiler::Instruction"** %321 to i64
  %333 = load i64, i64* %8, align 8
  %334 = sub i64 %332, %333
  %335 = ashr exact i64 %334, 3
  %336 = add nsw i64 %335, 1
  %337 = icmp ugt i64 %336, 268435455
  br i1 %337, label %338, label %340

338:                                              ; preds = %331
  %339 = bitcast %"class.std::__1::vector.1326"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %339) #13
  unreachable

340:                                              ; preds = %331
  %341 = bitcast %"class.v8::internal::compiler::Instruction"*** %322 to i64*
  %342 = sub i64 %325, %333
  %343 = ashr exact i64 %342, 3
  %344 = icmp ult i64 %343, 134217727
  br i1 %344, label %345, label %350

345:                                              ; preds = %340
  %346 = ashr exact i64 %342, 2
  %347 = icmp ult i64 %346, %336
  %348 = select i1 %347, i64 %336, i64 %346
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %368, label %350

350:                                              ; preds = %345, %340
  %351 = phi i64 [ %348, %345 ], [ 268435455, %340 ]
  %352 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %353 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %352, align 8
  %354 = shl i64 %351, 3
  %355 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 2
  %356 = load i64, i64* %355, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 3
  %358 = load i64, i64* %357, align 8
  %359 = sub i64 %358, %356
  %360 = icmp ugt i64 %354, %359
  br i1 %360, label %361, label %363, !prof !2

361:                                              ; preds = %350
  %362 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %353, i64 %354) #12
  br label %365

363:                                              ; preds = %350
  %364 = add i64 %356, %354
  store i64 %364, i64* %355, align 8
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i64 [ %362, %361 ], [ %356, %363 ]
  %367 = inttoptr i64 %366 to %"class.v8::internal::compiler::Instruction"**
  br label %368

368:                                              ; preds = %365, %345
  %369 = phi i64 [ %351, %365 ], [ 0, %345 ]
  %370 = phi %"class.v8::internal::compiler::Instruction"** [ %367, %365 ], [ null, %345 ]
  %371 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %370, i64 %335
  %372 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %370, i64 %369
  %373 = ptrtoint %"class.v8::internal::compiler::Instruction"** %372 to i64
  %374 = bitcast %"class.v8::internal::compiler::Instruction"** %371 to i64*
  store i64 %319, i64* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %371, i64 1
  %376 = ptrtoint %"class.v8::internal::compiler::Instruction"** %375 to i64
  %377 = getelementptr inbounds %"class.std::__1::vector.1326", %"class.std::__1::vector.1326"* %4, i64 0, i32 0, i32 0
  %378 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %377, align 8
  %379 = ptrtoint %"class.v8::internal::compiler::Instruction"** %378 to i64
  %380 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %5, align 8
  %381 = icmp eq %"class.v8::internal::compiler::Instruction"** %380, %378
  br i1 %381, label %551, label %382

382:                                              ; preds = %368
  %383 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -1
  %384 = ptrtoint %"class.v8::internal::compiler::Instruction"** %383 to i64
  %385 = sub i64 %384, %379
  %386 = lshr i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = icmp ult i64 %387, 4
  br i1 %388, label %481, label %389

389:                                              ; preds = %382
  %390 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -1
  %391 = ptrtoint %"class.v8::internal::compiler::Instruction"** %390 to i64
  %392 = sub i64 %391, %379
  %393 = lshr i64 %392, 3
  %394 = xor i64 %393, -1
  %395 = add nsw i64 %335, %394
  %396 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %370, i64 %395
  %397 = xor i64 %393, -1
  %398 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 %397
  %399 = icmp ult %"class.v8::internal::compiler::Instruction"** %396, %380
  %400 = icmp ult %"class.v8::internal::compiler::Instruction"** %398, %371
  %401 = and i1 %399, %400
  br i1 %401, label %481, label %402

402:                                              ; preds = %389
  %403 = and i64 %387, 4611686018427387900
  %404 = sub nsw i64 0, %403
  %405 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %371, i64 %404
  %406 = sub nsw i64 0, %403
  %407 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 %406
  %408 = add nsw i64 %403, -4
  %409 = lshr exact i64 %408, 2
  %410 = add nuw nsw i64 %409, 1
  %411 = and i64 %410, 1
  %412 = icmp eq i64 %408, 0
  br i1 %412, label %459, label %413

413:                                              ; preds = %402
  %414 = sub nuw nsw i64 %410, %411
  %415 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %371, i64 -1
  %416 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -1
  %417 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %371, i64 -1
  %418 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -1
  br label %419

419:                                              ; preds = %419, %413
  %420 = phi i64 [ 0, %413 ], [ %454, %419 ]
  %421 = phi i64 [ %414, %413 ], [ %455, %419 ]
  %422 = sub i64 0, %420
  %423 = sub i64 0, %420
  %424 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %415, i64 %422
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %416, i64 %423
  %426 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %425, i64 -1
  %427 = bitcast %"class.v8::internal::compiler::Instruction"** %426 to <2 x i64>*
  %428 = load <2 x i64>, <2 x i64>* %427, align 8, !alias.scope !51
  %429 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %425, i64 -2
  %430 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %429, i64 -1
  %431 = bitcast %"class.v8::internal::compiler::Instruction"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !51
  %433 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %424, i64 -1
  %434 = bitcast %"class.v8::internal::compiler::Instruction"** %433 to <2 x i64>*
  store <2 x i64> %428, <2 x i64>* %434, align 8, !alias.scope !54, !noalias !51
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %424, i64 -2
  %436 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %435, i64 -1
  %437 = bitcast %"class.v8::internal::compiler::Instruction"** %436 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %437, align 8, !alias.scope !54, !noalias !51
  %438 = sub nuw nsw i64 -4, %420
  %439 = sub nuw nsw i64 -4, %420
  %440 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %417, i64 %438
  %441 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %418, i64 %439
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %441, i64 -1
  %443 = bitcast %"class.v8::internal::compiler::Instruction"** %442 to <2 x i64>*
  %444 = load <2 x i64>, <2 x i64>* %443, align 8, !alias.scope !51
  %445 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %441, i64 -2
  %446 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %445, i64 -1
  %447 = bitcast %"class.v8::internal::compiler::Instruction"** %446 to <2 x i64>*
  %448 = load <2 x i64>, <2 x i64>* %447, align 8, !alias.scope !51
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %440, i64 -1
  %450 = bitcast %"class.v8::internal::compiler::Instruction"** %449 to <2 x i64>*
  store <2 x i64> %444, <2 x i64>* %450, align 8, !alias.scope !54, !noalias !51
  %451 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %440, i64 -2
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %451, i64 -1
  %453 = bitcast %"class.v8::internal::compiler::Instruction"** %452 to <2 x i64>*
  store <2 x i64> %448, <2 x i64>* %453, align 8, !alias.scope !54, !noalias !51
  %454 = add i64 %420, 8
  %455 = add i64 %421, -2
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %419, !llvm.loop !56

457:                                              ; preds = %419
  %458 = sub nuw nsw i64 -8, %420
  br label %459

459:                                              ; preds = %457, %402
  %460 = phi i64 [ 0, %402 ], [ %458, %457 ]
  %461 = icmp eq i64 %411, 0
  br i1 %461, label %479, label %462

462:                                              ; preds = %459
  %463 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %371, i64 -1
  %464 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %380, i64 -1
  %465 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %463, i64 %460
  %466 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %464, i64 %460
  %467 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %466, i64 -1
  %468 = bitcast %"class.v8::internal::compiler::Instruction"** %467 to <2 x i64>*
  %469 = load <2 x i64>, <2 x i64>* %468, align 8, !alias.scope !51
  %470 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %466, i64 -2
  %471 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %470, i64 -1
  %472 = bitcast %"class.v8::internal::compiler::Instruction"** %471 to <2 x i64>*
  %473 = load <2 x i64>, <2 x i64>* %472, align 8, !alias.scope !51
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %465, i64 -1
  %475 = bitcast %"class.v8::internal::compiler::Instruction"** %474 to <2 x i64>*
  store <2 x i64> %469, <2 x i64>* %475, align 8, !alias.scope !54, !noalias !51
  %476 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %465, i64 -2
  %477 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %476, i64 -1
  %478 = bitcast %"class.v8::internal::compiler::Instruction"** %477 to <2 x i64>*
  store <2 x i64> %473, <2 x i64>* %478, align 8, !alias.scope !54, !noalias !51
  br label %479

479:                                              ; preds = %459, %462
  %480 = icmp eq i64 %387, %403
  br i1 %480, label %551, label %481

481:                                              ; preds = %479, %389, %382
  %482 = phi %"class.v8::internal::compiler::Instruction"** [ %371, %389 ], [ %371, %382 ], [ %405, %479 ]
  %483 = phi %"class.v8::internal::compiler::Instruction"** [ %380, %389 ], [ %380, %382 ], [ %407, %479 ]
  %484 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %483, i64 -1
  %485 = ptrtoint %"class.v8::internal::compiler::Instruction"** %484 to i64
  %486 = sub i64 %485, %379
  %487 = lshr i64 %486, 3
  %488 = add nuw nsw i64 %487, 1
  %489 = and i64 %488, 7
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %502, label %491

491:                                              ; preds = %481, %491
  %492 = phi %"class.v8::internal::compiler::Instruction"** [ %495, %491 ], [ %482, %481 ]
  %493 = phi %"class.v8::internal::compiler::Instruction"** [ %496, %491 ], [ %483, %481 ]
  %494 = phi i64 [ %500, %491 ], [ %489, %481 ]
  %495 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %492, i64 -1
  %496 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %493, i64 -1
  %497 = bitcast %"class.v8::internal::compiler::Instruction"** %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = bitcast %"class.v8::internal::compiler::Instruction"** %495 to i64*
  store i64 %498, i64* %499, align 8
  %500 = add i64 %494, -1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %491, !llvm.loop !57

502:                                              ; preds = %491, %481
  %503 = phi %"class.v8::internal::compiler::Instruction"** [ undef, %481 ], [ %495, %491 ]
  %504 = phi %"class.v8::internal::compiler::Instruction"** [ %482, %481 ], [ %495, %491 ]
  %505 = phi %"class.v8::internal::compiler::Instruction"** [ %483, %481 ], [ %496, %491 ]
  %506 = icmp ult i64 %486, 56
  br i1 %506, label %551, label %507

507:                                              ; preds = %502, %507
  %508 = phi %"class.v8::internal::compiler::Instruction"** [ %545, %507 ], [ %504, %502 ]
  %509 = phi %"class.v8::internal::compiler::Instruction"** [ %546, %507 ], [ %505, %502 ]
  %510 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -1
  %511 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -1
  %512 = bitcast %"class.v8::internal::compiler::Instruction"** %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = bitcast %"class.v8::internal::compiler::Instruction"** %510 to i64*
  store i64 %513, i64* %514, align 8
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -2
  %516 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -2
  %517 = bitcast %"class.v8::internal::compiler::Instruction"** %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = bitcast %"class.v8::internal::compiler::Instruction"** %515 to i64*
  store i64 %518, i64* %519, align 8
  %520 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -3
  %521 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -3
  %522 = bitcast %"class.v8::internal::compiler::Instruction"** %521 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = bitcast %"class.v8::internal::compiler::Instruction"** %520 to i64*
  store i64 %523, i64* %524, align 8
  %525 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -4
  %526 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -4
  %527 = bitcast %"class.v8::internal::compiler::Instruction"** %526 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = bitcast %"class.v8::internal::compiler::Instruction"** %525 to i64*
  store i64 %528, i64* %529, align 8
  %530 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -5
  %531 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -5
  %532 = bitcast %"class.v8::internal::compiler::Instruction"** %531 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = bitcast %"class.v8::internal::compiler::Instruction"** %530 to i64*
  store i64 %533, i64* %534, align 8
  %535 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -6
  %536 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -6
  %537 = bitcast %"class.v8::internal::compiler::Instruction"** %536 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = bitcast %"class.v8::internal::compiler::Instruction"** %535 to i64*
  store i64 %538, i64* %539, align 8
  %540 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -7
  %541 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -7
  %542 = bitcast %"class.v8::internal::compiler::Instruction"** %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = bitcast %"class.v8::internal::compiler::Instruction"** %540 to i64*
  store i64 %543, i64* %544, align 8
  %545 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %508, i64 -8
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %509, i64 -8
  %547 = bitcast %"class.v8::internal::compiler::Instruction"** %546 to i64*
  %548 = load i64, i64* %547, align 8
  %549 = bitcast %"class.v8::internal::compiler::Instruction"** %545 to i64*
  store i64 %548, i64* %549, align 8
  %550 = icmp eq %"class.v8::internal::compiler::Instruction"** %546, %378
  br i1 %550, label %551, label %507, !llvm.loop !58

551:                                              ; preds = %502, %507, %479, %368
  %552 = phi %"class.v8::internal::compiler::Instruction"** [ %371, %368 ], [ %405, %479 ], [ %503, %502 ], [ %545, %507 ]
  %553 = ptrtoint %"class.v8::internal::compiler::Instruction"** %552 to i64
  store i64 %553, i64* %8, align 8
  store i64 %376, i64* %6, align 8
  store i64 %373, i64* %341, align 8
  br label %554

554:                                              ; preds = %551, %326, %295
  %555 = phi i64 [ %553, %551 ], [ %330, %326 ], [ %300, %295 ]
  %556 = phi i64 [ %376, %551 ], [ %329, %326 ], [ %299, %295 ]
  %557 = sub i64 %556, %555
  %558 = lshr exact i64 %557, 3
  %559 = trunc i64 %558 to i32
  %560 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %298, i64 0, i32 8
  store i32 %559, i32* %560, align 4
  %561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %298, i64 0, i32 9
  store i32 %12, i32* %561, align 8
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  br label %562

562:                                              ; preds = %207, %93, %554
  ret void

563:                                              ; preds = %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71
  %564 = add nsw i32 %72, 1
  br label %565

565:                                              ; preds = %563, %71
  %566 = phi i32 [ %564, %563 ], [ %72, %71 ]
  %567 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, i64 2
  %568 = add i64 %57, -2
  %569 = icmp eq i64 %568, 0
  br i1 %569, label %30, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector18UpdateRenamesInPhiEPNS1_14PhiInstructionE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::PhiInstruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %1, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1194"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.1194"* %11 to i64*
  br label %16

15:                                               ; preds = %41, %2
  ret void

16:                                               ; preds = %10, %41
  %17 = phi i64 [ %8, %10 ], [ %42, %41 ]
  %18 = phi i64 [ %6, %10 ], [ %43, %41 ]
  %19 = phi i64 [ 0, %10 ], [ %44, %41 ]
  %20 = inttoptr i64 %17 to i32*
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  %22 = load i32, i32* %21, align 4
  %23 = load i64, i64* %13, align 8
  %24 = load i64, i64* %14, align 8
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 2
  %27 = inttoptr i64 %24 to i32*
  br label %28

28:                                               ; preds = %32, %16
  %29 = phi i32 [ %22, %16 ], [ %34, %32 ]
  %30 = sext i32 %29 to i64
  %31 = icmp ugt i64 %26, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds i32, i32* %27, i64 %30
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %28

36:                                               ; preds = %28, %32
  %37 = icmp eq i32 %22, %29
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  tail call void @_ZN2v88internal8compiler14PhiInstruction11RenameInputEmi(%"class.v8::internal::compiler::PhiInstruction"* %1, i64 %19, i32 %29) #12
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %7, align 8
  br label %41

41:                                               ; preds = %36, %38
  %42 = phi i64 [ %17, %36 ], [ %40, %38 ]
  %43 = phi i64 [ %18, %36 ], [ %39, %38 ]
  %44 = add nuw i64 %19, 1
  %45 = sub i64 %43, %42
  %46 = ashr exact i64 %45, 2
  %47 = icmp ult i64 %44, %46
  br i1 %47, label %16, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  %10 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %9, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"* %10, i32 %1) #12
  br label %14

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"* %13, i32 %1) #12
  br label %14

14:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector13UpdateRenamesEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Instruction"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16776960
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = bitcast %"class.std::__1::vector.1194"* %8 to i64*
  br label %13

12:                                               ; preds = %47, %2
  ret void

13:                                               ; preds = %7, %47
  %14 = phi i32 [ %4, %7 ], [ %48, %47 ]
  %15 = phi i64 [ 0, %7 ], [ %49, %47 ]
  %16 = and i32 %14, 255
  %17 = zext i32 %16 to i64
  %18 = add nuw i64 %15, %17
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %1, i64 0, i32 5, i64 %18, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %47

23:                                               ; preds = %13
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  %26 = load i64, i64* %10, align 8
  %27 = load i64, i64* %11, align 8
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 2
  %30 = inttoptr i64 %27 to i32*
  br label %31

31:                                               ; preds = %35, %23
  %32 = phi i32 [ %25, %23 ], [ %37, %35 ]
  %33 = sext i32 %32 to i64
  %34 = icmp ugt i64 %29, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds i32, i32* %30, i64 %33
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %31

39:                                               ; preds = %35, %31
  %40 = icmp eq i32 %32, %25
  br i1 %40, label %47, label %41

41:                                               ; preds = %39
  %42 = and i64 %20, -34359738361
  %43 = zext i32 %32 to i64
  %44 = shl nuw nsw i64 %43, 3
  %45 = or i64 %44, %42
  store i64 %45, i64* %19, align 8
  %46 = load i32, i32* %3, align 4
  br label %47

47:                                               ; preds = %13, %39, %41
  %48 = phi i32 [ %14, %13 ], [ %14, %39 ], [ %46, %41 ]
  %49 = add nuw nsw i64 %15, 1
  %50 = lshr i32 %48, 8
  %51 = and i32 %50, 65535
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %13, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  %10 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %9, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %10, %"class.v8::internal::compiler::Instruction"* %1) #12
  br label %15

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %13, %"class.v8::internal::compiler::Instruction"* %1) #12
  br label %15

15:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector13AddTerminatorEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  %10 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %9, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler13AddTerminatorEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"* %10, %"class.v8::internal::compiler::Instruction"* %1) #12
  br label %15

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"* %13, %"class.v8::internal::compiler::Instruction"* %1) #12
  br label %15

15:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() #12
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 17
  %10 = load %"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::InstructionScheduler"** %9, align 8
  tail call void @_ZN2v88internal8compiler20InstructionScheduler8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"* %10, i32 %1) #12
  br label %14

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSequence8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"* %13, i32 %1) #12
  br label %14

14:                                               ; preds = %11, %8
  ret void
}

declare void @_ZN2v88internal8compiler20InstructionScheduler10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSequence10StartBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler20InstructionScheduler8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionScheduler"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSequence8EndBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler20InstructionScheduler13AddTerminatorEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #3

declare i32 @_ZN2v88internal8compiler19InstructionSequence14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler20InstructionScheduler14AddInstructionEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandEmPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %6, i64 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = and i64 %2, 7
  %9 = icmp ne i64 %8, 0
  %10 = zext i1 %9 to i64
  %11 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %10, %"class.v8::internal::compiler::InstructionOperand"* nonnull %6, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %3, %"class.v8::internal::compiler::InstructionOperand"* %4)
  ret %"class.v8::internal::compiler::Instruction"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, %"class.v8::internal::compiler::InstructionOperand"*, i64, %"class.v8::internal::compiler::InstructionOperand"*, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %9 = icmp ugt i64 %2, 254
  %10 = icmp ugt i64 %4, 65534
  %11 = or i1 %9, %10
  %12 = icmp ugt i64 %6, 62
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 25
  store i8 1, i8* %15, align 8
  br label %282

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 1
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %21 = trunc i64 %4 to i32
  %22 = icmp ult i32 %21, 65536
  br i1 %22, label %24, label %23, !prof !59

23:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %16
  %25 = add nuw nsw i64 %4, %2
  %26 = add nuw nsw i64 %25, %6
  %27 = icmp eq i64 %26, 0
  %28 = shl i64 %26, 35
  %29 = add nuw nsw i64 %28, 171798691840
  %30 = ashr exact i64 %29, 32
  %31 = select i1 %27, i64 48, i64 %30
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %33
  %37 = icmp ugt i64 %31, %36
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %24
  %39 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %31) #12
  br label %42

40:                                               ; preds = %24
  %41 = add i64 %33, %31
  store i64 %41, i64* %32, align 8
  br label %42

42:                                               ; preds = %38, %40
  %43 = phi i64 [ %39, %38 ], [ %33, %40 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::Instruction"*
  tail call void @_ZN2v88internal8compiler11InstructionC1EjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::Instruction"* %44, i32 %1, i64 %2, %"class.v8::internal::compiler::InstructionOperand"* %3, i64 %4, %"class.v8::internal::compiler::InstructionOperand"* %5, i64 %6, %"class.v8::internal::compiler::InstructionOperand"* %7) #12
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %47 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %48, align 8
  %50 = icmp eq %"class.v8::internal::compiler::Instruction"** %47, %49
  %51 = ptrtoint %"class.v8::internal::compiler::Instruction"** %49 to i64
  br i1 %50, label %57, label %52

52:                                               ; preds = %42
  %53 = bitcast %"class.v8::internal::compiler::Instruction"** %47 to i64*
  store i64 %43, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %47, i64 1
  %55 = ptrtoint %"class.v8::internal::compiler::Instruction"** %54 to i64
  %56 = bitcast %"class.v8::internal::compiler::Instruction"*** %46 to i64*
  store i64 %55, i64* %56, align 8
  br label %282

57:                                               ; preds = %42
  %58 = ptrtoint %"class.v8::internal::compiler::Instruction"** %47 to i64
  %59 = bitcast %"class.v8::internal::compiler::Instruction"*** %46 to i64*
  %60 = bitcast %"class.std::__1::vector.1326"* %45 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %58, %61
  %63 = ashr exact i64 %62, 3
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 268435455
  br i1 %65, label %66, label %68

66:                                               ; preds = %57
  %67 = bitcast %"class.std::__1::vector.1326"* %45 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #13
  unreachable

68:                                               ; preds = %57
  %69 = bitcast %"class.v8::internal::compiler::Instruction"*** %48 to i64*
  %70 = sub i64 %51, %61
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 134217727
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = ashr exact i64 %70, 2
  %75 = icmp ult i64 %74, %64
  %76 = select i1 %75, i64 %64, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %73, %68
  %79 = phi i64 [ %76, %73 ], [ 268435455, %68 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %81 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %80, align 8
  %82 = shl i64 %79, 3
  %83 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %86, %84
  %88 = icmp ugt i64 %82, %87
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %78
  %90 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %81, i64 %82) #12
  br label %93

91:                                               ; preds = %78
  %92 = add i64 %84, %82
  store i64 %92, i64* %83, align 8
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi i64 [ %90, %89 ], [ %84, %91 ]
  %95 = inttoptr i64 %94 to %"class.v8::internal::compiler::Instruction"**
  br label %96

96:                                               ; preds = %93, %73
  %97 = phi i64 [ %79, %93 ], [ 0, %73 ]
  %98 = phi %"class.v8::internal::compiler::Instruction"** [ %95, %93 ], [ null, %73 ]
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %98, i64 %63
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %98, i64 %97
  %101 = ptrtoint %"class.v8::internal::compiler::Instruction"** %100 to i64
  %102 = bitcast %"class.v8::internal::compiler::Instruction"** %99 to i64*
  store i64 %43, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, i64 1
  %104 = ptrtoint %"class.v8::internal::compiler::Instruction"** %103 to i64
  %105 = getelementptr inbounds %"class.std::__1::vector.1326", %"class.std::__1::vector.1326"* %45, i64 0, i32 0, i32 0
  %106 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %105, align 8
  %107 = ptrtoint %"class.v8::internal::compiler::Instruction"** %106 to i64
  %108 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %46, align 8
  %109 = icmp eq %"class.v8::internal::compiler::Instruction"** %108, %106
  br i1 %109, label %279, label %110

110:                                              ; preds = %96
  %111 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 -1
  %112 = ptrtoint %"class.v8::internal::compiler::Instruction"** %111 to i64
  %113 = sub i64 %112, %107
  %114 = lshr i64 %113, 3
  %115 = add nuw nsw i64 %114, 1
  %116 = icmp ult i64 %115, 4
  br i1 %116, label %209, label %117

117:                                              ; preds = %110
  %118 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 -1
  %119 = ptrtoint %"class.v8::internal::compiler::Instruction"** %118 to i64
  %120 = sub i64 %119, %107
  %121 = lshr i64 %120, 3
  %122 = xor i64 %121, -1
  %123 = add nsw i64 %63, %122
  %124 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %98, i64 %123
  %125 = xor i64 %121, -1
  %126 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 %125
  %127 = icmp ult %"class.v8::internal::compiler::Instruction"** %124, %108
  %128 = icmp ult %"class.v8::internal::compiler::Instruction"** %126, %99
  %129 = and i1 %127, %128
  br i1 %129, label %209, label %130

130:                                              ; preds = %117
  %131 = and i64 %115, 4611686018427387900
  %132 = sub nsw i64 0, %131
  %133 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, i64 %132
  %134 = sub nsw i64 0, %131
  %135 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 %134
  %136 = add nsw i64 %131, -4
  %137 = lshr exact i64 %136, 2
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %136, 0
  br i1 %140, label %187, label %141

141:                                              ; preds = %130
  %142 = sub nuw nsw i64 %138, %139
  %143 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, i64 -1
  %144 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 -1
  %145 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, i64 -1
  %146 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 -1
  br label %147

147:                                              ; preds = %147, %141
  %148 = phi i64 [ 0, %141 ], [ %182, %147 ]
  %149 = phi i64 [ %142, %141 ], [ %183, %147 ]
  %150 = sub i64 0, %148
  %151 = sub i64 0, %148
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %143, i64 %150
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %144, i64 %151
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Instruction"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !60
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::Instruction"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !60
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Instruction"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !63, !noalias !60
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Instruction"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !63, !noalias !60
  %166 = sub nuw nsw i64 -4, %148
  %167 = sub nuw nsw i64 -4, %148
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %145, i64 %166
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %146, i64 %167
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %169, i64 -1
  %171 = bitcast %"class.v8::internal::compiler::Instruction"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !60
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %169, i64 -2
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %173, i64 -1
  %175 = bitcast %"class.v8::internal::compiler::Instruction"** %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8, !alias.scope !60
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %168, i64 -1
  %178 = bitcast %"class.v8::internal::compiler::Instruction"** %177 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %178, align 8, !alias.scope !63, !noalias !60
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %168, i64 -2
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %179, i64 -1
  %181 = bitcast %"class.v8::internal::compiler::Instruction"** %180 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %181, align 8, !alias.scope !63, !noalias !60
  %182 = add i64 %148, 8
  %183 = add i64 %149, -2
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %147, !llvm.loop !65

185:                                              ; preds = %147
  %186 = sub nuw nsw i64 -8, %148
  br label %187

187:                                              ; preds = %185, %130
  %188 = phi i64 [ 0, %130 ], [ %186, %185 ]
  %189 = icmp eq i64 %139, 0
  br i1 %189, label %207, label %190

190:                                              ; preds = %187
  %191 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, i64 -1
  %192 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, i64 -1
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %191, i64 %188
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %192, i64 %188
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %194, i64 -1
  %196 = bitcast %"class.v8::internal::compiler::Instruction"** %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !60
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %194, i64 -2
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %198, i64 -1
  %200 = bitcast %"class.v8::internal::compiler::Instruction"** %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8, !alias.scope !60
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %193, i64 -1
  %203 = bitcast %"class.v8::internal::compiler::Instruction"** %202 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %203, align 8, !alias.scope !63, !noalias !60
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %193, i64 -2
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %204, i64 -1
  %206 = bitcast %"class.v8::internal::compiler::Instruction"** %205 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %206, align 8, !alias.scope !63, !noalias !60
  br label %207

207:                                              ; preds = %187, %190
  %208 = icmp eq i64 %115, %131
  br i1 %208, label %279, label %209

209:                                              ; preds = %207, %117, %110
  %210 = phi %"class.v8::internal::compiler::Instruction"** [ %99, %117 ], [ %99, %110 ], [ %133, %207 ]
  %211 = phi %"class.v8::internal::compiler::Instruction"** [ %108, %117 ], [ %108, %110 ], [ %135, %207 ]
  %212 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %211, i64 -1
  %213 = ptrtoint %"class.v8::internal::compiler::Instruction"** %212 to i64
  %214 = sub i64 %213, %107
  %215 = lshr i64 %214, 3
  %216 = add nuw nsw i64 %215, 1
  %217 = and i64 %216, 7
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %219
  %220 = phi %"class.v8::internal::compiler::Instruction"** [ %223, %219 ], [ %210, %209 ]
  %221 = phi %"class.v8::internal::compiler::Instruction"** [ %224, %219 ], [ %211, %209 ]
  %222 = phi i64 [ %228, %219 ], [ %217, %209 ]
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %220, i64 -1
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %221, i64 -1
  %225 = bitcast %"class.v8::internal::compiler::Instruction"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::Instruction"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = add i64 %222, -1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %219, !llvm.loop !66

230:                                              ; preds = %219, %209
  %231 = phi %"class.v8::internal::compiler::Instruction"** [ undef, %209 ], [ %223, %219 ]
  %232 = phi %"class.v8::internal::compiler::Instruction"** [ %210, %209 ], [ %223, %219 ]
  %233 = phi %"class.v8::internal::compiler::Instruction"** [ %211, %209 ], [ %224, %219 ]
  %234 = icmp ult i64 %214, 56
  br i1 %234, label %279, label %235

235:                                              ; preds = %230, %235
  %236 = phi %"class.v8::internal::compiler::Instruction"** [ %273, %235 ], [ %232, %230 ]
  %237 = phi %"class.v8::internal::compiler::Instruction"** [ %274, %235 ], [ %233, %230 ]
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -1
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -1
  %240 = bitcast %"class.v8::internal::compiler::Instruction"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::Instruction"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -2
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -2
  %245 = bitcast %"class.v8::internal::compiler::Instruction"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::Instruction"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -3
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -3
  %250 = bitcast %"class.v8::internal::compiler::Instruction"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.v8::internal::compiler::Instruction"** %248 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -4
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -4
  %255 = bitcast %"class.v8::internal::compiler::Instruction"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.v8::internal::compiler::Instruction"** %253 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -5
  %259 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -5
  %260 = bitcast %"class.v8::internal::compiler::Instruction"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.v8::internal::compiler::Instruction"** %258 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -6
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -6
  %265 = bitcast %"class.v8::internal::compiler::Instruction"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.v8::internal::compiler::Instruction"** %263 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -7
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -7
  %270 = bitcast %"class.v8::internal::compiler::Instruction"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.v8::internal::compiler::Instruction"** %268 to i64*
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %236, i64 -8
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %237, i64 -8
  %275 = bitcast %"class.v8::internal::compiler::Instruction"** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.v8::internal::compiler::Instruction"** %273 to i64*
  store i64 %276, i64* %277, align 8
  %278 = icmp eq %"class.v8::internal::compiler::Instruction"** %274, %106
  br i1 %278, label %279, label %235, !llvm.loop !67

279:                                              ; preds = %230, %235, %207, %96
  %280 = phi %"class.v8::internal::compiler::Instruction"** [ %99, %96 ], [ %133, %207 ], [ %231, %230 ], [ %273, %235 ]
  %281 = ptrtoint %"class.v8::internal::compiler::Instruction"** %280 to i64
  store i64 %281, i64* %60, align 8
  store i64 %104, i64* %59, align 8
  store i64 %101, i64* %69, align 8
  br label %282

282:                                              ; preds = %279, %52, %14
  %283 = phi %"class.v8::internal::compiler::Instruction"* [ null, %14 ], [ %44, %52 ], [ %44, %279 ]
  ret %"class.v8::internal::compiler::Instruction"* %283
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandES3_mPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %8 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %8, i64 0, i32 0
  store i64 %3, i64* %10, align 8
  %11 = and i64 %2, 7
  %12 = icmp ne i64 %11, 0
  %13 = zext i1 %12 to i64
  %14 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %13, %"class.v8::internal::compiler::InstructionOperand"* nonnull %7, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %8, i64 %4, %"class.v8::internal::compiler::InstructionOperand"* %5)
  ret %"class.v8::internal::compiler::Instruction"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandES3_S3_mPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %9 = alloca [2 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %8, i64 0, i32 0
  store i64 %2, i64* %10, align 8
  %11 = and i64 %2, 7
  %12 = icmp ne i64 %11, 0
  %13 = zext i1 %12 to i64
  %14 = bitcast [2 x %"class.v8::internal::compiler::InstructionOperand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds [2 x %"class.v8::internal::compiler::InstructionOperand"], [2 x %"class.v8::internal::compiler::InstructionOperand"]* %9, i64 0, i64 0, i32 0
  store i64 %3, i64* %15, align 16
  %16 = getelementptr inbounds [2 x %"class.v8::internal::compiler::InstructionOperand"], [2 x %"class.v8::internal::compiler::InstructionOperand"]* %9, i64 0, i64 1, i32 0
  store i64 %4, i64* %16, align 8
  %17 = getelementptr inbounds [2 x %"class.v8::internal::compiler::InstructionOperand"], [2 x %"class.v8::internal::compiler::InstructionOperand"]* %9, i64 0, i64 0
  %18 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %13, %"class.v8::internal::compiler::InstructionOperand"* nonnull %8, i64 2, %"class.v8::internal::compiler::InstructionOperand"* nonnull %17, i64 %5, %"class.v8::internal::compiler::InstructionOperand"* %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  ret %"class.v8::internal::compiler::Instruction"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandES3_S3_S3_mPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %10 = alloca [3 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %9, i64 0, i32 0
  store i64 %2, i64* %11, align 8
  %12 = and i64 %2, 7
  %13 = icmp ne i64 %12, 0
  %14 = zext i1 %13 to i64
  %15 = bitcast [3 x %"class.v8::internal::compiler::InstructionOperand"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %10, i64 0, i64 0, i32 0
  store i64 %3, i64* %16, align 16
  %17 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %10, i64 0, i64 1, i32 0
  store i64 %4, i64* %17, align 8
  %18 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %10, i64 0, i64 2, i32 0
  store i64 %5, i64* %18, align 16
  %19 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %10, i64 0, i64 0
  %20 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %14, %"class.v8::internal::compiler::InstructionOperand"* nonnull %9, i64 3, %"class.v8::internal::compiler::InstructionOperand"* nonnull %19, i64 %6, %"class.v8::internal::compiler::InstructionOperand"* %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  ret %"class.v8::internal::compiler::Instruction"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandES3_S3_S3_S3_mPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, i64, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %11 = alloca [4 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %10, i64 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = and i64 %2, 7
  %14 = icmp ne i64 %13, 0
  %15 = zext i1 %14 to i64
  %16 = bitcast [4 x %"class.v8::internal::compiler::InstructionOperand"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #12
  %17 = getelementptr inbounds [4 x %"class.v8::internal::compiler::InstructionOperand"], [4 x %"class.v8::internal::compiler::InstructionOperand"]* %11, i64 0, i64 0, i32 0
  store i64 %3, i64* %17, align 16
  %18 = getelementptr inbounds [4 x %"class.v8::internal::compiler::InstructionOperand"], [4 x %"class.v8::internal::compiler::InstructionOperand"]* %11, i64 0, i64 1, i32 0
  store i64 %4, i64* %18, align 8
  %19 = getelementptr inbounds [4 x %"class.v8::internal::compiler::InstructionOperand"], [4 x %"class.v8::internal::compiler::InstructionOperand"]* %11, i64 0, i64 2, i32 0
  store i64 %5, i64* %19, align 16
  %20 = getelementptr inbounds [4 x %"class.v8::internal::compiler::InstructionOperand"], [4 x %"class.v8::internal::compiler::InstructionOperand"]* %11, i64 0, i64 3, i32 0
  store i64 %6, i64* %20, align 8
  %21 = getelementptr inbounds [4 x %"class.v8::internal::compiler::InstructionOperand"], [4 x %"class.v8::internal::compiler::InstructionOperand"]* %11, i64 0, i64 0
  %22 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %15, %"class.v8::internal::compiler::InstructionOperand"* nonnull %10, i64 4, %"class.v8::internal::compiler::InstructionOperand"* nonnull %21, i64 %7, %"class.v8::internal::compiler::InstructionOperand"* %8)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #12
  ret %"class.v8::internal::compiler::Instruction"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandES3_S3_S3_S3_S3_mPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, i64, i64, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %12 = alloca [5 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %11, i64 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = and i64 %2, 7
  %15 = icmp ne i64 %14, 0
  %16 = zext i1 %15 to i64
  %17 = bitcast [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #12
  %18 = getelementptr inbounds [5 x %"class.v8::internal::compiler::InstructionOperand"], [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12, i64 0, i64 0, i32 0
  store i64 %3, i64* %18, align 16
  %19 = getelementptr inbounds [5 x %"class.v8::internal::compiler::InstructionOperand"], [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12, i64 0, i64 1, i32 0
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds [5 x %"class.v8::internal::compiler::InstructionOperand"], [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12, i64 0, i64 2, i32 0
  store i64 %5, i64* %20, align 16
  %21 = getelementptr inbounds [5 x %"class.v8::internal::compiler::InstructionOperand"], [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12, i64 0, i64 3, i32 0
  store i64 %6, i64* %21, align 8
  %22 = getelementptr inbounds [5 x %"class.v8::internal::compiler::InstructionOperand"], [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12, i64 0, i64 4, i32 0
  store i64 %7, i64* %22, align 16
  %23 = getelementptr inbounds [5 x %"class.v8::internal::compiler::InstructionOperand"], [5 x %"class.v8::internal::compiler::InstructionOperand"]* %12, i64 0, i64 0
  %24 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %16, %"class.v8::internal::compiler::InstructionOperand"* nonnull %11, i64 5, %"class.v8::internal::compiler::InstructionOperand"* nonnull %23, i64 %8, %"class.v8::internal::compiler::InstructionOperand"* %9)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #12
  ret %"class.v8::internal::compiler::Instruction"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjNS1_18InstructionOperandES3_S3_S3_S3_S3_S3_mPS3_(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, i64, i64, i64, i64, i64, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %13 = alloca [6 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %12, i64 0, i32 0
  store i64 %2, i64* %14, align 8
  %15 = and i64 %2, 7
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = bitcast [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #12
  %19 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 0, i32 0
  store i64 %3, i64* %19, align 16
  %20 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 1, i32 0
  store i64 %4, i64* %20, align 8
  %21 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 2, i32 0
  store i64 %5, i64* %21, align 16
  %22 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 3, i32 0
  store i64 %6, i64* %22, align 8
  %23 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 4, i32 0
  store i64 %7, i64* %23, align 16
  %24 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 5, i32 0
  store i64 %8, i64* %24, align 8
  %25 = getelementptr inbounds [6 x %"class.v8::internal::compiler::InstructionOperand"], [6 x %"class.v8::internal::compiler::InstructionOperand"]* %13, i64 0, i64 0
  %26 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %17, %"class.v8::internal::compiler::InstructionOperand"* nonnull %12, i64 6, %"class.v8::internal::compiler::InstructionOperand"* nonnull %25, i64 %9, %"class.v8::internal::compiler::InstructionOperand"* %10)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #12
  ret %"class.v8::internal::compiler::Instruction"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEPNS1_11InstructionE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::Instruction"** %6, %8
  %10 = ptrtoint %"class.v8::internal::compiler::Instruction"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::compiler::Instruction"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %6, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::Instruction"** %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::Instruction"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %241

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::Instruction"** %6 to i64
  %18 = bitcast %"class.v8::internal::compiler::Instruction"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.1326"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.1326"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::Instruction"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 134217727
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 268435455, %27 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = shl i64 %38, 3
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %37
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %41) #12
  br label %52

50:                                               ; preds = %37
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::Instruction"**
  br label %55

55:                                               ; preds = %52, %32
  %56 = phi i64 [ %38, %52 ], [ 0, %32 ]
  %57 = phi %"class.v8::internal::compiler::Instruction"** [ %54, %52 ], [ null, %32 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %57, i64 %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %57, i64 %56
  %60 = ptrtoint %"class.v8::internal::compiler::Instruction"** %59 to i64
  %61 = bitcast %"class.v8::internal::compiler::Instruction"** %58 to i64*
  store i64 %3, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %58, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::Instruction"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.1326", %"class.std::__1::vector.1326"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %64, align 8
  %66 = ptrtoint %"class.v8::internal::compiler::Instruction"** %65 to i64
  %67 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %5, align 8
  %68 = icmp eq %"class.v8::internal::compiler::Instruction"** %67, %65
  br i1 %68, label %238, label %69

69:                                               ; preds = %55
  %70 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 -1
  %71 = ptrtoint %"class.v8::internal::compiler::Instruction"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %168, label %76

76:                                               ; preds = %69
  %77 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::Instruction"** %77 to i64
  %79 = sub i64 %78, %66
  %80 = lshr i64 %79, 3
  %81 = xor i64 %80, -1
  %82 = add nsw i64 %22, %81
  %83 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %57, i64 %82
  %84 = xor i64 %80, -1
  %85 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 %84
  %86 = icmp ult %"class.v8::internal::compiler::Instruction"** %83, %67
  %87 = icmp ult %"class.v8::internal::compiler::Instruction"** %85, %58
  %88 = and i1 %86, %87
  br i1 %88, label %168, label %89

89:                                               ; preds = %76
  %90 = and i64 %74, 4611686018427387900
  %91 = sub nsw i64 0, %90
  %92 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %58, i64 %91
  %93 = sub nsw i64 0, %90
  %94 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 %93
  %95 = add nsw i64 %90, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %146, label %100

100:                                              ; preds = %89
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %58, i64 -1
  %103 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %58, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 -1
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %141, %106 ]
  %108 = phi i64 [ %101, %100 ], [ %142, %106 ]
  %109 = sub i64 0, %107
  %110 = sub i64 0, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %102, i64 %109
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::Instruction"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !68
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %112, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::Instruction"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !68
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %111, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::Instruction"** %120 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %121, align 8, !alias.scope !71, !noalias !68
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %111, i64 -2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::Instruction"** %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !71, !noalias !68
  %125 = sub nuw nsw i64 -4, %107
  %126 = sub nuw nsw i64 -4, %107
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %104, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::Instruction"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !68
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::Instruction"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !68
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::Instruction"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !71, !noalias !68
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::Instruction"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !71, !noalias !68
  %141 = add i64 %107, 8
  %142 = add i64 %108, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %106, !llvm.loop !73

144:                                              ; preds = %106
  %145 = sub nuw nsw i64 -8, %107
  br label %146

146:                                              ; preds = %144, %89
  %147 = phi i64 [ 0, %89 ], [ %145, %144 ]
  %148 = icmp eq i64 %98, 0
  br i1 %148, label %166, label %149

149:                                              ; preds = %146
  %150 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %58, i64 -1
  %151 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %67, i64 -1
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %150, i64 %147
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %151, i64 %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Instruction"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !68
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::Instruction"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !68
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Instruction"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !71, !noalias !68
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Instruction"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !71, !noalias !68
  br label %166

166:                                              ; preds = %146, %149
  %167 = icmp eq i64 %74, %90
  br i1 %167, label %238, label %168

168:                                              ; preds = %166, %76, %69
  %169 = phi %"class.v8::internal::compiler::Instruction"** [ %58, %76 ], [ %58, %69 ], [ %92, %166 ]
  %170 = phi %"class.v8::internal::compiler::Instruction"** [ %67, %76 ], [ %67, %69 ], [ %94, %166 ]
  %171 = getelementptr %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %170, i64 -1
  %172 = ptrtoint %"class.v8::internal::compiler::Instruction"** %171 to i64
  %173 = sub i64 %172, %66
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"class.v8::internal::compiler::Instruction"** [ %182, %178 ], [ %169, %168 ]
  %180 = phi %"class.v8::internal::compiler::Instruction"** [ %183, %178 ], [ %170, %168 ]
  %181 = phi i64 [ %187, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %179, i64 -1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %180, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::Instruction"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::Instruction"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !74

189:                                              ; preds = %178, %168
  %190 = phi %"class.v8::internal::compiler::Instruction"** [ undef, %168 ], [ %182, %178 ]
  %191 = phi %"class.v8::internal::compiler::Instruction"** [ %169, %168 ], [ %182, %178 ]
  %192 = phi %"class.v8::internal::compiler::Instruction"** [ %170, %168 ], [ %183, %178 ]
  %193 = icmp ult i64 %173, 56
  br i1 %193, label %238, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.v8::internal::compiler::Instruction"** [ %232, %194 ], [ %191, %189 ]
  %196 = phi %"class.v8::internal::compiler::Instruction"** [ %233, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Instruction"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::Instruction"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -2
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -2
  %204 = bitcast %"class.v8::internal::compiler::Instruction"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::Instruction"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -3
  %209 = bitcast %"class.v8::internal::compiler::Instruction"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::Instruction"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -4
  %214 = bitcast %"class.v8::internal::compiler::Instruction"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::Instruction"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -5
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -5
  %219 = bitcast %"class.v8::internal::compiler::Instruction"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::Instruction"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -6
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -6
  %224 = bitcast %"class.v8::internal::compiler::Instruction"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Instruction"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -7
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -7
  %229 = bitcast %"class.v8::internal::compiler::Instruction"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Instruction"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %195, i64 -8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %196, i64 -8
  %234 = bitcast %"class.v8::internal::compiler::Instruction"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Instruction"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = icmp eq %"class.v8::internal::compiler::Instruction"** %233, %65
  br i1 %237, label %238, label %194, !llvm.loop !75

238:                                              ; preds = %189, %194, %166, %55
  %239 = phi %"class.v8::internal::compiler::Instruction"** [ %58, %55 ], [ %92, %166 ], [ %190, %189 ], [ %232, %194 ]
  %240 = ptrtoint %"class.v8::internal::compiler::Instruction"** %239 to i64
  store i64 %240, i64* %19, align 8
  store i64 %63, i64* %18, align 8
  store i64 %60, i64* %28, align 8
  br label %241

241:                                              ; preds = %11, %238
  ret %"class.v8::internal::compiler::Instruction"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector8CanCoverEPNS1_4NodeES4_(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 6
  %5 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %6 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %5, %"class.v8::internal::compiler::Node"* %2) #12
  %7 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %8 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %7, %"class.v8::internal::compiler::Node"* %1) #12
  %9 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %6, %8
  br i1 %9, label %10, label %68

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 3, i32 0
  %14 = load i8, i8* %13, align 2
  %15 = and i8 %14, 124
  %16 = icmp eq i8 %15, 124
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = tail call zeroext i1 @_ZNK2v88internal8compiler4Node7OwnedByEPKS2_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %1) #12
  br label %68

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 16777215
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 %23
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 16777215
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %25, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %27, %33
  br i1 %34, label %35, label %68

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 4
  %37 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %36, align 8
  %38 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %35, %66
  %40 = phi %"struct.v8::internal::compiler::Node::Use"* [ %42, %66 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %40, i64 0, i32 0
  %42 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %41, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %40, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = lshr i32 %44, 1
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %40, i64 1
  %47 = zext i32 %45 to i64
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %46, i64 %47
  %49 = and i32 %44, 1
  %50 = icmp eq i32 %49, 0
  %51 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %48 to i64
  %52 = select i1 %50, i64 16, i64 32
  %53 = add i64 %52, %51
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::Node"**
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, i64 %47
  br i1 %50, label %58, label %56

56:                                               ; preds = %39
  %57 = bitcast %"struct.v8::internal::compiler::Node::Use"* %48 to %"class.v8::internal::compiler::Node"*
  br label %61

58:                                               ; preds = %39
  %59 = bitcast %"struct.v8::internal::compiler::Node::Use"* %48 to %"class.v8::internal::compiler::Node"**
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  br label %61

61:                                               ; preds = %56, %58
  %62 = phi %"class.v8::internal::compiler::Node"* [ %57, %56 ], [ %60, %58 ]
  %63 = icmp eq %"class.v8::internal::compiler::Node"* %62, %1
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %40, %"class.v8::internal::compiler::Node"** %55) #12
  br i1 %65, label %68, label %66

66:                                               ; preds = %64, %61
  %67 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %42, null
  br i1 %67, label %68, label %39

68:                                               ; preds = %66, %64, %35, %17, %3, %19
  %69 = phi i1 [ %18, %17 ], [ false, %3 ], [ false, %19 ], [ true, %35 ], [ true, %66 ], [ false, %64 ]
  ret i1 %69
}

declare %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal8compiler4Node7OwnedByEPKS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler19InstructionSelector14GetEffectLevelEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 %6
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector20CanCoverTransitivelyEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector8CanCoverEPNS1_4NodeES4_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2)
  br i1 %5, label %6, label %38

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector8CanCoverEPNS1_4NodeES4_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %3)
  br i1 %7, label %8, label %38

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 3, i32 0
  %12 = load i8, i8* %11, align 2
  %13 = and i8 %12, 124
  %14 = icmp eq i8 %13, 124
  br i1 %14, label %15, label %38

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 0
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 3, i32 0
  %19 = load i8, i8* %18, align 2
  %20 = and i8 %19, 124
  %21 = icmp eq i8 %20, 124
  br i1 %21, label %38, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777215
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 %26
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 16777215
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %28, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %30, %36
  br label %38

38:                                               ; preds = %4, %6, %8, %15, %22
  %39 = phi i1 [ %37, %22 ], [ true, %15 ], [ true, %8 ], [ false, %6 ], [ false, %4 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector27IsOnlyUserOfNodeInSameBlockEPNS1_4NodeES4_(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 6
  %5 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %6 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %5, %"class.v8::internal::compiler::Node"* %1) #12
  %7 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %8 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %7, %"class.v8::internal::compiler::Node"* %2) #12
  %9 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %6, %8
  br i1 %9, label %10, label %40

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 4
  %12 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %12, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %10, %38
  %15 = phi %"struct.v8::internal::compiler::Node::Use"* [ %17, %38 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 0, i32 0
  %17 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = lshr i32 %19, 1
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 1
  %22 = zext i32 %20 to i64
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %21, i64 %22
  %24 = and i32 %19, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %14
  %27 = bitcast %"struct.v8::internal::compiler::Node::Use"* %23 to %"class.v8::internal::compiler::Node"*
  br label %31

28:                                               ; preds = %14
  %29 = bitcast %"struct.v8::internal::compiler::Node::Use"* %23 to %"class.v8::internal::compiler::Node"**
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  br label %31

31:                                               ; preds = %26, %28
  %32 = phi %"class.v8::internal::compiler::Node"* [ %27, %26 ], [ %30, %28 ]
  %33 = icmp eq %"class.v8::internal::compiler::Node"* %32, %1
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %36 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %35, %"class.v8::internal::compiler::Node"* %32) #12
  %37 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %36, %6
  br i1 %37, label %40, label %38

38:                                               ; preds = %34, %31
  %39 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %17, null
  br i1 %39, label %40, label %14

40:                                               ; preds = %38, %34, %10, %3
  %41 = phi i1 [ false, %3 ], [ true, %10 ], [ true, %38 ], [ false, %34 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector9TryRenameEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 7
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %7, label %34

7:                                                ; preds = %2
  %8 = lshr i64 %4, 3
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1194"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = inttoptr i64 %15 to i32*
  br label %19

19:                                               ; preds = %23, %7
  %20 = phi i32 [ %9, %7 ], [ %25, %23 ]
  %21 = sext i32 %20 to i64
  %22 = icmp ugt i64 %17, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds i32, i32* %18, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %19

27:                                               ; preds = %19, %23
  %28 = icmp eq i32 %20, %9
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = and i64 %4, -34359738361
  %31 = zext i32 %20 to i64
  %32 = shl nuw nsw i64 %31, 3
  %33 = or i64 %32, %30
  store i64 %33, i64* %3, align 8
  br label %34

34:                                               ; preds = %29, %27, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal8compiler19InstructionSelector9GetRenameEi(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1194"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = inttoptr i64 %8 to i32*
  br label %12

12:                                               ; preds = %16, %2
  %13 = phi i32 [ %1, %2 ], [ %18, %16 ]
  %14 = sext i32 %13 to i64
  %15 = icmp ugt i64 %10, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds i32, i32* %11, i64 %14
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %12

20:                                               ; preds = %16, %12
  ret i32 %13
}

declare void @_ZN2v88internal8compiler14PhiInstruction11RenameInputEmi(%"class.v8::internal::compiler::PhiInstruction"*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %16 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %15, align 8
  %17 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %16) #12
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %8
  store i32 %17, i32* %19, align 4
  br label %20

20:                                               ; preds = %3, %14
  %21 = phi i32 [ %17, %14 ], [ %12, %3 ]
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.1194"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 2
  %31 = icmp ugt i64 %30, %22
  br i1 %31, label %45, label %32

32:                                               ; preds = %20
  %33 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  store i32 -1, i32* %4, align 4
  %34 = add nsw i32 %21, 1
  %35 = sext i32 %34 to i64
  %36 = icmp ult i64 %30, %35
  %37 = inttoptr i64 %28 to i32*
  br i1 %36, label %38, label %40

38:                                               ; preds = %32
  %39 = sub nsw i64 %35, %30
  call void @_ZNSt3__16vectorIiN2v88internal13ZoneAllocatorIiEEE8__appendEmRKi(%"class.std::__1::vector.1194"* %23, i64 %39, i32* nonnull dereferenceable(4) %4) #12
  br label %44

40:                                               ; preds = %32
  %41 = icmp ugt i64 %30, %35
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = getelementptr inbounds i32, i32* %37, i64 %35
  store i32* %43, i32** %24, align 8
  br label %44

44:                                               ; preds = %38, %40, %42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  br label %45

45:                                               ; preds = %20, %44
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 16777215
  %49 = zext i32 %48 to i64
  %50 = load i32*, i32** %9, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %49
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %60

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %56 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %55, align 8
  %57 = call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %56) #12
  %58 = load i32*, i32** %9, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %49
  store i32 %57, i32* %59, align 4
  br label %60

60:                                               ; preds = %45, %54
  %61 = phi i32 [ %57, %54 ], [ %52, %45 ]
  %62 = getelementptr inbounds %"class.std::__1::vector.1194", %"class.std::__1::vector.1194"* %23, i64 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %22
  store i32 %61, i32* %64, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler19InstructionSelector18GetVirtualRegisterEPKNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 %6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %13, align 8
  %15 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %14) #12
  %16 = load i32*, i32** %7, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %6
  store i32 %15, i32* %17, align 4
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi i32 [ %15, %12 ], [ %10, %2 ]
  ret i32 %19
}

declare i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler19InstructionSelector29GetVirtualRegistersForTestingEv(%"class.std::__1::map.1520"* noalias sret, %"class.v8::internal::compiler::InstructionSelector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map.1520", %"class.std::__1::map.1520"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::map.1520", %"class.std::__1::map.1520"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map.1520", %"class.std::__1::map.1520"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1, i64 0, i32 15, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1, i64 0, i32 15, i32 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1194"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %94, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1686"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %17 = bitcast %"class.std::__1::map.1520"* %0 to i64*
  %18 = getelementptr inbounds %"class.std::__1::map.1520", %"class.std::__1::map.1520"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %19

19:                                               ; preds = %14, %87
  %20 = phi i64 [ %12, %14 ], [ %88, %87 ]
  %21 = phi i64 [ %10, %14 ], [ %89, %87 ]
  %22 = phi i64 [ 0, %14 ], [ %90, %87 ]
  %23 = inttoptr i64 %20 to i32*
  %24 = getelementptr inbounds i32, i32* %23, i64 %22
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %87, label %27

27:                                               ; preds = %19
  %28 = trunc i64 %22 to i32
  %29 = load %"class.std::__1::__tree_node.1686"*, %"class.std::__1::__tree_node.1686"** %15, align 8
  %30 = icmp eq %"class.std::__1::__tree_node.1686"* %29, null
  br i1 %30, label %57, label %31

31:                                               ; preds = %27, %53
  %32 = phi %"class.std::__1::__tree_node.1686"* [ %56, %53 ], [ %29, %27 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %55, %53 ], [ %3, %27 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1686", %"class.std::__1::__tree_node.1686"* %32, i64 0, i32 1, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp ugt i32 %35, %28
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.1686", %"class.std::__1::__tree_node.1686"* %32, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.1686", %"class.std::__1::__tree_node.1686"* %32, i64 0, i32 0, i32 0
  br label %57

43:                                               ; preds = %31
  %44 = icmp ult i32 %35, %28
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.1686", %"class.std::__1::__tree_node.1686"* %32, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.1686", %"class.std::__1::__tree_node.1686"* %32, i64 0, i32 0, i32 0
  br label %57

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.1686", %"class.std::__1::__tree_node.1686"* %32, i64 0, i32 0, i32 0
  br label %57

53:                                               ; preds = %45, %37
  %54 = phi %"class.std::__1::__tree_node_base"* [ %39, %37 ], [ %47, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %46, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"* %54 to %"class.std::__1::__tree_node.1686"*
  br label %31

57:                                               ; preds = %27, %51, %49, %41
  %58 = phi %"class.std::__1::__tree_end_node"* [ %42, %41 ], [ %50, %49 ], [ %52, %51 ], [ %4, %27 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %38, %41 ], [ %46, %49 ], [ %33, %51 ], [ %16, %27 ]
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node.1686"**
  %61 = load %"class.std::__1::__tree_node.1686"*, %"class.std::__1::__tree_node.1686"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node.1686"* %61, null
  br i1 %62, label %63, label %87

63:                                               ; preds = %57
  %64 = tail call i8* @_Znwm(i64 40) #14, !noalias !76
  %65 = getelementptr inbounds i8, i8* %64, i64 28
  %66 = bitcast i8* %65 to i32*
  store i32 %28, i32* %66, align 4, !noalias !76
  %67 = getelementptr inbounds i8, i8* %64, i64 32
  %68 = bitcast i8* %67 to i32*
  store i32 %25, i32* %68, align 4, !noalias !76
  %69 = bitcast i8* %64 to %"class.std::__1::__tree_node_base"*
  %70 = getelementptr inbounds i8, i8* %64, i64 16
  %71 = bitcast i8* %70 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %71, align 8
  %72 = bitcast %"class.std::__1::__tree_node_base"** %59 to i8**
  store i8* %64, i8** %72, align 8
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %63
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  store i64 %78, i64* %17, align 8
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %80

80:                                               ; preds = %77, %63
  %81 = phi %"class.std::__1::__tree_node_base"* [ %69, %63 ], [ %79, %77 ]
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %81) #12
  %83 = load i64, i64* %18, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %18, align 8
  %85 = load i64, i64* %9, align 8
  %86 = load i64, i64* %11, align 8
  br label %87

87:                                               ; preds = %80, %57, %19
  %88 = phi i64 [ %86, %80 ], [ %20, %57 ], [ %20, %19 ]
  %89 = phi i64 [ %85, %80 ], [ %21, %57 ], [ %21, %19 ]
  %90 = add nuw i64 %22, 1
  %91 = sub i64 %89, %88
  %92 = ashr exact i64 %91, 2
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %19, label %94

94:                                               ; preds = %87, %2
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector9IsDefinedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = lshr i64 %6, 6
  %10 = getelementptr inbounds i64, i64* %8, i64 %9
  %11 = and i64 %6, 63
  %12 = shl i64 1, %11
  %13 = load i64, i64* %10, align 8
  %14 = and i64 %12, %13
  %15 = icmp ne i64 %14, 0
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector13MarkAsDefinedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = lshr i64 %6, 6
  %10 = getelementptr inbounds i64, i64* %8, i64 %9
  %11 = and i64 %6, 63
  %12 = shl i64 1, %11
  %13 = load i64, i64* %10, align 8
  %14 = or i64 %12, %13
  store i64 %14, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector6IsUsedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 56
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 3, i32 0
  %10 = load i8, i8* %9, align 2
  %11 = and i8 %10, 112
  %12 = icmp eq i8 %11, 112
  br i1 %12, label %13, label %27

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 16777215
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = lshr i64 %17, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = and i64 %17, 63
  %23 = shl i64 1, %22
  %24 = load i64, i64* %21, align 8
  %25 = and i64 %23, %24
  %26 = icmp ne i64 %25, 0
  br label %27

27:                                               ; preds = %8, %2, %13
  %28 = phi i1 [ %26, %13 ], [ true, %2 ], [ true, %8 ]
  ret i1 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler19InstructionSelector14GetEffectLevelEPNS1_4NodeEPNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::FlagsContinuation"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %2, i64 0, i32 9
  %10 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 13, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %11, align 8
  %13 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %13, i64 0, i32 10
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi %"class.v8::internal::compiler::Node"* [ %15, %8 ], [ %1, %3 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %21
  %25 = load i32, i32* %24, align 4
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector14SetEffectLevelEPNS1_4NodeEi(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  store i32 %2, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector33CanAddressRelativeToRootsRegisterERKNS0_17ExternalReferenceE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::ExternalReference"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 11, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 19
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %17 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %20 = tail call zeroext i1 @_ZN2v88internal18TurboAssemblerBase32IsAddressableThroughRootRegisterEPNS0_7IsolateERKNS0_17ExternalReferenceE(%"class.v8::internal::Isolate"* %19, %"class.v8::internal::ExternalReference"* dereferenceable(8) %1) #12
  br label %21

21:                                               ; preds = %2, %15, %11
  %22 = phi i1 [ false, %2 ], [ %20, %15 ], [ true, %11 ]
  ret i1 %22
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector19CanUseRootsRegisterEv(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %5, i64 0, i32 11, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 4
  %9 = icmp ne i32 %8, 0
  ret i1 %9
}

declare zeroext i1 @_ZN2v88internal18TurboAssemblerBase32IsAddressableThroughRootRegisterEPNS0_7IsolateERKNS0_17ExternalReferenceE(%"class.v8::internal::Isolate"*, %"class.v8::internal::ExternalReference"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector20MarkAsRepresentationENS0_21MachineRepresentationERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i8 zeroext, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = lshr i64 %5, 3
  %9 = trunc i64 %8 to i32
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7, i8 zeroext %1, i32 %9) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"*, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector20MarkAsRepresentationENS0_21MachineRepresentationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i8 zeroext, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %9
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5) #12
  %17 = load i32*, i32** %10, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %9
  store i32 %16, i32* %18, align 4
  br label %19

19:                                               ; preds = %3, %15
  %20 = phi i32 [ %16, %15 ], [ %13, %3 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5, i8 zeroext %1, i32 %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8compiler19InstructionSelector32AddOperandToStateValueDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS0_11MachineTypeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* nocapture, %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::ZoneVector.1240"*, %"class.v8::internal::compiler::OperandGenerator"* nocapture, %"class.v8::internal::compiler::StateObjectDeduplicator"*, %"class.v8::internal::compiler::Node"*, i16, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8::internal::compiler::StateValueDescriptor", align 8
  %11 = alloca %"class.v8::internal::compiler::Constant", align 8
  %12 = alloca %"class.v8::internal::compiler::Constant", align 8
  %13 = alloca %"class.v8::internal::compiler::Constant", align 8
  %14 = trunc i16 %6 to i8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 0, i32 2
  %18 = load i16, i16* %17, align 8
  switch i16 %18, label %949 [
    i16 44, label %19
    i16 45, label %257
    i16 46, label %258
    i16 48, label %259
    i16 47, label %259
  ]

19:                                               ; preds = %9
  %20 = tail call zeroext i8 @_ZN2v88internal8compiler20ArgumentsStateTypeOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %16) #12
  tail call void @_ZN2v88internal8compiler14StateValueList21PushArgumentsElementsENS0_19CreateArgumentsTypeE(%"class.v8::internal::compiler::StateValueList"* %1, i8 zeroext %20)
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %5 to i64
  %22 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.v8::internal::compiler::Node"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %30 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %30, align 8
  %32 = icmp eq %"class.v8::internal::compiler::Node"** %31, %29
  %33 = ptrtoint %"class.v8::internal::compiler::Node"** %31 to i64
  br i1 %32, label %38, label %34

34:                                               ; preds = %19
  %35 = inttoptr i64 %24 to i64*
  store i64 %21, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 1
  %37 = ptrtoint %"class.v8::internal::compiler::Node"** %36 to i64
  store i64 %37, i64* %23, align 8
  br label %1315

38:                                               ; preds = %19
  %39 = add nsw i64 %28, 1
  %40 = icmp ugt i64 %39, 268435455
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #13
  unreachable

43:                                               ; preds = %38
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i64*
  %45 = sub i64 %33, %26
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %46, 134217727
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 2
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %71, label %53

53:                                               ; preds = %48, %43
  %54 = phi i64 [ %51, %48 ], [ 268435455, %43 ]
  %55 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %56 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  %57 = shl i64 %54, 3
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %56, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %56, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %61, %59
  %63 = icmp ugt i64 %57, %62
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %53
  %65 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %56, i64 %57) #12
  br label %68

66:                                               ; preds = %53
  %67 = add i64 %59, %57
  store i64 %67, i64* %58, align 8
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %65, %64 ], [ %59, %66 ]
  %70 = inttoptr i64 %69 to %"class.v8::internal::compiler::Node"**
  br label %71

71:                                               ; preds = %68, %48
  %72 = phi i64 [ %54, %68 ], [ 0, %48 ]
  %73 = phi %"class.v8::internal::compiler::Node"** [ %70, %68 ], [ null, %48 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 %28
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 %72
  %76 = ptrtoint %"class.v8::internal::compiler::Node"** %75 to i64
  %77 = bitcast %"class.v8::internal::compiler::Node"** %74 to i64*
  store i64 %21, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 1
  %79 = ptrtoint %"class.v8::internal::compiler::Node"** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, align 8
  %82 = ptrtoint %"class.v8::internal::compiler::Node"** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  %84 = icmp eq %"class.v8::internal::compiler::Node"** %83, %81
  br i1 %84, label %254, label %85

85:                                               ; preds = %71
  %86 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %87 = ptrtoint %"class.v8::internal::compiler::Node"** %86 to i64
  %88 = sub i64 %87, %82
  %89 = lshr i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = icmp ult i64 %90, 4
  br i1 %91, label %184, label %92

92:                                               ; preds = %85
  %93 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %94 = ptrtoint %"class.v8::internal::compiler::Node"** %93 to i64
  %95 = sub i64 %94, %82
  %96 = lshr i64 %95, 3
  %97 = xor i64 %96, -1
  %98 = add nsw i64 %28, %97
  %99 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 %98
  %100 = xor i64 %96, -1
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 %100
  %102 = icmp ult %"class.v8::internal::compiler::Node"** %99, %83
  %103 = icmp ult %"class.v8::internal::compiler::Node"** %101, %74
  %104 = and i1 %102, %103
  br i1 %104, label %184, label %105

105:                                              ; preds = %92
  %106 = and i64 %90, 4611686018427387900
  %107 = sub nsw i64 0, %106
  %108 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %107
  %109 = sub nsw i64 0, %106
  %110 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 %109
  %111 = add nsw i64 %106, -4
  %112 = lshr exact i64 %111, 2
  %113 = add nuw nsw i64 %112, 1
  %114 = and i64 %113, 1
  %115 = icmp eq i64 %111, 0
  br i1 %115, label %162, label %116

116:                                              ; preds = %105
  %117 = sub nuw nsw i64 %113, %114
  %118 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 -1
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 -1
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  br label %122

122:                                              ; preds = %122, %116
  %123 = phi i64 [ 0, %116 ], [ %157, %122 ]
  %124 = phi i64 [ %117, %116 ], [ %158, %122 ]
  %125 = sub i64 0, %123
  %126 = sub i64 0, %123
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::Node"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !79
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::Node"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !79
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::Node"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !82, !noalias !79
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::Node"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !82, !noalias !79
  %141 = sub nuw nsw i64 -4, %123
  %142 = sub nuw nsw i64 -4, %123
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %141
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 %142
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -1
  %146 = bitcast %"class.v8::internal::compiler::Node"** %145 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8, !alias.scope !79
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -2
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::compiler::Node"** %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !79
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::Node"** %152 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %153, align 8, !alias.scope !82, !noalias !79
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -2
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::Node"** %155 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %156, align 8, !alias.scope !82, !noalias !79
  %157 = add i64 %123, 8
  %158 = add i64 %124, -2
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %122, !llvm.loop !84

160:                                              ; preds = %122
  %161 = sub nuw nsw i64 -8, %123
  br label %162

162:                                              ; preds = %160, %105
  %163 = phi i64 [ 0, %105 ], [ %161, %160 ]
  %164 = icmp eq i64 %114, 0
  br i1 %164, label %182, label %165

165:                                              ; preds = %162
  %166 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 -1
  %167 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, i64 %163
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 %163
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -1
  %171 = bitcast %"class.v8::internal::compiler::Node"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !79
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -2
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, i64 -1
  %175 = bitcast %"class.v8::internal::compiler::Node"** %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8, !alias.scope !79
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %178 = bitcast %"class.v8::internal::compiler::Node"** %177 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %178, align 8, !alias.scope !82, !noalias !79
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -2
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -1
  %181 = bitcast %"class.v8::internal::compiler::Node"** %180 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %181, align 8, !alias.scope !82, !noalias !79
  br label %182

182:                                              ; preds = %162, %165
  %183 = icmp eq i64 %90, %106
  br i1 %183, label %254, label %184

184:                                              ; preds = %182, %92, %85
  %185 = phi %"class.v8::internal::compiler::Node"** [ %74, %92 ], [ %74, %85 ], [ %108, %182 ]
  %186 = phi %"class.v8::internal::compiler::Node"** [ %83, %92 ], [ %83, %85 ], [ %110, %182 ]
  %187 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %186, i64 -1
  %188 = ptrtoint %"class.v8::internal::compiler::Node"** %187 to i64
  %189 = sub i64 %188, %82
  %190 = lshr i64 %189, 3
  %191 = add nuw nsw i64 %190, 1
  %192 = and i64 %191, 7
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %205, label %194

194:                                              ; preds = %184, %194
  %195 = phi %"class.v8::internal::compiler::Node"** [ %198, %194 ], [ %185, %184 ]
  %196 = phi %"class.v8::internal::compiler::Node"** [ %199, %194 ], [ %186, %184 ]
  %197 = phi i64 [ %203, %194 ], [ %192, %184 ]
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %200 = bitcast %"class.v8::internal::compiler::Node"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 %201, i64* %202, align 8
  %203 = add i64 %197, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %194, !llvm.loop !85

205:                                              ; preds = %194, %184
  %206 = phi %"class.v8::internal::compiler::Node"** [ undef, %184 ], [ %198, %194 ]
  %207 = phi %"class.v8::internal::compiler::Node"** [ %185, %184 ], [ %198, %194 ]
  %208 = phi %"class.v8::internal::compiler::Node"** [ %186, %184 ], [ %199, %194 ]
  %209 = icmp ult i64 %189, 56
  br i1 %209, label %254, label %210

210:                                              ; preds = %205, %210
  %211 = phi %"class.v8::internal::compiler::Node"** [ %248, %210 ], [ %207, %205 ]
  %212 = phi %"class.v8::internal::compiler::Node"** [ %249, %210 ], [ %208, %205 ]
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -1
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -1
  %215 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -2
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -2
  %220 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -3
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -3
  %225 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -4
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -4
  %230 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -5
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -5
  %235 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -6
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -6
  %240 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -7
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -7
  %245 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -8
  %250 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  store i64 %251, i64* %252, align 8
  %253 = icmp eq %"class.v8::internal::compiler::Node"** %249, %81
  br i1 %253, label %254, label %210, !llvm.loop !86

254:                                              ; preds = %205, %210, %182, %71
  %255 = phi %"class.v8::internal::compiler::Node"** [ %74, %71 ], [ %108, %182 ], [ %206, %205 ], [ %248, %210 ]
  %256 = ptrtoint %"class.v8::internal::compiler::Node"** %255 to i64
  store i64 %256, i64* %25, align 8
  store i64 %79, i64* %23, align 8
  store i64 %76, i64* %44, align 8
  br label %1315

257:                                              ; preds = %9
  tail call void @_ZN2v88internal8compiler14StateValueList19PushArgumentsLengthEv(%"class.v8::internal::compiler::StateValueList"* %1)
  br label %1315

258:                                              ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

259:                                              ; preds = %9, %9
  %260 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %261 = bitcast %"class.v8::internal::compiler::Node"*** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %4 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %262, %264
  br i1 %265, label %301, label %266

266:                                              ; preds = %259, %294
  %267 = phi i64 [ %295, %294 ], [ %264, %259 ]
  %268 = phi i64 [ %296, %294 ], [ %262, %259 ]
  %269 = phi i64 [ %297, %294 ], [ 0, %259 ]
  %270 = inttoptr i64 %267 to %"class.v8::internal::compiler::Node"**
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %270, i64 %269
  %272 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %271, align 8
  %273 = icmp eq %"class.v8::internal::compiler::Node"* %272, %5
  br i1 %273, label %301, label %274

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %272, i64 0, i32 0
  %276 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %275, align 8
  %277 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %276, i64 0, i32 2
  %278 = load i16, i16* %277, align 8
  %279 = add i16 %278, -47
  %280 = icmp ult i16 %279, 2
  br i1 %280, label %281, label %294

281:                                              ; preds = %274
  %282 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %283 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %282, i64 0, i32 2
  %284 = load i16, i16* %283, align 8
  %285 = add i16 %284, -47
  %286 = icmp ult i16 %285, 2
  br i1 %286, label %287, label %294

287:                                              ; preds = %281
  %288 = tail call i32 @_ZN2v88internal8compiler10ObjectIdOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %276) #12
  %289 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %290 = tail call i32 @_ZN2v88internal8compiler10ObjectIdOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %289) #12
  %291 = icmp eq i32 %288, %290
  %292 = load i64, i64* %261, align 8
  %293 = load i64, i64* %263, align 8
  br i1 %291, label %301, label %294

294:                                              ; preds = %287, %281, %274
  %295 = phi i64 [ %267, %274 ], [ %267, %281 ], [ %293, %287 ]
  %296 = phi i64 [ %268, %274 ], [ %268, %281 ], [ %292, %287 ]
  %297 = add nuw i64 %269, 1
  %298 = sub i64 %296, %295
  %299 = ashr exact i64 %298, 3
  %300 = icmp ult i64 %297, %299
  br i1 %300, label %266, label %301

301:                                              ; preds = %266, %294, %287, %259
  %302 = phi i64 [ %262, %259 ], [ %295, %294 ], [ %267, %266 ], [ %293, %287 ]
  %303 = phi i64 [ %262, %259 ], [ %296, %294 ], [ %268, %266 ], [ %292, %287 ]
  %304 = phi i64 [ -1, %259 ], [ -1, %294 ], [ %269, %266 ], [ %269, %287 ]
  %305 = icmp eq i64 %304, -1
  %306 = ptrtoint %"class.v8::internal::compiler::Node"* %5 to i64
  %307 = sub i64 %303, %302
  %308 = ashr exact i64 %307, 3
  %309 = inttoptr i64 %303 to %"class.v8::internal::compiler::Node"**
  %310 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %311 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %310, align 8
  %312 = icmp eq %"class.v8::internal::compiler::Node"** %311, %309
  %313 = ptrtoint %"class.v8::internal::compiler::Node"** %311 to i64
  br i1 %312, label %318, label %314

314:                                              ; preds = %301
  %315 = inttoptr i64 %303 to i64*
  store i64 %306, i64* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %309, i64 1
  %317 = ptrtoint %"class.v8::internal::compiler::Node"** %316 to i64
  store i64 %317, i64* %261, align 8
  br label %537

318:                                              ; preds = %301
  %319 = add nsw i64 %308, 1
  %320 = icmp ugt i64 %319, 268435455
  br i1 %320, label %321, label %323

321:                                              ; preds = %318
  %322 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %322) #13
  unreachable

323:                                              ; preds = %318
  %324 = bitcast %"class.v8::internal::compiler::Node"*** %310 to i64*
  %325 = sub i64 %313, %302
  %326 = ashr exact i64 %325, 3
  %327 = icmp ult i64 %326, 134217727
  br i1 %327, label %328, label %333

328:                                              ; preds = %323
  %329 = ashr exact i64 %325, 2
  %330 = icmp ult i64 %329, %319
  %331 = select i1 %330, i64 %319, i64 %329
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %351, label %333

333:                                              ; preds = %328, %323
  %334 = phi i64 [ %331, %328 ], [ 268435455, %323 ]
  %335 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %336 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %335, align 8
  %337 = shl i64 %334, 3
  %338 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %336, i64 0, i32 2
  %339 = load i64, i64* %338, align 8
  %340 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %336, i64 0, i32 3
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %341, %339
  %343 = icmp ugt i64 %337, %342
  br i1 %343, label %344, label %346, !prof !2

344:                                              ; preds = %333
  %345 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %336, i64 %337) #12
  br label %348

346:                                              ; preds = %333
  %347 = add i64 %339, %337
  store i64 %347, i64* %338, align 8
  br label %348

348:                                              ; preds = %346, %344
  %349 = phi i64 [ %345, %344 ], [ %339, %346 ]
  %350 = inttoptr i64 %349 to %"class.v8::internal::compiler::Node"**
  br label %351

351:                                              ; preds = %348, %328
  %352 = phi i64 [ %334, %348 ], [ 0, %328 ]
  %353 = phi %"class.v8::internal::compiler::Node"** [ %350, %348 ], [ null, %328 ]
  %354 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 %308
  %355 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 %352
  %356 = ptrtoint %"class.v8::internal::compiler::Node"** %355 to i64
  %357 = bitcast %"class.v8::internal::compiler::Node"** %354 to i64*
  store i64 %306, i64* %357, align 8
  %358 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 1
  %359 = ptrtoint %"class.v8::internal::compiler::Node"** %358 to i64
  %360 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %360, align 8
  %362 = ptrtoint %"class.v8::internal::compiler::Node"** %361 to i64
  %363 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %260, align 8
  %364 = icmp eq %"class.v8::internal::compiler::Node"** %363, %361
  br i1 %364, label %534, label %365

365:                                              ; preds = %351
  %366 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -1
  %367 = ptrtoint %"class.v8::internal::compiler::Node"** %366 to i64
  %368 = sub i64 %367, %362
  %369 = lshr i64 %368, 3
  %370 = add nuw nsw i64 %369, 1
  %371 = icmp ult i64 %370, 4
  br i1 %371, label %464, label %372

372:                                              ; preds = %365
  %373 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -1
  %374 = ptrtoint %"class.v8::internal::compiler::Node"** %373 to i64
  %375 = sub i64 %374, %362
  %376 = lshr i64 %375, 3
  %377 = xor i64 %376, -1
  %378 = add nsw i64 %308, %377
  %379 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 %378
  %380 = xor i64 %376, -1
  %381 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 %380
  %382 = icmp ult %"class.v8::internal::compiler::Node"** %379, %363
  %383 = icmp ult %"class.v8::internal::compiler::Node"** %381, %354
  %384 = and i1 %382, %383
  br i1 %384, label %464, label %385

385:                                              ; preds = %372
  %386 = and i64 %370, 4611686018427387900
  %387 = sub nsw i64 0, %386
  %388 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 %387
  %389 = sub nsw i64 0, %386
  %390 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 %389
  %391 = add nsw i64 %386, -4
  %392 = lshr exact i64 %391, 2
  %393 = add nuw nsw i64 %392, 1
  %394 = and i64 %393, 1
  %395 = icmp eq i64 %391, 0
  br i1 %395, label %440, label %396

396:                                              ; preds = %385
  %397 = sub nuw nsw i64 %393, %394
  %398 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -1
  %399 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -1
  %400 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -1
  %401 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -1
  br label %402

402:                                              ; preds = %402, %396
  %403 = phi i64 [ 0, %396 ], [ %437, %402 ]
  %404 = phi i64 [ %397, %396 ], [ %438, %402 ]
  %405 = sub i64 0, %403
  %406 = sub i64 0, %403
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 %405
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %399, i64 %406
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -1
  %410 = bitcast %"class.v8::internal::compiler::Node"** %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8, !alias.scope !87
  %412 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -2
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %412, i64 -1
  %414 = bitcast %"class.v8::internal::compiler::Node"** %413 to <2 x i64>*
  %415 = load <2 x i64>, <2 x i64>* %414, align 8, !alias.scope !87
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %407, i64 -1
  %417 = bitcast %"class.v8::internal::compiler::Node"** %416 to <2 x i64>*
  store <2 x i64> %411, <2 x i64>* %417, align 8, !alias.scope !90, !noalias !87
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %407, i64 -2
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 -1
  %420 = bitcast %"class.v8::internal::compiler::Node"** %419 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %420, align 8, !alias.scope !90, !noalias !87
  %421 = sub nuw nsw i64 -4, %403
  %422 = sub nuw nsw i64 -4, %403
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %400, i64 %421
  %424 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %401, i64 %422
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %424, i64 -1
  %426 = bitcast %"class.v8::internal::compiler::Node"** %425 to <2 x i64>*
  %427 = load <2 x i64>, <2 x i64>* %426, align 8, !alias.scope !87
  %428 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %424, i64 -2
  %429 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %428, i64 -1
  %430 = bitcast %"class.v8::internal::compiler::Node"** %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !87
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %423, i64 -1
  %433 = bitcast %"class.v8::internal::compiler::Node"** %432 to <2 x i64>*
  store <2 x i64> %427, <2 x i64>* %433, align 8, !alias.scope !90, !noalias !87
  %434 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %423, i64 -2
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %434, i64 -1
  %436 = bitcast %"class.v8::internal::compiler::Node"** %435 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %436, align 8, !alias.scope !90, !noalias !87
  %437 = add i64 %403, 8
  %438 = add i64 %404, -2
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %440, label %402, !llvm.loop !92

440:                                              ; preds = %402, %385
  %441 = phi i64 [ 0, %385 ], [ %437, %402 ]
  %442 = icmp eq i64 %394, 0
  br i1 %442, label %462, label %443

443:                                              ; preds = %440
  %444 = sub i64 0, %441
  %445 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -1
  %446 = sub i64 0, %441
  %447 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -1
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %445, i64 %444
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %447, i64 %446
  %450 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %449, i64 -1
  %451 = bitcast %"class.v8::internal::compiler::Node"** %450 to <2 x i64>*
  %452 = load <2 x i64>, <2 x i64>* %451, align 8, !alias.scope !87
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %449, i64 -2
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %453, i64 -1
  %455 = bitcast %"class.v8::internal::compiler::Node"** %454 to <2 x i64>*
  %456 = load <2 x i64>, <2 x i64>* %455, align 8, !alias.scope !87
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 -1
  %458 = bitcast %"class.v8::internal::compiler::Node"** %457 to <2 x i64>*
  store <2 x i64> %452, <2 x i64>* %458, align 8, !alias.scope !90, !noalias !87
  %459 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 -2
  %460 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %461 = bitcast %"class.v8::internal::compiler::Node"** %460 to <2 x i64>*
  store <2 x i64> %456, <2 x i64>* %461, align 8, !alias.scope !90, !noalias !87
  br label %462

462:                                              ; preds = %440, %443
  %463 = icmp eq i64 %370, %386
  br i1 %463, label %534, label %464

464:                                              ; preds = %462, %372, %365
  %465 = phi %"class.v8::internal::compiler::Node"** [ %354, %372 ], [ %354, %365 ], [ %388, %462 ]
  %466 = phi %"class.v8::internal::compiler::Node"** [ %363, %372 ], [ %363, %365 ], [ %390, %462 ]
  %467 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %466, i64 -1
  %468 = ptrtoint %"class.v8::internal::compiler::Node"** %467 to i64
  %469 = sub i64 %468, %362
  %470 = lshr i64 %469, 3
  %471 = add nuw nsw i64 %470, 1
  %472 = and i64 %471, 7
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %485, label %474

474:                                              ; preds = %464, %474
  %475 = phi %"class.v8::internal::compiler::Node"** [ %478, %474 ], [ %465, %464 ]
  %476 = phi %"class.v8::internal::compiler::Node"** [ %479, %474 ], [ %466, %464 ]
  %477 = phi i64 [ %483, %474 ], [ %472, %464 ]
  %478 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -1
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -1
  %480 = bitcast %"class.v8::internal::compiler::Node"** %479 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = bitcast %"class.v8::internal::compiler::Node"** %478 to i64*
  store i64 %481, i64* %482, align 8
  %483 = add i64 %477, -1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %474, !llvm.loop !93

485:                                              ; preds = %474, %464
  %486 = phi %"class.v8::internal::compiler::Node"** [ undef, %464 ], [ %478, %474 ]
  %487 = phi %"class.v8::internal::compiler::Node"** [ %465, %464 ], [ %478, %474 ]
  %488 = phi %"class.v8::internal::compiler::Node"** [ %466, %464 ], [ %479, %474 ]
  %489 = icmp ult i64 %469, 56
  br i1 %489, label %534, label %490

490:                                              ; preds = %485, %490
  %491 = phi %"class.v8::internal::compiler::Node"** [ %528, %490 ], [ %487, %485 ]
  %492 = phi %"class.v8::internal::compiler::Node"** [ %529, %490 ], [ %488, %485 ]
  %493 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -1
  %494 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -1
  %495 = bitcast %"class.v8::internal::compiler::Node"** %494 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = bitcast %"class.v8::internal::compiler::Node"** %493 to i64*
  store i64 %496, i64* %497, align 8
  %498 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -2
  %499 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -2
  %500 = bitcast %"class.v8::internal::compiler::Node"** %499 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = bitcast %"class.v8::internal::compiler::Node"** %498 to i64*
  store i64 %501, i64* %502, align 8
  %503 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -3
  %504 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -3
  %505 = bitcast %"class.v8::internal::compiler::Node"** %504 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = bitcast %"class.v8::internal::compiler::Node"** %503 to i64*
  store i64 %506, i64* %507, align 8
  %508 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -4
  %509 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -4
  %510 = bitcast %"class.v8::internal::compiler::Node"** %509 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = bitcast %"class.v8::internal::compiler::Node"** %508 to i64*
  store i64 %511, i64* %512, align 8
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -5
  %514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -5
  %515 = bitcast %"class.v8::internal::compiler::Node"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.v8::internal::compiler::Node"** %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -6
  %519 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -6
  %520 = bitcast %"class.v8::internal::compiler::Node"** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = bitcast %"class.v8::internal::compiler::Node"** %518 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -7
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -7
  %525 = bitcast %"class.v8::internal::compiler::Node"** %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"class.v8::internal::compiler::Node"** %523 to i64*
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -8
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %492, i64 -8
  %530 = bitcast %"class.v8::internal::compiler::Node"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.v8::internal::compiler::Node"** %528 to i64*
  store i64 %531, i64* %532, align 8
  %533 = icmp eq %"class.v8::internal::compiler::Node"** %529, %361
  br i1 %533, label %534, label %490, !llvm.loop !94

534:                                              ; preds = %485, %490, %462, %351
  %535 = phi %"class.v8::internal::compiler::Node"** [ %354, %351 ], [ %388, %462 ], [ %486, %485 ], [ %528, %490 ]
  %536 = ptrtoint %"class.v8::internal::compiler::Node"** %535 to i64
  store i64 %536, i64* %263, align 8
  store i64 %359, i64* %261, align 8
  store i64 %356, i64* %324, align 8
  br label %537

537:                                              ; preds = %314, %534
  br i1 %305, label %538, label %948

538:                                              ; preds = %537
  %539 = ptrtoint %"class.v8::internal::Zone"* %8 to i64
  %540 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %541 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %540, align 8
  %542 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %543 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %542, align 8
  %544 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %541, %543
  %545 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %543 to i64
  br i1 %544, label %546, label %552

546:                                              ; preds = %538
  %547 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %541 to i64*
  store i64 461060, i64* %547, align 8
  %548 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %541, i64 0, i32 2, i32 0
  store i64 %308, i64* %548, align 8
  %549 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %541, i64 1
  %550 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %549 to i64
  %551 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %540 to i64*
  store i64 %550, i64* %551, align 8
  br label %646

552:                                              ; preds = %538
  %553 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %541 to i64
  %554 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %540 to i64*
  %555 = bitcast %"class.v8::internal::compiler::StateValueList"* %1 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = sub i64 %553, %556
  %558 = ashr exact i64 %557, 4
  %559 = add nsw i64 %558, 1
  %560 = icmp ugt i64 %559, 134217727
  br i1 %560, label %561, label %563

561:                                              ; preds = %552
  %562 = bitcast %"class.v8::internal::compiler::StateValueList"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %562) #13
  unreachable

563:                                              ; preds = %552
  %564 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %542 to i64*
  %565 = sub i64 %545, %556
  %566 = ashr exact i64 %565, 4
  %567 = icmp ult i64 %566, 67108863
  br i1 %567, label %568, label %573

568:                                              ; preds = %563
  %569 = ashr exact i64 %565, 3
  %570 = icmp ult i64 %569, %559
  %571 = select i1 %570, i64 %559, i64 %569
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %591, label %573

573:                                              ; preds = %568, %563
  %574 = phi i64 [ %571, %568 ], [ 134217727, %563 ]
  %575 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %576 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %575, align 8
  %577 = shl i64 %574, 4
  %578 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %576, i64 0, i32 2
  %579 = load i64, i64* %578, align 8
  %580 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %576, i64 0, i32 3
  %581 = load i64, i64* %580, align 8
  %582 = sub i64 %581, %579
  %583 = icmp ugt i64 %577, %582
  br i1 %583, label %584, label %586, !prof !2

584:                                              ; preds = %573
  %585 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %576, i64 %577) #12
  br label %588

586:                                              ; preds = %573
  %587 = add i64 %579, %577
  store i64 %587, i64* %578, align 8
  br label %588

588:                                              ; preds = %586, %584
  %589 = phi i64 [ %585, %584 ], [ %579, %586 ]
  %590 = inttoptr i64 %589 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %591

591:                                              ; preds = %588, %568
  %592 = phi i64 [ %574, %588 ], [ 0, %568 ]
  %593 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %590, %588 ], [ null, %568 ]
  %594 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %593, i64 %558
  %595 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %593, i64 %592
  %596 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %595 to i64
  %597 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %594 to i64*
  store i64 461060, i64* %597, align 8
  %598 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %593, i64 %558, i32 2, i32 0
  store i64 %308, i64* %598, align 8
  %599 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %594, i64 1
  %600 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %599 to i64
  %601 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %602 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %601, align 8
  %603 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %540, align 8
  %604 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %603, %602
  br i1 %604, label %643, label %605

605:                                              ; preds = %591
  %606 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %602 to i64
  %607 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %603, i64 -1, i32 0
  %608 = ptrtoint i8* %607 to i64
  %609 = sub i64 %608, %606
  %610 = lshr i64 %609, 4
  %611 = add nuw nsw i64 %610, 1
  %612 = and i64 %611, 3
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %624, label %614

614:                                              ; preds = %605, %614
  %615 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %621, %614 ], [ %594, %605 ]
  %616 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %618, %614 ], [ %603, %605 ]
  %617 = phi i64 [ %622, %614 ], [ %612, %605 ]
  %618 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %616, i64 -1
  %619 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %615, i64 -1, i32 0
  %620 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %618, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %619, i8* align 8 %620, i64 16, i1 false) #12
  %621 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %615, i64 -1
  %622 = add i64 %617, -1
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %614, !llvm.loop !95

624:                                              ; preds = %614, %605
  %625 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %605 ], [ %621, %614 ]
  %626 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %594, %605 ], [ %621, %614 ]
  %627 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %603, %605 ], [ %618, %614 ]
  %628 = icmp ult i64 %609, 48
  br i1 %628, label %643, label %629

629:                                              ; preds = %624, %629
  %630 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %641, %629 ], [ %626, %624 ]
  %631 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %638, %629 ], [ %627, %624 ]
  %632 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %630, i64 -1, i32 0
  %633 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %631, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %632, i8* align 8 %633, i64 16, i1 false) #12
  %634 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %630, i64 -2, i32 0
  %635 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %631, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %634, i8* align 8 %635, i64 16, i1 false) #12
  %636 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %630, i64 -3, i32 0
  %637 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %631, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %636, i8* align 8 %637, i64 16, i1 false) #12
  %638 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %631, i64 -4
  %639 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %630, i64 -4, i32 0
  %640 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %638, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %639, i8* align 8 %640, i64 16, i1 false) #12
  %641 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %630, i64 -4
  %642 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %638, %602
  br i1 %642, label %643, label %629

643:                                              ; preds = %624, %629, %591
  %644 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %594, %591 ], [ %625, %624 ], [ %641, %629 ]
  %645 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %644 to i64
  store i64 %645, i64* %555, align 8
  store i64 %600, i64* %554, align 8
  store i64 %596, i64* %564, align 8
  br label %646

646:                                              ; preds = %546, %643
  %647 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 2
  %648 = load i64, i64* %647, align 8
  %649 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 3
  %650 = load i64, i64* %649, align 8
  %651 = sub i64 %650, %648
  %652 = icmp ult i64 %651, 64
  br i1 %652, label %653, label %655, !prof !2

653:                                              ; preds = %646
  %654 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8, i64 64) #12
  br label %657

655:                                              ; preds = %646
  %656 = add i64 %648, 64
  store i64 %656, i64* %647, align 8
  br label %657

657:                                              ; preds = %653, %655
  %658 = phi i64 [ %654, %653 ], [ %648, %655 ]
  %659 = inttoptr i64 %658 to i8*
  %660 = inttoptr i64 %658 to %"class.v8::internal::compiler::StateValueList"*
  %661 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %660, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %662 = bitcast %"struct.std::__1::__compressed_pair_elem.1284"* %661 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %659, i8 0, i64 24, i1 false) #12
  store i64 %539, i64* %662, align 8
  %663 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %660, i64 0, i32 1
  %664 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %660, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %665 = bitcast %"struct.std::__1::__compressed_pair_elem.1291"* %664 to i64*
  %666 = bitcast %"class.v8::internal::ZoneVector.1286"* %663 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %666, i8 0, i64 24, i1 false) #12
  store i64 %539, i64* %665, align 8
  %667 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 1, i32 0
  %668 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %669 = load %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"*** %668, align 8
  %670 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %671 = load %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"*** %670, align 8
  %672 = icmp eq %"class.v8::internal::compiler::StateValueList"** %669, %671
  %673 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %671 to i64
  br i1 %672, label %679, label %674

674:                                              ; preds = %657
  %675 = bitcast %"class.v8::internal::compiler::StateValueList"** %669 to i64*
  store i64 %658, i64* %675, align 8
  %676 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %669, i64 1
  %677 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %676 to i64
  %678 = bitcast %"class.v8::internal::compiler::StateValueList"*** %668 to i64*
  store i64 %677, i64* %678, align 8
  br label %904

679:                                              ; preds = %657
  %680 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %669 to i64
  %681 = bitcast %"class.v8::internal::compiler::StateValueList"*** %668 to i64*
  %682 = bitcast %"class.std::__1::vector.1287"* %667 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = sub i64 %680, %683
  %685 = ashr exact i64 %684, 3
  %686 = add nsw i64 %685, 1
  %687 = icmp ugt i64 %686, 268435455
  br i1 %687, label %688, label %690

688:                                              ; preds = %679
  %689 = bitcast %"class.std::__1::vector.1287"* %667 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %689) #13
  unreachable

690:                                              ; preds = %679
  %691 = bitcast %"class.v8::internal::compiler::StateValueList"*** %670 to i64*
  %692 = sub i64 %673, %683
  %693 = ashr exact i64 %692, 3
  %694 = icmp ult i64 %693, 134217727
  br i1 %694, label %695, label %700

695:                                              ; preds = %690
  %696 = ashr exact i64 %692, 2
  %697 = icmp ult i64 %696, %686
  %698 = select i1 %697, i64 %686, i64 %696
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %718, label %700

700:                                              ; preds = %695, %690
  %701 = phi i64 [ %698, %695 ], [ 268435455, %690 ]
  %702 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %703 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %702, align 8
  %704 = shl i64 %701, 3
  %705 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %703, i64 0, i32 2
  %706 = load i64, i64* %705, align 8
  %707 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %703, i64 0, i32 3
  %708 = load i64, i64* %707, align 8
  %709 = sub i64 %708, %706
  %710 = icmp ugt i64 %704, %709
  br i1 %710, label %711, label %713, !prof !2

711:                                              ; preds = %700
  %712 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %703, i64 %704) #12
  br label %715

713:                                              ; preds = %700
  %714 = add i64 %706, %704
  store i64 %714, i64* %705, align 8
  br label %715

715:                                              ; preds = %713, %711
  %716 = phi i64 [ %712, %711 ], [ %706, %713 ]
  %717 = inttoptr i64 %716 to %"class.v8::internal::compiler::StateValueList"**
  br label %718

718:                                              ; preds = %715, %695
  %719 = phi i64 [ %701, %715 ], [ 0, %695 ]
  %720 = phi %"class.v8::internal::compiler::StateValueList"** [ %717, %715 ], [ null, %695 ]
  %721 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %720, i64 %685
  %722 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %720, i64 %719
  %723 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %722 to i64
  %724 = bitcast %"class.v8::internal::compiler::StateValueList"** %721 to i64*
  store i64 %658, i64* %724, align 8
  %725 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %721, i64 1
  %726 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %725 to i64
  %727 = getelementptr inbounds %"class.std::__1::vector.1287", %"class.std::__1::vector.1287"* %667, i64 0, i32 0, i32 0
  %728 = load %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"*** %727, align 8
  %729 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %728 to i64
  %730 = load %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"*** %668, align 8
  %731 = icmp eq %"class.v8::internal::compiler::StateValueList"** %730, %728
  br i1 %731, label %901, label %732

732:                                              ; preds = %718
  %733 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 -1
  %734 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %733 to i64
  %735 = sub i64 %734, %729
  %736 = lshr i64 %735, 3
  %737 = add nuw nsw i64 %736, 1
  %738 = icmp ult i64 %737, 4
  br i1 %738, label %831, label %739

739:                                              ; preds = %732
  %740 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 -1
  %741 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %740 to i64
  %742 = sub i64 %741, %729
  %743 = lshr i64 %742, 3
  %744 = xor i64 %743, -1
  %745 = add nsw i64 %685, %744
  %746 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %720, i64 %745
  %747 = xor i64 %743, -1
  %748 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 %747
  %749 = icmp ult %"class.v8::internal::compiler::StateValueList"** %746, %730
  %750 = icmp ult %"class.v8::internal::compiler::StateValueList"** %748, %721
  %751 = and i1 %749, %750
  br i1 %751, label %831, label %752

752:                                              ; preds = %739
  %753 = and i64 %737, 4611686018427387900
  %754 = sub nsw i64 0, %753
  %755 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %721, i64 %754
  %756 = sub nsw i64 0, %753
  %757 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 %756
  %758 = add nsw i64 %753, -4
  %759 = lshr exact i64 %758, 2
  %760 = add nuw nsw i64 %759, 1
  %761 = and i64 %760, 1
  %762 = icmp eq i64 %758, 0
  br i1 %762, label %809, label %763

763:                                              ; preds = %752
  %764 = sub nuw nsw i64 %760, %761
  %765 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %721, i64 -1
  %766 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 -1
  %767 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %721, i64 -1
  %768 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 -1
  br label %769

769:                                              ; preds = %769, %763
  %770 = phi i64 [ 0, %763 ], [ %804, %769 ]
  %771 = phi i64 [ %764, %763 ], [ %805, %769 ]
  %772 = sub i64 0, %770
  %773 = sub i64 0, %770
  %774 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %765, i64 %772
  %775 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %766, i64 %773
  %776 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %775, i64 -1
  %777 = bitcast %"class.v8::internal::compiler::StateValueList"** %776 to <2 x i64>*
  %778 = load <2 x i64>, <2 x i64>* %777, align 8, !alias.scope !96
  %779 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %775, i64 -2
  %780 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %779, i64 -1
  %781 = bitcast %"class.v8::internal::compiler::StateValueList"** %780 to <2 x i64>*
  %782 = load <2 x i64>, <2 x i64>* %781, align 8, !alias.scope !96
  %783 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %774, i64 -1
  %784 = bitcast %"class.v8::internal::compiler::StateValueList"** %783 to <2 x i64>*
  store <2 x i64> %778, <2 x i64>* %784, align 8, !alias.scope !99, !noalias !96
  %785 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %774, i64 -2
  %786 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %785, i64 -1
  %787 = bitcast %"class.v8::internal::compiler::StateValueList"** %786 to <2 x i64>*
  store <2 x i64> %782, <2 x i64>* %787, align 8, !alias.scope !99, !noalias !96
  %788 = sub nuw nsw i64 -4, %770
  %789 = sub nuw nsw i64 -4, %770
  %790 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %767, i64 %788
  %791 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %768, i64 %789
  %792 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %791, i64 -1
  %793 = bitcast %"class.v8::internal::compiler::StateValueList"** %792 to <2 x i64>*
  %794 = load <2 x i64>, <2 x i64>* %793, align 8, !alias.scope !96
  %795 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %791, i64 -2
  %796 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %795, i64 -1
  %797 = bitcast %"class.v8::internal::compiler::StateValueList"** %796 to <2 x i64>*
  %798 = load <2 x i64>, <2 x i64>* %797, align 8, !alias.scope !96
  %799 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %790, i64 -1
  %800 = bitcast %"class.v8::internal::compiler::StateValueList"** %799 to <2 x i64>*
  store <2 x i64> %794, <2 x i64>* %800, align 8, !alias.scope !99, !noalias !96
  %801 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %790, i64 -2
  %802 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %801, i64 -1
  %803 = bitcast %"class.v8::internal::compiler::StateValueList"** %802 to <2 x i64>*
  store <2 x i64> %798, <2 x i64>* %803, align 8, !alias.scope !99, !noalias !96
  %804 = add i64 %770, 8
  %805 = add i64 %771, -2
  %806 = icmp eq i64 %805, 0
  br i1 %806, label %807, label %769, !llvm.loop !101

807:                                              ; preds = %769
  %808 = sub nuw nsw i64 -8, %770
  br label %809

809:                                              ; preds = %807, %752
  %810 = phi i64 [ 0, %752 ], [ %808, %807 ]
  %811 = icmp eq i64 %761, 0
  br i1 %811, label %829, label %812

812:                                              ; preds = %809
  %813 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %721, i64 -1
  %814 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %730, i64 -1
  %815 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %813, i64 %810
  %816 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %814, i64 %810
  %817 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %816, i64 -1
  %818 = bitcast %"class.v8::internal::compiler::StateValueList"** %817 to <2 x i64>*
  %819 = load <2 x i64>, <2 x i64>* %818, align 8, !alias.scope !96
  %820 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %816, i64 -2
  %821 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %820, i64 -1
  %822 = bitcast %"class.v8::internal::compiler::StateValueList"** %821 to <2 x i64>*
  %823 = load <2 x i64>, <2 x i64>* %822, align 8, !alias.scope !96
  %824 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %815, i64 -1
  %825 = bitcast %"class.v8::internal::compiler::StateValueList"** %824 to <2 x i64>*
  store <2 x i64> %819, <2 x i64>* %825, align 8, !alias.scope !99, !noalias !96
  %826 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %815, i64 -2
  %827 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %826, i64 -1
  %828 = bitcast %"class.v8::internal::compiler::StateValueList"** %827 to <2 x i64>*
  store <2 x i64> %823, <2 x i64>* %828, align 8, !alias.scope !99, !noalias !96
  br label %829

829:                                              ; preds = %809, %812
  %830 = icmp eq i64 %737, %753
  br i1 %830, label %901, label %831

831:                                              ; preds = %829, %739, %732
  %832 = phi %"class.v8::internal::compiler::StateValueList"** [ %721, %739 ], [ %721, %732 ], [ %755, %829 ]
  %833 = phi %"class.v8::internal::compiler::StateValueList"** [ %730, %739 ], [ %730, %732 ], [ %757, %829 ]
  %834 = getelementptr %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %833, i64 -1
  %835 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %834 to i64
  %836 = sub i64 %835, %729
  %837 = lshr i64 %836, 3
  %838 = add nuw nsw i64 %837, 1
  %839 = and i64 %838, 7
  %840 = icmp eq i64 %839, 0
  br i1 %840, label %852, label %841

841:                                              ; preds = %831, %841
  %842 = phi %"class.v8::internal::compiler::StateValueList"** [ %845, %841 ], [ %832, %831 ]
  %843 = phi %"class.v8::internal::compiler::StateValueList"** [ %846, %841 ], [ %833, %831 ]
  %844 = phi i64 [ %850, %841 ], [ %839, %831 ]
  %845 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %842, i64 -1
  %846 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %843, i64 -1
  %847 = bitcast %"class.v8::internal::compiler::StateValueList"** %846 to i64*
  %848 = load i64, i64* %847, align 8
  %849 = bitcast %"class.v8::internal::compiler::StateValueList"** %845 to i64*
  store i64 %848, i64* %849, align 8
  %850 = add i64 %844, -1
  %851 = icmp eq i64 %850, 0
  br i1 %851, label %852, label %841, !llvm.loop !102

852:                                              ; preds = %841, %831
  %853 = phi %"class.v8::internal::compiler::StateValueList"** [ undef, %831 ], [ %845, %841 ]
  %854 = phi %"class.v8::internal::compiler::StateValueList"** [ %832, %831 ], [ %845, %841 ]
  %855 = phi %"class.v8::internal::compiler::StateValueList"** [ %833, %831 ], [ %846, %841 ]
  %856 = icmp ult i64 %836, 56
  br i1 %856, label %901, label %857

857:                                              ; preds = %852, %857
  %858 = phi %"class.v8::internal::compiler::StateValueList"** [ %895, %857 ], [ %854, %852 ]
  %859 = phi %"class.v8::internal::compiler::StateValueList"** [ %896, %857 ], [ %855, %852 ]
  %860 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -1
  %861 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -1
  %862 = bitcast %"class.v8::internal::compiler::StateValueList"** %861 to i64*
  %863 = load i64, i64* %862, align 8
  %864 = bitcast %"class.v8::internal::compiler::StateValueList"** %860 to i64*
  store i64 %863, i64* %864, align 8
  %865 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -2
  %866 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -2
  %867 = bitcast %"class.v8::internal::compiler::StateValueList"** %866 to i64*
  %868 = load i64, i64* %867, align 8
  %869 = bitcast %"class.v8::internal::compiler::StateValueList"** %865 to i64*
  store i64 %868, i64* %869, align 8
  %870 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -3
  %871 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -3
  %872 = bitcast %"class.v8::internal::compiler::StateValueList"** %871 to i64*
  %873 = load i64, i64* %872, align 8
  %874 = bitcast %"class.v8::internal::compiler::StateValueList"** %870 to i64*
  store i64 %873, i64* %874, align 8
  %875 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -4
  %876 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -4
  %877 = bitcast %"class.v8::internal::compiler::StateValueList"** %876 to i64*
  %878 = load i64, i64* %877, align 8
  %879 = bitcast %"class.v8::internal::compiler::StateValueList"** %875 to i64*
  store i64 %878, i64* %879, align 8
  %880 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -5
  %881 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -5
  %882 = bitcast %"class.v8::internal::compiler::StateValueList"** %881 to i64*
  %883 = load i64, i64* %882, align 8
  %884 = bitcast %"class.v8::internal::compiler::StateValueList"** %880 to i64*
  store i64 %883, i64* %884, align 8
  %885 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -6
  %886 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -6
  %887 = bitcast %"class.v8::internal::compiler::StateValueList"** %886 to i64*
  %888 = load i64, i64* %887, align 8
  %889 = bitcast %"class.v8::internal::compiler::StateValueList"** %885 to i64*
  store i64 %888, i64* %889, align 8
  %890 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -7
  %891 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -7
  %892 = bitcast %"class.v8::internal::compiler::StateValueList"** %891 to i64*
  %893 = load i64, i64* %892, align 8
  %894 = bitcast %"class.v8::internal::compiler::StateValueList"** %890 to i64*
  store i64 %893, i64* %894, align 8
  %895 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %858, i64 -8
  %896 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %859, i64 -8
  %897 = bitcast %"class.v8::internal::compiler::StateValueList"** %896 to i64*
  %898 = load i64, i64* %897, align 8
  %899 = bitcast %"class.v8::internal::compiler::StateValueList"** %895 to i64*
  store i64 %898, i64* %899, align 8
  %900 = icmp eq %"class.v8::internal::compiler::StateValueList"** %896, %728
  br i1 %900, label %901, label %857, !llvm.loop !103

901:                                              ; preds = %852, %857, %829, %718
  %902 = phi %"class.v8::internal::compiler::StateValueList"** [ %721, %718 ], [ %755, %829 ], [ %853, %852 ], [ %895, %857 ]
  %903 = ptrtoint %"class.v8::internal::compiler::StateValueList"** %902 to i64
  store i64 %903, i64* %682, align 8
  store i64 %726, i64* %681, align 8
  store i64 %723, i64* %691, align 8
  br label %904

904:                                              ; preds = %674, %901
  %905 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %906 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %905, i64 0, i32 5
  %907 = load i32, i32* %906, align 4
  %908 = tail call %"class.v8::internal::ZoneVector.1533"* @_ZN2v88internal8compiler14MachineTypesOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %905) #12
  %909 = icmp sgt i32 %907, 0
  br i1 %909, label %910, label %1315

910:                                              ; preds = %904
  %911 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %912 = add i64 %306, 32
  %913 = inttoptr i64 %912 to i64*
  %914 = getelementptr inbounds %"class.v8::internal::ZoneVector.1533", %"class.v8::internal::ZoneVector.1533"* %908, i64 0, i32 0, i32 0, i32 1
  %915 = bitcast %"class.v8::internal::MachineType"** %914 to i64*
  %916 = bitcast %"class.v8::internal::ZoneVector.1533"* %908 to i64*
  %917 = zext i32 %907 to i64
  br label %918

918:                                              ; preds = %936, %910
  %919 = phi i64 [ 0, %910 ], [ %946, %936 ]
  %920 = phi i64 [ 0, %910 ], [ %945, %936 ]
  %921 = load i32, i32* %911, align 4
  %922 = and i32 %921, 251658240
  %923 = icmp eq i32 %922, 251658240
  br i1 %923, label %924, label %927

924:                                              ; preds = %918
  %925 = load i64, i64* %913, align 8
  %926 = add i64 %925, 16
  br label %927

927:                                              ; preds = %918, %924
  %928 = phi i64 [ %926, %924 ], [ %912, %918 ]
  %929 = load i64, i64* %915, align 8
  %930 = load i64, i64* %916, align 8
  %931 = sub i64 %929, %930
  %932 = ashr exact i64 %931, 1
  %933 = icmp ugt i64 %932, %919
  br i1 %933, label %936, label %934

934:                                              ; preds = %927
  %935 = bitcast %"class.v8::internal::ZoneVector.1533"* %908 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %935) #13
  unreachable

936:                                              ; preds = %927
  %937 = inttoptr i64 %928 to %"class.v8::internal::compiler::Node"**
  %938 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %937, i64 %919
  %939 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %938, align 8
  %940 = inttoptr i64 %930 to %"class.v8::internal::MachineType"*
  %941 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %940, i64 %919
  %942 = bitcast %"class.v8::internal::MachineType"* %941 to i16*
  %943 = load i16, i16* %942, align 1
  %944 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector32AddOperandToStateValueDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS0_11MachineTypeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %660, %"class.v8::internal::ZoneVector.1240"* %2, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %939, i16 %943, i32 %7, %"class.v8::internal::Zone"* %8)
  %945 = add i64 %944, %920
  %946 = add nuw nsw i64 %919, 1
  %947 = icmp eq i64 %946, %917
  br i1 %947, label %1315, label %918

948:                                              ; preds = %537
  tail call void @_ZN2v88internal8compiler14StateValueList13PushDuplicateEm(%"class.v8::internal::compiler::StateValueList"* %1, i64 %304)
  br label %1315

949:                                              ; preds = %9
  %950 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %951 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %950, align 8
  %952 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %951, i64 0, i32 0
  %953 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %952, align 8
  %954 = icmp eq i8 %14, 0
  br i1 %954, label %955, label %962

955:                                              ; preds = %949
  %956 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %3, i64 0, i32 0
  %957 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %956, align 8
  %958 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %957, i64 0, i32 2
  %959 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %958, align 8
  %960 = bitcast %"class.v8::internal::compiler::Constant"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %960) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %13, i32 57005) #12
  %961 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %959, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %960) #12
  br label %1083

962:                                              ; preds = %949
  switch i16 %18, label %1007 [
    i16 22, label %963
    i16 23, label %963
    i16 28, label %963
    i16 25, label %963
    i16 26, label %963
    i16 222, label %963
    i16 31, label %975
    i16 30, label %975
    i16 48, label %1006
  ]

963:                                              ; preds = %962, %962, %962, %962, %962, %962
  %964 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %3, i64 0, i32 0
  %965 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %964, align 8
  %966 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %965, i64 0, i32 2
  %967 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %966, align 8
  %968 = bitcast %"class.v8::internal::compiler::Constant"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %968) #12
  %969 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %5) #12
  %970 = bitcast %"class.v8::internal::compiler::Constant"* %12 to i64*
  %971 = extractvalue { i64, i64 } %969, 0
  store i64 %971, i64* %970, align 8
  %972 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %12, i64 0, i32 2
  %973 = extractvalue { i64, i64 } %969, 1
  store i64 %973, i64* %972, align 8
  %974 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %967, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %968) #12
  br label %1083

975:                                              ; preds = %962, %962
  switch i8 %14, label %976 [
    i8 9, label %979
    i8 8, label %979
    i8 6, label %979
  ]

976:                                              ; preds = %975
  %977 = or i8 %14, 1
  %978 = icmp eq i8 %977, 11
  br i1 %978, label %979, label %1087

979:                                              ; preds = %976, %975, %975, %975
  %980 = tail call i64* @_ZN2v88internal8compiler14HeapConstantOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %16) #12
  %981 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %953, i64 0, i32 0, i32 7
  %982 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %953, i64 0, i32 0, i32 7, i32 0, i64 669
  %983 = icmp ule i64* %982, %980
  %984 = getelementptr inbounds %"class.v8::internal::RootsTable", %"class.v8::internal::RootsTable"* %981, i64 0, i32 0, i64 0
  %985 = icmp ugt i64* %984, %980
  %986 = or i1 %983, %985
  br i1 %986, label %994, label %987

987:                                              ; preds = %979
  %988 = ptrtoint i64* %980 to i64
  %989 = ptrtoint %"class.v8::internal::RootsTable"* %981 to i64
  %990 = sub i64 %988, %989
  %991 = lshr i64 %990, 3
  %992 = trunc i64 %991 to i16
  %993 = icmp eq i16 %992, 34
  br i1 %993, label %1087, label %994

994:                                              ; preds = %987, %979
  %995 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %3, i64 0, i32 0
  %996 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %995, align 8
  %997 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %996, i64 0, i32 2
  %998 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %997, align 8
  %999 = bitcast %"class.v8::internal::compiler::Constant"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %999) #12
  %1000 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %5) #12
  %1001 = bitcast %"class.v8::internal::compiler::Constant"* %11 to i64*
  %1002 = extractvalue { i64, i64 } %1000, 0
  store i64 %1002, i64* %1001, align 8
  %1003 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %11, i64 0, i32 2
  %1004 = extractvalue { i64, i64 } %1000, 1
  store i64 %1004, i64* %1003, align 8
  %1005 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %998, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %999) #12
  br label %1083

1006:                                             ; preds = %962
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

1007:                                             ; preds = %962
  switch i32 %7, label %1082 [
    i32 1, label %1008
    i32 0, label %1045
  ]

1008:                                             ; preds = %1007
  %1009 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %3, i64 0, i32 0
  %1010 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %1009, align 8
  %1011 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %1012 = load i32, i32* %1011, align 4
  %1013 = and i32 %1012, 16777215
  %1014 = zext i32 %1013 to i64
  %1015 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1010, i64 0, i32 15, i32 0, i32 0, i32 0
  %1016 = load i32*, i32** %1015, align 8
  %1017 = getelementptr inbounds i32, i32* %1016, i64 %1014
  %1018 = load i32, i32* %1017, align 4
  %1019 = icmp eq i32 %1018, -1
  br i1 %1019, label %1020, label %1030

1020:                                             ; preds = %1008
  %1021 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1010, i64 0, i32 2
  %1022 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1021, align 8
  %1023 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1022) #12
  %1024 = load i32*, i32** %1015, align 8
  %1025 = getelementptr inbounds i32, i32* %1024, i64 %1014
  store i32 %1023, i32* %1025, align 4
  %1026 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %1009, align 8
  %1027 = load i32, i32* %1011, align 4
  %1028 = and i32 %1027, 16777215
  %1029 = zext i32 %1028 to i64
  br label %1030

1030:                                             ; preds = %1020, %1008
  %1031 = phi i64 [ %1014, %1008 ], [ %1029, %1020 ]
  %1032 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1010, %1008 ], [ %1026, %1020 ]
  %1033 = phi i32 [ %1018, %1008 ], [ %1023, %1020 ]
  %1034 = zext i32 %1033 to i64
  %1035 = shl nuw nsw i64 %1034, 3
  %1036 = or i64 %1035, 996432412673
  %1037 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1032, i64 0, i32 13, i32 0, i32 0
  %1038 = load i64*, i64** %1037, align 8
  %1039 = lshr i64 %1031, 6
  %1040 = getelementptr inbounds i64, i64* %1038, i64 %1039
  %1041 = and i64 %1031, 63
  %1042 = shl i64 1, %1041
  %1043 = load i64, i64* %1040, align 8
  %1044 = or i64 %1043, %1042
  store i64 %1044, i64* %1040, align 8
  br label %1083

1045:                                             ; preds = %1007
  %1046 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %3, i64 0, i32 0
  %1047 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %1046, align 8
  %1048 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %1049 = load i32, i32* %1048, align 4
  %1050 = and i32 %1049, 16777215
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1047, i64 0, i32 15, i32 0, i32 0, i32 0
  %1053 = load i32*, i32** %1052, align 8
  %1054 = getelementptr inbounds i32, i32* %1053, i64 %1051
  %1055 = load i32, i32* %1054, align 4
  %1056 = icmp eq i32 %1055, -1
  br i1 %1056, label %1057, label %1067

1057:                                             ; preds = %1045
  %1058 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1047, i64 0, i32 2
  %1059 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1058, align 8
  %1060 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1059) #12
  %1061 = load i32*, i32** %1052, align 8
  %1062 = getelementptr inbounds i32, i32* %1061, i64 %1051
  store i32 %1060, i32* %1062, align 4
  %1063 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %1046, align 8
  %1064 = load i32, i32* %1048, align 4
  %1065 = and i32 %1064, 16777215
  %1066 = zext i32 %1065 to i64
  br label %1067

1067:                                             ; preds = %1057, %1045
  %1068 = phi i64 [ %1051, %1045 ], [ %1066, %1057 ]
  %1069 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1047, %1045 ], [ %1063, %1057 ]
  %1070 = phi i32 [ %1055, %1045 ], [ %1060, %1057 ]
  %1071 = zext i32 %1070 to i64
  %1072 = shl nuw nsw i64 %1071, 3
  %1073 = or i64 %1072, 652835028993
  %1074 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1069, i64 0, i32 13, i32 0, i32 0
  %1075 = load i64*, i64** %1074, align 8
  %1076 = lshr i64 %1068, 6
  %1077 = getelementptr inbounds i64, i64* %1075, i64 %1076
  %1078 = and i64 %1068, 63
  %1079 = shl i64 1, %1078
  %1080 = load i64, i64* %1077, align 8
  %1081 = or i64 %1080, %1079
  store i64 %1081, i64* %1077, align 8
  br label %1083

1082:                                             ; preds = %1007
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

1083:                                             ; preds = %955, %963, %994, %1030, %1067
  %1084 = phi i64 [ %961, %955 ], [ %1073, %1067 ], [ %1036, %1030 ], [ %974, %963 ], [ %1005, %994 ]
  %1085 = and i64 %1084, 7
  %1086 = icmp eq i64 %1085, 0
  br i1 %1086, label %1087, label %1094

1087:                                             ; preds = %987, %976, %1083
  %1088 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0
  %1089 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %1090 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %1089, align 8
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1091) #12
  %1092 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %10 to i64*
  store i64 461059, i64* %1092, align 8
  %1093 = call %"class.v8::internal::compiler::StateValueDescriptor"* @_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEmRS9_(%"class.std::__1::vector.1279"* %1088, %"class.v8::internal::compiler::StateValueDescriptor"* %1090, i64 1, %"class.v8::internal::compiler::StateValueDescriptor"* nonnull dereferenceable(16) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1091) #12
  br label %1315

1094:                                             ; preds = %1083
  %1095 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0, i32 0, i32 1
  %1096 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1095, align 8
  %1097 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1098 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1097, align 8
  %1099 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1096, %1098
  %1100 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1098 to i64
  br i1 %1099, label %1106, label %1101

1101:                                             ; preds = %1094
  %1102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1096, i64 0, i32 0
  store i64 %1084, i64* %1102, align 8
  %1103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1096, i64 1
  %1104 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1103 to i64
  %1105 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1095 to i64*
  store i64 %1104, i64* %1105, align 8
  br label %1314

1106:                                             ; preds = %1094
  %1107 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1096 to i64
  %1108 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1095 to i64*
  %1109 = bitcast %"class.v8::internal::ZoneVector.1240"* %2 to i64*
  %1110 = load i64, i64* %1109, align 8
  %1111 = sub i64 %1107, %1110
  %1112 = ashr exact i64 %1111, 3
  %1113 = add nsw i64 %1112, 1
  %1114 = icmp ugt i64 %1113, 268435455
  br i1 %1114, label %1115, label %1117

1115:                                             ; preds = %1106
  %1116 = bitcast %"class.v8::internal::ZoneVector.1240"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1116) #13
  unreachable

1117:                                             ; preds = %1106
  %1118 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1097 to i64*
  %1119 = sub i64 %1100, %1110
  %1120 = ashr exact i64 %1119, 3
  %1121 = icmp ult i64 %1120, 134217727
  br i1 %1121, label %1122, label %1127

1122:                                             ; preds = %1117
  %1123 = ashr exact i64 %1119, 2
  %1124 = icmp ult i64 %1123, %1113
  %1125 = select i1 %1124, i64 %1113, i64 %1123
  %1126 = icmp eq i64 %1125, 0
  br i1 %1126, label %1145, label %1127

1127:                                             ; preds = %1122, %1117
  %1128 = phi i64 [ %1125, %1122 ], [ 268435455, %1117 ]
  %1129 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1130 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1129, align 8
  %1131 = shl i64 %1128, 3
  %1132 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1130, i64 0, i32 2
  %1133 = load i64, i64* %1132, align 8
  %1134 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1130, i64 0, i32 3
  %1135 = load i64, i64* %1134, align 8
  %1136 = sub i64 %1135, %1133
  %1137 = icmp ugt i64 %1131, %1136
  br i1 %1137, label %1138, label %1140, !prof !2

1138:                                             ; preds = %1127
  %1139 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1130, i64 %1131) #12
  br label %1142

1140:                                             ; preds = %1127
  %1141 = add i64 %1133, %1131
  store i64 %1141, i64* %1132, align 8
  br label %1142

1142:                                             ; preds = %1140, %1138
  %1143 = phi i64 [ %1139, %1138 ], [ %1133, %1140 ]
  %1144 = inttoptr i64 %1143 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1145

1145:                                             ; preds = %1142, %1122
  %1146 = phi i64 [ %1128, %1142 ], [ 0, %1122 ]
  %1147 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1144, %1142 ], [ null, %1122 ]
  %1148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1147, i64 %1112
  %1149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1147, i64 %1146
  %1150 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1149 to i64
  %1151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 0, i32 0
  store i64 %1084, i64* %1151, align 8
  %1152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 1
  %1153 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1152 to i64
  %1154 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0, i32 0, i32 0
  %1155 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1154, align 8
  %1156 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1155 to i64
  %1157 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1095, align 8
  %1158 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1157, %1155
  br i1 %1158, label %1311, label %1159

1159:                                             ; preds = %1145
  %1160 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1, i32 0
  %1161 = ptrtoint i64* %1160 to i64
  %1162 = sub i64 %1161, %1156
  %1163 = lshr i64 %1162, 3
  %1164 = add nuw nsw i64 %1163, 1
  %1165 = icmp ult i64 %1164, 4
  br i1 %1165, label %1255, label %1166

1166:                                             ; preds = %1159
  %1167 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1, i32 0
  %1168 = ptrtoint i64* %1167 to i64
  %1169 = sub i64 %1168, %1156
  %1170 = lshr i64 %1169, 3
  %1171 = xor i64 %1170, -1
  %1172 = add nsw i64 %1112, %1171
  %1173 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1147, i64 %1172
  %1174 = xor i64 %1170, -1
  %1175 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 %1174
  %1176 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1173, %1157
  %1177 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1175, %1148
  %1178 = and i1 %1176, %1177
  br i1 %1178, label %1255, label %1179

1179:                                             ; preds = %1166
  %1180 = and i64 %1164, 4611686018427387900
  %1181 = sub nsw i64 0, %1180
  %1182 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 %1181
  %1183 = sub nsw i64 0, %1180
  %1184 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 %1183
  %1185 = add nsw i64 %1180, -4
  %1186 = lshr exact i64 %1185, 2
  %1187 = add nuw nsw i64 %1186, 1
  %1188 = and i64 %1187, 1
  %1189 = icmp eq i64 %1185, 0
  br i1 %1189, label %1234, label %1190

1190:                                             ; preds = %1179
  %1191 = sub nuw nsw i64 %1187, %1188
  %1192 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1
  %1193 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1
  br label %1194

1194:                                             ; preds = %1194, %1190
  %1195 = phi i64 [ 0, %1190 ], [ %1229, %1194 ]
  %1196 = phi i64 [ %1191, %1190 ], [ %1230, %1194 ]
  %1197 = sub i64 0, %1195
  %1198 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 %1197
  %1199 = sub i64 0, %1195
  %1200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1192, i64 %1199
  %1201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1200, i64 0, i32 0
  %1202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1198, i64 -1, i32 0
  %1203 = getelementptr inbounds i64, i64* %1201, i64 -1
  %1204 = bitcast i64* %1203 to <2 x i64>*
  %1205 = load <2 x i64>, <2 x i64>* %1204, align 8, !alias.scope !104
  %1206 = getelementptr inbounds i64, i64* %1201, i64 -3
  %1207 = bitcast i64* %1206 to <2 x i64>*
  %1208 = load <2 x i64>, <2 x i64>* %1207, align 8, !alias.scope !104
  %1209 = getelementptr inbounds i64, i64* %1202, i64 -1
  %1210 = bitcast i64* %1209 to <2 x i64>*
  store <2 x i64> %1205, <2 x i64>* %1210, align 8, !alias.scope !107, !noalias !104
  %1211 = getelementptr inbounds i64, i64* %1202, i64 -3
  %1212 = bitcast i64* %1211 to <2 x i64>*
  store <2 x i64> %1208, <2 x i64>* %1212, align 8, !alias.scope !107, !noalias !104
  %1213 = sub nuw nsw i64 -4, %1195
  %1214 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 %1213
  %1215 = sub nuw nsw i64 -4, %1195
  %1216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1193, i64 %1215
  %1217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1216, i64 0, i32 0
  %1218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1214, i64 -1, i32 0
  %1219 = getelementptr inbounds i64, i64* %1217, i64 -1
  %1220 = bitcast i64* %1219 to <2 x i64>*
  %1221 = load <2 x i64>, <2 x i64>* %1220, align 8, !alias.scope !104
  %1222 = getelementptr inbounds i64, i64* %1217, i64 -3
  %1223 = bitcast i64* %1222 to <2 x i64>*
  %1224 = load <2 x i64>, <2 x i64>* %1223, align 8, !alias.scope !104
  %1225 = getelementptr inbounds i64, i64* %1218, i64 -1
  %1226 = bitcast i64* %1225 to <2 x i64>*
  store <2 x i64> %1221, <2 x i64>* %1226, align 8, !alias.scope !107, !noalias !104
  %1227 = getelementptr inbounds i64, i64* %1218, i64 -3
  %1228 = bitcast i64* %1227 to <2 x i64>*
  store <2 x i64> %1224, <2 x i64>* %1228, align 8, !alias.scope !107, !noalias !104
  %1229 = add i64 %1195, 8
  %1230 = add i64 %1196, -2
  %1231 = icmp eq i64 %1230, 0
  br i1 %1231, label %1232, label %1194, !llvm.loop !109

1232:                                             ; preds = %1194
  %1233 = sub nuw nsw i64 -8, %1195
  br label %1234

1234:                                             ; preds = %1232, %1179
  %1235 = phi i64 [ 0, %1179 ], [ %1233, %1232 ]
  %1236 = icmp eq i64 %1188, 0
  br i1 %1236, label %1253, label %1237

1237:                                             ; preds = %1234
  %1238 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 %1235
  %1239 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1
  %1240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1239, i64 %1235
  %1241 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1240, i64 0, i32 0
  %1242 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1238, i64 -1, i32 0
  %1243 = getelementptr inbounds i64, i64* %1241, i64 -1
  %1244 = bitcast i64* %1243 to <2 x i64>*
  %1245 = load <2 x i64>, <2 x i64>* %1244, align 8, !alias.scope !104
  %1246 = getelementptr inbounds i64, i64* %1241, i64 -3
  %1247 = bitcast i64* %1246 to <2 x i64>*
  %1248 = load <2 x i64>, <2 x i64>* %1247, align 8, !alias.scope !104
  %1249 = getelementptr inbounds i64, i64* %1242, i64 -1
  %1250 = bitcast i64* %1249 to <2 x i64>*
  store <2 x i64> %1245, <2 x i64>* %1250, align 8, !alias.scope !107, !noalias !104
  %1251 = getelementptr inbounds i64, i64* %1242, i64 -3
  %1252 = bitcast i64* %1251 to <2 x i64>*
  store <2 x i64> %1248, <2 x i64>* %1252, align 8, !alias.scope !107, !noalias !104
  br label %1253

1253:                                             ; preds = %1234, %1237
  %1254 = icmp eq i64 %1164, %1180
  br i1 %1254, label %1311, label %1255

1255:                                             ; preds = %1253, %1166, %1159
  %1256 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1148, %1166 ], [ %1148, %1159 ], [ %1182, %1253 ]
  %1257 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1157, %1166 ], [ %1157, %1159 ], [ %1184, %1253 ]
  %1258 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1257, i64 -1, i32 0
  %1259 = ptrtoint i64* %1258 to i64
  %1260 = sub i64 %1259, %1156
  %1261 = lshr i64 %1260, 3
  %1262 = add nuw nsw i64 %1261, 1
  %1263 = and i64 %1262, 7
  %1264 = icmp eq i64 %1263, 0
  br i1 %1264, label %1276, label %1265

1265:                                             ; preds = %1255, %1265
  %1266 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1273, %1265 ], [ %1256, %1255 ]
  %1267 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1269, %1265 ], [ %1257, %1255 ]
  %1268 = phi i64 [ %1274, %1265 ], [ %1263, %1255 ]
  %1269 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1267, i64 -1
  %1270 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1269, i64 0, i32 0
  %1271 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1266, i64 -1, i32 0
  %1272 = load i64, i64* %1270, align 8
  store i64 %1272, i64* %1271, align 8
  %1273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1266, i64 -1
  %1274 = add i64 %1268, -1
  %1275 = icmp eq i64 %1274, 0
  br i1 %1275, label %1276, label %1265, !llvm.loop !110

1276:                                             ; preds = %1265, %1255
  %1277 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1255 ], [ %1273, %1265 ]
  %1278 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1256, %1255 ], [ %1273, %1265 ]
  %1279 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1257, %1255 ], [ %1269, %1265 ]
  %1280 = icmp ult i64 %1260, 56
  br i1 %1280, label %1311, label %1281

1281:                                             ; preds = %1276, %1281
  %1282 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1309, %1281 ], [ %1278, %1276 ]
  %1283 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1305, %1281 ], [ %1279, %1276 ]
  %1284 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -1, i32 0
  %1285 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -1, i32 0
  %1286 = load i64, i64* %1284, align 8
  store i64 %1286, i64* %1285, align 8
  %1287 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -2, i32 0
  %1288 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -2, i32 0
  %1289 = load i64, i64* %1287, align 8
  store i64 %1289, i64* %1288, align 8
  %1290 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -3, i32 0
  %1291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -3, i32 0
  %1292 = load i64, i64* %1290, align 8
  store i64 %1292, i64* %1291, align 8
  %1293 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -4, i32 0
  %1294 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -4, i32 0
  %1295 = load i64, i64* %1293, align 8
  store i64 %1295, i64* %1294, align 8
  %1296 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -5, i32 0
  %1297 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -5, i32 0
  %1298 = load i64, i64* %1296, align 8
  store i64 %1298, i64* %1297, align 8
  %1299 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -6, i32 0
  %1300 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -6, i32 0
  %1301 = load i64, i64* %1299, align 8
  store i64 %1301, i64* %1300, align 8
  %1302 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -7, i32 0
  %1303 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -7, i32 0
  %1304 = load i64, i64* %1302, align 8
  store i64 %1304, i64* %1303, align 8
  %1305 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1283, i64 -8
  %1306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1305, i64 0, i32 0
  %1307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -8, i32 0
  %1308 = load i64, i64* %1306, align 8
  store i64 %1308, i64* %1307, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1282, i64 -8
  %1310 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1305, %1155
  br i1 %1310, label %1311, label %1281, !llvm.loop !111

1311:                                             ; preds = %1276, %1281, %1253, %1145
  %1312 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1148, %1145 ], [ %1182, %1253 ], [ %1277, %1276 ], [ %1309, %1281 ]
  %1313 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1312 to i64
  store i64 %1313, i64* %1109, align 8
  store i64 %1153, i64* %1108, align 8
  store i64 %1150, i64* %1118, align 8
  br label %1314

1314:                                             ; preds = %1101, %1311
  call void @_ZN2v88internal8compiler14StateValueList9PushPlainENS0_11MachineTypeE(%"class.v8::internal::compiler::StateValueList"* %1, i16 %6)
  br label %1315

1315:                                             ; preds = %936, %904, %1087, %1314, %254, %34, %948, %257
  %1316 = phi i64 [ 0, %257 ], [ 0, %948 ], [ 0, %34 ], [ 0, %254 ], [ 0, %1087 ], [ 1, %1314 ], [ 0, %904 ], [ %945, %936 ]
  ret i64 %1316
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14StateValueList21PushArgumentsElementsENS0_19CreateArgumentsTypeE(%"class.v8::internal::compiler::StateValueList"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = zext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %6, align 8
  %8 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %5, %7
  %9 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %7 to i64
  br i1 %8, label %10, label %16

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %5 to i64*
  store i64 461056, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %5, i64 0, i32 2, i32 0
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %5, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %4 to i64*
  store i64 %14, i64* %15, align 8
  br label %110

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %5 to i64
  %18 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %4 to i64*
  %19 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 4
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 134217727
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = ashr exact i64 %29, 4
  %31 = icmp ult i64 %30, 67108863
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 3
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 134217727, %27 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = shl i64 %38, 4
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %37
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %41) #12
  br label %52

50:                                               ; preds = %37
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %55

55:                                               ; preds = %52, %32
  %56 = phi i64 [ %38, %52 ], [ 0, %32 ]
  %57 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %54, %52 ], [ null, %32 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %57, i64 %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %57, i64 %56
  %60 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %59 to i64
  %61 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %58 to i64*
  store i64 461056, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %57, i64 %22, i32 2, i32 0
  store i64 %3, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %58, i64 1
  %64 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %65, align 8
  %67 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %4, align 8
  %68 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %67, %66
  br i1 %68, label %107, label %69

69:                                               ; preds = %55
  %70 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %66 to i64
  %71 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %67, i64 -1, i32 0
  %72 = ptrtoint i8* %71 to i64
  %73 = sub i64 %72, %70
  %74 = lshr i64 %73, 4
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %69, %78
  %79 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %85, %78 ], [ %58, %69 ]
  %80 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %82, %78 ], [ %67, %69 ]
  %81 = phi i64 [ %86, %78 ], [ %76, %69 ]
  %82 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %80, i64 -1
  %83 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %79, i64 -1, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %82, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 16, i1 false) #12
  %85 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %79, i64 -1
  %86 = add i64 %81, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !112

88:                                               ; preds = %78, %69
  %89 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %69 ], [ %85, %78 ]
  %90 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %58, %69 ], [ %85, %78 ]
  %91 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %67, %69 ], [ %82, %78 ]
  %92 = icmp ult i64 %73, 48
  br i1 %92, label %107, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %105, %93 ], [ %90, %88 ]
  %95 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %102, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -1, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #12
  %98 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -2, i32 0
  %99 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #12
  %100 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -3, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -4
  %103 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -4, i32 0
  %104 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %102, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #12
  %105 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -4
  %106 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %102, %66
  br i1 %106, label %107, label %93

107:                                              ; preds = %88, %93, %55
  %108 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %58, %55 ], [ %89, %88 ], [ %105, %93 ]
  %109 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %108 to i64
  store i64 %109, i64* %19, align 8
  store i64 %64, i64* %18, align 8
  store i64 %60, i64* %28, align 8
  br label %110

110:                                              ; preds = %10, %107
  ret void
}

declare zeroext i8 @_ZN2v88internal8compiler20ArgumentsStateTypeOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14StateValueList19PushArgumentsLengthEv(%"class.v8::internal::compiler::StateValueList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %4, align 8
  %6 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %3, %5
  %7 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %5 to i64
  br i1 %6, label %8, label %13

8:                                                ; preds = %1
  %9 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %3 to i64*
  store i64 461057, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %3, i64 1
  %11 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %10 to i64
  %12 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %2 to i64*
  store i64 %11, i64* %12, align 8
  br label %106

13:                                               ; preds = %1
  %14 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %3 to i64
  %15 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %2 to i64*
  %16 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %14, %17
  %19 = ashr exact i64 %18, 4
  %20 = add nsw i64 %19, 1
  %21 = icmp ugt i64 %20, 134217727
  br i1 %21, label %22, label %24

22:                                               ; preds = %13
  %23 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #13
  unreachable

24:                                               ; preds = %13
  %25 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %4 to i64*
  %26 = sub i64 %7, %17
  %27 = ashr exact i64 %26, 4
  %28 = icmp ult i64 %27, 67108863
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = ashr exact i64 %26, 3
  %31 = icmp ult i64 %30, %20
  %32 = select i1 %31, i64 %20, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %29, %24
  %35 = phi i64 [ %32, %29 ], [ 134217727, %24 ]
  %36 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %37 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %36, align 8
  %38 = shl i64 %35, 4
  %39 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %40
  %44 = icmp ugt i64 %38, %43
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %34
  %46 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %37, i64 %38) #12
  br label %49

47:                                               ; preds = %34
  %48 = add i64 %40, %38
  store i64 %48, i64* %39, align 8
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %46, %45 ], [ %40, %47 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %52

52:                                               ; preds = %49, %29
  %53 = phi i64 [ %35, %49 ], [ 0, %29 ]
  %54 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %51, %49 ], [ null, %29 ]
  %55 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %54, i64 %19
  %56 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %54, i64 %53
  %57 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %56 to i64
  %58 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %55 to i64*
  store i64 461057, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %55, i64 1
  %60 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %59 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %61, align 8
  %63 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %2, align 8
  %64 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %63, %62
  br i1 %64, label %103, label %65

65:                                               ; preds = %52
  %66 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %62 to i64
  %67 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %63, i64 -1, i32 0
  %68 = ptrtoint i8* %67 to i64
  %69 = sub i64 %68, %66
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %65, %74
  %75 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %81, %74 ], [ %55, %65 ]
  %76 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %78, %74 ], [ %63, %65 ]
  %77 = phi i64 [ %82, %74 ], [ %72, %65 ]
  %78 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %76, i64 -1
  %79 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %75, i64 -1, i32 0
  %80 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %78, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 16, i1 false) #12
  %81 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %75, i64 -1
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %74, !llvm.loop !113

84:                                               ; preds = %74, %65
  %85 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %65 ], [ %81, %74 ]
  %86 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %55, %65 ], [ %81, %74 ]
  %87 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %63, %65 ], [ %78, %74 ]
  %88 = icmp ult i64 %69, 48
  br i1 %88, label %103, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %101, %89 ], [ %86, %84 ]
  %91 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %98, %89 ], [ %87, %84 ]
  %92 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 -1, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %91, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #12
  %94 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 -2, i32 0
  %95 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %91, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #12
  %96 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 -3, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %91, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #12
  %98 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %91, i64 -4
  %99 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 -4, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %98, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #12
  %101 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 -4
  %102 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %98, %62
  br i1 %102, label %103, label %89

103:                                              ; preds = %84, %89, %52
  %104 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %55, %52 ], [ %85, %84 ], [ %101, %89 ]
  %105 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %104 to i64
  store i64 %105, i64* %16, align 8
  store i64 %60, i64* %15, align 8
  store i64 %57, i64* %25, align 8
  br label %106

106:                                              ; preds = %8, %103
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

declare %"class.v8::internal::ZoneVector.1533"* @_ZN2v88internal8compiler14MachineTypesOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler4Node7InputAtEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %9, label %13

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 16
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %12, %9 ], [ %8, %2 ]
  %15 = inttoptr i64 %14 to %"class.v8::internal::compiler::Node"**
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, i64 %16
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  ret %"class.v8::internal::compiler::Node"* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14StateValueList13PushDuplicateEm(%"class.v8::internal::compiler::StateValueList"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %5, align 8
  %7 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %6 to i64
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %4 to i64*
  store i64 461061, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %4, i64 0, i32 2, i32 0
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %4, i64 1
  %13 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %12 to i64
  %14 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %3 to i64*
  store i64 %13, i64* %14, align 8
  br label %109

15:                                               ; preds = %2
  %16 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %4 to i64
  %17 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %3 to i64*
  %18 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = icmp ugt i64 %22, 134217727
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #13
  unreachable

26:                                               ; preds = %15
  %27 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %5 to i64*
  %28 = sub i64 %8, %19
  %29 = ashr exact i64 %28, 4
  %30 = icmp ult i64 %29, 67108863
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = ashr exact i64 %28, 3
  %33 = icmp ult i64 %32, %22
  %34 = select i1 %33, i64 %22, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %31, %26
  %37 = phi i64 [ %34, %31 ], [ 134217727, %26 ]
  %38 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %39 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %38, align 8
  %40 = shl i64 %37, 4
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %42
  %46 = icmp ugt i64 %40, %45
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %36
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %39, i64 %40) #12
  br label %51

49:                                               ; preds = %36
  %50 = add i64 %42, %40
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %54

54:                                               ; preds = %51, %31
  %55 = phi i64 [ %37, %51 ], [ 0, %31 ]
  %56 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %53, %51 ], [ null, %31 ]
  %57 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 %21
  %58 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 %55
  %59 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %58 to i64
  %60 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %57 to i64*
  store i64 461061, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 %21, i32 2, i32 0
  store i64 %1, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %57, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %62 to i64
  %64 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %64, align 8
  %66 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %3, align 8
  %67 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %66, %65
  br i1 %67, label %106, label %68

68:                                               ; preds = %54
  %69 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %65 to i64
  %70 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %66, i64 -1, i32 0
  %71 = ptrtoint i8* %70 to i64
  %72 = sub i64 %71, %69
  %73 = lshr i64 %72, 4
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %68, %77
  %78 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %84, %77 ], [ %57, %68 ]
  %79 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %81, %77 ], [ %66, %68 ]
  %80 = phi i64 [ %85, %77 ], [ %75, %68 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %79, i64 -1
  %82 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %78, i64 -1, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %81, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false) #12
  %84 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %78, i64 -1
  %85 = add i64 %80, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !114

87:                                               ; preds = %77, %68
  %88 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %68 ], [ %84, %77 ]
  %89 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %57, %68 ], [ %84, %77 ]
  %90 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %66, %68 ], [ %81, %77 ]
  %91 = icmp ult i64 %72, 48
  br i1 %91, label %106, label %92

92:                                               ; preds = %87, %92
  %93 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %104, %92 ], [ %89, %87 ]
  %94 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %101, %92 ], [ %90, %87 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %93, i64 -1, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #12
  %97 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %93, i64 -2, i32 0
  %98 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 16, i1 false) #12
  %99 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %93, i64 -3, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #12
  %101 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -4
  %102 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %93, i64 -4, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %101, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #12
  %104 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %93, i64 -4
  %105 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %101, %65
  br i1 %105, label %106, label %92

106:                                              ; preds = %87, %92, %54
  %107 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %57, %54 ], [ %88, %87 ], [ %104, %92 ]
  %108 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %107 to i64
  store i64 %108, i64* %18, align 8
  store i64 %63, i64* %17, align 8
  store i64 %59, i64* %27, align 8
  br label %109

109:                                              ; preds = %9, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14StateValueList9PushPlainENS0_11MachineTypeE(%"class.v8::internal::compiler::StateValueList"*, i16) local_unnamed_addr #0 comdat align 2 {
  %3 = zext i16 %1 to i64
  %4 = shl nuw nsw i64 %3, 8
  %5 = or i64 %4, 2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %8, align 8
  %10 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %7, %9
  %11 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %9 to i64
  br i1 %10, label %12, label %17

12:                                               ; preds = %2
  %13 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %7 to i64*
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %7, i64 1
  %15 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %14 to i64
  %16 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %110

17:                                               ; preds = %2
  %18 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %7 to i64
  %19 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %6 to i64*
  %20 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 4
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 134217727
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.v8::internal::compiler::StateValueList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #13
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %8 to i64*
  %30 = sub i64 %11, %21
  %31 = ashr exact i64 %30, 4
  %32 = icmp ult i64 %31, 67108863
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 3
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %33, %28
  %39 = phi i64 [ %36, %33 ], [ 134217727, %28 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %41 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  %42 = shl i64 %39, 4
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %44
  %48 = icmp ugt i64 %42, %47
  br i1 %48, label %49, label %51, !prof !2

49:                                               ; preds = %38
  %50 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %41, i64 %42) #12
  br label %53

51:                                               ; preds = %38
  %52 = add i64 %44, %42
  store i64 %52, i64* %43, align 8
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi i64 [ %50, %49 ], [ %44, %51 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %56

56:                                               ; preds = %53, %33
  %57 = phi i64 [ %39, %53 ], [ 0, %33 ]
  %58 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %55, %53 ], [ null, %33 ]
  %59 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %58, i64 %23
  %60 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %58, i64 %57
  %61 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %60 to i64
  %62 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %59 to i64*
  store i64 %5, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %59, i64 1
  %64 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %65, align 8
  %67 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %6, align 8
  %68 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %67, %66
  br i1 %68, label %107, label %69

69:                                               ; preds = %56
  %70 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %66 to i64
  %71 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %67, i64 -1, i32 0
  %72 = ptrtoint i8* %71 to i64
  %73 = sub i64 %72, %70
  %74 = lshr i64 %73, 4
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %69, %78
  %79 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %85, %78 ], [ %59, %69 ]
  %80 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %82, %78 ], [ %67, %69 ]
  %81 = phi i64 [ %86, %78 ], [ %76, %69 ]
  %82 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %80, i64 -1
  %83 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %79, i64 -1, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %82, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 16, i1 false) #12
  %85 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %79, i64 -1
  %86 = add i64 %81, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !115

88:                                               ; preds = %78, %69
  %89 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %69 ], [ %85, %78 ]
  %90 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %59, %69 ], [ %85, %78 ]
  %91 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %67, %69 ], [ %82, %78 ]
  %92 = icmp ult i64 %73, 48
  br i1 %92, label %107, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %105, %93 ], [ %90, %88 ]
  %95 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %102, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -1, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #12
  %98 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -2, i32 0
  %99 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #12
  %100 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -3, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %95, i64 -4
  %103 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -4, i32 0
  %104 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %102, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #12
  %105 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %94, i64 -4
  %106 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %102, %66
  br i1 %106, label %107, label %93

107:                                              ; preds = %88, %93, %56
  %108 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %59, %56 ], [ %89, %88 ], [ %105, %93 ]
  %109 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %108 to i64
  store i64 %109, i64* %20, align 8
  store i64 %64, i64* %19, align 8
  store i64 %61, i64* %29, align 8
  br label %110

110:                                              ; preds = %12, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::ZoneVector.1240"*, %"class.v8::internal::compiler::OperandGenerator"* nocapture, %"class.v8::internal::compiler::StateObjectDeduplicator"*, %"class.v8::internal::compiler::Node"*, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::compiler::StateValueDescriptor", align 8
  %10 = alloca %"class.v8::internal::Zone"*, align 8
  %11 = alloca %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", align 8
  %12 = alloca %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", align 8
  %13 = alloca %"class.v8::internal::compiler::StateValuesAccess::iterator", align 8
  %14 = alloca %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"*, align 8
  %15 = bitcast %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %11, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %5, %"class.v8::internal::compiler::Node"** %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %11, i64 0, i32 1
  store i32 %6, i32* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 22, i32 0, i32 0
  %19 = call %"struct.std::__1::__hash_node_base.1374"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_(%"class.std::__1::__hash_table.1370"* %18, %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* nonnull dereferenceable(16) %11) #12
  %20 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %19, null
  br i1 %20, label %48, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %19, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base.1374"* %22 to %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"**
  %24 = load %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"*, %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0, i32 0, i32 1
  %27 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %28, align 8
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %30, align 8
  %32 = call %"class.v8::internal::compiler::InstructionOperand"* @_ZNSt3__16vectorIN2v88internal8compiler18InstructionOperandENS2_13ZoneAllocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1241"* %25, %"class.v8::internal::compiler::InstructionOperand"* %27, %"class.v8::internal::compiler::InstructionOperand"* %29, %"class.v8::internal::compiler::InstructionOperand"* %31) #12
  %33 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %34, align 8
  %36 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %24, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %36, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %24, i64 0, i32 1, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %37, i64 %39
  %41 = call %"class.v8::internal::compiler::StateValueDescriptor"* @_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1279"* %33, %"class.v8::internal::compiler::StateValueDescriptor"* %35, %"class.v8::internal::compiler::StateValueDescriptor"* %37, %"class.v8::internal::compiler::StateValueDescriptor"* %40) #12
  %42 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %30 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %24 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  br label %136

48:                                               ; preds = %8
  %49 = bitcast %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 0
  store %"class.v8::internal::compiler::StateValueList"* %1, %"class.v8::internal::compiler::StateValueList"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 1
  store %"class.v8::internal::ZoneVector.1240"* %2, %"class.v8::internal::ZoneVector.1240"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 2
  store %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::StateObjectDeduplicator"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 3
  %54 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.v8::internal::compiler::StateValueList"* %1 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = ashr exact i64 %59, 4
  store i64 %60, i64* %53, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 4
  %62 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %64 = bitcast %"class.v8::internal::compiler::StateValueList"*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector.1287"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = ashr exact i64 %68, 3
  store i64 %69, i64* %61, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 5
  %71 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2, i64 0, i32 0, i32 0, i32 1
  %72 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.v8::internal::ZoneVector.1240"* %2 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 3
  store i64 %77, i64* %70, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder", %"class.v8::internal::compiler::InstructionSelector::CachedStateValuesBuilder"* %12, i64 0, i32 6
  %79 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.v8::internal::compiler::Node"*** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = ashr exact i64 %84, 3
  store i64 %85, i64* %78, align 8
  %86 = bitcast %"class.v8::internal::compiler::StateValuesAccess::iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %86) #12
  call void @_ZN2v88internal8compiler17StateValuesAccess8iteratorC1EPNS1_4NodeE(%"class.v8::internal::compiler::StateValuesAccess::iterator"* nonnull %13, %"class.v8::internal::compiler::Node"* %5) #12
  %87 = getelementptr inbounds %"class.v8::internal::compiler::StateValuesAccess::iterator", %"class.v8::internal::compiler::StateValuesAccess::iterator"* %13, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %116, label %90

90:                                               ; preds = %48
  %91 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %1, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %9, i64 0, i32 0
  %93 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"* %9 to i64*
  br label %94

94:                                               ; preds = %90, %101
  %95 = phi i64 [ 0, %90 ], [ %107, %101 ]
  %96 = call i64 @_ZN2v88internal8compiler17StateValuesAccess8iterator19AdvanceTillNotEmptyEv(%"class.v8::internal::compiler::StateValuesAccess::iterator"* nonnull %13) #12
  %97 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #12
  store i64 461059, i64* %93, align 8
  %98 = call %"class.v8::internal::compiler::StateValueDescriptor"* @_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEmRS9_(%"class.std::__1::vector.1279"* %91, %"class.v8::internal::compiler::StateValueDescriptor"* %97, i64 %96, %"class.v8::internal::compiler::StateValueDescriptor"* nonnull dereferenceable(16) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #12
  %99 = load i32, i32* %87, align 8
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %111, label %101

101:                                              ; preds = %94
  %102 = call { %"class.v8::internal::compiler::Node"*, i64 } @_ZN2v88internal8compiler17StateValuesAccess8iteratordeEv(%"class.v8::internal::compiler::StateValuesAccess::iterator"* nonnull %13) #12
  %103 = extractvalue { %"class.v8::internal::compiler::Node"*, i64 } %102, 0
  %104 = extractvalue { %"class.v8::internal::compiler::Node"*, i64 } %102, 1
  %105 = trunc i64 %104 to i16
  %106 = call i64 @_ZN2v88internal8compiler19InstructionSelector32AddOperandToStateValueDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS0_11MachineTypeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %1, %"class.v8::internal::ZoneVector.1240"* %2, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %103, i16 %105, i32 %6, %"class.v8::internal::Zone"* %7)
  %107 = add i64 %106, %95
  %108 = call dereferenceable(200) %"class.v8::internal::compiler::StateValuesAccess::iterator"* @_ZN2v88internal8compiler17StateValuesAccess8iteratorppEv(%"class.v8::internal::compiler::StateValuesAccess::iterator"* nonnull %13) #12
  %109 = load i32, i32* %87, align 8
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %111, label %94

111:                                              ; preds = %101, %94
  %112 = phi i64 [ %95, %94 ], [ %107, %101 ]
  %113 = load %"class.v8::internal::compiler::StateObjectDeduplicator"*, %"class.v8::internal::compiler::StateObjectDeduplicator"** %52, align 8
  %114 = load i64, i64* %78, align 8
  %115 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %113 to i64*
  br label %116

116:                                              ; preds = %111, %48
  %117 = phi i64* [ %115, %111 ], [ %82, %48 ]
  %118 = phi i64 [ %114, %111 ], [ %85, %48 ]
  %119 = phi %"class.v8::internal::compiler::StateObjectDeduplicator"* [ %113, %111 ], [ %4, %48 ]
  %120 = phi i64 [ %112, %111 ], [ 0, %48 ]
  %121 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %119, i64 0, i32 0, i32 0, i32 0, i32 1
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = load i64, i64* %117, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = icmp eq i64 %126, %118
  br i1 %127, label %128, label %135

128:                                              ; preds = %116
  %129 = bitcast %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #12
  %130 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %131 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %130, align 8
  %132 = bitcast %"class.v8::internal::Zone"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132)
  store %"class.v8::internal::Zone"* %131, %"class.v8::internal::Zone"** %10, align 8
  %133 = call %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* @_ZN2v88internal4Zone3NewINS0_8compiler19InstructionSelector17CachedStateValuesEJRPS1_RPNS3_14StateValueListERmRPNS0_10ZoneVectorINS3_18InstructionOperandEEESB_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %131, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %10, %"class.v8::internal::compiler::StateValueList"** nonnull dereferenceable(8) %50, i64* dereferenceable(8) %53, %"class.v8::internal::ZoneVector.1240"** dereferenceable(8) %51, i64* dereferenceable(8) %70) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132)
  store %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %133, %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** %14, align 8
  %134 = call { %"struct.std::__1::__hash_node_base.1374"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JRS6_S8_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1370"* %18, %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* nonnull dereferenceable(16) %11, %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* nonnull dereferenceable(16) %11, %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** nonnull dereferenceable(8) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #12
  br label %135

135:                                              ; preds = %128, %116
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %49) #12
  br label %136

136:                                              ; preds = %135, %21
  %137 = phi i64 [ %47, %21 ], [ %120, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  ret i64 %137
}

declare i64 @_ZN2v88internal8compiler17StateValuesAccess8iterator19AdvanceTillNotEmptyEv(%"class.v8::internal::compiler::StateValuesAccess::iterator"*) local_unnamed_addr #3

declare { %"class.v8::internal::compiler::Node"*, i64 } @_ZN2v88internal8compiler17StateValuesAccess8iteratordeEv(%"class.v8::internal::compiler::StateValuesAccess::iterator"*) local_unnamed_addr #3

declare dereferenceable(200) %"class.v8::internal::compiler::StateValuesAccess::iterator"* @_ZN2v88internal8compiler17StateValuesAccess8iteratorppEv(%"class.v8::internal::compiler::StateValuesAccess::iterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_20FrameStateDescriptorENS1_10FrameStateEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::OperandGenerator"* nocapture, %"class.v8::internal::compiler::StateObjectDeduplicator"*, %"class.v8::internal::ZoneVector.1240"*, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %1, i64 0, i32 9
  %10 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::FrameStateDescriptor"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %14 = add i64 %13, 32
  br label %32

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 251658240
  %19 = icmp eq i32 %18, 251658240
  %20 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %21 = add i64 %20, 32
  br i1 %19, label %22, label %26

22:                                               ; preds = %15
  %23 = inttoptr i64 %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 16
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %15 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::Node"**
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, i64 5
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  %31 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_20FrameStateDescriptorENS1_10FrameStateEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::FrameStateDescriptor"* nonnull %10, %"class.v8::internal::compiler::Node"* %30, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::ZoneVector.1240"* %5, i32 %6, %"class.v8::internal::Zone"* %7)
  br label %32

32:                                               ; preds = %12, %26
  %33 = phi i64 [ %14, %12 ], [ %21, %26 ]
  %34 = phi i64 [ 0, %12 ], [ %31, %26 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 251658240
  %38 = icmp eq i32 %37, 251658240
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = inttoptr i64 %33 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 16
  br label %43

43:                                               ; preds = %32, %39
  %44 = phi i64 [ %42, %39 ], [ %33, %32 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %46 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %47 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, i64 2
  %49 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, i64 1
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, i64 3
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %55 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %56 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, i64 4
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %1, i64 0, i32 7
  %60 = tail call i64 @_ZNK2v88internal8compiler20FrameStateDescriptor7GetSizeEv(%"class.v8::internal::compiler::FrameStateDescriptor"* %1) #12
  %61 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.v8::internal::compiler::StateValueList"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 4
  %68 = icmp ult i64 %67, %60
  br i1 %68, label %69, label %142

69:                                               ; preds = %43
  %70 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %72, %65
  %74 = ashr exact i64 %73, 4
  %75 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %76 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %75, align 8
  %77 = shl i64 %60, 4
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %76, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %76, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %81, %79
  %83 = icmp ugt i64 %77, %82
  br i1 %83, label %84, label %86, !prof !2

84:                                               ; preds = %69
  %85 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %76, i64 %77) #12
  br label %88

86:                                               ; preds = %69
  %87 = add i64 %79, %77
  store i64 %87, i64* %78, align 8
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi i64 [ %85, %84 ], [ %79, %86 ]
  %90 = inttoptr i64 %89 to %"class.v8::internal::compiler::StateValueDescriptor"*
  %91 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 %74
  %92 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %91 to i64
  %93 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %90, i64 %60
  %94 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %93 to i64
  %95 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %95, align 8
  %97 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %70, align 8
  %98 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %97, %96
  br i1 %98, label %140, label %99

99:                                               ; preds = %88
  %100 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %96 to i64
  %101 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %97, i64 -1, i32 0
  %102 = ptrtoint i8* %101 to i64
  %103 = sub i64 %102, %100
  %104 = lshr i64 %103, 4
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 3
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %118, label %108

108:                                              ; preds = %99, %108
  %109 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %115, %108 ], [ %91, %99 ]
  %110 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %112, %108 ], [ %97, %99 ]
  %111 = phi i64 [ %116, %108 ], [ %106, %99 ]
  %112 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %110, i64 -1
  %113 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %109, i64 -1, i32 0
  %114 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %112, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #12
  %115 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %109, i64 -1
  %116 = add i64 %111, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %108, !llvm.loop !116

118:                                              ; preds = %108, %99
  %119 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %99 ], [ %115, %108 ]
  %120 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %91, %99 ], [ %115, %108 ]
  %121 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %97, %99 ], [ %112, %108 ]
  %122 = icmp ult i64 %103, 48
  br i1 %122, label %137, label %123

123:                                              ; preds = %118, %123
  %124 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %135, %123 ], [ %120, %118 ]
  %125 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %132, %123 ], [ %121, %118 ]
  %126 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %124, i64 -1, i32 0
  %127 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %125, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #12
  %128 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %124, i64 -2, i32 0
  %129 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %125, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #12
  %130 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %124, i64 -3, i32 0
  %131 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %125, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #12
  %132 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %125, i64 -4
  %133 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %124, i64 -4, i32 0
  %134 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %132, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #12
  %135 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %124, i64 -4
  %136 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %132, %96
  br i1 %136, label %137, label %123

137:                                              ; preds = %123, %118
  %138 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %119, %118 ], [ %135, %123 ]
  %139 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %138 to i64
  br label %140

140:                                              ; preds = %137, %88
  %141 = phi i64 [ %139, %137 ], [ %92, %88 ]
  store i64 %141, i64* %64, align 8
  store i64 %92, i64* %71, align 8
  store i64 %94, i64* %62, align 8
  br label %142

142:                                              ; preds = %43, %140
  %143 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector32AddOperandToStateValueDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS0_11MachineTypeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %59, %"class.v8::internal::ZoneVector.1240"* %5, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %58, i16 1801, i32 1, %"class.v8::internal::Zone"* %7)
  %144 = add i64 %143, %34
  %145 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %59, %"class.v8::internal::ZoneVector.1240"* %5, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %53, i32 %6, %"class.v8::internal::Zone"* %7)
  %146 = add i64 %144, %145
  %147 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %1, i64 0, i32 0
  %148 = load i32, i32* %147, align 8
  switch i32 %148, label %149 [
    i32 5, label %152
    i32 0, label %152
    i32 6, label %152
  ]

149:                                              ; preds = %142
  %150 = add i32 %148, -2
  %151 = icmp ult i32 %150, 3
  br i1 %151, label %152, label %155

152:                                              ; preds = %142, %142, %142, %149
  %153 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector32AddOperandToStateValueDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS0_11MachineTypeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %59, %"class.v8::internal::ZoneVector.1240"* %5, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %55, i16 1801, i32 1, %"class.v8::internal::Zone"* %7)
  %154 = add i64 %153, %146
  br label %155

155:                                              ; preds = %152, %149
  %156 = phi i64 [ %154, %152 ], [ %146, %149 ]
  %157 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %59, %"class.v8::internal::ZoneVector.1240"* %5, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %54, i32 %6, %"class.v8::internal::Zone"* %7)
  %158 = add i64 %157, %156
  %159 = tail call i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_14StateValueListEPNS0_10ZoneVectorINS1_18InstructionOperandEEEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS1_4NodeENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::StateValueList"* %59, %"class.v8::internal::ZoneVector.1240"* %5, %"class.v8::internal::compiler::OperandGenerator"* %3, %"class.v8::internal::compiler::StateObjectDeduplicator"* %4, %"class.v8::internal::compiler::Node"* %52, i32 %6, %"class.v8::internal::Zone"* %7)
  %160 = add i64 %158, %159
  ret i64 %160
}

declare i64 @_ZNK2v88internal8compiler20FrameStateDescriptor7GetSizeEv(%"class.v8::internal::compiler::FrameStateDescriptor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjNS1_18InstructionOperandEPNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjmPNS1_18InstructionOperandEmS4_mS4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %5, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::FlagsContinuation"* %3) #12
  ret %"class.v8::internal::compiler::Instruction"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjmPNS1_18InstructionOperandEmS4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, i64, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #0 align 2 {
  %8 = tail call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjmPNS1_18InstructionOperandEmS4_mS4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 %2, %"class.v8::internal::compiler::InstructionOperand"* %3, i64 %4, %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::FlagsContinuation"* %6)
  ret %"class.v8::internal::compiler::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjNS1_18InstructionOperandES3_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #0 align 2 {
  %6 = alloca [2 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %7 = bitcast [2 x %"class.v8::internal::compiler::InstructionOperand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds [2 x %"class.v8::internal::compiler::InstructionOperand"], [2 x %"class.v8::internal::compiler::InstructionOperand"]* %6, i64 0, i64 0, i32 0
  store i64 %2, i64* %8, align 16
  %9 = getelementptr inbounds [2 x %"class.v8::internal::compiler::InstructionOperand"], [2 x %"class.v8::internal::compiler::InstructionOperand"]* %6, i64 0, i64 1, i32 0
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds [2 x %"class.v8::internal::compiler::InstructionOperand"], [2 x %"class.v8::internal::compiler::InstructionOperand"]* %6, i64 0, i64 0
  %11 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjmPNS1_18InstructionOperandEmS4_mS4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 2, %"class.v8::internal::compiler::InstructionOperand"* nonnull %10, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::FlagsContinuation"* %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret %"class.v8::internal::compiler::Instruction"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjNS1_18InstructionOperandES3_S3_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, i64, i64, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #0 align 2 {
  %7 = alloca [3 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %8 = bitcast [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 0, i32 0
  store i64 %2, i64* %9, align 16
  %10 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 1, i32 0
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 2, i32 0
  store i64 %4, i64* %11, align 16
  %12 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 0
  %13 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjmPNS1_18InstructionOperandEmS4_mS4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 3, %"class.v8::internal::compiler::InstructionOperand"* nonnull %12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::FlagsContinuation"* %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret %"class.v8::internal::compiler::Instruction"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector20EmitWithContinuationEjmPNS1_18InstructionOperandEmS4_mS4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, i32, i64, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, i64, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, i64, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8::internal::compiler::Constant", align 8
  %11 = alloca %"class.v8::internal::compiler::Constant", align 8
  %12 = alloca %"class.v8::internal::compiler::Constant", align 8
  %13 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %14 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %13, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = shl i32 %17, 14
  %19 = or i32 %18, %1
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = shl i32 %23, 17
  %25 = or i32 %24, %19
  br label %26

26:                                               ; preds = %9, %21
  %27 = phi i32 [ %25, %21 ], [ %19, %9 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::ZoneVector.1240"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  %35 = inttoptr i64 %31 to %"class.v8::internal::compiler::InstructionOperand"*
  br i1 %34, label %38, label %36

36:                                               ; preds = %26
  %37 = inttoptr i64 %33 to %"class.v8::internal::compiler::InstructionOperand"*
  store %"class.v8::internal::compiler::InstructionOperand"* %37, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  br label %38

38:                                               ; preds = %26, %36
  %39 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %35, %26 ], [ %37, %36 ]
  %40 = icmp eq i64 %4, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %42 to i64*
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %28, i64 0, i32 0, i32 0, i32 0
  br label %65

46:                                               ; preds = %281, %38
  %47 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.1241"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %50, %52
  %54 = inttoptr i64 %50 to %"class.v8::internal::compiler::InstructionOperand"*
  br i1 %53, label %57, label %55

55:                                               ; preds = %46
  %56 = inttoptr i64 %52 to %"class.v8::internal::compiler::InstructionOperand"*
  store %"class.v8::internal::compiler::InstructionOperand"* %56, %"class.v8::internal::compiler::InstructionOperand"** %48, align 8
  br label %57

57:                                               ; preds = %46, %55
  %58 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %54, %46 ], [ %56, %55 ]
  %59 = icmp eq i64 %2, 0
  br i1 %59, label %285, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %61 to i64*
  %63 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %47, i64 0, i32 0, i32 0
  br label %304

65:                                               ; preds = %281, %41
  %66 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %39, %41 ], [ %282, %281 ]
  %67 = phi i64 [ 0, %41 ], [ %283, %281 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 %67
  %69 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %42, align 8
  %70 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %66, %69
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %68, i64 0, i32 0
  %73 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %66, i64 0, i32 0
  %74 = load i64, i64* %72, align 8
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %66, i64 1
  %76 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %75 to i64
  store i64 %76, i64* %30, align 8
  br label %281

77:                                               ; preds = %65
  %78 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %69 to i64
  %79 = load i64, i64* %32, align 8
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = add nsw i64 %81, 1
  %83 = icmp ugt i64 %82, 268435455
  br i1 %83, label %84, label %86

84:                                               ; preds = %77
  %85 = bitcast %"class.v8::internal::ZoneVector.1240"* %28 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #13
  unreachable

86:                                               ; preds = %77
  %87 = icmp ult i64 %81, 134217727
  br i1 %87, label %88, label %93

88:                                               ; preds = %86
  %89 = ashr exact i64 %80, 2
  %90 = icmp ult i64 %89, %82
  %91 = select i1 %90, i64 %82, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %110, label %93

93:                                               ; preds = %88, %86
  %94 = phi i64 [ %91, %88 ], [ 268435455, %86 ]
  %95 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, align 8
  %96 = shl i64 %94, 3
  %97 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %95, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %95, i64 0, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %100, %98
  %102 = icmp ugt i64 %96, %101
  br i1 %102, label %103, label %105, !prof !2

103:                                              ; preds = %93
  %104 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %95, i64 %96) #12
  br label %107

105:                                              ; preds = %93
  %106 = add i64 %98, %96
  store i64 %106, i64* %97, align 8
  br label %107

107:                                              ; preds = %105, %103
  %108 = phi i64 [ %104, %103 ], [ %98, %105 ]
  %109 = inttoptr i64 %108 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %110

110:                                              ; preds = %107, %88
  %111 = phi i64 [ %94, %107 ], [ 0, %88 ]
  %112 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %109, %107 ], [ null, %88 ]
  %113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %112, i64 %81
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %112, i64 %111
  %115 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %114 to i64
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %68, i64 0, i32 0
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 0, i32 0
  %118 = load i64, i64* %116, align 8
  store i64 %118, i64* %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 1
  %120 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %119 to i64
  %121 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %45, align 8
  %122 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %121 to i64
  %123 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %124 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %123, %121
  br i1 %124, label %278, label %125

125:                                              ; preds = %110
  %126 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 -1
  %127 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %126 to i64
  %128 = sub i64 %127, %122
  %129 = lshr i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = icmp ult i64 %130, 4
  br i1 %131, label %222, label %132

132:                                              ; preds = %125
  %133 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %112, i64 -1
  %134 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 -1
  %135 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %134 to i64
  %136 = sub i64 %135, %122
  %137 = lshr i64 %136, 3
  %138 = sub nsw i64 %81, %137
  %139 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %133, i64 %138
  %140 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 -1
  %141 = sub nsw i64 0, %137
  %142 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %140, i64 %141
  %143 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %139, %123
  %144 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %142, %113
  %145 = and i1 %143, %144
  br i1 %145, label %222, label %146

146:                                              ; preds = %132
  %147 = and i64 %130, 4611686018427387900
  %148 = sub nsw i64 0, %147
  %149 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 %148
  %150 = sub nsw i64 0, %147
  %151 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 %150
  %152 = add nsw i64 %147, -4
  %153 = lshr exact i64 %152, 2
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %152, 0
  br i1 %156, label %199, label %157

157:                                              ; preds = %146
  %158 = sub nuw nsw i64 %154, %155
  %159 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 -1
  %160 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 -1
  br label %161

161:                                              ; preds = %161, %157
  %162 = phi i64 [ 0, %157 ], [ %196, %161 ]
  %163 = phi i64 [ %158, %157 ], [ %197, %161 ]
  %164 = sub i64 0, %162
  %165 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 %164
  %166 = sub i64 0, %162
  %167 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %159, i64 %166
  %168 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %167, i64 0, i32 0
  %169 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %165, i64 -1, i32 0
  %170 = getelementptr inbounds i64, i64* %168, i64 -1
  %171 = bitcast i64* %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !117
  %173 = getelementptr inbounds i64, i64* %168, i64 -3
  %174 = bitcast i64* %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !117
  %176 = getelementptr inbounds i64, i64* %169, i64 -1
  %177 = bitcast i64* %176 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %177, align 8, !alias.scope !120, !noalias !117
  %178 = getelementptr inbounds i64, i64* %169, i64 -3
  %179 = bitcast i64* %178 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %179, align 8, !alias.scope !120, !noalias !117
  %180 = sub nuw nsw i64 -4, %162
  %181 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 %180
  %182 = sub nuw nsw i64 -4, %162
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %160, i64 %182
  %184 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %183, i64 0, i32 0
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %181, i64 -1, i32 0
  %186 = getelementptr inbounds i64, i64* %184, i64 -1
  %187 = bitcast i64* %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !117
  %189 = getelementptr inbounds i64, i64* %184, i64 -3
  %190 = bitcast i64* %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8, !alias.scope !117
  %192 = getelementptr inbounds i64, i64* %185, i64 -1
  %193 = bitcast i64* %192 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %193, align 8, !alias.scope !120, !noalias !117
  %194 = getelementptr inbounds i64, i64* %185, i64 -3
  %195 = bitcast i64* %194 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %195, align 8, !alias.scope !120, !noalias !117
  %196 = add i64 %162, 8
  %197 = add i64 %163, -2
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %161, !llvm.loop !122

199:                                              ; preds = %161, %146
  %200 = phi i64 [ 0, %146 ], [ %196, %161 ]
  %201 = icmp eq i64 %155, 0
  br i1 %201, label %220, label %202

202:                                              ; preds = %199
  %203 = sub i64 0, %200
  %204 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 %203
  %205 = sub i64 0, %200
  %206 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %123, i64 -1
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %206, i64 %205
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %207, i64 0, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %204, i64 -1, i32 0
  %210 = getelementptr inbounds i64, i64* %208, i64 -1
  %211 = bitcast i64* %210 to <2 x i64>*
  %212 = load <2 x i64>, <2 x i64>* %211, align 8, !alias.scope !117
  %213 = getelementptr inbounds i64, i64* %208, i64 -3
  %214 = bitcast i64* %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !alias.scope !117
  %216 = getelementptr inbounds i64, i64* %209, i64 -1
  %217 = bitcast i64* %216 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %217, align 8, !alias.scope !120, !noalias !117
  %218 = getelementptr inbounds i64, i64* %209, i64 -3
  %219 = bitcast i64* %218 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %219, align 8, !alias.scope !120, !noalias !117
  br label %220

220:                                              ; preds = %199, %202
  %221 = icmp eq i64 %130, %147
  br i1 %221, label %278, label %222

222:                                              ; preds = %220, %132, %125
  %223 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %113, %132 ], [ %113, %125 ], [ %149, %220 ]
  %224 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %123, %132 ], [ %123, %125 ], [ %151, %220 ]
  %225 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %224, i64 -1
  %226 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %225 to i64
  %227 = sub i64 %226, %122
  %228 = lshr i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 7
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %243, label %232

232:                                              ; preds = %222, %232
  %233 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %240, %232 ], [ %223, %222 ]
  %234 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %236, %232 ], [ %224, %222 ]
  %235 = phi i64 [ %241, %232 ], [ %230, %222 ]
  %236 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %234, i64 -1
  %237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %236, i64 0, i32 0
  %238 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %233, i64 -1, i32 0
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %233, i64 -1
  %241 = add i64 %235, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %232, !llvm.loop !123

243:                                              ; preds = %232, %222
  %244 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %222 ], [ %240, %232 ]
  %245 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %223, %222 ], [ %240, %232 ]
  %246 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %224, %222 ], [ %236, %232 ]
  %247 = icmp ult i64 %227, 56
  br i1 %247, label %278, label %248

248:                                              ; preds = %243, %248
  %249 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %276, %248 ], [ %245, %243 ]
  %250 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %272, %248 ], [ %246, %243 ]
  %251 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -1, i32 0
  %252 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -1, i32 0
  %253 = load i64, i64* %251, align 8
  store i64 %253, i64* %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -2, i32 0
  %255 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -2, i32 0
  %256 = load i64, i64* %254, align 8
  store i64 %256, i64* %255, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -3, i32 0
  %258 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -3, i32 0
  %259 = load i64, i64* %257, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -4, i32 0
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -4, i32 0
  %262 = load i64, i64* %260, align 8
  store i64 %262, i64* %261, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -5, i32 0
  %264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -5, i32 0
  %265 = load i64, i64* %263, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -6, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -6, i32 0
  %268 = load i64, i64* %266, align 8
  store i64 %268, i64* %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -7, i32 0
  %270 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -7, i32 0
  %271 = load i64, i64* %269, align 8
  store i64 %271, i64* %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %250, i64 -8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %272, i64 0, i32 0
  %274 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -8, i32 0
  %275 = load i64, i64* %273, align 8
  store i64 %275, i64* %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %249, i64 -8
  %277 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %272, %121
  br i1 %277, label %278, label %248, !llvm.loop !124

278:                                              ; preds = %243, %248, %220, %110
  %279 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %113, %110 ], [ %149, %220 ], [ %244, %243 ], [ %276, %248 ]
  %280 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %279 to i64
  store i64 %280, i64* %32, align 8
  store i64 %120, i64* %30, align 8
  store i64 %115, i64* %43, align 8
  br label %281

281:                                              ; preds = %71, %278
  %282 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %75, %71 ], [ %119, %278 ]
  %283 = add nuw i64 %67, 1
  %284 = icmp eq i64 %283, %4
  br i1 %284, label %46, label %65

285:                                              ; preds = %520, %57
  %286 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 11, i32 0
  %287 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %288 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.std::__1::vector.1241"* %286 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = icmp eq i64 %289, %291
  %293 = inttoptr i64 %289 to %"class.v8::internal::compiler::InstructionOperand"*
  br i1 %292, label %296, label %294

294:                                              ; preds = %285
  %295 = inttoptr i64 %291 to %"class.v8::internal::compiler::InstructionOperand"*
  store %"class.v8::internal::compiler::InstructionOperand"* %295, %"class.v8::internal::compiler::InstructionOperand"** %287, align 8
  br label %296

296:                                              ; preds = %285, %294
  %297 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %293, %285 ], [ %295, %294 ]
  %298 = icmp eq i64 %6, 0
  br i1 %298, label %524, label %299

299:                                              ; preds = %296
  %300 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 0, i32 0
  %301 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %300 to i64*
  %302 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %303 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %286, i64 0, i32 0, i32 0
  br label %528

304:                                              ; preds = %520, %60
  %305 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %58, %60 ], [ %521, %520 ]
  %306 = phi i64 [ 0, %60 ], [ %522, %520 ]
  %307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 %306
  %308 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %61, align 8
  %309 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %305, %308
  br i1 %309, label %316, label %310

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %307, i64 0, i32 0
  %312 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %305, i64 0, i32 0
  %313 = load i64, i64* %311, align 8
  store i64 %313, i64* %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %305, i64 1
  %315 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %314 to i64
  store i64 %315, i64* %49, align 8
  br label %520

316:                                              ; preds = %304
  %317 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %308 to i64
  %318 = load i64, i64* %51, align 8
  %319 = sub i64 %317, %318
  %320 = ashr exact i64 %319, 3
  %321 = add nsw i64 %320, 1
  %322 = icmp ugt i64 %321, 268435455
  br i1 %322, label %323, label %325

323:                                              ; preds = %316
  %324 = bitcast %"class.std::__1::vector.1241"* %47 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %324) #13
  unreachable

325:                                              ; preds = %316
  %326 = icmp ult i64 %320, 134217727
  br i1 %326, label %327, label %332

327:                                              ; preds = %325
  %328 = ashr exact i64 %319, 2
  %329 = icmp ult i64 %328, %321
  %330 = select i1 %329, i64 %321, i64 %328
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %349, label %332

332:                                              ; preds = %327, %325
  %333 = phi i64 [ %330, %327 ], [ 268435455, %325 ]
  %334 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %63, align 8
  %335 = shl i64 %333, 3
  %336 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %334, i64 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %334, i64 0, i32 3
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %339, %337
  %341 = icmp ugt i64 %335, %340
  br i1 %341, label %342, label %344, !prof !2

342:                                              ; preds = %332
  %343 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %334, i64 %335) #12
  br label %346

344:                                              ; preds = %332
  %345 = add i64 %337, %335
  store i64 %345, i64* %336, align 8
  br label %346

346:                                              ; preds = %344, %342
  %347 = phi i64 [ %343, %342 ], [ %337, %344 ]
  %348 = inttoptr i64 %347 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %349

349:                                              ; preds = %346, %327
  %350 = phi i64 [ %333, %346 ], [ 0, %327 ]
  %351 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %348, %346 ], [ null, %327 ]
  %352 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %351, i64 %320
  %353 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %351, i64 %350
  %354 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %353 to i64
  %355 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %307, i64 0, i32 0
  %356 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %352, i64 0, i32 0
  %357 = load i64, i64* %355, align 8
  store i64 %357, i64* %356, align 8
  %358 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %352, i64 1
  %359 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %358 to i64
  %360 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %64, align 8
  %361 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %360 to i64
  %362 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, align 8
  %363 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %362, %360
  br i1 %363, label %517, label %364

364:                                              ; preds = %349
  %365 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 -1
  %366 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %365 to i64
  %367 = sub i64 %366, %361
  %368 = lshr i64 %367, 3
  %369 = add nuw nsw i64 %368, 1
  %370 = icmp ult i64 %369, 4
  br i1 %370, label %461, label %371

371:                                              ; preds = %364
  %372 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %351, i64 -1
  %373 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 -1
  %374 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %373 to i64
  %375 = sub i64 %374, %361
  %376 = lshr i64 %375, 3
  %377 = sub nsw i64 %320, %376
  %378 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %372, i64 %377
  %379 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 -1
  %380 = sub nsw i64 0, %376
  %381 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %379, i64 %380
  %382 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %378, %362
  %383 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %381, %352
  %384 = and i1 %382, %383
  br i1 %384, label %461, label %385

385:                                              ; preds = %371
  %386 = and i64 %369, 4611686018427387900
  %387 = sub nsw i64 0, %386
  %388 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %352, i64 %387
  %389 = sub nsw i64 0, %386
  %390 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 %389
  %391 = add nsw i64 %386, -4
  %392 = lshr exact i64 %391, 2
  %393 = add nuw nsw i64 %392, 1
  %394 = and i64 %393, 1
  %395 = icmp eq i64 %391, 0
  br i1 %395, label %438, label %396

396:                                              ; preds = %385
  %397 = sub nuw nsw i64 %393, %394
  %398 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 -1
  %399 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 -1
  br label %400

400:                                              ; preds = %400, %396
  %401 = phi i64 [ 0, %396 ], [ %435, %400 ]
  %402 = phi i64 [ %397, %396 ], [ %436, %400 ]
  %403 = sub i64 0, %401
  %404 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %352, i64 %403
  %405 = sub i64 0, %401
  %406 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %398, i64 %405
  %407 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %406, i64 0, i32 0
  %408 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %404, i64 -1, i32 0
  %409 = getelementptr inbounds i64, i64* %407, i64 -1
  %410 = bitcast i64* %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8, !alias.scope !125
  %412 = getelementptr inbounds i64, i64* %407, i64 -3
  %413 = bitcast i64* %412 to <2 x i64>*
  %414 = load <2 x i64>, <2 x i64>* %413, align 8, !alias.scope !125
  %415 = getelementptr inbounds i64, i64* %408, i64 -1
  %416 = bitcast i64* %415 to <2 x i64>*
  store <2 x i64> %411, <2 x i64>* %416, align 8, !alias.scope !128, !noalias !125
  %417 = getelementptr inbounds i64, i64* %408, i64 -3
  %418 = bitcast i64* %417 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %418, align 8, !alias.scope !128, !noalias !125
  %419 = sub nuw nsw i64 -4, %401
  %420 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %352, i64 %419
  %421 = sub nuw nsw i64 -4, %401
  %422 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %399, i64 %421
  %423 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %422, i64 0, i32 0
  %424 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %420, i64 -1, i32 0
  %425 = getelementptr inbounds i64, i64* %423, i64 -1
  %426 = bitcast i64* %425 to <2 x i64>*
  %427 = load <2 x i64>, <2 x i64>* %426, align 8, !alias.scope !125
  %428 = getelementptr inbounds i64, i64* %423, i64 -3
  %429 = bitcast i64* %428 to <2 x i64>*
  %430 = load <2 x i64>, <2 x i64>* %429, align 8, !alias.scope !125
  %431 = getelementptr inbounds i64, i64* %424, i64 -1
  %432 = bitcast i64* %431 to <2 x i64>*
  store <2 x i64> %427, <2 x i64>* %432, align 8, !alias.scope !128, !noalias !125
  %433 = getelementptr inbounds i64, i64* %424, i64 -3
  %434 = bitcast i64* %433 to <2 x i64>*
  store <2 x i64> %430, <2 x i64>* %434, align 8, !alias.scope !128, !noalias !125
  %435 = add i64 %401, 8
  %436 = add i64 %402, -2
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %400, !llvm.loop !130

438:                                              ; preds = %400, %385
  %439 = phi i64 [ 0, %385 ], [ %435, %400 ]
  %440 = icmp eq i64 %394, 0
  br i1 %440, label %459, label %441

441:                                              ; preds = %438
  %442 = sub i64 0, %439
  %443 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %352, i64 %442
  %444 = sub i64 0, %439
  %445 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %362, i64 -1
  %446 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %445, i64 %444
  %447 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %446, i64 0, i32 0
  %448 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %443, i64 -1, i32 0
  %449 = getelementptr inbounds i64, i64* %447, i64 -1
  %450 = bitcast i64* %449 to <2 x i64>*
  %451 = load <2 x i64>, <2 x i64>* %450, align 8, !alias.scope !125
  %452 = getelementptr inbounds i64, i64* %447, i64 -3
  %453 = bitcast i64* %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !125
  %455 = getelementptr inbounds i64, i64* %448, i64 -1
  %456 = bitcast i64* %455 to <2 x i64>*
  store <2 x i64> %451, <2 x i64>* %456, align 8, !alias.scope !128, !noalias !125
  %457 = getelementptr inbounds i64, i64* %448, i64 -3
  %458 = bitcast i64* %457 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !128, !noalias !125
  br label %459

459:                                              ; preds = %438, %441
  %460 = icmp eq i64 %369, %386
  br i1 %460, label %517, label %461

461:                                              ; preds = %459, %371, %364
  %462 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %352, %371 ], [ %352, %364 ], [ %388, %459 ]
  %463 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %362, %371 ], [ %362, %364 ], [ %390, %459 ]
  %464 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %463, i64 -1
  %465 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %464 to i64
  %466 = sub i64 %465, %361
  %467 = lshr i64 %466, 3
  %468 = add nuw nsw i64 %467, 1
  %469 = and i64 %468, 7
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %482, label %471

471:                                              ; preds = %461, %471
  %472 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %479, %471 ], [ %462, %461 ]
  %473 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %475, %471 ], [ %463, %461 ]
  %474 = phi i64 [ %480, %471 ], [ %469, %461 ]
  %475 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %473, i64 -1
  %476 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %475, i64 0, i32 0
  %477 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %472, i64 -1, i32 0
  %478 = load i64, i64* %476, align 8
  store i64 %478, i64* %477, align 8
  %479 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %472, i64 -1
  %480 = add i64 %474, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %471, !llvm.loop !131

482:                                              ; preds = %471, %461
  %483 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %461 ], [ %479, %471 ]
  %484 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %462, %461 ], [ %479, %471 ]
  %485 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %463, %461 ], [ %475, %471 ]
  %486 = icmp ult i64 %466, 56
  br i1 %486, label %517, label %487

487:                                              ; preds = %482, %487
  %488 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %515, %487 ], [ %484, %482 ]
  %489 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %511, %487 ], [ %485, %482 ]
  %490 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -1, i32 0
  %491 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -1, i32 0
  %492 = load i64, i64* %490, align 8
  store i64 %492, i64* %491, align 8
  %493 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -2, i32 0
  %494 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -2, i32 0
  %495 = load i64, i64* %493, align 8
  store i64 %495, i64* %494, align 8
  %496 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -3, i32 0
  %497 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -3, i32 0
  %498 = load i64, i64* %496, align 8
  store i64 %498, i64* %497, align 8
  %499 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -4, i32 0
  %500 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -4, i32 0
  %501 = load i64, i64* %499, align 8
  store i64 %501, i64* %500, align 8
  %502 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -5, i32 0
  %503 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -5, i32 0
  %504 = load i64, i64* %502, align 8
  store i64 %504, i64* %503, align 8
  %505 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -6, i32 0
  %506 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -6, i32 0
  %507 = load i64, i64* %505, align 8
  store i64 %507, i64* %506, align 8
  %508 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -7, i32 0
  %509 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -7, i32 0
  %510 = load i64, i64* %508, align 8
  store i64 %510, i64* %509, align 8
  %511 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %489, i64 -8
  %512 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %511, i64 0, i32 0
  %513 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -8, i32 0
  %514 = load i64, i64* %512, align 8
  store i64 %514, i64* %513, align 8
  %515 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 -8
  %516 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %511, %360
  br i1 %516, label %517, label %487, !llvm.loop !132

517:                                              ; preds = %482, %487, %459, %349
  %518 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %352, %349 ], [ %388, %459 ], [ %483, %482 ], [ %515, %487 ]
  %519 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %518 to i64
  store i64 %519, i64* %51, align 8
  store i64 %359, i64* %49, align 8
  store i64 %354, i64* %62, align 8
  br label %520

520:                                              ; preds = %310, %517
  %521 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %314, %310 ], [ %358, %517 ]
  %522 = add nuw i64 %306, 1
  %523 = icmp eq i64 %522, %2
  br i1 %523, label %285, label %304

524:                                              ; preds = %744, %296
  %525 = load i32, i32* %16, align 8
  %526 = add i32 %525, -1
  %527 = icmp ult i32 %526, 2
  br i1 %527, label %748, label %1205

528:                                              ; preds = %744, %299
  %529 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %297, %299 ], [ %745, %744 ]
  %530 = phi i64 [ 0, %299 ], [ %746, %744 ]
  %531 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 %530
  %532 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %300, align 8
  %533 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %529, %532
  br i1 %533, label %540, label %534

534:                                              ; preds = %528
  %535 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %531, i64 0, i32 0
  %536 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %529, i64 0, i32 0
  %537 = load i64, i64* %535, align 8
  store i64 %537, i64* %536, align 8
  %538 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %529, i64 1
  %539 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %538 to i64
  store i64 %539, i64* %288, align 8
  br label %744

540:                                              ; preds = %528
  %541 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %532 to i64
  %542 = load i64, i64* %290, align 8
  %543 = sub i64 %541, %542
  %544 = ashr exact i64 %543, 3
  %545 = add nsw i64 %544, 1
  %546 = icmp ugt i64 %545, 268435455
  br i1 %546, label %547, label %549

547:                                              ; preds = %540
  %548 = bitcast %"class.std::__1::vector.1241"* %286 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %548) #13
  unreachable

549:                                              ; preds = %540
  %550 = icmp ult i64 %544, 134217727
  br i1 %550, label %551, label %556

551:                                              ; preds = %549
  %552 = ashr exact i64 %543, 2
  %553 = icmp ult i64 %552, %545
  %554 = select i1 %553, i64 %545, i64 %552
  %555 = icmp eq i64 %554, 0
  br i1 %555, label %573, label %556

556:                                              ; preds = %551, %549
  %557 = phi i64 [ %554, %551 ], [ 268435455, %549 ]
  %558 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %302, align 8
  %559 = shl i64 %557, 3
  %560 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %558, i64 0, i32 2
  %561 = load i64, i64* %560, align 8
  %562 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %558, i64 0, i32 3
  %563 = load i64, i64* %562, align 8
  %564 = sub i64 %563, %561
  %565 = icmp ugt i64 %559, %564
  br i1 %565, label %566, label %568, !prof !2

566:                                              ; preds = %556
  %567 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %558, i64 %559) #12
  br label %570

568:                                              ; preds = %556
  %569 = add i64 %561, %559
  store i64 %569, i64* %560, align 8
  br label %570

570:                                              ; preds = %568, %566
  %571 = phi i64 [ %567, %566 ], [ %561, %568 ]
  %572 = inttoptr i64 %571 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %573

573:                                              ; preds = %570, %551
  %574 = phi i64 [ %557, %570 ], [ 0, %551 ]
  %575 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %572, %570 ], [ null, %551 ]
  %576 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %575, i64 %544
  %577 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %575, i64 %574
  %578 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %577 to i64
  %579 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %531, i64 0, i32 0
  %580 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %576, i64 0, i32 0
  %581 = load i64, i64* %579, align 8
  store i64 %581, i64* %580, align 8
  %582 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %576, i64 1
  %583 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %582 to i64
  %584 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %303, align 8
  %585 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %584 to i64
  %586 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %287, align 8
  %587 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %586, %584
  br i1 %587, label %741, label %588

588:                                              ; preds = %573
  %589 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 -1
  %590 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %589 to i64
  %591 = sub i64 %590, %585
  %592 = lshr i64 %591, 3
  %593 = add nuw nsw i64 %592, 1
  %594 = icmp ult i64 %593, 4
  br i1 %594, label %685, label %595

595:                                              ; preds = %588
  %596 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %575, i64 -1
  %597 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 -1
  %598 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %597 to i64
  %599 = sub i64 %598, %585
  %600 = lshr i64 %599, 3
  %601 = sub nsw i64 %544, %600
  %602 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %596, i64 %601
  %603 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 -1
  %604 = sub nsw i64 0, %600
  %605 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %603, i64 %604
  %606 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %602, %586
  %607 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %605, %576
  %608 = and i1 %606, %607
  br i1 %608, label %685, label %609

609:                                              ; preds = %595
  %610 = and i64 %593, 4611686018427387900
  %611 = sub nsw i64 0, %610
  %612 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %576, i64 %611
  %613 = sub nsw i64 0, %610
  %614 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 %613
  %615 = add nsw i64 %610, -4
  %616 = lshr exact i64 %615, 2
  %617 = add nuw nsw i64 %616, 1
  %618 = and i64 %617, 1
  %619 = icmp eq i64 %615, 0
  br i1 %619, label %662, label %620

620:                                              ; preds = %609
  %621 = sub nuw nsw i64 %617, %618
  %622 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 -1
  %623 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 -1
  br label %624

624:                                              ; preds = %624, %620
  %625 = phi i64 [ 0, %620 ], [ %659, %624 ]
  %626 = phi i64 [ %621, %620 ], [ %660, %624 ]
  %627 = sub i64 0, %625
  %628 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %576, i64 %627
  %629 = sub i64 0, %625
  %630 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %622, i64 %629
  %631 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %630, i64 0, i32 0
  %632 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %628, i64 -1, i32 0
  %633 = getelementptr inbounds i64, i64* %631, i64 -1
  %634 = bitcast i64* %633 to <2 x i64>*
  %635 = load <2 x i64>, <2 x i64>* %634, align 8, !alias.scope !133
  %636 = getelementptr inbounds i64, i64* %631, i64 -3
  %637 = bitcast i64* %636 to <2 x i64>*
  %638 = load <2 x i64>, <2 x i64>* %637, align 8, !alias.scope !133
  %639 = getelementptr inbounds i64, i64* %632, i64 -1
  %640 = bitcast i64* %639 to <2 x i64>*
  store <2 x i64> %635, <2 x i64>* %640, align 8, !alias.scope !136, !noalias !133
  %641 = getelementptr inbounds i64, i64* %632, i64 -3
  %642 = bitcast i64* %641 to <2 x i64>*
  store <2 x i64> %638, <2 x i64>* %642, align 8, !alias.scope !136, !noalias !133
  %643 = sub nuw nsw i64 -4, %625
  %644 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %576, i64 %643
  %645 = sub nuw nsw i64 -4, %625
  %646 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %623, i64 %645
  %647 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %646, i64 0, i32 0
  %648 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %644, i64 -1, i32 0
  %649 = getelementptr inbounds i64, i64* %647, i64 -1
  %650 = bitcast i64* %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !133
  %652 = getelementptr inbounds i64, i64* %647, i64 -3
  %653 = bitcast i64* %652 to <2 x i64>*
  %654 = load <2 x i64>, <2 x i64>* %653, align 8, !alias.scope !133
  %655 = getelementptr inbounds i64, i64* %648, i64 -1
  %656 = bitcast i64* %655 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %656, align 8, !alias.scope !136, !noalias !133
  %657 = getelementptr inbounds i64, i64* %648, i64 -3
  %658 = bitcast i64* %657 to <2 x i64>*
  store <2 x i64> %654, <2 x i64>* %658, align 8, !alias.scope !136, !noalias !133
  %659 = add i64 %625, 8
  %660 = add i64 %626, -2
  %661 = icmp eq i64 %660, 0
  br i1 %661, label %662, label %624, !llvm.loop !138

662:                                              ; preds = %624, %609
  %663 = phi i64 [ 0, %609 ], [ %659, %624 ]
  %664 = icmp eq i64 %618, 0
  br i1 %664, label %683, label %665

665:                                              ; preds = %662
  %666 = sub i64 0, %663
  %667 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %576, i64 %666
  %668 = sub i64 0, %663
  %669 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 -1
  %670 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %669, i64 %668
  %671 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %670, i64 0, i32 0
  %672 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %667, i64 -1, i32 0
  %673 = getelementptr inbounds i64, i64* %671, i64 -1
  %674 = bitcast i64* %673 to <2 x i64>*
  %675 = load <2 x i64>, <2 x i64>* %674, align 8, !alias.scope !133
  %676 = getelementptr inbounds i64, i64* %671, i64 -3
  %677 = bitcast i64* %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !133
  %679 = getelementptr inbounds i64, i64* %672, i64 -1
  %680 = bitcast i64* %679 to <2 x i64>*
  store <2 x i64> %675, <2 x i64>* %680, align 8, !alias.scope !136, !noalias !133
  %681 = getelementptr inbounds i64, i64* %672, i64 -3
  %682 = bitcast i64* %681 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !136, !noalias !133
  br label %683

683:                                              ; preds = %662, %665
  %684 = icmp eq i64 %593, %610
  br i1 %684, label %741, label %685

685:                                              ; preds = %683, %595, %588
  %686 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %576, %595 ], [ %576, %588 ], [ %612, %683 ]
  %687 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %586, %595 ], [ %586, %588 ], [ %614, %683 ]
  %688 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %687, i64 -1
  %689 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %688 to i64
  %690 = sub i64 %689, %585
  %691 = lshr i64 %690, 3
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 7
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %706, label %695

695:                                              ; preds = %685, %695
  %696 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %703, %695 ], [ %686, %685 ]
  %697 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %699, %695 ], [ %687, %685 ]
  %698 = phi i64 [ %704, %695 ], [ %693, %685 ]
  %699 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %697, i64 -1
  %700 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %699, i64 0, i32 0
  %701 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %696, i64 -1, i32 0
  %702 = load i64, i64* %700, align 8
  store i64 %702, i64* %701, align 8
  %703 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %696, i64 -1
  %704 = add i64 %698, -1
  %705 = icmp eq i64 %704, 0
  br i1 %705, label %706, label %695, !llvm.loop !139

706:                                              ; preds = %695, %685
  %707 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %685 ], [ %703, %695 ]
  %708 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %686, %685 ], [ %703, %695 ]
  %709 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %687, %685 ], [ %699, %695 ]
  %710 = icmp ult i64 %690, 56
  br i1 %710, label %741, label %711

711:                                              ; preds = %706, %711
  %712 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %739, %711 ], [ %708, %706 ]
  %713 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %735, %711 ], [ %709, %706 ]
  %714 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -1, i32 0
  %715 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -1, i32 0
  %716 = load i64, i64* %714, align 8
  store i64 %716, i64* %715, align 8
  %717 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -2, i32 0
  %718 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -2, i32 0
  %719 = load i64, i64* %717, align 8
  store i64 %719, i64* %718, align 8
  %720 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -3, i32 0
  %721 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -3, i32 0
  %722 = load i64, i64* %720, align 8
  store i64 %722, i64* %721, align 8
  %723 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -4, i32 0
  %724 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -4, i32 0
  %725 = load i64, i64* %723, align 8
  store i64 %725, i64* %724, align 8
  %726 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -5, i32 0
  %727 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -5, i32 0
  %728 = load i64, i64* %726, align 8
  store i64 %728, i64* %727, align 8
  %729 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -6, i32 0
  %730 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -6, i32 0
  %731 = load i64, i64* %729, align 8
  store i64 %731, i64* %730, align 8
  %732 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -7, i32 0
  %733 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -7, i32 0
  %734 = load i64, i64* %732, align 8
  store i64 %734, i64* %733, align 8
  %735 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %713, i64 -8
  %736 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %735, i64 0, i32 0
  %737 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -8, i32 0
  %738 = load i64, i64* %736, align 8
  store i64 %738, i64* %737, align 8
  %739 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %712, i64 -8
  %740 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %735, %584
  br i1 %740, label %741, label %711, !llvm.loop !140

741:                                              ; preds = %706, %711, %683, %573
  %742 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %576, %573 ], [ %612, %683 ], [ %707, %706 ], [ %739, %711 ]
  %743 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %742 to i64
  store i64 %743, i64* %290, align 8
  store i64 %583, i64* %288, align 8
  store i64 %578, i64* %301, align 8
  br label %744

744:                                              ; preds = %534, %741
  %745 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %538, %534 ], [ %582, %741 ]
  %746 = add nuw i64 %530, 1
  %747 = icmp eq i64 %746, %6
  br i1 %747, label %524, label %528

748:                                              ; preds = %524
  %749 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 9
  %750 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %749, align 8
  %751 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %15, align 8
  %752 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %751, i64 0, i32 2
  %753 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %752, align 8
  %754 = bitcast %"class.v8::internal::compiler::Constant"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %754) #12
  %755 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %750, i64 0, i32 1
  %756 = load i32, i32* %755, align 4
  %757 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %12, i64 0, i32 0
  store i32 7, i32* %757, align 8
  %758 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %12, i64 0, i32 1
  store i8 0, i8* %758, align 4
  %759 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %12, i64 0, i32 2
  %760 = sext i32 %756 to i64
  store i64 %760, i64* %759, align 8
  %761 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %753, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %754) #12
  %762 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %763 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %764 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %763, align 8
  %765 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %762, %764
  %766 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %764 to i64
  br i1 %765, label %767, label %771

767:                                              ; preds = %748
  %768 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %762, i64 0, i32 0
  store i64 %761, i64* %768, align 8
  %769 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %762, i64 1
  %770 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %769 to i64
  store i64 %770, i64* %30, align 8
  br label %977

771:                                              ; preds = %748
  %772 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %762 to i64
  %773 = load i64, i64* %32, align 8
  %774 = sub i64 %772, %773
  %775 = ashr exact i64 %774, 3
  %776 = add nsw i64 %775, 1
  %777 = icmp ugt i64 %776, 268435455
  br i1 %777, label %778, label %780

778:                                              ; preds = %771
  %779 = bitcast %"class.v8::internal::ZoneVector.1240"* %28 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %779) #13
  unreachable

780:                                              ; preds = %771
  %781 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %763 to i64*
  %782 = sub i64 %766, %773
  %783 = ashr exact i64 %782, 3
  %784 = icmp ult i64 %783, 134217727
  br i1 %784, label %785, label %790

785:                                              ; preds = %780
  %786 = ashr exact i64 %782, 2
  %787 = icmp ult i64 %786, %776
  %788 = select i1 %787, i64 %776, i64 %786
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %808, label %790

790:                                              ; preds = %785, %780
  %791 = phi i64 [ %788, %785 ], [ 268435455, %780 ]
  %792 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %793 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %792, align 8
  %794 = shl i64 %791, 3
  %795 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %793, i64 0, i32 2
  %796 = load i64, i64* %795, align 8
  %797 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %793, i64 0, i32 3
  %798 = load i64, i64* %797, align 8
  %799 = sub i64 %798, %796
  %800 = icmp ugt i64 %794, %799
  br i1 %800, label %801, label %803, !prof !2

801:                                              ; preds = %790
  %802 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %793, i64 %794) #12
  br label %805

803:                                              ; preds = %790
  %804 = add i64 %796, %794
  store i64 %804, i64* %795, align 8
  br label %805

805:                                              ; preds = %803, %801
  %806 = phi i64 [ %802, %801 ], [ %796, %803 ]
  %807 = inttoptr i64 %806 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %808

808:                                              ; preds = %805, %785
  %809 = phi i64 [ %791, %805 ], [ 0, %785 ]
  %810 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %807, %805 ], [ null, %785 ]
  %811 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %810, i64 %775
  %812 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %810, i64 %809
  %813 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %812 to i64
  %814 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %811, i64 0, i32 0
  store i64 %761, i64* %814, align 8
  %815 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %811, i64 1
  %816 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %815 to i64
  %817 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %28, i64 0, i32 0, i32 0, i32 0
  %818 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %817, align 8
  %819 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %818 to i64
  %820 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %821 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %820, %818
  br i1 %821, label %974, label %822

822:                                              ; preds = %808
  %823 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 -1, i32 0
  %824 = ptrtoint i64* %823 to i64
  %825 = sub i64 %824, %819
  %826 = lshr i64 %825, 3
  %827 = add nuw nsw i64 %826, 1
  %828 = icmp ult i64 %827, 4
  br i1 %828, label %918, label %829

829:                                              ; preds = %822
  %830 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 -1, i32 0
  %831 = ptrtoint i64* %830 to i64
  %832 = sub i64 %831, %819
  %833 = lshr i64 %832, 3
  %834 = xor i64 %833, -1
  %835 = add nsw i64 %775, %834
  %836 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %810, i64 %835
  %837 = xor i64 %833, -1
  %838 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 %837
  %839 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %836, %820
  %840 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %838, %811
  %841 = and i1 %839, %840
  br i1 %841, label %918, label %842

842:                                              ; preds = %829
  %843 = and i64 %827, 4611686018427387900
  %844 = sub nsw i64 0, %843
  %845 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %811, i64 %844
  %846 = sub nsw i64 0, %843
  %847 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 %846
  %848 = add nsw i64 %843, -4
  %849 = lshr exact i64 %848, 2
  %850 = add nuw nsw i64 %849, 1
  %851 = and i64 %850, 1
  %852 = icmp eq i64 %848, 0
  br i1 %852, label %895, label %853

853:                                              ; preds = %842
  %854 = sub nuw nsw i64 %850, %851
  %855 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 -1
  %856 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 -1
  br label %857

857:                                              ; preds = %857, %853
  %858 = phi i64 [ 0, %853 ], [ %892, %857 ]
  %859 = phi i64 [ %854, %853 ], [ %893, %857 ]
  %860 = sub i64 0, %858
  %861 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %811, i64 %860
  %862 = sub i64 0, %858
  %863 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %855, i64 %862
  %864 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %863, i64 0, i32 0
  %865 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %861, i64 -1, i32 0
  %866 = getelementptr inbounds i64, i64* %864, i64 -1
  %867 = bitcast i64* %866 to <2 x i64>*
  %868 = load <2 x i64>, <2 x i64>* %867, align 8, !alias.scope !141
  %869 = getelementptr inbounds i64, i64* %864, i64 -3
  %870 = bitcast i64* %869 to <2 x i64>*
  %871 = load <2 x i64>, <2 x i64>* %870, align 8, !alias.scope !141
  %872 = getelementptr inbounds i64, i64* %865, i64 -1
  %873 = bitcast i64* %872 to <2 x i64>*
  store <2 x i64> %868, <2 x i64>* %873, align 8, !alias.scope !144, !noalias !141
  %874 = getelementptr inbounds i64, i64* %865, i64 -3
  %875 = bitcast i64* %874 to <2 x i64>*
  store <2 x i64> %871, <2 x i64>* %875, align 8, !alias.scope !144, !noalias !141
  %876 = sub nuw nsw i64 -4, %858
  %877 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %811, i64 %876
  %878 = sub nuw nsw i64 -4, %858
  %879 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %856, i64 %878
  %880 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %879, i64 0, i32 0
  %881 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %877, i64 -1, i32 0
  %882 = getelementptr inbounds i64, i64* %880, i64 -1
  %883 = bitcast i64* %882 to <2 x i64>*
  %884 = load <2 x i64>, <2 x i64>* %883, align 8, !alias.scope !141
  %885 = getelementptr inbounds i64, i64* %880, i64 -3
  %886 = bitcast i64* %885 to <2 x i64>*
  %887 = load <2 x i64>, <2 x i64>* %886, align 8, !alias.scope !141
  %888 = getelementptr inbounds i64, i64* %881, i64 -1
  %889 = bitcast i64* %888 to <2 x i64>*
  store <2 x i64> %884, <2 x i64>* %889, align 8, !alias.scope !144, !noalias !141
  %890 = getelementptr inbounds i64, i64* %881, i64 -3
  %891 = bitcast i64* %890 to <2 x i64>*
  store <2 x i64> %887, <2 x i64>* %891, align 8, !alias.scope !144, !noalias !141
  %892 = add i64 %858, 8
  %893 = add i64 %859, -2
  %894 = icmp eq i64 %893, 0
  br i1 %894, label %895, label %857, !llvm.loop !146

895:                                              ; preds = %857, %842
  %896 = phi i64 [ 0, %842 ], [ %892, %857 ]
  %897 = icmp eq i64 %851, 0
  br i1 %897, label %916, label %898

898:                                              ; preds = %895
  %899 = sub i64 0, %896
  %900 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %811, i64 %899
  %901 = sub i64 0, %896
  %902 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %820, i64 -1
  %903 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %902, i64 %901
  %904 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %903, i64 0, i32 0
  %905 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %900, i64 -1, i32 0
  %906 = getelementptr inbounds i64, i64* %904, i64 -1
  %907 = bitcast i64* %906 to <2 x i64>*
  %908 = load <2 x i64>, <2 x i64>* %907, align 8, !alias.scope !141
  %909 = getelementptr inbounds i64, i64* %904, i64 -3
  %910 = bitcast i64* %909 to <2 x i64>*
  %911 = load <2 x i64>, <2 x i64>* %910, align 8, !alias.scope !141
  %912 = getelementptr inbounds i64, i64* %905, i64 -1
  %913 = bitcast i64* %912 to <2 x i64>*
  store <2 x i64> %908, <2 x i64>* %913, align 8, !alias.scope !144, !noalias !141
  %914 = getelementptr inbounds i64, i64* %905, i64 -3
  %915 = bitcast i64* %914 to <2 x i64>*
  store <2 x i64> %911, <2 x i64>* %915, align 8, !alias.scope !144, !noalias !141
  br label %916

916:                                              ; preds = %895, %898
  %917 = icmp eq i64 %827, %843
  br i1 %917, label %974, label %918

918:                                              ; preds = %916, %829, %822
  %919 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %811, %829 ], [ %811, %822 ], [ %845, %916 ]
  %920 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %820, %829 ], [ %820, %822 ], [ %847, %916 ]
  %921 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %920, i64 -1, i32 0
  %922 = ptrtoint i64* %921 to i64
  %923 = sub i64 %922, %819
  %924 = lshr i64 %923, 3
  %925 = add nuw nsw i64 %924, 1
  %926 = and i64 %925, 7
  %927 = icmp eq i64 %926, 0
  br i1 %927, label %939, label %928

928:                                              ; preds = %918, %928
  %929 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %936, %928 ], [ %919, %918 ]
  %930 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %932, %928 ], [ %920, %918 ]
  %931 = phi i64 [ %937, %928 ], [ %926, %918 ]
  %932 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %930, i64 -1
  %933 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %932, i64 0, i32 0
  %934 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %929, i64 -1, i32 0
  %935 = load i64, i64* %933, align 8
  store i64 %935, i64* %934, align 8
  %936 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %929, i64 -1
  %937 = add i64 %931, -1
  %938 = icmp eq i64 %937, 0
  br i1 %938, label %939, label %928, !llvm.loop !147

939:                                              ; preds = %928, %918
  %940 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %918 ], [ %936, %928 ]
  %941 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %919, %918 ], [ %936, %928 ]
  %942 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %920, %918 ], [ %932, %928 ]
  %943 = icmp ult i64 %923, 56
  br i1 %943, label %974, label %944

944:                                              ; preds = %939, %944
  %945 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %972, %944 ], [ %941, %939 ]
  %946 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %968, %944 ], [ %942, %939 ]
  %947 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -1, i32 0
  %948 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -1, i32 0
  %949 = load i64, i64* %947, align 8
  store i64 %949, i64* %948, align 8
  %950 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -2, i32 0
  %951 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -2, i32 0
  %952 = load i64, i64* %950, align 8
  store i64 %952, i64* %951, align 8
  %953 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -3, i32 0
  %954 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -3, i32 0
  %955 = load i64, i64* %953, align 8
  store i64 %955, i64* %954, align 8
  %956 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -4, i32 0
  %957 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -4, i32 0
  %958 = load i64, i64* %956, align 8
  store i64 %958, i64* %957, align 8
  %959 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -5, i32 0
  %960 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -5, i32 0
  %961 = load i64, i64* %959, align 8
  store i64 %961, i64* %960, align 8
  %962 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -6, i32 0
  %963 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -6, i32 0
  %964 = load i64, i64* %962, align 8
  store i64 %964, i64* %963, align 8
  %965 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -7, i32 0
  %966 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -7, i32 0
  %967 = load i64, i64* %965, align 8
  store i64 %967, i64* %966, align 8
  %968 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %946, i64 -8
  %969 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %968, i64 0, i32 0
  %970 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -8, i32 0
  %971 = load i64, i64* %969, align 8
  store i64 %971, i64* %970, align 8
  %972 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %945, i64 -8
  %973 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %968, %818
  br i1 %973, label %974, label %944, !llvm.loop !148

974:                                              ; preds = %939, %944, %916, %808
  %975 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %811, %808 ], [ %845, %916 ], [ %940, %939 ], [ %972, %944 ]
  %976 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %975 to i64
  store i64 %976, i64* %32, align 8
  store i64 %816, i64* %30, align 8
  store i64 %813, i64* %781, align 8
  br label %977

977:                                              ; preds = %767, %974
  %978 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 10
  %979 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %978, align 8
  %980 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %15, align 8
  %981 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %980, i64 0, i32 2
  %982 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %981, align 8
  %983 = bitcast %"class.v8::internal::compiler::Constant"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %983) #12
  %984 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %979, i64 0, i32 1
  %985 = load i32, i32* %984, align 4
  %986 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %11, i64 0, i32 0
  store i32 7, i32* %986, align 8
  %987 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %11, i64 0, i32 1
  store i8 0, i8* %987, align 4
  %988 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %11, i64 0, i32 2
  %989 = sext i32 %985 to i64
  store i64 %989, i64* %988, align 8
  %990 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %982, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %983) #12
  %991 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %992 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %763, align 8
  %993 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %991, %992
  %994 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %992 to i64
  br i1 %993, label %995, label %999

995:                                              ; preds = %977
  %996 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %991, i64 0, i32 0
  store i64 %990, i64* %996, align 8
  %997 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %991, i64 1
  %998 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %997 to i64
  store i64 %998, i64* %30, align 8
  br label %1949

999:                                              ; preds = %977
  %1000 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %991 to i64
  %1001 = load i64, i64* %32, align 8
  %1002 = sub i64 %1000, %1001
  %1003 = ashr exact i64 %1002, 3
  %1004 = add nsw i64 %1003, 1
  %1005 = icmp ugt i64 %1004, 268435455
  br i1 %1005, label %1006, label %1008

1006:                                             ; preds = %999
  %1007 = bitcast %"class.v8::internal::ZoneVector.1240"* %28 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1007) #13
  unreachable

1008:                                             ; preds = %999
  %1009 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %763 to i64*
  %1010 = sub i64 %994, %1001
  %1011 = ashr exact i64 %1010, 3
  %1012 = icmp ult i64 %1011, 134217727
  br i1 %1012, label %1013, label %1018

1013:                                             ; preds = %1008
  %1014 = ashr exact i64 %1010, 2
  %1015 = icmp ult i64 %1014, %1004
  %1016 = select i1 %1015, i64 %1004, i64 %1014
  %1017 = icmp eq i64 %1016, 0
  br i1 %1017, label %1036, label %1018

1018:                                             ; preds = %1013, %1008
  %1019 = phi i64 [ %1016, %1013 ], [ 268435455, %1008 ]
  %1020 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1021 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1020, align 8
  %1022 = shl i64 %1019, 3
  %1023 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1021, i64 0, i32 2
  %1024 = load i64, i64* %1023, align 8
  %1025 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1021, i64 0, i32 3
  %1026 = load i64, i64* %1025, align 8
  %1027 = sub i64 %1026, %1024
  %1028 = icmp ugt i64 %1022, %1027
  br i1 %1028, label %1029, label %1031, !prof !2

1029:                                             ; preds = %1018
  %1030 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1021, i64 %1022) #12
  br label %1033

1031:                                             ; preds = %1018
  %1032 = add i64 %1024, %1022
  store i64 %1032, i64* %1023, align 8
  br label %1033

1033:                                             ; preds = %1031, %1029
  %1034 = phi i64 [ %1030, %1029 ], [ %1024, %1031 ]
  %1035 = inttoptr i64 %1034 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1036

1036:                                             ; preds = %1033, %1013
  %1037 = phi i64 [ %1019, %1033 ], [ 0, %1013 ]
  %1038 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1035, %1033 ], [ null, %1013 ]
  %1039 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1038, i64 %1003
  %1040 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1038, i64 %1037
  %1041 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1040 to i64
  %1042 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1039, i64 0, i32 0
  store i64 %990, i64* %1042, align 8
  %1043 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1039, i64 1
  %1044 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1043 to i64
  %1045 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %28, i64 0, i32 0, i32 0, i32 0
  %1046 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1045, align 8
  %1047 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1046 to i64
  %1048 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %1049 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1048, %1046
  br i1 %1049, label %1202, label %1050

1050:                                             ; preds = %1036
  %1051 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 -1, i32 0
  %1052 = ptrtoint i64* %1051 to i64
  %1053 = sub i64 %1052, %1047
  %1054 = lshr i64 %1053, 3
  %1055 = add nuw nsw i64 %1054, 1
  %1056 = icmp ult i64 %1055, 4
  br i1 %1056, label %1146, label %1057

1057:                                             ; preds = %1050
  %1058 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 -1, i32 0
  %1059 = ptrtoint i64* %1058 to i64
  %1060 = sub i64 %1059, %1047
  %1061 = lshr i64 %1060, 3
  %1062 = xor i64 %1061, -1
  %1063 = add nsw i64 %1003, %1062
  %1064 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1038, i64 %1063
  %1065 = xor i64 %1061, -1
  %1066 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 %1065
  %1067 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1064, %1048
  %1068 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1066, %1039
  %1069 = and i1 %1067, %1068
  br i1 %1069, label %1146, label %1070

1070:                                             ; preds = %1057
  %1071 = and i64 %1055, 4611686018427387900
  %1072 = sub nsw i64 0, %1071
  %1073 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1039, i64 %1072
  %1074 = sub nsw i64 0, %1071
  %1075 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 %1074
  %1076 = add nsw i64 %1071, -4
  %1077 = lshr exact i64 %1076, 2
  %1078 = add nuw nsw i64 %1077, 1
  %1079 = and i64 %1078, 1
  %1080 = icmp eq i64 %1076, 0
  br i1 %1080, label %1125, label %1081

1081:                                             ; preds = %1070
  %1082 = sub nuw nsw i64 %1078, %1079
  %1083 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 -1
  %1084 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 -1
  br label %1085

1085:                                             ; preds = %1085, %1081
  %1086 = phi i64 [ 0, %1081 ], [ %1120, %1085 ]
  %1087 = phi i64 [ %1082, %1081 ], [ %1121, %1085 ]
  %1088 = sub i64 0, %1086
  %1089 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1039, i64 %1088
  %1090 = sub i64 0, %1086
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1083, i64 %1090
  %1092 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1091, i64 0, i32 0
  %1093 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1089, i64 -1, i32 0
  %1094 = getelementptr inbounds i64, i64* %1092, i64 -1
  %1095 = bitcast i64* %1094 to <2 x i64>*
  %1096 = load <2 x i64>, <2 x i64>* %1095, align 8, !alias.scope !149
  %1097 = getelementptr inbounds i64, i64* %1092, i64 -3
  %1098 = bitcast i64* %1097 to <2 x i64>*
  %1099 = load <2 x i64>, <2 x i64>* %1098, align 8, !alias.scope !149
  %1100 = getelementptr inbounds i64, i64* %1093, i64 -1
  %1101 = bitcast i64* %1100 to <2 x i64>*
  store <2 x i64> %1096, <2 x i64>* %1101, align 8, !alias.scope !152, !noalias !149
  %1102 = getelementptr inbounds i64, i64* %1093, i64 -3
  %1103 = bitcast i64* %1102 to <2 x i64>*
  store <2 x i64> %1099, <2 x i64>* %1103, align 8, !alias.scope !152, !noalias !149
  %1104 = sub nuw nsw i64 -4, %1086
  %1105 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1039, i64 %1104
  %1106 = sub nuw nsw i64 -4, %1086
  %1107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1084, i64 %1106
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1107, i64 0, i32 0
  %1109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1105, i64 -1, i32 0
  %1110 = getelementptr inbounds i64, i64* %1108, i64 -1
  %1111 = bitcast i64* %1110 to <2 x i64>*
  %1112 = load <2 x i64>, <2 x i64>* %1111, align 8, !alias.scope !149
  %1113 = getelementptr inbounds i64, i64* %1108, i64 -3
  %1114 = bitcast i64* %1113 to <2 x i64>*
  %1115 = load <2 x i64>, <2 x i64>* %1114, align 8, !alias.scope !149
  %1116 = getelementptr inbounds i64, i64* %1109, i64 -1
  %1117 = bitcast i64* %1116 to <2 x i64>*
  store <2 x i64> %1112, <2 x i64>* %1117, align 8, !alias.scope !152, !noalias !149
  %1118 = getelementptr inbounds i64, i64* %1109, i64 -3
  %1119 = bitcast i64* %1118 to <2 x i64>*
  store <2 x i64> %1115, <2 x i64>* %1119, align 8, !alias.scope !152, !noalias !149
  %1120 = add i64 %1086, 8
  %1121 = add i64 %1087, -2
  %1122 = icmp eq i64 %1121, 0
  br i1 %1122, label %1123, label %1085, !llvm.loop !154

1123:                                             ; preds = %1085
  %1124 = sub nuw nsw i64 -8, %1086
  br label %1125

1125:                                             ; preds = %1123, %1070
  %1126 = phi i64 [ 0, %1070 ], [ %1124, %1123 ]
  %1127 = icmp eq i64 %1079, 0
  br i1 %1127, label %1144, label %1128

1128:                                             ; preds = %1125
  %1129 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1039, i64 %1126
  %1130 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1048, i64 -1
  %1131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1130, i64 %1126
  %1132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1131, i64 0, i32 0
  %1133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1129, i64 -1, i32 0
  %1134 = getelementptr inbounds i64, i64* %1132, i64 -1
  %1135 = bitcast i64* %1134 to <2 x i64>*
  %1136 = load <2 x i64>, <2 x i64>* %1135, align 8, !alias.scope !149
  %1137 = getelementptr inbounds i64, i64* %1132, i64 -3
  %1138 = bitcast i64* %1137 to <2 x i64>*
  %1139 = load <2 x i64>, <2 x i64>* %1138, align 8, !alias.scope !149
  %1140 = getelementptr inbounds i64, i64* %1133, i64 -1
  %1141 = bitcast i64* %1140 to <2 x i64>*
  store <2 x i64> %1136, <2 x i64>* %1141, align 8, !alias.scope !152, !noalias !149
  %1142 = getelementptr inbounds i64, i64* %1133, i64 -3
  %1143 = bitcast i64* %1142 to <2 x i64>*
  store <2 x i64> %1139, <2 x i64>* %1143, align 8, !alias.scope !152, !noalias !149
  br label %1144

1144:                                             ; preds = %1125, %1128
  %1145 = icmp eq i64 %1055, %1071
  br i1 %1145, label %1202, label %1146

1146:                                             ; preds = %1144, %1057, %1050
  %1147 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1039, %1057 ], [ %1039, %1050 ], [ %1073, %1144 ]
  %1148 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1048, %1057 ], [ %1048, %1050 ], [ %1075, %1144 ]
  %1149 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1148, i64 -1, i32 0
  %1150 = ptrtoint i64* %1149 to i64
  %1151 = sub i64 %1150, %1047
  %1152 = lshr i64 %1151, 3
  %1153 = add nuw nsw i64 %1152, 1
  %1154 = and i64 %1153, 7
  %1155 = icmp eq i64 %1154, 0
  br i1 %1155, label %1167, label %1156

1156:                                             ; preds = %1146, %1156
  %1157 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1164, %1156 ], [ %1147, %1146 ]
  %1158 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1160, %1156 ], [ %1148, %1146 ]
  %1159 = phi i64 [ %1165, %1156 ], [ %1154, %1146 ]
  %1160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1158, i64 -1
  %1161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1160, i64 0, i32 0
  %1162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1, i32 0
  %1163 = load i64, i64* %1161, align 8
  store i64 %1163, i64* %1162, align 8
  %1164 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1157, i64 -1
  %1165 = add i64 %1159, -1
  %1166 = icmp eq i64 %1165, 0
  br i1 %1166, label %1167, label %1156, !llvm.loop !155

1167:                                             ; preds = %1156, %1146
  %1168 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1146 ], [ %1164, %1156 ]
  %1169 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1147, %1146 ], [ %1164, %1156 ]
  %1170 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1148, %1146 ], [ %1160, %1156 ]
  %1171 = icmp ult i64 %1151, 56
  br i1 %1171, label %1202, label %1172

1172:                                             ; preds = %1167, %1172
  %1173 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1200, %1172 ], [ %1169, %1167 ]
  %1174 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1196, %1172 ], [ %1170, %1167 ]
  %1175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -1, i32 0
  %1176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -1, i32 0
  %1177 = load i64, i64* %1175, align 8
  store i64 %1177, i64* %1176, align 8
  %1178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -2, i32 0
  %1179 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -2, i32 0
  %1180 = load i64, i64* %1178, align 8
  store i64 %1180, i64* %1179, align 8
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -3, i32 0
  %1182 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -3, i32 0
  %1183 = load i64, i64* %1181, align 8
  store i64 %1183, i64* %1182, align 8
  %1184 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -4, i32 0
  %1185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -4, i32 0
  %1186 = load i64, i64* %1184, align 8
  store i64 %1186, i64* %1185, align 8
  %1187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -5, i32 0
  %1188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -5, i32 0
  %1189 = load i64, i64* %1187, align 8
  store i64 %1189, i64* %1188, align 8
  %1190 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -6, i32 0
  %1191 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -6, i32 0
  %1192 = load i64, i64* %1190, align 8
  store i64 %1192, i64* %1191, align 8
  %1193 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -7, i32 0
  %1194 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -7, i32 0
  %1195 = load i64, i64* %1193, align 8
  store i64 %1195, i64* %1194, align 8
  %1196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1174, i64 -8
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1196, i64 0, i32 0
  %1198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -8, i32 0
  %1199 = load i64, i64* %1197, align 8
  store i64 %1199, i64* %1198, align 8
  %1200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1173, i64 -8
  %1201 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1196, %1046
  br i1 %1201, label %1202, label %1172, !llvm.loop !156

1202:                                             ; preds = %1167, %1172, %1144, %1036
  %1203 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1039, %1036 ], [ %1073, %1144 ], [ %1168, %1167 ], [ %1200, %1172 ]
  %1204 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1203 to i64
  store i64 %1204, i64* %32, align 8
  store i64 %1044, i64* %30, align 8
  store i64 %1041, i64* %1009, align 8
  br label %1949

1205:                                             ; preds = %524
  %1206 = add i32 %525, -3
  %1207 = icmp ult i32 %1206, 2
  br i1 %1207, label %1208, label %1467

1208:                                             ; preds = %1205
  %1209 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 7
  %1210 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1209, align 8
  %1211 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1210, null
  br i1 %1211, label %1453, label %1212

1212:                                             ; preds = %1208
  %1213 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 8
  %1214 = load i32, i32* %1213, align 8
  %1215 = icmp sgt i32 %1214, 0
  br i1 %1215, label %1216, label %1453

1216:                                             ; preds = %1212
  %1217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %1218 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1217 to i64*
  %1219 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1220 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %28, i64 0, i32 0, i32 0, i32 0
  %1221 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  br label %1222

1222:                                             ; preds = %1449, %1216
  %1223 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1221, %1216 ], [ %1439, %1449 ]
  %1224 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1210, %1216 ], [ %1450, %1449 ]
  %1225 = phi i64 [ 0, %1216 ], [ %1445, %1449 ]
  %1226 = phi i64 [ %4, %1216 ], [ %1440, %1449 ]
  %1227 = phi i32 [ 0, %1216 ], [ %1444, %1449 ]
  %1228 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1224, i64 %1225, i32 0
  %1229 = load i64, i64* %1228, align 8
  %1230 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1217, align 8
  %1231 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1223, %1230
  br i1 %1231, label %1236, label %1232

1232:                                             ; preds = %1222
  %1233 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1223, i64 0, i32 0
  store i64 %1229, i64* %1233, align 8
  %1234 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1223, i64 1
  %1235 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1234 to i64
  store i64 %1235, i64* %30, align 8
  br label %1438

1236:                                             ; preds = %1222
  %1237 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1230 to i64
  %1238 = load i64, i64* %32, align 8
  %1239 = sub i64 %1237, %1238
  %1240 = ashr exact i64 %1239, 3
  %1241 = add nsw i64 %1240, 1
  %1242 = icmp ugt i64 %1241, 268435455
  br i1 %1242, label %1243, label %1245

1243:                                             ; preds = %1236
  %1244 = bitcast %"class.v8::internal::ZoneVector.1240"* %28 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1244) #13
  unreachable

1245:                                             ; preds = %1236
  %1246 = icmp ult i64 %1240, 134217727
  br i1 %1246, label %1247, label %1252

1247:                                             ; preds = %1245
  %1248 = ashr exact i64 %1239, 2
  %1249 = icmp ult i64 %1248, %1241
  %1250 = select i1 %1249, i64 %1241, i64 %1248
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1269, label %1252

1252:                                             ; preds = %1247, %1245
  %1253 = phi i64 [ %1250, %1247 ], [ 268435455, %1245 ]
  %1254 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1219, align 8
  %1255 = shl i64 %1253, 3
  %1256 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1254, i64 0, i32 2
  %1257 = load i64, i64* %1256, align 8
  %1258 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1254, i64 0, i32 3
  %1259 = load i64, i64* %1258, align 8
  %1260 = sub i64 %1259, %1257
  %1261 = icmp ugt i64 %1255, %1260
  br i1 %1261, label %1262, label %1264, !prof !2

1262:                                             ; preds = %1252
  %1263 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1254, i64 %1255) #12
  br label %1266

1264:                                             ; preds = %1252
  %1265 = add i64 %1257, %1255
  store i64 %1265, i64* %1256, align 8
  br label %1266

1266:                                             ; preds = %1264, %1262
  %1267 = phi i64 [ %1263, %1262 ], [ %1257, %1264 ]
  %1268 = inttoptr i64 %1267 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1269

1269:                                             ; preds = %1266, %1247
  %1270 = phi i64 [ %1253, %1266 ], [ 0, %1247 ]
  %1271 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1268, %1266 ], [ null, %1247 ]
  %1272 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1271, i64 %1240
  %1273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1271, i64 %1270
  %1274 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1273 to i64
  %1275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1272, i64 0, i32 0
  store i64 %1229, i64* %1275, align 8
  %1276 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1272, i64 1
  %1277 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1276 to i64
  %1278 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1220, align 8
  %1279 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1278 to i64
  %1280 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %1281 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1280, %1278
  br i1 %1281, label %1435, label %1282

1282:                                             ; preds = %1269
  %1283 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 -1
  %1284 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1283 to i64
  %1285 = sub i64 %1284, %1279
  %1286 = lshr i64 %1285, 3
  %1287 = add nuw nsw i64 %1286, 1
  %1288 = icmp ult i64 %1287, 4
  br i1 %1288, label %1379, label %1289

1289:                                             ; preds = %1282
  %1290 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1271, i64 -1
  %1291 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 -1
  %1292 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1291 to i64
  %1293 = sub i64 %1292, %1279
  %1294 = lshr i64 %1293, 3
  %1295 = sub nsw i64 %1240, %1294
  %1296 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1290, i64 %1295
  %1297 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 -1
  %1298 = sub nsw i64 0, %1294
  %1299 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1297, i64 %1298
  %1300 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1296, %1280
  %1301 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1299, %1272
  %1302 = and i1 %1300, %1301
  br i1 %1302, label %1379, label %1303

1303:                                             ; preds = %1289
  %1304 = and i64 %1287, 4611686018427387900
  %1305 = sub nsw i64 0, %1304
  %1306 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1272, i64 %1305
  %1307 = sub nsw i64 0, %1304
  %1308 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 %1307
  %1309 = add nsw i64 %1304, -4
  %1310 = lshr exact i64 %1309, 2
  %1311 = add nuw nsw i64 %1310, 1
  %1312 = and i64 %1311, 1
  %1313 = icmp eq i64 %1309, 0
  br i1 %1313, label %1356, label %1314

1314:                                             ; preds = %1303
  %1315 = sub nuw nsw i64 %1311, %1312
  %1316 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 -1
  %1317 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 -1
  br label %1318

1318:                                             ; preds = %1318, %1314
  %1319 = phi i64 [ 0, %1314 ], [ %1353, %1318 ]
  %1320 = phi i64 [ %1315, %1314 ], [ %1354, %1318 ]
  %1321 = sub i64 0, %1319
  %1322 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1272, i64 %1321
  %1323 = sub i64 0, %1319
  %1324 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1316, i64 %1323
  %1325 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1324, i64 0, i32 0
  %1326 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1322, i64 -1, i32 0
  %1327 = getelementptr inbounds i64, i64* %1325, i64 -1
  %1328 = bitcast i64* %1327 to <2 x i64>*
  %1329 = load <2 x i64>, <2 x i64>* %1328, align 8, !alias.scope !157
  %1330 = getelementptr inbounds i64, i64* %1325, i64 -3
  %1331 = bitcast i64* %1330 to <2 x i64>*
  %1332 = load <2 x i64>, <2 x i64>* %1331, align 8, !alias.scope !157
  %1333 = getelementptr inbounds i64, i64* %1326, i64 -1
  %1334 = bitcast i64* %1333 to <2 x i64>*
  store <2 x i64> %1329, <2 x i64>* %1334, align 8, !alias.scope !160, !noalias !157
  %1335 = getelementptr inbounds i64, i64* %1326, i64 -3
  %1336 = bitcast i64* %1335 to <2 x i64>*
  store <2 x i64> %1332, <2 x i64>* %1336, align 8, !alias.scope !160, !noalias !157
  %1337 = sub nuw nsw i64 -4, %1319
  %1338 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1272, i64 %1337
  %1339 = sub nuw nsw i64 -4, %1319
  %1340 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1317, i64 %1339
  %1341 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1340, i64 0, i32 0
  %1342 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1338, i64 -1, i32 0
  %1343 = getelementptr inbounds i64, i64* %1341, i64 -1
  %1344 = bitcast i64* %1343 to <2 x i64>*
  %1345 = load <2 x i64>, <2 x i64>* %1344, align 8, !alias.scope !157
  %1346 = getelementptr inbounds i64, i64* %1341, i64 -3
  %1347 = bitcast i64* %1346 to <2 x i64>*
  %1348 = load <2 x i64>, <2 x i64>* %1347, align 8, !alias.scope !157
  %1349 = getelementptr inbounds i64, i64* %1342, i64 -1
  %1350 = bitcast i64* %1349 to <2 x i64>*
  store <2 x i64> %1345, <2 x i64>* %1350, align 8, !alias.scope !160, !noalias !157
  %1351 = getelementptr inbounds i64, i64* %1342, i64 -3
  %1352 = bitcast i64* %1351 to <2 x i64>*
  store <2 x i64> %1348, <2 x i64>* %1352, align 8, !alias.scope !160, !noalias !157
  %1353 = add i64 %1319, 8
  %1354 = add i64 %1320, -2
  %1355 = icmp eq i64 %1354, 0
  br i1 %1355, label %1356, label %1318, !llvm.loop !162

1356:                                             ; preds = %1318, %1303
  %1357 = phi i64 [ 0, %1303 ], [ %1353, %1318 ]
  %1358 = icmp eq i64 %1312, 0
  br i1 %1358, label %1377, label %1359

1359:                                             ; preds = %1356
  %1360 = sub i64 0, %1357
  %1361 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1272, i64 %1360
  %1362 = sub i64 0, %1357
  %1363 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1280, i64 -1
  %1364 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1363, i64 %1362
  %1365 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1364, i64 0, i32 0
  %1366 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1361, i64 -1, i32 0
  %1367 = getelementptr inbounds i64, i64* %1365, i64 -1
  %1368 = bitcast i64* %1367 to <2 x i64>*
  %1369 = load <2 x i64>, <2 x i64>* %1368, align 8, !alias.scope !157
  %1370 = getelementptr inbounds i64, i64* %1365, i64 -3
  %1371 = bitcast i64* %1370 to <2 x i64>*
  %1372 = load <2 x i64>, <2 x i64>* %1371, align 8, !alias.scope !157
  %1373 = getelementptr inbounds i64, i64* %1366, i64 -1
  %1374 = bitcast i64* %1373 to <2 x i64>*
  store <2 x i64> %1369, <2 x i64>* %1374, align 8, !alias.scope !160, !noalias !157
  %1375 = getelementptr inbounds i64, i64* %1366, i64 -3
  %1376 = bitcast i64* %1375 to <2 x i64>*
  store <2 x i64> %1372, <2 x i64>* %1376, align 8, !alias.scope !160, !noalias !157
  br label %1377

1377:                                             ; preds = %1356, %1359
  %1378 = icmp eq i64 %1287, %1304
  br i1 %1378, label %1435, label %1379

1379:                                             ; preds = %1377, %1289, %1282
  %1380 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1272, %1289 ], [ %1272, %1282 ], [ %1306, %1377 ]
  %1381 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1280, %1289 ], [ %1280, %1282 ], [ %1308, %1377 ]
  %1382 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1381, i64 -1
  %1383 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1382 to i64
  %1384 = sub i64 %1383, %1279
  %1385 = lshr i64 %1384, 3
  %1386 = add nuw nsw i64 %1385, 1
  %1387 = and i64 %1386, 7
  %1388 = icmp eq i64 %1387, 0
  br i1 %1388, label %1400, label %1389

1389:                                             ; preds = %1379, %1389
  %1390 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1397, %1389 ], [ %1380, %1379 ]
  %1391 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1393, %1389 ], [ %1381, %1379 ]
  %1392 = phi i64 [ %1398, %1389 ], [ %1387, %1379 ]
  %1393 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1391, i64 -1
  %1394 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1393, i64 0, i32 0
  %1395 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1390, i64 -1, i32 0
  %1396 = load i64, i64* %1394, align 8
  store i64 %1396, i64* %1395, align 8
  %1397 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1390, i64 -1
  %1398 = add i64 %1392, -1
  %1399 = icmp eq i64 %1398, 0
  br i1 %1399, label %1400, label %1389, !llvm.loop !163

1400:                                             ; preds = %1389, %1379
  %1401 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1379 ], [ %1397, %1389 ]
  %1402 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1380, %1379 ], [ %1397, %1389 ]
  %1403 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1381, %1379 ], [ %1393, %1389 ]
  %1404 = icmp ult i64 %1384, 56
  br i1 %1404, label %1435, label %1405

1405:                                             ; preds = %1400, %1405
  %1406 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1433, %1405 ], [ %1402, %1400 ]
  %1407 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1429, %1405 ], [ %1403, %1400 ]
  %1408 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -1, i32 0
  %1409 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -1, i32 0
  %1410 = load i64, i64* %1408, align 8
  store i64 %1410, i64* %1409, align 8
  %1411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -2, i32 0
  %1412 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -2, i32 0
  %1413 = load i64, i64* %1411, align 8
  store i64 %1413, i64* %1412, align 8
  %1414 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -3, i32 0
  %1415 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -3, i32 0
  %1416 = load i64, i64* %1414, align 8
  store i64 %1416, i64* %1415, align 8
  %1417 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -4, i32 0
  %1418 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -4, i32 0
  %1419 = load i64, i64* %1417, align 8
  store i64 %1419, i64* %1418, align 8
  %1420 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -5, i32 0
  %1421 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -5, i32 0
  %1422 = load i64, i64* %1420, align 8
  store i64 %1422, i64* %1421, align 8
  %1423 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -6, i32 0
  %1424 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -6, i32 0
  %1425 = load i64, i64* %1423, align 8
  store i64 %1425, i64* %1424, align 8
  %1426 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -7, i32 0
  %1427 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -7, i32 0
  %1428 = load i64, i64* %1426, align 8
  store i64 %1428, i64* %1427, align 8
  %1429 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1407, i64 -8
  %1430 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1429, i64 0, i32 0
  %1431 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -8, i32 0
  %1432 = load i64, i64* %1430, align 8
  store i64 %1432, i64* %1431, align 8
  %1433 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1406, i64 -8
  %1434 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1429, %1278
  br i1 %1434, label %1435, label %1405, !llvm.loop !164

1435:                                             ; preds = %1400, %1405, %1377, %1269
  %1436 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1272, %1269 ], [ %1306, %1377 ], [ %1401, %1400 ], [ %1433, %1405 ]
  %1437 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1436 to i64
  store i64 %1437, i64* %32, align 8
  store i64 %1277, i64* %30, align 8
  store i64 %1274, i64* %1218, align 8
  br label %1438

1438:                                             ; preds = %1232, %1435
  %1439 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1234, %1232 ], [ %1276, %1435 ]
  %1440 = add i64 %1226, 1
  %1441 = and i64 %1229, 7
  %1442 = icmp eq i64 %1441, 3
  %1443 = zext i1 %1442 to i32
  %1444 = add nuw nsw i32 %1227, %1443
  %1445 = add nuw nsw i64 %1225, 1
  %1446 = load i32, i32* %1213, align 8
  %1447 = sext i32 %1446 to i64
  %1448 = icmp slt i64 %1445, %1447
  br i1 %1448, label %1449, label %1451

1449:                                             ; preds = %1438
  %1450 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1209, align 8
  br label %1222

1451:                                             ; preds = %1438
  %1452 = shl i32 %1444, 22
  br label %1453

1453:                                             ; preds = %1451, %1212, %1208
  %1454 = phi i32 [ 0, %1208 ], [ 0, %1212 ], [ %1452, %1451 ]
  %1455 = phi i64 [ %4, %1208 ], [ %4, %1212 ], [ %1440, %1451 ]
  %1456 = trunc i64 %1455 to i32
  %1457 = shl i32 %1456, 24
  %1458 = or i32 %1454, %27
  %1459 = or i32 %1458, %1457
  %1460 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 2
  %1461 = load i8, i8* %1460, align 8
  %1462 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 3
  %1463 = load i8, i8* %1462, align 1
  %1464 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 5
  %1465 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 6
  %1466 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1465, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector25AppendDeoptimizeArgumentsEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceENS1_10FrameStateE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::ZoneVector.1240"* %28, i8 zeroext %1461, i8 zeroext %1463, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16) %1464, %"class.v8::internal::compiler::Node"* %1466)
  br label %1949

1467:                                             ; preds = %1205
  switch i32 %525, label %1949 [
    i32 5, label %1468
    i32 7, label %1721
    i32 6, label %1726
  ]

1468:                                             ; preds = %1467
  %1469 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 6
  %1470 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1469, align 8
  %1471 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %15, align 8
  %1472 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1470, i64 0, i32 3
  %1473 = load i32, i32* %1472, align 4
  %1474 = and i32 %1473, 16777215
  %1475 = zext i32 %1474 to i64
  %1476 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1471, i64 0, i32 15, i32 0, i32 0, i32 0
  %1477 = load i32*, i32** %1476, align 8
  %1478 = getelementptr inbounds i32, i32* %1477, i64 %1475
  %1479 = load i32, i32* %1478, align 4
  %1480 = icmp eq i32 %1479, -1
  br i1 %1480, label %1481, label %1491

1481:                                             ; preds = %1468
  %1482 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1471, i64 0, i32 2
  %1483 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1482, align 8
  %1484 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1483) #12
  %1485 = load i32*, i32** %1476, align 8
  %1486 = getelementptr inbounds i32, i32* %1485, i64 %1475
  store i32 %1484, i32* %1486, align 4
  %1487 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %15, align 8
  %1488 = load i32, i32* %1472, align 4
  %1489 = and i32 %1488, 16777215
  %1490 = zext i32 %1489 to i64
  br label %1491

1491:                                             ; preds = %1468, %1481
  %1492 = phi i64 [ %1475, %1468 ], [ %1490, %1481 ]
  %1493 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1471, %1468 ], [ %1487, %1481 ]
  %1494 = phi i32 [ %1479, %1468 ], [ %1484, %1481 ]
  %1495 = zext i32 %1494 to i64
  %1496 = shl nuw nsw i64 %1495, 3
  %1497 = or i64 %1496, 927712935937
  %1498 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1493, i64 0, i32 12, i32 0, i32 0
  %1499 = load i64*, i64** %1498, align 8
  %1500 = lshr i64 %1492, 6
  %1501 = getelementptr inbounds i64, i64* %1499, i64 %1500
  %1502 = and i64 %1492, 63
  %1503 = shl i64 1, %1502
  %1504 = load i64, i64* %1501, align 8
  %1505 = or i64 %1504, %1503
  store i64 %1505, i64* %1501, align 8
  %1506 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, align 8
  %1507 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %1508 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1507, align 8
  %1509 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1506, %1508
  %1510 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1508 to i64
  br i1 %1509, label %1511, label %1515

1511:                                             ; preds = %1491
  %1512 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1506, i64 0, i32 0
  store i64 %1497, i64* %1512, align 8
  %1513 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1506, i64 1
  %1514 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1513 to i64
  store i64 %1514, i64* %49, align 8
  br label %1949

1515:                                             ; preds = %1491
  %1516 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1506 to i64
  %1517 = load i64, i64* %51, align 8
  %1518 = sub i64 %1516, %1517
  %1519 = ashr exact i64 %1518, 3
  %1520 = add nsw i64 %1519, 1
  %1521 = icmp ugt i64 %1520, 268435455
  br i1 %1521, label %1522, label %1524

1522:                                             ; preds = %1515
  %1523 = bitcast %"class.std::__1::vector.1241"* %47 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1523) #13
  unreachable

1524:                                             ; preds = %1515
  %1525 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1507 to i64*
  %1526 = sub i64 %1510, %1517
  %1527 = ashr exact i64 %1526, 3
  %1528 = icmp ult i64 %1527, 134217727
  br i1 %1528, label %1529, label %1534

1529:                                             ; preds = %1524
  %1530 = ashr exact i64 %1526, 2
  %1531 = icmp ult i64 %1530, %1520
  %1532 = select i1 %1531, i64 %1520, i64 %1530
  %1533 = icmp eq i64 %1532, 0
  br i1 %1533, label %1552, label %1534

1534:                                             ; preds = %1529, %1524
  %1535 = phi i64 [ %1532, %1529 ], [ 268435455, %1524 ]
  %1536 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1537 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1536, align 8
  %1538 = shl i64 %1535, 3
  %1539 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1537, i64 0, i32 2
  %1540 = load i64, i64* %1539, align 8
  %1541 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1537, i64 0, i32 3
  %1542 = load i64, i64* %1541, align 8
  %1543 = sub i64 %1542, %1540
  %1544 = icmp ugt i64 %1538, %1543
  br i1 %1544, label %1545, label %1547, !prof !2

1545:                                             ; preds = %1534
  %1546 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1537, i64 %1538) #12
  br label %1549

1547:                                             ; preds = %1534
  %1548 = add i64 %1540, %1538
  store i64 %1548, i64* %1539, align 8
  br label %1549

1549:                                             ; preds = %1547, %1545
  %1550 = phi i64 [ %1546, %1545 ], [ %1540, %1547 ]
  %1551 = inttoptr i64 %1550 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1552

1552:                                             ; preds = %1549, %1529
  %1553 = phi i64 [ %1535, %1549 ], [ 0, %1529 ]
  %1554 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1551, %1549 ], [ null, %1529 ]
  %1555 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1554, i64 %1519
  %1556 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1554, i64 %1553
  %1557 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1556 to i64
  %1558 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1555, i64 0, i32 0
  store i64 %1497, i64* %1558, align 8
  %1559 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1555, i64 1
  %1560 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1559 to i64
  %1561 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %47, i64 0, i32 0, i32 0
  %1562 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1561, align 8
  %1563 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1562 to i64
  %1564 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, align 8
  %1565 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1564, %1562
  br i1 %1565, label %1718, label %1566

1566:                                             ; preds = %1552
  %1567 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 -1, i32 0
  %1568 = ptrtoint i64* %1567 to i64
  %1569 = sub i64 %1568, %1563
  %1570 = lshr i64 %1569, 3
  %1571 = add nuw nsw i64 %1570, 1
  %1572 = icmp ult i64 %1571, 4
  br i1 %1572, label %1662, label %1573

1573:                                             ; preds = %1566
  %1574 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 -1, i32 0
  %1575 = ptrtoint i64* %1574 to i64
  %1576 = sub i64 %1575, %1563
  %1577 = lshr i64 %1576, 3
  %1578 = xor i64 %1577, -1
  %1579 = add nsw i64 %1519, %1578
  %1580 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1554, i64 %1579
  %1581 = xor i64 %1577, -1
  %1582 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 %1581
  %1583 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1580, %1564
  %1584 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1582, %1555
  %1585 = and i1 %1583, %1584
  br i1 %1585, label %1662, label %1586

1586:                                             ; preds = %1573
  %1587 = and i64 %1571, 4611686018427387900
  %1588 = sub nsw i64 0, %1587
  %1589 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1555, i64 %1588
  %1590 = sub nsw i64 0, %1587
  %1591 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 %1590
  %1592 = add nsw i64 %1587, -4
  %1593 = lshr exact i64 %1592, 2
  %1594 = add nuw nsw i64 %1593, 1
  %1595 = and i64 %1594, 1
  %1596 = icmp eq i64 %1592, 0
  br i1 %1596, label %1641, label %1597

1597:                                             ; preds = %1586
  %1598 = sub nuw nsw i64 %1594, %1595
  %1599 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 -1
  %1600 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 -1
  br label %1601

1601:                                             ; preds = %1601, %1597
  %1602 = phi i64 [ 0, %1597 ], [ %1636, %1601 ]
  %1603 = phi i64 [ %1598, %1597 ], [ %1637, %1601 ]
  %1604 = sub i64 0, %1602
  %1605 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1555, i64 %1604
  %1606 = sub i64 0, %1602
  %1607 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1599, i64 %1606
  %1608 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1607, i64 0, i32 0
  %1609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1605, i64 -1, i32 0
  %1610 = getelementptr inbounds i64, i64* %1608, i64 -1
  %1611 = bitcast i64* %1610 to <2 x i64>*
  %1612 = load <2 x i64>, <2 x i64>* %1611, align 8, !alias.scope !165
  %1613 = getelementptr inbounds i64, i64* %1608, i64 -3
  %1614 = bitcast i64* %1613 to <2 x i64>*
  %1615 = load <2 x i64>, <2 x i64>* %1614, align 8, !alias.scope !165
  %1616 = getelementptr inbounds i64, i64* %1609, i64 -1
  %1617 = bitcast i64* %1616 to <2 x i64>*
  store <2 x i64> %1612, <2 x i64>* %1617, align 8, !alias.scope !168, !noalias !165
  %1618 = getelementptr inbounds i64, i64* %1609, i64 -3
  %1619 = bitcast i64* %1618 to <2 x i64>*
  store <2 x i64> %1615, <2 x i64>* %1619, align 8, !alias.scope !168, !noalias !165
  %1620 = sub nuw nsw i64 -4, %1602
  %1621 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1555, i64 %1620
  %1622 = sub nuw nsw i64 -4, %1602
  %1623 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1600, i64 %1622
  %1624 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1623, i64 0, i32 0
  %1625 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1621, i64 -1, i32 0
  %1626 = getelementptr inbounds i64, i64* %1624, i64 -1
  %1627 = bitcast i64* %1626 to <2 x i64>*
  %1628 = load <2 x i64>, <2 x i64>* %1627, align 8, !alias.scope !165
  %1629 = getelementptr inbounds i64, i64* %1624, i64 -3
  %1630 = bitcast i64* %1629 to <2 x i64>*
  %1631 = load <2 x i64>, <2 x i64>* %1630, align 8, !alias.scope !165
  %1632 = getelementptr inbounds i64, i64* %1625, i64 -1
  %1633 = bitcast i64* %1632 to <2 x i64>*
  store <2 x i64> %1628, <2 x i64>* %1633, align 8, !alias.scope !168, !noalias !165
  %1634 = getelementptr inbounds i64, i64* %1625, i64 -3
  %1635 = bitcast i64* %1634 to <2 x i64>*
  store <2 x i64> %1631, <2 x i64>* %1635, align 8, !alias.scope !168, !noalias !165
  %1636 = add i64 %1602, 8
  %1637 = add i64 %1603, -2
  %1638 = icmp eq i64 %1637, 0
  br i1 %1638, label %1639, label %1601, !llvm.loop !170

1639:                                             ; preds = %1601
  %1640 = sub nuw nsw i64 -8, %1602
  br label %1641

1641:                                             ; preds = %1639, %1586
  %1642 = phi i64 [ 0, %1586 ], [ %1640, %1639 ]
  %1643 = icmp eq i64 %1595, 0
  br i1 %1643, label %1660, label %1644

1644:                                             ; preds = %1641
  %1645 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1555, i64 %1642
  %1646 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1564, i64 -1
  %1647 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1646, i64 %1642
  %1648 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1647, i64 0, i32 0
  %1649 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1645, i64 -1, i32 0
  %1650 = getelementptr inbounds i64, i64* %1648, i64 -1
  %1651 = bitcast i64* %1650 to <2 x i64>*
  %1652 = load <2 x i64>, <2 x i64>* %1651, align 8, !alias.scope !165
  %1653 = getelementptr inbounds i64, i64* %1648, i64 -3
  %1654 = bitcast i64* %1653 to <2 x i64>*
  %1655 = load <2 x i64>, <2 x i64>* %1654, align 8, !alias.scope !165
  %1656 = getelementptr inbounds i64, i64* %1649, i64 -1
  %1657 = bitcast i64* %1656 to <2 x i64>*
  store <2 x i64> %1652, <2 x i64>* %1657, align 8, !alias.scope !168, !noalias !165
  %1658 = getelementptr inbounds i64, i64* %1649, i64 -3
  %1659 = bitcast i64* %1658 to <2 x i64>*
  store <2 x i64> %1655, <2 x i64>* %1659, align 8, !alias.scope !168, !noalias !165
  br label %1660

1660:                                             ; preds = %1641, %1644
  %1661 = icmp eq i64 %1571, %1587
  br i1 %1661, label %1718, label %1662

1662:                                             ; preds = %1660, %1573, %1566
  %1663 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1555, %1573 ], [ %1555, %1566 ], [ %1589, %1660 ]
  %1664 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1564, %1573 ], [ %1564, %1566 ], [ %1591, %1660 ]
  %1665 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1664, i64 -1, i32 0
  %1666 = ptrtoint i64* %1665 to i64
  %1667 = sub i64 %1666, %1563
  %1668 = lshr i64 %1667, 3
  %1669 = add nuw nsw i64 %1668, 1
  %1670 = and i64 %1669, 7
  %1671 = icmp eq i64 %1670, 0
  br i1 %1671, label %1683, label %1672

1672:                                             ; preds = %1662, %1672
  %1673 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1680, %1672 ], [ %1663, %1662 ]
  %1674 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1676, %1672 ], [ %1664, %1662 ]
  %1675 = phi i64 [ %1681, %1672 ], [ %1670, %1662 ]
  %1676 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1674, i64 -1
  %1677 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1676, i64 0, i32 0
  %1678 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1673, i64 -1, i32 0
  %1679 = load i64, i64* %1677, align 8
  store i64 %1679, i64* %1678, align 8
  %1680 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1673, i64 -1
  %1681 = add i64 %1675, -1
  %1682 = icmp eq i64 %1681, 0
  br i1 %1682, label %1683, label %1672, !llvm.loop !171

1683:                                             ; preds = %1672, %1662
  %1684 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1662 ], [ %1680, %1672 ]
  %1685 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1663, %1662 ], [ %1680, %1672 ]
  %1686 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1664, %1662 ], [ %1676, %1672 ]
  %1687 = icmp ult i64 %1667, 56
  br i1 %1687, label %1718, label %1688

1688:                                             ; preds = %1683, %1688
  %1689 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1716, %1688 ], [ %1685, %1683 ]
  %1690 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1712, %1688 ], [ %1686, %1683 ]
  %1691 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -1, i32 0
  %1692 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -1, i32 0
  %1693 = load i64, i64* %1691, align 8
  store i64 %1693, i64* %1692, align 8
  %1694 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -2, i32 0
  %1695 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -2, i32 0
  %1696 = load i64, i64* %1694, align 8
  store i64 %1696, i64* %1695, align 8
  %1697 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -3, i32 0
  %1698 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -3, i32 0
  %1699 = load i64, i64* %1697, align 8
  store i64 %1699, i64* %1698, align 8
  %1700 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -4, i32 0
  %1701 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -4, i32 0
  %1702 = load i64, i64* %1700, align 8
  store i64 %1702, i64* %1701, align 8
  %1703 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -5, i32 0
  %1704 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -5, i32 0
  %1705 = load i64, i64* %1703, align 8
  store i64 %1705, i64* %1704, align 8
  %1706 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -6, i32 0
  %1707 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -6, i32 0
  %1708 = load i64, i64* %1706, align 8
  store i64 %1708, i64* %1707, align 8
  %1709 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -7, i32 0
  %1710 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -7, i32 0
  %1711 = load i64, i64* %1709, align 8
  store i64 %1711, i64* %1710, align 8
  %1712 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1690, i64 -8
  %1713 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1712, i64 0, i32 0
  %1714 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -8, i32 0
  %1715 = load i64, i64* %1713, align 8
  store i64 %1715, i64* %1714, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1689, i64 -8
  %1717 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1712, %1562
  br i1 %1717, label %1718, label %1688, !llvm.loop !172

1718:                                             ; preds = %1683, %1688, %1660, %1552
  %1719 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1555, %1552 ], [ %1589, %1660 ], [ %1684, %1683 ], [ %1716, %1688 ]
  %1720 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1719 to i64
  store i64 %1720, i64* %51, align 8
  store i64 %1560, i64* %49, align 8
  store i64 %1557, i64* %1525, align 8
  br label %1949

1721:                                             ; preds = %1467
  %1722 = trunc i64 %4 to i32
  %1723 = add nsw i32 %1722, -2
  %1724 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 6
  %1725 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1724, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector29AddOutputToSelectContinuationEPNS1_16OperandGeneratorEiPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::OperandGenerator"* nonnull %13, i32 %1723, %"class.v8::internal::compiler::Node"* %1725) #12
  br label %1949

1726:                                             ; preds = %1467
  %1727 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 11
  %1728 = load i32, i32* %1727, align 8
  %1729 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %15, align 8
  %1730 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1729, i64 0, i32 2
  %1731 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1730, align 8
  %1732 = bitcast %"class.v8::internal::compiler::Constant"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1732) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %10, i32 %1728) #12
  %1733 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %1731, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1732) #12
  %1734 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %1735 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %1736 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1735, align 8
  %1737 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1734, %1736
  %1738 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1736 to i64
  br i1 %1737, label %1739, label %1743

1739:                                             ; preds = %1726
  %1740 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1734, i64 0, i32 0
  store i64 %1733, i64* %1740, align 8
  %1741 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1734, i64 1
  %1742 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1741 to i64
  store i64 %1742, i64* %30, align 8
  br label %1949

1743:                                             ; preds = %1726
  %1744 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1734 to i64
  %1745 = load i64, i64* %32, align 8
  %1746 = sub i64 %1744, %1745
  %1747 = ashr exact i64 %1746, 3
  %1748 = add nsw i64 %1747, 1
  %1749 = icmp ugt i64 %1748, 268435455
  br i1 %1749, label %1750, label %1752

1750:                                             ; preds = %1743
  %1751 = bitcast %"class.v8::internal::ZoneVector.1240"* %28 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1751) #13
  unreachable

1752:                                             ; preds = %1743
  %1753 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1735 to i64*
  %1754 = sub i64 %1738, %1745
  %1755 = ashr exact i64 %1754, 3
  %1756 = icmp ult i64 %1755, 134217727
  br i1 %1756, label %1757, label %1762

1757:                                             ; preds = %1752
  %1758 = ashr exact i64 %1754, 2
  %1759 = icmp ult i64 %1758, %1748
  %1760 = select i1 %1759, i64 %1748, i64 %1758
  %1761 = icmp eq i64 %1760, 0
  br i1 %1761, label %1780, label %1762

1762:                                             ; preds = %1757, %1752
  %1763 = phi i64 [ %1760, %1757 ], [ 268435455, %1752 ]
  %1764 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1765 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1764, align 8
  %1766 = shl i64 %1763, 3
  %1767 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1765, i64 0, i32 2
  %1768 = load i64, i64* %1767, align 8
  %1769 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1765, i64 0, i32 3
  %1770 = load i64, i64* %1769, align 8
  %1771 = sub i64 %1770, %1768
  %1772 = icmp ugt i64 %1766, %1771
  br i1 %1772, label %1773, label %1775, !prof !2

1773:                                             ; preds = %1762
  %1774 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1765, i64 %1766) #12
  br label %1777

1775:                                             ; preds = %1762
  %1776 = add i64 %1768, %1766
  store i64 %1776, i64* %1767, align 8
  br label %1777

1777:                                             ; preds = %1775, %1773
  %1778 = phi i64 [ %1774, %1773 ], [ %1768, %1775 ]
  %1779 = inttoptr i64 %1778 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1780

1780:                                             ; preds = %1777, %1757
  %1781 = phi i64 [ %1763, %1777 ], [ 0, %1757 ]
  %1782 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1779, %1777 ], [ null, %1757 ]
  %1783 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1782, i64 %1747
  %1784 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1782, i64 %1781
  %1785 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1784 to i64
  %1786 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 0, i32 0
  store i64 %1733, i64* %1786, align 8
  %1787 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 1
  %1788 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1787 to i64
  %1789 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %28, i64 0, i32 0, i32 0, i32 0
  %1790 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1789, align 8
  %1791 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1790 to i64
  %1792 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %1793 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1792, %1790
  br i1 %1793, label %1946, label %1794

1794:                                             ; preds = %1780
  %1795 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 -1, i32 0
  %1796 = ptrtoint i64* %1795 to i64
  %1797 = sub i64 %1796, %1791
  %1798 = lshr i64 %1797, 3
  %1799 = add nuw nsw i64 %1798, 1
  %1800 = icmp ult i64 %1799, 4
  br i1 %1800, label %1890, label %1801

1801:                                             ; preds = %1794
  %1802 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 -1, i32 0
  %1803 = ptrtoint i64* %1802 to i64
  %1804 = sub i64 %1803, %1791
  %1805 = lshr i64 %1804, 3
  %1806 = xor i64 %1805, -1
  %1807 = add nsw i64 %1747, %1806
  %1808 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1782, i64 %1807
  %1809 = xor i64 %1805, -1
  %1810 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 %1809
  %1811 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1808, %1792
  %1812 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1810, %1783
  %1813 = and i1 %1811, %1812
  br i1 %1813, label %1890, label %1814

1814:                                             ; preds = %1801
  %1815 = and i64 %1799, 4611686018427387900
  %1816 = sub nsw i64 0, %1815
  %1817 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 %1816
  %1818 = sub nsw i64 0, %1815
  %1819 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 %1818
  %1820 = add nsw i64 %1815, -4
  %1821 = lshr exact i64 %1820, 2
  %1822 = add nuw nsw i64 %1821, 1
  %1823 = and i64 %1822, 1
  %1824 = icmp eq i64 %1820, 0
  br i1 %1824, label %1869, label %1825

1825:                                             ; preds = %1814
  %1826 = sub nuw nsw i64 %1822, %1823
  %1827 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 -1
  %1828 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 -1
  br label %1829

1829:                                             ; preds = %1829, %1825
  %1830 = phi i64 [ 0, %1825 ], [ %1864, %1829 ]
  %1831 = phi i64 [ %1826, %1825 ], [ %1865, %1829 ]
  %1832 = sub i64 0, %1830
  %1833 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 %1832
  %1834 = sub i64 0, %1830
  %1835 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 %1834
  %1836 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1835, i64 0, i32 0
  %1837 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1833, i64 -1, i32 0
  %1838 = getelementptr inbounds i64, i64* %1836, i64 -1
  %1839 = bitcast i64* %1838 to <2 x i64>*
  %1840 = load <2 x i64>, <2 x i64>* %1839, align 8, !alias.scope !173
  %1841 = getelementptr inbounds i64, i64* %1836, i64 -3
  %1842 = bitcast i64* %1841 to <2 x i64>*
  %1843 = load <2 x i64>, <2 x i64>* %1842, align 8, !alias.scope !173
  %1844 = getelementptr inbounds i64, i64* %1837, i64 -1
  %1845 = bitcast i64* %1844 to <2 x i64>*
  store <2 x i64> %1840, <2 x i64>* %1845, align 8, !alias.scope !176, !noalias !173
  %1846 = getelementptr inbounds i64, i64* %1837, i64 -3
  %1847 = bitcast i64* %1846 to <2 x i64>*
  store <2 x i64> %1843, <2 x i64>* %1847, align 8, !alias.scope !176, !noalias !173
  %1848 = sub nuw nsw i64 -4, %1830
  %1849 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 %1848
  %1850 = sub nuw nsw i64 -4, %1830
  %1851 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1828, i64 %1850
  %1852 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1851, i64 0, i32 0
  %1853 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1849, i64 -1, i32 0
  %1854 = getelementptr inbounds i64, i64* %1852, i64 -1
  %1855 = bitcast i64* %1854 to <2 x i64>*
  %1856 = load <2 x i64>, <2 x i64>* %1855, align 8, !alias.scope !173
  %1857 = getelementptr inbounds i64, i64* %1852, i64 -3
  %1858 = bitcast i64* %1857 to <2 x i64>*
  %1859 = load <2 x i64>, <2 x i64>* %1858, align 8, !alias.scope !173
  %1860 = getelementptr inbounds i64, i64* %1853, i64 -1
  %1861 = bitcast i64* %1860 to <2 x i64>*
  store <2 x i64> %1856, <2 x i64>* %1861, align 8, !alias.scope !176, !noalias !173
  %1862 = getelementptr inbounds i64, i64* %1853, i64 -3
  %1863 = bitcast i64* %1862 to <2 x i64>*
  store <2 x i64> %1859, <2 x i64>* %1863, align 8, !alias.scope !176, !noalias !173
  %1864 = add i64 %1830, 8
  %1865 = add i64 %1831, -2
  %1866 = icmp eq i64 %1865, 0
  br i1 %1866, label %1867, label %1829, !llvm.loop !178

1867:                                             ; preds = %1829
  %1868 = sub nuw nsw i64 -8, %1830
  br label %1869

1869:                                             ; preds = %1867, %1814
  %1870 = phi i64 [ 0, %1814 ], [ %1868, %1867 ]
  %1871 = icmp eq i64 %1823, 0
  br i1 %1871, label %1888, label %1872

1872:                                             ; preds = %1869
  %1873 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 %1870
  %1874 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1792, i64 -1
  %1875 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1874, i64 %1870
  %1876 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1875, i64 0, i32 0
  %1877 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1873, i64 -1, i32 0
  %1878 = getelementptr inbounds i64, i64* %1876, i64 -1
  %1879 = bitcast i64* %1878 to <2 x i64>*
  %1880 = load <2 x i64>, <2 x i64>* %1879, align 8, !alias.scope !173
  %1881 = getelementptr inbounds i64, i64* %1876, i64 -3
  %1882 = bitcast i64* %1881 to <2 x i64>*
  %1883 = load <2 x i64>, <2 x i64>* %1882, align 8, !alias.scope !173
  %1884 = getelementptr inbounds i64, i64* %1877, i64 -1
  %1885 = bitcast i64* %1884 to <2 x i64>*
  store <2 x i64> %1880, <2 x i64>* %1885, align 8, !alias.scope !176, !noalias !173
  %1886 = getelementptr inbounds i64, i64* %1877, i64 -3
  %1887 = bitcast i64* %1886 to <2 x i64>*
  store <2 x i64> %1883, <2 x i64>* %1887, align 8, !alias.scope !176, !noalias !173
  br label %1888

1888:                                             ; preds = %1869, %1872
  %1889 = icmp eq i64 %1799, %1815
  br i1 %1889, label %1946, label %1890

1890:                                             ; preds = %1888, %1801, %1794
  %1891 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1783, %1801 ], [ %1783, %1794 ], [ %1817, %1888 ]
  %1892 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1792, %1801 ], [ %1792, %1794 ], [ %1819, %1888 ]
  %1893 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1892, i64 -1, i32 0
  %1894 = ptrtoint i64* %1893 to i64
  %1895 = sub i64 %1894, %1791
  %1896 = lshr i64 %1895, 3
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = and i64 %1897, 7
  %1899 = icmp eq i64 %1898, 0
  br i1 %1899, label %1911, label %1900

1900:                                             ; preds = %1890, %1900
  %1901 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1908, %1900 ], [ %1891, %1890 ]
  %1902 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1904, %1900 ], [ %1892, %1890 ]
  %1903 = phi i64 [ %1909, %1900 ], [ %1898, %1890 ]
  %1904 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1902, i64 -1
  %1905 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1904, i64 0, i32 0
  %1906 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1901, i64 -1, i32 0
  %1907 = load i64, i64* %1905, align 8
  store i64 %1907, i64* %1906, align 8
  %1908 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1901, i64 -1
  %1909 = add i64 %1903, -1
  %1910 = icmp eq i64 %1909, 0
  br i1 %1910, label %1911, label %1900, !llvm.loop !179

1911:                                             ; preds = %1900, %1890
  %1912 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1890 ], [ %1908, %1900 ]
  %1913 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1891, %1890 ], [ %1908, %1900 ]
  %1914 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1892, %1890 ], [ %1904, %1900 ]
  %1915 = icmp ult i64 %1895, 56
  br i1 %1915, label %1946, label %1916

1916:                                             ; preds = %1911, %1916
  %1917 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1944, %1916 ], [ %1913, %1911 ]
  %1918 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1940, %1916 ], [ %1914, %1911 ]
  %1919 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -1, i32 0
  %1920 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -1, i32 0
  %1921 = load i64, i64* %1919, align 8
  store i64 %1921, i64* %1920, align 8
  %1922 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -2, i32 0
  %1923 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -2, i32 0
  %1924 = load i64, i64* %1922, align 8
  store i64 %1924, i64* %1923, align 8
  %1925 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -3, i32 0
  %1926 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -3, i32 0
  %1927 = load i64, i64* %1925, align 8
  store i64 %1927, i64* %1926, align 8
  %1928 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -4, i32 0
  %1929 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -4, i32 0
  %1930 = load i64, i64* %1928, align 8
  store i64 %1930, i64* %1929, align 8
  %1931 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -5, i32 0
  %1932 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -5, i32 0
  %1933 = load i64, i64* %1931, align 8
  store i64 %1933, i64* %1932, align 8
  %1934 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -6, i32 0
  %1935 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -6, i32 0
  %1936 = load i64, i64* %1934, align 8
  store i64 %1936, i64* %1935, align 8
  %1937 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -7, i32 0
  %1938 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -7, i32 0
  %1939 = load i64, i64* %1937, align 8
  store i64 %1939, i64* %1938, align 8
  %1940 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1918, i64 -8
  %1941 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1940, i64 0, i32 0
  %1942 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -8, i32 0
  %1943 = load i64, i64* %1941, align 8
  store i64 %1943, i64* %1942, align 8
  %1944 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1917, i64 -8
  %1945 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1940, %1790
  br i1 %1945, label %1946, label %1916, !llvm.loop !180

1946:                                             ; preds = %1911, %1916, %1888, %1780
  %1947 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1783, %1780 ], [ %1817, %1888 ], [ %1912, %1911 ], [ %1944, %1916 ]
  %1948 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1947 to i64
  store i64 %1948, i64* %32, align 8
  store i64 %1788, i64* %30, align 8
  store i64 %1785, i64* %1753, align 8
  br label %1949

1949:                                             ; preds = %1467, %1946, %1739, %1718, %1511, %1202, %995, %1453, %1721
  %1950 = phi i32 [ %1459, %1453 ], [ %27, %1721 ], [ %27, %995 ], [ %27, %1202 ], [ %27, %1511 ], [ %27, %1718 ], [ %27, %1739 ], [ %27, %1946 ], [ %27, %1467 ]
  %1951 = load i64, i64* %30, align 8
  %1952 = load i64, i64* %32, align 8
  %1953 = sub i64 %1951, %1952
  %1954 = ashr exact i64 %1953, 3
  %1955 = icmp eq i64 %1953, 0
  %1956 = inttoptr i64 %1952 to %"class.v8::internal::compiler::InstructionOperand"*
  %1957 = select i1 %1955, %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"* %1956
  %1958 = load i64, i64* %49, align 8
  %1959 = load i64, i64* %51, align 8
  %1960 = sub i64 %1958, %1959
  %1961 = ashr exact i64 %1960, 3
  %1962 = icmp eq i64 %1960, 0
  %1963 = inttoptr i64 %1959 to %"class.v8::internal::compiler::InstructionOperand"*
  %1964 = select i1 %1962, %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"* %1963
  %1965 = load i64, i64* %288, align 8
  %1966 = load i64, i64* %290, align 8
  %1967 = sub i64 %1965, %1966
  %1968 = icmp eq i64 %1967, 0
  br i1 %1968, label %1969, label %1971

1969:                                             ; preds = %1949
  %1970 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1950, i64 %1961, %"class.v8::internal::compiler::InstructionOperand"* %1964, i64 %1954, %"class.v8::internal::compiler::InstructionOperand"* %1957, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  br label %1975

1971:                                             ; preds = %1949
  %1972 = inttoptr i64 %1966 to %"class.v8::internal::compiler::InstructionOperand"*
  %1973 = ashr exact i64 %1967, 3
  %1974 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %1950, i64 %1961, %"class.v8::internal::compiler::InstructionOperand"* %1964, i64 %1954, %"class.v8::internal::compiler::InstructionOperand"* %1957, i64 %1973, %"class.v8::internal::compiler::InstructionOperand"* %1972)
  br label %1975

1975:                                             ; preds = %1969, %1971
  %1976 = phi %"class.v8::internal::compiler::Instruction"* [ %1974, %1971 ], [ %1970, %1969 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  ret %"class.v8::internal::compiler::Instruction"* %1976
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector25AppendDeoptimizeArgumentsEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceENS1_10FrameStateE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::ZoneVector.1240"*, i8 zeroext, i8 zeroext, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16), %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::compiler::Constant", align 8
  %8 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %9 = alloca %"class.v8::internal::compiler::StateObjectDeduplicator", align 8
  %10 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %8, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = tail call fastcc %"class.v8::internal::compiler::FrameStateDescriptor"* @_ZN2v88internal8compiler12_GLOBAL__N_131GetFrameStateDescriptorInternalEPNS0_4ZoneENS1_10FrameStateE(%"class.v8::internal::Zone"* %15, %"class.v8::internal::compiler::Node"* %5) #12
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 30
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %16, i64 0, i32 6
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %18, align 8
  %22 = icmp ult i64 %21, %20
  %23 = select i1 %22, i64 %20, i64 %21
  store i64 %23, i64* %18, align 8
  %24 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %25 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence22AddDeoptimizationEntryEPNS1_20FrameStateDescriptorENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceE(%"class.v8::internal::compiler::InstructionSequence"* %24, %"class.v8::internal::compiler::FrameStateDescriptor"* %16, i8 zeroext %2, i8 zeroext %3, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16) %4) #12
  %26 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %27 = bitcast %"class.v8::internal::compiler::Constant"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %7, i32 %25) #12
  %28 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %26, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  %29 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %1, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %31, align 8
  %33 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %30, %32
  %34 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %32 to i64
  br i1 %33, label %35, label %40

35:                                               ; preds = %6
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 0, i32 0
  store i64 %28, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 1
  %38 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %37 to i64
  %39 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %29 to i64*
  store i64 %38, i64* %39, align 8
  br label %248

40:                                               ; preds = %6
  %41 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %30 to i64
  %42 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %29 to i64*
  %43 = bitcast %"class.v8::internal::ZoneVector.1240"* %1 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %41, %44
  %46 = ashr exact i64 %45, 3
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 268435455
  br i1 %48, label %49, label %51

49:                                               ; preds = %40
  %50 = bitcast %"class.v8::internal::ZoneVector.1240"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #13
  unreachable

51:                                               ; preds = %40
  %52 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %31 to i64*
  %53 = sub i64 %34, %44
  %54 = ashr exact i64 %53, 3
  %55 = icmp ult i64 %54, 134217727
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = ashr exact i64 %53, 2
  %58 = icmp ult i64 %57, %47
  %59 = select i1 %58, i64 %47, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %79, label %61

61:                                               ; preds = %56, %51
  %62 = phi i64 [ %59, %56 ], [ 268435455, %51 ]
  %63 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %64 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %63, align 8
  %65 = shl i64 %62, 3
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 3
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %69, %67
  %71 = icmp ugt i64 %65, %70
  br i1 %71, label %72, label %74, !prof !2

72:                                               ; preds = %61
  %73 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %64, i64 %65) #12
  br label %76

74:                                               ; preds = %61
  %75 = add i64 %67, %65
  store i64 %75, i64* %66, align 8
  br label %76

76:                                               ; preds = %74, %72
  %77 = phi i64 [ %73, %72 ], [ %67, %74 ]
  %78 = inttoptr i64 %77 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %79

79:                                               ; preds = %76, %56
  %80 = phi i64 [ %62, %76 ], [ 0, %56 ]
  %81 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %78, %76 ], [ null, %56 ]
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %81, i64 %46
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %81, i64 %80
  %84 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 0, i32 0
  store i64 %28, i64* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 1
  %87 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %86 to i64
  %88 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %1, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %88, align 8
  %90 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %89 to i64
  %91 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %29, align 8
  %92 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %91, %89
  br i1 %92, label %245, label %93

93:                                               ; preds = %79
  %94 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 -1, i32 0
  %95 = ptrtoint i64* %94 to i64
  %96 = sub i64 %95, %90
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = icmp ult i64 %98, 4
  br i1 %99, label %189, label %100

100:                                              ; preds = %93
  %101 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 -1, i32 0
  %102 = ptrtoint i64* %101 to i64
  %103 = sub i64 %102, %90
  %104 = lshr i64 %103, 3
  %105 = xor i64 %104, -1
  %106 = add nsw i64 %46, %105
  %107 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %81, i64 %106
  %108 = xor i64 %104, -1
  %109 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 %108
  %110 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %107, %91
  %111 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %109, %82
  %112 = and i1 %110, %111
  br i1 %112, label %189, label %113

113:                                              ; preds = %100
  %114 = and i64 %98, 4611686018427387900
  %115 = sub nsw i64 0, %114
  %116 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 %115
  %117 = sub nsw i64 0, %114
  %118 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 %117
  %119 = add nsw i64 %114, -4
  %120 = lshr exact i64 %119, 2
  %121 = add nuw nsw i64 %120, 1
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %119, 0
  br i1 %123, label %168, label %124

124:                                              ; preds = %113
  %125 = sub nuw nsw i64 %121, %122
  %126 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 -1
  %127 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 -1
  br label %128

128:                                              ; preds = %128, %124
  %129 = phi i64 [ 0, %124 ], [ %163, %128 ]
  %130 = phi i64 [ %125, %124 ], [ %164, %128 ]
  %131 = sub i64 0, %129
  %132 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 %131
  %133 = sub i64 0, %129
  %134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %126, i64 %133
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %134, i64 0, i32 0
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %132, i64 -1, i32 0
  %137 = getelementptr inbounds i64, i64* %135, i64 -1
  %138 = bitcast i64* %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 8, !alias.scope !181
  %140 = getelementptr inbounds i64, i64* %135, i64 -3
  %141 = bitcast i64* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !181
  %143 = getelementptr inbounds i64, i64* %136, i64 -1
  %144 = bitcast i64* %143 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %144, align 8, !alias.scope !184, !noalias !181
  %145 = getelementptr inbounds i64, i64* %136, i64 -3
  %146 = bitcast i64* %145 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !184, !noalias !181
  %147 = sub nuw nsw i64 -4, %129
  %148 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 %147
  %149 = sub nuw nsw i64 -4, %129
  %150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %127, i64 %149
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %150, i64 0, i32 0
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 -1, i32 0
  %153 = getelementptr inbounds i64, i64* %151, i64 -1
  %154 = bitcast i64* %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !181
  %156 = getelementptr inbounds i64, i64* %151, i64 -3
  %157 = bitcast i64* %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !181
  %159 = getelementptr inbounds i64, i64* %152, i64 -1
  %160 = bitcast i64* %159 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %160, align 8, !alias.scope !184, !noalias !181
  %161 = getelementptr inbounds i64, i64* %152, i64 -3
  %162 = bitcast i64* %161 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %162, align 8, !alias.scope !184, !noalias !181
  %163 = add i64 %129, 8
  %164 = add i64 %130, -2
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %128, !llvm.loop !186

166:                                              ; preds = %128
  %167 = sub nuw nsw i64 -8, %129
  br label %168

168:                                              ; preds = %166, %113
  %169 = phi i64 [ 0, %113 ], [ %167, %166 ]
  %170 = icmp eq i64 %122, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %168
  %172 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 %169
  %173 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %91, i64 -1
  %174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %173, i64 %169
  %175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %174, i64 0, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %172, i64 -1, i32 0
  %177 = getelementptr inbounds i64, i64* %175, i64 -1
  %178 = bitcast i64* %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !181
  %180 = getelementptr inbounds i64, i64* %175, i64 -3
  %181 = bitcast i64* %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8, !alias.scope !181
  %183 = getelementptr inbounds i64, i64* %176, i64 -1
  %184 = bitcast i64* %183 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %184, align 8, !alias.scope !184, !noalias !181
  %185 = getelementptr inbounds i64, i64* %176, i64 -3
  %186 = bitcast i64* %185 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %186, align 8, !alias.scope !184, !noalias !181
  br label %187

187:                                              ; preds = %168, %171
  %188 = icmp eq i64 %98, %114
  br i1 %188, label %245, label %189

189:                                              ; preds = %187, %100, %93
  %190 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %82, %100 ], [ %82, %93 ], [ %116, %187 ]
  %191 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %91, %100 ], [ %91, %93 ], [ %118, %187 ]
  %192 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %191, i64 -1, i32 0
  %193 = ptrtoint i64* %192 to i64
  %194 = sub i64 %193, %90
  %195 = lshr i64 %194, 3
  %196 = add nuw nsw i64 %195, 1
  %197 = and i64 %196, 7
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %210, label %199

199:                                              ; preds = %189, %199
  %200 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %207, %199 ], [ %190, %189 ]
  %201 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %203, %199 ], [ %191, %189 ]
  %202 = phi i64 [ %208, %199 ], [ %197, %189 ]
  %203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %201, i64 -1
  %204 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %203, i64 0, i32 0
  %205 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %200, i64 -1, i32 0
  %206 = load i64, i64* %204, align 8
  store i64 %206, i64* %205, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %200, i64 -1
  %208 = add i64 %202, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %199, !llvm.loop !187

210:                                              ; preds = %199, %189
  %211 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %189 ], [ %207, %199 ]
  %212 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %190, %189 ], [ %207, %199 ]
  %213 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %191, %189 ], [ %203, %199 ]
  %214 = icmp ult i64 %194, 56
  br i1 %214, label %245, label %215

215:                                              ; preds = %210, %215
  %216 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %243, %215 ], [ %212, %210 ]
  %217 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %239, %215 ], [ %213, %210 ]
  %218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -1, i32 0
  %219 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -1, i32 0
  %220 = load i64, i64* %218, align 8
  store i64 %220, i64* %219, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -2, i32 0
  %222 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -2, i32 0
  %223 = load i64, i64* %221, align 8
  store i64 %223, i64* %222, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -3, i32 0
  %225 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -3, i32 0
  %226 = load i64, i64* %224, align 8
  store i64 %226, i64* %225, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -4, i32 0
  %228 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -4, i32 0
  %229 = load i64, i64* %227, align 8
  store i64 %229, i64* %228, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -5, i32 0
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -5, i32 0
  %232 = load i64, i64* %230, align 8
  store i64 %232, i64* %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -6, i32 0
  %234 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -6, i32 0
  %235 = load i64, i64* %233, align 8
  store i64 %235, i64* %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -7, i32 0
  %237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -7, i32 0
  %238 = load i64, i64* %236, align 8
  store i64 %238, i64* %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %217, i64 -8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %239, i64 0, i32 0
  %241 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -8, i32 0
  %242 = load i64, i64* %240, align 8
  store i64 %242, i64* %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -8
  %244 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %239, %89
  br i1 %244, label %245, label %215, !llvm.loop !188

245:                                              ; preds = %210, %215, %187, %79
  %246 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %82, %79 ], [ %116, %187 ], [ %211, %210 ], [ %243, %215 ]
  %247 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %246 to i64
  store i64 %247, i64* %43, align 8
  store i64 %87, i64* %42, align 8
  store i64 %84, i64* %52, align 8
  br label %248

248:                                              ; preds = %35, %245
  %249 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %249) #12
  %250 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %250, i64 0, i32 1
  %252 = bitcast %"class.v8::internal::Zone"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %255 = bitcast %"struct.std::__1::__compressed_pair_elem.1323"* %254 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 0, i64 24, i1 false) #12
  store i64 %253, i64* %255, align 8
  %256 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %251, align 8
  %257 = call i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_20FrameStateDescriptorENS1_10FrameStateEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::FrameStateDescriptor"* %16, %"class.v8::internal::compiler::Node"* %5, %"class.v8::internal::compiler::OperandGenerator"* nonnull %8, %"class.v8::internal::compiler::StateObjectDeduplicator"* nonnull %9, %"class.v8::internal::ZoneVector.1240"* %1, i32 0, %"class.v8::internal::Zone"* %256)
  %258 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %259 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %258, align 8
  %260 = icmp eq %"class.v8::internal::compiler::Node"** %259, null
  br i1 %260, label %265, label %261

261:                                              ; preds = %248
  %262 = ptrtoint %"class.v8::internal::compiler::Node"** %259 to i64
  %263 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %264 = bitcast %"class.v8::internal::compiler::Node"*** %263 to i64*
  store i64 %262, i64* %264, align 8
  br label %265

265:                                              ; preds = %248, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %249) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector29AddOutputToSelectContinuationEPNS1_16OperandGeneratorEiPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::OperandGenerator"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::FrameStateDescriptor"* @_ZN2v88internal8compiler19InstructionSelector23GetFrameStateDescriptorENS1_10FrameStateE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 1
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = tail call fastcc %"class.v8::internal::compiler::FrameStateDescriptor"* @_ZN2v88internal8compiler12_GLOBAL__N_131GetFrameStateDescriptorInternalEPNS0_4ZoneENS1_10FrameStateE(%"class.v8::internal::Zone"* %6, %"class.v8::internal::compiler::Node"* %1)
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 30
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %7, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = icmp ult i64 %12, %11
  %14 = select i1 %13, i64 %11, i64 %12
  store i64 %14, i64* %9, align 8
  ret %"class.v8::internal::compiler::FrameStateDescriptor"* %7
}

declare i32 @_ZN2v88internal8compiler19InstructionSequence22AddDeoptimizationEntryEPNS1_20FrameStateDescriptorENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceE(%"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::FrameStateDescriptor"*, i8 zeroext, i8 zeroext, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector20InitializeCallBufferEPNS1_4NodeEPNS1_10CallBufferENS_4base5FlagsINS2_14CallBufferFlagEiEEbi(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::CallBuffer"*, i32, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %8 = alloca %"class.v8::internal::compiler::Constant", align 8
  %9 = alloca %"class.v8::internal::compiler::Constant", align 8
  %10 = alloca %"class.v8::internal::compiler::Constant", align 8
  %11 = alloca %"class.v8::internal::compiler::Constant", align 8
  %12 = alloca %"class.v8::internal::compiler::Constant", align 8
  %13 = alloca %"class.v8::internal::compiler::Constant", align 8
  %14 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %15 = alloca %"struct.v8::internal::compiler::FeedbackSource", align 8
  %16 = alloca %"class.v8::internal::compiler::StateObjectDeduplicator", align 8
  %17 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %14, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %20, i64 0, i32 4
  %22 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %145 [
    i64 0, label %655
    i64 1, label %25
  ]

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %22, i64 0, i32 2
  %27 = bitcast %"class.v8::internal::compiler::LinkageLocation"** %26 to i64**
  %28 = load i64*, i64** %27, align 8
  %29 = load i64, i64* %28, align 4
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %32 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %31, align 8
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %33, align 8
  %35 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %32, %34
  %36 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %34 to i64
  br i1 %35, label %44, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %32, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %38, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %32, i64 0, i32 1
  %40 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %39 to i64*
  store i64 %29, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %32, i64 1
  %42 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %41 to i64
  %43 = bitcast %"struct.v8::internal::compiler::PushParameter"** %31 to i64*
  store i64 %42, i64* %43, align 8
  br label %271

44:                                               ; preds = %25
  %45 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %32 to i64
  %46 = bitcast %"struct.v8::internal::compiler::PushParameter"** %31 to i64*
  %47 = bitcast %"class.std::__1::vector.1545"* %30 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  %50 = ashr exact i64 %49, 4
  %51 = add nsw i64 %50, 1
  %52 = icmp ugt i64 %51, 134217727
  br i1 %52, label %53, label %55

53:                                               ; preds = %44
  %54 = bitcast %"class.std::__1::vector.1545"* %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #13
  unreachable

55:                                               ; preds = %44
  %56 = bitcast %"struct.v8::internal::compiler::PushParameter"** %33 to i64*
  %57 = sub i64 %36, %48
  %58 = ashr exact i64 %57, 4
  %59 = icmp ult i64 %58, 67108863
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = ashr exact i64 %57, 3
  %62 = icmp ult i64 %61, %51
  %63 = select i1 %62, i64 %51, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %83, label %65

65:                                               ; preds = %60, %55
  %66 = phi i64 [ %63, %60 ], [ 134217727, %55 ]
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %68 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %67, align 8
  %69 = shl i64 %66, 4
  %70 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %68, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %68, i64 0, i32 3
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %73, %71
  %75 = icmp ugt i64 %69, %74
  br i1 %75, label %76, label %78, !prof !2

76:                                               ; preds = %65
  %77 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %68, i64 %69) #12
  br label %80

78:                                               ; preds = %65
  %79 = add i64 %71, %69
  store i64 %79, i64* %70, align 8
  br label %80

80:                                               ; preds = %78, %76
  %81 = phi i64 [ %77, %76 ], [ %71, %78 ]
  %82 = inttoptr i64 %81 to %"struct.v8::internal::compiler::PushParameter"*
  br label %83

83:                                               ; preds = %80, %60
  %84 = phi i64 [ %66, %80 ], [ 0, %60 ]
  %85 = phi %"struct.v8::internal::compiler::PushParameter"* [ %82, %80 ], [ null, %60 ]
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %85, i64 %50
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %85, i64 %84
  %88 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %87 to i64
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %86, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %89, align 8
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %85, i64 %50, i32 1
  %91 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %90 to i64*
  store i64 %29, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %86, i64 1
  %93 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %92 to i64
  %94 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %30, i64 0, i32 0, i32 0
  %95 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %94, align 8
  %96 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %31, align 8
  %97 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %96, %95
  br i1 %97, label %142, label %98

98:                                               ; preds = %83
  %99 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %95 to i64
  %100 = getelementptr %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %96, i64 -1, i32 0
  %101 = ptrtoint %"class.v8::internal::compiler::Node"** %100 to i64
  %102 = sub i64 %101, %99
  %103 = lshr i64 %102, 4
  %104 = add nuw nsw i64 %103, 1
  %105 = and i64 %104, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %98, %107
  %108 = phi %"struct.v8::internal::compiler::PushParameter"* [ %111, %107 ], [ %86, %98 ]
  %109 = phi %"struct.v8::internal::compiler::PushParameter"* [ %112, %107 ], [ %96, %98 ]
  %110 = phi i64 [ %115, %107 ], [ %105, %98 ]
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %108, i64 -1
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %109, i64 -1
  %113 = bitcast %"struct.v8::internal::compiler::PushParameter"* %111 to i8*
  %114 = bitcast %"struct.v8::internal::compiler::PushParameter"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #12
  %115 = add i64 %110, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %107, !llvm.loop !189

117:                                              ; preds = %107, %98
  %118 = phi %"struct.v8::internal::compiler::PushParameter"* [ undef, %98 ], [ %111, %107 ]
  %119 = phi %"struct.v8::internal::compiler::PushParameter"* [ %86, %98 ], [ %111, %107 ]
  %120 = phi %"struct.v8::internal::compiler::PushParameter"* [ %96, %98 ], [ %112, %107 ]
  %121 = icmp ult i64 %102, 48
  br i1 %121, label %142, label %122

122:                                              ; preds = %117, %122
  %123 = phi %"struct.v8::internal::compiler::PushParameter"* [ %137, %122 ], [ %119, %117 ]
  %124 = phi %"struct.v8::internal::compiler::PushParameter"* [ %138, %122 ], [ %120, %117 ]
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %123, i64 -1
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %124, i64 -1
  %127 = bitcast %"struct.v8::internal::compiler::PushParameter"* %125 to i8*
  %128 = bitcast %"struct.v8::internal::compiler::PushParameter"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #12
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %123, i64 -2
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %124, i64 -2
  %131 = bitcast %"struct.v8::internal::compiler::PushParameter"* %129 to i8*
  %132 = bitcast %"struct.v8::internal::compiler::PushParameter"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #12
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %123, i64 -3
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %124, i64 -3
  %135 = bitcast %"struct.v8::internal::compiler::PushParameter"* %133 to i8*
  %136 = bitcast %"struct.v8::internal::compiler::PushParameter"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #12
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %123, i64 -4
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %124, i64 -4
  %139 = bitcast %"struct.v8::internal::compiler::PushParameter"* %137 to i8*
  %140 = bitcast %"struct.v8::internal::compiler::PushParameter"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #12
  %141 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %138, %95
  br i1 %141, label %142, label %122

142:                                              ; preds = %117, %122, %83
  %143 = phi %"struct.v8::internal::compiler::PushParameter"* [ %86, %83 ], [ %118, %117 ], [ %137, %122 ]
  %144 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %143 to i64
  store i64 %144, i64* %47, align 8
  store i64 %93, i64* %46, align 8
  store i64 %88, i64* %56, align 8
  br label %271

145:                                              ; preds = %6
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %148 = bitcast %"struct.v8::internal::compiler::PushParameter"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.std::__1::vector.1545"* %146 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = ashr exact i64 %152, 4
  %154 = icmp ugt i64 %24, %153
  %155 = inttoptr i64 %151 to %"struct.v8::internal::compiler::PushParameter"*
  br i1 %154, label %156, label %158

156:                                              ; preds = %145
  %157 = sub i64 %24, %153
  tail call void @_ZNSt3__16vectorIN2v88internal8compiler13PushParameterENS2_13ZoneAllocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1545"* %146, i64 %157) #12
  br label %162

158:                                              ; preds = %145
  %159 = icmp ult i64 %24, %153
  br i1 %159, label %160, label %162

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %155, i64 %24
  store %"struct.v8::internal::compiler::PushParameter"* %161, %"struct.v8::internal::compiler::PushParameter"** %147, align 8
  br label %162

162:                                              ; preds = %160, %158, %156
  %163 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %146, i64 0, i32 0, i32 0
  %164 = and i64 %24, 1
  %165 = icmp eq i64 %24, 1
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  %167 = sub i64 %24, %164
  br label %190

168:                                              ; preds = %190, %162
  %169 = phi i64 [ 0, %162 ], [ %218, %190 ]
  %170 = icmp eq i64 %164, 0
  br i1 %170, label %184, label %171

171:                                              ; preds = %168
  %172 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %172, i64 0, i32 4
  %174 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %174, i64 0, i32 2
  %176 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %176, i64 %169
  %178 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %177 to i64*
  %179 = load i64, i64* %178, align 4
  %180 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %163, align 8
  %181 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %180, i64 %169, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %181, align 8
  %182 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %180, i64 %169, i32 1
  %183 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %182 to i64*
  store i64 %179, i64* %183, align 8
  br label %184

184:                                              ; preds = %168, %171
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %186 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %185, align 8
  %187 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %186, null
  br i1 %187, label %221, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %146, i64 0, i32 0, i32 0
  br label %232

190:                                              ; preds = %190, %166
  %191 = phi i64 [ 0, %166 ], [ %218, %190 ]
  %192 = phi i64 [ %167, %166 ], [ %219, %190 ]
  %193 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %194 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %193, i64 0, i32 4
  %195 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %195, i64 0, i32 2
  %197 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %197, i64 %191
  %199 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %198 to i64*
  %200 = load i64, i64* %199, align 4
  %201 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %163, align 8
  %202 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %201, i64 %191, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %202, align 8
  %203 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %201, i64 %191, i32 1
  %204 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %203 to i64*
  store i64 %200, i64* %204, align 8
  %205 = or i64 %191, 1
  %206 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %206, i64 0, i32 4
  %208 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %207, align 8
  %209 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %208, i64 0, i32 2
  %210 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %210, i64 %205
  %212 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %211 to i64*
  %213 = load i64, i64* %212, align 4
  %214 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %163, align 8
  %215 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %214, i64 %205, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %215, align 8
  %216 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %214, i64 %205, i32 1
  %217 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %216 to i64*
  store i64 %213, i64* %217, align 8
  %218 = add nuw i64 %191, 2
  %219 = add i64 %192, -2
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %168, label %190

221:                                              ; preds = %269, %184
  %222 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 24
  %223 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %222, align 8
  %224 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %224, i64 0, i32 6
  %226 = load i64, i64* %225, align 8
  %227 = trunc i64 %226 to i32
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %223, i64 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp slt i32 %229, %227
  %231 = select i1 %230, i32 %227, i32 %229
  store i32 %231, i32* %228, align 8
  br label %271

232:                                              ; preds = %269, %188
  %233 = phi %"struct.v8::internal::compiler::Node::Use"* [ %186, %188 ], [ %235, %269 ]
  %234 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %233, i64 0, i32 0
  %235 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %234, align 8
  %236 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %233, i64 0, i32 2
  %237 = load i32, i32* %236, align 8
  %238 = lshr i32 %237, 1
  %239 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %233, i64 1
  %240 = zext i32 %238 to i64
  %241 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %239, i64 %240
  %242 = and i32 %237, 1
  %243 = icmp eq i32 %242, 0
  %244 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %241 to i64
  %245 = select i1 %243, i64 16, i64 32
  %246 = add i64 %245, %244
  %247 = inttoptr i64 %246 to %"class.v8::internal::compiler::Node"**
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 %240
  %249 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %233, %"class.v8::internal::compiler::Node"** %248) #12
  br i1 %249, label %250, label %269

250:                                              ; preds = %232
  %251 = load i32, i32* %236, align 8
  %252 = lshr i32 %251, 1
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %239, i64 %253
  %255 = and i32 %251, 1
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %250
  %258 = bitcast %"struct.v8::internal::compiler::Node::Use"* %254 to %"class.v8::internal::compiler::Node"*
  br label %262

259:                                              ; preds = %250
  %260 = bitcast %"struct.v8::internal::compiler::Node::Use"* %254 to %"class.v8::internal::compiler::Node"**
  %261 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %260, align 8
  br label %262

262:                                              ; preds = %257, %259
  %263 = phi %"class.v8::internal::compiler::Node"* [ %258, %257 ], [ %261, %259 ]
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %263, i64 0, i32 0
  %265 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %264, align 8
  %266 = tail call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %265) #12
  %267 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %189, align 8
  %268 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %267, i64 %266, i32 0
  store %"class.v8::internal::compiler::Node"* %263, %"class.v8::internal::compiler::Node"** %268, align 8
  br label %269

269:                                              ; preds = %232, %262
  %270 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %235, null
  br i1 %270, label %221, label %232

271:                                              ; preds = %142, %37, %221
  %272 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 1
  %273 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %272, align 8
  %274 = icmp eq %"class.v8::internal::compiler::FrameStateDescriptor"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %273, i64 0, i32 2, i32 0
  %277 = load i64, i64* %276, align 8
  %278 = icmp ne i64 %277, -1
  %279 = zext i1 %278 to i64
  br label %280

280:                                              ; preds = %271, %275
  %281 = phi i64 [ %279, %275 ], [ 0, %271 ]
  %282 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0
  %283 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %284 = bitcast %"struct.v8::internal::compiler::PushParameter"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector.1545"* %282 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 %285, %287
  br i1 %288, label %655, label %289

289:                                              ; preds = %280
  %290 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %282, i64 0, i32 0, i32 0
  %291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %292 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 3, i32 0
  %293 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 3, i32 0, i32 0, i32 1
  %294 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %295 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %293 to i64*
  %296 = bitcast %"class.std::__1::vector.1241"* %292 to i64*
  %297 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %294 to i64*
  %298 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %299 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %292, i64 0, i32 0, i32 0
  br label %300

300:                                              ; preds = %289, %648
  %301 = phi i64 [ %287, %289 ], [ %651, %648 ]
  %302 = phi i64 [ 0, %289 ], [ %649, %648 ]
  %303 = inttoptr i64 %301 to %"struct.v8::internal::compiler::PushParameter"*
  %304 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %303, i64 %302, i32 0
  %305 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %304, align 8
  %306 = icmp eq %"class.v8::internal::compiler::Node"* %305, null
  %307 = icmp ult i64 %302, %281
  %308 = xor i1 %306, true
  %309 = or i1 %307, %308
  br i1 %309, label %310, label %648

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %303, i64 %302, i32 1
  %312 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = lshr i64 %313, 32
  %315 = trunc i64 %314 to i8
  %316 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  br i1 %306, label %317, label %357

317:                                              ; preds = %310
  %318 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %316, i64 0, i32 2
  %319 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %318, align 8
  %320 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %319) #12
  %321 = trunc i64 %313 to i32
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp ugt i32 %321, -3
  %325 = and i1 %324, %323
  br i1 %325, label %326, label %330

326:                                              ; preds = %317
  %327 = zext i32 %320 to i64
  %328 = shl nuw nsw i64 %327, 3
  %329 = or i64 %328, 927712935937
  br label %425

330:                                              ; preds = %317
  %331 = and i32 %321, -2147483647
  switch i32 %331, label %346 [
    i32 -2147483647, label %332
    i32 1, label %339
  ]

332:                                              ; preds = %330
  %333 = lshr i64 %313, 1
  %334 = zext i32 %320 to i64
  %335 = shl nuw nsw i64 %334, 3
  %336 = shl i64 %333, 36
  %337 = or i64 %336, %335
  %338 = or i64 %337, 1
  br label %425

339:                                              ; preds = %330
  %340 = lshr i64 %313, 1
  %341 = zext i32 %320 to i64
  %342 = shl nuw nsw i64 %341, 3
  %343 = shl i64 %340, 36
  %344 = or i64 %343, %342
  %345 = or i64 %344, 1
  br label %425

346:                                              ; preds = %330
  %347 = icmp ugt i8 %315, 11
  %348 = lshr i64 %313, 1
  %349 = zext i32 %320 to i64
  %350 = shl nuw nsw i64 %349, 3
  %351 = shl i64 %348, 41
  %352 = or i64 %350, %351
  br i1 %347, label %353, label %355

353:                                              ; preds = %346
  %354 = or i64 %352, 858993459201
  br label %425

355:                                              ; preds = %346
  %356 = or i64 %352, 790273982465
  br label %425

357:                                              ; preds = %310
  %358 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %305, i64 0, i32 3
  %359 = load i32, i32* %358, align 4
  %360 = and i32 %359, 16777215
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %316, i64 0, i32 15, i32 0, i32 0, i32 0
  %363 = load i32*, i32** %362, align 8
  %364 = getelementptr inbounds i32, i32* %363, i64 %361
  %365 = load i32, i32* %364, align 4
  %366 = icmp eq i32 %365, -1
  br i1 %366, label %367, label %373

367:                                              ; preds = %357
  %368 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %316, i64 0, i32 2
  %369 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %368, align 8
  %370 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %369) #12
  %371 = load i32*, i32** %362, align 8
  %372 = getelementptr inbounds i32, i32* %371, i64 %361
  store i32 %370, i32* %372, align 4
  br label %373

373:                                              ; preds = %367, %357
  %374 = phi i32 [ %370, %367 ], [ %365, %357 ]
  %375 = trunc i64 %313 to i32
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp ugt i32 %375, -3
  %379 = and i1 %378, %377
  br i1 %379, label %380, label %384

380:                                              ; preds = %373
  %381 = zext i32 %374 to i64
  %382 = shl nuw nsw i64 %381, 3
  %383 = or i64 %382, 927712935937
  br label %411

384:                                              ; preds = %373
  %385 = and i32 %375, -2147483647
  switch i32 %385, label %400 [
    i32 -2147483647, label %386
    i32 1, label %393
  ]

386:                                              ; preds = %384
  %387 = lshr i64 %313, 1
  %388 = zext i32 %374 to i64
  %389 = shl nuw nsw i64 %388, 3
  %390 = shl i64 %387, 36
  %391 = or i64 %390, %389
  %392 = or i64 %391, 1
  br label %411

393:                                              ; preds = %384
  %394 = lshr i64 %313, 1
  %395 = zext i32 %374 to i64
  %396 = shl nuw nsw i64 %395, 3
  %397 = shl i64 %394, 36
  %398 = or i64 %397, %396
  %399 = or i64 %398, 1
  br label %411

400:                                              ; preds = %384
  %401 = icmp ugt i8 %315, 11
  %402 = lshr i64 %313, 1
  %403 = zext i32 %374 to i64
  %404 = shl nuw nsw i64 %403, 3
  %405 = shl i64 %402, 41
  %406 = or i64 %404, %405
  br i1 %401, label %407, label %409

407:                                              ; preds = %400
  %408 = or i64 %406, 858993459201
  br label %411

409:                                              ; preds = %400
  %410 = or i64 %406, 790273982465
  br label %411

411:                                              ; preds = %380, %386, %393, %407, %409
  %412 = phi i64 [ %383, %380 ], [ %392, %386 ], [ %399, %393 ], [ %408, %407 ], [ %410, %409 ]
  %413 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %414 = load i32, i32* %358, align 4
  %415 = and i32 %414, 16777215
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %413, i64 0, i32 12, i32 0, i32 0
  %418 = load i64*, i64** %417, align 8
  %419 = lshr i64 %416, 6
  %420 = getelementptr inbounds i64, i64* %418, i64 %419
  %421 = and i64 %416, 63
  %422 = shl i64 1, %421
  %423 = load i64, i64* %420, align 8
  %424 = or i64 %422, %423
  store i64 %424, i64* %420, align 8
  br label %425

425:                                              ; preds = %355, %353, %339, %332, %326, %411
  %426 = phi i64 [ %412, %411 ], [ %329, %326 ], [ %338, %332 ], [ %345, %339 ], [ %354, %353 ], [ %356, %355 ]
  %427 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %291, align 8
  %428 = lshr i64 %426, 3
  %429 = trunc i64 %428 to i32
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %427, i8 zeroext %315, i32 %429) #12
  %430 = and i64 %426, 34359738368
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %648, label %432

432:                                              ; preds = %425
  %433 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %293, align 8
  %434 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %294, align 8
  %435 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %433, %434
  %436 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %434 to i64
  br i1 %435, label %441, label %437

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %433, i64 0, i32 0
  store i64 %426, i64* %438, align 8
  %439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %433, i64 1
  %440 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %439 to i64
  store i64 %440, i64* %295, align 8
  br label %645

441:                                              ; preds = %432
  %442 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %433 to i64
  %443 = load i64, i64* %296, align 8
  %444 = sub i64 %442, %443
  %445 = ashr exact i64 %444, 3
  %446 = add nsw i64 %445, 1
  %447 = icmp ugt i64 %446, 268435455
  br i1 %447, label %448, label %450

448:                                              ; preds = %441
  %449 = bitcast %"class.std::__1::vector.1241"* %292 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %449) #13
  unreachable

450:                                              ; preds = %441
  %451 = sub i64 %436, %443
  %452 = ashr exact i64 %451, 3
  %453 = icmp ult i64 %452, 134217727
  br i1 %453, label %454, label %459

454:                                              ; preds = %450
  %455 = ashr exact i64 %451, 2
  %456 = icmp ult i64 %455, %446
  %457 = select i1 %456, i64 %446, i64 %455
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %476, label %459

459:                                              ; preds = %454, %450
  %460 = phi i64 [ %457, %454 ], [ 268435455, %450 ]
  %461 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %298, align 8
  %462 = shl i64 %460, 3
  %463 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %461, i64 0, i32 2
  %464 = load i64, i64* %463, align 8
  %465 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %461, i64 0, i32 3
  %466 = load i64, i64* %465, align 8
  %467 = sub i64 %466, %464
  %468 = icmp ugt i64 %462, %467
  br i1 %468, label %469, label %471, !prof !2

469:                                              ; preds = %459
  %470 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %461, i64 %462) #12
  br label %473

471:                                              ; preds = %459
  %472 = add i64 %464, %462
  store i64 %472, i64* %463, align 8
  br label %473

473:                                              ; preds = %471, %469
  %474 = phi i64 [ %470, %469 ], [ %464, %471 ]
  %475 = inttoptr i64 %474 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %476

476:                                              ; preds = %473, %454
  %477 = phi i64 [ %460, %473 ], [ 0, %454 ]
  %478 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %475, %473 ], [ null, %454 ]
  %479 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %478, i64 %445
  %480 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %478, i64 %477
  %481 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %480 to i64
  %482 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %479, i64 0, i32 0
  store i64 %426, i64* %482, align 8
  %483 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %479, i64 1
  %484 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %483 to i64
  %485 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %299, align 8
  %486 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %485 to i64
  %487 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %293, align 8
  %488 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %487, %485
  br i1 %488, label %642, label %489

489:                                              ; preds = %476
  %490 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 -1
  %491 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %490 to i64
  %492 = sub i64 %491, %486
  %493 = lshr i64 %492, 3
  %494 = add nuw nsw i64 %493, 1
  %495 = icmp ult i64 %494, 4
  br i1 %495, label %586, label %496

496:                                              ; preds = %489
  %497 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %478, i64 -1
  %498 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 -1
  %499 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %498 to i64
  %500 = sub i64 %499, %486
  %501 = lshr i64 %500, 3
  %502 = sub nsw i64 %445, %501
  %503 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %497, i64 %502
  %504 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 -1
  %505 = sub nsw i64 0, %501
  %506 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %504, i64 %505
  %507 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %503, %487
  %508 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %506, %479
  %509 = and i1 %507, %508
  br i1 %509, label %586, label %510

510:                                              ; preds = %496
  %511 = and i64 %494, 4611686018427387900
  %512 = sub nsw i64 0, %511
  %513 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %479, i64 %512
  %514 = sub nsw i64 0, %511
  %515 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 %514
  %516 = add nsw i64 %511, -4
  %517 = lshr exact i64 %516, 2
  %518 = add nuw nsw i64 %517, 1
  %519 = and i64 %518, 1
  %520 = icmp eq i64 %516, 0
  br i1 %520, label %563, label %521

521:                                              ; preds = %510
  %522 = sub nuw nsw i64 %518, %519
  %523 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 -1
  %524 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 -1
  br label %525

525:                                              ; preds = %525, %521
  %526 = phi i64 [ 0, %521 ], [ %560, %525 ]
  %527 = phi i64 [ %522, %521 ], [ %561, %525 ]
  %528 = sub i64 0, %526
  %529 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %479, i64 %528
  %530 = sub i64 0, %526
  %531 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %523, i64 %530
  %532 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %531, i64 0, i32 0
  %533 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %529, i64 -1, i32 0
  %534 = getelementptr inbounds i64, i64* %532, i64 -1
  %535 = bitcast i64* %534 to <2 x i64>*
  %536 = load <2 x i64>, <2 x i64>* %535, align 8, !alias.scope !190
  %537 = getelementptr inbounds i64, i64* %532, i64 -3
  %538 = bitcast i64* %537 to <2 x i64>*
  %539 = load <2 x i64>, <2 x i64>* %538, align 8, !alias.scope !190
  %540 = getelementptr inbounds i64, i64* %533, i64 -1
  %541 = bitcast i64* %540 to <2 x i64>*
  store <2 x i64> %536, <2 x i64>* %541, align 8, !alias.scope !193, !noalias !190
  %542 = getelementptr inbounds i64, i64* %533, i64 -3
  %543 = bitcast i64* %542 to <2 x i64>*
  store <2 x i64> %539, <2 x i64>* %543, align 8, !alias.scope !193, !noalias !190
  %544 = sub nuw nsw i64 -4, %526
  %545 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %479, i64 %544
  %546 = sub nuw nsw i64 -4, %526
  %547 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %524, i64 %546
  %548 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %547, i64 0, i32 0
  %549 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %545, i64 -1, i32 0
  %550 = getelementptr inbounds i64, i64* %548, i64 -1
  %551 = bitcast i64* %550 to <2 x i64>*
  %552 = load <2 x i64>, <2 x i64>* %551, align 8, !alias.scope !190
  %553 = getelementptr inbounds i64, i64* %548, i64 -3
  %554 = bitcast i64* %553 to <2 x i64>*
  %555 = load <2 x i64>, <2 x i64>* %554, align 8, !alias.scope !190
  %556 = getelementptr inbounds i64, i64* %549, i64 -1
  %557 = bitcast i64* %556 to <2 x i64>*
  store <2 x i64> %552, <2 x i64>* %557, align 8, !alias.scope !193, !noalias !190
  %558 = getelementptr inbounds i64, i64* %549, i64 -3
  %559 = bitcast i64* %558 to <2 x i64>*
  store <2 x i64> %555, <2 x i64>* %559, align 8, !alias.scope !193, !noalias !190
  %560 = add i64 %526, 8
  %561 = add i64 %527, -2
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %563, label %525, !llvm.loop !195

563:                                              ; preds = %525, %510
  %564 = phi i64 [ 0, %510 ], [ %560, %525 ]
  %565 = icmp eq i64 %519, 0
  br i1 %565, label %584, label %566

566:                                              ; preds = %563
  %567 = sub i64 0, %564
  %568 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %479, i64 %567
  %569 = sub i64 0, %564
  %570 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %487, i64 -1
  %571 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %570, i64 %569
  %572 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %571, i64 0, i32 0
  %573 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %568, i64 -1, i32 0
  %574 = getelementptr inbounds i64, i64* %572, i64 -1
  %575 = bitcast i64* %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !190
  %577 = getelementptr inbounds i64, i64* %572, i64 -3
  %578 = bitcast i64* %577 to <2 x i64>*
  %579 = load <2 x i64>, <2 x i64>* %578, align 8, !alias.scope !190
  %580 = getelementptr inbounds i64, i64* %573, i64 -1
  %581 = bitcast i64* %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !193, !noalias !190
  %582 = getelementptr inbounds i64, i64* %573, i64 -3
  %583 = bitcast i64* %582 to <2 x i64>*
  store <2 x i64> %579, <2 x i64>* %583, align 8, !alias.scope !193, !noalias !190
  br label %584

584:                                              ; preds = %563, %566
  %585 = icmp eq i64 %494, %511
  br i1 %585, label %642, label %586

586:                                              ; preds = %584, %496, %489
  %587 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %479, %496 ], [ %479, %489 ], [ %513, %584 ]
  %588 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %487, %496 ], [ %487, %489 ], [ %515, %584 ]
  %589 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %588, i64 -1
  %590 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %589 to i64
  %591 = sub i64 %590, %486
  %592 = lshr i64 %591, 3
  %593 = add nuw nsw i64 %592, 1
  %594 = and i64 %593, 7
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %607, label %596

596:                                              ; preds = %586, %596
  %597 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %604, %596 ], [ %587, %586 ]
  %598 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %600, %596 ], [ %588, %586 ]
  %599 = phi i64 [ %605, %596 ], [ %594, %586 ]
  %600 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %598, i64 -1
  %601 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %600, i64 0, i32 0
  %602 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %597, i64 -1, i32 0
  %603 = load i64, i64* %601, align 8
  store i64 %603, i64* %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %597, i64 -1
  %605 = add i64 %599, -1
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %607, label %596, !llvm.loop !196

607:                                              ; preds = %596, %586
  %608 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %586 ], [ %604, %596 ]
  %609 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %587, %586 ], [ %604, %596 ]
  %610 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %588, %586 ], [ %600, %596 ]
  %611 = icmp ult i64 %591, 56
  br i1 %611, label %642, label %612

612:                                              ; preds = %607, %612
  %613 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %640, %612 ], [ %609, %607 ]
  %614 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %636, %612 ], [ %610, %607 ]
  %615 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -1, i32 0
  %616 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -1, i32 0
  %617 = load i64, i64* %615, align 8
  store i64 %617, i64* %616, align 8
  %618 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -2, i32 0
  %619 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -2, i32 0
  %620 = load i64, i64* %618, align 8
  store i64 %620, i64* %619, align 8
  %621 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -3, i32 0
  %622 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -3, i32 0
  %623 = load i64, i64* %621, align 8
  store i64 %623, i64* %622, align 8
  %624 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -4, i32 0
  %625 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -4, i32 0
  %626 = load i64, i64* %624, align 8
  store i64 %626, i64* %625, align 8
  %627 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -5, i32 0
  %628 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -5, i32 0
  %629 = load i64, i64* %627, align 8
  store i64 %629, i64* %628, align 8
  %630 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -6, i32 0
  %631 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -6, i32 0
  %632 = load i64, i64* %630, align 8
  store i64 %632, i64* %631, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -7, i32 0
  %634 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -7, i32 0
  %635 = load i64, i64* %633, align 8
  store i64 %635, i64* %634, align 8
  %636 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %614, i64 -8
  %637 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %636, i64 0, i32 0
  %638 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -8, i32 0
  %639 = load i64, i64* %637, align 8
  store i64 %639, i64* %638, align 8
  %640 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %613, i64 -8
  %641 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %636, %485
  br i1 %641, label %642, label %612, !llvm.loop !197

642:                                              ; preds = %607, %612, %584, %476
  %643 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %479, %476 ], [ %513, %584 ], [ %608, %607 ], [ %640, %612 ]
  %644 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %643 to i64
  store i64 %644, i64* %296, align 8
  store i64 %484, i64* %295, align 8
  store i64 %481, i64* %297, align 8
  br label %645

645:                                              ; preds = %437, %642
  %646 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %290, align 8
  %647 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %646, i64 %302, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %647, align 8
  br label %648

648:                                              ; preds = %645, %425, %300
  %649 = add nuw i64 %302, 1
  %650 = load i64, i64* %284, align 8
  %651 = load i64, i64* %286, align 8
  %652 = sub i64 %650, %651
  %653 = ashr exact i64 %652, 4
  %654 = icmp ult i64 %649, %653
  br i1 %654, label %300, label %655

655:                                              ; preds = %648, %280, %6
  %656 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %657 = load i32, i32* %656, align 4
  %658 = and i32 %657, 251658240
  %659 = icmp eq i32 %658, 251658240
  %660 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %661 = add i64 %660, 32
  br i1 %659, label %662, label %666

662:                                              ; preds = %655
  %663 = inttoptr i64 %661 to i64*
  %664 = load i64, i64* %663, align 8
  %665 = add i64 %664, 16
  br label %666

666:                                              ; preds = %655, %662
  %667 = phi i64 [ %665, %662 ], [ %661, %655 ]
  %668 = inttoptr i64 %667 to %"class.v8::internal::compiler::Node"**
  %669 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %668, align 8
  %670 = and i32 %3, 2
  %671 = icmp ne i32 %670, 0
  %672 = and i32 %3, 8
  %673 = icmp ne i32 %672, 0
  %674 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %675 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %674, i64 0, i32 0
  %676 = load i32, i32* %675, align 8
  switch i32 %676, label %2152 [
    i32 0, label %677
    i32 2, label %982
    i32 3, label %1285
    i32 4, label %1285
    i32 5, label %1285
    i32 6, label %1589
    i32 1, label %1858
  ]

677:                                              ; preds = %666
  %678 = and i32 %3, 1
  %679 = icmp eq i32 %678, 0
  %680 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0
  br i1 %679, label %698, label %681

681:                                              ; preds = %677
  %682 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 0
  %683 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %682, align 8
  %684 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %683, i64 0, i32 2
  %685 = load i16, i16* %684, align 8
  %686 = icmp eq i16 %685, 30
  br i1 %686, label %687, label %698

687:                                              ; preds = %681
  %688 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %689 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %688, i64 0, i32 2
  %690 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %689, align 8
  %691 = bitcast %"class.v8::internal::compiler::Constant"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %691) #12
  %692 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %669) #12
  %693 = bitcast %"class.v8::internal::compiler::Constant"* %10 to i64*
  %694 = extractvalue { i64, i64 } %692, 0
  store i64 %694, i64* %693, align 8
  %695 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %10, i64 0, i32 2
  %696 = extractvalue { i64, i64 } %692, 1
  store i64 %696, i64* %695, align 8
  %697 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %690, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %691) #12
  br label %761

698:                                              ; preds = %677, %681
  %699 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %700 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 3
  %701 = load i32, i32* %700, align 4
  %702 = and i32 %701, 16777215
  %703 = zext i32 %702 to i64
  %704 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %699, i64 0, i32 15, i32 0, i32 0, i32 0
  %705 = load i32*, i32** %704, align 8
  %706 = getelementptr inbounds i32, i32* %705, i64 %703
  %707 = load i32, i32* %706, align 4
  %708 = icmp eq i32 %707, -1
  br i1 %673, label %709, label %735

709:                                              ; preds = %698
  br i1 %708, label %710, label %720

710:                                              ; preds = %709
  %711 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %699, i64 0, i32 2
  %712 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %711, align 8
  %713 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %712) #12
  %714 = load i32*, i32** %704, align 8
  %715 = getelementptr inbounds i32, i32* %714, i64 %703
  store i32 %713, i32* %715, align 4
  %716 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %717 = load i32, i32* %700, align 4
  %718 = and i32 %717, 16777215
  %719 = zext i32 %718 to i64
  br label %720

720:                                              ; preds = %709, %710
  %721 = phi i64 [ %703, %709 ], [ %719, %710 ]
  %722 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %699, %709 ], [ %716, %710 ]
  %723 = phi i32 [ %707, %709 ], [ %713, %710 ]
  %724 = zext i32 %723 to i64
  %725 = shl nuw nsw i64 %724, 3
  %726 = or i64 %725, 2989297238017
  %727 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %722, i64 0, i32 13, i32 0, i32 0
  %728 = load i64*, i64** %727, align 8
  %729 = lshr i64 %721, 6
  %730 = getelementptr inbounds i64, i64* %728, i64 %729
  %731 = and i64 %721, 63
  %732 = shl i64 1, %731
  %733 = load i64, i64* %730, align 8
  %734 = or i64 %733, %732
  store i64 %734, i64* %730, align 8
  br label %761

735:                                              ; preds = %698
  br i1 %708, label %736, label %746

736:                                              ; preds = %735
  %737 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %699, i64 0, i32 2
  %738 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %737, align 8
  %739 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %738) #12
  %740 = load i32*, i32** %704, align 8
  %741 = getelementptr inbounds i32, i32* %740, i64 %703
  store i32 %739, i32* %741, align 4
  %742 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %743 = load i32, i32* %700, align 4
  %744 = and i32 %743, 16777215
  %745 = zext i32 %744 to i64
  br label %746

746:                                              ; preds = %735, %736
  %747 = phi i64 [ %703, %735 ], [ %745, %736 ]
  %748 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %699, %735 ], [ %742, %736 ]
  %749 = phi i32 [ %707, %735 ], [ %739, %736 ]
  %750 = zext i32 %749 to i64
  %751 = shl nuw nsw i64 %750, 3
  %752 = or i64 %751, 377957122049
  %753 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %748, i64 0, i32 13, i32 0, i32 0
  %754 = load i64*, i64** %753, align 8
  %755 = lshr i64 %747, 6
  %756 = getelementptr inbounds i64, i64* %754, i64 %755
  %757 = and i64 %747, 63
  %758 = shl i64 1, %757
  %759 = load i64, i64* %756, align 8
  %760 = or i64 %759, %758
  store i64 %760, i64* %756, align 8
  br label %761

761:                                              ; preds = %720, %746, %687
  %762 = phi i64 [ %726, %720 ], [ %752, %746 ], [ %697, %687 ]
  %763 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %764 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %763, align 8
  %765 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %766 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %765, align 8
  %767 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %764, %766
  %768 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %766 to i64
  br i1 %767, label %769, label %774

769:                                              ; preds = %761
  %770 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %764, i64 0, i32 0
  store i64 %762, i64* %770, align 8
  %771 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %764, i64 1
  %772 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %771 to i64
  %773 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %763 to i64*
  store i64 %772, i64* %773, align 8
  br label %2152

774:                                              ; preds = %761
  %775 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %764 to i64
  %776 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %763 to i64*
  %777 = bitcast %"class.std::__1::vector.1241"* %680 to i64*
  %778 = load i64, i64* %777, align 8
  %779 = sub i64 %775, %778
  %780 = ashr exact i64 %779, 3
  %781 = add nsw i64 %780, 1
  %782 = icmp ugt i64 %781, 268435455
  br i1 %782, label %783, label %785

783:                                              ; preds = %774
  %784 = bitcast %"class.std::__1::vector.1241"* %680 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %784) #13
  unreachable

785:                                              ; preds = %774
  %786 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %765 to i64*
  %787 = sub i64 %768, %778
  %788 = ashr exact i64 %787, 3
  %789 = icmp ult i64 %788, 134217727
  br i1 %789, label %790, label %795

790:                                              ; preds = %785
  %791 = ashr exact i64 %787, 2
  %792 = icmp ult i64 %791, %781
  %793 = select i1 %792, i64 %781, i64 %791
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %813, label %795

795:                                              ; preds = %790, %785
  %796 = phi i64 [ %793, %790 ], [ 268435455, %785 ]
  %797 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %798 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %797, align 8
  %799 = shl i64 %796, 3
  %800 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %798, i64 0, i32 2
  %801 = load i64, i64* %800, align 8
  %802 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %798, i64 0, i32 3
  %803 = load i64, i64* %802, align 8
  %804 = sub i64 %803, %801
  %805 = icmp ugt i64 %799, %804
  br i1 %805, label %806, label %808, !prof !2

806:                                              ; preds = %795
  %807 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %798, i64 %799) #12
  br label %810

808:                                              ; preds = %795
  %809 = add i64 %801, %799
  store i64 %809, i64* %800, align 8
  br label %810

810:                                              ; preds = %808, %806
  %811 = phi i64 [ %807, %806 ], [ %801, %808 ]
  %812 = inttoptr i64 %811 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %813

813:                                              ; preds = %810, %790
  %814 = phi i64 [ %796, %810 ], [ 0, %790 ]
  %815 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %812, %810 ], [ null, %790 ]
  %816 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %815, i64 %780
  %817 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %815, i64 %814
  %818 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %817 to i64
  %819 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %816, i64 0, i32 0
  store i64 %762, i64* %819, align 8
  %820 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %816, i64 1
  %821 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %820 to i64
  %822 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %680, i64 0, i32 0, i32 0
  %823 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %822, align 8
  %824 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %823 to i64
  %825 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %763, align 8
  %826 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %825, %823
  br i1 %826, label %979, label %827

827:                                              ; preds = %813
  %828 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 -1, i32 0
  %829 = ptrtoint i64* %828 to i64
  %830 = sub i64 %829, %824
  %831 = lshr i64 %830, 3
  %832 = add nuw nsw i64 %831, 1
  %833 = icmp ult i64 %832, 4
  br i1 %833, label %923, label %834

834:                                              ; preds = %827
  %835 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 -1, i32 0
  %836 = ptrtoint i64* %835 to i64
  %837 = sub i64 %836, %824
  %838 = lshr i64 %837, 3
  %839 = xor i64 %838, -1
  %840 = add nsw i64 %780, %839
  %841 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %815, i64 %840
  %842 = xor i64 %838, -1
  %843 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 %842
  %844 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %841, %825
  %845 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %843, %816
  %846 = and i1 %844, %845
  br i1 %846, label %923, label %847

847:                                              ; preds = %834
  %848 = and i64 %832, 4611686018427387900
  %849 = sub nsw i64 0, %848
  %850 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %816, i64 %849
  %851 = sub nsw i64 0, %848
  %852 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 %851
  %853 = add nsw i64 %848, -4
  %854 = lshr exact i64 %853, 2
  %855 = add nuw nsw i64 %854, 1
  %856 = and i64 %855, 1
  %857 = icmp eq i64 %853, 0
  br i1 %857, label %900, label %858

858:                                              ; preds = %847
  %859 = sub nuw nsw i64 %855, %856
  %860 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 -1
  %861 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 -1
  br label %862

862:                                              ; preds = %862, %858
  %863 = phi i64 [ 0, %858 ], [ %897, %862 ]
  %864 = phi i64 [ %859, %858 ], [ %898, %862 ]
  %865 = sub i64 0, %863
  %866 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %816, i64 %865
  %867 = sub i64 0, %863
  %868 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %860, i64 %867
  %869 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %868, i64 0, i32 0
  %870 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %866, i64 -1, i32 0
  %871 = getelementptr inbounds i64, i64* %869, i64 -1
  %872 = bitcast i64* %871 to <2 x i64>*
  %873 = load <2 x i64>, <2 x i64>* %872, align 8, !alias.scope !198
  %874 = getelementptr inbounds i64, i64* %869, i64 -3
  %875 = bitcast i64* %874 to <2 x i64>*
  %876 = load <2 x i64>, <2 x i64>* %875, align 8, !alias.scope !198
  %877 = getelementptr inbounds i64, i64* %870, i64 -1
  %878 = bitcast i64* %877 to <2 x i64>*
  store <2 x i64> %873, <2 x i64>* %878, align 8, !alias.scope !201, !noalias !198
  %879 = getelementptr inbounds i64, i64* %870, i64 -3
  %880 = bitcast i64* %879 to <2 x i64>*
  store <2 x i64> %876, <2 x i64>* %880, align 8, !alias.scope !201, !noalias !198
  %881 = sub nuw nsw i64 -4, %863
  %882 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %816, i64 %881
  %883 = sub nuw nsw i64 -4, %863
  %884 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %861, i64 %883
  %885 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %884, i64 0, i32 0
  %886 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %882, i64 -1, i32 0
  %887 = getelementptr inbounds i64, i64* %885, i64 -1
  %888 = bitcast i64* %887 to <2 x i64>*
  %889 = load <2 x i64>, <2 x i64>* %888, align 8, !alias.scope !198
  %890 = getelementptr inbounds i64, i64* %885, i64 -3
  %891 = bitcast i64* %890 to <2 x i64>*
  %892 = load <2 x i64>, <2 x i64>* %891, align 8, !alias.scope !198
  %893 = getelementptr inbounds i64, i64* %886, i64 -1
  %894 = bitcast i64* %893 to <2 x i64>*
  store <2 x i64> %889, <2 x i64>* %894, align 8, !alias.scope !201, !noalias !198
  %895 = getelementptr inbounds i64, i64* %886, i64 -3
  %896 = bitcast i64* %895 to <2 x i64>*
  store <2 x i64> %892, <2 x i64>* %896, align 8, !alias.scope !201, !noalias !198
  %897 = add i64 %863, 8
  %898 = add i64 %864, -2
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %900, label %862, !llvm.loop !203

900:                                              ; preds = %862, %847
  %901 = phi i64 [ 0, %847 ], [ %897, %862 ]
  %902 = icmp eq i64 %856, 0
  br i1 %902, label %921, label %903

903:                                              ; preds = %900
  %904 = sub i64 0, %901
  %905 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %816, i64 %904
  %906 = sub i64 0, %901
  %907 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %825, i64 -1
  %908 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %907, i64 %906
  %909 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %908, i64 0, i32 0
  %910 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %905, i64 -1, i32 0
  %911 = getelementptr inbounds i64, i64* %909, i64 -1
  %912 = bitcast i64* %911 to <2 x i64>*
  %913 = load <2 x i64>, <2 x i64>* %912, align 8, !alias.scope !198
  %914 = getelementptr inbounds i64, i64* %909, i64 -3
  %915 = bitcast i64* %914 to <2 x i64>*
  %916 = load <2 x i64>, <2 x i64>* %915, align 8, !alias.scope !198
  %917 = getelementptr inbounds i64, i64* %910, i64 -1
  %918 = bitcast i64* %917 to <2 x i64>*
  store <2 x i64> %913, <2 x i64>* %918, align 8, !alias.scope !201, !noalias !198
  %919 = getelementptr inbounds i64, i64* %910, i64 -3
  %920 = bitcast i64* %919 to <2 x i64>*
  store <2 x i64> %916, <2 x i64>* %920, align 8, !alias.scope !201, !noalias !198
  br label %921

921:                                              ; preds = %900, %903
  %922 = icmp eq i64 %832, %848
  br i1 %922, label %979, label %923

923:                                              ; preds = %921, %834, %827
  %924 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %816, %834 ], [ %816, %827 ], [ %850, %921 ]
  %925 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %825, %834 ], [ %825, %827 ], [ %852, %921 ]
  %926 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %925, i64 -1, i32 0
  %927 = ptrtoint i64* %926 to i64
  %928 = sub i64 %927, %824
  %929 = lshr i64 %928, 3
  %930 = add nuw nsw i64 %929, 1
  %931 = and i64 %930, 7
  %932 = icmp eq i64 %931, 0
  br i1 %932, label %944, label %933

933:                                              ; preds = %923, %933
  %934 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %941, %933 ], [ %924, %923 ]
  %935 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %937, %933 ], [ %925, %923 ]
  %936 = phi i64 [ %942, %933 ], [ %931, %923 ]
  %937 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %935, i64 -1
  %938 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %937, i64 0, i32 0
  %939 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %934, i64 -1, i32 0
  %940 = load i64, i64* %938, align 8
  store i64 %940, i64* %939, align 8
  %941 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %934, i64 -1
  %942 = add i64 %936, -1
  %943 = icmp eq i64 %942, 0
  br i1 %943, label %944, label %933, !llvm.loop !204

944:                                              ; preds = %933, %923
  %945 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %923 ], [ %941, %933 ]
  %946 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %924, %923 ], [ %941, %933 ]
  %947 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %925, %923 ], [ %937, %933 ]
  %948 = icmp ult i64 %928, 56
  br i1 %948, label %979, label %949

949:                                              ; preds = %944, %949
  %950 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %977, %949 ], [ %946, %944 ]
  %951 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %973, %949 ], [ %947, %944 ]
  %952 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -1, i32 0
  %953 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -1, i32 0
  %954 = load i64, i64* %952, align 8
  store i64 %954, i64* %953, align 8
  %955 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -2, i32 0
  %956 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -2, i32 0
  %957 = load i64, i64* %955, align 8
  store i64 %957, i64* %956, align 8
  %958 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -3, i32 0
  %959 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -3, i32 0
  %960 = load i64, i64* %958, align 8
  store i64 %960, i64* %959, align 8
  %961 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -4, i32 0
  %962 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -4, i32 0
  %963 = load i64, i64* %961, align 8
  store i64 %963, i64* %962, align 8
  %964 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -5, i32 0
  %965 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -5, i32 0
  %966 = load i64, i64* %964, align 8
  store i64 %966, i64* %965, align 8
  %967 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -6, i32 0
  %968 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -6, i32 0
  %969 = load i64, i64* %967, align 8
  store i64 %969, i64* %968, align 8
  %970 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -7, i32 0
  %971 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -7, i32 0
  %972 = load i64, i64* %970, align 8
  store i64 %972, i64* %971, align 8
  %973 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %951, i64 -8
  %974 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %973, i64 0, i32 0
  %975 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -8, i32 0
  %976 = load i64, i64* %974, align 8
  store i64 %976, i64* %975, align 8
  %977 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %950, i64 -8
  %978 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %973, %823
  br i1 %978, label %979, label %949, !llvm.loop !205

979:                                              ; preds = %944, %949, %921, %813
  %980 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %816, %813 ], [ %850, %921 ], [ %945, %944 ], [ %977, %949 ]
  %981 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %980 to i64
  store i64 %981, i64* %777, align 8
  store i64 %821, i64* %776, align 8
  store i64 %818, i64* %786, align 8
  br label %2152

982:                                              ; preds = %666
  %983 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0
  br i1 %671, label %984, label %1001

984:                                              ; preds = %982
  %985 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 0
  %986 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %985, align 8
  %987 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %986, i64 0, i32 2
  %988 = load i16, i16* %987, align 8
  %989 = icmp eq i16 %988, 27
  br i1 %989, label %990, label %1001

990:                                              ; preds = %984
  %991 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %992 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %991, i64 0, i32 2
  %993 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %992, align 8
  %994 = bitcast %"class.v8::internal::compiler::Constant"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %994) #12
  %995 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %669) #12
  %996 = bitcast %"class.v8::internal::compiler::Constant"* %9 to i64*
  %997 = extractvalue { i64, i64 } %995, 0
  store i64 %997, i64* %996, align 8
  %998 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %9, i64 0, i32 2
  %999 = extractvalue { i64, i64 } %995, 1
  store i64 %999, i64* %998, align 8
  %1000 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %993, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %994) #12
  br label %1064

1001:                                             ; preds = %984, %982
  %1002 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1003 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 3
  %1004 = load i32, i32* %1003, align 4
  %1005 = and i32 %1004, 16777215
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1002, i64 0, i32 15, i32 0, i32 0, i32 0
  %1008 = load i32*, i32** %1007, align 8
  %1009 = getelementptr inbounds i32, i32* %1008, i64 %1006
  %1010 = load i32, i32* %1009, align 4
  %1011 = icmp eq i32 %1010, -1
  br i1 %673, label %1012, label %1038

1012:                                             ; preds = %1001
  br i1 %1011, label %1013, label %1023

1013:                                             ; preds = %1012
  %1014 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1002, i64 0, i32 2
  %1015 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1014, align 8
  %1016 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1015) #12
  %1017 = load i32*, i32** %1007, align 8
  %1018 = getelementptr inbounds i32, i32* %1017, i64 %1006
  store i32 %1016, i32* %1018, align 4
  %1019 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1020 = load i32, i32* %1003, align 4
  %1021 = and i32 %1020, 16777215
  %1022 = zext i32 %1021 to i64
  br label %1023

1023:                                             ; preds = %1012, %1013
  %1024 = phi i64 [ %1006, %1012 ], [ %1022, %1013 ]
  %1025 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1002, %1012 ], [ %1019, %1013 ]
  %1026 = phi i32 [ %1010, %1012 ], [ %1016, %1013 ]
  %1027 = zext i32 %1026 to i64
  %1028 = shl nuw nsw i64 %1027, 3
  %1029 = or i64 %1028, 2989297238017
  %1030 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1025, i64 0, i32 13, i32 0, i32 0
  %1031 = load i64*, i64** %1030, align 8
  %1032 = lshr i64 %1024, 6
  %1033 = getelementptr inbounds i64, i64* %1031, i64 %1032
  %1034 = and i64 %1024, 63
  %1035 = shl i64 1, %1034
  %1036 = load i64, i64* %1033, align 8
  %1037 = or i64 %1036, %1035
  store i64 %1037, i64* %1033, align 8
  br label %1064

1038:                                             ; preds = %1001
  br i1 %1011, label %1039, label %1049

1039:                                             ; preds = %1038
  %1040 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1002, i64 0, i32 2
  %1041 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1040, align 8
  %1042 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1041) #12
  %1043 = load i32*, i32** %1007, align 8
  %1044 = getelementptr inbounds i32, i32* %1043, i64 %1006
  store i32 %1042, i32* %1044, align 4
  %1045 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1046 = load i32, i32* %1003, align 4
  %1047 = and i32 %1046, 16777215
  %1048 = zext i32 %1047 to i64
  br label %1049

1049:                                             ; preds = %1038, %1039
  %1050 = phi i64 [ %1006, %1038 ], [ %1048, %1039 ]
  %1051 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1002, %1038 ], [ %1045, %1039 ]
  %1052 = phi i32 [ %1010, %1038 ], [ %1042, %1039 ]
  %1053 = zext i32 %1052 to i64
  %1054 = shl nuw nsw i64 %1053, 3
  %1055 = or i64 %1054, 377957122049
  %1056 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1051, i64 0, i32 13, i32 0, i32 0
  %1057 = load i64*, i64** %1056, align 8
  %1058 = lshr i64 %1050, 6
  %1059 = getelementptr inbounds i64, i64* %1057, i64 %1058
  %1060 = and i64 %1050, 63
  %1061 = shl i64 1, %1060
  %1062 = load i64, i64* %1059, align 8
  %1063 = or i64 %1062, %1061
  store i64 %1063, i64* %1059, align 8
  br label %1064

1064:                                             ; preds = %1023, %1049, %990
  %1065 = phi i64 [ %1000, %990 ], [ %1029, %1023 ], [ %1055, %1049 ]
  %1066 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %1067 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1066, align 8
  %1068 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %1069 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1068, align 8
  %1070 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1067, %1069
  %1071 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1069 to i64
  br i1 %1070, label %1072, label %1077

1072:                                             ; preds = %1064
  %1073 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1067, i64 0, i32 0
  store i64 %1065, i64* %1073, align 8
  %1074 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1067, i64 1
  %1075 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1074 to i64
  %1076 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1066 to i64*
  store i64 %1075, i64* %1076, align 8
  br label %2152

1077:                                             ; preds = %1064
  %1078 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1067 to i64
  %1079 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1066 to i64*
  %1080 = bitcast %"class.std::__1::vector.1241"* %983 to i64*
  %1081 = load i64, i64* %1080, align 8
  %1082 = sub i64 %1078, %1081
  %1083 = ashr exact i64 %1082, 3
  %1084 = add nsw i64 %1083, 1
  %1085 = icmp ugt i64 %1084, 268435455
  br i1 %1085, label %1086, label %1088

1086:                                             ; preds = %1077
  %1087 = bitcast %"class.std::__1::vector.1241"* %983 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1087) #13
  unreachable

1088:                                             ; preds = %1077
  %1089 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1068 to i64*
  %1090 = sub i64 %1071, %1081
  %1091 = ashr exact i64 %1090, 3
  %1092 = icmp ult i64 %1091, 134217727
  br i1 %1092, label %1093, label %1098

1093:                                             ; preds = %1088
  %1094 = ashr exact i64 %1090, 2
  %1095 = icmp ult i64 %1094, %1084
  %1096 = select i1 %1095, i64 %1084, i64 %1094
  %1097 = icmp eq i64 %1096, 0
  br i1 %1097, label %1116, label %1098

1098:                                             ; preds = %1093, %1088
  %1099 = phi i64 [ %1096, %1093 ], [ 268435455, %1088 ]
  %1100 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1101 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1100, align 8
  %1102 = shl i64 %1099, 3
  %1103 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1101, i64 0, i32 2
  %1104 = load i64, i64* %1103, align 8
  %1105 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1101, i64 0, i32 3
  %1106 = load i64, i64* %1105, align 8
  %1107 = sub i64 %1106, %1104
  %1108 = icmp ugt i64 %1102, %1107
  br i1 %1108, label %1109, label %1111, !prof !2

1109:                                             ; preds = %1098
  %1110 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1101, i64 %1102) #12
  br label %1113

1111:                                             ; preds = %1098
  %1112 = add i64 %1104, %1102
  store i64 %1112, i64* %1103, align 8
  br label %1113

1113:                                             ; preds = %1111, %1109
  %1114 = phi i64 [ %1110, %1109 ], [ %1104, %1111 ]
  %1115 = inttoptr i64 %1114 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1116

1116:                                             ; preds = %1113, %1093
  %1117 = phi i64 [ %1099, %1113 ], [ 0, %1093 ]
  %1118 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1115, %1113 ], [ null, %1093 ]
  %1119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1118, i64 %1083
  %1120 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1118, i64 %1117
  %1121 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1120 to i64
  %1122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1119, i64 0, i32 0
  store i64 %1065, i64* %1122, align 8
  %1123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1119, i64 1
  %1124 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1123 to i64
  %1125 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %983, i64 0, i32 0, i32 0
  %1126 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1125, align 8
  %1127 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1126 to i64
  %1128 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1066, align 8
  %1129 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1128, %1126
  br i1 %1129, label %1282, label %1130

1130:                                             ; preds = %1116
  %1131 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 -1, i32 0
  %1132 = ptrtoint i64* %1131 to i64
  %1133 = sub i64 %1132, %1127
  %1134 = lshr i64 %1133, 3
  %1135 = add nuw nsw i64 %1134, 1
  %1136 = icmp ult i64 %1135, 4
  br i1 %1136, label %1226, label %1137

1137:                                             ; preds = %1130
  %1138 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 -1, i32 0
  %1139 = ptrtoint i64* %1138 to i64
  %1140 = sub i64 %1139, %1127
  %1141 = lshr i64 %1140, 3
  %1142 = xor i64 %1141, -1
  %1143 = add nsw i64 %1083, %1142
  %1144 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1118, i64 %1143
  %1145 = xor i64 %1141, -1
  %1146 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 %1145
  %1147 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1144, %1128
  %1148 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1146, %1119
  %1149 = and i1 %1147, %1148
  br i1 %1149, label %1226, label %1150

1150:                                             ; preds = %1137
  %1151 = and i64 %1135, 4611686018427387900
  %1152 = sub nsw i64 0, %1151
  %1153 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1119, i64 %1152
  %1154 = sub nsw i64 0, %1151
  %1155 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 %1154
  %1156 = add nsw i64 %1151, -4
  %1157 = lshr exact i64 %1156, 2
  %1158 = add nuw nsw i64 %1157, 1
  %1159 = and i64 %1158, 1
  %1160 = icmp eq i64 %1156, 0
  br i1 %1160, label %1203, label %1161

1161:                                             ; preds = %1150
  %1162 = sub nuw nsw i64 %1158, %1159
  %1163 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 -1
  %1164 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 -1
  br label %1165

1165:                                             ; preds = %1165, %1161
  %1166 = phi i64 [ 0, %1161 ], [ %1200, %1165 ]
  %1167 = phi i64 [ %1162, %1161 ], [ %1201, %1165 ]
  %1168 = sub i64 0, %1166
  %1169 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1119, i64 %1168
  %1170 = sub i64 0, %1166
  %1171 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1163, i64 %1170
  %1172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1171, i64 0, i32 0
  %1173 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1169, i64 -1, i32 0
  %1174 = getelementptr inbounds i64, i64* %1172, i64 -1
  %1175 = bitcast i64* %1174 to <2 x i64>*
  %1176 = load <2 x i64>, <2 x i64>* %1175, align 8, !alias.scope !206
  %1177 = getelementptr inbounds i64, i64* %1172, i64 -3
  %1178 = bitcast i64* %1177 to <2 x i64>*
  %1179 = load <2 x i64>, <2 x i64>* %1178, align 8, !alias.scope !206
  %1180 = getelementptr inbounds i64, i64* %1173, i64 -1
  %1181 = bitcast i64* %1180 to <2 x i64>*
  store <2 x i64> %1176, <2 x i64>* %1181, align 8, !alias.scope !209, !noalias !206
  %1182 = getelementptr inbounds i64, i64* %1173, i64 -3
  %1183 = bitcast i64* %1182 to <2 x i64>*
  store <2 x i64> %1179, <2 x i64>* %1183, align 8, !alias.scope !209, !noalias !206
  %1184 = sub nuw nsw i64 -4, %1166
  %1185 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1119, i64 %1184
  %1186 = sub nuw nsw i64 -4, %1166
  %1187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1164, i64 %1186
  %1188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1187, i64 0, i32 0
  %1189 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1185, i64 -1, i32 0
  %1190 = getelementptr inbounds i64, i64* %1188, i64 -1
  %1191 = bitcast i64* %1190 to <2 x i64>*
  %1192 = load <2 x i64>, <2 x i64>* %1191, align 8, !alias.scope !206
  %1193 = getelementptr inbounds i64, i64* %1188, i64 -3
  %1194 = bitcast i64* %1193 to <2 x i64>*
  %1195 = load <2 x i64>, <2 x i64>* %1194, align 8, !alias.scope !206
  %1196 = getelementptr inbounds i64, i64* %1189, i64 -1
  %1197 = bitcast i64* %1196 to <2 x i64>*
  store <2 x i64> %1192, <2 x i64>* %1197, align 8, !alias.scope !209, !noalias !206
  %1198 = getelementptr inbounds i64, i64* %1189, i64 -3
  %1199 = bitcast i64* %1198 to <2 x i64>*
  store <2 x i64> %1195, <2 x i64>* %1199, align 8, !alias.scope !209, !noalias !206
  %1200 = add i64 %1166, 8
  %1201 = add i64 %1167, -2
  %1202 = icmp eq i64 %1201, 0
  br i1 %1202, label %1203, label %1165, !llvm.loop !211

1203:                                             ; preds = %1165, %1150
  %1204 = phi i64 [ 0, %1150 ], [ %1200, %1165 ]
  %1205 = icmp eq i64 %1159, 0
  br i1 %1205, label %1224, label %1206

1206:                                             ; preds = %1203
  %1207 = sub i64 0, %1204
  %1208 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1119, i64 %1207
  %1209 = sub i64 0, %1204
  %1210 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1128, i64 -1
  %1211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1210, i64 %1209
  %1212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1211, i64 0, i32 0
  %1213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1208, i64 -1, i32 0
  %1214 = getelementptr inbounds i64, i64* %1212, i64 -1
  %1215 = bitcast i64* %1214 to <2 x i64>*
  %1216 = load <2 x i64>, <2 x i64>* %1215, align 8, !alias.scope !206
  %1217 = getelementptr inbounds i64, i64* %1212, i64 -3
  %1218 = bitcast i64* %1217 to <2 x i64>*
  %1219 = load <2 x i64>, <2 x i64>* %1218, align 8, !alias.scope !206
  %1220 = getelementptr inbounds i64, i64* %1213, i64 -1
  %1221 = bitcast i64* %1220 to <2 x i64>*
  store <2 x i64> %1216, <2 x i64>* %1221, align 8, !alias.scope !209, !noalias !206
  %1222 = getelementptr inbounds i64, i64* %1213, i64 -3
  %1223 = bitcast i64* %1222 to <2 x i64>*
  store <2 x i64> %1219, <2 x i64>* %1223, align 8, !alias.scope !209, !noalias !206
  br label %1224

1224:                                             ; preds = %1203, %1206
  %1225 = icmp eq i64 %1135, %1151
  br i1 %1225, label %1282, label %1226

1226:                                             ; preds = %1224, %1137, %1130
  %1227 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1119, %1137 ], [ %1119, %1130 ], [ %1153, %1224 ]
  %1228 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1128, %1137 ], [ %1128, %1130 ], [ %1155, %1224 ]
  %1229 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1228, i64 -1, i32 0
  %1230 = ptrtoint i64* %1229 to i64
  %1231 = sub i64 %1230, %1127
  %1232 = lshr i64 %1231, 3
  %1233 = add nuw nsw i64 %1232, 1
  %1234 = and i64 %1233, 7
  %1235 = icmp eq i64 %1234, 0
  br i1 %1235, label %1247, label %1236

1236:                                             ; preds = %1226, %1236
  %1237 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1244, %1236 ], [ %1227, %1226 ]
  %1238 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1240, %1236 ], [ %1228, %1226 ]
  %1239 = phi i64 [ %1245, %1236 ], [ %1234, %1226 ]
  %1240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1238, i64 -1
  %1241 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1240, i64 0, i32 0
  %1242 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1237, i64 -1, i32 0
  %1243 = load i64, i64* %1241, align 8
  store i64 %1243, i64* %1242, align 8
  %1244 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1237, i64 -1
  %1245 = add i64 %1239, -1
  %1246 = icmp eq i64 %1245, 0
  br i1 %1246, label %1247, label %1236, !llvm.loop !212

1247:                                             ; preds = %1236, %1226
  %1248 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1226 ], [ %1244, %1236 ]
  %1249 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1227, %1226 ], [ %1244, %1236 ]
  %1250 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1228, %1226 ], [ %1240, %1236 ]
  %1251 = icmp ult i64 %1231, 56
  br i1 %1251, label %1282, label %1252

1252:                                             ; preds = %1247, %1252
  %1253 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1280, %1252 ], [ %1249, %1247 ]
  %1254 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1276, %1252 ], [ %1250, %1247 ]
  %1255 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -1, i32 0
  %1256 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -1, i32 0
  %1257 = load i64, i64* %1255, align 8
  store i64 %1257, i64* %1256, align 8
  %1258 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -2, i32 0
  %1259 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -2, i32 0
  %1260 = load i64, i64* %1258, align 8
  store i64 %1260, i64* %1259, align 8
  %1261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -3, i32 0
  %1262 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -3, i32 0
  %1263 = load i64, i64* %1261, align 8
  store i64 %1263, i64* %1262, align 8
  %1264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -4, i32 0
  %1265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -4, i32 0
  %1266 = load i64, i64* %1264, align 8
  store i64 %1266, i64* %1265, align 8
  %1267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -5, i32 0
  %1268 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -5, i32 0
  %1269 = load i64, i64* %1267, align 8
  store i64 %1269, i64* %1268, align 8
  %1270 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -6, i32 0
  %1271 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -6, i32 0
  %1272 = load i64, i64* %1270, align 8
  store i64 %1272, i64* %1271, align 8
  %1273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -7, i32 0
  %1274 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -7, i32 0
  %1275 = load i64, i64* %1273, align 8
  store i64 %1275, i64* %1274, align 8
  %1276 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1254, i64 -8
  %1277 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1276, i64 0, i32 0
  %1278 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -8, i32 0
  %1279 = load i64, i64* %1277, align 8
  store i64 %1279, i64* %1278, align 8
  %1280 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1253, i64 -8
  %1281 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1276, %1126
  br i1 %1281, label %1282, label %1252, !llvm.loop !213

1282:                                             ; preds = %1247, %1252, %1224, %1116
  %1283 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1119, %1116 ], [ %1153, %1224 ], [ %1248, %1247 ], [ %1280, %1252 ]
  %1284 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1283 to i64
  store i64 %1284, i64* %1080, align 8
  store i64 %1124, i64* %1079, align 8
  store i64 %1121, i64* %1089, align 8
  br label %2152

1285:                                             ; preds = %666, %666, %666
  %1286 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0
  br i1 %671, label %1287, label %1305

1287:                                             ; preds = %1285
  %1288 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 0
  %1289 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1288, align 8
  %1290 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1289, i64 0, i32 2
  %1291 = load i16, i16* %1290, align 8
  %1292 = and i16 %1291, -2
  %1293 = icmp eq i16 %1292, 32
  br i1 %1293, label %1294, label %1305

1294:                                             ; preds = %1287
  %1295 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1296 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1295, i64 0, i32 2
  %1297 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1296, align 8
  %1298 = bitcast %"class.v8::internal::compiler::Constant"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1298) #12
  %1299 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %669) #12
  %1300 = bitcast %"class.v8::internal::compiler::Constant"* %8 to i64*
  %1301 = extractvalue { i64, i64 } %1299, 0
  store i64 %1301, i64* %1300, align 8
  %1302 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %8, i64 0, i32 2
  %1303 = extractvalue { i64, i64 } %1299, 1
  store i64 %1303, i64* %1302, align 8
  %1304 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %1297, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1298) #12
  br label %1368

1305:                                             ; preds = %1287, %1285
  %1306 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1307 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 3
  %1308 = load i32, i32* %1307, align 4
  %1309 = and i32 %1308, 16777215
  %1310 = zext i32 %1309 to i64
  %1311 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1306, i64 0, i32 15, i32 0, i32 0, i32 0
  %1312 = load i32*, i32** %1311, align 8
  %1313 = getelementptr inbounds i32, i32* %1312, i64 %1310
  %1314 = load i32, i32* %1313, align 4
  %1315 = icmp eq i32 %1314, -1
  br i1 %673, label %1316, label %1342

1316:                                             ; preds = %1305
  br i1 %1315, label %1317, label %1327

1317:                                             ; preds = %1316
  %1318 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1306, i64 0, i32 2
  %1319 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1318, align 8
  %1320 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1319) #12
  %1321 = load i32*, i32** %1311, align 8
  %1322 = getelementptr inbounds i32, i32* %1321, i64 %1310
  store i32 %1320, i32* %1322, align 4
  %1323 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1324 = load i32, i32* %1307, align 4
  %1325 = and i32 %1324, 16777215
  %1326 = zext i32 %1325 to i64
  br label %1327

1327:                                             ; preds = %1316, %1317
  %1328 = phi i64 [ %1310, %1316 ], [ %1326, %1317 ]
  %1329 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1306, %1316 ], [ %1323, %1317 ]
  %1330 = phi i32 [ %1314, %1316 ], [ %1320, %1317 ]
  %1331 = zext i32 %1330 to i64
  %1332 = shl nuw nsw i64 %1331, 3
  %1333 = or i64 %1332, 2989297238017
  %1334 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1329, i64 0, i32 13, i32 0, i32 0
  %1335 = load i64*, i64** %1334, align 8
  %1336 = lshr i64 %1328, 6
  %1337 = getelementptr inbounds i64, i64* %1335, i64 %1336
  %1338 = and i64 %1328, 63
  %1339 = shl i64 1, %1338
  %1340 = load i64, i64* %1337, align 8
  %1341 = or i64 %1340, %1339
  store i64 %1341, i64* %1337, align 8
  br label %1368

1342:                                             ; preds = %1305
  br i1 %1315, label %1343, label %1353

1343:                                             ; preds = %1342
  %1344 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1306, i64 0, i32 2
  %1345 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1344, align 8
  %1346 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1345) #12
  %1347 = load i32*, i32** %1311, align 8
  %1348 = getelementptr inbounds i32, i32* %1347, i64 %1310
  store i32 %1346, i32* %1348, align 4
  %1349 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1350 = load i32, i32* %1307, align 4
  %1351 = and i32 %1350, 16777215
  %1352 = zext i32 %1351 to i64
  br label %1353

1353:                                             ; preds = %1342, %1343
  %1354 = phi i64 [ %1310, %1342 ], [ %1352, %1343 ]
  %1355 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1306, %1342 ], [ %1349, %1343 ]
  %1356 = phi i32 [ %1314, %1342 ], [ %1346, %1343 ]
  %1357 = zext i32 %1356 to i64
  %1358 = shl nuw nsw i64 %1357, 3
  %1359 = or i64 %1358, 377957122049
  %1360 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1355, i64 0, i32 13, i32 0, i32 0
  %1361 = load i64*, i64** %1360, align 8
  %1362 = lshr i64 %1354, 6
  %1363 = getelementptr inbounds i64, i64* %1361, i64 %1362
  %1364 = and i64 %1354, 63
  %1365 = shl i64 1, %1364
  %1366 = load i64, i64* %1363, align 8
  %1367 = or i64 %1366, %1365
  store i64 %1367, i64* %1363, align 8
  br label %1368

1368:                                             ; preds = %1327, %1353, %1294
  %1369 = phi i64 [ %1304, %1294 ], [ %1333, %1327 ], [ %1359, %1353 ]
  %1370 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %1371 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1370, align 8
  %1372 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %1373 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1372, align 8
  %1374 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1371, %1373
  %1375 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1373 to i64
  br i1 %1374, label %1376, label %1381

1376:                                             ; preds = %1368
  %1377 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1371, i64 0, i32 0
  store i64 %1369, i64* %1377, align 8
  %1378 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1371, i64 1
  %1379 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1378 to i64
  %1380 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1370 to i64*
  store i64 %1379, i64* %1380, align 8
  br label %2152

1381:                                             ; preds = %1368
  %1382 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1371 to i64
  %1383 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1370 to i64*
  %1384 = bitcast %"class.std::__1::vector.1241"* %1286 to i64*
  %1385 = load i64, i64* %1384, align 8
  %1386 = sub i64 %1382, %1385
  %1387 = ashr exact i64 %1386, 3
  %1388 = add nsw i64 %1387, 1
  %1389 = icmp ugt i64 %1388, 268435455
  br i1 %1389, label %1390, label %1392

1390:                                             ; preds = %1381
  %1391 = bitcast %"class.std::__1::vector.1241"* %1286 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1391) #13
  unreachable

1392:                                             ; preds = %1381
  %1393 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1372 to i64*
  %1394 = sub i64 %1375, %1385
  %1395 = ashr exact i64 %1394, 3
  %1396 = icmp ult i64 %1395, 134217727
  br i1 %1396, label %1397, label %1402

1397:                                             ; preds = %1392
  %1398 = ashr exact i64 %1394, 2
  %1399 = icmp ult i64 %1398, %1388
  %1400 = select i1 %1399, i64 %1388, i64 %1398
  %1401 = icmp eq i64 %1400, 0
  br i1 %1401, label %1420, label %1402

1402:                                             ; preds = %1397, %1392
  %1403 = phi i64 [ %1400, %1397 ], [ 268435455, %1392 ]
  %1404 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1405 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1404, align 8
  %1406 = shl i64 %1403, 3
  %1407 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1405, i64 0, i32 2
  %1408 = load i64, i64* %1407, align 8
  %1409 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1405, i64 0, i32 3
  %1410 = load i64, i64* %1409, align 8
  %1411 = sub i64 %1410, %1408
  %1412 = icmp ugt i64 %1406, %1411
  br i1 %1412, label %1413, label %1415, !prof !2

1413:                                             ; preds = %1402
  %1414 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1405, i64 %1406) #12
  br label %1417

1415:                                             ; preds = %1402
  %1416 = add i64 %1408, %1406
  store i64 %1416, i64* %1407, align 8
  br label %1417

1417:                                             ; preds = %1415, %1413
  %1418 = phi i64 [ %1414, %1413 ], [ %1408, %1415 ]
  %1419 = inttoptr i64 %1418 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1420

1420:                                             ; preds = %1417, %1397
  %1421 = phi i64 [ %1403, %1417 ], [ 0, %1397 ]
  %1422 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1419, %1417 ], [ null, %1397 ]
  %1423 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1422, i64 %1387
  %1424 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1422, i64 %1421
  %1425 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1424 to i64
  %1426 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1423, i64 0, i32 0
  store i64 %1369, i64* %1426, align 8
  %1427 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1423, i64 1
  %1428 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1427 to i64
  %1429 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %1286, i64 0, i32 0, i32 0
  %1430 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1429, align 8
  %1431 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1430 to i64
  %1432 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1370, align 8
  %1433 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1432, %1430
  br i1 %1433, label %1586, label %1434

1434:                                             ; preds = %1420
  %1435 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 -1, i32 0
  %1436 = ptrtoint i64* %1435 to i64
  %1437 = sub i64 %1436, %1431
  %1438 = lshr i64 %1437, 3
  %1439 = add nuw nsw i64 %1438, 1
  %1440 = icmp ult i64 %1439, 4
  br i1 %1440, label %1530, label %1441

1441:                                             ; preds = %1434
  %1442 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 -1, i32 0
  %1443 = ptrtoint i64* %1442 to i64
  %1444 = sub i64 %1443, %1431
  %1445 = lshr i64 %1444, 3
  %1446 = xor i64 %1445, -1
  %1447 = add nsw i64 %1387, %1446
  %1448 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1422, i64 %1447
  %1449 = xor i64 %1445, -1
  %1450 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 %1449
  %1451 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1448, %1432
  %1452 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1450, %1423
  %1453 = and i1 %1451, %1452
  br i1 %1453, label %1530, label %1454

1454:                                             ; preds = %1441
  %1455 = and i64 %1439, 4611686018427387900
  %1456 = sub nsw i64 0, %1455
  %1457 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1423, i64 %1456
  %1458 = sub nsw i64 0, %1455
  %1459 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 %1458
  %1460 = add nsw i64 %1455, -4
  %1461 = lshr exact i64 %1460, 2
  %1462 = add nuw nsw i64 %1461, 1
  %1463 = and i64 %1462, 1
  %1464 = icmp eq i64 %1460, 0
  br i1 %1464, label %1507, label %1465

1465:                                             ; preds = %1454
  %1466 = sub nuw nsw i64 %1462, %1463
  %1467 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 -1
  %1468 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 -1
  br label %1469

1469:                                             ; preds = %1469, %1465
  %1470 = phi i64 [ 0, %1465 ], [ %1504, %1469 ]
  %1471 = phi i64 [ %1466, %1465 ], [ %1505, %1469 ]
  %1472 = sub i64 0, %1470
  %1473 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1423, i64 %1472
  %1474 = sub i64 0, %1470
  %1475 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1467, i64 %1474
  %1476 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1475, i64 0, i32 0
  %1477 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1473, i64 -1, i32 0
  %1478 = getelementptr inbounds i64, i64* %1476, i64 -1
  %1479 = bitcast i64* %1478 to <2 x i64>*
  %1480 = load <2 x i64>, <2 x i64>* %1479, align 8, !alias.scope !214
  %1481 = getelementptr inbounds i64, i64* %1476, i64 -3
  %1482 = bitcast i64* %1481 to <2 x i64>*
  %1483 = load <2 x i64>, <2 x i64>* %1482, align 8, !alias.scope !214
  %1484 = getelementptr inbounds i64, i64* %1477, i64 -1
  %1485 = bitcast i64* %1484 to <2 x i64>*
  store <2 x i64> %1480, <2 x i64>* %1485, align 8, !alias.scope !217, !noalias !214
  %1486 = getelementptr inbounds i64, i64* %1477, i64 -3
  %1487 = bitcast i64* %1486 to <2 x i64>*
  store <2 x i64> %1483, <2 x i64>* %1487, align 8, !alias.scope !217, !noalias !214
  %1488 = sub nuw nsw i64 -4, %1470
  %1489 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1423, i64 %1488
  %1490 = sub nuw nsw i64 -4, %1470
  %1491 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1468, i64 %1490
  %1492 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1491, i64 0, i32 0
  %1493 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1489, i64 -1, i32 0
  %1494 = getelementptr inbounds i64, i64* %1492, i64 -1
  %1495 = bitcast i64* %1494 to <2 x i64>*
  %1496 = load <2 x i64>, <2 x i64>* %1495, align 8, !alias.scope !214
  %1497 = getelementptr inbounds i64, i64* %1492, i64 -3
  %1498 = bitcast i64* %1497 to <2 x i64>*
  %1499 = load <2 x i64>, <2 x i64>* %1498, align 8, !alias.scope !214
  %1500 = getelementptr inbounds i64, i64* %1493, i64 -1
  %1501 = bitcast i64* %1500 to <2 x i64>*
  store <2 x i64> %1496, <2 x i64>* %1501, align 8, !alias.scope !217, !noalias !214
  %1502 = getelementptr inbounds i64, i64* %1493, i64 -3
  %1503 = bitcast i64* %1502 to <2 x i64>*
  store <2 x i64> %1499, <2 x i64>* %1503, align 8, !alias.scope !217, !noalias !214
  %1504 = add i64 %1470, 8
  %1505 = add i64 %1471, -2
  %1506 = icmp eq i64 %1505, 0
  br i1 %1506, label %1507, label %1469, !llvm.loop !219

1507:                                             ; preds = %1469, %1454
  %1508 = phi i64 [ 0, %1454 ], [ %1504, %1469 ]
  %1509 = icmp eq i64 %1463, 0
  br i1 %1509, label %1528, label %1510

1510:                                             ; preds = %1507
  %1511 = sub i64 0, %1508
  %1512 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1423, i64 %1511
  %1513 = sub i64 0, %1508
  %1514 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1432, i64 -1
  %1515 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1514, i64 %1513
  %1516 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1515, i64 0, i32 0
  %1517 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1512, i64 -1, i32 0
  %1518 = getelementptr inbounds i64, i64* %1516, i64 -1
  %1519 = bitcast i64* %1518 to <2 x i64>*
  %1520 = load <2 x i64>, <2 x i64>* %1519, align 8, !alias.scope !214
  %1521 = getelementptr inbounds i64, i64* %1516, i64 -3
  %1522 = bitcast i64* %1521 to <2 x i64>*
  %1523 = load <2 x i64>, <2 x i64>* %1522, align 8, !alias.scope !214
  %1524 = getelementptr inbounds i64, i64* %1517, i64 -1
  %1525 = bitcast i64* %1524 to <2 x i64>*
  store <2 x i64> %1520, <2 x i64>* %1525, align 8, !alias.scope !217, !noalias !214
  %1526 = getelementptr inbounds i64, i64* %1517, i64 -3
  %1527 = bitcast i64* %1526 to <2 x i64>*
  store <2 x i64> %1523, <2 x i64>* %1527, align 8, !alias.scope !217, !noalias !214
  br label %1528

1528:                                             ; preds = %1507, %1510
  %1529 = icmp eq i64 %1439, %1455
  br i1 %1529, label %1586, label %1530

1530:                                             ; preds = %1528, %1441, %1434
  %1531 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1423, %1441 ], [ %1423, %1434 ], [ %1457, %1528 ]
  %1532 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1432, %1441 ], [ %1432, %1434 ], [ %1459, %1528 ]
  %1533 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1532, i64 -1, i32 0
  %1534 = ptrtoint i64* %1533 to i64
  %1535 = sub i64 %1534, %1431
  %1536 = lshr i64 %1535, 3
  %1537 = add nuw nsw i64 %1536, 1
  %1538 = and i64 %1537, 7
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1551, label %1540

1540:                                             ; preds = %1530, %1540
  %1541 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1548, %1540 ], [ %1531, %1530 ]
  %1542 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1544, %1540 ], [ %1532, %1530 ]
  %1543 = phi i64 [ %1549, %1540 ], [ %1538, %1530 ]
  %1544 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1542, i64 -1
  %1545 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1544, i64 0, i32 0
  %1546 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1541, i64 -1, i32 0
  %1547 = load i64, i64* %1545, align 8
  store i64 %1547, i64* %1546, align 8
  %1548 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1541, i64 -1
  %1549 = add i64 %1543, -1
  %1550 = icmp eq i64 %1549, 0
  br i1 %1550, label %1551, label %1540, !llvm.loop !220

1551:                                             ; preds = %1540, %1530
  %1552 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1530 ], [ %1548, %1540 ]
  %1553 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1531, %1530 ], [ %1548, %1540 ]
  %1554 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1532, %1530 ], [ %1544, %1540 ]
  %1555 = icmp ult i64 %1535, 56
  br i1 %1555, label %1586, label %1556

1556:                                             ; preds = %1551, %1556
  %1557 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1584, %1556 ], [ %1553, %1551 ]
  %1558 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1580, %1556 ], [ %1554, %1551 ]
  %1559 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -1, i32 0
  %1560 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -1, i32 0
  %1561 = load i64, i64* %1559, align 8
  store i64 %1561, i64* %1560, align 8
  %1562 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -2, i32 0
  %1563 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -2, i32 0
  %1564 = load i64, i64* %1562, align 8
  store i64 %1564, i64* %1563, align 8
  %1565 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -3, i32 0
  %1566 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -3, i32 0
  %1567 = load i64, i64* %1565, align 8
  store i64 %1567, i64* %1566, align 8
  %1568 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -4, i32 0
  %1569 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -4, i32 0
  %1570 = load i64, i64* %1568, align 8
  store i64 %1570, i64* %1569, align 8
  %1571 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -5, i32 0
  %1572 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -5, i32 0
  %1573 = load i64, i64* %1571, align 8
  store i64 %1573, i64* %1572, align 8
  %1574 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -6, i32 0
  %1575 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -6, i32 0
  %1576 = load i64, i64* %1574, align 8
  store i64 %1576, i64* %1575, align 8
  %1577 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -7, i32 0
  %1578 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -7, i32 0
  %1579 = load i64, i64* %1577, align 8
  store i64 %1579, i64* %1578, align 8
  %1580 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1558, i64 -8
  %1581 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1580, i64 0, i32 0
  %1582 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -8, i32 0
  %1583 = load i64, i64* %1581, align 8
  store i64 %1583, i64* %1582, align 8
  %1584 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1557, i64 -8
  %1585 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1580, %1430
  br i1 %1585, label %1586, label %1556, !llvm.loop !221

1586:                                             ; preds = %1551, %1556, %1528, %1420
  %1587 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1423, %1420 ], [ %1457, %1528 ], [ %1552, %1551 ], [ %1584, %1556 ]
  %1588 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1587 to i64
  store i64 %1588, i64* %1384, align 8
  store i64 %1428, i64* %1383, align 8
  store i64 %1425, i64* %1393, align 8
  br label %2152

1589:                                             ; preds = %666
  %1590 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0
  %1591 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1592 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 3
  %1593 = load i32, i32* %1592, align 4
  %1594 = and i32 %1593, 16777215
  %1595 = zext i32 %1594 to i64
  %1596 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1591, i64 0, i32 15, i32 0, i32 0, i32 0
  %1597 = load i32*, i32** %1596, align 8
  %1598 = getelementptr inbounds i32, i32* %1597, i64 %1595
  %1599 = load i32, i32* %1598, align 4
  %1600 = icmp eq i32 %1599, -1
  br i1 %673, label %1601, label %1612

1601:                                             ; preds = %1589
  br i1 %1600, label %1602, label %1623

1602:                                             ; preds = %1601
  %1603 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1591, i64 0, i32 2
  %1604 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1603, align 8
  %1605 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1604) #12
  %1606 = load i32*, i32** %1596, align 8
  %1607 = getelementptr inbounds i32, i32* %1606, i64 %1595
  store i32 %1605, i32* %1607, align 4
  %1608 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1609 = load i32, i32* %1592, align 4
  %1610 = and i32 %1609, 16777215
  %1611 = zext i32 %1610 to i64
  br label %1623

1612:                                             ; preds = %1589
  br i1 %1600, label %1613, label %1623

1613:                                             ; preds = %1612
  %1614 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1591, i64 0, i32 2
  %1615 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1614, align 8
  %1616 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1615) #12
  %1617 = load i32*, i32** %1596, align 8
  %1618 = getelementptr inbounds i32, i32* %1617, i64 %1595
  store i32 %1616, i32* %1618, align 4
  %1619 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1620 = load i32, i32* %1592, align 4
  %1621 = and i32 %1620, 16777215
  %1622 = zext i32 %1621 to i64
  br label %1623

1623:                                             ; preds = %1613, %1612, %1602, %1601
  %1624 = phi i32 [ %1599, %1601 ], [ %1605, %1602 ], [ %1599, %1612 ], [ %1616, %1613 ]
  %1625 = phi i64 [ 2989297238017, %1601 ], [ 2989297238017, %1602 ], [ 377957122049, %1612 ], [ 377957122049, %1613 ]
  %1626 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %1591, %1601 ], [ %1608, %1602 ], [ %1591, %1612 ], [ %1619, %1613 ]
  %1627 = phi i64 [ %1595, %1601 ], [ %1611, %1602 ], [ %1595, %1612 ], [ %1622, %1613 ]
  %1628 = zext i32 %1624 to i64
  %1629 = shl nuw nsw i64 %1628, 3
  %1630 = or i64 %1629, %1625
  %1631 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1626, i64 0, i32 13, i32 0, i32 0
  %1632 = load i64*, i64** %1631, align 8
  %1633 = lshr i64 %1627, 6
  %1634 = getelementptr inbounds i64, i64* %1632, i64 %1633
  %1635 = and i64 %1627, 63
  %1636 = shl i64 1, %1635
  %1637 = load i64, i64* %1634, align 8
  %1638 = or i64 %1637, %1636
  store i64 %1638, i64* %1634, align 8
  %1639 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %1640 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1639, align 8
  %1641 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %1642 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1641, align 8
  %1643 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1640, %1642
  %1644 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1642 to i64
  br i1 %1643, label %1645, label %1650

1645:                                             ; preds = %1623
  %1646 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1640, i64 0, i32 0
  store i64 %1630, i64* %1646, align 8
  %1647 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1640, i64 1
  %1648 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1647 to i64
  %1649 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1639 to i64*
  store i64 %1648, i64* %1649, align 8
  br label %2152

1650:                                             ; preds = %1623
  %1651 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1640 to i64
  %1652 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1639 to i64*
  %1653 = bitcast %"class.std::__1::vector.1241"* %1590 to i64*
  %1654 = load i64, i64* %1653, align 8
  %1655 = sub i64 %1651, %1654
  %1656 = ashr exact i64 %1655, 3
  %1657 = add nsw i64 %1656, 1
  %1658 = icmp ugt i64 %1657, 268435455
  br i1 %1658, label %1659, label %1661

1659:                                             ; preds = %1650
  %1660 = bitcast %"class.std::__1::vector.1241"* %1590 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1660) #13
  unreachable

1661:                                             ; preds = %1650
  %1662 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1641 to i64*
  %1663 = sub i64 %1644, %1654
  %1664 = ashr exact i64 %1663, 3
  %1665 = icmp ult i64 %1664, 134217727
  br i1 %1665, label %1666, label %1671

1666:                                             ; preds = %1661
  %1667 = ashr exact i64 %1663, 2
  %1668 = icmp ult i64 %1667, %1657
  %1669 = select i1 %1668, i64 %1657, i64 %1667
  %1670 = icmp eq i64 %1669, 0
  br i1 %1670, label %1689, label %1671

1671:                                             ; preds = %1666, %1661
  %1672 = phi i64 [ %1669, %1666 ], [ 268435455, %1661 ]
  %1673 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1674 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1673, align 8
  %1675 = shl i64 %1672, 3
  %1676 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1674, i64 0, i32 2
  %1677 = load i64, i64* %1676, align 8
  %1678 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1674, i64 0, i32 3
  %1679 = load i64, i64* %1678, align 8
  %1680 = sub i64 %1679, %1677
  %1681 = icmp ugt i64 %1675, %1680
  br i1 %1681, label %1682, label %1684, !prof !2

1682:                                             ; preds = %1671
  %1683 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1674, i64 %1675) #12
  br label %1686

1684:                                             ; preds = %1671
  %1685 = add i64 %1677, %1675
  store i64 %1685, i64* %1676, align 8
  br label %1686

1686:                                             ; preds = %1684, %1682
  %1687 = phi i64 [ %1683, %1682 ], [ %1677, %1684 ]
  %1688 = inttoptr i64 %1687 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1689

1689:                                             ; preds = %1686, %1666
  %1690 = phi i64 [ %1672, %1686 ], [ 0, %1666 ]
  %1691 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1688, %1686 ], [ null, %1666 ]
  %1692 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1691, i64 %1656
  %1693 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1691, i64 %1690
  %1694 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1693 to i64
  %1695 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1692, i64 0, i32 0
  store i64 %1630, i64* %1695, align 8
  %1696 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1692, i64 1
  %1697 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1696 to i64
  %1698 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %1590, i64 0, i32 0, i32 0
  %1699 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1698, align 8
  %1700 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1699 to i64
  %1701 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1639, align 8
  %1702 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1701, %1699
  br i1 %1702, label %1855, label %1703

1703:                                             ; preds = %1689
  %1704 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 -1, i32 0
  %1705 = ptrtoint i64* %1704 to i64
  %1706 = sub i64 %1705, %1700
  %1707 = lshr i64 %1706, 3
  %1708 = add nuw nsw i64 %1707, 1
  %1709 = icmp ult i64 %1708, 4
  br i1 %1709, label %1799, label %1710

1710:                                             ; preds = %1703
  %1711 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 -1, i32 0
  %1712 = ptrtoint i64* %1711 to i64
  %1713 = sub i64 %1712, %1700
  %1714 = lshr i64 %1713, 3
  %1715 = xor i64 %1714, -1
  %1716 = add nsw i64 %1656, %1715
  %1717 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1691, i64 %1716
  %1718 = xor i64 %1714, -1
  %1719 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 %1718
  %1720 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1717, %1701
  %1721 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1719, %1692
  %1722 = and i1 %1720, %1721
  br i1 %1722, label %1799, label %1723

1723:                                             ; preds = %1710
  %1724 = and i64 %1708, 4611686018427387900
  %1725 = sub nsw i64 0, %1724
  %1726 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1692, i64 %1725
  %1727 = sub nsw i64 0, %1724
  %1728 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 %1727
  %1729 = add nsw i64 %1724, -4
  %1730 = lshr exact i64 %1729, 2
  %1731 = add nuw nsw i64 %1730, 1
  %1732 = and i64 %1731, 1
  %1733 = icmp eq i64 %1729, 0
  br i1 %1733, label %1776, label %1734

1734:                                             ; preds = %1723
  %1735 = sub nuw nsw i64 %1731, %1732
  %1736 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 -1
  %1737 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 -1
  br label %1738

1738:                                             ; preds = %1738, %1734
  %1739 = phi i64 [ 0, %1734 ], [ %1773, %1738 ]
  %1740 = phi i64 [ %1735, %1734 ], [ %1774, %1738 ]
  %1741 = sub i64 0, %1739
  %1742 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1692, i64 %1741
  %1743 = sub i64 0, %1739
  %1744 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1736, i64 %1743
  %1745 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1744, i64 0, i32 0
  %1746 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1742, i64 -1, i32 0
  %1747 = getelementptr inbounds i64, i64* %1745, i64 -1
  %1748 = bitcast i64* %1747 to <2 x i64>*
  %1749 = load <2 x i64>, <2 x i64>* %1748, align 8, !alias.scope !222
  %1750 = getelementptr inbounds i64, i64* %1745, i64 -3
  %1751 = bitcast i64* %1750 to <2 x i64>*
  %1752 = load <2 x i64>, <2 x i64>* %1751, align 8, !alias.scope !222
  %1753 = getelementptr inbounds i64, i64* %1746, i64 -1
  %1754 = bitcast i64* %1753 to <2 x i64>*
  store <2 x i64> %1749, <2 x i64>* %1754, align 8, !alias.scope !225, !noalias !222
  %1755 = getelementptr inbounds i64, i64* %1746, i64 -3
  %1756 = bitcast i64* %1755 to <2 x i64>*
  store <2 x i64> %1752, <2 x i64>* %1756, align 8, !alias.scope !225, !noalias !222
  %1757 = sub nuw nsw i64 -4, %1739
  %1758 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1692, i64 %1757
  %1759 = sub nuw nsw i64 -4, %1739
  %1760 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1737, i64 %1759
  %1761 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1760, i64 0, i32 0
  %1762 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1758, i64 -1, i32 0
  %1763 = getelementptr inbounds i64, i64* %1761, i64 -1
  %1764 = bitcast i64* %1763 to <2 x i64>*
  %1765 = load <2 x i64>, <2 x i64>* %1764, align 8, !alias.scope !222
  %1766 = getelementptr inbounds i64, i64* %1761, i64 -3
  %1767 = bitcast i64* %1766 to <2 x i64>*
  %1768 = load <2 x i64>, <2 x i64>* %1767, align 8, !alias.scope !222
  %1769 = getelementptr inbounds i64, i64* %1762, i64 -1
  %1770 = bitcast i64* %1769 to <2 x i64>*
  store <2 x i64> %1765, <2 x i64>* %1770, align 8, !alias.scope !225, !noalias !222
  %1771 = getelementptr inbounds i64, i64* %1762, i64 -3
  %1772 = bitcast i64* %1771 to <2 x i64>*
  store <2 x i64> %1768, <2 x i64>* %1772, align 8, !alias.scope !225, !noalias !222
  %1773 = add i64 %1739, 8
  %1774 = add i64 %1740, -2
  %1775 = icmp eq i64 %1774, 0
  br i1 %1775, label %1776, label %1738, !llvm.loop !227

1776:                                             ; preds = %1738, %1723
  %1777 = phi i64 [ 0, %1723 ], [ %1773, %1738 ]
  %1778 = icmp eq i64 %1732, 0
  br i1 %1778, label %1797, label %1779

1779:                                             ; preds = %1776
  %1780 = sub i64 0, %1777
  %1781 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1692, i64 %1780
  %1782 = sub i64 0, %1777
  %1783 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1701, i64 -1
  %1784 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1783, i64 %1782
  %1785 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1784, i64 0, i32 0
  %1786 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1781, i64 -1, i32 0
  %1787 = getelementptr inbounds i64, i64* %1785, i64 -1
  %1788 = bitcast i64* %1787 to <2 x i64>*
  %1789 = load <2 x i64>, <2 x i64>* %1788, align 8, !alias.scope !222
  %1790 = getelementptr inbounds i64, i64* %1785, i64 -3
  %1791 = bitcast i64* %1790 to <2 x i64>*
  %1792 = load <2 x i64>, <2 x i64>* %1791, align 8, !alias.scope !222
  %1793 = getelementptr inbounds i64, i64* %1786, i64 -1
  %1794 = bitcast i64* %1793 to <2 x i64>*
  store <2 x i64> %1789, <2 x i64>* %1794, align 8, !alias.scope !225, !noalias !222
  %1795 = getelementptr inbounds i64, i64* %1786, i64 -3
  %1796 = bitcast i64* %1795 to <2 x i64>*
  store <2 x i64> %1792, <2 x i64>* %1796, align 8, !alias.scope !225, !noalias !222
  br label %1797

1797:                                             ; preds = %1776, %1779
  %1798 = icmp eq i64 %1708, %1724
  br i1 %1798, label %1855, label %1799

1799:                                             ; preds = %1797, %1710, %1703
  %1800 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1692, %1710 ], [ %1692, %1703 ], [ %1726, %1797 ]
  %1801 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1701, %1710 ], [ %1701, %1703 ], [ %1728, %1797 ]
  %1802 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1801, i64 -1, i32 0
  %1803 = ptrtoint i64* %1802 to i64
  %1804 = sub i64 %1803, %1700
  %1805 = lshr i64 %1804, 3
  %1806 = add nuw nsw i64 %1805, 1
  %1807 = and i64 %1806, 7
  %1808 = icmp eq i64 %1807, 0
  br i1 %1808, label %1820, label %1809

1809:                                             ; preds = %1799, %1809
  %1810 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1817, %1809 ], [ %1800, %1799 ]
  %1811 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1813, %1809 ], [ %1801, %1799 ]
  %1812 = phi i64 [ %1818, %1809 ], [ %1807, %1799 ]
  %1813 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1811, i64 -1
  %1814 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1813, i64 0, i32 0
  %1815 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1810, i64 -1, i32 0
  %1816 = load i64, i64* %1814, align 8
  store i64 %1816, i64* %1815, align 8
  %1817 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1810, i64 -1
  %1818 = add i64 %1812, -1
  %1819 = icmp eq i64 %1818, 0
  br i1 %1819, label %1820, label %1809, !llvm.loop !228

1820:                                             ; preds = %1809, %1799
  %1821 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %1799 ], [ %1817, %1809 ]
  %1822 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1800, %1799 ], [ %1817, %1809 ]
  %1823 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1801, %1799 ], [ %1813, %1809 ]
  %1824 = icmp ult i64 %1804, 56
  br i1 %1824, label %1855, label %1825

1825:                                             ; preds = %1820, %1825
  %1826 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1853, %1825 ], [ %1822, %1820 ]
  %1827 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1849, %1825 ], [ %1823, %1820 ]
  %1828 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -1, i32 0
  %1829 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -1, i32 0
  %1830 = load i64, i64* %1828, align 8
  store i64 %1830, i64* %1829, align 8
  %1831 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -2, i32 0
  %1832 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -2, i32 0
  %1833 = load i64, i64* %1831, align 8
  store i64 %1833, i64* %1832, align 8
  %1834 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -3, i32 0
  %1835 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -3, i32 0
  %1836 = load i64, i64* %1834, align 8
  store i64 %1836, i64* %1835, align 8
  %1837 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -4, i32 0
  %1838 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -4, i32 0
  %1839 = load i64, i64* %1837, align 8
  store i64 %1839, i64* %1838, align 8
  %1840 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -5, i32 0
  %1841 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -5, i32 0
  %1842 = load i64, i64* %1840, align 8
  store i64 %1842, i64* %1841, align 8
  %1843 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -6, i32 0
  %1844 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -6, i32 0
  %1845 = load i64, i64* %1843, align 8
  store i64 %1845, i64* %1844, align 8
  %1846 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -7, i32 0
  %1847 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -7, i32 0
  %1848 = load i64, i64* %1846, align 8
  store i64 %1848, i64* %1847, align 8
  %1849 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1827, i64 -8
  %1850 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1849, i64 0, i32 0
  %1851 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -8, i32 0
  %1852 = load i64, i64* %1850, align 8
  store i64 %1852, i64* %1851, align 8
  %1853 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1826, i64 -8
  %1854 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1849, %1699
  br i1 %1854, label %1855, label %1825, !llvm.loop !229

1855:                                             ; preds = %1820, %1825, %1797, %1689
  %1856 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1692, %1689 ], [ %1726, %1797 ], [ %1821, %1820 ], [ %1853, %1825 ]
  %1857 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1856 to i64
  store i64 %1857, i64* %1653, align 8
  store i64 %1697, i64* %1652, align 8
  store i64 %1694, i64* %1662, align 8
  br label %2152

1858:                                             ; preds = %666
  %1859 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0
  %1860 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %674, i64 0, i32 3
  %1861 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %1860 to i64*
  %1862 = load i64, i64* %1861, align 4
  %1863 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1864 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %669, i64 0, i32 3
  %1865 = load i32, i32* %1864, align 4
  %1866 = and i32 %1865, 16777215
  %1867 = zext i32 %1866 to i64
  %1868 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1863, i64 0, i32 15, i32 0, i32 0, i32 0
  %1869 = load i32*, i32** %1868, align 8
  %1870 = getelementptr inbounds i32, i32* %1869, i64 %1867
  %1871 = load i32, i32* %1870, align 4
  %1872 = icmp eq i32 %1871, -1
  br i1 %1872, label %1873, label %1879

1873:                                             ; preds = %1858
  %1874 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1863, i64 0, i32 2
  %1875 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1874, align 8
  %1876 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1875) #12
  %1877 = load i32*, i32** %1868, align 8
  %1878 = getelementptr inbounds i32, i32* %1877, i64 %1867
  store i32 %1876, i32* %1878, align 4
  br label %1879

1879:                                             ; preds = %1873, %1858
  %1880 = phi i32 [ %1876, %1873 ], [ %1871, %1858 ]
  %1881 = trunc i64 %1862 to i32
  %1882 = lshr i64 %1862, 32
  %1883 = and i32 %1881, 1
  %1884 = icmp eq i32 %1883, 0
  %1885 = icmp ugt i32 %1881, -3
  %1886 = and i1 %1885, %1884
  br i1 %1886, label %1887, label %1891

1887:                                             ; preds = %1879
  %1888 = zext i32 %1880 to i64
  %1889 = shl nuw nsw i64 %1888, 3
  %1890 = or i64 %1889, 927712935937
  br label %1919

1891:                                             ; preds = %1879
  %1892 = and i32 %1881, -2147483647
  switch i32 %1892, label %1907 [
    i32 -2147483647, label %1893
    i32 1, label %1900
  ]

1893:                                             ; preds = %1891
  %1894 = lshr i64 %1862, 1
  %1895 = zext i32 %1880 to i64
  %1896 = shl nuw nsw i64 %1895, 3
  %1897 = shl i64 %1894, 36
  %1898 = or i64 %1897, %1896
  %1899 = or i64 %1898, 1
  br label %1919

1900:                                             ; preds = %1891
  %1901 = lshr i64 %1862, 1
  %1902 = zext i32 %1880 to i64
  %1903 = shl nuw nsw i64 %1902, 3
  %1904 = shl i64 %1901, 36
  %1905 = or i64 %1904, %1903
  %1906 = or i64 %1905, 1
  br label %1919

1907:                                             ; preds = %1891
  %1908 = trunc i64 %1882 to i8
  %1909 = icmp ugt i8 %1908, 11
  %1910 = lshr i64 %1862, 1
  %1911 = zext i32 %1880 to i64
  %1912 = shl nuw nsw i64 %1911, 3
  %1913 = shl i64 %1910, 41
  %1914 = or i64 %1912, %1913
  br i1 %1909, label %1915, label %1917

1915:                                             ; preds = %1907
  %1916 = or i64 %1914, 858993459201
  br label %1919

1917:                                             ; preds = %1907
  %1918 = or i64 %1914, 790273982465
  br label %1919

1919:                                             ; preds = %1887, %1893, %1900, %1915, %1917
  %1920 = phi i64 [ %1890, %1887 ], [ %1899, %1893 ], [ %1906, %1900 ], [ %1916, %1915 ], [ %1918, %1917 ]
  %1921 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %1922 = load i32, i32* %1864, align 4
  %1923 = and i32 %1922, 16777215
  %1924 = zext i32 %1923 to i64
  %1925 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %1921, i64 0, i32 13, i32 0, i32 0
  %1926 = load i64*, i64** %1925, align 8
  %1927 = lshr i64 %1924, 6
  %1928 = getelementptr inbounds i64, i64* %1926, i64 %1927
  %1929 = and i64 %1924, 63
  %1930 = shl i64 1, %1929
  %1931 = load i64, i64* %1928, align 8
  %1932 = or i64 %1930, %1931
  store i64 %1932, i64* %1928, align 8
  %1933 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %1934 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1933, align 8
  %1935 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %1936 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1935, align 8
  %1937 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %1934, %1936
  %1938 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1936 to i64
  br i1 %1937, label %1939, label %1944

1939:                                             ; preds = %1919
  %1940 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1934, i64 0, i32 0
  store i64 %1920, i64* %1940, align 8
  %1941 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1934, i64 1
  %1942 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1941 to i64
  %1943 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1933 to i64*
  store i64 %1942, i64* %1943, align 8
  br label %2152

1944:                                             ; preds = %1919
  %1945 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1934 to i64
  %1946 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1933 to i64*
  %1947 = bitcast %"class.std::__1::vector.1241"* %1859 to i64*
  %1948 = load i64, i64* %1947, align 8
  %1949 = sub i64 %1945, %1948
  %1950 = ashr exact i64 %1949, 3
  %1951 = add nsw i64 %1950, 1
  %1952 = icmp ugt i64 %1951, 268435455
  br i1 %1952, label %1953, label %1955

1953:                                             ; preds = %1944
  %1954 = bitcast %"class.std::__1::vector.1241"* %1859 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1954) #13
  unreachable

1955:                                             ; preds = %1944
  %1956 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %1935 to i64*
  %1957 = sub i64 %1938, %1948
  %1958 = ashr exact i64 %1957, 3
  %1959 = icmp ult i64 %1958, 134217727
  br i1 %1959, label %1960, label %1965

1960:                                             ; preds = %1955
  %1961 = ashr exact i64 %1957, 2
  %1962 = icmp ult i64 %1961, %1951
  %1963 = select i1 %1962, i64 %1951, i64 %1961
  %1964 = icmp eq i64 %1963, 0
  br i1 %1964, label %1983, label %1965

1965:                                             ; preds = %1960, %1955
  %1966 = phi i64 [ %1963, %1960 ], [ 268435455, %1955 ]
  %1967 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1968 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1967, align 8
  %1969 = shl i64 %1966, 3
  %1970 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1968, i64 0, i32 2
  %1971 = load i64, i64* %1970, align 8
  %1972 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1968, i64 0, i32 3
  %1973 = load i64, i64* %1972, align 8
  %1974 = sub i64 %1973, %1971
  %1975 = icmp ugt i64 %1969, %1974
  br i1 %1975, label %1976, label %1978, !prof !2

1976:                                             ; preds = %1965
  %1977 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1968, i64 %1969) #12
  br label %1980

1978:                                             ; preds = %1965
  %1979 = add i64 %1971, %1969
  store i64 %1979, i64* %1970, align 8
  br label %1980

1980:                                             ; preds = %1978, %1976
  %1981 = phi i64 [ %1977, %1976 ], [ %1971, %1978 ]
  %1982 = inttoptr i64 %1981 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %1983

1983:                                             ; preds = %1980, %1960
  %1984 = phi i64 [ %1966, %1980 ], [ 0, %1960 ]
  %1985 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1982, %1980 ], [ null, %1960 ]
  %1986 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1985, i64 %1950
  %1987 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1985, i64 %1984
  %1988 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1987 to i64
  %1989 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1986, i64 0, i32 0
  store i64 %1920, i64* %1989, align 8
  %1990 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1986, i64 1
  %1991 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1990 to i64
  %1992 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %1859, i64 0, i32 0, i32 0
  %1993 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1992, align 8
  %1994 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1993 to i64
  %1995 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %1933, align 8
  %1996 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1995, %1993
  br i1 %1996, label %2149, label %1997

1997:                                             ; preds = %1983
  %1998 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 -1, i32 0
  %1999 = ptrtoint i64* %1998 to i64
  %2000 = sub i64 %1999, %1994
  %2001 = lshr i64 %2000, 3
  %2002 = add nuw nsw i64 %2001, 1
  %2003 = icmp ult i64 %2002, 4
  br i1 %2003, label %2093, label %2004

2004:                                             ; preds = %1997
  %2005 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 -1, i32 0
  %2006 = ptrtoint i64* %2005 to i64
  %2007 = sub i64 %2006, %1994
  %2008 = lshr i64 %2007, 3
  %2009 = xor i64 %2008, -1
  %2010 = add nsw i64 %1950, %2009
  %2011 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1985, i64 %2010
  %2012 = xor i64 %2008, -1
  %2013 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 %2012
  %2014 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2011, %1995
  %2015 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2013, %1986
  %2016 = and i1 %2014, %2015
  br i1 %2016, label %2093, label %2017

2017:                                             ; preds = %2004
  %2018 = and i64 %2002, 4611686018427387900
  %2019 = sub nsw i64 0, %2018
  %2020 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1986, i64 %2019
  %2021 = sub nsw i64 0, %2018
  %2022 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 %2021
  %2023 = add nsw i64 %2018, -4
  %2024 = lshr exact i64 %2023, 2
  %2025 = add nuw nsw i64 %2024, 1
  %2026 = and i64 %2025, 1
  %2027 = icmp eq i64 %2023, 0
  br i1 %2027, label %2070, label %2028

2028:                                             ; preds = %2017
  %2029 = sub nuw nsw i64 %2025, %2026
  %2030 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 -1
  %2031 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 -1
  br label %2032

2032:                                             ; preds = %2032, %2028
  %2033 = phi i64 [ 0, %2028 ], [ %2067, %2032 ]
  %2034 = phi i64 [ %2029, %2028 ], [ %2068, %2032 ]
  %2035 = sub i64 0, %2033
  %2036 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1986, i64 %2035
  %2037 = sub i64 0, %2033
  %2038 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2030, i64 %2037
  %2039 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2038, i64 0, i32 0
  %2040 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2036, i64 -1, i32 0
  %2041 = getelementptr inbounds i64, i64* %2039, i64 -1
  %2042 = bitcast i64* %2041 to <2 x i64>*
  %2043 = load <2 x i64>, <2 x i64>* %2042, align 8, !alias.scope !230
  %2044 = getelementptr inbounds i64, i64* %2039, i64 -3
  %2045 = bitcast i64* %2044 to <2 x i64>*
  %2046 = load <2 x i64>, <2 x i64>* %2045, align 8, !alias.scope !230
  %2047 = getelementptr inbounds i64, i64* %2040, i64 -1
  %2048 = bitcast i64* %2047 to <2 x i64>*
  store <2 x i64> %2043, <2 x i64>* %2048, align 8, !alias.scope !233, !noalias !230
  %2049 = getelementptr inbounds i64, i64* %2040, i64 -3
  %2050 = bitcast i64* %2049 to <2 x i64>*
  store <2 x i64> %2046, <2 x i64>* %2050, align 8, !alias.scope !233, !noalias !230
  %2051 = sub nuw nsw i64 -4, %2033
  %2052 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1986, i64 %2051
  %2053 = sub nuw nsw i64 -4, %2033
  %2054 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2031, i64 %2053
  %2055 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2054, i64 0, i32 0
  %2056 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2052, i64 -1, i32 0
  %2057 = getelementptr inbounds i64, i64* %2055, i64 -1
  %2058 = bitcast i64* %2057 to <2 x i64>*
  %2059 = load <2 x i64>, <2 x i64>* %2058, align 8, !alias.scope !230
  %2060 = getelementptr inbounds i64, i64* %2055, i64 -3
  %2061 = bitcast i64* %2060 to <2 x i64>*
  %2062 = load <2 x i64>, <2 x i64>* %2061, align 8, !alias.scope !230
  %2063 = getelementptr inbounds i64, i64* %2056, i64 -1
  %2064 = bitcast i64* %2063 to <2 x i64>*
  store <2 x i64> %2059, <2 x i64>* %2064, align 8, !alias.scope !233, !noalias !230
  %2065 = getelementptr inbounds i64, i64* %2056, i64 -3
  %2066 = bitcast i64* %2065 to <2 x i64>*
  store <2 x i64> %2062, <2 x i64>* %2066, align 8, !alias.scope !233, !noalias !230
  %2067 = add i64 %2033, 8
  %2068 = add i64 %2034, -2
  %2069 = icmp eq i64 %2068, 0
  br i1 %2069, label %2070, label %2032, !llvm.loop !235

2070:                                             ; preds = %2032, %2017
  %2071 = phi i64 [ 0, %2017 ], [ %2067, %2032 ]
  %2072 = icmp eq i64 %2026, 0
  br i1 %2072, label %2091, label %2073

2073:                                             ; preds = %2070
  %2074 = sub i64 0, %2071
  %2075 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1986, i64 %2074
  %2076 = sub i64 0, %2071
  %2077 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1995, i64 -1
  %2078 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2077, i64 %2076
  %2079 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2078, i64 0, i32 0
  %2080 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2075, i64 -1, i32 0
  %2081 = getelementptr inbounds i64, i64* %2079, i64 -1
  %2082 = bitcast i64* %2081 to <2 x i64>*
  %2083 = load <2 x i64>, <2 x i64>* %2082, align 8, !alias.scope !230
  %2084 = getelementptr inbounds i64, i64* %2079, i64 -3
  %2085 = bitcast i64* %2084 to <2 x i64>*
  %2086 = load <2 x i64>, <2 x i64>* %2085, align 8, !alias.scope !230
  %2087 = getelementptr inbounds i64, i64* %2080, i64 -1
  %2088 = bitcast i64* %2087 to <2 x i64>*
  store <2 x i64> %2083, <2 x i64>* %2088, align 8, !alias.scope !233, !noalias !230
  %2089 = getelementptr inbounds i64, i64* %2080, i64 -3
  %2090 = bitcast i64* %2089 to <2 x i64>*
  store <2 x i64> %2086, <2 x i64>* %2090, align 8, !alias.scope !233, !noalias !230
  br label %2091

2091:                                             ; preds = %2070, %2073
  %2092 = icmp eq i64 %2002, %2018
  br i1 %2092, label %2149, label %2093

2093:                                             ; preds = %2091, %2004, %1997
  %2094 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1986, %2004 ], [ %1986, %1997 ], [ %2020, %2091 ]
  %2095 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1995, %2004 ], [ %1995, %1997 ], [ %2022, %2091 ]
  %2096 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2095, i64 -1, i32 0
  %2097 = ptrtoint i64* %2096 to i64
  %2098 = sub i64 %2097, %1994
  %2099 = lshr i64 %2098, 3
  %2100 = add nuw nsw i64 %2099, 1
  %2101 = and i64 %2100, 7
  %2102 = icmp eq i64 %2101, 0
  br i1 %2102, label %2114, label %2103

2103:                                             ; preds = %2093, %2103
  %2104 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2111, %2103 ], [ %2094, %2093 ]
  %2105 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2107, %2103 ], [ %2095, %2093 ]
  %2106 = phi i64 [ %2112, %2103 ], [ %2101, %2093 ]
  %2107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2105, i64 -1
  %2108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2107, i64 0, i32 0
  %2109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2104, i64 -1, i32 0
  %2110 = load i64, i64* %2108, align 8
  store i64 %2110, i64* %2109, align 8
  %2111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2104, i64 -1
  %2112 = add i64 %2106, -1
  %2113 = icmp eq i64 %2112, 0
  br i1 %2113, label %2114, label %2103, !llvm.loop !236

2114:                                             ; preds = %2103, %2093
  %2115 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %2093 ], [ %2111, %2103 ]
  %2116 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2094, %2093 ], [ %2111, %2103 ]
  %2117 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2095, %2093 ], [ %2107, %2103 ]
  %2118 = icmp ult i64 %2098, 56
  br i1 %2118, label %2149, label %2119

2119:                                             ; preds = %2114, %2119
  %2120 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2147, %2119 ], [ %2116, %2114 ]
  %2121 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2143, %2119 ], [ %2117, %2114 ]
  %2122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -1, i32 0
  %2123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -1, i32 0
  %2124 = load i64, i64* %2122, align 8
  store i64 %2124, i64* %2123, align 8
  %2125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -2, i32 0
  %2126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -2, i32 0
  %2127 = load i64, i64* %2125, align 8
  store i64 %2127, i64* %2126, align 8
  %2128 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -3, i32 0
  %2129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -3, i32 0
  %2130 = load i64, i64* %2128, align 8
  store i64 %2130, i64* %2129, align 8
  %2131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -4, i32 0
  %2132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -4, i32 0
  %2133 = load i64, i64* %2131, align 8
  store i64 %2133, i64* %2132, align 8
  %2134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -5, i32 0
  %2135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -5, i32 0
  %2136 = load i64, i64* %2134, align 8
  store i64 %2136, i64* %2135, align 8
  %2137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -6, i32 0
  %2138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -6, i32 0
  %2139 = load i64, i64* %2137, align 8
  store i64 %2139, i64* %2138, align 8
  %2140 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -7, i32 0
  %2141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -7, i32 0
  %2142 = load i64, i64* %2140, align 8
  store i64 %2142, i64* %2141, align 8
  %2143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2121, i64 -8
  %2144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2143, i64 0, i32 0
  %2145 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -8, i32 0
  %2146 = load i64, i64* %2144, align 8
  store i64 %2146, i64* %2145, align 8
  %2147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2120, i64 -8
  %2148 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2143, %1993
  br i1 %2148, label %2149, label %2119, !llvm.loop !237

2149:                                             ; preds = %2114, %2119, %2091, %1983
  %2150 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1986, %1983 ], [ %2020, %2091 ], [ %2115, %2114 ], [ %2147, %2119 ]
  %2151 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2150 to i64
  store i64 %2151, i64* %1947, align 8
  store i64 %1991, i64* %1946, align 8
  store i64 %1988, i64* %1956, align 8
  br label %2152

2152:                                             ; preds = %2149, %1939, %1855, %1645, %1586, %1376, %1282, %1072, %979, %769, %666
  %2153 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4
  %2154 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2154, i64 0, i32 2
  %2156 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2155, align 8
  %2157 = bitcast %"class.v8::internal::compiler::Constant"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2157) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %11, i32 -1) #12
  %2158 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %2156, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2157) #12
  %2159 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %2160 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %2161 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %2162 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2161, align 8
  %2163 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2160, %2162
  %2164 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2162 to i64
  br i1 %2163, label %2165, label %2170

2165:                                             ; preds = %2152
  %2166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2160, i64 0, i32 0
  store i64 %2158, i64* %2166, align 8
  %2167 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2160, i64 1
  %2168 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2167 to i64
  %2169 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  store i64 %2168, i64* %2169, align 8
  br label %2378

2170:                                             ; preds = %2152
  %2171 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2160 to i64
  %2172 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  %2173 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to i64*
  %2174 = load i64, i64* %2173, align 8
  %2175 = sub i64 %2171, %2174
  %2176 = ashr exact i64 %2175, 3
  %2177 = add nsw i64 %2176, 1
  %2178 = icmp ugt i64 %2177, 268435455
  br i1 %2178, label %2179, label %2181

2179:                                             ; preds = %2170
  %2180 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2180) #13
  unreachable

2181:                                             ; preds = %2170
  %2182 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2161 to i64*
  %2183 = sub i64 %2164, %2174
  %2184 = ashr exact i64 %2183, 3
  %2185 = icmp ult i64 %2184, 134217727
  br i1 %2185, label %2186, label %2191

2186:                                             ; preds = %2181
  %2187 = ashr exact i64 %2183, 2
  %2188 = icmp ult i64 %2187, %2177
  %2189 = select i1 %2188, i64 %2177, i64 %2187
  %2190 = icmp eq i64 %2189, 0
  br i1 %2190, label %2209, label %2191

2191:                                             ; preds = %2186, %2181
  %2192 = phi i64 [ %2189, %2186 ], [ 268435455, %2181 ]
  %2193 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %2194 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2193, align 8
  %2195 = shl i64 %2192, 3
  %2196 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2194, i64 0, i32 2
  %2197 = load i64, i64* %2196, align 8
  %2198 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2194, i64 0, i32 3
  %2199 = load i64, i64* %2198, align 8
  %2200 = sub i64 %2199, %2197
  %2201 = icmp ugt i64 %2195, %2200
  br i1 %2201, label %2202, label %2204, !prof !2

2202:                                             ; preds = %2191
  %2203 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2194, i64 %2195) #12
  br label %2206

2204:                                             ; preds = %2191
  %2205 = add i64 %2197, %2195
  store i64 %2205, i64* %2196, align 8
  br label %2206

2206:                                             ; preds = %2204, %2202
  %2207 = phi i64 [ %2203, %2202 ], [ %2197, %2204 ]
  %2208 = inttoptr i64 %2207 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %2209

2209:                                             ; preds = %2206, %2186
  %2210 = phi i64 [ %2192, %2206 ], [ 0, %2186 ]
  %2211 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2208, %2206 ], [ null, %2186 ]
  %2212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2211, i64 %2176
  %2213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2211, i64 %2210
  %2214 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2213 to i64
  %2215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2212, i64 0, i32 0
  store i64 %2158, i64* %2215, align 8
  %2216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2212, i64 1
  %2217 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2216 to i64
  %2218 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2153, i64 0, i32 0, i32 0, i32 0
  %2219 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2218, align 8
  %2220 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2219 to i64
  %2221 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %2222 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2221, %2219
  br i1 %2222, label %2375, label %2223

2223:                                             ; preds = %2209
  %2224 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 -1, i32 0
  %2225 = ptrtoint i64* %2224 to i64
  %2226 = sub i64 %2225, %2220
  %2227 = lshr i64 %2226, 3
  %2228 = add nuw nsw i64 %2227, 1
  %2229 = icmp ult i64 %2228, 4
  br i1 %2229, label %2319, label %2230

2230:                                             ; preds = %2223
  %2231 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 -1, i32 0
  %2232 = ptrtoint i64* %2231 to i64
  %2233 = sub i64 %2232, %2220
  %2234 = lshr i64 %2233, 3
  %2235 = xor i64 %2234, -1
  %2236 = add nsw i64 %2176, %2235
  %2237 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2211, i64 %2236
  %2238 = xor i64 %2234, -1
  %2239 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 %2238
  %2240 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2237, %2221
  %2241 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2239, %2212
  %2242 = and i1 %2240, %2241
  br i1 %2242, label %2319, label %2243

2243:                                             ; preds = %2230
  %2244 = and i64 %2228, 4611686018427387900
  %2245 = sub nsw i64 0, %2244
  %2246 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2212, i64 %2245
  %2247 = sub nsw i64 0, %2244
  %2248 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 %2247
  %2249 = add nsw i64 %2244, -4
  %2250 = lshr exact i64 %2249, 2
  %2251 = add nuw nsw i64 %2250, 1
  %2252 = and i64 %2251, 1
  %2253 = icmp eq i64 %2249, 0
  br i1 %2253, label %2296, label %2254

2254:                                             ; preds = %2243
  %2255 = sub nuw nsw i64 %2251, %2252
  %2256 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 -1
  %2257 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 -1
  br label %2258

2258:                                             ; preds = %2258, %2254
  %2259 = phi i64 [ 0, %2254 ], [ %2293, %2258 ]
  %2260 = phi i64 [ %2255, %2254 ], [ %2294, %2258 ]
  %2261 = sub i64 0, %2259
  %2262 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2212, i64 %2261
  %2263 = sub i64 0, %2259
  %2264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2256, i64 %2263
  %2265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2264, i64 0, i32 0
  %2266 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2262, i64 -1, i32 0
  %2267 = getelementptr inbounds i64, i64* %2265, i64 -1
  %2268 = bitcast i64* %2267 to <2 x i64>*
  %2269 = load <2 x i64>, <2 x i64>* %2268, align 8, !alias.scope !238
  %2270 = getelementptr inbounds i64, i64* %2265, i64 -3
  %2271 = bitcast i64* %2270 to <2 x i64>*
  %2272 = load <2 x i64>, <2 x i64>* %2271, align 8, !alias.scope !238
  %2273 = getelementptr inbounds i64, i64* %2266, i64 -1
  %2274 = bitcast i64* %2273 to <2 x i64>*
  store <2 x i64> %2269, <2 x i64>* %2274, align 8, !alias.scope !241, !noalias !238
  %2275 = getelementptr inbounds i64, i64* %2266, i64 -3
  %2276 = bitcast i64* %2275 to <2 x i64>*
  store <2 x i64> %2272, <2 x i64>* %2276, align 8, !alias.scope !241, !noalias !238
  %2277 = sub nuw nsw i64 -4, %2259
  %2278 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2212, i64 %2277
  %2279 = sub nuw nsw i64 -4, %2259
  %2280 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2257, i64 %2279
  %2281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2280, i64 0, i32 0
  %2282 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2278, i64 -1, i32 0
  %2283 = getelementptr inbounds i64, i64* %2281, i64 -1
  %2284 = bitcast i64* %2283 to <2 x i64>*
  %2285 = load <2 x i64>, <2 x i64>* %2284, align 8, !alias.scope !238
  %2286 = getelementptr inbounds i64, i64* %2281, i64 -3
  %2287 = bitcast i64* %2286 to <2 x i64>*
  %2288 = load <2 x i64>, <2 x i64>* %2287, align 8, !alias.scope !238
  %2289 = getelementptr inbounds i64, i64* %2282, i64 -1
  %2290 = bitcast i64* %2289 to <2 x i64>*
  store <2 x i64> %2285, <2 x i64>* %2290, align 8, !alias.scope !241, !noalias !238
  %2291 = getelementptr inbounds i64, i64* %2282, i64 -3
  %2292 = bitcast i64* %2291 to <2 x i64>*
  store <2 x i64> %2288, <2 x i64>* %2292, align 8, !alias.scope !241, !noalias !238
  %2293 = add i64 %2259, 8
  %2294 = add i64 %2260, -2
  %2295 = icmp eq i64 %2294, 0
  br i1 %2295, label %2296, label %2258, !llvm.loop !243

2296:                                             ; preds = %2258, %2243
  %2297 = phi i64 [ 0, %2243 ], [ %2293, %2258 ]
  %2298 = icmp eq i64 %2252, 0
  br i1 %2298, label %2317, label %2299

2299:                                             ; preds = %2296
  %2300 = sub i64 0, %2297
  %2301 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2212, i64 %2300
  %2302 = sub i64 0, %2297
  %2303 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2221, i64 -1
  %2304 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2303, i64 %2302
  %2305 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2304, i64 0, i32 0
  %2306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2301, i64 -1, i32 0
  %2307 = getelementptr inbounds i64, i64* %2305, i64 -1
  %2308 = bitcast i64* %2307 to <2 x i64>*
  %2309 = load <2 x i64>, <2 x i64>* %2308, align 8, !alias.scope !238
  %2310 = getelementptr inbounds i64, i64* %2305, i64 -3
  %2311 = bitcast i64* %2310 to <2 x i64>*
  %2312 = load <2 x i64>, <2 x i64>* %2311, align 8, !alias.scope !238
  %2313 = getelementptr inbounds i64, i64* %2306, i64 -1
  %2314 = bitcast i64* %2313 to <2 x i64>*
  store <2 x i64> %2309, <2 x i64>* %2314, align 8, !alias.scope !241, !noalias !238
  %2315 = getelementptr inbounds i64, i64* %2306, i64 -3
  %2316 = bitcast i64* %2315 to <2 x i64>*
  store <2 x i64> %2312, <2 x i64>* %2316, align 8, !alias.scope !241, !noalias !238
  br label %2317

2317:                                             ; preds = %2296, %2299
  %2318 = icmp eq i64 %2228, %2244
  br i1 %2318, label %2375, label %2319

2319:                                             ; preds = %2317, %2230, %2223
  %2320 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2212, %2230 ], [ %2212, %2223 ], [ %2246, %2317 ]
  %2321 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2221, %2230 ], [ %2221, %2223 ], [ %2248, %2317 ]
  %2322 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2321, i64 -1, i32 0
  %2323 = ptrtoint i64* %2322 to i64
  %2324 = sub i64 %2323, %2220
  %2325 = lshr i64 %2324, 3
  %2326 = add nuw nsw i64 %2325, 1
  %2327 = and i64 %2326, 7
  %2328 = icmp eq i64 %2327, 0
  br i1 %2328, label %2340, label %2329

2329:                                             ; preds = %2319, %2329
  %2330 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2337, %2329 ], [ %2320, %2319 ]
  %2331 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2333, %2329 ], [ %2321, %2319 ]
  %2332 = phi i64 [ %2338, %2329 ], [ %2327, %2319 ]
  %2333 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2331, i64 -1
  %2334 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2333, i64 0, i32 0
  %2335 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2330, i64 -1, i32 0
  %2336 = load i64, i64* %2334, align 8
  store i64 %2336, i64* %2335, align 8
  %2337 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2330, i64 -1
  %2338 = add i64 %2332, -1
  %2339 = icmp eq i64 %2338, 0
  br i1 %2339, label %2340, label %2329, !llvm.loop !244

2340:                                             ; preds = %2329, %2319
  %2341 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %2319 ], [ %2337, %2329 ]
  %2342 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2320, %2319 ], [ %2337, %2329 ]
  %2343 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2321, %2319 ], [ %2333, %2329 ]
  %2344 = icmp ult i64 %2324, 56
  br i1 %2344, label %2375, label %2345

2345:                                             ; preds = %2340, %2345
  %2346 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2373, %2345 ], [ %2342, %2340 ]
  %2347 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2369, %2345 ], [ %2343, %2340 ]
  %2348 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -1, i32 0
  %2349 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -1, i32 0
  %2350 = load i64, i64* %2348, align 8
  store i64 %2350, i64* %2349, align 8
  %2351 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -2, i32 0
  %2352 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -2, i32 0
  %2353 = load i64, i64* %2351, align 8
  store i64 %2353, i64* %2352, align 8
  %2354 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -3, i32 0
  %2355 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -3, i32 0
  %2356 = load i64, i64* %2354, align 8
  store i64 %2356, i64* %2355, align 8
  %2357 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -4, i32 0
  %2358 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -4, i32 0
  %2359 = load i64, i64* %2357, align 8
  store i64 %2359, i64* %2358, align 8
  %2360 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -5, i32 0
  %2361 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -5, i32 0
  %2362 = load i64, i64* %2360, align 8
  store i64 %2362, i64* %2361, align 8
  %2363 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -6, i32 0
  %2364 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -6, i32 0
  %2365 = load i64, i64* %2363, align 8
  store i64 %2365, i64* %2364, align 8
  %2366 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -7, i32 0
  %2367 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -7, i32 0
  %2368 = load i64, i64* %2366, align 8
  store i64 %2368, i64* %2367, align 8
  %2369 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2347, i64 -8
  %2370 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2369, i64 0, i32 0
  %2371 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -8, i32 0
  %2372 = load i64, i64* %2370, align 8
  store i64 %2372, i64* %2371, align 8
  %2373 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2346, i64 -8
  %2374 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2369, %2219
  br i1 %2374, label %2375, label %2345, !llvm.loop !245

2375:                                             ; preds = %2340, %2345, %2317, %2209
  %2376 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2212, %2209 ], [ %2246, %2317 ], [ %2341, %2340 ], [ %2373, %2345 ]
  %2377 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2376 to i64
  store i64 %2377, i64* %2173, align 8
  store i64 %2217, i64* %2172, align 8
  store i64 %2214, i64* %2182, align 8
  br label %2378

2378:                                             ; preds = %2165, %2375
  %2379 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 1
  %2380 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %2379, align 8
  %2381 = icmp eq %"class.v8::internal::compiler::FrameStateDescriptor"* %2380, null
  br i1 %2381, label %2726, label %2382

2382:                                             ; preds = %2378
  %2383 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %2384 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2383, i64 0, i32 4
  %2385 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2384, align 8
  %2386 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2385, i64 0, i32 1
  %2387 = load i64, i64* %2386, align 8
  %2388 = load i32, i32* %656, align 4
  %2389 = and i32 %2388, 251658240
  %2390 = icmp eq i32 %2389, 251658240
  br i1 %2390, label %2391, label %2395

2391:                                             ; preds = %2382
  %2392 = inttoptr i64 %661 to i64*
  %2393 = load i64, i64* %2392, align 8
  %2394 = add i64 %2393, 16
  br label %2395

2395:                                             ; preds = %2382, %2391
  %2396 = phi i64 [ %2394, %2391 ], [ %661, %2382 ]
  %2397 = inttoptr i64 %2396 to %"class.v8::internal::compiler::Node"**
  %2398 = shl i64 %2387, 32
  %2399 = add i64 %2398, 4294967296
  %2400 = ashr exact i64 %2399, 32
  %2401 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2397, i64 %2400
  %2402 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2401, align 8
  %2403 = ptrtoint %"class.v8::internal::compiler::Node"* %2402 to i64
  br i1 %4, label %2404, label %2475

2404:                                             ; preds = %2395
  %2405 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2402, i64 0, i32 0
  %2406 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2405, align 8
  %2407 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %2406) #12
  br i1 %2407, label %2409, label %2408, !prof !59

2408:                                             ; preds = %2404
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

2409:                                             ; preds = %2404
  %2410 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2405, align 8
  %2411 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2410, i64 0, i32 5
  %2412 = load i32, i32* %2411, align 4
  %2413 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %2410) #12
  %2414 = zext i1 %2413 to i32
  %2415 = add nsw i32 %2412, %2414
  %2416 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2402, i64 0, i32 3
  %2417 = load i32, i32* %2416, align 4
  %2418 = and i32 %2417, 251658240
  %2419 = icmp eq i32 %2418, 251658240
  %2420 = add i64 %2403, 32
  br i1 %2419, label %2421, label %2425

2421:                                             ; preds = %2409
  %2422 = inttoptr i64 %2420 to i64*
  %2423 = load i64, i64* %2422, align 8
  %2424 = add i64 %2423, 16
  br label %2425

2425:                                             ; preds = %2409, %2421
  %2426 = phi i64 [ %2424, %2421 ], [ %2420, %2409 ]
  %2427 = inttoptr i64 %2426 to %"class.v8::internal::compiler::Node"**
  %2428 = sext i32 %2415 to i64
  %2429 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2427, i64 %2428
  %2430 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %2379, align 8
  %2431 = bitcast %"class.v8::internal::compiler::Node"** %2429 to i64*
  %2432 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %2430, i64 0, i32 9
  %2433 = load i64, i64* %2431, align 8
  %2434 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %2432, align 8
  store %"class.v8::internal::compiler::FrameStateDescriptor"* %2434, %"class.v8::internal::compiler::FrameStateDescriptor"** %2379, align 8
  %2435 = icmp eq %"class.v8::internal::compiler::FrameStateDescriptor"* %2434, null
  br i1 %2435, label %2475, label %2436

2436:                                             ; preds = %2425, %2464
  %2437 = phi %"class.v8::internal::compiler::FrameStateDescriptor"* [ %2473, %2464 ], [ %2434, %2425 ]
  %2438 = phi i64 [ %2472, %2464 ], [ %2433, %2425 ]
  %2439 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %2437, i64 0, i32 0
  %2440 = load i32, i32* %2439, align 8
  %2441 = icmp eq i32 %2440, 1
  br i1 %2441, label %2442, label %2475

2442:                                             ; preds = %2436
  %2443 = inttoptr i64 %2438 to %"class.v8::internal::compiler::Node"*
  %2444 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2443, i64 0, i32 0
  %2445 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2444, align 8
  %2446 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %2445) #12
  br i1 %2446, label %2448, label %2447, !prof !59

2447:                                             ; preds = %2442
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

2448:                                             ; preds = %2442
  %2449 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2444, align 8
  %2450 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2449, i64 0, i32 5
  %2451 = load i32, i32* %2450, align 4
  %2452 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %2449) #12
  %2453 = zext i1 %2452 to i32
  %2454 = add nsw i32 %2451, %2453
  %2455 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2443, i64 0, i32 3
  %2456 = load i32, i32* %2455, align 4
  %2457 = and i32 %2456, 251658240
  %2458 = icmp eq i32 %2457, 251658240
  %2459 = add i64 %2438, 32
  br i1 %2458, label %2460, label %2464

2460:                                             ; preds = %2448
  %2461 = inttoptr i64 %2459 to i64*
  %2462 = load i64, i64* %2461, align 8
  %2463 = add i64 %2462, 16
  br label %2464

2464:                                             ; preds = %2448, %2460
  %2465 = phi i64 [ %2463, %2460 ], [ %2459, %2448 ]
  %2466 = inttoptr i64 %2465 to %"class.v8::internal::compiler::Node"**
  %2467 = sext i32 %2454 to i64
  %2468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2466, i64 %2467
  %2469 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %2379, align 8
  %2470 = bitcast %"class.v8::internal::compiler::Node"** %2468 to i64*
  %2471 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %2469, i64 0, i32 9
  %2472 = load i64, i64* %2470, align 8
  %2473 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %2471, align 8
  store %"class.v8::internal::compiler::FrameStateDescriptor"* %2473, %"class.v8::internal::compiler::FrameStateDescriptor"** %2379, align 8
  %2474 = icmp eq %"class.v8::internal::compiler::FrameStateDescriptor"* %2473, null
  br i1 %2474, label %2475, label %2436

2475:                                             ; preds = %2436, %2464, %2425, %2395
  %2476 = phi %"class.v8::internal::compiler::FrameStateDescriptor"* [ %2380, %2395 ], [ null, %2425 ], [ %2437, %2436 ], [ null, %2464 ]
  %2477 = phi i64 [ %2403, %2395 ], [ %2433, %2425 ], [ %2438, %2436 ], [ %2472, %2464 ]
  %2478 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2479 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2478, align 8
  %2480 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2480) #12
  %2481 = getelementptr inbounds %"struct.v8::internal::compiler::FeedbackSource", %"struct.v8::internal::compiler::FeedbackSource"* %15, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %2481, align 8
  %2482 = getelementptr inbounds %"struct.v8::internal::compiler::FeedbackSource", %"struct.v8::internal::compiler::FeedbackSource"* %15, i64 0, i32 1, i32 0
  store i32 -1, i32* %2482, align 8
  %2483 = call i32 @_ZN2v88internal8compiler19InstructionSequence22AddDeoptimizationEntryEPNS1_20FrameStateDescriptorENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceE(%"class.v8::internal::compiler::InstructionSequence"* %2479, %"class.v8::internal::compiler::FrameStateDescriptor"* %2476, i8 zeroext 3, i8 zeroext 39, %"struct.v8::internal::compiler::FeedbackSource"* nonnull dereferenceable(16) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2480) #12
  %2484 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2485 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2484, i64 0, i32 2
  %2486 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2485, align 8
  %2487 = bitcast %"class.v8::internal::compiler::Constant"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2487) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %12, i32 %2483) #12
  %2488 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %2486, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2487) #12
  %2489 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %2490 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2161, align 8
  %2491 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2489, %2490
  %2492 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2490 to i64
  br i1 %2491, label %2493, label %2498

2493:                                             ; preds = %2475
  %2494 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2489, i64 0, i32 0
  store i64 %2488, i64* %2494, align 8
  %2495 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2489, i64 1
  %2496 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2495 to i64
  %2497 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  store i64 %2496, i64* %2497, align 8
  br label %2706

2498:                                             ; preds = %2475
  %2499 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2489 to i64
  %2500 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  %2501 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to i64*
  %2502 = load i64, i64* %2501, align 8
  %2503 = sub i64 %2499, %2502
  %2504 = ashr exact i64 %2503, 3
  %2505 = add nsw i64 %2504, 1
  %2506 = icmp ugt i64 %2505, 268435455
  br i1 %2506, label %2507, label %2509

2507:                                             ; preds = %2498
  %2508 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2508) #13
  unreachable

2509:                                             ; preds = %2498
  %2510 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2161 to i64*
  %2511 = sub i64 %2492, %2502
  %2512 = ashr exact i64 %2511, 3
  %2513 = icmp ult i64 %2512, 134217727
  br i1 %2513, label %2514, label %2519

2514:                                             ; preds = %2509
  %2515 = ashr exact i64 %2511, 2
  %2516 = icmp ult i64 %2515, %2505
  %2517 = select i1 %2516, i64 %2505, i64 %2515
  %2518 = icmp eq i64 %2517, 0
  br i1 %2518, label %2537, label %2519

2519:                                             ; preds = %2514, %2509
  %2520 = phi i64 [ %2517, %2514 ], [ 268435455, %2509 ]
  %2521 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %2522 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2521, align 8
  %2523 = shl i64 %2520, 3
  %2524 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2522, i64 0, i32 2
  %2525 = load i64, i64* %2524, align 8
  %2526 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2522, i64 0, i32 3
  %2527 = load i64, i64* %2526, align 8
  %2528 = sub i64 %2527, %2525
  %2529 = icmp ugt i64 %2523, %2528
  br i1 %2529, label %2530, label %2532, !prof !2

2530:                                             ; preds = %2519
  %2531 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2522, i64 %2523) #12
  br label %2534

2532:                                             ; preds = %2519
  %2533 = add i64 %2525, %2523
  store i64 %2533, i64* %2524, align 8
  br label %2534

2534:                                             ; preds = %2532, %2530
  %2535 = phi i64 [ %2531, %2530 ], [ %2525, %2532 ]
  %2536 = inttoptr i64 %2535 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %2537

2537:                                             ; preds = %2534, %2514
  %2538 = phi i64 [ %2520, %2534 ], [ 0, %2514 ]
  %2539 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2536, %2534 ], [ null, %2514 ]
  %2540 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2539, i64 %2504
  %2541 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2539, i64 %2538
  %2542 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2541 to i64
  %2543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2540, i64 0, i32 0
  store i64 %2488, i64* %2543, align 8
  %2544 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2540, i64 1
  %2545 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2544 to i64
  %2546 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2153, i64 0, i32 0, i32 0, i32 0
  %2547 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2546, align 8
  %2548 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2547 to i64
  %2549 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %2550 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2549, %2547
  br i1 %2550, label %2703, label %2551

2551:                                             ; preds = %2537
  %2552 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 -1, i32 0
  %2553 = ptrtoint i64* %2552 to i64
  %2554 = sub i64 %2553, %2548
  %2555 = lshr i64 %2554, 3
  %2556 = add nuw nsw i64 %2555, 1
  %2557 = icmp ult i64 %2556, 4
  br i1 %2557, label %2647, label %2558

2558:                                             ; preds = %2551
  %2559 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 -1, i32 0
  %2560 = ptrtoint i64* %2559 to i64
  %2561 = sub i64 %2560, %2548
  %2562 = lshr i64 %2561, 3
  %2563 = xor i64 %2562, -1
  %2564 = add nsw i64 %2504, %2563
  %2565 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2539, i64 %2564
  %2566 = xor i64 %2562, -1
  %2567 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 %2566
  %2568 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2565, %2549
  %2569 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %2567, %2540
  %2570 = and i1 %2568, %2569
  br i1 %2570, label %2647, label %2571

2571:                                             ; preds = %2558
  %2572 = and i64 %2556, 4611686018427387900
  %2573 = sub nsw i64 0, %2572
  %2574 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2540, i64 %2573
  %2575 = sub nsw i64 0, %2572
  %2576 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 %2575
  %2577 = add nsw i64 %2572, -4
  %2578 = lshr exact i64 %2577, 2
  %2579 = add nuw nsw i64 %2578, 1
  %2580 = and i64 %2579, 1
  %2581 = icmp eq i64 %2577, 0
  br i1 %2581, label %2624, label %2582

2582:                                             ; preds = %2571
  %2583 = sub nuw nsw i64 %2579, %2580
  %2584 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 -1
  %2585 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 -1
  br label %2586

2586:                                             ; preds = %2586, %2582
  %2587 = phi i64 [ 0, %2582 ], [ %2621, %2586 ]
  %2588 = phi i64 [ %2583, %2582 ], [ %2622, %2586 ]
  %2589 = sub i64 0, %2587
  %2590 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2540, i64 %2589
  %2591 = sub i64 0, %2587
  %2592 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2584, i64 %2591
  %2593 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2592, i64 0, i32 0
  %2594 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2590, i64 -1, i32 0
  %2595 = getelementptr inbounds i64, i64* %2593, i64 -1
  %2596 = bitcast i64* %2595 to <2 x i64>*
  %2597 = load <2 x i64>, <2 x i64>* %2596, align 8, !alias.scope !246
  %2598 = getelementptr inbounds i64, i64* %2593, i64 -3
  %2599 = bitcast i64* %2598 to <2 x i64>*
  %2600 = load <2 x i64>, <2 x i64>* %2599, align 8, !alias.scope !246
  %2601 = getelementptr inbounds i64, i64* %2594, i64 -1
  %2602 = bitcast i64* %2601 to <2 x i64>*
  store <2 x i64> %2597, <2 x i64>* %2602, align 8, !alias.scope !249, !noalias !246
  %2603 = getelementptr inbounds i64, i64* %2594, i64 -3
  %2604 = bitcast i64* %2603 to <2 x i64>*
  store <2 x i64> %2600, <2 x i64>* %2604, align 8, !alias.scope !249, !noalias !246
  %2605 = sub nuw nsw i64 -4, %2587
  %2606 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2540, i64 %2605
  %2607 = sub nuw nsw i64 -4, %2587
  %2608 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2585, i64 %2607
  %2609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2608, i64 0, i32 0
  %2610 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2606, i64 -1, i32 0
  %2611 = getelementptr inbounds i64, i64* %2609, i64 -1
  %2612 = bitcast i64* %2611 to <2 x i64>*
  %2613 = load <2 x i64>, <2 x i64>* %2612, align 8, !alias.scope !246
  %2614 = getelementptr inbounds i64, i64* %2609, i64 -3
  %2615 = bitcast i64* %2614 to <2 x i64>*
  %2616 = load <2 x i64>, <2 x i64>* %2615, align 8, !alias.scope !246
  %2617 = getelementptr inbounds i64, i64* %2610, i64 -1
  %2618 = bitcast i64* %2617 to <2 x i64>*
  store <2 x i64> %2613, <2 x i64>* %2618, align 8, !alias.scope !249, !noalias !246
  %2619 = getelementptr inbounds i64, i64* %2610, i64 -3
  %2620 = bitcast i64* %2619 to <2 x i64>*
  store <2 x i64> %2616, <2 x i64>* %2620, align 8, !alias.scope !249, !noalias !246
  %2621 = add i64 %2587, 8
  %2622 = add i64 %2588, -2
  %2623 = icmp eq i64 %2622, 0
  br i1 %2623, label %2624, label %2586, !llvm.loop !251

2624:                                             ; preds = %2586, %2571
  %2625 = phi i64 [ 0, %2571 ], [ %2621, %2586 ]
  %2626 = icmp eq i64 %2580, 0
  br i1 %2626, label %2645, label %2627

2627:                                             ; preds = %2624
  %2628 = sub i64 0, %2625
  %2629 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2540, i64 %2628
  %2630 = sub i64 0, %2625
  %2631 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2549, i64 -1
  %2632 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2631, i64 %2630
  %2633 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2632, i64 0, i32 0
  %2634 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2629, i64 -1, i32 0
  %2635 = getelementptr inbounds i64, i64* %2633, i64 -1
  %2636 = bitcast i64* %2635 to <2 x i64>*
  %2637 = load <2 x i64>, <2 x i64>* %2636, align 8, !alias.scope !246
  %2638 = getelementptr inbounds i64, i64* %2633, i64 -3
  %2639 = bitcast i64* %2638 to <2 x i64>*
  %2640 = load <2 x i64>, <2 x i64>* %2639, align 8, !alias.scope !246
  %2641 = getelementptr inbounds i64, i64* %2634, i64 -1
  %2642 = bitcast i64* %2641 to <2 x i64>*
  store <2 x i64> %2637, <2 x i64>* %2642, align 8, !alias.scope !249, !noalias !246
  %2643 = getelementptr inbounds i64, i64* %2634, i64 -3
  %2644 = bitcast i64* %2643 to <2 x i64>*
  store <2 x i64> %2640, <2 x i64>* %2644, align 8, !alias.scope !249, !noalias !246
  br label %2645

2645:                                             ; preds = %2624, %2627
  %2646 = icmp eq i64 %2556, %2572
  br i1 %2646, label %2703, label %2647

2647:                                             ; preds = %2645, %2558, %2551
  %2648 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2540, %2558 ], [ %2540, %2551 ], [ %2574, %2645 ]
  %2649 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2549, %2558 ], [ %2549, %2551 ], [ %2576, %2645 ]
  %2650 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2649, i64 -1, i32 0
  %2651 = ptrtoint i64* %2650 to i64
  %2652 = sub i64 %2651, %2548
  %2653 = lshr i64 %2652, 3
  %2654 = add nuw nsw i64 %2653, 1
  %2655 = and i64 %2654, 7
  %2656 = icmp eq i64 %2655, 0
  br i1 %2656, label %2668, label %2657

2657:                                             ; preds = %2647, %2657
  %2658 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2665, %2657 ], [ %2648, %2647 ]
  %2659 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2661, %2657 ], [ %2649, %2647 ]
  %2660 = phi i64 [ %2666, %2657 ], [ %2655, %2647 ]
  %2661 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2659, i64 -1
  %2662 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2661, i64 0, i32 0
  %2663 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2658, i64 -1, i32 0
  %2664 = load i64, i64* %2662, align 8
  store i64 %2664, i64* %2663, align 8
  %2665 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2658, i64 -1
  %2666 = add i64 %2660, -1
  %2667 = icmp eq i64 %2666, 0
  br i1 %2667, label %2668, label %2657, !llvm.loop !252

2668:                                             ; preds = %2657, %2647
  %2669 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %2647 ], [ %2665, %2657 ]
  %2670 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2648, %2647 ], [ %2665, %2657 ]
  %2671 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2649, %2647 ], [ %2661, %2657 ]
  %2672 = icmp ult i64 %2652, 56
  br i1 %2672, label %2703, label %2673

2673:                                             ; preds = %2668, %2673
  %2674 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2701, %2673 ], [ %2670, %2668 ]
  %2675 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2697, %2673 ], [ %2671, %2668 ]
  %2676 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -1, i32 0
  %2677 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -1, i32 0
  %2678 = load i64, i64* %2676, align 8
  store i64 %2678, i64* %2677, align 8
  %2679 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -2, i32 0
  %2680 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -2, i32 0
  %2681 = load i64, i64* %2679, align 8
  store i64 %2681, i64* %2680, align 8
  %2682 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -3, i32 0
  %2683 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -3, i32 0
  %2684 = load i64, i64* %2682, align 8
  store i64 %2684, i64* %2683, align 8
  %2685 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -4, i32 0
  %2686 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -4, i32 0
  %2687 = load i64, i64* %2685, align 8
  store i64 %2687, i64* %2686, align 8
  %2688 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -5, i32 0
  %2689 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -5, i32 0
  %2690 = load i64, i64* %2688, align 8
  store i64 %2690, i64* %2689, align 8
  %2691 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -6, i32 0
  %2692 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -6, i32 0
  %2693 = load i64, i64* %2691, align 8
  store i64 %2693, i64* %2692, align 8
  %2694 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -7, i32 0
  %2695 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -7, i32 0
  %2696 = load i64, i64* %2694, align 8
  store i64 %2696, i64* %2695, align 8
  %2697 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2675, i64 -8
  %2698 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2697, i64 0, i32 0
  %2699 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -8, i32 0
  %2700 = load i64, i64* %2698, align 8
  store i64 %2700, i64* %2699, align 8
  %2701 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2674, i64 -8
  %2702 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2697, %2547
  br i1 %2702, label %2703, label %2673, !llvm.loop !253

2703:                                             ; preds = %2668, %2673, %2645, %2537
  %2704 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2540, %2537 ], [ %2574, %2645 ], [ %2669, %2668 ], [ %2701, %2673 ]
  %2705 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2704 to i64
  store i64 %2705, i64* %2501, align 8
  store i64 %2545, i64* %2500, align 8
  store i64 %2542, i64* %2510, align 8
  br label %2706

2706:                                             ; preds = %2493, %2703
  %2707 = bitcast %"class.v8::internal::compiler::StateObjectDeduplicator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2707) #12
  %2708 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2478, align 8
  %2709 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2708, i64 0, i32 1
  %2710 = bitcast %"class.v8::internal::Zone"** %2709 to i64*
  %2711 = load i64, i64* %2710, align 8
  %2712 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %2713 = bitcast %"struct.std::__1::__compressed_pair_elem.1323"* %2712 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2707, i8 0, i64 24, i1 false) #12
  store i64 %2711, i64* %2713, align 8
  %2714 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %2379, align 8
  %2715 = inttoptr i64 %2477 to %"class.v8::internal::compiler::Node"*
  %2716 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2709, align 8
  %2717 = call i64 @_ZN2v88internal8compiler19InstructionSelector31AddInputsToFrameStateDescriptorEPNS1_20FrameStateDescriptorENS1_10FrameStateEPNS1_16OperandGeneratorEPNS1_23StateObjectDeduplicatorEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS1_19FrameStateInputKindEPNS0_4ZoneE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::FrameStateDescriptor"* %2714, %"class.v8::internal::compiler::Node"* %2715, %"class.v8::internal::compiler::OperandGenerator"* nonnull %14, %"class.v8::internal::compiler::StateObjectDeduplicator"* nonnull %16, %"class.v8::internal::ZoneVector.1240"* %2153, i32 1, %"class.v8::internal::Zone"* %2716)
  %2718 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %2719 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2718, align 8
  %2720 = icmp eq %"class.v8::internal::compiler::Node"** %2719, null
  br i1 %2720, label %2725, label %2721

2721:                                             ; preds = %2706
  %2722 = ptrtoint %"class.v8::internal::compiler::Node"** %2719 to i64
  %2723 = getelementptr inbounds %"class.v8::internal::compiler::StateObjectDeduplicator", %"class.v8::internal::compiler::StateObjectDeduplicator"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  %2724 = bitcast %"class.v8::internal::compiler::Node"*** %2723 to i64*
  store i64 %2722, i64* %2724, align 8
  br label %2725

2725:                                             ; preds = %2706, %2721
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2707) #12
  br label %2726

2726:                                             ; preds = %2378, %2725
  %2727 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %2728 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2727, i64 0, i32 4
  %2729 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2728, align 8
  %2730 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2729, i64 0, i32 1
  %2731 = load i64, i64* %2730, align 8
  %2732 = add i64 %2731, 1
  %2733 = load i32, i32* %656, align 4
  %2734 = and i32 %2733, 251658240
  %2735 = icmp eq i32 %2734, 251658240
  br i1 %2735, label %2736, label %2740

2736:                                             ; preds = %2726
  %2737 = inttoptr i64 %661 to i64*
  %2738 = load i64, i64* %2737, align 8
  %2739 = add i64 %2738, 16
  br label %2740

2740:                                             ; preds = %2726, %2736
  %2741 = phi i64 [ %2739, %2736 ], [ %661, %2726 ]
  %2742 = and i32 %3, 4
  %2743 = icmp ne i32 %2742, 0
  %2744 = icmp eq i64 %2732, 0
  br i1 %2744, label %2760, label %2745

2745:                                             ; preds = %2740
  %2746 = inttoptr i64 %2741 to %"class.v8::internal::compiler::Node"**
  %2747 = shl i32 %5, 1
  %2748 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 5, i32 0
  %2749 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 5, i32 0, i32 0, i32 1
  %2750 = bitcast %"struct.v8::internal::compiler::PushParameter"** %2749 to i64*
  %2751 = bitcast %"class.std::__1::vector.1545"* %2748 to i64*
  %2752 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %2748, i64 0, i32 0, i32 0
  %2753 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %2754 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  %2755 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to i64*
  %2756 = bitcast %"class.v8::internal::compiler::Constant"* %13 to i8*
  %2757 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2153, i64 0, i32 0, i32 0, i32 0
  %2758 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2161 to i64*
  %2759 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  br label %2763

2760:                                             ; preds = %3192, %2740
  %2761 = icmp ne i32 %5, 0
  %2762 = and i1 %2743, %2761
  br i1 %2762, label %3196, label %3429

2763:                                             ; preds = %3192, %2745
  %2764 = phi i64 [ 0, %2745 ], [ %3194, %3192 ]
  %2765 = phi %"class.v8::internal::compiler::Node"** [ %2746, %2745 ], [ %3193, %3192 ]
  %2766 = icmp eq i64 %2764, 0
  br i1 %2766, label %3192, label %2767

2767:                                             ; preds = %2763
  %2768 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %2769 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2768, i64 0, i32 4
  %2770 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2769, align 8
  %2771 = add i64 %2764, -1
  %2772 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2770, i64 0, i32 2
  %2773 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %2772, align 8
  %2774 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2770, i64 0, i32 0
  %2775 = load i64, i64* %2774, align 8
  %2776 = add i64 %2771, %2775
  %2777 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %2773, i64 %2776
  %2778 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %2777 to i64*
  %2779 = load i64, i64* %2778, align 4
  %2780 = trunc i64 %2779 to i48
  %2781 = lshr i48 %2780, 32
  %2782 = and i64 %2779, -281474976710656
  br i1 %2743, label %2783, label %2791

2783:                                             ; preds = %2767
  %2784 = trunc i64 %2779 to i32
  %2785 = and i32 %2784, 1
  %2786 = icmp eq i32 %2785, 0
  %2787 = add i32 %2747, %2784
  %2788 = or i32 %2787, 1
  %2789 = select i1 %2786, i32 %2784, i32 %2788
  %2790 = zext i32 %2789 to i64
  br label %2791

2791:                                             ; preds = %2783, %2767
  %2792 = phi i64 [ %2790, %2783 ], [ %2779, %2767 ]
  %2793 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2765, align 8
  %2794 = and i64 %2779, 281470681743360
  %2795 = and i64 %2792, 4294967295
  %2796 = or i64 %2795, %2782
  %2797 = or i64 %2796, %2794
  %2798 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2799 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2793, i64 0, i32 3
  %2800 = load i32, i32* %2799, align 4
  %2801 = and i32 %2800, 16777215
  %2802 = zext i32 %2801 to i64
  %2803 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2798, i64 0, i32 15, i32 0, i32 0, i32 0
  %2804 = load i32*, i32** %2803, align 8
  %2805 = getelementptr inbounds i32, i32* %2804, i64 %2802
  %2806 = load i32, i32* %2805, align 4
  %2807 = icmp eq i32 %2806, -1
  br i1 %2807, label %2808, label %2814

2808:                                             ; preds = %2791
  %2809 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2798, i64 0, i32 2
  %2810 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2809, align 8
  %2811 = call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2810) #12
  %2812 = load i32*, i32** %2803, align 8
  %2813 = getelementptr inbounds i32, i32* %2812, i64 %2802
  store i32 %2811, i32* %2813, align 4
  br label %2814

2814:                                             ; preds = %2808, %2791
  %2815 = phi i32 [ %2811, %2808 ], [ %2806, %2791 ]
  %2816 = trunc i64 %2792 to i32
  %2817 = and i32 %2816, 1
  %2818 = icmp eq i32 %2817, 0
  %2819 = icmp ugt i32 %2816, -3
  %2820 = and i1 %2819, %2818
  br i1 %2820, label %2821, label %2825

2821:                                             ; preds = %2814
  %2822 = zext i32 %2815 to i64
  %2823 = shl nuw nsw i64 %2822, 3
  %2824 = or i64 %2823, 927712935937
  br label %2853

2825:                                             ; preds = %2814
  %2826 = and i32 %2816, -2147483647
  switch i32 %2826, label %2841 [
    i32 -2147483647, label %2827
    i32 1, label %2834
  ]

2827:                                             ; preds = %2825
  %2828 = lshr i64 %2792, 1
  %2829 = zext i32 %2815 to i64
  %2830 = shl nuw nsw i64 %2829, 3
  %2831 = shl i64 %2828, 36
  %2832 = or i64 %2831, %2830
  %2833 = or i64 %2832, 1
  br label %2853

2834:                                             ; preds = %2825
  %2835 = lshr i64 %2792, 1
  %2836 = zext i32 %2815 to i64
  %2837 = shl nuw nsw i64 %2836, 3
  %2838 = shl i64 %2835, 36
  %2839 = or i64 %2838, %2837
  %2840 = or i64 %2839, 1
  br label %2853

2841:                                             ; preds = %2825
  %2842 = trunc i48 %2781 to i8
  %2843 = icmp ugt i8 %2842, 11
  %2844 = lshr i64 %2792, 1
  %2845 = zext i32 %2815 to i64
  %2846 = shl nuw nsw i64 %2845, 3
  %2847 = shl i64 %2844, 41
  %2848 = or i64 %2846, %2847
  br i1 %2843, label %2849, label %2851

2849:                                             ; preds = %2841
  %2850 = or i64 %2848, 858993459201
  br label %2853

2851:                                             ; preds = %2841
  %2852 = or i64 %2848, 790273982465
  br label %2853

2853:                                             ; preds = %2821, %2827, %2834, %2849, %2851
  %2854 = phi i64 [ %2824, %2821 ], [ %2833, %2827 ], [ %2840, %2834 ], [ %2850, %2849 ], [ %2852, %2851 ]
  %2855 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2856 = load i32, i32* %2799, align 4
  %2857 = and i32 %2856, 16777215
  %2858 = zext i32 %2857 to i64
  %2859 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2855, i64 0, i32 13, i32 0, i32 0
  %2860 = load i64*, i64** %2859, align 8
  %2861 = lshr i64 %2858, 6
  %2862 = getelementptr inbounds i64, i64* %2860, i64 %2861
  %2863 = and i64 %2858, 63
  %2864 = shl i64 1, %2863
  %2865 = load i64, i64* %2862, align 8
  %2866 = or i64 %2864, %2865
  store i64 %2866, i64* %2862, align 8
  %2867 = and i64 %2854, 34359738368
  %2868 = icmp ne i64 %2867, 0
  %2869 = or i1 %2743, %2868
  br i1 %2869, label %2924, label %2870

2870:                                             ; preds = %2853
  %2871 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %19, align 8
  %2872 = ashr i64 %2854, 36
  %2873 = trunc i64 %2872 to i32
  %2874 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2871, i64 0, i32 12
  %2875 = load i32, i32* %2874, align 4
  %2876 = icmp eq i32 %2875, 0
  br i1 %2876, label %2877, label %2879

2877:                                             ; preds = %2870
  %2878 = xor i32 %2873, -1
  br label %2884

2879:                                             ; preds = %2870
  %2880 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2871, i64 0, i32 5
  %2881 = load i64, i64* %2880, align 8
  %2882 = trunc i64 %2881 to i32
  %2883 = add nsw i32 %2882, %2873
  br label %2884

2884:                                             ; preds = %2877, %2879
  %2885 = phi i32 [ %2878, %2877 ], [ %2883, %2879 ]
  %2886 = sext i32 %2885 to i64
  %2887 = load i64, i64* %2750, align 8
  %2888 = load i64, i64* %2751, align 8
  %2889 = sub i64 %2887, %2888
  %2890 = ashr exact i64 %2889, 4
  %2891 = icmp ugt i64 %2890, %2886
  %2892 = inttoptr i64 %2888 to %"struct.v8::internal::compiler::PushParameter"*
  br i1 %2891, label %2916, label %2893

2893:                                             ; preds = %2884
  %2894 = trunc i48 %2781 to i8
  %2895 = add i8 %2894, -1
  %2896 = icmp ult i8 %2895, 14
  br i1 %2896, label %2898, label %2897

2897:                                             ; preds = %2893
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2898:                                             ; preds = %2893
  %2899 = sext i8 %2895 to i64
  %2900 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN2v88internal8compiler19InstructionSelector20InitializeCallBufferEPNS1_4NodeEPNS1_10CallBufferENS_4base5FlagsINS2_14CallBufferFlagEiEEbi, i64 0, i64 %2899
  %2901 = load i32, i32* %2900, align 4
  %2902 = shl i32 1, %2901
  %2903 = lshr i32 %2902, 3
  %2904 = icmp ugt i32 %2903, 1
  %2905 = select i1 %2904, i32 %2903, i32 1
  %2906 = add nsw i32 %2905, %2885
  %2907 = sext i32 %2906 to i64
  %2908 = icmp ult i64 %2890, %2907
  br i1 %2908, label %2909, label %2912

2909:                                             ; preds = %2898
  %2910 = sub nsw i64 %2907, %2890
  call void @_ZNSt3__16vectorIN2v88internal8compiler13PushParameterENS2_13ZoneAllocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1545"* %2748, i64 %2910) #12
  %2911 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %2752, align 8
  br label %2916

2912:                                             ; preds = %2898
  %2913 = icmp ugt i64 %2890, %2907
  br i1 %2913, label %2914, label %2916

2914:                                             ; preds = %2912
  %2915 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %2892, i64 %2907
  store %"struct.v8::internal::compiler::PushParameter"* %2915, %"struct.v8::internal::compiler::PushParameter"** %2749, align 8
  br label %2916

2916:                                             ; preds = %2914, %2912, %2909, %2884
  %2917 = phi %"struct.v8::internal::compiler::PushParameter"* [ %2892, %2914 ], [ %2892, %2912 ], [ %2911, %2909 ], [ %2892, %2884 ]
  %2918 = bitcast %"class.v8::internal::compiler::Node"** %2765 to i64*
  %2919 = load i64, i64* %2918, align 8
  %2920 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %2917, i64 %2886
  %2921 = bitcast %"struct.v8::internal::compiler::PushParameter"* %2920 to i64*
  store i64 %2919, i64* %2921, align 8
  %2922 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %2917, i64 %2886, i32 1
  %2923 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %2922 to i64*
  store i64 %2797, i64* %2923, align 8
  br label %3192

2924:                                             ; preds = %2853
  %2925 = load i32, i32* %2753, align 8
  %2926 = icmp ne i32 %2925, 1
  %2927 = and i64 %2854, 139053861175296
  %2928 = icmp eq i64 %2927, 24429773979648
  %2929 = and i1 %2928, %2926
  br i1 %2929, label %2930, label %2978

2930:                                             ; preds = %2924
  %2931 = load i64, i64* %2754, align 8
  %2932 = load i64, i64* %2755, align 8
  %2933 = sub i64 %2931, %2932
  %2934 = lshr exact i64 %2933, 3
  %2935 = trunc i64 %2934 to i32
  %2936 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2937 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2936, i64 0, i32 2
  %2938 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2937, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2756) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %13, i32 %2935) #12
  %2939 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %2938, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2756) #12
  %2940 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2757, align 8
  %2941 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2940, i64 1, i32 0
  store i64 %2939, i64* %2941, align 8
  %2942 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2765, align 8
  %2943 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2944 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2942, i64 0, i32 3
  %2945 = load i32, i32* %2944, align 4
  %2946 = and i32 %2945, 16777215
  %2947 = zext i32 %2946 to i64
  %2948 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2943, i64 0, i32 15, i32 0, i32 0, i32 0
  %2949 = load i32*, i32** %2948, align 8
  %2950 = getelementptr inbounds i32, i32* %2949, i64 %2947
  %2951 = load i32, i32* %2950, align 4
  %2952 = icmp eq i32 %2951, -1
  br i1 %2952, label %2953, label %2963

2953:                                             ; preds = %2930
  %2954 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2943, i64 0, i32 2
  %2955 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2954, align 8
  %2956 = call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2955) #12
  %2957 = load i32*, i32** %2948, align 8
  %2958 = getelementptr inbounds i32, i32* %2957, i64 %2947
  store i32 %2956, i32* %2958, align 4
  %2959 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %2960 = load i32, i32* %2944, align 4
  %2961 = and i32 %2960, 16777215
  %2962 = zext i32 %2961 to i64
  br label %2963

2963:                                             ; preds = %2930, %2953
  %2964 = phi i64 [ %2947, %2930 ], [ %2962, %2953 ]
  %2965 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %2943, %2930 ], [ %2959, %2953 ]
  %2966 = phi i32 [ %2951, %2930 ], [ %2956, %2953 ]
  %2967 = zext i32 %2966 to i64
  %2968 = shl nuw nsw i64 %2967, 3
  %2969 = or i64 %2968, 171798691841
  %2970 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %2965, i64 0, i32 13, i32 0, i32 0
  %2971 = load i64*, i64** %2970, align 8
  %2972 = lshr i64 %2964, 6
  %2973 = getelementptr inbounds i64, i64* %2971, i64 %2972
  %2974 = and i64 %2964, 63
  %2975 = shl i64 1, %2974
  %2976 = load i64, i64* %2973, align 8
  %2977 = or i64 %2976, %2975
  store i64 %2977, i64* %2973, align 8
  br label %2978

2978:                                             ; preds = %2924, %2963
  %2979 = phi i64 [ %2854, %2924 ], [ %2969, %2963 ]
  %2980 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %2981 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2161, align 8
  %2982 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2980, %2981
  %2983 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2981 to i64
  br i1 %2982, label %2988, label %2984

2984:                                             ; preds = %2978
  %2985 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2980, i64 0, i32 0
  store i64 %2979, i64* %2985, align 8
  %2986 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2980, i64 1
  %2987 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2986 to i64
  store i64 %2987, i64* %2754, align 8
  br label %3192

2988:                                             ; preds = %2978
  %2989 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2980 to i64
  %2990 = load i64, i64* %2755, align 8
  %2991 = sub i64 %2989, %2990
  %2992 = ashr exact i64 %2991, 3
  %2993 = add nsw i64 %2992, 1
  %2994 = icmp ugt i64 %2993, 268435455
  br i1 %2994, label %2995, label %2997

2995:                                             ; preds = %2988
  %2996 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2996) #13
  unreachable

2997:                                             ; preds = %2988
  %2998 = sub i64 %2983, %2990
  %2999 = ashr exact i64 %2998, 3
  %3000 = icmp ult i64 %2999, 134217727
  br i1 %3000, label %3001, label %3006

3001:                                             ; preds = %2997
  %3002 = ashr exact i64 %2998, 2
  %3003 = icmp ult i64 %3002, %2993
  %3004 = select i1 %3003, i64 %2993, i64 %3002
  %3005 = icmp eq i64 %3004, 0
  br i1 %3005, label %3023, label %3006

3006:                                             ; preds = %3001, %2997
  %3007 = phi i64 [ %3004, %3001 ], [ 268435455, %2997 ]
  %3008 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2759, align 8
  %3009 = shl i64 %3007, 3
  %3010 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3008, i64 0, i32 2
  %3011 = load i64, i64* %3010, align 8
  %3012 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3008, i64 0, i32 3
  %3013 = load i64, i64* %3012, align 8
  %3014 = sub i64 %3013, %3011
  %3015 = icmp ugt i64 %3009, %3014
  br i1 %3015, label %3016, label %3018, !prof !2

3016:                                             ; preds = %3006
  %3017 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3008, i64 %3009) #12
  br label %3020

3018:                                             ; preds = %3006
  %3019 = add i64 %3011, %3009
  store i64 %3019, i64* %3010, align 8
  br label %3020

3020:                                             ; preds = %3018, %3016
  %3021 = phi i64 [ %3017, %3016 ], [ %3011, %3018 ]
  %3022 = inttoptr i64 %3021 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %3023

3023:                                             ; preds = %3020, %3001
  %3024 = phi i64 [ %3007, %3020 ], [ 0, %3001 ]
  %3025 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3022, %3020 ], [ null, %3001 ]
  %3026 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3025, i64 %2992
  %3027 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3025, i64 %3024
  %3028 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3027 to i64
  %3029 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3026, i64 0, i32 0
  store i64 %2979, i64* %3029, align 8
  %3030 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3026, i64 1
  %3031 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3030 to i64
  %3032 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2757, align 8
  %3033 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3032 to i64
  %3034 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %3035 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %3034, %3032
  br i1 %3035, label %3189, label %3036

3036:                                             ; preds = %3023
  %3037 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 -1
  %3038 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3037 to i64
  %3039 = sub i64 %3038, %3033
  %3040 = lshr i64 %3039, 3
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = icmp ult i64 %3041, 4
  br i1 %3042, label %3133, label %3043

3043:                                             ; preds = %3036
  %3044 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3025, i64 -1
  %3045 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 -1
  %3046 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3045 to i64
  %3047 = sub i64 %3046, %3033
  %3048 = lshr i64 %3047, 3
  %3049 = sub nsw i64 %2992, %3048
  %3050 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3044, i64 %3049
  %3051 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 -1
  %3052 = sub nsw i64 0, %3048
  %3053 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3051, i64 %3052
  %3054 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %3050, %3034
  %3055 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %3053, %3026
  %3056 = and i1 %3054, %3055
  br i1 %3056, label %3133, label %3057

3057:                                             ; preds = %3043
  %3058 = and i64 %3041, 4611686018427387900
  %3059 = sub nsw i64 0, %3058
  %3060 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3026, i64 %3059
  %3061 = sub nsw i64 0, %3058
  %3062 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 %3061
  %3063 = add nsw i64 %3058, -4
  %3064 = lshr exact i64 %3063, 2
  %3065 = add nuw nsw i64 %3064, 1
  %3066 = and i64 %3065, 1
  %3067 = icmp eq i64 %3063, 0
  br i1 %3067, label %3110, label %3068

3068:                                             ; preds = %3057
  %3069 = sub nuw nsw i64 %3065, %3066
  %3070 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 -1
  %3071 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 -1
  br label %3072

3072:                                             ; preds = %3072, %3068
  %3073 = phi i64 [ 0, %3068 ], [ %3107, %3072 ]
  %3074 = phi i64 [ %3069, %3068 ], [ %3108, %3072 ]
  %3075 = sub i64 0, %3073
  %3076 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3026, i64 %3075
  %3077 = sub i64 0, %3073
  %3078 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3070, i64 %3077
  %3079 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3078, i64 0, i32 0
  %3080 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3076, i64 -1, i32 0
  %3081 = getelementptr inbounds i64, i64* %3079, i64 -1
  %3082 = bitcast i64* %3081 to <2 x i64>*
  %3083 = load <2 x i64>, <2 x i64>* %3082, align 8, !alias.scope !254
  %3084 = getelementptr inbounds i64, i64* %3079, i64 -3
  %3085 = bitcast i64* %3084 to <2 x i64>*
  %3086 = load <2 x i64>, <2 x i64>* %3085, align 8, !alias.scope !254
  %3087 = getelementptr inbounds i64, i64* %3080, i64 -1
  %3088 = bitcast i64* %3087 to <2 x i64>*
  store <2 x i64> %3083, <2 x i64>* %3088, align 8, !alias.scope !257, !noalias !254
  %3089 = getelementptr inbounds i64, i64* %3080, i64 -3
  %3090 = bitcast i64* %3089 to <2 x i64>*
  store <2 x i64> %3086, <2 x i64>* %3090, align 8, !alias.scope !257, !noalias !254
  %3091 = sub nuw nsw i64 -4, %3073
  %3092 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3026, i64 %3091
  %3093 = sub nuw nsw i64 -4, %3073
  %3094 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3071, i64 %3093
  %3095 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3094, i64 0, i32 0
  %3096 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3092, i64 -1, i32 0
  %3097 = getelementptr inbounds i64, i64* %3095, i64 -1
  %3098 = bitcast i64* %3097 to <2 x i64>*
  %3099 = load <2 x i64>, <2 x i64>* %3098, align 8, !alias.scope !254
  %3100 = getelementptr inbounds i64, i64* %3095, i64 -3
  %3101 = bitcast i64* %3100 to <2 x i64>*
  %3102 = load <2 x i64>, <2 x i64>* %3101, align 8, !alias.scope !254
  %3103 = getelementptr inbounds i64, i64* %3096, i64 -1
  %3104 = bitcast i64* %3103 to <2 x i64>*
  store <2 x i64> %3099, <2 x i64>* %3104, align 8, !alias.scope !257, !noalias !254
  %3105 = getelementptr inbounds i64, i64* %3096, i64 -3
  %3106 = bitcast i64* %3105 to <2 x i64>*
  store <2 x i64> %3102, <2 x i64>* %3106, align 8, !alias.scope !257, !noalias !254
  %3107 = add i64 %3073, 8
  %3108 = add i64 %3074, -2
  %3109 = icmp eq i64 %3108, 0
  br i1 %3109, label %3110, label %3072, !llvm.loop !259

3110:                                             ; preds = %3072, %3057
  %3111 = phi i64 [ 0, %3057 ], [ %3107, %3072 ]
  %3112 = icmp eq i64 %3066, 0
  br i1 %3112, label %3131, label %3113

3113:                                             ; preds = %3110
  %3114 = sub i64 0, %3111
  %3115 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3026, i64 %3114
  %3116 = sub i64 0, %3111
  %3117 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3034, i64 -1
  %3118 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3117, i64 %3116
  %3119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3118, i64 0, i32 0
  %3120 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3115, i64 -1, i32 0
  %3121 = getelementptr inbounds i64, i64* %3119, i64 -1
  %3122 = bitcast i64* %3121 to <2 x i64>*
  %3123 = load <2 x i64>, <2 x i64>* %3122, align 8, !alias.scope !254
  %3124 = getelementptr inbounds i64, i64* %3119, i64 -3
  %3125 = bitcast i64* %3124 to <2 x i64>*
  %3126 = load <2 x i64>, <2 x i64>* %3125, align 8, !alias.scope !254
  %3127 = getelementptr inbounds i64, i64* %3120, i64 -1
  %3128 = bitcast i64* %3127 to <2 x i64>*
  store <2 x i64> %3123, <2 x i64>* %3128, align 8, !alias.scope !257, !noalias !254
  %3129 = getelementptr inbounds i64, i64* %3120, i64 -3
  %3130 = bitcast i64* %3129 to <2 x i64>*
  store <2 x i64> %3126, <2 x i64>* %3130, align 8, !alias.scope !257, !noalias !254
  br label %3131

3131:                                             ; preds = %3110, %3113
  %3132 = icmp eq i64 %3041, %3058
  br i1 %3132, label %3189, label %3133

3133:                                             ; preds = %3131, %3043, %3036
  %3134 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3026, %3043 ], [ %3026, %3036 ], [ %3060, %3131 ]
  %3135 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3034, %3043 ], [ %3034, %3036 ], [ %3062, %3131 ]
  %3136 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3135, i64 -1
  %3137 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3136 to i64
  %3138 = sub i64 %3137, %3033
  %3139 = lshr i64 %3138, 3
  %3140 = add nuw nsw i64 %3139, 1
  %3141 = and i64 %3140, 7
  %3142 = icmp eq i64 %3141, 0
  br i1 %3142, label %3154, label %3143

3143:                                             ; preds = %3133, %3143
  %3144 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3151, %3143 ], [ %3134, %3133 ]
  %3145 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3147, %3143 ], [ %3135, %3133 ]
  %3146 = phi i64 [ %3152, %3143 ], [ %3141, %3133 ]
  %3147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3145, i64 -1
  %3148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3147, i64 0, i32 0
  %3149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3144, i64 -1, i32 0
  %3150 = load i64, i64* %3148, align 8
  store i64 %3150, i64* %3149, align 8
  %3151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3144, i64 -1
  %3152 = add i64 %3146, -1
  %3153 = icmp eq i64 %3152, 0
  br i1 %3153, label %3154, label %3143, !llvm.loop !260

3154:                                             ; preds = %3143, %3133
  %3155 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %3133 ], [ %3151, %3143 ]
  %3156 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3134, %3133 ], [ %3151, %3143 ]
  %3157 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3135, %3133 ], [ %3147, %3143 ]
  %3158 = icmp ult i64 %3138, 56
  br i1 %3158, label %3189, label %3159

3159:                                             ; preds = %3154, %3159
  %3160 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3187, %3159 ], [ %3156, %3154 ]
  %3161 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3183, %3159 ], [ %3157, %3154 ]
  %3162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -1, i32 0
  %3163 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -1, i32 0
  %3164 = load i64, i64* %3162, align 8
  store i64 %3164, i64* %3163, align 8
  %3165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -2, i32 0
  %3166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -2, i32 0
  %3167 = load i64, i64* %3165, align 8
  store i64 %3167, i64* %3166, align 8
  %3168 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -3, i32 0
  %3169 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -3, i32 0
  %3170 = load i64, i64* %3168, align 8
  store i64 %3170, i64* %3169, align 8
  %3171 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -4, i32 0
  %3172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -4, i32 0
  %3173 = load i64, i64* %3171, align 8
  store i64 %3173, i64* %3172, align 8
  %3174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -5, i32 0
  %3175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -5, i32 0
  %3176 = load i64, i64* %3174, align 8
  store i64 %3176, i64* %3175, align 8
  %3177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -6, i32 0
  %3178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -6, i32 0
  %3179 = load i64, i64* %3177, align 8
  store i64 %3179, i64* %3178, align 8
  %3180 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -7, i32 0
  %3181 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -7, i32 0
  %3182 = load i64, i64* %3180, align 8
  store i64 %3182, i64* %3181, align 8
  %3183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3161, i64 -8
  %3184 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3183, i64 0, i32 0
  %3185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -8, i32 0
  %3186 = load i64, i64* %3184, align 8
  store i64 %3186, i64* %3185, align 8
  %3187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3160, i64 -8
  %3188 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %3183, %3032
  br i1 %3188, label %3189, label %3159, !llvm.loop !261

3189:                                             ; preds = %3154, %3159, %3131, %3023
  %3190 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3026, %3023 ], [ %3060, %3131 ], [ %3155, %3154 ], [ %3187, %3159 ]
  %3191 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3190 to i64
  store i64 %3191, i64* %2755, align 8
  store i64 %3031, i64* %2754, align 8
  store i64 %3028, i64* %2758, align 8
  br label %3192

3192:                                             ; preds = %2916, %2984, %3189, %2763
  %3193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2765, i64 1
  %3194 = add nuw i64 %2764, 1
  %3195 = icmp eq i64 %3194, %2732
  br i1 %3195, label %2760, label %2763

3196:                                             ; preds = %2760
  %3197 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %3198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %3197, i64 0, i32 2
  %3199 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3198, align 8
  %3200 = call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3199) #12
  %3201 = zext i32 %3200 to i64
  %3202 = shl nuw nsw i64 %3201, 3
  %3203 = or i64 %3202, 1
  %3204 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %18, align 8
  %3205 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3205) #12
  %3206 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 0, i32 0
  store i64 %3203, i64* %3206, align 8
  %3207 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %3204, i32 15, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %7, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3205) #12
  %3208 = zext i32 %5 to i64
  %3209 = shl i64 %3208, 36
  %3210 = or i64 %3202, %3209
  %3211 = or i64 %3210, 1
  %3212 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %3213 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2161, align 8
  %3214 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %3212, %3213
  %3215 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3213 to i64
  br i1 %3214, label %3221, label %3216

3216:                                             ; preds = %3196
  %3217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3212, i64 0, i32 0
  store i64 %3211, i64* %3217, align 8
  %3218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3212, i64 1
  %3219 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3218 to i64
  %3220 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  store i64 %3219, i64* %3220, align 8
  br label %3429

3221:                                             ; preds = %3196
  %3222 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3212 to i64
  %3223 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2159 to i64*
  %3224 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to i64*
  %3225 = load i64, i64* %3224, align 8
  %3226 = sub i64 %3222, %3225
  %3227 = ashr exact i64 %3226, 3
  %3228 = add nsw i64 %3227, 1
  %3229 = icmp ugt i64 %3228, 268435455
  br i1 %3229, label %3230, label %3232

3230:                                             ; preds = %3221
  %3231 = bitcast %"class.v8::internal::ZoneVector.1240"* %2153 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3231) #13
  unreachable

3232:                                             ; preds = %3221
  %3233 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %2161 to i64*
  %3234 = sub i64 %3215, %3225
  %3235 = ashr exact i64 %3234, 3
  %3236 = icmp ult i64 %3235, 134217727
  br i1 %3236, label %3237, label %3242

3237:                                             ; preds = %3232
  %3238 = ashr exact i64 %3234, 2
  %3239 = icmp ult i64 %3238, %3228
  %3240 = select i1 %3239, i64 %3228, i64 %3238
  %3241 = icmp eq i64 %3240, 0
  br i1 %3241, label %3260, label %3242

3242:                                             ; preds = %3237, %3232
  %3243 = phi i64 [ %3240, %3237 ], [ 268435455, %3232 ]
  %3244 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %3245 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3244, align 8
  %3246 = shl i64 %3243, 3
  %3247 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3245, i64 0, i32 2
  %3248 = load i64, i64* %3247, align 8
  %3249 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3245, i64 0, i32 3
  %3250 = load i64, i64* %3249, align 8
  %3251 = sub i64 %3250, %3248
  %3252 = icmp ugt i64 %3246, %3251
  br i1 %3252, label %3253, label %3255, !prof !2

3253:                                             ; preds = %3242
  %3254 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3245, i64 %3246) #12
  br label %3257

3255:                                             ; preds = %3242
  %3256 = add i64 %3248, %3246
  store i64 %3256, i64* %3247, align 8
  br label %3257

3257:                                             ; preds = %3255, %3253
  %3258 = phi i64 [ %3254, %3253 ], [ %3248, %3255 ]
  %3259 = inttoptr i64 %3258 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %3260

3260:                                             ; preds = %3257, %3237
  %3261 = phi i64 [ %3243, %3257 ], [ 0, %3237 ]
  %3262 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3259, %3257 ], [ null, %3237 ]
  %3263 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3262, i64 %3227
  %3264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3262, i64 %3261
  %3265 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3264 to i64
  %3266 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3263, i64 0, i32 0
  store i64 %3211, i64* %3266, align 8
  %3267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3263, i64 1
  %3268 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3267 to i64
  %3269 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %2153, i64 0, i32 0, i32 0, i32 0
  %3270 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %3269, align 8
  %3271 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3270 to i64
  %3272 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %2159, align 8
  %3273 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %3272, %3270
  br i1 %3273, label %3426, label %3274

3274:                                             ; preds = %3260
  %3275 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 -1, i32 0
  %3276 = ptrtoint i64* %3275 to i64
  %3277 = sub i64 %3276, %3271
  %3278 = lshr i64 %3277, 3
  %3279 = add nuw nsw i64 %3278, 1
  %3280 = icmp ult i64 %3279, 4
  br i1 %3280, label %3370, label %3281

3281:                                             ; preds = %3274
  %3282 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 -1, i32 0
  %3283 = ptrtoint i64* %3282 to i64
  %3284 = sub i64 %3283, %3271
  %3285 = lshr i64 %3284, 3
  %3286 = xor i64 %3285, -1
  %3287 = add nsw i64 %3227, %3286
  %3288 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3262, i64 %3287
  %3289 = xor i64 %3285, -1
  %3290 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 %3289
  %3291 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %3288, %3272
  %3292 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %3290, %3263
  %3293 = and i1 %3291, %3292
  br i1 %3293, label %3370, label %3294

3294:                                             ; preds = %3281
  %3295 = and i64 %3279, 4611686018427387900
  %3296 = sub nsw i64 0, %3295
  %3297 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3263, i64 %3296
  %3298 = sub nsw i64 0, %3295
  %3299 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 %3298
  %3300 = add nsw i64 %3295, -4
  %3301 = lshr exact i64 %3300, 2
  %3302 = add nuw nsw i64 %3301, 1
  %3303 = and i64 %3302, 1
  %3304 = icmp eq i64 %3300, 0
  br i1 %3304, label %3349, label %3305

3305:                                             ; preds = %3294
  %3306 = sub nuw nsw i64 %3302, %3303
  %3307 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 -1
  %3308 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 -1
  br label %3309

3309:                                             ; preds = %3309, %3305
  %3310 = phi i64 [ 0, %3305 ], [ %3344, %3309 ]
  %3311 = phi i64 [ %3306, %3305 ], [ %3345, %3309 ]
  %3312 = sub i64 0, %3310
  %3313 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3263, i64 %3312
  %3314 = sub i64 0, %3310
  %3315 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3307, i64 %3314
  %3316 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3315, i64 0, i32 0
  %3317 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3313, i64 -1, i32 0
  %3318 = getelementptr inbounds i64, i64* %3316, i64 -1
  %3319 = bitcast i64* %3318 to <2 x i64>*
  %3320 = load <2 x i64>, <2 x i64>* %3319, align 8, !alias.scope !262
  %3321 = getelementptr inbounds i64, i64* %3316, i64 -3
  %3322 = bitcast i64* %3321 to <2 x i64>*
  %3323 = load <2 x i64>, <2 x i64>* %3322, align 8, !alias.scope !262
  %3324 = getelementptr inbounds i64, i64* %3317, i64 -1
  %3325 = bitcast i64* %3324 to <2 x i64>*
  store <2 x i64> %3320, <2 x i64>* %3325, align 8, !alias.scope !265, !noalias !262
  %3326 = getelementptr inbounds i64, i64* %3317, i64 -3
  %3327 = bitcast i64* %3326 to <2 x i64>*
  store <2 x i64> %3323, <2 x i64>* %3327, align 8, !alias.scope !265, !noalias !262
  %3328 = sub nuw nsw i64 -4, %3310
  %3329 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3263, i64 %3328
  %3330 = sub nuw nsw i64 -4, %3310
  %3331 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3308, i64 %3330
  %3332 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3331, i64 0, i32 0
  %3333 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3329, i64 -1, i32 0
  %3334 = getelementptr inbounds i64, i64* %3332, i64 -1
  %3335 = bitcast i64* %3334 to <2 x i64>*
  %3336 = load <2 x i64>, <2 x i64>* %3335, align 8, !alias.scope !262
  %3337 = getelementptr inbounds i64, i64* %3332, i64 -3
  %3338 = bitcast i64* %3337 to <2 x i64>*
  %3339 = load <2 x i64>, <2 x i64>* %3338, align 8, !alias.scope !262
  %3340 = getelementptr inbounds i64, i64* %3333, i64 -1
  %3341 = bitcast i64* %3340 to <2 x i64>*
  store <2 x i64> %3336, <2 x i64>* %3341, align 8, !alias.scope !265, !noalias !262
  %3342 = getelementptr inbounds i64, i64* %3333, i64 -3
  %3343 = bitcast i64* %3342 to <2 x i64>*
  store <2 x i64> %3339, <2 x i64>* %3343, align 8, !alias.scope !265, !noalias !262
  %3344 = add i64 %3310, 8
  %3345 = add i64 %3311, -2
  %3346 = icmp eq i64 %3345, 0
  br i1 %3346, label %3347, label %3309, !llvm.loop !267

3347:                                             ; preds = %3309
  %3348 = sub nuw nsw i64 -8, %3310
  br label %3349

3349:                                             ; preds = %3347, %3294
  %3350 = phi i64 [ 0, %3294 ], [ %3348, %3347 ]
  %3351 = icmp eq i64 %3303, 0
  br i1 %3351, label %3368, label %3352

3352:                                             ; preds = %3349
  %3353 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3263, i64 %3350
  %3354 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3272, i64 -1
  %3355 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3354, i64 %3350
  %3356 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3355, i64 0, i32 0
  %3357 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3353, i64 -1, i32 0
  %3358 = getelementptr inbounds i64, i64* %3356, i64 -1
  %3359 = bitcast i64* %3358 to <2 x i64>*
  %3360 = load <2 x i64>, <2 x i64>* %3359, align 8, !alias.scope !262
  %3361 = getelementptr inbounds i64, i64* %3356, i64 -3
  %3362 = bitcast i64* %3361 to <2 x i64>*
  %3363 = load <2 x i64>, <2 x i64>* %3362, align 8, !alias.scope !262
  %3364 = getelementptr inbounds i64, i64* %3357, i64 -1
  %3365 = bitcast i64* %3364 to <2 x i64>*
  store <2 x i64> %3360, <2 x i64>* %3365, align 8, !alias.scope !265, !noalias !262
  %3366 = getelementptr inbounds i64, i64* %3357, i64 -3
  %3367 = bitcast i64* %3366 to <2 x i64>*
  store <2 x i64> %3363, <2 x i64>* %3367, align 8, !alias.scope !265, !noalias !262
  br label %3368

3368:                                             ; preds = %3349, %3352
  %3369 = icmp eq i64 %3279, %3295
  br i1 %3369, label %3426, label %3370

3370:                                             ; preds = %3368, %3281, %3274
  %3371 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3263, %3281 ], [ %3263, %3274 ], [ %3297, %3368 ]
  %3372 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3272, %3281 ], [ %3272, %3274 ], [ %3299, %3368 ]
  %3373 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3372, i64 -1, i32 0
  %3374 = ptrtoint i64* %3373 to i64
  %3375 = sub i64 %3374, %3271
  %3376 = lshr i64 %3375, 3
  %3377 = add nuw nsw i64 %3376, 1
  %3378 = and i64 %3377, 7
  %3379 = icmp eq i64 %3378, 0
  br i1 %3379, label %3391, label %3380

3380:                                             ; preds = %3370, %3380
  %3381 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3388, %3380 ], [ %3371, %3370 ]
  %3382 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3384, %3380 ], [ %3372, %3370 ]
  %3383 = phi i64 [ %3389, %3380 ], [ %3378, %3370 ]
  %3384 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3382, i64 -1
  %3385 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3384, i64 0, i32 0
  %3386 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3381, i64 -1, i32 0
  %3387 = load i64, i64* %3385, align 8
  store i64 %3387, i64* %3386, align 8
  %3388 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3381, i64 -1
  %3389 = add i64 %3383, -1
  %3390 = icmp eq i64 %3389, 0
  br i1 %3390, label %3391, label %3380, !llvm.loop !268

3391:                                             ; preds = %3380, %3370
  %3392 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %3370 ], [ %3388, %3380 ]
  %3393 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3371, %3370 ], [ %3388, %3380 ]
  %3394 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3372, %3370 ], [ %3384, %3380 ]
  %3395 = icmp ult i64 %3375, 56
  br i1 %3395, label %3426, label %3396

3396:                                             ; preds = %3391, %3396
  %3397 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3424, %3396 ], [ %3393, %3391 ]
  %3398 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3420, %3396 ], [ %3394, %3391 ]
  %3399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -1, i32 0
  %3400 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -1, i32 0
  %3401 = load i64, i64* %3399, align 8
  store i64 %3401, i64* %3400, align 8
  %3402 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -2, i32 0
  %3403 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -2, i32 0
  %3404 = load i64, i64* %3402, align 8
  store i64 %3404, i64* %3403, align 8
  %3405 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -3, i32 0
  %3406 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -3, i32 0
  %3407 = load i64, i64* %3405, align 8
  store i64 %3407, i64* %3406, align 8
  %3408 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -4, i32 0
  %3409 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -4, i32 0
  %3410 = load i64, i64* %3408, align 8
  store i64 %3410, i64* %3409, align 8
  %3411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -5, i32 0
  %3412 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -5, i32 0
  %3413 = load i64, i64* %3411, align 8
  store i64 %3413, i64* %3412, align 8
  %3414 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -6, i32 0
  %3415 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -6, i32 0
  %3416 = load i64, i64* %3414, align 8
  store i64 %3416, i64* %3415, align 8
  %3417 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -7, i32 0
  %3418 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -7, i32 0
  %3419 = load i64, i64* %3417, align 8
  store i64 %3419, i64* %3418, align 8
  %3420 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3398, i64 -8
  %3421 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3420, i64 0, i32 0
  %3422 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -8, i32 0
  %3423 = load i64, i64* %3421, align 8
  store i64 %3423, i64* %3422, align 8
  %3424 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3397, i64 -8
  %3425 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %3420, %3270
  br i1 %3425, label %3426, label %3396, !llvm.loop !269

3426:                                             ; preds = %3391, %3396, %3368, %3260
  %3427 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %3263, %3260 ], [ %3297, %3368 ], [ %3392, %3391 ], [ %3424, %3396 ]
  %3428 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3427 to i64
  store i64 %3428, i64* %3224, align 8
  store i64 %3268, i64* %3223, align 8
  store i64 %3265, i64* %3233, align 8
  br label %3429

3429:                                             ; preds = %3426, %3216, %2760
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret void
}

declare i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19InstructionSelector20IsSourcePositionUsedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 2
  %10 = load i16, i16* %9, align 8
  switch i16 %10, label %11 [
    i16 49, label %12
    i16 15, label %12
    i16 16, label %12
    i16 512, label %12
    i16 513, label %12
  ]

11:                                               ; preds = %6
  br label %12

12:                                               ; preds = %6, %6, %6, %6, %6, %11, %2
  %13 = phi i1 [ true, %6 ], [ true, %2 ], [ false, %11 ], [ true, %6 ], [ true, %6 ], [ true, %6 ], [ true, %6 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector12VisitControlEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Constant", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::Constant", align 8
  %7 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %8 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %9 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  %10 = alloca %"class.v8::internal::compiler::Constant", align 8
  %11 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %12 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %13 = alloca %"class.v8::internal::ZoneVector.1240", align 8
  %14 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %15 = alloca %"class.v8::internal::ZoneVector.1555", align 8
  %16 = alloca %"class.v8::internal::compiler::SwitchInfo", align 8
  %17 = alloca %"class.v8::internal::compiler::DeoptimizeParameters", align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  %19 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::Instruction"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.1326"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %30 = load i32, i32* %29, align 4
  switch i32 %30, label %284 [
    i32 1, label %31
    i32 2, label %50
    i32 6, label %71
    i32 3, label %72
    i32 4, label %96
    i32 7, label %232
    i32 5, label %233
    i32 8, label %280
    i32 0, label %285
  ]

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %33 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %32, align 8
  %34 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %36 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %35, align 8
  %37 = bitcast %"class.v8::internal::compiler::Constant"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %34, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %10, i64 0, i32 0
  store i32 7, i32* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %10, i64 0, i32 1
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %10, i64 0, i32 2
  %43 = sext i32 %39 to i64
  store i64 %43, i64* %42, align 8
  %44 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %36, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  %45 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  %46 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %11, i64 0, i32 0
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %12, i64 0, i32 0
  store i64 %44, i64* %48, align 8
  %49 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %11, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %285

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %52 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %51, align 8
  %53 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, i64 1
  %55 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %54, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9VisitCallEPNS1_4NodeEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %19, %"class.v8::internal::compiler::BasicBlock"* %55)
  %56 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %57 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %56, align 8
  %58 = bitcast %"class.v8::internal::compiler::Constant"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %53, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %6, i64 0, i32 0
  store i32 7, i32* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %6, i64 0, i32 1
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %6, i64 0, i32 2
  %64 = sext i32 %60 to i64
  store i64 %64, i64* %63, align 8
  %65 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %57, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #12
  %66 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #12
  %67 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12
  %68 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 0, i32 0
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %8, i64 0, i32 0
  store i64 %65, i64* %69, align 8
  %70 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %7, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %8, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12
  br label %285

71:                                               ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitTailCallEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %19)
  br label %285

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %73, align 8
  %75 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %74, i64 1
  %77 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %75, %77
  br i1 %78, label %79, label %95

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %81 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %80, align 8
  %82 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %75, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 0
  store i32 7, i32* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 1
  store i8 0, i8* %86, align 4
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %88 = sext i32 %84 to i64
  store i64 %88, i64* %87, align 8
  %89 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %81, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #12
  %90 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #12
  %91 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  store i64 %89, i64* %93, align 8
  %94 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %5, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  br label %285

95:                                               ; preds = %72
  tail call void @_ZN2v88internal8compiler19InstructionSelector11VisitBranchEPNS1_4NodeEPNS1_10BasicBlockES6_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %19, %"class.v8::internal::compiler::BasicBlock"* %75, %"class.v8::internal::compiler::BasicBlock"* %77)
  br label %285

96:                                               ; preds = %2
  %97 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %98 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %98, i64 -1
  %100 = bitcast %"class.v8::internal::compiler::BasicBlock"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0
  %103 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %98 to i64
  %104 = bitcast %"class.std::__1::vector.1312"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = add nsw i64 %107, -1
  %109 = bitcast %"class.v8::internal::ZoneVector.1555"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #12
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %111 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %110, align 8
  %112 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 16, i1 false)
  %113 = ptrtoint %"class.v8::internal::Zone"* %111 to i64
  %114 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 2, i32 1
  %115 = bitcast %"struct.std::__1::__compressed_pair_elem.1560"* %114 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #12
  store i64 %113, i64* %115, align 8
  %116 = icmp eq i64 %108, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112)
  br label %178

118:                                              ; preds = %96
  %119 = icmp ugt i64 %108, 134217727
  br i1 %119, label %120, label %122

120:                                              ; preds = %118
  %121 = bitcast %"class.v8::internal::ZoneVector.1555"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %121) #13
  unreachable

122:                                              ; preds = %118
  %123 = shl i64 %108, 4
  %124 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 3
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %127, %125
  %129 = icmp ugt i64 %123, %128
  br i1 %129, label %130, label %132, !prof !2

130:                                              ; preds = %122
  %131 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %111, i64 %123) #12
  br label %134

132:                                              ; preds = %122
  %133 = add i64 %125, %123
  store i64 %133, i64* %124, align 8
  br label %134

134:                                              ; preds = %132, %130
  %135 = phi i64 [ %131, %130 ], [ %125, %132 ]
  %136 = inttoptr i64 %135 to %"struct.v8::internal::compiler::CaseInfo"*
  %137 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 1
  store %"struct.v8::internal::compiler::CaseInfo"* %136, %"struct.v8::internal::compiler::CaseInfo"** %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::CaseInfo"* %136, %"struct.v8::internal::compiler::CaseInfo"** %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %136, i64 %108
  %140 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.v8::internal::compiler::CaseInfo"* %139, %"struct.v8::internal::compiler::CaseInfo"** %140, align 8
  %141 = shl i64 %106, 1
  %142 = add i64 %141, -32
  %143 = lshr i64 %142, 4
  %144 = add nuw nsw i64 %143, 1
  %145 = and i64 %144, 3
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %154, label %147

147:                                              ; preds = %134, %147
  %148 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %151, %147 ], [ %136, %134 ]
  %149 = phi i64 [ %152, %147 ], [ %145, %134 ]
  %150 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* nonnull align 8 %112, i64 16, i1 false) #12
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %148, i64 1
  %152 = add i64 %149, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %147, !llvm.loop !270

154:                                              ; preds = %147, %134
  %155 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %136, %134 ], [ %151, %147 ]
  %156 = icmp ult i64 %142, 48
  br i1 %156, label %168, label %157

157:                                              ; preds = %154, %157
  %158 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %166, %157 ], [ %155, %154 ]
  %159 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* nonnull align 8 %112, i64 16, i1 false) #12
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 1
  %161 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* nonnull align 8 %112, i64 16, i1 false) #12
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 2
  %163 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* nonnull align 8 %112, i64 16, i1 false) #12
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 3
  %165 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* nonnull align 8 %112, i64 16, i1 false) #12
  %166 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 4
  %167 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %166, %139
  br i1 %167, label %168, label %157

168:                                              ; preds = %157, %154
  %169 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %137 to i64*
  %170 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %139 to i64
  store i64 %170, i64* %169, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112)
  br i1 %116, label %178, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 0
  br label %204

174:                                              ; preds = %204
  %175 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 1
  %176 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  br label %178

178:                                              ; preds = %168, %117, %174
  %179 = phi i64 [ %177, %174 ], [ 0, %117 ], [ %170, %168 ]
  %180 = phi i32 [ %229, %174 ], [ -2147483648, %117 ], [ -2147483648, %168 ]
  %181 = phi i32 [ %227, %174 ], [ 2147483647, %117 ], [ 2147483647, %168 ]
  %182 = bitcast %"class.v8::internal::compiler::SwitchInfo"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %182) #12
  %183 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %16, i64 0, i32 0
  store %"class.v8::internal::ZoneVector.1555"* %15, %"class.v8::internal::ZoneVector.1555"** %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %16, i64 0, i32 1
  store i32 %181, i32* %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %16, i64 0, i32 2
  store i32 %180, i32* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %16, i64 0, i32 4
  %187 = bitcast %"class.v8::internal::compiler::BasicBlock"** %186 to i64*
  store i64 %101, i64* %187, align 8
  %188 = bitcast %"class.v8::internal::ZoneVector.1555"* %15 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %179, %189
  %191 = add i32 %180, 1
  %192 = sub i32 %191, %181
  %193 = zext i32 %192 to i64
  %194 = select i1 %190, i64 0, i64 %193
  %195 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %16, i64 0, i32 3
  store i64 %194, i64* %195, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector11VisitSwitchEPNS1_4NodeERKNS1_10SwitchInfoE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %19, %"class.v8::internal::compiler::SwitchInfo"* nonnull dereferenceable(32) %16) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %182) #12
  %196 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 0
  %197 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %196, align 8
  %198 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %178
  %200 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %15, i64 0, i32 0, i32 0, i32 1
  %201 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %200 to i64*
  %202 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %197 to i64
  store i64 %202, i64* %201, align 8
  br label %203

203:                                              ; preds = %178, %199
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #12
  br label %285

204:                                              ; preds = %204, %171
  %205 = phi i32 [ 2147483647, %171 ], [ %227, %204 ]
  %206 = phi i32 [ -2147483648, %171 ], [ %229, %204 ]
  %207 = phi i64 [ 0, %171 ], [ %230, %204 ]
  %208 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %172, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %208, i64 %207
  %210 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %210, i64 0, i32 11, i32 0, i32 0, i32 0
  %212 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, align 8
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %213, i64 0, i32 0
  %215 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %214, align 8
  %216 = tail call dereferenceable(12) %"class.v8::internal::compiler::IfValueParameters"* @_ZN2v88internal8compiler19IfValueParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %215) #12
  %217 = getelementptr inbounds %"class.v8::internal::compiler::IfValueParameters", %"class.v8::internal::compiler::IfValueParameters"* %216, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"class.v8::internal::compiler::IfValueParameters", %"class.v8::internal::compiler::IfValueParameters"* %216, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %173, align 8
  %222 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 %207, i32 0
  store i32 %218, i32* %222, align 8
  %223 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 %207, i32 1
  store i32 %220, i32* %223, align 4
  %224 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 %207, i32 2
  store %"class.v8::internal::compiler::BasicBlock"* %210, %"class.v8::internal::compiler::BasicBlock"** %224, align 8
  %225 = load i32, i32* %217, align 4
  %226 = icmp sgt i32 %205, %225
  %227 = select i1 %226, i32 %225, i32 %205
  %228 = icmp slt i32 %206, %225
  %229 = select i1 %228, i32 %225, i32 %206
  %230 = add nuw i64 %207, 1
  %231 = icmp eq i64 %230, %108
  br i1 %231, label %174, label %204

232:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector11VisitReturnEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %19)
  br label %285

233:                                              ; preds = %2
  %234 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %234) #12
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 0
  %236 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %235, align 8
  %237 = tail call dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %236) #12
  %238 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %237, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %234, i8* align 8 %238, i64 32, i1 false)
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %240 = load i32, i32* %239, align 4
  %241 = and i32 %240, 251658240
  %242 = icmp eq i32 %241, 251658240
  %243 = ptrtoint %"class.v8::internal::compiler::Node"* %19 to i64
  %244 = add i64 %243, 32
  br i1 %242, label %245, label %249

245:                                              ; preds = %233
  %246 = inttoptr i64 %244 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = add i64 %247, 16
  br label %249

249:                                              ; preds = %233, %245
  %250 = phi i64 [ %248, %245 ], [ %244, %233 ]
  %251 = inttoptr i64 %250 to %"class.v8::internal::compiler::Node"**
  %252 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %251, align 8
  %253 = load i8, i8* %234, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %17, i64 0, i32 1
  %255 = load i8, i8* %254, align 1
  %256 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %17, i64 0, i32 3
  %257 = bitcast %"class.v8::internal::ZoneVector.1240"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %257) #12
  %258 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %259 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %258, align 8
  %260 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %259, i64 0, i32 1
  %261 = bitcast %"class.v8::internal::Zone"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %13, i64 0, i32 0, i32 0, i32 2, i32 1
  %264 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %263 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 0, i64 24, i1 false) #12
  store i64 %262, i64* %264, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector25AppendDeoptimizeArgumentsEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceENS1_10FrameStateE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::ZoneVector.1240"* nonnull %13, i8 zeroext %253, i8 zeroext %255, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16) %256, %"class.v8::internal::compiler::Node"* %252) #12
  %265 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %13, i64 0, i32 0, i32 0, i32 1
  %266 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.v8::internal::ZoneVector.1240"* %13 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %267, %269
  %271 = ashr exact i64 %270, 3
  %272 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %13, i64 0, i32 0, i32 0, i32 0
  %273 = inttoptr i64 %269 to %"class.v8::internal::compiler::InstructionOperand"*
  %274 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 20, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %271, %"class.v8::internal::compiler::InstructionOperand"* %273, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  %275 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %272, align 8
  %276 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %249
  %278 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %275 to i64
  store i64 %278, i64* %266, align 8
  br label %279

279:                                              ; preds = %249, %277
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %257) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %234) #12
  br label %285

280:                                              ; preds = %2
  %281 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #12
  %282 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %14, i64 0, i32 0
  store i64 0, i64* %282, align 8
  %283 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 19, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %14, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #12
  br label %285

284:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

285:                                              ; preds = %79, %95, %2, %280, %279, %232, %203, %71, %50, %31
  %286 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 27
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %287, 1
  %289 = icmp ne %"class.v8::internal::compiler::Node"* %19, null
  %290 = and i1 %289, %288
  br i1 %290, label %291, label %305

291:                                              ; preds = %285
  %292 = load i64, i64* %22, align 8
  %293 = load i64, i64* %24, align 8
  %294 = sub i64 %292, %293
  %295 = lshr exact i64 %294, 3
  %296 = trunc i64 %295 to i32
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = and i32 %298, 16777215
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %302 = load %"struct.std::__1::pair.1394"*, %"struct.std::__1::pair.1394"** %301, align 8
  %303 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %302, i64 %300, i32 0
  store i32 %296, i32* %303, align 4
  %304 = getelementptr inbounds %"struct.std::__1::pair.1394", %"struct.std::__1::pair.1394"* %302, i64 %300, i32 1
  store i32 %28, i32* %304, align 4
  br label %305

305:                                              ; preds = %291, %285
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %7 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %8 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %9 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %10 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %11 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %12 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %13 = alloca %"class.v8::internal::compiler::Constant", align 8
  %14 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %15 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %16 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %17 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %18 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %19 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %20 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %21 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %22 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %23 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %24 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %25 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %26 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %27 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %28 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %29 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %30 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %31 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %32 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %33 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 28
  %35 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %34, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %35) #12
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 0, i32 2
  %39 = load i16, i16* %38, align 8
  switch i16 %39, label %7778 [
    i16 0, label %7785
    i16 1, label %7785
    i16 21, label %7785
    i16 2, label %7785
    i16 4, label %7785
    i16 5, label %7785
    i16 6, label %7785
    i16 3, label %7785
    i16 8, label %7785
    i16 9, label %7785
    i16 36, label %7785
    i16 10, label %7785
    i16 19, label %7785
    i16 39, label %7785
    i16 7, label %40
    i16 40, label %90
    i16 50, label %144
    i16 51, label %189
    i16 35, label %207
    i16 55, label %228
    i16 22, label %229
    i16 23, label %229
    i16 24, label %229
    i16 27, label %229
    i16 32, label %229
    i16 33, label %229
    i16 25, label %239
    i16 26, label %266
    i16 30, label %293
    i16 31, label %320
    i16 28, label %347
    i16 222, label %389
    i16 49, label %416
    i16 12, label %417
    i16 13, label %418
    i16 14, label %419
    i16 15, label %420
    i16 16, label %454
    i16 41, label %7785
    i16 42, label %7785
    i16 46, label %7785
    i16 434, label %488
    i16 435, label %489
    i16 60, label %493
    i16 63, label %497
    i16 61, label %498
    i16 436, label %499
    i16 56, label %512
    i16 437, label %564
    i16 439, label %564
    i16 741, label %584
    i16 742, label %602
    i16 438, label %620
    i16 440, label %640
    i16 513, label %641
    i16 743, label %642
    i16 303, label %660
    i16 304, label %678
    i16 305, label %696
    i16 306, label %714
    i16 307, label %732
    i16 308, label %750
    i16 309, label %768
    i16 310, label %786
    i16 342, label %804
    i16 298, label %805
    i16 299, label %823
    i16 301, label %841
    i16 302, label %859
    i16 300, label %877
    i16 442, label %895
    i16 443, label %913
    i16 494, label %931
    i16 323, label %980
    i16 324, label %998
    i16 325, label %1016
    i16 326, label %1034
    i16 327, label %1052
    i16 328, label %1070
    i16 329, label %1088
    i16 330, label %1106
    i16 444, label %1124
    i16 445, label %1142
    i16 448, label %1160
    i16 449, label %1178
    i16 450, label %1196
    i16 451, label %1214
    i16 343, label %1232
    i16 495, label %1233
    i16 311, label %1282
    i16 312, label %1300
    i16 313, label %1318
    i16 314, label %1336
    i16 315, label %1337
    i16 316, label %1355
    i16 317, label %1373
    i16 318, label %1374
    i16 319, label %1392
    i16 344, label %1410
    i16 345, label %1411
    i16 320, label %1412
    i16 346, label %1430
    i16 347, label %1431
    i16 321, label %1432
    i16 322, label %1450
    i16 333, label %1451
    i16 334, label %1469
    i16 335, label %1487
    i16 336, label %1505
    i16 337, label %1523
    i16 338, label %1541
    i16 339, label %1559
    i16 348, label %1577
    i16 349, label %1578
    i16 340, label %1579
    i16 350, label %1597
    i16 351, label %1598
    i16 341, label %1599
    i16 452, label %1617
    i16 453, label %1617
    i16 454, label %1671
    i16 455, label %1689
    i16 457, label %1743
    i16 471, label %1761
    i16 474, label %1779
    i16 475, label %1797
    i16 458, label %1815
    i16 459, label %1833
    i16 460, label %1851
    i16 461, label %1869
    i16 462, label %1887
    i16 463, label %1957
    i16 464, label %1975
    i16 465, label %1993
    i16 466, label %2011
    i16 467, label %2029
    i16 468, label %2047
    i16 469, label %2065
    i16 470, label %2083
    i16 472, label %2101
    i16 473, label %2119
    i16 476, label %2137
    i16 477, label %2155
    i16 456, label %2173
    i16 478, label %2191
    i16 479, label %2209
    i16 481, label %2227
    i16 480, label %2245
    i16 482, label %2263
    i16 486, label %2281
    i16 483, label %2299
    i16 484, label %2317
    i16 485, label %2335
    i16 487, label %2353
    i16 488, label %2371
    i16 489, label %2389
    i16 358, label %2407
    i16 359, label %2425
    i16 365, label %2443
    i16 360, label %2461
    i16 361, label %2479
    i16 364, label %2497
    i16 370, label %2515
    i16 352, label %2533
    i16 353, label %2534
    i16 354, label %2535
    i16 362, label %2536
    i16 363, label %2554
    i16 496, label %2572
    i16 374, label %2621
    i16 375, label %2639
    i16 396, label %2657
    i16 376, label %2675
    i16 377, label %2693
    i16 378, label %2711
    i16 373, label %2729
    i16 372, label %2747
    i16 380, label %2765
    i16 381, label %2783
    i16 382, label %2801
    i16 383, label %2819
    i16 384, label %2837
    i16 385, label %2855
    i16 386, label %2873
    i16 371, label %2891
    i16 387, label %2909
    i16 388, label %2927
    i16 389, label %2945
    i16 390, label %2963
    i16 391, label %2981
    i16 392, label %2999
    i16 393, label %3017
    i16 394, label %3035
    i16 395, label %3053
    i16 379, label %3071
    i16 402, label %3089
    i16 403, label %3107
    i16 404, label %3125
    i16 405, label %3143
    i16 406, label %3161
    i16 355, label %3179
    i16 356, label %3180
    i16 357, label %3181
    i16 497, label %3182
    i16 366, label %3231
    i16 397, label %3249
    i16 369, label %3267
    i16 401, label %3285
    i16 368, label %3303
    i16 400, label %3321
    i16 398, label %3339
    i16 367, label %3357
    i16 399, label %3375
    i16 490, label %3393
    i16 491, label %3411
    i16 492, label %3429
    i16 493, label %3447
    i16 498, label %3465
    i16 499, label %3483
    i16 500, label %3501
    i16 441, label %3519
    i16 521, label %3520
    i16 501, label %3527
    i16 502, label %3563
    i16 503, label %3599
    i16 504, label %3635
    i16 505, label %3655
    i16 506, label %3656
    i16 507, label %3657
    i16 508, label %3658
    i16 509, label %3659
    i16 510, label %3660
    i16 511, label %3661
    i16 514, label %3662
    i16 407, label %3663
    i16 425, label %3683
    i16 408, label %3703
    i16 426, label %3704
    i16 417, label %3705
    i16 416, label %3706
    i16 411, label %3707
    i16 427, label %3727
    i16 412, label %3747
    i16 428, label %3767
    i16 413, label %3787
    i16 429, label %3807
    i16 414, label %3827
    i16 430, label %3847
    i16 415, label %3867
    i16 431, label %3887
    i16 409, label %3907
    i16 432, label %3927
    i16 410, label %3947
    i16 433, label %3967
    i16 418, label %3987
    i16 419, label %3988
    i16 420, label %3989
    i16 421, label %3990
    i16 422, label %3991
    i16 423, label %3992
    i16 424, label %3993
    i16 512, label %3994
    i16 515, label %4014
    i16 516, label %4032
    i16 517, label %4050
    i16 518, label %4068
    i16 519, label %4086
    i16 520, label %4104
    i16 522, label %4122
    i16 523, label %4140
    i16 524, label %4158
    i16 525, label %4176
    i16 526, label %4194
    i16 527, label %4212
    i16 528, label %4230
    i16 529, label %4248
    i16 530, label %4266
    i16 531, label %4284
    i16 532, label %4302
    i16 533, label %4320
    i16 534, label %4338
    i16 535, label %4356
    i16 536, label %4374
    i16 537, label %4392
    i16 538, label %4410
    i16 539, label %4428
    i16 540, label %4446
    i16 541, label %4464
    i16 542, label %4482
    i16 543, label %4500
    i16 544, label %4518
    i16 545, label %4536
    i16 546, label %4554
    i16 547, label %4572
    i16 548, label %4590
    i16 549, label %4608
    i16 550, label %4626
    i16 551, label %4644
    i16 552, label %4662
    i16 553, label %4680
    i16 554, label %4698
    i16 555, label %4716
    i16 556, label %4734
    i16 557, label %4752
    i16 558, label %4770
    i16 559, label %4788
    i16 560, label %4806
    i16 561, label %4824
    i16 562, label %4842
    i16 563, label %4860
    i16 564, label %4878
    i16 565, label %4896
    i16 566, label %4914
    i16 567, label %4932
    i16 568, label %4950
    i16 571, label %4968
    i16 572, label %4986
    i16 573, label %5004
    i16 574, label %5022
    i16 575, label %5040
    i16 576, label %5058
    i16 577, label %5076
    i16 578, label %5094
    i16 579, label %5112
    i16 580, label %5130
    i16 581, label %5148
    i16 582, label %5149
    i16 583, label %5167
    i16 584, label %5185
    i16 585, label %5186
    i16 586, label %5204
    i16 587, label %5222
    i16 588, label %5240
    i16 589, label %5258
    i16 590, label %5276
    i16 591, label %5294
    i16 592, label %5312
    i16 593, label %5330
    i16 594, label %5348
    i16 595, label %5366
    i16 596, label %5384
    i16 597, label %5402
    i16 598, label %5420
    i16 599, label %5438
    i16 600, label %5456
    i16 601, label %5474
    i16 602, label %5492
    i16 603, label %5510
    i16 604, label %5528
    i16 605, label %5546
    i16 606, label %5564
    i16 607, label %5582
    i16 608, label %5600
    i16 609, label %5618
    i16 610, label %5636
    i16 611, label %5654
    i16 612, label %5672
    i16 613, label %5690
    i16 614, label %5708
    i16 615, label %5726
    i16 616, label %5744
    i16 617, label %5762
    i16 618, label %5780
    i16 619, label %5798
    i16 620, label %5816
    i16 621, label %5834
    i16 624, label %5852
    i16 625, label %5870
    i16 626, label %5888
    i16 627, label %5906
    i16 628, label %5924
    i16 629, label %5942
    i16 630, label %5960
    i16 631, label %5978
    i16 634, label %5996
    i16 635, label %6014
    i16 636, label %6032
    i16 637, label %6050
    i16 638, label %6068
    i16 639, label %6086
    i16 640, label %6104
    i16 641, label %6122
    i16 642, label %6140
    i16 643, label %6158
    i16 644, label %6176
    i16 645, label %6194
    i16 646, label %6212
    i16 647, label %6230
    i16 648, label %6248
    i16 649, label %6266
    i16 650, label %6284
    i16 651, label %6302
    i16 652, label %6320
    i16 653, label %6338
    i16 654, label %6356
    i16 655, label %6374
    i16 656, label %6392
    i16 657, label %6410
    i16 658, label %6428
    i16 659, label %6446
    i16 660, label %6464
    i16 661, label %6482
    i16 662, label %6500
    i16 663, label %6518
    i16 664, label %6536
    i16 665, label %6554
    i16 668, label %6572
    i16 669, label %6590
    i16 670, label %6608
    i16 671, label %6626
    i16 672, label %6644
    i16 673, label %6662
    i16 674, label %6680
    i16 675, label %6698
    i16 676, label %6716
    i16 677, label %6734
    i16 680, label %6752
    i16 681, label %6770
    i16 682, label %6788
    i16 683, label %6806
    i16 684, label %6824
    i16 685, label %6842
    i16 686, label %6860
    i16 687, label %6878
    i16 688, label %6896
    i16 689, label %6914
    i16 690, label %6932
    i16 691, label %6950
    i16 692, label %6968
    i16 693, label %6986
    i16 694, label %7004
    i16 695, label %7022
    i16 697, label %7040
    i16 698, label %7058
    i16 699, label %7076
    i16 696, label %7094
    i16 700, label %7112
    i16 701, label %7130
    i16 702, label %7148
    i16 703, label %7166
    i16 704, label %7184
    i16 705, label %7202
    i16 706, label %7220
    i16 707, label %7238
    i16 710, label %7256
    i16 711, label %7274
    i16 715, label %7292
    i16 712, label %7310
    i16 713, label %7328
    i16 714, label %7346
    i16 716, label %7364
    i16 717, label %7382
    i16 720, label %7400
    i16 721, label %7418
    i16 722, label %7436
    i16 723, label %7454
    i16 724, label %7472
    i16 725, label %7490
    i16 727, label %7508
    i16 726, label %7526
    i16 729, label %7544
    i16 730, label %7562
    i16 731, label %7580
    i16 728, label %7598
    i16 732, label %7616
    i16 733, label %7634
    i16 734, label %7652
    i16 735, label %7670
    i16 736, label %7688
    i16 737, label %7706
    i16 738, label %7724
    i16 739, label %7742
    i16 740, label %7760
  ]

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %42 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 16777215
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 %46
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %56

52:                                               ; preds = %40
  %53 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %42) #12
  %54 = load i32*, i32** %47, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %46
  store i32 %53, i32* %55, align 4
  br label %56

56:                                               ; preds = %40, %52
  %57 = phi i32 [ %53, %52 ], [ %50, %40 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %42, i8 zeroext 9, i32 %57) #12
  %58 = load i32, i32* %43, align 4
  %59 = and i32 %58, 16777215
  %60 = zext i32 %59 to i64
  %61 = load i32*, i32** %47, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %60
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %73

65:                                               ; preds = %56
  %66 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %41, align 8
  %67 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %66) #12
  %68 = load i32*, i32** %47, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %60
  store i32 %67, i32* %69, align 4
  %70 = load i32, i32* %43, align 4
  %71 = and i32 %70, 16777215
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %56, %65
  %74 = phi i64 [ %60, %56 ], [ %72, %65 ]
  %75 = phi i32 [ %63, %56 ], [ %67, %65 ]
  %76 = zext i32 %75 to i64
  %77 = shl nuw nsw i64 %76, 3
  %78 = or i64 %77, 790273982465
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = lshr i64 %74, 6
  %82 = getelementptr inbounds i64, i64* %80, i64 %81
  %83 = and i64 %74, 63
  %84 = shl i64 1, %83
  %85 = load i64, i64* %82, align 8
  %86 = or i64 %85, %84
  store i64 %86, i64* %82, align 8
  %87 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %33, i64 0, i32 0
  store i64 %78, i64* %88, align 8
  %89 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %33, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  br label %7785

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %92 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 16777215
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 %96
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %102, label %106

102:                                              ; preds = %90
  %103 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %92) #12
  %104 = load i32*, i32** %97, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 %96
  store i32 %103, i32* %105, align 4
  br label %106

106:                                              ; preds = %90, %102
  %107 = phi i32 [ %103, %102 ], [ %100, %90 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %92, i8 zeroext 9, i32 %107) #12
  %108 = load i32, i32* %93, align 4
  %109 = and i32 %108, 251658240
  %110 = icmp eq i32 %109, 251658240
  %111 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %112 = add i64 %111, 32
  br i1 %110, label %113, label %117

113:                                              ; preds = %106
  %114 = inttoptr i64 %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 16
  br label %117

117:                                              ; preds = %113, %106
  %118 = phi i64 [ %116, %113 ], [ %112, %106 ]
  %119 = inttoptr i64 %118 to %"class.v8::internal::compiler::Node"**
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %120, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 16777215
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = lshr i64 %124, 6
  %128 = getelementptr inbounds i64, i64* %126, i64 %127
  %129 = and i64 %124, 63
  %130 = shl i64 1, %129
  %131 = load i64, i64* %128, align 8
  %132 = or i64 %130, %131
  store i64 %132, i64* %128, align 8
  %133 = load i32, i32* %93, align 4
  %134 = and i32 %133, 251658240
  %135 = icmp eq i32 %134, 251658240
  br i1 %135, label %136, label %140

136:                                              ; preds = %117
  %137 = inttoptr i64 %112 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 16
  br label %140

140:                                              ; preds = %117, %136
  %141 = phi i64 [ %139, %136 ], [ %112, %117 ]
  %142 = inttoptr i64 %141 to %"class.v8::internal::compiler::Node"**
  %143 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %143) #12
  br label %7785

144:                                              ; preds = %2
  %145 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %146 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %145, align 8
  %147 = tail call i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %146, i64 0, i32 0
  %149 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %148, align 8
  %150 = icmp eq i32 %147, -1
  br i1 %150, label %151, label %155

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %149, i64 0, i32 1
  %153 = bitcast %"class.v8::internal::MachineType"* %152 to i16*
  %154 = load i16, i16* %153, align 4
  br label %169

155:                                              ; preds = %144
  %156 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %149, i64 0, i32 4
  %157 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %156, align 8
  %158 = sext i32 %147 to i64
  %159 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %157, i64 0, i32 2
  %160 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %157, i64 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, %158
  %164 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %160, i64 %163
  %165 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %164 to i64*
  %166 = load i64, i64* %165, align 4
  %167 = lshr i64 %166, 32
  %168 = trunc i64 %167 to i16
  br label %169

169:                                              ; preds = %151, %155
  %170 = phi i16 [ %154, %151 ], [ %168, %155 ]
  %171 = trunc i16 %170 to i8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %173 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 16777215
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %177
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, -1
  br i1 %182, label %183, label %187

183:                                              ; preds = %169
  %184 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %173) #12
  %185 = load i32*, i32** %178, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 %177
  store i32 %184, i32* %186, align 4
  br label %187

187:                                              ; preds = %169, %183
  %188 = phi i32 [ %184, %183 ], [ %181, %169 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %173, i8 zeroext %171, i32 %188) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitParameterEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

189:                                              ; preds = %2
  %190 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %191 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %190, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 16777215
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  %198 = getelementptr inbounds i32, i32* %197, i64 %195
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, -1
  br i1 %200, label %201, label %205

201:                                              ; preds = %189
  %202 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %191) #12
  %203 = load i32*, i32** %196, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 %195
  store i32 %202, i32* %204, align 4
  br label %205

205:                                              ; preds = %189, %201
  %206 = phi i32 [ %202, %201 ], [ %199, %189 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %191, i8 zeroext 9, i32 %206) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitOsrValueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

207:                                              ; preds = %2
  %208 = tail call zeroext i8 @_ZN2v88internal8compiler19PhiRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %7785, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %212 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %214 = load i32, i32* %213, align 4
  %215 = and i32 %214, 16777215
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %218 = load i32*, i32** %217, align 8
  %219 = getelementptr inbounds i32, i32* %218, i64 %216
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, -1
  br i1 %221, label %222, label %226

222:                                              ; preds = %210
  %223 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %212) #12
  %224 = load i32*, i32** %217, align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 %216
  store i32 %223, i32* %225, align 4
  br label %226

226:                                              ; preds = %210, %222
  %227 = phi i32 [ %223, %222 ], [ %220, %210 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %212, i8 zeroext %208, i32 %227) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector8VisitPhiEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

228:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitProjectionEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

229:                                              ; preds = %2, %2, %2, %2, %2, %2
  %230 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #12
  %231 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %32, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %231, align 8
  %232 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %32, %"class.v8::internal::compiler::Node"* %1) #12
  %233 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #12
  %234 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %31, i64 0, i32 0
  store i64 %232, i64* %234, align 8
  %235 = and i64 %232, 7
  %236 = icmp ne i64 %235, 0
  %237 = zext i1 %236 to i64
  %238 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %237, %"class.v8::internal::compiler::InstructionOperand"* nonnull %31, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #12
  br label %7785

239:                                              ; preds = %2
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %241 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %240, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = and i32 %243, 16777215
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %245
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, -1
  br i1 %250, label %251, label %255

251:                                              ; preds = %239
  %252 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %241) #12
  %253 = load i32*, i32** %246, align 8
  %254 = getelementptr inbounds i32, i32* %253, i64 %245
  store i32 %252, i32* %254, align 4
  br label %255

255:                                              ; preds = %239, %251
  %256 = phi i32 [ %252, %251 ], [ %249, %239 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %241, i8 zeroext 12, i32 %256) #12
  %257 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #12
  %258 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %30, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %258, align 8
  %259 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %30, %"class.v8::internal::compiler::Node"* %1) #12
  %260 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #12
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 0, i32 0
  store i64 %259, i64* %261, align 8
  %262 = and i64 %259, 7
  %263 = icmp ne i64 %262, 0
  %264 = zext i1 %263 to i64
  %265 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %264, %"class.v8::internal::compiler::InstructionOperand"* nonnull %29, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #12
  br label %7785

266:                                              ; preds = %2
  %267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %268 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = and i32 %270, 16777215
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = getelementptr inbounds i32, i32* %274, i64 %272
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %276, -1
  br i1 %277, label %278, label %282

278:                                              ; preds = %266
  %279 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %268) #12
  %280 = load i32*, i32** %273, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 %272
  store i32 %279, i32* %281, align 4
  br label %282

282:                                              ; preds = %266, %278
  %283 = phi i32 [ %279, %278 ], [ %276, %266 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %268, i8 zeroext 13, i32 %283) #12
  %284 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #12
  %285 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %28, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %285, align 8
  %286 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %28, %"class.v8::internal::compiler::Node"* %1) #12
  %287 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #12
  %288 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %27, i64 0, i32 0
  store i64 %286, i64* %288, align 8
  %289 = and i64 %286, 7
  %290 = icmp ne i64 %289, 0
  %291 = zext i1 %290 to i64
  %292 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %291, %"class.v8::internal::compiler::InstructionOperand"* nonnull %27, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284) #12
  br label %7785

293:                                              ; preds = %2
  %294 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %295 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %297 = load i32, i32* %296, align 4
  %298 = and i32 %297, 16777215
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 %299
  %303 = load i32, i32* %302, align 4
  %304 = icmp eq i32 %303, -1
  br i1 %304, label %305, label %309

305:                                              ; preds = %293
  %306 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %295) #12
  %307 = load i32*, i32** %300, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 %299
  store i32 %306, i32* %308, align 4
  br label %309

309:                                              ; preds = %293, %305
  %310 = phi i32 [ %306, %305 ], [ %303, %293 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %295, i8 zeroext 9, i32 %310) #12
  %311 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #12
  %312 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %26, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %312, align 8
  %313 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %26, %"class.v8::internal::compiler::Node"* %1) #12
  %314 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #12
  %315 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %25, i64 0, i32 0
  store i64 %313, i64* %315, align 8
  %316 = and i64 %313, 7
  %317 = icmp ne i64 %316, 0
  %318 = zext i1 %317 to i64
  %319 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %318, %"class.v8::internal::compiler::InstructionOperand"* nonnull %25, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #12
  br label %7785

320:                                              ; preds = %2
  %321 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %322 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %324 = load i32, i32* %323, align 4
  %325 = and i32 %324, 16777215
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds i32, i32* %328, i64 %326
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %330, -1
  br i1 %331, label %332, label %336

332:                                              ; preds = %320
  %333 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %322) #12
  %334 = load i32*, i32** %327, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 %326
  store i32 %333, i32* %335, align 4
  br label %336

336:                                              ; preds = %320, %332
  %337 = phi i32 [ %333, %332 ], [ %330, %320 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %322, i8 zeroext 11, i32 %337) #12
  %338 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %24, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %339, align 8
  %340 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %24, %"class.v8::internal::compiler::Node"* %1) #12
  %341 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #12
  %342 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %23, i64 0, i32 0
  store i64 %340, i64* %342, align 8
  %343 = and i64 %340, 7
  %344 = icmp ne i64 %343, 0
  %345 = zext i1 %344 to i64
  %346 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %345, %"class.v8::internal::compiler::InstructionOperand"* nonnull %23, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #12
  br label %7785

347:                                              ; preds = %2
  %348 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 1
  %349 = bitcast %"class.v8::internal::compiler::Operator"* %348 to double*
  %350 = load double, double* %349, align 8
  %351 = fcmp ult double %350, 0xC1D0000000000000
  %352 = fcmp ugt double %350, 0x41CFFFFFFF800000
  %353 = or i1 %352, %351
  %354 = bitcast double %350 to i64
  %355 = icmp eq i64 %354, -9223372036854775808
  %356 = or i1 %353, %355
  br i1 %356, label %361, label %357

357:                                              ; preds = %347
  %358 = fptosi double %350 to i32
  %359 = sitofp i32 %358 to double
  %360 = fcmp oeq double %350, %359
  br i1 %360, label %379, label %361

361:                                              ; preds = %347, %357
  %362 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %363 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %362, align 8
  %364 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %365 = load i32, i32* %364, align 4
  %366 = and i32 %365, 16777215
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = getelementptr inbounds i32, i32* %369, i64 %367
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, -1
  br i1 %372, label %373, label %377

373:                                              ; preds = %361
  %374 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %363) #12
  %375 = load i32*, i32** %368, align 8
  %376 = getelementptr inbounds i32, i32* %375, i64 %367
  store i32 %374, i32* %376, align 4
  br label %377

377:                                              ; preds = %361, %373
  %378 = phi i32 [ %374, %373 ], [ %371, %361 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %363, i8 zeroext 9, i32 %378) #12
  br label %379

379:                                              ; preds = %377, %357
  %380 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #12
  %381 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %22, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %381, align 8
  %382 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %22, %"class.v8::internal::compiler::Node"* %1) #12
  %383 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #12
  %384 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %21, i64 0, i32 0
  store i64 %382, i64* %384, align 8
  %385 = and i64 %382, 7
  %386 = icmp ne i64 %385, 0
  %387 = zext i1 %386 to i64
  %388 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %387, %"class.v8::internal::compiler::InstructionOperand"* nonnull %21, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #12
  br label %7785

389:                                              ; preds = %2
  %390 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %391 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %390, align 8
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %393 = load i32, i32* %392, align 4
  %394 = and i32 %393, 16777215
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %397 = load i32*, i32** %396, align 8
  %398 = getelementptr inbounds i32, i32* %397, i64 %395
  %399 = load i32, i32* %398, align 4
  %400 = icmp eq i32 %399, -1
  br i1 %400, label %401, label %405

401:                                              ; preds = %389
  %402 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %391) #12
  %403 = load i32*, i32** %396, align 8
  %404 = getelementptr inbounds i32, i32* %403, i64 %395
  store i32 %402, i32* %404, align 4
  br label %405

405:                                              ; preds = %389, %401
  %406 = phi i32 [ %402, %401 ], [ %399, %389 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %391, i8 zeroext 9, i32 %406) #12
  %407 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #12
  %408 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %20, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %408, align 8
  %409 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %20, %"class.v8::internal::compiler::Node"* %1) #12
  %410 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #12
  %411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 0, i32 0
  store i64 %409, i64* %411, align 8
  %412 = and i64 %409, 7
  %413 = icmp ne i64 %412, 0
  %414 = zext i1 %413 to i64
  %415 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %414, %"class.v8::internal::compiler::InstructionOperand"* nonnull %19, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #12
  br label %7785

416:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector9VisitCallEPNS1_4NodeEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"* null)
  br label %7785

417:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitDeoptimizeIfEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

418:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitDeoptimizeUnlessEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

419:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector36VisitDynamicCheckMapsWithDeoptUnlessEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

420:                                              ; preds = %2
  %421 = tail call i32 @_ZN2v88internal8compiler8TrapIdOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %422 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %422) #12
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %424 = load i32, i32* %423, align 4
  %425 = and i32 %424, 251658240
  %426 = icmp eq i32 %425, 251658240
  %427 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %428 = add i64 %427, 32
  br i1 %426, label %429, label %433

429:                                              ; preds = %420
  %430 = inttoptr i64 %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = add i64 %431, 16
  br label %433

433:                                              ; preds = %429, %420
  %434 = phi i64 [ %432, %429 ], [ %428, %420 ]
  %435 = inttoptr i64 %434 to %"class.v8::internal::compiler::Node"**
  %436 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, i64 1
  %437 = bitcast %"class.v8::internal::compiler::Node"** %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %18, i64 0, i32 0
  store i32 6, i32* %439, align 8, !alias.scope !271
  %440 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %18, i64 0, i32 1
  store i32 1, i32* %440, align 4, !alias.scope !271
  %441 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %18, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %441, align 8, !alias.scope !271
  %442 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %18, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %442, align 8, !alias.scope !271
  %443 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %18, i64 0, i32 6
  %444 = bitcast %"class.v8::internal::compiler::Node"** %443 to i64*
  store i64 %438, i64* %444, align 8, !alias.scope !271
  %445 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %18, i64 0, i32 11
  store i32 %421, i32* %445, align 8, !alias.scope !271
  br i1 %426, label %446, label %450

446:                                              ; preds = %433
  %447 = inttoptr i64 %428 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = add i64 %448, 16
  br label %450

450:                                              ; preds = %433, %446
  %451 = phi i64 [ %449, %446 ], [ %428, %433 ]
  %452 = inttoptr i64 %451 to %"class.v8::internal::compiler::Node"**
  %453 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %453, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %422) #12
  br label %7785

454:                                              ; preds = %2
  %455 = tail call i32 @_ZN2v88internal8compiler8TrapIdOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %456 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %456) #12
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %458 = load i32, i32* %457, align 4
  %459 = and i32 %458, 251658240
  %460 = icmp eq i32 %459, 251658240
  %461 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %462 = add i64 %461, 32
  br i1 %460, label %463, label %467

463:                                              ; preds = %454
  %464 = inttoptr i64 %462 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = add i64 %465, 16
  br label %467

467:                                              ; preds = %463, %454
  %468 = phi i64 [ %466, %463 ], [ %462, %454 ]
  %469 = inttoptr i64 %468 to %"class.v8::internal::compiler::Node"**
  %470 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %469, i64 1
  %471 = bitcast %"class.v8::internal::compiler::Node"** %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %17, i64 0, i32 0
  store i32 6, i32* %473, align 8, !alias.scope !274
  %474 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %17, i64 0, i32 1
  store i32 0, i32* %474, align 4, !alias.scope !274
  %475 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %17, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %475, align 8, !alias.scope !274
  %476 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %17, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %476, align 8, !alias.scope !274
  %477 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %17, i64 0, i32 6
  %478 = bitcast %"class.v8::internal::compiler::Node"** %477 to i64*
  store i64 %472, i64* %478, align 8, !alias.scope !274
  %479 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %17, i64 0, i32 11
  store i32 %455, i32* %479, align 8, !alias.scope !274
  br i1 %460, label %480, label %484

480:                                              ; preds = %467
  %481 = inttoptr i64 %462 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 16
  br label %484

484:                                              ; preds = %467, %480
  %485 = phi i64 [ %483, %480 ], [ %462, %467 ]
  %486 = inttoptr i64 %485 to %"class.v8::internal::compiler::Node"**
  %487 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %487, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %456) #12
  br label %7785

488:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitAbortCSAAssertEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

489:                                              ; preds = %2
  %490 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %490) #12
  %491 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %16, i64 0, i32 0
  store i64 0, i64* %491, align 8
  %492 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 17, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %16, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %490) #12
  br label %7785

493:                                              ; preds = %2
  %494 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %494) #12
  %495 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %15, i64 0, i32 0
  store i64 0, i64* %495, align 8
  %496 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 17, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %15, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %494) #12
  br label %7785

497:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitStaticAssertEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  unreachable

498:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitDeadValueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

499:                                              ; preds = %2
  %500 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %500) #12
  %501 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %502 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %501, align 8
  %503 = bitcast %"class.v8::internal::compiler::Constant"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %503) #12
  %504 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1) #12
  %505 = bitcast %"class.v8::internal::compiler::Constant"* %13 to i64*
  %506 = extractvalue { i64, i64 } %504, 0
  store i64 %506, i64* %505, align 8
  %507 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %13, i64 0, i32 2
  %508 = extractvalue { i64, i64 } %504, 1
  store i64 %508, i64* %507, align 8
  %509 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %502, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %503) #12
  %510 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %14, i64 0, i32 0
  store i64 %509, i64* %510, align 8
  %511 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 18, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %14, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %500) #12
  br label %7785

512:                                              ; preds = %2
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %514 = load i32, i32* %513, align 4
  %515 = and i32 %514, 251658240
  %516 = icmp eq i32 %515, 251658240
  %517 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %518 = add i64 %517, 32
  br i1 %516, label %519, label %523

519:                                              ; preds = %512
  %520 = inttoptr i64 %518 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = add i64 %521, 16
  br label %523

523:                                              ; preds = %519, %512
  %524 = phi i64 [ %522, %519 ], [ %518, %512 ]
  %525 = inttoptr i64 %524 to %"class.v8::internal::compiler::Node"**
  %526 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %525, align 8
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %526, i64 0, i32 3
  %528 = load i32, i32* %527, align 4
  %529 = and i32 %528, 16777215
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %532 = load i32*, i32** %531, align 8
  %533 = getelementptr inbounds i32, i32* %532, i64 %530
  %534 = load i32, i32* %533, align 4
  %535 = icmp eq i32 %534, -1
  br i1 %535, label %536, label %545

536:                                              ; preds = %523
  %537 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %538 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %537, align 8
  %539 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %538) #12
  %540 = load i32*, i32** %531, align 8
  %541 = getelementptr inbounds i32, i32* %540, i64 %530
  store i32 %539, i32* %541, align 4
  %542 = load i32, i32* %527, align 4
  %543 = and i32 %542, 16777215
  %544 = zext i32 %543 to i64
  br label %545

545:                                              ; preds = %523, %536
  %546 = phi i64 [ %530, %523 ], [ %544, %536 ]
  %547 = phi i32 [ %534, %523 ], [ %539, %536 ]
  %548 = zext i32 %547 to i64
  %549 = shl nuw nsw i64 %548, 3
  %550 = or i64 %549, 103079215105
  %551 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %552 = load i64*, i64** %551, align 8
  %553 = lshr i64 %546, 6
  %554 = getelementptr inbounds i64, i64* %552, i64 %553
  %555 = and i64 %546, 63
  %556 = shl i64 1, %555
  %557 = load i64, i64* %554, align 8
  %558 = or i64 %557, %556
  store i64 %558, i64* %554, align 8
  %559 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %559) #12
  %560 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #12
  %561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %11, i64 0, i32 0
  store i64 0, i64* %561, align 8
  %562 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %12, i64 0, i32 0
  store i64 %550, i64* %562, align 8
  %563 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %11, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %559) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #12
  br label %7785

564:                                              ; preds = %2, %2
  %565 = tail call i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %566 = trunc i16 %565 to i8
  %567 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %568 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %567, align 8
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %570 = load i32, i32* %569, align 4
  %571 = and i32 %570, 16777215
  %572 = zext i32 %571 to i64
  %573 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %574 = load i32*, i32** %573, align 8
  %575 = getelementptr inbounds i32, i32* %574, i64 %572
  %576 = load i32, i32* %575, align 4
  %577 = icmp eq i32 %576, -1
  br i1 %577, label %578, label %582

578:                                              ; preds = %564
  %579 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %568) #12
  %580 = load i32*, i32** %573, align 8
  %581 = getelementptr inbounds i32, i32* %580, i64 %572
  store i32 %579, i32* %581, align 4
  br label %582

582:                                              ; preds = %564, %578
  %583 = phi i32 [ %579, %578 ], [ %576, %564 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %568, i8 zeroext %566, i32 %583) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector9VisitLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

584:                                              ; preds = %2
  %585 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %586 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %585, align 8
  %587 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %588 = load i32, i32* %587, align 4
  %589 = and i32 %588, 16777215
  %590 = zext i32 %589 to i64
  %591 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %592 = load i32*, i32** %591, align 8
  %593 = getelementptr inbounds i32, i32* %592, i64 %590
  %594 = load i32, i32* %593, align 4
  %595 = icmp eq i32 %594, -1
  br i1 %595, label %596, label %600

596:                                              ; preds = %584
  %597 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %586) #12
  %598 = load i32*, i32** %591, align 8
  %599 = getelementptr inbounds i32, i32* %598, i64 %590
  store i32 %597, i32* %599, align 4
  br label %600

600:                                              ; preds = %584, %596
  %601 = phi i32 [ %597, %596 ], [ %594, %584 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %586, i8 zeroext 14, i32 %601) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitLoadTransformEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

602:                                              ; preds = %2
  %603 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %604 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %603, align 8
  %605 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %606 = load i32, i32* %605, align 4
  %607 = and i32 %606, 16777215
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %610 = load i32*, i32** %609, align 8
  %611 = getelementptr inbounds i32, i32* %610, i64 %608
  %612 = load i32, i32* %611, align 4
  %613 = icmp eq i32 %612, -1
  br i1 %613, label %614, label %618

614:                                              ; preds = %602
  %615 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %604) #12
  %616 = load i32*, i32** %609, align 8
  %617 = getelementptr inbounds i32, i32* %616, i64 %608
  store i32 %615, i32* %617, align 4
  br label %618

618:                                              ; preds = %602, %614
  %619 = phi i32 [ %615, %614 ], [ %612, %602 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %604, i8 zeroext 14, i32 %619) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitLoadLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

620:                                              ; preds = %2
  %621 = tail call i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %622 = trunc i16 %621 to i8
  %623 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %624 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %623, align 8
  %625 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %626 = load i32, i32* %625, align 4
  %627 = and i32 %626, 16777215
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %630 = load i32*, i32** %629, align 8
  %631 = getelementptr inbounds i32, i32* %630, i64 %628
  %632 = load i32, i32* %631, align 4
  %633 = icmp eq i32 %632, -1
  br i1 %633, label %634, label %638

634:                                              ; preds = %620
  %635 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %624) #12
  %636 = load i32*, i32** %629, align 8
  %637 = getelementptr inbounds i32, i32* %636, i64 %628
  store i32 %635, i32* %637, align 4
  br label %638

638:                                              ; preds = %620, %634
  %639 = phi i32 [ %635, %634 ], [ %632, %620 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %624, i8 zeroext %622, i32 %639) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitPoisonedLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

640:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector10VisitStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

641:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitProtectedStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

642:                                              ; preds = %2
  %643 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %644 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %643, align 8
  %645 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %646 = load i32, i32* %645, align 4
  %647 = and i32 %646, 16777215
  %648 = zext i32 %647 to i64
  %649 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %650 = load i32*, i32** %649, align 8
  %651 = getelementptr inbounds i32, i32* %650, i64 %648
  %652 = load i32, i32* %651, align 4
  %653 = icmp eq i32 %652, -1
  br i1 %653, label %654, label %658

654:                                              ; preds = %642
  %655 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %644) #12
  %656 = load i32*, i32** %649, align 8
  %657 = getelementptr inbounds i32, i32* %656, i64 %648
  store i32 %655, i32* %657, align 4
  br label %658

658:                                              ; preds = %642, %654
  %659 = phi i32 [ %655, %654 ], [ %652, %642 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %644, i8 zeroext 14, i32 %659) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitStoreLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

660:                                              ; preds = %2
  %661 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %662 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %661, align 8
  %663 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %664 = load i32, i32* %663, align 4
  %665 = and i32 %664, 16777215
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %668 = load i32*, i32** %667, align 8
  %669 = getelementptr inbounds i32, i32* %668, i64 %666
  %670 = load i32, i32* %669, align 4
  %671 = icmp eq i32 %670, -1
  br i1 %671, label %672, label %676

672:                                              ; preds = %660
  %673 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %662) #12
  %674 = load i32*, i32** %667, align 8
  %675 = getelementptr inbounds i32, i32* %674, i64 %666
  store i32 %673, i32* %675, align 4
  br label %676

676:                                              ; preds = %660, %672
  %677 = phi i32 [ %673, %672 ], [ %670, %660 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %662, i8 zeroext 4, i32 %677) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32AndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

678:                                              ; preds = %2
  %679 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %680 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %679, align 8
  %681 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %682 = load i32, i32* %681, align 4
  %683 = and i32 %682, 16777215
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %686 = load i32*, i32** %685, align 8
  %687 = getelementptr inbounds i32, i32* %686, i64 %684
  %688 = load i32, i32* %687, align 4
  %689 = icmp eq i32 %688, -1
  br i1 %689, label %690, label %694

690:                                              ; preds = %678
  %691 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %680) #12
  %692 = load i32*, i32** %685, align 8
  %693 = getelementptr inbounds i32, i32* %692, i64 %684
  store i32 %691, i32* %693, align 4
  br label %694

694:                                              ; preds = %678, %690
  %695 = phi i32 [ %691, %690 ], [ %688, %678 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %680, i8 zeroext 4, i32 %695) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitWord32OrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

696:                                              ; preds = %2
  %697 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %698 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %697, align 8
  %699 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %700 = load i32, i32* %699, align 4
  %701 = and i32 %700, 16777215
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %704 = load i32*, i32** %703, align 8
  %705 = getelementptr inbounds i32, i32* %704, i64 %702
  %706 = load i32, i32* %705, align 4
  %707 = icmp eq i32 %706, -1
  br i1 %707, label %708, label %712

708:                                              ; preds = %696
  %709 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %698) #12
  %710 = load i32*, i32** %703, align 8
  %711 = getelementptr inbounds i32, i32* %710, i64 %702
  store i32 %709, i32* %711, align 4
  br label %712

712:                                              ; preds = %696, %708
  %713 = phi i32 [ %709, %708 ], [ %706, %696 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %698, i8 zeroext 4, i32 %713) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32XorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

714:                                              ; preds = %2
  %715 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %716 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %715, align 8
  %717 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %718 = load i32, i32* %717, align 4
  %719 = and i32 %718, 16777215
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %722 = load i32*, i32** %721, align 8
  %723 = getelementptr inbounds i32, i32* %722, i64 %720
  %724 = load i32, i32* %723, align 4
  %725 = icmp eq i32 %724, -1
  br i1 %725, label %726, label %730

726:                                              ; preds = %714
  %727 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %716) #12
  %728 = load i32*, i32** %721, align 8
  %729 = getelementptr inbounds i32, i32* %728, i64 %720
  store i32 %727, i32* %729, align 4
  br label %730

730:                                              ; preds = %714, %726
  %731 = phi i32 [ %727, %726 ], [ %724, %714 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %716, i8 zeroext 4, i32 %731) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

732:                                              ; preds = %2
  %733 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %734 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %733, align 8
  %735 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %736 = load i32, i32* %735, align 4
  %737 = and i32 %736, 16777215
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %740 = load i32*, i32** %739, align 8
  %741 = getelementptr inbounds i32, i32* %740, i64 %738
  %742 = load i32, i32* %741, align 4
  %743 = icmp eq i32 %742, -1
  br i1 %743, label %744, label %748

744:                                              ; preds = %732
  %745 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %734) #12
  %746 = load i32*, i32** %739, align 8
  %747 = getelementptr inbounds i32, i32* %746, i64 %738
  store i32 %745, i32* %747, align 4
  br label %748

748:                                              ; preds = %732, %744
  %749 = phi i32 [ %745, %744 ], [ %742, %732 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %734, i8 zeroext 4, i32 %749) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32ShrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

750:                                              ; preds = %2
  %751 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %752 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %751, align 8
  %753 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %754 = load i32, i32* %753, align 4
  %755 = and i32 %754, 16777215
  %756 = zext i32 %755 to i64
  %757 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %758 = load i32*, i32** %757, align 8
  %759 = getelementptr inbounds i32, i32* %758, i64 %756
  %760 = load i32, i32* %759, align 4
  %761 = icmp eq i32 %760, -1
  br i1 %761, label %762, label %766

762:                                              ; preds = %750
  %763 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %752) #12
  %764 = load i32*, i32** %757, align 8
  %765 = getelementptr inbounds i32, i32* %764, i64 %756
  store i32 %763, i32* %765, align 4
  br label %766

766:                                              ; preds = %750, %762
  %767 = phi i32 [ %763, %762 ], [ %760, %750 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %752, i8 zeroext 4, i32 %767) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32SarEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

768:                                              ; preds = %2
  %769 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %770 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %769, align 8
  %771 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %772 = load i32, i32* %771, align 4
  %773 = and i32 %772, 16777215
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %776 = load i32*, i32** %775, align 8
  %777 = getelementptr inbounds i32, i32* %776, i64 %774
  %778 = load i32, i32* %777, align 4
  %779 = icmp eq i32 %778, -1
  br i1 %779, label %780, label %784

780:                                              ; preds = %768
  %781 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %770) #12
  %782 = load i32*, i32** %775, align 8
  %783 = getelementptr inbounds i32, i32* %782, i64 %774
  store i32 %781, i32* %783, align 4
  br label %784

784:                                              ; preds = %768, %780
  %785 = phi i32 [ %781, %780 ], [ %778, %768 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %770, i8 zeroext 4, i32 %785) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32RolEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

786:                                              ; preds = %2
  %787 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %788 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %787, align 8
  %789 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %790 = load i32, i32* %789, align 4
  %791 = and i32 %790, 16777215
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %794 = load i32*, i32** %793, align 8
  %795 = getelementptr inbounds i32, i32* %794, i64 %792
  %796 = load i32, i32* %795, align 4
  %797 = icmp eq i32 %796, -1
  br i1 %797, label %798, label %802

798:                                              ; preds = %786
  %799 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %788) #12
  %800 = load i32*, i32** %793, align 8
  %801 = getelementptr inbounds i32, i32* %800, i64 %792
  store i32 %799, i32* %801, align 4
  br label %802

802:                                              ; preds = %786, %798
  %803 = phi i32 [ %799, %798 ], [ %796, %786 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %788, i8 zeroext 4, i32 %803) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32RorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

804:                                              ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector16VisitWord32EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

805:                                              ; preds = %2
  %806 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %807 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %806, align 8
  %808 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %809 = load i32, i32* %808, align 4
  %810 = and i32 %809, 16777215
  %811 = zext i32 %810 to i64
  %812 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %813 = load i32*, i32** %812, align 8
  %814 = getelementptr inbounds i32, i32* %813, i64 %811
  %815 = load i32, i32* %814, align 4
  %816 = icmp eq i32 %815, -1
  br i1 %816, label %817, label %821

817:                                              ; preds = %805
  %818 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %807) #12
  %819 = load i32*, i32** %812, align 8
  %820 = getelementptr inbounds i32, i32* %819, i64 %811
  store i32 %818, i32* %820, align 4
  br label %821

821:                                              ; preds = %805, %817
  %822 = phi i32 [ %818, %817 ], [ %815, %805 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %807, i8 zeroext 4, i32 %822) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32ClzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

823:                                              ; preds = %2
  %824 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %825 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %824, align 8
  %826 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %827 = load i32, i32* %826, align 4
  %828 = and i32 %827, 16777215
  %829 = zext i32 %828 to i64
  %830 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %831 = load i32*, i32** %830, align 8
  %832 = getelementptr inbounds i32, i32* %831, i64 %829
  %833 = load i32, i32* %832, align 4
  %834 = icmp eq i32 %833, -1
  br i1 %834, label %835, label %839

835:                                              ; preds = %823
  %836 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %825) #12
  %837 = load i32*, i32** %830, align 8
  %838 = getelementptr inbounds i32, i32* %837, i64 %829
  store i32 %836, i32* %838, align 4
  br label %839

839:                                              ; preds = %823, %835
  %840 = phi i32 [ %836, %835 ], [ %833, %823 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %825, i8 zeroext 4, i32 %840) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32CtzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

841:                                              ; preds = %2
  %842 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %843 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %842, align 8
  %844 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %845 = load i32, i32* %844, align 4
  %846 = and i32 %845, 16777215
  %847 = zext i32 %846 to i64
  %848 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %849 = load i32*, i32** %848, align 8
  %850 = getelementptr inbounds i32, i32* %849, i64 %847
  %851 = load i32, i32* %850, align 4
  %852 = icmp eq i32 %851, -1
  br i1 %852, label %853, label %857

853:                                              ; preds = %841
  %854 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %843) #12
  %855 = load i32*, i32** %848, align 8
  %856 = getelementptr inbounds i32, i32* %855, i64 %847
  store i32 %854, i32* %856, align 4
  br label %857

857:                                              ; preds = %841, %853
  %858 = phi i32 [ %854, %853 ], [ %851, %841 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %843, i8 zeroext 4, i32 %858) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitWord32ReverseBitsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

859:                                              ; preds = %2
  %860 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %861 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %860, align 8
  %862 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %863 = load i32, i32* %862, align 4
  %864 = and i32 %863, 16777215
  %865 = zext i32 %864 to i64
  %866 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %867 = load i32*, i32** %866, align 8
  %868 = getelementptr inbounds i32, i32* %867, i64 %865
  %869 = load i32, i32* %868, align 4
  %870 = icmp eq i32 %869, -1
  br i1 %870, label %871, label %875

871:                                              ; preds = %859
  %872 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %861) #12
  %873 = load i32*, i32** %866, align 8
  %874 = getelementptr inbounds i32, i32* %873, i64 %865
  store i32 %872, i32* %874, align 4
  br label %875

875:                                              ; preds = %859, %871
  %876 = phi i32 [ %872, %871 ], [ %869, %859 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %861, i8 zeroext 4, i32 %876) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitWord32ReverseBytesEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

877:                                              ; preds = %2
  %878 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %879 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %878, align 8
  %880 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %881 = load i32, i32* %880, align 4
  %882 = and i32 %881, 16777215
  %883 = zext i32 %882 to i64
  %884 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %885 = load i32*, i32** %884, align 8
  %886 = getelementptr inbounds i32, i32* %885, i64 %883
  %887 = load i32, i32* %886, align 4
  %888 = icmp eq i32 %887, -1
  br i1 %888, label %889, label %893

889:                                              ; preds = %877
  %890 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %879) #12
  %891 = load i32*, i32** %884, align 8
  %892 = getelementptr inbounds i32, i32* %891, i64 %883
  store i32 %890, i32* %892, align 4
  br label %893

893:                                              ; preds = %877, %889
  %894 = phi i32 [ %890, %889 ], [ %887, %877 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %879, i8 zeroext 4, i32 %894) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32AbsWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

895:                                              ; preds = %2
  %896 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %897 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %896, align 8
  %898 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %899 = load i32, i32* %898, align 4
  %900 = and i32 %899, 16777215
  %901 = zext i32 %900 to i64
  %902 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %903 = load i32*, i32** %902, align 8
  %904 = getelementptr inbounds i32, i32* %903, i64 %901
  %905 = load i32, i32* %904, align 4
  %906 = icmp eq i32 %905, -1
  br i1 %906, label %907, label %911

907:                                              ; preds = %895
  %908 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %897) #12
  %909 = load i32*, i32** %902, align 8
  %910 = getelementptr inbounds i32, i32* %909, i64 %901
  store i32 %908, i32* %910, align 4
  br label %911

911:                                              ; preds = %895, %907
  %912 = phi i32 [ %908, %907 ], [ %905, %895 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %897, i8 zeroext 4, i32 %912) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitWord32PopcntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

913:                                              ; preds = %2
  %914 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %915 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %914, align 8
  %916 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %917 = load i32, i32* %916, align 4
  %918 = and i32 %917, 16777215
  %919 = zext i32 %918 to i64
  %920 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %921 = load i32*, i32** %920, align 8
  %922 = getelementptr inbounds i32, i32* %921, i64 %919
  %923 = load i32, i32* %922, align 4
  %924 = icmp eq i32 %923, -1
  br i1 %924, label %925, label %929

925:                                              ; preds = %913
  %926 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %915) #12
  %927 = load i32*, i32** %920, align 8
  %928 = getelementptr inbounds i32, i32* %927, i64 %919
  store i32 %926, i32* %928, align 4
  br label %929

929:                                              ; preds = %913, %925
  %930 = phi i32 [ %926, %925 ], [ %923, %913 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %915, i8 zeroext 4, i32 %930) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitWord64PopcntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

931:                                              ; preds = %2
  %932 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %933 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %932, align 8
  %934 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %935 = load i32, i32* %934, align 4
  %936 = and i32 %935, 16777215
  %937 = zext i32 %936 to i64
  %938 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %939 = load i32*, i32** %938, align 8
  %940 = getelementptr inbounds i32, i32* %939, i64 %937
  %941 = load i32, i32* %940, align 4
  %942 = icmp eq i32 %941, -1
  br i1 %942, label %943, label %947

943:                                              ; preds = %931
  %944 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %933) #12
  %945 = load i32*, i32** %938, align 8
  %946 = getelementptr inbounds i32, i32* %945, i64 %937
  store i32 %944, i32* %946, align 4
  br label %947

947:                                              ; preds = %931, %943
  %948 = phi i32 [ %944, %943 ], [ %941, %931 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %933, i8 zeroext 4, i32 %948) #12
  %949 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %949) #12
  %950 = load i32, i32* %934, align 4
  %951 = and i32 %950, 251658240
  %952 = icmp eq i32 %951, 251658240
  %953 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %954 = add i64 %953, 32
  br i1 %952, label %955, label %959

955:                                              ; preds = %947
  %956 = inttoptr i64 %954 to i64*
  %957 = load i64, i64* %956, align 8
  %958 = add i64 %957, 16
  br label %959

959:                                              ; preds = %955, %947
  %960 = phi i64 [ %958, %955 ], [ %954, %947 ]
  %961 = inttoptr i64 %960 to %"class.v8::internal::compiler::Node"**
  %962 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %961, i64 1
  %963 = bitcast %"class.v8::internal::compiler::Node"** %962 to <2 x i64>*
  %964 = load <2 x i64>, <2 x i64>* %963, align 8
  %965 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %10, i64 0, i32 0
  store i32 7, i32* %965, align 8, !alias.scope !277
  %966 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %10, i64 0, i32 1
  store i32 1, i32* %966, align 4, !alias.scope !277
  %967 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %10, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %967, align 8, !alias.scope !277
  %968 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %10, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %968, align 8, !alias.scope !277
  %969 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %10, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %969, align 8, !alias.scope !277
  %970 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %10, i64 0, i32 12
  %971 = bitcast %"class.v8::internal::compiler::Node"** %970 to <2 x i64>*
  store <2 x i64> %964, <2 x i64>* %971, align 8, !alias.scope !277
  br i1 %952, label %972, label %976

972:                                              ; preds = %959
  %973 = inttoptr i64 %954 to i64*
  %974 = load i64, i64* %973, align 8
  %975 = add i64 %974, 16
  br label %976

976:                                              ; preds = %959, %972
  %977 = phi i64 [ %975, %972 ], [ %954, %959 ]
  %978 = inttoptr i64 %977 to %"class.v8::internal::compiler::Node"**
  %979 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %978, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %979, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %949) #12
  br label %7785

980:                                              ; preds = %2
  %981 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %982 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %981, align 8
  %983 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %984 = load i32, i32* %983, align 4
  %985 = and i32 %984, 16777215
  %986 = zext i32 %985 to i64
  %987 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %988 = load i32*, i32** %987, align 8
  %989 = getelementptr inbounds i32, i32* %988, i64 %986
  %990 = load i32, i32* %989, align 4
  %991 = icmp eq i32 %990, -1
  br i1 %991, label %992, label %996

992:                                              ; preds = %980
  %993 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %982) #12
  %994 = load i32*, i32** %987, align 8
  %995 = getelementptr inbounds i32, i32* %994, i64 %986
  store i32 %993, i32* %995, align 4
  br label %996

996:                                              ; preds = %980, %992
  %997 = phi i32 [ %993, %992 ], [ %990, %980 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %982, i8 zeroext 5, i32 %997) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64AndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

998:                                              ; preds = %2
  %999 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1000 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %999, align 8
  %1001 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1002 = load i32, i32* %1001, align 4
  %1003 = and i32 %1002, 16777215
  %1004 = zext i32 %1003 to i64
  %1005 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1006 = load i32*, i32** %1005, align 8
  %1007 = getelementptr inbounds i32, i32* %1006, i64 %1004
  %1008 = load i32, i32* %1007, align 4
  %1009 = icmp eq i32 %1008, -1
  br i1 %1009, label %1010, label %1014

1010:                                             ; preds = %998
  %1011 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1000) #12
  %1012 = load i32*, i32** %1005, align 8
  %1013 = getelementptr inbounds i32, i32* %1012, i64 %1004
  store i32 %1011, i32* %1013, align 4
  br label %1014

1014:                                             ; preds = %998, %1010
  %1015 = phi i32 [ %1011, %1010 ], [ %1008, %998 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1000, i8 zeroext 5, i32 %1015) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitWord64OrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1016:                                             ; preds = %2
  %1017 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1018 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1017, align 8
  %1019 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1020 = load i32, i32* %1019, align 4
  %1021 = and i32 %1020, 16777215
  %1022 = zext i32 %1021 to i64
  %1023 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1024 = load i32*, i32** %1023, align 8
  %1025 = getelementptr inbounds i32, i32* %1024, i64 %1022
  %1026 = load i32, i32* %1025, align 4
  %1027 = icmp eq i32 %1026, -1
  br i1 %1027, label %1028, label %1032

1028:                                             ; preds = %1016
  %1029 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1018) #12
  %1030 = load i32*, i32** %1023, align 8
  %1031 = getelementptr inbounds i32, i32* %1030, i64 %1022
  store i32 %1029, i32* %1031, align 4
  br label %1032

1032:                                             ; preds = %1016, %1028
  %1033 = phi i32 [ %1029, %1028 ], [ %1026, %1016 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1018, i8 zeroext 5, i32 %1033) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64XorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1034:                                             ; preds = %2
  %1035 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1036 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1035, align 8
  %1037 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1038 = load i32, i32* %1037, align 4
  %1039 = and i32 %1038, 16777215
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1042 = load i32*, i32** %1041, align 8
  %1043 = getelementptr inbounds i32, i32* %1042, i64 %1040
  %1044 = load i32, i32* %1043, align 4
  %1045 = icmp eq i32 %1044, -1
  br i1 %1045, label %1046, label %1050

1046:                                             ; preds = %1034
  %1047 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1036) #12
  %1048 = load i32*, i32** %1041, align 8
  %1049 = getelementptr inbounds i32, i32* %1048, i64 %1040
  store i32 %1047, i32* %1049, align 4
  br label %1050

1050:                                             ; preds = %1034, %1046
  %1051 = phi i32 [ %1047, %1046 ], [ %1044, %1034 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1036, i8 zeroext 5, i32 %1051) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1052:                                             ; preds = %2
  %1053 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1054 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1053, align 8
  %1055 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1056 = load i32, i32* %1055, align 4
  %1057 = and i32 %1056, 16777215
  %1058 = zext i32 %1057 to i64
  %1059 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1060 = load i32*, i32** %1059, align 8
  %1061 = getelementptr inbounds i32, i32* %1060, i64 %1058
  %1062 = load i32, i32* %1061, align 4
  %1063 = icmp eq i32 %1062, -1
  br i1 %1063, label %1064, label %1068

1064:                                             ; preds = %1052
  %1065 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1054) #12
  %1066 = load i32*, i32** %1059, align 8
  %1067 = getelementptr inbounds i32, i32* %1066, i64 %1058
  store i32 %1065, i32* %1067, align 4
  br label %1068

1068:                                             ; preds = %1052, %1064
  %1069 = phi i32 [ %1065, %1064 ], [ %1062, %1052 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1054, i8 zeroext 5, i32 %1069) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64ShrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1070:                                             ; preds = %2
  %1071 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1072 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1071, align 8
  %1073 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1074 = load i32, i32* %1073, align 4
  %1075 = and i32 %1074, 16777215
  %1076 = zext i32 %1075 to i64
  %1077 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1078 = load i32*, i32** %1077, align 8
  %1079 = getelementptr inbounds i32, i32* %1078, i64 %1076
  %1080 = load i32, i32* %1079, align 4
  %1081 = icmp eq i32 %1080, -1
  br i1 %1081, label %1082, label %1086

1082:                                             ; preds = %1070
  %1083 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1072) #12
  %1084 = load i32*, i32** %1077, align 8
  %1085 = getelementptr inbounds i32, i32* %1084, i64 %1076
  store i32 %1083, i32* %1085, align 4
  br label %1086

1086:                                             ; preds = %1070, %1082
  %1087 = phi i32 [ %1083, %1082 ], [ %1080, %1070 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1072, i8 zeroext 5, i32 %1087) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64SarEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1088:                                             ; preds = %2
  %1089 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1090 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1089, align 8
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1092 = load i32, i32* %1091, align 4
  %1093 = and i32 %1092, 16777215
  %1094 = zext i32 %1093 to i64
  %1095 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1096 = load i32*, i32** %1095, align 8
  %1097 = getelementptr inbounds i32, i32* %1096, i64 %1094
  %1098 = load i32, i32* %1097, align 4
  %1099 = icmp eq i32 %1098, -1
  br i1 %1099, label %1100, label %1104

1100:                                             ; preds = %1088
  %1101 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1090) #12
  %1102 = load i32*, i32** %1095, align 8
  %1103 = getelementptr inbounds i32, i32* %1102, i64 %1094
  store i32 %1101, i32* %1103, align 4
  br label %1104

1104:                                             ; preds = %1088, %1100
  %1105 = phi i32 [ %1101, %1100 ], [ %1098, %1088 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1090, i8 zeroext 5, i32 %1105) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64RolEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1106:                                             ; preds = %2
  %1107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1108 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1107, align 8
  %1109 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1110 = load i32, i32* %1109, align 4
  %1111 = and i32 %1110, 16777215
  %1112 = zext i32 %1111 to i64
  %1113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1114 = load i32*, i32** %1113, align 8
  %1115 = getelementptr inbounds i32, i32* %1114, i64 %1112
  %1116 = load i32, i32* %1115, align 4
  %1117 = icmp eq i32 %1116, -1
  br i1 %1117, label %1118, label %1122

1118:                                             ; preds = %1106
  %1119 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1108) #12
  %1120 = load i32*, i32** %1113, align 8
  %1121 = getelementptr inbounds i32, i32* %1120, i64 %1112
  store i32 %1119, i32* %1121, align 4
  br label %1122

1122:                                             ; preds = %1106, %1118
  %1123 = phi i32 [ %1119, %1118 ], [ %1116, %1106 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1108, i8 zeroext 5, i32 %1123) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64RorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1124:                                             ; preds = %2
  %1125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1126 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1125, align 8
  %1127 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1128 = load i32, i32* %1127, align 4
  %1129 = and i32 %1128, 16777215
  %1130 = zext i32 %1129 to i64
  %1131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1132 = load i32*, i32** %1131, align 8
  %1133 = getelementptr inbounds i32, i32* %1132, i64 %1130
  %1134 = load i32, i32* %1133, align 4
  %1135 = icmp eq i32 %1134, -1
  br i1 %1135, label %1136, label %1140

1136:                                             ; preds = %1124
  %1137 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1126) #12
  %1138 = load i32*, i32** %1131, align 8
  %1139 = getelementptr inbounds i32, i32* %1138, i64 %1130
  store i32 %1137, i32* %1139, align 4
  br label %1140

1140:                                             ; preds = %1124, %1136
  %1141 = phi i32 [ %1137, %1136 ], [ %1134, %1124 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1126, i8 zeroext 5, i32 %1141) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64ClzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1142:                                             ; preds = %2
  %1143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1144 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1143, align 8
  %1145 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1146 = load i32, i32* %1145, align 4
  %1147 = and i32 %1146, 16777215
  %1148 = zext i32 %1147 to i64
  %1149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1150 = load i32*, i32** %1149, align 8
  %1151 = getelementptr inbounds i32, i32* %1150, i64 %1148
  %1152 = load i32, i32* %1151, align 4
  %1153 = icmp eq i32 %1152, -1
  br i1 %1153, label %1154, label %1158

1154:                                             ; preds = %1142
  %1155 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1144) #12
  %1156 = load i32*, i32** %1149, align 8
  %1157 = getelementptr inbounds i32, i32* %1156, i64 %1148
  store i32 %1155, i32* %1157, align 4
  br label %1158

1158:                                             ; preds = %1142, %1154
  %1159 = phi i32 [ %1155, %1154 ], [ %1152, %1142 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1144, i8 zeroext 5, i32 %1159) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64CtzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1160:                                             ; preds = %2
  %1161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1162 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1161, align 8
  %1163 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1164 = load i32, i32* %1163, align 4
  %1165 = and i32 %1164, 16777215
  %1166 = zext i32 %1165 to i64
  %1167 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1168 = load i32*, i32** %1167, align 8
  %1169 = getelementptr inbounds i32, i32* %1168, i64 %1166
  %1170 = load i32, i32* %1169, align 4
  %1171 = icmp eq i32 %1170, -1
  br i1 %1171, label %1172, label %1176

1172:                                             ; preds = %1160
  %1173 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1162) #12
  %1174 = load i32*, i32** %1167, align 8
  %1175 = getelementptr inbounds i32, i32* %1174, i64 %1166
  store i32 %1173, i32* %1175, align 4
  br label %1176

1176:                                             ; preds = %1160, %1172
  %1177 = phi i32 [ %1173, %1172 ], [ %1170, %1160 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1162, i8 zeroext 5, i32 %1177) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitWord64ReverseBitsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1178:                                             ; preds = %2
  %1179 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1180 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1179, align 8
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1182 = load i32, i32* %1181, align 4
  %1183 = and i32 %1182, 16777215
  %1184 = zext i32 %1183 to i64
  %1185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1186 = load i32*, i32** %1185, align 8
  %1187 = getelementptr inbounds i32, i32* %1186, i64 %1184
  %1188 = load i32, i32* %1187, align 4
  %1189 = icmp eq i32 %1188, -1
  br i1 %1189, label %1190, label %1194

1190:                                             ; preds = %1178
  %1191 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1180) #12
  %1192 = load i32*, i32** %1185, align 8
  %1193 = getelementptr inbounds i32, i32* %1192, i64 %1184
  store i32 %1191, i32* %1193, align 4
  br label %1194

1194:                                             ; preds = %1178, %1190
  %1195 = phi i32 [ %1191, %1190 ], [ %1188, %1178 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1180, i8 zeroext 5, i32 %1195) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitWord64ReverseBytesEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1196:                                             ; preds = %2
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1198 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1197, align 8
  %1199 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1200 = load i32, i32* %1199, align 4
  %1201 = and i32 %1200, 16777215
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1204 = load i32*, i32** %1203, align 8
  %1205 = getelementptr inbounds i32, i32* %1204, i64 %1202
  %1206 = load i32, i32* %1205, align 4
  %1207 = icmp eq i32 %1206, -1
  br i1 %1207, label %1208, label %1212

1208:                                             ; preds = %1196
  %1209 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1198) #12
  %1210 = load i32*, i32** %1203, align 8
  %1211 = getelementptr inbounds i32, i32* %1210, i64 %1202
  store i32 %1209, i32* %1211, align 4
  br label %1212

1212:                                             ; preds = %1196, %1208
  %1213 = phi i32 [ %1209, %1208 ], [ %1206, %1196 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1198, i8 zeroext 14, i32 %1213) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitSimd128ReverseBytesEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1214:                                             ; preds = %2
  %1215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1216 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1215, align 8
  %1217 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1218 = load i32, i32* %1217, align 4
  %1219 = and i32 %1218, 16777215
  %1220 = zext i32 %1219 to i64
  %1221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1222 = load i32*, i32** %1221, align 8
  %1223 = getelementptr inbounds i32, i32* %1222, i64 %1220
  %1224 = load i32, i32* %1223, align 4
  %1225 = icmp eq i32 %1224, -1
  br i1 %1225, label %1226, label %1230

1226:                                             ; preds = %1214
  %1227 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1216) #12
  %1228 = load i32*, i32** %1221, align 8
  %1229 = getelementptr inbounds i32, i32* %1228, i64 %1220
  store i32 %1227, i32* %1229, align 4
  br label %1230

1230:                                             ; preds = %1214, %1226
  %1231 = phi i32 [ %1227, %1226 ], [ %1224, %1214 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1216, i8 zeroext 5, i32 %1231) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64AbsWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1232:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector16VisitWord64EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1233:                                             ; preds = %2
  %1234 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1235 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1234, align 8
  %1236 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1237 = load i32, i32* %1236, align 4
  %1238 = and i32 %1237, 16777215
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1241 = load i32*, i32** %1240, align 8
  %1242 = getelementptr inbounds i32, i32* %1241, i64 %1239
  %1243 = load i32, i32* %1242, align 4
  %1244 = icmp eq i32 %1243, -1
  br i1 %1244, label %1245, label %1249

1245:                                             ; preds = %1233
  %1246 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1235) #12
  %1247 = load i32*, i32** %1240, align 8
  %1248 = getelementptr inbounds i32, i32* %1247, i64 %1239
  store i32 %1246, i32* %1248, align 4
  br label %1249

1249:                                             ; preds = %1233, %1245
  %1250 = phi i32 [ %1246, %1245 ], [ %1243, %1233 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1235, i8 zeroext 5, i32 %1250) #12
  %1251 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %1251) #12
  %1252 = load i32, i32* %1236, align 4
  %1253 = and i32 %1252, 251658240
  %1254 = icmp eq i32 %1253, 251658240
  %1255 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1256 = add i64 %1255, 32
  br i1 %1254, label %1257, label %1261

1257:                                             ; preds = %1249
  %1258 = inttoptr i64 %1256 to i64*
  %1259 = load i64, i64* %1258, align 8
  %1260 = add i64 %1259, 16
  br label %1261

1261:                                             ; preds = %1257, %1249
  %1262 = phi i64 [ %1260, %1257 ], [ %1256, %1249 ]
  %1263 = inttoptr i64 %1262 to %"class.v8::internal::compiler::Node"**
  %1264 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1263, i64 1
  %1265 = bitcast %"class.v8::internal::compiler::Node"** %1264 to <2 x i64>*
  %1266 = load <2 x i64>, <2 x i64>* %1265, align 8
  %1267 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 0
  store i32 7, i32* %1267, align 8, !alias.scope !280
  %1268 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 1
  store i32 1, i32* %1268, align 4, !alias.scope !280
  %1269 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %1269, align 8, !alias.scope !280
  %1270 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %1270, align 8, !alias.scope !280
  %1271 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %1271, align 8, !alias.scope !280
  %1272 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 12
  %1273 = bitcast %"class.v8::internal::compiler::Node"** %1272 to <2 x i64>*
  store <2 x i64> %1266, <2 x i64>* %1273, align 8, !alias.scope !280
  br i1 %1254, label %1274, label %1278

1274:                                             ; preds = %1261
  %1275 = inttoptr i64 %1256 to i64*
  %1276 = load i64, i64* %1275, align 8
  %1277 = add i64 %1276, 16
  br label %1278

1278:                                             ; preds = %1261, %1274
  %1279 = phi i64 [ %1277, %1274 ], [ %1256, %1261 ]
  %1280 = inttoptr i64 %1279 to %"class.v8::internal::compiler::Node"**
  %1281 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1280, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1281, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %1251) #12
  br label %7785

1282:                                             ; preds = %2
  %1283 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1284 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1283, align 8
  %1285 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1286 = load i32, i32* %1285, align 4
  %1287 = and i32 %1286, 16777215
  %1288 = zext i32 %1287 to i64
  %1289 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1290 = load i32*, i32** %1289, align 8
  %1291 = getelementptr inbounds i32, i32* %1290, i64 %1288
  %1292 = load i32, i32* %1291, align 4
  %1293 = icmp eq i32 %1292, -1
  br i1 %1293, label %1294, label %1298

1294:                                             ; preds = %1282
  %1295 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1284) #12
  %1296 = load i32*, i32** %1289, align 8
  %1297 = getelementptr inbounds i32, i32* %1296, i64 %1288
  store i32 %1295, i32* %1297, align 4
  br label %1298

1298:                                             ; preds = %1282, %1294
  %1299 = phi i32 [ %1295, %1294 ], [ %1292, %1282 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1284, i8 zeroext 4, i32 %1299) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1300:                                             ; preds = %2
  %1301 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1302 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1301, align 8
  %1303 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1304 = load i32, i32* %1303, align 4
  %1305 = and i32 %1304, 16777215
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1308 = load i32*, i32** %1307, align 8
  %1309 = getelementptr inbounds i32, i32* %1308, i64 %1306
  %1310 = load i32, i32* %1309, align 4
  %1311 = icmp eq i32 %1310, -1
  br i1 %1311, label %1312, label %1316

1312:                                             ; preds = %1300
  %1313 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1302) #12
  %1314 = load i32*, i32** %1307, align 8
  %1315 = getelementptr inbounds i32, i32* %1314, i64 %1306
  store i32 %1313, i32* %1315, align 4
  br label %1316

1316:                                             ; preds = %1300, %1312
  %1317 = phi i32 [ %1313, %1312 ], [ %1310, %1300 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1302, i8 zeroext 4, i32 %1317) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32AddWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1318:                                             ; preds = %2
  %1319 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1320 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1319, align 8
  %1321 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1322 = load i32, i32* %1321, align 4
  %1323 = and i32 %1322, 16777215
  %1324 = zext i32 %1323 to i64
  %1325 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1326 = load i32*, i32** %1325, align 8
  %1327 = getelementptr inbounds i32, i32* %1326, i64 %1324
  %1328 = load i32, i32* %1327, align 4
  %1329 = icmp eq i32 %1328, -1
  br i1 %1329, label %1330, label %1334

1330:                                             ; preds = %1318
  %1331 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1320) #12
  %1332 = load i32*, i32** %1325, align 8
  %1333 = getelementptr inbounds i32, i32* %1332, i64 %1324
  store i32 %1331, i32* %1333, align 4
  br label %1334

1334:                                             ; preds = %1318, %1330
  %1335 = phi i32 [ %1331, %1330 ], [ %1328, %1318 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1320, i8 zeroext 4, i32 %1335) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1336:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32SubWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1337:                                             ; preds = %2
  %1338 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1339 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1338, align 8
  %1340 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1341 = load i32, i32* %1340, align 4
  %1342 = and i32 %1341, 16777215
  %1343 = zext i32 %1342 to i64
  %1344 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1345 = load i32*, i32** %1344, align 8
  %1346 = getelementptr inbounds i32, i32* %1345, i64 %1343
  %1347 = load i32, i32* %1346, align 4
  %1348 = icmp eq i32 %1347, -1
  br i1 %1348, label %1349, label %1353

1349:                                             ; preds = %1337
  %1350 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1339) #12
  %1351 = load i32*, i32** %1344, align 8
  %1352 = getelementptr inbounds i32, i32* %1351, i64 %1343
  store i32 %1350, i32* %1352, align 4
  br label %1353

1353:                                             ; preds = %1337, %1349
  %1354 = phi i32 [ %1350, %1349 ], [ %1347, %1337 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1339, i8 zeroext 4, i32 %1354) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1355:                                             ; preds = %2
  %1356 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1357 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1356, align 8
  %1358 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1359 = load i32, i32* %1358, align 4
  %1360 = and i32 %1359, 16777215
  %1361 = zext i32 %1360 to i64
  %1362 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1363 = load i32*, i32** %1362, align 8
  %1364 = getelementptr inbounds i32, i32* %1363, i64 %1361
  %1365 = load i32, i32* %1364, align 4
  %1366 = icmp eq i32 %1365, -1
  br i1 %1366, label %1367, label %1371

1367:                                             ; preds = %1355
  %1368 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1357) #12
  %1369 = load i32*, i32** %1362, align 8
  %1370 = getelementptr inbounds i32, i32* %1369, i64 %1361
  store i32 %1368, i32* %1370, align 4
  br label %1371

1371:                                             ; preds = %1355, %1367
  %1372 = phi i32 [ %1368, %1367 ], [ %1365, %1355 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1357, i8 zeroext 4, i32 %1372) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32MulWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1373:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitInt32MulHighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1374:                                             ; preds = %2
  %1375 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1376 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1375, align 8
  %1377 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1378 = load i32, i32* %1377, align 4
  %1379 = and i32 %1378, 16777215
  %1380 = zext i32 %1379 to i64
  %1381 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1382 = load i32*, i32** %1381, align 8
  %1383 = getelementptr inbounds i32, i32* %1382, i64 %1380
  %1384 = load i32, i32* %1383, align 4
  %1385 = icmp eq i32 %1384, -1
  br i1 %1385, label %1386, label %1390

1386:                                             ; preds = %1374
  %1387 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1376) #12
  %1388 = load i32*, i32** %1381, align 8
  %1389 = getelementptr inbounds i32, i32* %1388, i64 %1380
  store i32 %1387, i32* %1389, align 4
  br label %1390

1390:                                             ; preds = %1374, %1386
  %1391 = phi i32 [ %1387, %1386 ], [ %1384, %1374 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1376, i8 zeroext 4, i32 %1391) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1392:                                             ; preds = %2
  %1393 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1394 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1393, align 8
  %1395 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1396 = load i32, i32* %1395, align 4
  %1397 = and i32 %1396, 16777215
  %1398 = zext i32 %1397 to i64
  %1399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1400 = load i32*, i32** %1399, align 8
  %1401 = getelementptr inbounds i32, i32* %1400, i64 %1398
  %1402 = load i32, i32* %1401, align 4
  %1403 = icmp eq i32 %1402, -1
  br i1 %1403, label %1404, label %1408

1404:                                             ; preds = %1392
  %1405 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1394) #12
  %1406 = load i32*, i32** %1399, align 8
  %1407 = getelementptr inbounds i32, i32* %1406, i64 %1398
  store i32 %1405, i32* %1407, align 4
  br label %1408

1408:                                             ; preds = %1392, %1404
  %1409 = phi i32 [ %1405, %1404 ], [ %1402, %1392 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1394, i8 zeroext 4, i32 %1409) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1410:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitInt32LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1411:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1412:                                             ; preds = %2
  %1413 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1414 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1413, align 8
  %1415 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1416 = load i32, i32* %1415, align 4
  %1417 = and i32 %1416, 16777215
  %1418 = zext i32 %1417 to i64
  %1419 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1420 = load i32*, i32** %1419, align 8
  %1421 = getelementptr inbounds i32, i32* %1420, i64 %1418
  %1422 = load i32, i32* %1421, align 4
  %1423 = icmp eq i32 %1422, -1
  br i1 %1423, label %1424, label %1428

1424:                                             ; preds = %1412
  %1425 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1414) #12
  %1426 = load i32*, i32** %1419, align 8
  %1427 = getelementptr inbounds i32, i32* %1426, i64 %1418
  store i32 %1425, i32* %1427, align 4
  br label %1428

1428:                                             ; preds = %1412, %1424
  %1429 = phi i32 [ %1425, %1424 ], [ %1422, %1412 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1414, i8 zeroext 4, i32 %1429) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitUint32DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1430:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitUint32LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1431:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitUint32LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1432:                                             ; preds = %2
  %1433 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1434 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1433, align 8
  %1435 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1436 = load i32, i32* %1435, align 4
  %1437 = and i32 %1436, 16777215
  %1438 = zext i32 %1437 to i64
  %1439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1440 = load i32*, i32** %1439, align 8
  %1441 = getelementptr inbounds i32, i32* %1440, i64 %1438
  %1442 = load i32, i32* %1441, align 4
  %1443 = icmp eq i32 %1442, -1
  br i1 %1443, label %1444, label %1448

1444:                                             ; preds = %1432
  %1445 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1434) #12
  %1446 = load i32*, i32** %1439, align 8
  %1447 = getelementptr inbounds i32, i32* %1446, i64 %1438
  store i32 %1445, i32* %1447, align 4
  br label %1448

1448:                                             ; preds = %1432, %1444
  %1449 = phi i32 [ %1445, %1444 ], [ %1442, %1432 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1434, i8 zeroext 4, i32 %1449) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitUint32ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1450:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitUint32MulHighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1451:                                             ; preds = %2
  %1452 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1453 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1452, align 8
  %1454 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1455 = load i32, i32* %1454, align 4
  %1456 = and i32 %1455, 16777215
  %1457 = zext i32 %1456 to i64
  %1458 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1459 = load i32*, i32** %1458, align 8
  %1460 = getelementptr inbounds i32, i32* %1459, i64 %1457
  %1461 = load i32, i32* %1460, align 4
  %1462 = icmp eq i32 %1461, -1
  br i1 %1462, label %1463, label %1467

1463:                                             ; preds = %1451
  %1464 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1453) #12
  %1465 = load i32*, i32** %1458, align 8
  %1466 = getelementptr inbounds i32, i32* %1465, i64 %1457
  store i32 %1464, i32* %1466, align 4
  br label %1467

1467:                                             ; preds = %1451, %1463
  %1468 = phi i32 [ %1464, %1463 ], [ %1461, %1451 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1453, i8 zeroext 5, i32 %1468) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1469:                                             ; preds = %2
  %1470 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1471 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1470, align 8
  %1472 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1473 = load i32, i32* %1472, align 4
  %1474 = and i32 %1473, 16777215
  %1475 = zext i32 %1474 to i64
  %1476 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1477 = load i32*, i32** %1476, align 8
  %1478 = getelementptr inbounds i32, i32* %1477, i64 %1475
  %1479 = load i32, i32* %1478, align 4
  %1480 = icmp eq i32 %1479, -1
  br i1 %1480, label %1481, label %1485

1481:                                             ; preds = %1469
  %1482 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1471) #12
  %1483 = load i32*, i32** %1476, align 8
  %1484 = getelementptr inbounds i32, i32* %1483, i64 %1475
  store i32 %1482, i32* %1484, align 4
  br label %1485

1485:                                             ; preds = %1469, %1481
  %1486 = phi i32 [ %1482, %1481 ], [ %1479, %1469 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1471, i8 zeroext 5, i32 %1486) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64AddWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1487:                                             ; preds = %2
  %1488 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1489 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1488, align 8
  %1490 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1491 = load i32, i32* %1490, align 4
  %1492 = and i32 %1491, 16777215
  %1493 = zext i32 %1492 to i64
  %1494 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1495 = load i32*, i32** %1494, align 8
  %1496 = getelementptr inbounds i32, i32* %1495, i64 %1493
  %1497 = load i32, i32* %1496, align 4
  %1498 = icmp eq i32 %1497, -1
  br i1 %1498, label %1499, label %1503

1499:                                             ; preds = %1487
  %1500 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1489) #12
  %1501 = load i32*, i32** %1494, align 8
  %1502 = getelementptr inbounds i32, i32* %1501, i64 %1493
  store i32 %1500, i32* %1502, align 4
  br label %1503

1503:                                             ; preds = %1487, %1499
  %1504 = phi i32 [ %1500, %1499 ], [ %1497, %1487 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1489, i8 zeroext 5, i32 %1504) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1505:                                             ; preds = %2
  %1506 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1507 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1506, align 8
  %1508 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1509 = load i32, i32* %1508, align 4
  %1510 = and i32 %1509, 16777215
  %1511 = zext i32 %1510 to i64
  %1512 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1513 = load i32*, i32** %1512, align 8
  %1514 = getelementptr inbounds i32, i32* %1513, i64 %1511
  %1515 = load i32, i32* %1514, align 4
  %1516 = icmp eq i32 %1515, -1
  br i1 %1516, label %1517, label %1521

1517:                                             ; preds = %1505
  %1518 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1507) #12
  %1519 = load i32*, i32** %1512, align 8
  %1520 = getelementptr inbounds i32, i32* %1519, i64 %1511
  store i32 %1518, i32* %1520, align 4
  br label %1521

1521:                                             ; preds = %1505, %1517
  %1522 = phi i32 [ %1518, %1517 ], [ %1515, %1505 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1507, i8 zeroext 5, i32 %1522) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64SubWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1523:                                             ; preds = %2
  %1524 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1525 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1524, align 8
  %1526 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1527 = load i32, i32* %1526, align 4
  %1528 = and i32 %1527, 16777215
  %1529 = zext i32 %1528 to i64
  %1530 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1531 = load i32*, i32** %1530, align 8
  %1532 = getelementptr inbounds i32, i32* %1531, i64 %1529
  %1533 = load i32, i32* %1532, align 4
  %1534 = icmp eq i32 %1533, -1
  br i1 %1534, label %1535, label %1539

1535:                                             ; preds = %1523
  %1536 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1525) #12
  %1537 = load i32*, i32** %1530, align 8
  %1538 = getelementptr inbounds i32, i32* %1537, i64 %1529
  store i32 %1536, i32* %1538, align 4
  br label %1539

1539:                                             ; preds = %1523, %1535
  %1540 = phi i32 [ %1536, %1535 ], [ %1533, %1523 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1525, i8 zeroext 5, i32 %1540) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1541:                                             ; preds = %2
  %1542 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1543 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1542, align 8
  %1544 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1545 = load i32, i32* %1544, align 4
  %1546 = and i32 %1545, 16777215
  %1547 = zext i32 %1546 to i64
  %1548 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1549 = load i32*, i32** %1548, align 8
  %1550 = getelementptr inbounds i32, i32* %1549, i64 %1547
  %1551 = load i32, i32* %1550, align 4
  %1552 = icmp eq i32 %1551, -1
  br i1 %1552, label %1553, label %1557

1553:                                             ; preds = %1541
  %1554 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1543) #12
  %1555 = load i32*, i32** %1548, align 8
  %1556 = getelementptr inbounds i32, i32* %1555, i64 %1547
  store i32 %1554, i32* %1556, align 4
  br label %1557

1557:                                             ; preds = %1541, %1553
  %1558 = phi i32 [ %1554, %1553 ], [ %1551, %1541 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1543, i8 zeroext 5, i32 %1558) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1559:                                             ; preds = %2
  %1560 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1561 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1560, align 8
  %1562 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1563 = load i32, i32* %1562, align 4
  %1564 = and i32 %1563, 16777215
  %1565 = zext i32 %1564 to i64
  %1566 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1567 = load i32*, i32** %1566, align 8
  %1568 = getelementptr inbounds i32, i32* %1567, i64 %1565
  %1569 = load i32, i32* %1568, align 4
  %1570 = icmp eq i32 %1569, -1
  br i1 %1570, label %1571, label %1575

1571:                                             ; preds = %1559
  %1572 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1561) #12
  %1573 = load i32*, i32** %1566, align 8
  %1574 = getelementptr inbounds i32, i32* %1573, i64 %1565
  store i32 %1572, i32* %1574, align 4
  br label %1575

1575:                                             ; preds = %1559, %1571
  %1576 = phi i32 [ %1572, %1571 ], [ %1569, %1559 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1561, i8 zeroext 5, i32 %1576) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1577:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitInt64LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1578:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1579:                                             ; preds = %2
  %1580 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1581 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1580, align 8
  %1582 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1583 = load i32, i32* %1582, align 4
  %1584 = and i32 %1583, 16777215
  %1585 = zext i32 %1584 to i64
  %1586 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1587 = load i32*, i32** %1586, align 8
  %1588 = getelementptr inbounds i32, i32* %1587, i64 %1585
  %1589 = load i32, i32* %1588, align 4
  %1590 = icmp eq i32 %1589, -1
  br i1 %1590, label %1591, label %1595

1591:                                             ; preds = %1579
  %1592 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1581) #12
  %1593 = load i32*, i32** %1586, align 8
  %1594 = getelementptr inbounds i32, i32* %1593, i64 %1585
  store i32 %1592, i32* %1594, align 4
  br label %1595

1595:                                             ; preds = %1579, %1591
  %1596 = phi i32 [ %1592, %1591 ], [ %1589, %1579 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1581, i8 zeroext 5, i32 %1596) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitUint64DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1597:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitUint64LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1598:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitUint64LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1599:                                             ; preds = %2
  %1600 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1601 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1600, align 8
  %1602 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1603 = load i32, i32* %1602, align 4
  %1604 = and i32 %1603, 16777215
  %1605 = zext i32 %1604 to i64
  %1606 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1607 = load i32*, i32** %1606, align 8
  %1608 = getelementptr inbounds i32, i32* %1607, i64 %1605
  %1609 = load i32, i32* %1608, align 4
  %1610 = icmp eq i32 %1609, -1
  br i1 %1610, label %1611, label %1615

1611:                                             ; preds = %1599
  %1612 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1601) #12
  %1613 = load i32*, i32** %1606, align 8
  %1614 = getelementptr inbounds i32, i32* %1613, i64 %1605
  store i32 %1612, i32* %1614, align 4
  br label %1615

1615:                                             ; preds = %1599, %1611
  %1616 = phi i32 [ %1612, %1611 ], [ %1609, %1599 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1601, i8 zeroext 5, i32 %1616) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitUint64ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1617:                                             ; preds = %2, %2
  %1618 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1619 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1618, align 8
  %1620 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1621 = load i32, i32* %1620, align 4
  %1622 = and i32 %1621, 16777215
  %1623 = zext i32 %1622 to i64
  %1624 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1625 = load i32*, i32** %1624, align 8
  %1626 = getelementptr inbounds i32, i32* %1625, i64 %1623
  %1627 = load i32, i32* %1626, align 4
  %1628 = icmp eq i32 %1627, -1
  br i1 %1628, label %1629, label %1633

1629:                                             ; preds = %1617
  %1630 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1619) #12
  %1631 = load i32*, i32** %1624, align 8
  %1632 = getelementptr inbounds i32, i32* %1631, i64 %1623
  store i32 %1630, i32* %1632, align 4
  br label %1633

1633:                                             ; preds = %1617, %1629
  %1634 = phi i32 [ %1630, %1629 ], [ %1627, %1617 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1619, i8 zeroext 5, i32 %1634) #12
  %1635 = load i32, i32* %1620, align 4
  %1636 = and i32 %1635, 251658240
  %1637 = icmp eq i32 %1636, 251658240
  %1638 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1639 = add i64 %1638, 32
  br i1 %1637, label %1640, label %1644

1640:                                             ; preds = %1633
  %1641 = inttoptr i64 %1639 to i64*
  %1642 = load i64, i64* %1641, align 8
  %1643 = add i64 %1642, 16
  br label %1644

1644:                                             ; preds = %1640, %1633
  %1645 = phi i64 [ %1643, %1640 ], [ %1639, %1633 ]
  %1646 = inttoptr i64 %1645 to %"class.v8::internal::compiler::Node"**
  %1647 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1646, align 8
  %1648 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1647, i64 0, i32 3
  %1649 = load i32, i32* %1648, align 4
  %1650 = and i32 %1649, 16777215
  %1651 = zext i32 %1650 to i64
  %1652 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %1653 = load i64*, i64** %1652, align 8
  %1654 = lshr i64 %1651, 6
  %1655 = getelementptr inbounds i64, i64* %1653, i64 %1654
  %1656 = and i64 %1651, 63
  %1657 = shl i64 1, %1656
  %1658 = load i64, i64* %1655, align 8
  %1659 = or i64 %1657, %1658
  store i64 %1659, i64* %1655, align 8
  %1660 = load i32, i32* %1620, align 4
  %1661 = and i32 %1660, 251658240
  %1662 = icmp eq i32 %1661, 251658240
  br i1 %1662, label %1663, label %1667

1663:                                             ; preds = %1644
  %1664 = inttoptr i64 %1639 to i64*
  %1665 = load i64, i64* %1664, align 8
  %1666 = add i64 %1665, 16
  br label %1667

1667:                                             ; preds = %1644, %1663
  %1668 = phi i64 [ %1666, %1663 ], [ %1639, %1644 ]
  %1669 = inttoptr i64 %1668 to %"class.v8::internal::compiler::Node"**
  %1670 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1669, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1670) #12
  br label %7785

1671:                                             ; preds = %2
  %1672 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1673 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1672, align 8
  %1674 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1675 = load i32, i32* %1674, align 4
  %1676 = and i32 %1675, 16777215
  %1677 = zext i32 %1676 to i64
  %1678 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1679 = load i32*, i32** %1678, align 8
  %1680 = getelementptr inbounds i32, i32* %1679, i64 %1677
  %1681 = load i32, i32* %1680, align 4
  %1682 = icmp eq i32 %1681, -1
  br i1 %1682, label %1683, label %1687

1683:                                             ; preds = %1671
  %1684 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1673) #12
  %1685 = load i32*, i32** %1678, align 8
  %1686 = getelementptr inbounds i32, i32* %1685, i64 %1677
  store i32 %1684, i32* %1686, align 4
  br label %1687

1687:                                             ; preds = %1671, %1683
  %1688 = phi i32 [ %1684, %1683 ], [ %1681, %1671 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1673, i8 zeroext 9, i32 %1688) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitBitcastWordToTaggedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %7785

1689:                                             ; preds = %2
  %1690 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1691 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1690, align 8
  %1692 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1693 = load i32, i32* %1692, align 4
  %1694 = and i32 %1693, 16777215
  %1695 = zext i32 %1694 to i64
  %1696 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1697 = load i32*, i32** %1696, align 8
  %1698 = getelementptr inbounds i32, i32* %1697, i64 %1695
  %1699 = load i32, i32* %1698, align 4
  %1700 = icmp eq i32 %1699, -1
  br i1 %1700, label %1701, label %1705

1701:                                             ; preds = %1689
  %1702 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1691) #12
  %1703 = load i32*, i32** %1696, align 8
  %1704 = getelementptr inbounds i32, i32* %1703, i64 %1695
  store i32 %1702, i32* %1704, align 4
  br label %1705

1705:                                             ; preds = %1689, %1701
  %1706 = phi i32 [ %1702, %1701 ], [ %1699, %1689 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1691, i8 zeroext 7, i32 %1706) #12
  %1707 = load i32, i32* %1692, align 4
  %1708 = and i32 %1707, 251658240
  %1709 = icmp eq i32 %1708, 251658240
  %1710 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1711 = add i64 %1710, 32
  br i1 %1709, label %1712, label %1716

1712:                                             ; preds = %1705
  %1713 = inttoptr i64 %1711 to i64*
  %1714 = load i64, i64* %1713, align 8
  %1715 = add i64 %1714, 16
  br label %1716

1716:                                             ; preds = %1712, %1705
  %1717 = phi i64 [ %1715, %1712 ], [ %1711, %1705 ]
  %1718 = inttoptr i64 %1717 to %"class.v8::internal::compiler::Node"**
  %1719 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1718, align 8
  %1720 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1719, i64 0, i32 3
  %1721 = load i32, i32* %1720, align 4
  %1722 = and i32 %1721, 16777215
  %1723 = zext i32 %1722 to i64
  %1724 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %1725 = load i64*, i64** %1724, align 8
  %1726 = lshr i64 %1723, 6
  %1727 = getelementptr inbounds i64, i64* %1725, i64 %1726
  %1728 = and i64 %1723, 63
  %1729 = shl i64 1, %1728
  %1730 = load i64, i64* %1727, align 8
  %1731 = or i64 %1729, %1730
  store i64 %1731, i64* %1727, align 8
  %1732 = load i32, i32* %1692, align 4
  %1733 = and i32 %1732, 251658240
  %1734 = icmp eq i32 %1733, 251658240
  br i1 %1734, label %1735, label %1739

1735:                                             ; preds = %1716
  %1736 = inttoptr i64 %1711 to i64*
  %1737 = load i64, i64* %1736, align 8
  %1738 = add i64 %1737, 16
  br label %1739

1739:                                             ; preds = %1716, %1735
  %1740 = phi i64 [ %1738, %1735 ], [ %1711, %1716 ]
  %1741 = inttoptr i64 %1740 to %"class.v8::internal::compiler::Node"**
  %1742 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1741, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1742) #12
  br label %7785

1743:                                             ; preds = %2
  %1744 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1745 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1744, align 8
  %1746 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1747 = load i32, i32* %1746, align 4
  %1748 = and i32 %1747, 16777215
  %1749 = zext i32 %1748 to i64
  %1750 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1751 = load i32*, i32** %1750, align 8
  %1752 = getelementptr inbounds i32, i32* %1751, i64 %1749
  %1753 = load i32, i32* %1752, align 4
  %1754 = icmp eq i32 %1753, -1
  br i1 %1754, label %1755, label %1759

1755:                                             ; preds = %1743
  %1756 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1745) #12
  %1757 = load i32*, i32** %1750, align 8
  %1758 = getelementptr inbounds i32, i32* %1757, i64 %1749
  store i32 %1756, i32* %1758, align 4
  br label %1759

1759:                                             ; preds = %1743, %1755
  %1760 = phi i32 [ %1756, %1755 ], [ %1753, %1743 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1745, i8 zeroext 13, i32 %1760) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitChangeFloat32ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1761:                                             ; preds = %2
  %1762 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1763 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1762, align 8
  %1764 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1765 = load i32, i32* %1764, align 4
  %1766 = and i32 %1765, 16777215
  %1767 = zext i32 %1766 to i64
  %1768 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1769 = load i32*, i32** %1768, align 8
  %1770 = getelementptr inbounds i32, i32* %1769, i64 %1767
  %1771 = load i32, i32* %1770, align 4
  %1772 = icmp eq i32 %1771, -1
  br i1 %1772, label %1773, label %1777

1773:                                             ; preds = %1761
  %1774 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1763) #12
  %1775 = load i32*, i32** %1768, align 8
  %1776 = getelementptr inbounds i32, i32* %1775, i64 %1767
  store i32 %1774, i32* %1776, align 4
  br label %1777

1777:                                             ; preds = %1761, %1773
  %1778 = phi i32 [ %1774, %1773 ], [ %1771, %1761 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1763, i8 zeroext 13, i32 %1778) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeInt32ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1779:                                             ; preds = %2
  %1780 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1781 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1780, align 8
  %1782 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1783 = load i32, i32* %1782, align 4
  %1784 = and i32 %1783, 16777215
  %1785 = zext i32 %1784 to i64
  %1786 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1787 = load i32*, i32** %1786, align 8
  %1788 = getelementptr inbounds i32, i32* %1787, i64 %1785
  %1789 = load i32, i32* %1788, align 4
  %1790 = icmp eq i32 %1789, -1
  br i1 %1790, label %1791, label %1795

1791:                                             ; preds = %1779
  %1792 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1781) #12
  %1793 = load i32*, i32** %1786, align 8
  %1794 = getelementptr inbounds i32, i32* %1793, i64 %1785
  store i32 %1792, i32* %1794, align 4
  br label %1795

1795:                                             ; preds = %1779, %1791
  %1796 = phi i32 [ %1792, %1791 ], [ %1789, %1779 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1781, i8 zeroext 13, i32 %1796) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeInt64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1797:                                             ; preds = %2
  %1798 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1799 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1798, align 8
  %1800 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1801 = load i32, i32* %1800, align 4
  %1802 = and i32 %1801, 16777215
  %1803 = zext i32 %1802 to i64
  %1804 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1805 = load i32*, i32** %1804, align 8
  %1806 = getelementptr inbounds i32, i32* %1805, i64 %1803
  %1807 = load i32, i32* %1806, align 4
  %1808 = icmp eq i32 %1807, -1
  br i1 %1808, label %1809, label %1813

1809:                                             ; preds = %1797
  %1810 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1799) #12
  %1811 = load i32*, i32** %1804, align 8
  %1812 = getelementptr inbounds i32, i32* %1811, i64 %1803
  store i32 %1810, i32* %1812, align 4
  br label %1813

1813:                                             ; preds = %1797, %1809
  %1814 = phi i32 [ %1810, %1809 ], [ %1807, %1797 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1799, i8 zeroext 13, i32 %1814) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitChangeUint32ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1815:                                             ; preds = %2
  %1816 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1817 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1816, align 8
  %1818 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1819 = load i32, i32* %1818, align 4
  %1820 = and i32 %1819, 16777215
  %1821 = zext i32 %1820 to i64
  %1822 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1823 = load i32*, i32** %1822, align 8
  %1824 = getelementptr inbounds i32, i32* %1823, i64 %1821
  %1825 = load i32, i32* %1824, align 4
  %1826 = icmp eq i32 %1825, -1
  br i1 %1826, label %1827, label %1831

1827:                                             ; preds = %1815
  %1828 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1817) #12
  %1829 = load i32*, i32** %1822, align 8
  %1830 = getelementptr inbounds i32, i32* %1829, i64 %1821
  store i32 %1828, i32* %1830, align 4
  br label %1831

1831:                                             ; preds = %1815, %1827
  %1832 = phi i32 [ %1828, %1827 ], [ %1825, %1815 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1817, i8 zeroext 4, i32 %1832) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeFloat64ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1833:                                             ; preds = %2
  %1834 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1835 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1834, align 8
  %1836 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1837 = load i32, i32* %1836, align 4
  %1838 = and i32 %1837, 16777215
  %1839 = zext i32 %1838 to i64
  %1840 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1841 = load i32*, i32** %1840, align 8
  %1842 = getelementptr inbounds i32, i32* %1841, i64 %1839
  %1843 = load i32, i32* %1842, align 4
  %1844 = icmp eq i32 %1843, -1
  br i1 %1844, label %1845, label %1849

1845:                                             ; preds = %1833
  %1846 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1835) #12
  %1847 = load i32*, i32** %1840, align 8
  %1848 = getelementptr inbounds i32, i32* %1847, i64 %1839
  store i32 %1846, i32* %1848, align 4
  br label %1849

1849:                                             ; preds = %1833, %1845
  %1850 = phi i32 [ %1846, %1845 ], [ %1843, %1833 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1835, i8 zeroext 5, i32 %1850) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1851:                                             ; preds = %2
  %1852 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1853 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1852, align 8
  %1854 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1855 = load i32, i32* %1854, align 4
  %1856 = and i32 %1855, 16777215
  %1857 = zext i32 %1856 to i64
  %1858 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1859 = load i32*, i32** %1858, align 8
  %1860 = getelementptr inbounds i32, i32* %1859, i64 %1857
  %1861 = load i32, i32* %1860, align 4
  %1862 = icmp eq i32 %1861, -1
  br i1 %1862, label %1863, label %1867

1863:                                             ; preds = %1851
  %1864 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1853) #12
  %1865 = load i32*, i32** %1858, align 8
  %1866 = getelementptr inbounds i32, i32* %1865, i64 %1857
  store i32 %1864, i32* %1866, align 4
  br label %1867

1867:                                             ; preds = %1851, %1863
  %1868 = phi i32 [ %1864, %1863 ], [ %1861, %1851 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1853, i8 zeroext 4, i32 %1868) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitChangeFloat64ToUint32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1869:                                             ; preds = %2
  %1870 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1871 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1870, align 8
  %1872 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1873 = load i32, i32* %1872, align 4
  %1874 = and i32 %1873, 16777215
  %1875 = zext i32 %1874 to i64
  %1876 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1877 = load i32*, i32** %1876, align 8
  %1878 = getelementptr inbounds i32, i32* %1877, i64 %1875
  %1879 = load i32, i32* %1878, align 4
  %1880 = icmp eq i32 %1879, -1
  br i1 %1880, label %1881, label %1885

1881:                                             ; preds = %1869
  %1882 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1871) #12
  %1883 = load i32*, i32** %1876, align 8
  %1884 = getelementptr inbounds i32, i32* %1883, i64 %1875
  store i32 %1882, i32* %1884, align 4
  br label %1885

1885:                                             ; preds = %1869, %1881
  %1886 = phi i32 [ %1882, %1881 ], [ %1879, %1869 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1871, i8 zeroext 5, i32 %1886) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitChangeFloat64ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1887:                                             ; preds = %2
  %1888 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1889 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1888, align 8
  %1890 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1891 = load i32, i32* %1890, align 4
  %1892 = and i32 %1891, 16777215
  %1893 = zext i32 %1892 to i64
  %1894 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1895 = load i32*, i32** %1894, align 8
  %1896 = getelementptr inbounds i32, i32* %1895, i64 %1893
  %1897 = load i32, i32* %1896, align 4
  %1898 = icmp eq i32 %1897, -1
  br i1 %1898, label %1899, label %1903

1899:                                             ; preds = %1887
  %1900 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1889) #12
  %1901 = load i32*, i32** %1894, align 8
  %1902 = getelementptr inbounds i32, i32* %1901, i64 %1893
  store i32 %1900, i32* %1902, align 4
  br label %1903

1903:                                             ; preds = %1887, %1899
  %1904 = phi i32 [ %1900, %1899 ], [ %1897, %1887 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1889, i8 zeroext 13, i32 %1904) #12
  %1905 = load i32, i32* %1890, align 4
  %1906 = and i32 %1905, 251658240
  %1907 = icmp eq i32 %1906, 251658240
  %1908 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1909 = add i64 %1908, 32
  br i1 %1907, label %1910, label %1914

1910:                                             ; preds = %1903
  %1911 = inttoptr i64 %1909 to i64*
  %1912 = load i64, i64* %1911, align 8
  %1913 = add i64 %1912, 16
  br label %1914

1914:                                             ; preds = %1903, %1910
  %1915 = phi i64 [ %1913, %1910 ], [ %1909, %1903 ]
  %1916 = inttoptr i64 %1915 to %"class.v8::internal::compiler::Node"**
  %1917 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1916, align 8
  %1918 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1917, i64 0, i32 0
  %1919 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1918, align 8
  %1920 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1919, i64 0, i32 2
  %1921 = load i16, i16* %1920, align 8
  %1922 = add i16 %1921, -374
  %1923 = icmp ult i16 %1922, 3
  br i1 %1923, label %1925, label %1924

1924:                                             ; preds = %1914
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitFloat64SilenceNaNEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1925:                                             ; preds = %1914
  br i1 %1907, label %1926, label %1930

1926:                                             ; preds = %1925
  %1927 = inttoptr i64 %1909 to i64*
  %1928 = load i64, i64* %1927, align 8
  %1929 = add i64 %1928, 16
  br label %1930

1930:                                             ; preds = %1926, %1925
  %1931 = phi i64 [ %1929, %1926 ], [ %1909, %1925 ]
  %1932 = inttoptr i64 %1931 to %"class.v8::internal::compiler::Node"**
  %1933 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1932, align 8
  %1934 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1933, i64 0, i32 3
  %1935 = load i32, i32* %1934, align 4
  %1936 = and i32 %1935, 16777215
  %1937 = zext i32 %1936 to i64
  %1938 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %1939 = load i64*, i64** %1938, align 8
  %1940 = lshr i64 %1937, 6
  %1941 = getelementptr inbounds i64, i64* %1939, i64 %1940
  %1942 = and i64 %1937, 63
  %1943 = shl i64 1, %1942
  %1944 = load i64, i64* %1941, align 8
  %1945 = or i64 %1943, %1944
  store i64 %1945, i64* %1941, align 8
  %1946 = load i32, i32* %1890, align 4
  %1947 = and i32 %1946, 251658240
  %1948 = icmp eq i32 %1947, 251658240
  br i1 %1948, label %1949, label %1953

1949:                                             ; preds = %1930
  %1950 = inttoptr i64 %1909 to i64*
  %1951 = load i64, i64* %1950, align 8
  %1952 = add i64 %1951, 16
  br label %1953

1953:                                             ; preds = %1930, %1949
  %1954 = phi i64 [ %1952, %1949 ], [ %1909, %1930 ]
  %1955 = inttoptr i64 %1954 to %"class.v8::internal::compiler::Node"**
  %1956 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1955, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1956) #12
  br label %7785

1957:                                             ; preds = %2
  %1958 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1959 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1958, align 8
  %1960 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1961 = load i32, i32* %1960, align 4
  %1962 = and i32 %1961, 16777215
  %1963 = zext i32 %1962 to i64
  %1964 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1965 = load i32*, i32** %1964, align 8
  %1966 = getelementptr inbounds i32, i32* %1965, i64 %1963
  %1967 = load i32, i32* %1966, align 4
  %1968 = icmp eq i32 %1967, -1
  br i1 %1968, label %1969, label %1973

1969:                                             ; preds = %1957
  %1970 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1959) #12
  %1971 = load i32*, i32** %1964, align 8
  %1972 = getelementptr inbounds i32, i32* %1971, i64 %1963
  store i32 %1970, i32* %1972, align 4
  br label %1973

1973:                                             ; preds = %1957, %1969
  %1974 = phi i32 [ %1970, %1969 ], [ %1967, %1957 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1959, i8 zeroext 5, i32 %1974) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitTruncateFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1975:                                             ; preds = %2
  %1976 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1977 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1976, align 8
  %1978 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1979 = load i32, i32* %1978, align 4
  %1980 = and i32 %1979, 16777215
  %1981 = zext i32 %1980 to i64
  %1982 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %1983 = load i32*, i32** %1982, align 8
  %1984 = getelementptr inbounds i32, i32* %1983, i64 %1981
  %1985 = load i32, i32* %1984, align 4
  %1986 = icmp eq i32 %1985, -1
  br i1 %1986, label %1987, label %1991

1987:                                             ; preds = %1975
  %1988 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1977) #12
  %1989 = load i32*, i32** %1982, align 8
  %1990 = getelementptr inbounds i32, i32* %1989, i64 %1981
  store i32 %1988, i32* %1990, align 4
  br label %1991

1991:                                             ; preds = %1975, %1987
  %1992 = phi i32 [ %1988, %1987 ], [ %1985, %1975 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1977, i8 zeroext 4, i32 %1992) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitTruncateFloat64ToUint32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

1993:                                             ; preds = %2
  %1994 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %1995 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1994, align 8
  %1996 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1997 = load i32, i32* %1996, align 4
  %1998 = and i32 %1997, 16777215
  %1999 = zext i32 %1998 to i64
  %2000 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2001 = load i32*, i32** %2000, align 8
  %2002 = getelementptr inbounds i32, i32* %2001, i64 %1999
  %2003 = load i32, i32* %2002, align 4
  %2004 = icmp eq i32 %2003, -1
  br i1 %2004, label %2005, label %2009

2005:                                             ; preds = %1993
  %2006 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %1995) #12
  %2007 = load i32*, i32** %2000, align 8
  %2008 = getelementptr inbounds i32, i32* %2007, i64 %1999
  store i32 %2006, i32* %2008, align 4
  br label %2009

2009:                                             ; preds = %1993, %2005
  %2010 = phi i32 [ %2006, %2005 ], [ %2003, %1993 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %1995, i8 zeroext 4, i32 %2010) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitTruncateFloat32ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2011:                                             ; preds = %2
  %2012 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2013 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2012, align 8
  %2014 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2015 = load i32, i32* %2014, align 4
  %2016 = and i32 %2015, 16777215
  %2017 = zext i32 %2016 to i64
  %2018 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2019 = load i32*, i32** %2018, align 8
  %2020 = getelementptr inbounds i32, i32* %2019, i64 %2017
  %2021 = load i32, i32* %2020, align 4
  %2022 = icmp eq i32 %2021, -1
  br i1 %2022, label %2023, label %2027

2023:                                             ; preds = %2011
  %2024 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2013) #12
  %2025 = load i32*, i32** %2018, align 8
  %2026 = getelementptr inbounds i32, i32* %2025, i64 %2017
  store i32 %2024, i32* %2026, align 4
  br label %2027

2027:                                             ; preds = %2011, %2023
  %2028 = phi i32 [ %2024, %2023 ], [ %2021, %2011 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2013, i8 zeroext 4, i32 %2028) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitTruncateFloat32ToUint32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2029:                                             ; preds = %2
  %2030 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2031 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2030, align 8
  %2032 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2033 = load i32, i32* %2032, align 4
  %2034 = and i32 %2033, 16777215
  %2035 = zext i32 %2034 to i64
  %2036 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2037 = load i32*, i32** %2036, align 8
  %2038 = getelementptr inbounds i32, i32* %2037, i64 %2035
  %2039 = load i32, i32* %2038, align 4
  %2040 = icmp eq i32 %2039, -1
  br i1 %2040, label %2041, label %2045

2041:                                             ; preds = %2029
  %2042 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2031) #12
  %2043 = load i32*, i32** %2036, align 8
  %2044 = getelementptr inbounds i32, i32* %2043, i64 %2035
  store i32 %2042, i32* %2044, align 4
  br label %2045

2045:                                             ; preds = %2029, %2041
  %2046 = phi i32 [ %2042, %2041 ], [ %2039, %2029 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2031, i8 zeroext 5, i32 %2046) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector30VisitTryTruncateFloat32ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2047:                                             ; preds = %2
  %2048 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2049 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2048, align 8
  %2050 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2051 = load i32, i32* %2050, align 4
  %2052 = and i32 %2051, 16777215
  %2053 = zext i32 %2052 to i64
  %2054 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2055 = load i32*, i32** %2054, align 8
  %2056 = getelementptr inbounds i32, i32* %2055, i64 %2053
  %2057 = load i32, i32* %2056, align 4
  %2058 = icmp eq i32 %2057, -1
  br i1 %2058, label %2059, label %2063

2059:                                             ; preds = %2047
  %2060 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2049) #12
  %2061 = load i32*, i32** %2054, align 8
  %2062 = getelementptr inbounds i32, i32* %2061, i64 %2053
  store i32 %2060, i32* %2062, align 4
  br label %2063

2063:                                             ; preds = %2047, %2059
  %2064 = phi i32 [ %2060, %2059 ], [ %2057, %2047 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2049, i8 zeroext 5, i32 %2064) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector30VisitTryTruncateFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2065:                                             ; preds = %2
  %2066 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2067 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2066, align 8
  %2068 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2069 = load i32, i32* %2068, align 4
  %2070 = and i32 %2069, 16777215
  %2071 = zext i32 %2070 to i64
  %2072 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2073 = load i32*, i32** %2072, align 8
  %2074 = getelementptr inbounds i32, i32* %2073, i64 %2071
  %2075 = load i32, i32* %2074, align 4
  %2076 = icmp eq i32 %2075, -1
  br i1 %2076, label %2077, label %2081

2077:                                             ; preds = %2065
  %2078 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2067) #12
  %2079 = load i32*, i32** %2072, align 8
  %2080 = getelementptr inbounds i32, i32* %2079, i64 %2071
  store i32 %2078, i32* %2080, align 4
  br label %2081

2081:                                             ; preds = %2065, %2077
  %2082 = phi i32 [ %2078, %2077 ], [ %2075, %2065 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2067, i8 zeroext 5, i32 %2082) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector31VisitTryTruncateFloat32ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2083:                                             ; preds = %2
  %2084 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2085 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2084, align 8
  %2086 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2087 = load i32, i32* %2086, align 4
  %2088 = and i32 %2087, 16777215
  %2089 = zext i32 %2088 to i64
  %2090 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2091 = load i32*, i32** %2090, align 8
  %2092 = getelementptr inbounds i32, i32* %2091, i64 %2089
  %2093 = load i32, i32* %2092, align 4
  %2094 = icmp eq i32 %2093, -1
  br i1 %2094, label %2095, label %2099

2095:                                             ; preds = %2083
  %2096 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2085) #12
  %2097 = load i32*, i32** %2090, align 8
  %2098 = getelementptr inbounds i32, i32* %2097, i64 %2089
  store i32 %2096, i32* %2098, align 4
  br label %2099

2099:                                             ; preds = %2083, %2095
  %2100 = phi i32 [ %2096, %2095 ], [ %2093, %2083 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2085, i8 zeroext 5, i32 %2100) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector31VisitTryTruncateFloat64ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2101:                                             ; preds = %2
  %2102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2103 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2102, align 8
  %2104 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2105 = load i32, i32* %2104, align 4
  %2106 = and i32 %2105, 16777215
  %2107 = zext i32 %2106 to i64
  %2108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2109 = load i32*, i32** %2108, align 8
  %2110 = getelementptr inbounds i32, i32* %2109, i64 %2107
  %2111 = load i32, i32* %2110, align 4
  %2112 = icmp eq i32 %2111, -1
  br i1 %2112, label %2113, label %2117

2113:                                             ; preds = %2101
  %2114 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2103) #12
  %2115 = load i32*, i32** %2108, align 8
  %2116 = getelementptr inbounds i32, i32* %2115, i64 %2107
  store i32 %2114, i32* %2116, align 4
  br label %2117

2117:                                             ; preds = %2101, %2113
  %2118 = phi i32 [ %2114, %2113 ], [ %2111, %2101 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2103, i8 zeroext 5, i32 %2118) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastWord32ToWord64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2119:                                             ; preds = %2
  %2120 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2121 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2120, align 8
  %2122 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2123 = load i32, i32* %2122, align 4
  %2124 = and i32 %2123, 16777215
  %2125 = zext i32 %2124 to i64
  %2126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2127 = load i32*, i32** %2126, align 8
  %2128 = getelementptr inbounds i32, i32* %2127, i64 %2125
  %2129 = load i32, i32* %2128, align 4
  %2130 = icmp eq i32 %2129, -1
  br i1 %2130, label %2131, label %2135

2131:                                             ; preds = %2119
  %2132 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2121) #12
  %2133 = load i32*, i32** %2126, align 8
  %2134 = getelementptr inbounds i32, i32* %2133, i64 %2125
  store i32 %2132, i32* %2134, align 4
  br label %2135

2135:                                             ; preds = %2119, %2131
  %2136 = phi i32 [ %2132, %2131 ], [ %2129, %2119 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2121, i8 zeroext 5, i32 %2136) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitChangeInt32ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2137:                                             ; preds = %2
  %2138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2139 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2138, align 8
  %2140 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2141 = load i32, i32* %2140, align 4
  %2142 = and i32 %2141, 16777215
  %2143 = zext i32 %2142 to i64
  %2144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2145 = load i32*, i32** %2144, align 8
  %2146 = getelementptr inbounds i32, i32* %2145, i64 %2143
  %2147 = load i32, i32* %2146, align 4
  %2148 = icmp eq i32 %2147, -1
  br i1 %2148, label %2149, label %2153

2149:                                             ; preds = %2137
  %2150 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2139) #12
  %2151 = load i32*, i32** %2144, align 8
  %2152 = getelementptr inbounds i32, i32* %2151, i64 %2143
  store i32 %2150, i32* %2152, align 4
  br label %2153

2153:                                             ; preds = %2137, %2149
  %2154 = phi i32 [ %2150, %2149 ], [ %2147, %2137 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2139, i8 zeroext 5, i32 %2154) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeUint32ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2155:                                             ; preds = %2
  %2156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2157 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2156, align 8
  %2158 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2159 = load i32, i32* %2158, align 4
  %2160 = and i32 %2159, 16777215
  %2161 = zext i32 %2160 to i64
  %2162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2163 = load i32*, i32** %2162, align 8
  %2164 = getelementptr inbounds i32, i32* %2163, i64 %2161
  %2165 = load i32, i32* %2164, align 4
  %2166 = icmp eq i32 %2165, -1
  br i1 %2166, label %2167, label %2171

2167:                                             ; preds = %2155
  %2168 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2157) #12
  %2169 = load i32*, i32** %2162, align 8
  %2170 = getelementptr inbounds i32, i32* %2169, i64 %2161
  store i32 %2168, i32* %2170, align 4
  br label %2171

2171:                                             ; preds = %2155, %2167
  %2172 = phi i32 [ %2168, %2167 ], [ %2165, %2155 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2157, i8 zeroext 12, i32 %2172) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector29VisitTruncateFloat64ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2173:                                             ; preds = %2
  %2174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2175 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2174, align 8
  %2176 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2177 = load i32, i32* %2176, align 4
  %2178 = and i32 %2177, 16777215
  %2179 = zext i32 %2178 to i64
  %2180 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2181 = load i32*, i32** %2180, align 8
  %2182 = getelementptr inbounds i32, i32* %2181, i64 %2179
  %2183 = load i32, i32* %2182, align 4
  %2184 = icmp eq i32 %2183, -1
  br i1 %2184, label %2185, label %2189

2185:                                             ; preds = %2173
  %2186 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2175) #12
  %2187 = load i32*, i32** %2180, align 8
  %2188 = getelementptr inbounds i32, i32* %2187, i64 %2179
  store i32 %2186, i32* %2188, align 4
  br label %2189

2189:                                             ; preds = %2173, %2185
  %2190 = phi i32 [ %2186, %2185 ], [ %2183, %2173 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2175, i8 zeroext 4, i32 %2190) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitTruncateFloat64ToWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2191:                                             ; preds = %2
  %2192 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2193 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2192, align 8
  %2194 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2195 = load i32, i32* %2194, align 4
  %2196 = and i32 %2195, 16777215
  %2197 = zext i32 %2196 to i64
  %2198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2199 = load i32*, i32** %2198, align 8
  %2200 = getelementptr inbounds i32, i32* %2199, i64 %2197
  %2201 = load i32, i32* %2200, align 4
  %2202 = icmp eq i32 %2201, -1
  br i1 %2202, label %2203, label %2207

2203:                                             ; preds = %2191
  %2204 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2193) #12
  %2205 = load i32*, i32** %2198, align 8
  %2206 = getelementptr inbounds i32, i32* %2205, i64 %2197
  store i32 %2204, i32* %2206, align 4
  br label %2207

2207:                                             ; preds = %2191, %2203
  %2208 = phi i32 [ %2204, %2203 ], [ %2201, %2191 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2193, i8 zeroext 4, i32 %2208) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitTruncateInt64ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2209:                                             ; preds = %2
  %2210 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2211 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2210, align 8
  %2212 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2213 = load i32, i32* %2212, align 4
  %2214 = and i32 %2213, 16777215
  %2215 = zext i32 %2214 to i64
  %2216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2217 = load i32*, i32** %2216, align 8
  %2218 = getelementptr inbounds i32, i32* %2217, i64 %2215
  %2219 = load i32, i32* %2218, align 4
  %2220 = icmp eq i32 %2219, -1
  br i1 %2220, label %2221, label %2225

2221:                                             ; preds = %2209
  %2222 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2211) #12
  %2223 = load i32*, i32** %2216, align 8
  %2224 = getelementptr inbounds i32, i32* %2223, i64 %2215
  store i32 %2222, i32* %2224, align 4
  br label %2225

2225:                                             ; preds = %2209, %2221
  %2226 = phi i32 [ %2222, %2221 ], [ %2219, %2209 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2211, i8 zeroext 4, i32 %2226) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundFloat64ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2227:                                             ; preds = %2
  %2228 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2229 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2228, align 8
  %2230 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2231 = load i32, i32* %2230, align 4
  %2232 = and i32 %2231, 16777215
  %2233 = zext i32 %2232 to i64
  %2234 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2235 = load i32*, i32** %2234, align 8
  %2236 = getelementptr inbounds i32, i32* %2235, i64 %2233
  %2237 = load i32, i32* %2236, align 4
  %2238 = icmp eq i32 %2237, -1
  br i1 %2238, label %2239, label %2243

2239:                                             ; preds = %2227
  %2240 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2229) #12
  %2241 = load i32*, i32** %2234, align 8
  %2242 = getelementptr inbounds i32, i32* %2241, i64 %2233
  store i32 %2240, i32* %2242, align 4
  br label %2243

2243:                                             ; preds = %2227, %2239
  %2244 = phi i32 [ %2240, %2239 ], [ %2237, %2227 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2229, i8 zeroext 12, i32 %2244) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundInt64ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2245:                                             ; preds = %2
  %2246 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2247 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2246, align 8
  %2248 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2249 = load i32, i32* %2248, align 4
  %2250 = and i32 %2249, 16777215
  %2251 = zext i32 %2250 to i64
  %2252 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2253 = load i32*, i32** %2252, align 8
  %2254 = getelementptr inbounds i32, i32* %2253, i64 %2251
  %2255 = load i32, i32* %2254, align 4
  %2256 = icmp eq i32 %2255, -1
  br i1 %2256, label %2257, label %2261

2257:                                             ; preds = %2245
  %2258 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2247) #12
  %2259 = load i32*, i32** %2252, align 8
  %2260 = getelementptr inbounds i32, i32* %2259, i64 %2251
  store i32 %2258, i32* %2260, align 4
  br label %2261

2261:                                             ; preds = %2245, %2257
  %2262 = phi i32 [ %2258, %2257 ], [ %2255, %2245 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2247, i8 zeroext 12, i32 %2262) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundInt32ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2263:                                             ; preds = %2
  %2264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2265 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2264, align 8
  %2266 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2267 = load i32, i32* %2266, align 4
  %2268 = and i32 %2267, 16777215
  %2269 = zext i32 %2268 to i64
  %2270 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2271 = load i32*, i32** %2270, align 8
  %2272 = getelementptr inbounds i32, i32* %2271, i64 %2269
  %2273 = load i32, i32* %2272, align 4
  %2274 = icmp eq i32 %2273, -1
  br i1 %2274, label %2275, label %2279

2275:                                             ; preds = %2263
  %2276 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2265) #12
  %2277 = load i32*, i32** %2270, align 8
  %2278 = getelementptr inbounds i32, i32* %2277, i64 %2269
  store i32 %2276, i32* %2278, align 4
  br label %2279

2279:                                             ; preds = %2263, %2275
  %2280 = phi i32 [ %2276, %2275 ], [ %2273, %2263 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2265, i8 zeroext 13, i32 %2280) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundInt64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2281:                                             ; preds = %2
  %2282 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2283 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2282, align 8
  %2284 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2285 = load i32, i32* %2284, align 4
  %2286 = and i32 %2285, 16777215
  %2287 = zext i32 %2286 to i64
  %2288 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2289 = load i32*, i32** %2288, align 8
  %2290 = getelementptr inbounds i32, i32* %2289, i64 %2287
  %2291 = load i32, i32* %2290, align 4
  %2292 = icmp eq i32 %2291, -1
  br i1 %2292, label %2293, label %2297

2293:                                             ; preds = %2281
  %2294 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2283) #12
  %2295 = load i32*, i32** %2288, align 8
  %2296 = getelementptr inbounds i32, i32* %2295, i64 %2287
  store i32 %2294, i32* %2296, align 4
  br label %2297

2297:                                             ; preds = %2281, %2293
  %2298 = phi i32 [ %2294, %2293 ], [ %2291, %2281 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2283, i8 zeroext 4, i32 %2298) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastFloat32ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2299:                                             ; preds = %2
  %2300 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2301 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2300, align 8
  %2302 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2303 = load i32, i32* %2302, align 4
  %2304 = and i32 %2303, 16777215
  %2305 = zext i32 %2304 to i64
  %2306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2307 = load i32*, i32** %2306, align 8
  %2308 = getelementptr inbounds i32, i32* %2307, i64 %2305
  %2309 = load i32, i32* %2308, align 4
  %2310 = icmp eq i32 %2309, -1
  br i1 %2310, label %2311, label %2315

2311:                                             ; preds = %2299
  %2312 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2301) #12
  %2313 = load i32*, i32** %2306, align 8
  %2314 = getelementptr inbounds i32, i32* %2313, i64 %2305
  store i32 %2312, i32* %2314, align 4
  br label %2315

2315:                                             ; preds = %2299, %2311
  %2316 = phi i32 [ %2312, %2311 ], [ %2309, %2299 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2301, i8 zeroext 12, i32 %2316) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitRoundUint32ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2317:                                             ; preds = %2
  %2318 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2319 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2318, align 8
  %2320 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2321 = load i32, i32* %2320, align 4
  %2322 = and i32 %2321, 16777215
  %2323 = zext i32 %2322 to i64
  %2324 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2325 = load i32*, i32** %2324, align 8
  %2326 = getelementptr inbounds i32, i32* %2325, i64 %2323
  %2327 = load i32, i32* %2326, align 4
  %2328 = icmp eq i32 %2327, -1
  br i1 %2328, label %2329, label %2333

2329:                                             ; preds = %2317
  %2330 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2319) #12
  %2331 = load i32*, i32** %2324, align 8
  %2332 = getelementptr inbounds i32, i32* %2331, i64 %2323
  store i32 %2330, i32* %2332, align 4
  br label %2333

2333:                                             ; preds = %2317, %2329
  %2334 = phi i32 [ %2330, %2329 ], [ %2327, %2317 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2319, i8 zeroext 13, i32 %2334) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitRoundUint64ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2335:                                             ; preds = %2
  %2336 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2337 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2336, align 8
  %2338 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2339 = load i32, i32* %2338, align 4
  %2340 = and i32 %2339, 16777215
  %2341 = zext i32 %2340 to i64
  %2342 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2343 = load i32*, i32** %2342, align 8
  %2344 = getelementptr inbounds i32, i32* %2343, i64 %2341
  %2345 = load i32, i32* %2344, align 4
  %2346 = icmp eq i32 %2345, -1
  br i1 %2346, label %2347, label %2351

2347:                                             ; preds = %2335
  %2348 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2337) #12
  %2349 = load i32*, i32** %2342, align 8
  %2350 = getelementptr inbounds i32, i32* %2349, i64 %2341
  store i32 %2348, i32* %2350, align 4
  br label %2351

2351:                                             ; preds = %2335, %2347
  %2352 = phi i32 [ %2348, %2347 ], [ %2345, %2335 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2337, i8 zeroext 13, i32 %2352) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitRoundUint64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2353:                                             ; preds = %2
  %2354 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2355 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2354, align 8
  %2356 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2357 = load i32, i32* %2356, align 4
  %2358 = and i32 %2357, 16777215
  %2359 = zext i32 %2358 to i64
  %2360 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2361 = load i32*, i32** %2360, align 8
  %2362 = getelementptr inbounds i32, i32* %2361, i64 %2359
  %2363 = load i32, i32* %2362, align 4
  %2364 = icmp eq i32 %2363, -1
  br i1 %2364, label %2365, label %2369

2365:                                             ; preds = %2353
  %2366 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2355) #12
  %2367 = load i32*, i32** %2360, align 8
  %2368 = getelementptr inbounds i32, i32* %2367, i64 %2359
  store i32 %2366, i32* %2368, align 4
  br label %2369

2369:                                             ; preds = %2353, %2365
  %2370 = phi i32 [ %2366, %2365 ], [ %2363, %2353 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2355, i8 zeroext 5, i32 %2370) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2371:                                             ; preds = %2
  %2372 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2373 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2372, align 8
  %2374 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2375 = load i32, i32* %2374, align 4
  %2376 = and i32 %2375, 16777215
  %2377 = zext i32 %2376 to i64
  %2378 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2379 = load i32*, i32** %2378, align 8
  %2380 = getelementptr inbounds i32, i32* %2379, i64 %2377
  %2381 = load i32, i32* %2380, align 4
  %2382 = icmp eq i32 %2381, -1
  br i1 %2382, label %2383, label %2387

2383:                                             ; preds = %2371
  %2384 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2373) #12
  %2385 = load i32*, i32** %2378, align 8
  %2386 = getelementptr inbounds i32, i32* %2385, i64 %2377
  store i32 %2384, i32* %2386, align 4
  br label %2387

2387:                                             ; preds = %2371, %2383
  %2388 = phi i32 [ %2384, %2383 ], [ %2381, %2371 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2373, i8 zeroext 12, i32 %2388) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastInt32ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2389:                                             ; preds = %2
  %2390 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2391 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2390, align 8
  %2392 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2393 = load i32, i32* %2392, align 4
  %2394 = and i32 %2393, 16777215
  %2395 = zext i32 %2394 to i64
  %2396 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2397 = load i32*, i32** %2396, align 8
  %2398 = getelementptr inbounds i32, i32* %2397, i64 %2395
  %2399 = load i32, i32* %2398, align 4
  %2400 = icmp eq i32 %2399, -1
  br i1 %2400, label %2401, label %2405

2401:                                             ; preds = %2389
  %2402 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2391) #12
  %2403 = load i32*, i32** %2396, align 8
  %2404 = getelementptr inbounds i32, i32* %2403, i64 %2395
  store i32 %2402, i32* %2404, align 4
  br label %2405

2405:                                             ; preds = %2389, %2401
  %2406 = phi i32 [ %2402, %2401 ], [ %2399, %2389 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2391, i8 zeroext 13, i32 %2406) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastInt64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2407:                                             ; preds = %2
  %2408 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2409 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2408, align 8
  %2410 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2411 = load i32, i32* %2410, align 4
  %2412 = and i32 %2411, 16777215
  %2413 = zext i32 %2412 to i64
  %2414 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2415 = load i32*, i32** %2414, align 8
  %2416 = getelementptr inbounds i32, i32* %2415, i64 %2413
  %2417 = load i32, i32* %2416, align 4
  %2418 = icmp eq i32 %2417, -1
  br i1 %2418, label %2419, label %2423

2419:                                             ; preds = %2407
  %2420 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2409) #12
  %2421 = load i32*, i32** %2414, align 8
  %2422 = getelementptr inbounds i32, i32* %2421, i64 %2413
  store i32 %2420, i32* %2422, align 4
  br label %2423

2423:                                             ; preds = %2407, %2419
  %2424 = phi i32 [ %2420, %2419 ], [ %2417, %2407 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2409, i8 zeroext 12, i32 %2424) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2425:                                             ; preds = %2
  %2426 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2427 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2426, align 8
  %2428 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2429 = load i32, i32* %2428, align 4
  %2430 = and i32 %2429, 16777215
  %2431 = zext i32 %2430 to i64
  %2432 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2433 = load i32*, i32** %2432, align 8
  %2434 = getelementptr inbounds i32, i32* %2433, i64 %2431
  %2435 = load i32, i32* %2434, align 4
  %2436 = icmp eq i32 %2435, -1
  br i1 %2436, label %2437, label %2441

2437:                                             ; preds = %2425
  %2438 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2427) #12
  %2439 = load i32*, i32** %2432, align 8
  %2440 = getelementptr inbounds i32, i32* %2439, i64 %2431
  store i32 %2438, i32* %2440, align 4
  br label %2441

2441:                                             ; preds = %2425, %2437
  %2442 = phi i32 [ %2438, %2437 ], [ %2435, %2425 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2427, i8 zeroext 12, i32 %2442) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2443:                                             ; preds = %2
  %2444 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2445 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2444, align 8
  %2446 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2447 = load i32, i32* %2446, align 4
  %2448 = and i32 %2447, 16777215
  %2449 = zext i32 %2448 to i64
  %2450 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2451 = load i32*, i32** %2450, align 8
  %2452 = getelementptr inbounds i32, i32* %2451, i64 %2449
  %2453 = load i32, i32* %2452, align 4
  %2454 = icmp eq i32 %2453, -1
  br i1 %2454, label %2455, label %2459

2455:                                             ; preds = %2443
  %2456 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2445) #12
  %2457 = load i32*, i32** %2450, align 8
  %2458 = getelementptr inbounds i32, i32* %2457, i64 %2449
  store i32 %2456, i32* %2458, align 4
  br label %2459

2459:                                             ; preds = %2443, %2455
  %2460 = phi i32 [ %2456, %2455 ], [ %2453, %2443 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2445, i8 zeroext 12, i32 %2460) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2461:                                             ; preds = %2
  %2462 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2463 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2462, align 8
  %2464 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2465 = load i32, i32* %2464, align 4
  %2466 = and i32 %2465, 16777215
  %2467 = zext i32 %2466 to i64
  %2468 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2469 = load i32*, i32** %2468, align 8
  %2470 = getelementptr inbounds i32, i32* %2469, i64 %2467
  %2471 = load i32, i32* %2470, align 4
  %2472 = icmp eq i32 %2471, -1
  br i1 %2472, label %2473, label %2477

2473:                                             ; preds = %2461
  %2474 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2463) #12
  %2475 = load i32*, i32** %2468, align 8
  %2476 = getelementptr inbounds i32, i32* %2475, i64 %2467
  store i32 %2474, i32* %2476, align 4
  br label %2477

2477:                                             ; preds = %2461, %2473
  %2478 = phi i32 [ %2474, %2473 ], [ %2471, %2461 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2463, i8 zeroext 12, i32 %2478) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2479:                                             ; preds = %2
  %2480 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2481 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2480, align 8
  %2482 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2483 = load i32, i32* %2482, align 4
  %2484 = and i32 %2483, 16777215
  %2485 = zext i32 %2484 to i64
  %2486 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2487 = load i32*, i32** %2486, align 8
  %2488 = getelementptr inbounds i32, i32* %2487, i64 %2485
  %2489 = load i32, i32* %2488, align 4
  %2490 = icmp eq i32 %2489, -1
  br i1 %2490, label %2491, label %2495

2491:                                             ; preds = %2479
  %2492 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2481) #12
  %2493 = load i32*, i32** %2486, align 8
  %2494 = getelementptr inbounds i32, i32* %2493, i64 %2485
  store i32 %2492, i32* %2494, align 4
  br label %2495

2495:                                             ; preds = %2479, %2491
  %2496 = phi i32 [ %2492, %2491 ], [ %2489, %2479 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2481, i8 zeroext 12, i32 %2496) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2497:                                             ; preds = %2
  %2498 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2499 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2498, align 8
  %2500 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2501 = load i32, i32* %2500, align 4
  %2502 = and i32 %2501, 16777215
  %2503 = zext i32 %2502 to i64
  %2504 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2505 = load i32*, i32** %2504, align 8
  %2506 = getelementptr inbounds i32, i32* %2505, i64 %2503
  %2507 = load i32, i32* %2506, align 4
  %2508 = icmp eq i32 %2507, -1
  br i1 %2508, label %2509, label %2513

2509:                                             ; preds = %2497
  %2510 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2499) #12
  %2511 = load i32*, i32** %2504, align 8
  %2512 = getelementptr inbounds i32, i32* %2511, i64 %2503
  store i32 %2510, i32* %2512, align 4
  br label %2513

2513:                                             ; preds = %2497, %2509
  %2514 = phi i32 [ %2510, %2509 ], [ %2507, %2497 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2499, i8 zeroext 12, i32 %2514) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2515:                                             ; preds = %2
  %2516 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2517 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2516, align 8
  %2518 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2519 = load i32, i32* %2518, align 4
  %2520 = and i32 %2519, 16777215
  %2521 = zext i32 %2520 to i64
  %2522 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2523 = load i32*, i32** %2522, align 8
  %2524 = getelementptr inbounds i32, i32* %2523, i64 %2521
  %2525 = load i32, i32* %2524, align 4
  %2526 = icmp eq i32 %2525, -1
  br i1 %2526, label %2527, label %2531

2527:                                             ; preds = %2515
  %2528 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2517) #12
  %2529 = load i32*, i32** %2522, align 8
  %2530 = getelementptr inbounds i32, i32* %2529, i64 %2521
  store i32 %2528, i32* %2530, align 4
  br label %2531

2531:                                             ; preds = %2515, %2527
  %2532 = phi i32 [ %2528, %2527 ], [ %2525, %2515 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2517, i8 zeroext 12, i32 %2532) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat32SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2533:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat32EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2534:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitFloat32LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2535:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitFloat32LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2536:                                             ; preds = %2
  %2537 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2538 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2537, align 8
  %2539 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2540 = load i32, i32* %2539, align 4
  %2541 = and i32 %2540, 16777215
  %2542 = zext i32 %2541 to i64
  %2543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2544 = load i32*, i32** %2543, align 8
  %2545 = getelementptr inbounds i32, i32* %2544, i64 %2542
  %2546 = load i32, i32* %2545, align 4
  %2547 = icmp eq i32 %2546, -1
  br i1 %2547, label %2548, label %2552

2548:                                             ; preds = %2536
  %2549 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2538) #12
  %2550 = load i32*, i32** %2543, align 8
  %2551 = getelementptr inbounds i32, i32* %2550, i64 %2542
  store i32 %2549, i32* %2551, align 4
  br label %2552

2552:                                             ; preds = %2536, %2548
  %2553 = phi i32 [ %2549, %2548 ], [ %2546, %2536 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2538, i8 zeroext 12, i32 %2553) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2554:                                             ; preds = %2
  %2555 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2556 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2555, align 8
  %2557 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2558 = load i32, i32* %2557, align 4
  %2559 = and i32 %2558, 16777215
  %2560 = zext i32 %2559 to i64
  %2561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2562 = load i32*, i32** %2561, align 8
  %2563 = getelementptr inbounds i32, i32* %2562, i64 %2560
  %2564 = load i32, i32* %2563, align 4
  %2565 = icmp eq i32 %2564, -1
  br i1 %2565, label %2566, label %2570

2566:                                             ; preds = %2554
  %2567 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2556) #12
  %2568 = load i32*, i32** %2561, align 8
  %2569 = getelementptr inbounds i32, i32* %2568, i64 %2560
  store i32 %2567, i32* %2569, align 4
  br label %2570

2570:                                             ; preds = %2554, %2566
  %2571 = phi i32 [ %2567, %2566 ], [ %2564, %2554 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2556, i8 zeroext 12, i32 %2571) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2572:                                             ; preds = %2
  %2573 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2574 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2573, align 8
  %2575 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2576 = load i32, i32* %2575, align 4
  %2577 = and i32 %2576, 16777215
  %2578 = zext i32 %2577 to i64
  %2579 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2580 = load i32*, i32** %2579, align 8
  %2581 = getelementptr inbounds i32, i32* %2580, i64 %2578
  %2582 = load i32, i32* %2581, align 4
  %2583 = icmp eq i32 %2582, -1
  br i1 %2583, label %2584, label %2588

2584:                                             ; preds = %2572
  %2585 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2574) #12
  %2586 = load i32*, i32** %2579, align 8
  %2587 = getelementptr inbounds i32, i32* %2586, i64 %2578
  store i32 %2585, i32* %2587, align 4
  br label %2588

2588:                                             ; preds = %2572, %2584
  %2589 = phi i32 [ %2585, %2584 ], [ %2582, %2572 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2574, i8 zeroext 12, i32 %2589) #12
  %2590 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %2590) #12
  %2591 = load i32, i32* %2575, align 4
  %2592 = and i32 %2591, 251658240
  %2593 = icmp eq i32 %2592, 251658240
  %2594 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %2595 = add i64 %2594, 32
  br i1 %2593, label %2596, label %2600

2596:                                             ; preds = %2588
  %2597 = inttoptr i64 %2595 to i64*
  %2598 = load i64, i64* %2597, align 8
  %2599 = add i64 %2598, 16
  br label %2600

2600:                                             ; preds = %2596, %2588
  %2601 = phi i64 [ %2599, %2596 ], [ %2595, %2588 ]
  %2602 = inttoptr i64 %2601 to %"class.v8::internal::compiler::Node"**
  %2603 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2602, i64 1
  %2604 = bitcast %"class.v8::internal::compiler::Node"** %2603 to <2 x i64>*
  %2605 = load <2 x i64>, <2 x i64>* %2604, align 8
  %2606 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 0
  store i32 7, i32* %2606, align 8, !alias.scope !283
  %2607 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 1
  store i32 1, i32* %2607, align 4, !alias.scope !283
  %2608 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %2608, align 8, !alias.scope !283
  %2609 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %2609, align 8, !alias.scope !283
  %2610 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %2610, align 8, !alias.scope !283
  %2611 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 12
  %2612 = bitcast %"class.v8::internal::compiler::Node"** %2611 to <2 x i64>*
  store <2 x i64> %2605, <2 x i64>* %2612, align 8, !alias.scope !283
  br i1 %2593, label %2613, label %2617

2613:                                             ; preds = %2600
  %2614 = inttoptr i64 %2595 to i64*
  %2615 = load i64, i64* %2614, align 8
  %2616 = add i64 %2615, 16
  br label %2617

2617:                                             ; preds = %2600, %2613
  %2618 = phi i64 [ %2616, %2613 ], [ %2595, %2600 ]
  %2619 = inttoptr i64 %2618 to %"class.v8::internal::compiler::Node"**
  %2620 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2619, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2620, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %2590) #12
  br label %7785

2621:                                             ; preds = %2
  %2622 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2623 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2622, align 8
  %2624 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2625 = load i32, i32* %2624, align 4
  %2626 = and i32 %2625, 16777215
  %2627 = zext i32 %2626 to i64
  %2628 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2629 = load i32*, i32** %2628, align 8
  %2630 = getelementptr inbounds i32, i32* %2629, i64 %2627
  %2631 = load i32, i32* %2630, align 4
  %2632 = icmp eq i32 %2631, -1
  br i1 %2632, label %2633, label %2637

2633:                                             ; preds = %2621
  %2634 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2623) #12
  %2635 = load i32*, i32** %2628, align 8
  %2636 = getelementptr inbounds i32, i32* %2635, i64 %2627
  store i32 %2634, i32* %2636, align 4
  br label %2637

2637:                                             ; preds = %2621, %2633
  %2638 = phi i32 [ %2634, %2633 ], [ %2631, %2621 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2623, i8 zeroext 13, i32 %2638) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2639:                                             ; preds = %2
  %2640 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2641 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2640, align 8
  %2642 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2643 = load i32, i32* %2642, align 4
  %2644 = and i32 %2643, 16777215
  %2645 = zext i32 %2644 to i64
  %2646 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2647 = load i32*, i32** %2646, align 8
  %2648 = getelementptr inbounds i32, i32* %2647, i64 %2645
  %2649 = load i32, i32* %2648, align 4
  %2650 = icmp eq i32 %2649, -1
  br i1 %2650, label %2651, label %2655

2651:                                             ; preds = %2639
  %2652 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2641) #12
  %2653 = load i32*, i32** %2646, align 8
  %2654 = getelementptr inbounds i32, i32* %2653, i64 %2645
  store i32 %2652, i32* %2654, align 4
  br label %2655

2655:                                             ; preds = %2639, %2651
  %2656 = phi i32 [ %2652, %2651 ], [ %2649, %2639 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2641, i8 zeroext 13, i32 %2656) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2657:                                             ; preds = %2
  %2658 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2659 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2658, align 8
  %2660 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2661 = load i32, i32* %2660, align 4
  %2662 = and i32 %2661, 16777215
  %2663 = zext i32 %2662 to i64
  %2664 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2665 = load i32*, i32** %2664, align 8
  %2666 = getelementptr inbounds i32, i32* %2665, i64 %2663
  %2667 = load i32, i32* %2666, align 4
  %2668 = icmp eq i32 %2667, -1
  br i1 %2668, label %2669, label %2673

2669:                                             ; preds = %2657
  %2670 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2659) #12
  %2671 = load i32*, i32** %2664, align 8
  %2672 = getelementptr inbounds i32, i32* %2671, i64 %2663
  store i32 %2670, i32* %2672, align 4
  br label %2673

2673:                                             ; preds = %2657, %2669
  %2674 = phi i32 [ %2670, %2669 ], [ %2667, %2657 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2659, i8 zeroext 13, i32 %2674) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2675:                                             ; preds = %2
  %2676 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2677 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2676, align 8
  %2678 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2679 = load i32, i32* %2678, align 4
  %2680 = and i32 %2679, 16777215
  %2681 = zext i32 %2680 to i64
  %2682 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2683 = load i32*, i32** %2682, align 8
  %2684 = getelementptr inbounds i32, i32* %2683, i64 %2681
  %2685 = load i32, i32* %2684, align 4
  %2686 = icmp eq i32 %2685, -1
  br i1 %2686, label %2687, label %2691

2687:                                             ; preds = %2675
  %2688 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2677) #12
  %2689 = load i32*, i32** %2682, align 8
  %2690 = getelementptr inbounds i32, i32* %2689, i64 %2681
  store i32 %2688, i32* %2690, align 4
  br label %2691

2691:                                             ; preds = %2675, %2687
  %2692 = phi i32 [ %2688, %2687 ], [ %2685, %2675 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2677, i8 zeroext 13, i32 %2692) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2693:                                             ; preds = %2
  %2694 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2695 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2694, align 8
  %2696 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2697 = load i32, i32* %2696, align 4
  %2698 = and i32 %2697, 16777215
  %2699 = zext i32 %2698 to i64
  %2700 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2701 = load i32*, i32** %2700, align 8
  %2702 = getelementptr inbounds i32, i32* %2701, i64 %2699
  %2703 = load i32, i32* %2702, align 4
  %2704 = icmp eq i32 %2703, -1
  br i1 %2704, label %2705, label %2709

2705:                                             ; preds = %2693
  %2706 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2695) #12
  %2707 = load i32*, i32** %2700, align 8
  %2708 = getelementptr inbounds i32, i32* %2707, i64 %2699
  store i32 %2706, i32* %2708, align 4
  br label %2709

2709:                                             ; preds = %2693, %2705
  %2710 = phi i32 [ %2706, %2705 ], [ %2703, %2693 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2695, i8 zeroext 13, i32 %2710) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2711:                                             ; preds = %2
  %2712 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2713 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2712, align 8
  %2714 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2715 = load i32, i32* %2714, align 4
  %2716 = and i32 %2715, 16777215
  %2717 = zext i32 %2716 to i64
  %2718 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2719 = load i32*, i32** %2718, align 8
  %2720 = getelementptr inbounds i32, i32* %2719, i64 %2717
  %2721 = load i32, i32* %2720, align 4
  %2722 = icmp eq i32 %2721, -1
  br i1 %2722, label %2723, label %2727

2723:                                             ; preds = %2711
  %2724 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2713) #12
  %2725 = load i32*, i32** %2718, align 8
  %2726 = getelementptr inbounds i32, i32* %2725, i64 %2717
  store i32 %2724, i32* %2726, align 4
  br label %2727

2727:                                             ; preds = %2711, %2723
  %2728 = phi i32 [ %2724, %2723 ], [ %2721, %2711 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2713, i8 zeroext 13, i32 %2728) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2729:                                             ; preds = %2
  %2730 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2731 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2730, align 8
  %2732 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2733 = load i32, i32* %2732, align 4
  %2734 = and i32 %2733, 16777215
  %2735 = zext i32 %2734 to i64
  %2736 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2737 = load i32*, i32** %2736, align 8
  %2738 = getelementptr inbounds i32, i32* %2737, i64 %2735
  %2739 = load i32, i32* %2738, align 4
  %2740 = icmp eq i32 %2739, -1
  br i1 %2740, label %2741, label %2745

2741:                                             ; preds = %2729
  %2742 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2731) #12
  %2743 = load i32*, i32** %2736, align 8
  %2744 = getelementptr inbounds i32, i32* %2743, i64 %2735
  store i32 %2742, i32* %2744, align 4
  br label %2745

2745:                                             ; preds = %2729, %2741
  %2746 = phi i32 [ %2742, %2741 ], [ %2739, %2729 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2731, i8 zeroext 13, i32 %2746) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2747:                                             ; preds = %2
  %2748 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2749 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2748, align 8
  %2750 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2751 = load i32, i32* %2750, align 4
  %2752 = and i32 %2751, 16777215
  %2753 = zext i32 %2752 to i64
  %2754 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2755 = load i32*, i32** %2754, align 8
  %2756 = getelementptr inbounds i32, i32* %2755, i64 %2753
  %2757 = load i32, i32* %2756, align 4
  %2758 = icmp eq i32 %2757, -1
  br i1 %2758, label %2759, label %2763

2759:                                             ; preds = %2747
  %2760 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2749) #12
  %2761 = load i32*, i32** %2754, align 8
  %2762 = getelementptr inbounds i32, i32* %2761, i64 %2753
  store i32 %2760, i32* %2762, align 4
  br label %2763

2763:                                             ; preds = %2747, %2759
  %2764 = phi i32 [ %2760, %2759 ], [ %2757, %2747 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2749, i8 zeroext 13, i32 %2764) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2765:                                             ; preds = %2
  %2766 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2767 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2766, align 8
  %2768 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2769 = load i32, i32* %2768, align 4
  %2770 = and i32 %2769, 16777215
  %2771 = zext i32 %2770 to i64
  %2772 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2773 = load i32*, i32** %2772, align 8
  %2774 = getelementptr inbounds i32, i32* %2773, i64 %2771
  %2775 = load i32, i32* %2774, align 4
  %2776 = icmp eq i32 %2775, -1
  br i1 %2776, label %2777, label %2781

2777:                                             ; preds = %2765
  %2778 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2767) #12
  %2779 = load i32*, i32** %2772, align 8
  %2780 = getelementptr inbounds i32, i32* %2779, i64 %2771
  store i32 %2778, i32* %2780, align 4
  br label %2781

2781:                                             ; preds = %2765, %2777
  %2782 = phi i32 [ %2778, %2777 ], [ %2775, %2765 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2767, i8 zeroext 13, i32 %2782) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

2783:                                             ; preds = %2
  %2784 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2785 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2784, align 8
  %2786 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2787 = load i32, i32* %2786, align 4
  %2788 = and i32 %2787, 16777215
  %2789 = zext i32 %2788 to i64
  %2790 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2791 = load i32*, i32** %2790, align 8
  %2792 = getelementptr inbounds i32, i32* %2791, i64 %2789
  %2793 = load i32, i32* %2792, align 4
  %2794 = icmp eq i32 %2793, -1
  br i1 %2794, label %2795, label %2799

2795:                                             ; preds = %2783
  %2796 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2785) #12
  %2797 = load i32*, i32** %2790, align 8
  %2798 = getelementptr inbounds i32, i32* %2797, i64 %2789
  store i32 %2796, i32* %2798, align 4
  br label %2799

2799:                                             ; preds = %2783, %2795
  %2800 = phi i32 [ %2796, %2795 ], [ %2793, %2783 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2785, i8 zeroext 13, i32 %2800) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 73) #12
  br label %7785

2801:                                             ; preds = %2
  %2802 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2803 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2802, align 8
  %2804 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2805 = load i32, i32* %2804, align 4
  %2806 = and i32 %2805, 16777215
  %2807 = zext i32 %2806 to i64
  %2808 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2809 = load i32*, i32** %2808, align 8
  %2810 = getelementptr inbounds i32, i32* %2809, i64 %2807
  %2811 = load i32, i32* %2810, align 4
  %2812 = icmp eq i32 %2811, -1
  br i1 %2812, label %2813, label %2817

2813:                                             ; preds = %2801
  %2814 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2803) #12
  %2815 = load i32*, i32** %2808, align 8
  %2816 = getelementptr inbounds i32, i32* %2815, i64 %2807
  store i32 %2814, i32* %2816, align 4
  br label %2817

2817:                                             ; preds = %2801, %2813
  %2818 = phi i32 [ %2814, %2813 ], [ %2811, %2801 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2803, i8 zeroext 13, i32 %2818) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 74) #12
  br label %7785

2819:                                             ; preds = %2
  %2820 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2821 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2820, align 8
  %2822 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2823 = load i32, i32* %2822, align 4
  %2824 = and i32 %2823, 16777215
  %2825 = zext i32 %2824 to i64
  %2826 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2827 = load i32*, i32** %2826, align 8
  %2828 = getelementptr inbounds i32, i32* %2827, i64 %2825
  %2829 = load i32, i32* %2828, align 4
  %2830 = icmp eq i32 %2829, -1
  br i1 %2830, label %2831, label %2835

2831:                                             ; preds = %2819
  %2832 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2821) #12
  %2833 = load i32*, i32** %2826, align 8
  %2834 = getelementptr inbounds i32, i32* %2833, i64 %2825
  store i32 %2832, i32* %2834, align 4
  br label %2835

2835:                                             ; preds = %2819, %2831
  %2836 = phi i32 [ %2832, %2831 ], [ %2829, %2819 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2821, i8 zeroext 13, i32 %2836) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 75) #12
  br label %7785

2837:                                             ; preds = %2
  %2838 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2839 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2838, align 8
  %2840 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2841 = load i32, i32* %2840, align 4
  %2842 = and i32 %2841, 16777215
  %2843 = zext i32 %2842 to i64
  %2844 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2845 = load i32*, i32** %2844, align 8
  %2846 = getelementptr inbounds i32, i32* %2845, i64 %2843
  %2847 = load i32, i32* %2846, align 4
  %2848 = icmp eq i32 %2847, -1
  br i1 %2848, label %2849, label %2853

2849:                                             ; preds = %2837
  %2850 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2839) #12
  %2851 = load i32*, i32** %2844, align 8
  %2852 = getelementptr inbounds i32, i32* %2851, i64 %2843
  store i32 %2850, i32* %2852, align 4
  br label %2853

2853:                                             ; preds = %2837, %2849
  %2854 = phi i32 [ %2850, %2849 ], [ %2847, %2837 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2839, i8 zeroext 13, i32 %2854) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 76) #12
  br label %7785

2855:                                             ; preds = %2
  %2856 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2857 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2856, align 8
  %2858 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2859 = load i32, i32* %2858, align 4
  %2860 = and i32 %2859, 16777215
  %2861 = zext i32 %2860 to i64
  %2862 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2863 = load i32*, i32** %2862, align 8
  %2864 = getelementptr inbounds i32, i32* %2863, i64 %2861
  %2865 = load i32, i32* %2864, align 4
  %2866 = icmp eq i32 %2865, -1
  br i1 %2866, label %2867, label %2871

2867:                                             ; preds = %2855
  %2868 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2857) #12
  %2869 = load i32*, i32** %2862, align 8
  %2870 = getelementptr inbounds i32, i32* %2869, i64 %2861
  store i32 %2868, i32* %2870, align 4
  br label %2871

2871:                                             ; preds = %2855, %2867
  %2872 = phi i32 [ %2868, %2867 ], [ %2865, %2855 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2857, i8 zeroext 13, i32 %2872) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 77) #12
  br label %7785

2873:                                             ; preds = %2
  %2874 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2875 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2874, align 8
  %2876 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2877 = load i32, i32* %2876, align 4
  %2878 = and i32 %2877, 16777215
  %2879 = zext i32 %2878 to i64
  %2880 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2881 = load i32*, i32** %2880, align 8
  %2882 = getelementptr inbounds i32, i32* %2881, i64 %2879
  %2883 = load i32, i32* %2882, align 4
  %2884 = icmp eq i32 %2883, -1
  br i1 %2884, label %2885, label %2889

2885:                                             ; preds = %2873
  %2886 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2875) #12
  %2887 = load i32*, i32** %2880, align 8
  %2888 = getelementptr inbounds i32, i32* %2887, i64 %2879
  store i32 %2886, i32* %2888, align 4
  br label %2889

2889:                                             ; preds = %2873, %2885
  %2890 = phi i32 [ %2886, %2885 ], [ %2883, %2873 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2875, i8 zeroext 13, i32 %2890) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 78) #12
  br label %7785

2891:                                             ; preds = %2
  %2892 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2893 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2892, align 8
  %2894 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2895 = load i32, i32* %2894, align 4
  %2896 = and i32 %2895, 16777215
  %2897 = zext i32 %2896 to i64
  %2898 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2899 = load i32*, i32** %2898, align 8
  %2900 = getelementptr inbounds i32, i32* %2899, i64 %2897
  %2901 = load i32, i32* %2900, align 4
  %2902 = icmp eq i32 %2901, -1
  br i1 %2902, label %2903, label %2907

2903:                                             ; preds = %2891
  %2904 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2893) #12
  %2905 = load i32*, i32** %2898, align 8
  %2906 = getelementptr inbounds i32, i32* %2905, i64 %2897
  store i32 %2904, i32* %2906, align 4
  br label %2907

2907:                                             ; preds = %2891, %2903
  %2908 = phi i32 [ %2904, %2903 ], [ %2901, %2891 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2893, i8 zeroext 13, i32 %2908) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitFloat64Ieee754BinopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 79) #12
  br label %7785

2909:                                             ; preds = %2
  %2910 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2911 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2910, align 8
  %2912 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2913 = load i32, i32* %2912, align 4
  %2914 = and i32 %2913, 16777215
  %2915 = zext i32 %2914 to i64
  %2916 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2917 = load i32*, i32** %2916, align 8
  %2918 = getelementptr inbounds i32, i32* %2917, i64 %2915
  %2919 = load i32, i32* %2918, align 4
  %2920 = icmp eq i32 %2919, -1
  br i1 %2920, label %2921, label %2925

2921:                                             ; preds = %2909
  %2922 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2911) #12
  %2923 = load i32*, i32** %2916, align 8
  %2924 = getelementptr inbounds i32, i32* %2923, i64 %2915
  store i32 %2922, i32* %2924, align 4
  br label %2925

2925:                                             ; preds = %2909, %2921
  %2926 = phi i32 [ %2922, %2921 ], [ %2919, %2909 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2911, i8 zeroext 13, i32 %2926) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 80) #12
  br label %7785

2927:                                             ; preds = %2
  %2928 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2929 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2928, align 8
  %2930 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2931 = load i32, i32* %2930, align 4
  %2932 = and i32 %2931, 16777215
  %2933 = zext i32 %2932 to i64
  %2934 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2935 = load i32*, i32** %2934, align 8
  %2936 = getelementptr inbounds i32, i32* %2935, i64 %2933
  %2937 = load i32, i32* %2936, align 4
  %2938 = icmp eq i32 %2937, -1
  br i1 %2938, label %2939, label %2943

2939:                                             ; preds = %2927
  %2940 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2929) #12
  %2941 = load i32*, i32** %2934, align 8
  %2942 = getelementptr inbounds i32, i32* %2941, i64 %2933
  store i32 %2940, i32* %2942, align 4
  br label %2943

2943:                                             ; preds = %2927, %2939
  %2944 = phi i32 [ %2940, %2939 ], [ %2937, %2927 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2929, i8 zeroext 13, i32 %2944) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 81) #12
  br label %7785

2945:                                             ; preds = %2
  %2946 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2947 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2946, align 8
  %2948 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2949 = load i32, i32* %2948, align 4
  %2950 = and i32 %2949, 16777215
  %2951 = zext i32 %2950 to i64
  %2952 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2953 = load i32*, i32** %2952, align 8
  %2954 = getelementptr inbounds i32, i32* %2953, i64 %2951
  %2955 = load i32, i32* %2954, align 4
  %2956 = icmp eq i32 %2955, -1
  br i1 %2956, label %2957, label %2961

2957:                                             ; preds = %2945
  %2958 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2947) #12
  %2959 = load i32*, i32** %2952, align 8
  %2960 = getelementptr inbounds i32, i32* %2959, i64 %2951
  store i32 %2958, i32* %2960, align 4
  br label %2961

2961:                                             ; preds = %2945, %2957
  %2962 = phi i32 [ %2958, %2957 ], [ %2955, %2945 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2947, i8 zeroext 13, i32 %2962) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 82) #12
  br label %7785

2963:                                             ; preds = %2
  %2964 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2965 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2964, align 8
  %2966 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2967 = load i32, i32* %2966, align 4
  %2968 = and i32 %2967, 16777215
  %2969 = zext i32 %2968 to i64
  %2970 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2971 = load i32*, i32** %2970, align 8
  %2972 = getelementptr inbounds i32, i32* %2971, i64 %2969
  %2973 = load i32, i32* %2972, align 4
  %2974 = icmp eq i32 %2973, -1
  br i1 %2974, label %2975, label %2979

2975:                                             ; preds = %2963
  %2976 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2965) #12
  %2977 = load i32*, i32** %2970, align 8
  %2978 = getelementptr inbounds i32, i32* %2977, i64 %2969
  store i32 %2976, i32* %2978, align 4
  br label %2979

2979:                                             ; preds = %2963, %2975
  %2980 = phi i32 [ %2976, %2975 ], [ %2973, %2963 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2965, i8 zeroext 13, i32 %2980) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 83) #12
  br label %7785

2981:                                             ; preds = %2
  %2982 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %2983 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %2982, align 8
  %2984 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %2985 = load i32, i32* %2984, align 4
  %2986 = and i32 %2985, 16777215
  %2987 = zext i32 %2986 to i64
  %2988 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %2989 = load i32*, i32** %2988, align 8
  %2990 = getelementptr inbounds i32, i32* %2989, i64 %2987
  %2991 = load i32, i32* %2990, align 4
  %2992 = icmp eq i32 %2991, -1
  br i1 %2992, label %2993, label %2997

2993:                                             ; preds = %2981
  %2994 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %2983) #12
  %2995 = load i32*, i32** %2988, align 8
  %2996 = getelementptr inbounds i32, i32* %2995, i64 %2987
  store i32 %2994, i32* %2996, align 4
  br label %2997

2997:                                             ; preds = %2981, %2993
  %2998 = phi i32 [ %2994, %2993 ], [ %2991, %2981 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %2983, i8 zeroext 13, i32 %2998) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 84) #12
  br label %7785

2999:                                             ; preds = %2
  %3000 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3001 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3000, align 8
  %3002 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3003 = load i32, i32* %3002, align 4
  %3004 = and i32 %3003, 16777215
  %3005 = zext i32 %3004 to i64
  %3006 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3007 = load i32*, i32** %3006, align 8
  %3008 = getelementptr inbounds i32, i32* %3007, i64 %3005
  %3009 = load i32, i32* %3008, align 4
  %3010 = icmp eq i32 %3009, -1
  br i1 %3010, label %3011, label %3015

3011:                                             ; preds = %2999
  %3012 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3001) #12
  %3013 = load i32*, i32** %3006, align 8
  %3014 = getelementptr inbounds i32, i32* %3013, i64 %3005
  store i32 %3012, i32* %3014, align 4
  br label %3015

3015:                                             ; preds = %2999, %3011
  %3016 = phi i32 [ %3012, %3011 ], [ %3009, %2999 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3001, i8 zeroext 13, i32 %3016) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 85) #12
  br label %7785

3017:                                             ; preds = %2
  %3018 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3019 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3018, align 8
  %3020 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3021 = load i32, i32* %3020, align 4
  %3022 = and i32 %3021, 16777215
  %3023 = zext i32 %3022 to i64
  %3024 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3025 = load i32*, i32** %3024, align 8
  %3026 = getelementptr inbounds i32, i32* %3025, i64 %3023
  %3027 = load i32, i32* %3026, align 4
  %3028 = icmp eq i32 %3027, -1
  br i1 %3028, label %3029, label %3033

3029:                                             ; preds = %3017
  %3030 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3019) #12
  %3031 = load i32*, i32** %3024, align 8
  %3032 = getelementptr inbounds i32, i32* %3031, i64 %3023
  store i32 %3030, i32* %3032, align 4
  br label %3033

3033:                                             ; preds = %3017, %3029
  %3034 = phi i32 [ %3030, %3029 ], [ %3027, %3017 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3019, i8 zeroext 13, i32 %3034) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 86) #12
  br label %7785

3035:                                             ; preds = %2
  %3036 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3037 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3036, align 8
  %3038 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3039 = load i32, i32* %3038, align 4
  %3040 = and i32 %3039, 16777215
  %3041 = zext i32 %3040 to i64
  %3042 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3043 = load i32*, i32** %3042, align 8
  %3044 = getelementptr inbounds i32, i32* %3043, i64 %3041
  %3045 = load i32, i32* %3044, align 4
  %3046 = icmp eq i32 %3045, -1
  br i1 %3046, label %3047, label %3051

3047:                                             ; preds = %3035
  %3048 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3037) #12
  %3049 = load i32*, i32** %3042, align 8
  %3050 = getelementptr inbounds i32, i32* %3049, i64 %3041
  store i32 %3048, i32* %3050, align 4
  br label %3051

3051:                                             ; preds = %3035, %3047
  %3052 = phi i32 [ %3048, %3047 ], [ %3045, %3035 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3037, i8 zeroext 13, i32 %3052) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 87) #12
  br label %7785

3053:                                             ; preds = %2
  %3054 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3055 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3054, align 8
  %3056 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3057 = load i32, i32* %3056, align 4
  %3058 = and i32 %3057, 16777215
  %3059 = zext i32 %3058 to i64
  %3060 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3061 = load i32*, i32** %3060, align 8
  %3062 = getelementptr inbounds i32, i32* %3061, i64 %3059
  %3063 = load i32, i32* %3062, align 4
  %3064 = icmp eq i32 %3063, -1
  br i1 %3064, label %3065, label %3069

3065:                                             ; preds = %3053
  %3066 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3055) #12
  %3067 = load i32*, i32** %3060, align 8
  %3068 = getelementptr inbounds i32, i32* %3067, i64 %3059
  store i32 %3066, i32* %3068, align 4
  br label %3069

3069:                                             ; preds = %3053, %3065
  %3070 = phi i32 [ %3066, %3065 ], [ %3063, %3053 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3055, i8 zeroext 13, i32 %3070) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 88) #12
  br label %7785

3071:                                             ; preds = %2
  %3072 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3073 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3072, align 8
  %3074 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3075 = load i32, i32* %3074, align 4
  %3076 = and i32 %3075, 16777215
  %3077 = zext i32 %3076 to i64
  %3078 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3079 = load i32*, i32** %3078, align 8
  %3080 = getelementptr inbounds i32, i32* %3079, i64 %3077
  %3081 = load i32, i32* %3080, align 4
  %3082 = icmp eq i32 %3081, -1
  br i1 %3082, label %3083, label %3087

3083:                                             ; preds = %3071
  %3084 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3073) #12
  %3085 = load i32*, i32** %3078, align 8
  %3086 = getelementptr inbounds i32, i32* %3085, i64 %3077
  store i32 %3084, i32* %3086, align 4
  br label %3087

3087:                                             ; preds = %3071, %3083
  %3088 = phi i32 [ %3084, %3083 ], [ %3081, %3071 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3073, i8 zeroext 13, i32 %3088) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitFloat64Ieee754BinopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 89) #12
  br label %7785

3089:                                             ; preds = %2
  %3090 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3091 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3090, align 8
  %3092 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3093 = load i32, i32* %3092, align 4
  %3094 = and i32 %3093, 16777215
  %3095 = zext i32 %3094 to i64
  %3096 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3097 = load i32*, i32** %3096, align 8
  %3098 = getelementptr inbounds i32, i32* %3097, i64 %3095
  %3099 = load i32, i32* %3098, align 4
  %3100 = icmp eq i32 %3099, -1
  br i1 %3100, label %3101, label %3105

3101:                                             ; preds = %3089
  %3102 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3091) #12
  %3103 = load i32*, i32** %3096, align 8
  %3104 = getelementptr inbounds i32, i32* %3103, i64 %3095
  store i32 %3102, i32* %3104, align 4
  br label %3105

3105:                                             ; preds = %3089, %3101
  %3106 = phi i32 [ %3102, %3101 ], [ %3099, %3089 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3091, i8 zeroext 13, i32 %3106) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 90) #12
  br label %7785

3107:                                             ; preds = %2
  %3108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3109 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3108, align 8
  %3110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3111 = load i32, i32* %3110, align 4
  %3112 = and i32 %3111, 16777215
  %3113 = zext i32 %3112 to i64
  %3114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3115 = load i32*, i32** %3114, align 8
  %3116 = getelementptr inbounds i32, i32* %3115, i64 %3113
  %3117 = load i32, i32* %3116, align 4
  %3118 = icmp eq i32 %3117, -1
  br i1 %3118, label %3119, label %3123

3119:                                             ; preds = %3107
  %3120 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3109) #12
  %3121 = load i32*, i32** %3114, align 8
  %3122 = getelementptr inbounds i32, i32* %3121, i64 %3113
  store i32 %3120, i32* %3122, align 4
  br label %3123

3123:                                             ; preds = %3107, %3119
  %3124 = phi i32 [ %3120, %3119 ], [ %3117, %3107 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3109, i8 zeroext 13, i32 %3124) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 91) #12
  br label %7785

3125:                                             ; preds = %2
  %3126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3127 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3126, align 8
  %3128 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3129 = load i32, i32* %3128, align 4
  %3130 = and i32 %3129, 16777215
  %3131 = zext i32 %3130 to i64
  %3132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3133 = load i32*, i32** %3132, align 8
  %3134 = getelementptr inbounds i32, i32* %3133, i64 %3131
  %3135 = load i32, i32* %3134, align 4
  %3136 = icmp eq i32 %3135, -1
  br i1 %3136, label %3137, label %3141

3137:                                             ; preds = %3125
  %3138 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3127) #12
  %3139 = load i32*, i32** %3132, align 8
  %3140 = getelementptr inbounds i32, i32* %3139, i64 %3131
  store i32 %3138, i32* %3140, align 4
  br label %3141

3141:                                             ; preds = %3125, %3137
  %3142 = phi i32 [ %3138, %3137 ], [ %3135, %3125 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3127, i8 zeroext 13, i32 %3142) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3143:                                             ; preds = %2
  %3144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3145 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3144, align 8
  %3146 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3147 = load i32, i32* %3146, align 4
  %3148 = and i32 %3147, 16777215
  %3149 = zext i32 %3148 to i64
  %3150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3151 = load i32*, i32** %3150, align 8
  %3152 = getelementptr inbounds i32, i32* %3151, i64 %3149
  %3153 = load i32, i32* %3152, align 4
  %3154 = icmp eq i32 %3153, -1
  br i1 %3154, label %3155, label %3159

3155:                                             ; preds = %3143
  %3156 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3145) #12
  %3157 = load i32*, i32** %3150, align 8
  %3158 = getelementptr inbounds i32, i32* %3157, i64 %3149
  store i32 %3156, i32* %3158, align 4
  br label %3159

3159:                                             ; preds = %3143, %3155
  %3160 = phi i32 [ %3156, %3155 ], [ %3153, %3143 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3145, i8 zeroext 13, i32 %3160) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 92) #12
  br label %7785

3161:                                             ; preds = %2
  %3162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3163 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3162, align 8
  %3164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3165 = load i32, i32* %3164, align 4
  %3166 = and i32 %3165, 16777215
  %3167 = zext i32 %3166 to i64
  %3168 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3169 = load i32*, i32** %3168, align 8
  %3170 = getelementptr inbounds i32, i32* %3169, i64 %3167
  %3171 = load i32, i32* %3170, align 4
  %3172 = icmp eq i32 %3171, -1
  br i1 %3172, label %3173, label %3177

3173:                                             ; preds = %3161
  %3174 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3163) #12
  %3175 = load i32*, i32** %3168, align 8
  %3176 = getelementptr inbounds i32, i32* %3175, i64 %3167
  store i32 %3174, i32* %3176, align 4
  br label %3177

3177:                                             ; preds = %3161, %3173
  %3178 = phi i32 [ %3174, %3173 ], [ %3171, %3161 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3163, i8 zeroext 13, i32 %3178) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 93) #12
  br label %7785

3179:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3180:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitFloat64LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3181:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitFloat64LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3182:                                             ; preds = %2
  %3183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3184 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3183, align 8
  %3185 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3186 = load i32, i32* %3185, align 4
  %3187 = and i32 %3186, 16777215
  %3188 = zext i32 %3187 to i64
  %3189 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3190 = load i32*, i32** %3189, align 8
  %3191 = getelementptr inbounds i32, i32* %3190, i64 %3188
  %3192 = load i32, i32* %3191, align 4
  %3193 = icmp eq i32 %3192, -1
  br i1 %3193, label %3194, label %3198

3194:                                             ; preds = %3182
  %3195 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3184) #12
  %3196 = load i32*, i32** %3189, align 8
  %3197 = getelementptr inbounds i32, i32* %3196, i64 %3188
  store i32 %3195, i32* %3197, align 4
  br label %3198

3198:                                             ; preds = %3182, %3194
  %3199 = phi i32 [ %3195, %3194 ], [ %3192, %3182 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3184, i8 zeroext 13, i32 %3199) #12
  %3200 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3200) #12
  %3201 = load i32, i32* %3185, align 4
  %3202 = and i32 %3201, 251658240
  %3203 = icmp eq i32 %3202, 251658240
  %3204 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %3205 = add i64 %3204, 32
  br i1 %3203, label %3206, label %3210

3206:                                             ; preds = %3198
  %3207 = inttoptr i64 %3205 to i64*
  %3208 = load i64, i64* %3207, align 8
  %3209 = add i64 %3208, 16
  br label %3210

3210:                                             ; preds = %3206, %3198
  %3211 = phi i64 [ %3209, %3206 ], [ %3205, %3198 ]
  %3212 = inttoptr i64 %3211 to %"class.v8::internal::compiler::Node"**
  %3213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3212, i64 1
  %3214 = bitcast %"class.v8::internal::compiler::Node"** %3213 to <2 x i64>*
  %3215 = load <2 x i64>, <2 x i64>* %3214, align 8
  %3216 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %7, i64 0, i32 0
  store i32 7, i32* %3216, align 8, !alias.scope !286
  %3217 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %7, i64 0, i32 1
  store i32 1, i32* %3217, align 4, !alias.scope !286
  %3218 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %3218, align 8, !alias.scope !286
  %3219 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %7, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %3219, align 8, !alias.scope !286
  %3220 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %7, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3220, align 8, !alias.scope !286
  %3221 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %7, i64 0, i32 12
  %3222 = bitcast %"class.v8::internal::compiler::Node"** %3221 to <2 x i64>*
  store <2 x i64> %3215, <2 x i64>* %3222, align 8, !alias.scope !286
  br i1 %3203, label %3223, label %3227

3223:                                             ; preds = %3210
  %3224 = inttoptr i64 %3205 to i64*
  %3225 = load i64, i64* %3224, align 8
  %3226 = add i64 %3225, 16
  br label %3227

3227:                                             ; preds = %3210, %3223
  %3228 = phi i64 [ %3226, %3223 ], [ %3205, %3210 ]
  %3229 = inttoptr i64 %3228 to %"class.v8::internal::compiler::Node"**
  %3230 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3229, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %3230, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3200) #12
  br label %7785

3231:                                             ; preds = %2
  %3232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3233 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3232, align 8
  %3234 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3235 = load i32, i32* %3234, align 4
  %3236 = and i32 %3235, 16777215
  %3237 = zext i32 %3236 to i64
  %3238 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3239 = load i32*, i32** %3238, align 8
  %3240 = getelementptr inbounds i32, i32* %3239, i64 %3237
  %3241 = load i32, i32* %3240, align 4
  %3242 = icmp eq i32 %3241, -1
  br i1 %3242, label %3243, label %3247

3243:                                             ; preds = %3231
  %3244 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3233) #12
  %3245 = load i32*, i32** %3238, align 8
  %3246 = getelementptr inbounds i32, i32* %3245, i64 %3237
  store i32 %3244, i32* %3246, align 4
  br label %3247

3247:                                             ; preds = %3231, %3243
  %3248 = phi i32 [ %3244, %3243 ], [ %3241, %3231 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3233, i8 zeroext 12, i32 %3248) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitFloat32RoundDownEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3249:                                             ; preds = %2
  %3250 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3251 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3250, align 8
  %3252 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3253 = load i32, i32* %3252, align 4
  %3254 = and i32 %3253, 16777215
  %3255 = zext i32 %3254 to i64
  %3256 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3257 = load i32*, i32** %3256, align 8
  %3258 = getelementptr inbounds i32, i32* %3257, i64 %3255
  %3259 = load i32, i32* %3258, align 4
  %3260 = icmp eq i32 %3259, -1
  br i1 %3260, label %3261, label %3265

3261:                                             ; preds = %3249
  %3262 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3251) #12
  %3263 = load i32*, i32** %3256, align 8
  %3264 = getelementptr inbounds i32, i32* %3263, i64 %3255
  store i32 %3262, i32* %3264, align 4
  br label %3265

3265:                                             ; preds = %3249, %3261
  %3266 = phi i32 [ %3262, %3261 ], [ %3259, %3249 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3251, i8 zeroext 13, i32 %3266) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitFloat64RoundDownEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3267:                                             ; preds = %2
  %3268 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3269 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3268, align 8
  %3270 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3271 = load i32, i32* %3270, align 4
  %3272 = and i32 %3271, 16777215
  %3273 = zext i32 %3272 to i64
  %3274 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3275 = load i32*, i32** %3274, align 8
  %3276 = getelementptr inbounds i32, i32* %3275, i64 %3273
  %3277 = load i32, i32* %3276, align 4
  %3278 = icmp eq i32 %3277, -1
  br i1 %3278, label %3279, label %3283

3279:                                             ; preds = %3267
  %3280 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3269) #12
  %3281 = load i32*, i32** %3274, align 8
  %3282 = getelementptr inbounds i32, i32* %3281, i64 %3273
  store i32 %3280, i32* %3282, align 4
  br label %3283

3283:                                             ; preds = %3267, %3279
  %3284 = phi i32 [ %3280, %3279 ], [ %3277, %3267 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3269, i8 zeroext 12, i32 %3284) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitFloat32RoundUpEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3285:                                             ; preds = %2
  %3286 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3287 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3286, align 8
  %3288 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3289 = load i32, i32* %3288, align 4
  %3290 = and i32 %3289, 16777215
  %3291 = zext i32 %3290 to i64
  %3292 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3293 = load i32*, i32** %3292, align 8
  %3294 = getelementptr inbounds i32, i32* %3293, i64 %3291
  %3295 = load i32, i32* %3294, align 4
  %3296 = icmp eq i32 %3295, -1
  br i1 %3296, label %3297, label %3301

3297:                                             ; preds = %3285
  %3298 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3287) #12
  %3299 = load i32*, i32** %3292, align 8
  %3300 = getelementptr inbounds i32, i32* %3299, i64 %3291
  store i32 %3298, i32* %3300, align 4
  br label %3301

3301:                                             ; preds = %3285, %3297
  %3302 = phi i32 [ %3298, %3297 ], [ %3295, %3285 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3287, i8 zeroext 13, i32 %3302) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitFloat64RoundUpEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3303:                                             ; preds = %2
  %3304 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3305 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3304, align 8
  %3306 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3307 = load i32, i32* %3306, align 4
  %3308 = and i32 %3307, 16777215
  %3309 = zext i32 %3308 to i64
  %3310 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3311 = load i32*, i32** %3310, align 8
  %3312 = getelementptr inbounds i32, i32* %3311, i64 %3309
  %3313 = load i32, i32* %3312, align 4
  %3314 = icmp eq i32 %3313, -1
  br i1 %3314, label %3315, label %3319

3315:                                             ; preds = %3303
  %3316 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3305) #12
  %3317 = load i32*, i32** %3310, align 8
  %3318 = getelementptr inbounds i32, i32* %3317, i64 %3309
  store i32 %3316, i32* %3318, align 4
  br label %3319

3319:                                             ; preds = %3303, %3315
  %3320 = phi i32 [ %3316, %3315 ], [ %3313, %3303 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3305, i8 zeroext 12, i32 %3320) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat32RoundTruncateEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3321:                                             ; preds = %2
  %3322 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3323 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3322, align 8
  %3324 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3325 = load i32, i32* %3324, align 4
  %3326 = and i32 %3325, 16777215
  %3327 = zext i32 %3326 to i64
  %3328 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3329 = load i32*, i32** %3328, align 8
  %3330 = getelementptr inbounds i32, i32* %3329, i64 %3327
  %3331 = load i32, i32* %3330, align 4
  %3332 = icmp eq i32 %3331, -1
  br i1 %3332, label %3333, label %3337

3333:                                             ; preds = %3321
  %3334 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3323) #12
  %3335 = load i32*, i32** %3328, align 8
  %3336 = getelementptr inbounds i32, i32* %3335, i64 %3327
  store i32 %3334, i32* %3336, align 4
  br label %3337

3337:                                             ; preds = %3321, %3333
  %3338 = phi i32 [ %3334, %3333 ], [ %3331, %3321 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3323, i8 zeroext 13, i32 %3338) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat64RoundTruncateEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3339:                                             ; preds = %2
  %3340 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3341 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3340, align 8
  %3342 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3343 = load i32, i32* %3342, align 4
  %3344 = and i32 %3343, 16777215
  %3345 = zext i32 %3344 to i64
  %3346 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3347 = load i32*, i32** %3346, align 8
  %3348 = getelementptr inbounds i32, i32* %3347, i64 %3345
  %3349 = load i32, i32* %3348, align 4
  %3350 = icmp eq i32 %3349, -1
  br i1 %3350, label %3351, label %3355

3351:                                             ; preds = %3339
  %3352 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3341) #12
  %3353 = load i32*, i32** %3346, align 8
  %3354 = getelementptr inbounds i32, i32* %3353, i64 %3345
  store i32 %3352, i32* %3354, align 4
  br label %3355

3355:                                             ; preds = %3339, %3351
  %3356 = phi i32 [ %3352, %3351 ], [ %3349, %3339 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3341, i8 zeroext 13, i32 %3356) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat64RoundTiesAwayEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3357:                                             ; preds = %2
  %3358 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3359 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3358, align 8
  %3360 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3361 = load i32, i32* %3360, align 4
  %3362 = and i32 %3361, 16777215
  %3363 = zext i32 %3362 to i64
  %3364 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3365 = load i32*, i32** %3364, align 8
  %3366 = getelementptr inbounds i32, i32* %3365, i64 %3363
  %3367 = load i32, i32* %3366, align 4
  %3368 = icmp eq i32 %3367, -1
  br i1 %3368, label %3369, label %3373

3369:                                             ; preds = %3357
  %3370 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3359) #12
  %3371 = load i32*, i32** %3364, align 8
  %3372 = getelementptr inbounds i32, i32* %3371, i64 %3363
  store i32 %3370, i32* %3372, align 4
  br label %3373

3373:                                             ; preds = %3357, %3369
  %3374 = phi i32 [ %3370, %3369 ], [ %3367, %3357 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3359, i8 zeroext 12, i32 %3374) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat32RoundTiesEvenEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3375:                                             ; preds = %2
  %3376 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3377 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3376, align 8
  %3378 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3379 = load i32, i32* %3378, align 4
  %3380 = and i32 %3379, 16777215
  %3381 = zext i32 %3380 to i64
  %3382 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3383 = load i32*, i32** %3382, align 8
  %3384 = getelementptr inbounds i32, i32* %3383, i64 %3381
  %3385 = load i32, i32* %3384, align 4
  %3386 = icmp eq i32 %3385, -1
  br i1 %3386, label %3387, label %3391

3387:                                             ; preds = %3375
  %3388 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3377) #12
  %3389 = load i32*, i32** %3382, align 8
  %3390 = getelementptr inbounds i32, i32* %3389, i64 %3381
  store i32 %3388, i32* %3390, align 4
  br label %3391

3391:                                             ; preds = %3375, %3387
  %3392 = phi i32 [ %3388, %3387 ], [ %3385, %3375 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3377, i8 zeroext 13, i32 %3392) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat64RoundTiesEvenEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3393:                                             ; preds = %2
  %3394 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3395 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3394, align 8
  %3396 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3397 = load i32, i32* %3396, align 4
  %3398 = and i32 %3397, 16777215
  %3399 = zext i32 %3398 to i64
  %3400 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3401 = load i32*, i32** %3400, align 8
  %3402 = getelementptr inbounds i32, i32* %3401, i64 %3399
  %3403 = load i32, i32* %3402, align 4
  %3404 = icmp eq i32 %3403, -1
  br i1 %3404, label %3405, label %3409

3405:                                             ; preds = %3393
  %3406 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3395) #12
  %3407 = load i32*, i32** %3400, align 8
  %3408 = getelementptr inbounds i32, i32* %3407, i64 %3399
  store i32 %3406, i32* %3408, align 4
  br label %3409

3409:                                             ; preds = %3393, %3405
  %3410 = phi i32 [ %3406, %3405 ], [ %3403, %3393 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3395, i8 zeroext 4, i32 %3410) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitFloat64ExtractLowWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3411:                                             ; preds = %2
  %3412 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3413 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3412, align 8
  %3414 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3415 = load i32, i32* %3414, align 4
  %3416 = and i32 %3415, 16777215
  %3417 = zext i32 %3416 to i64
  %3418 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3419 = load i32*, i32** %3418, align 8
  %3420 = getelementptr inbounds i32, i32* %3419, i64 %3417
  %3421 = load i32, i32* %3420, align 4
  %3422 = icmp eq i32 %3421, -1
  br i1 %3422, label %3423, label %3427

3423:                                             ; preds = %3411
  %3424 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3413) #12
  %3425 = load i32*, i32** %3418, align 8
  %3426 = getelementptr inbounds i32, i32* %3425, i64 %3417
  store i32 %3424, i32* %3426, align 4
  br label %3427

3427:                                             ; preds = %3411, %3423
  %3428 = phi i32 [ %3424, %3423 ], [ %3421, %3411 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3413, i8 zeroext 4, i32 %3428) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector29VisitFloat64ExtractHighWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3429:                                             ; preds = %2
  %3430 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3431 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3430, align 8
  %3432 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3433 = load i32, i32* %3432, align 4
  %3434 = and i32 %3433, 16777215
  %3435 = zext i32 %3434 to i64
  %3436 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3437 = load i32*, i32** %3436, align 8
  %3438 = getelementptr inbounds i32, i32* %3437, i64 %3435
  %3439 = load i32, i32* %3438, align 4
  %3440 = icmp eq i32 %3439, -1
  br i1 %3440, label %3441, label %3445

3441:                                             ; preds = %3429
  %3442 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3431) #12
  %3443 = load i32*, i32** %3436, align 8
  %3444 = getelementptr inbounds i32, i32* %3443, i64 %3435
  store i32 %3442, i32* %3444, align 4
  br label %3445

3445:                                             ; preds = %3429, %3441
  %3446 = phi i32 [ %3442, %3441 ], [ %3439, %3429 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3431, i8 zeroext 13, i32 %3446) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitFloat64InsertLowWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3447:                                             ; preds = %2
  %3448 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3449 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3448, align 8
  %3450 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3451 = load i32, i32* %3450, align 4
  %3452 = and i32 %3451, 16777215
  %3453 = zext i32 %3452 to i64
  %3454 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3455 = load i32*, i32** %3454, align 8
  %3456 = getelementptr inbounds i32, i32* %3455, i64 %3453
  %3457 = load i32, i32* %3456, align 4
  %3458 = icmp eq i32 %3457, -1
  br i1 %3458, label %3459, label %3463

3459:                                             ; preds = %3447
  %3460 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3449) #12
  %3461 = load i32*, i32** %3454, align 8
  %3462 = getelementptr inbounds i32, i32* %3461, i64 %3453
  store i32 %3460, i32* %3462, align 4
  br label %3463

3463:                                             ; preds = %3447, %3459
  %3464 = phi i32 [ %3460, %3459 ], [ %3457, %3447 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3449, i8 zeroext 13, i32 %3464) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitFloat64InsertHighWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3465:                                             ; preds = %2
  %3466 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3467 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3466, align 8
  %3468 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3469 = load i32, i32* %3468, align 4
  %3470 = and i32 %3469, 16777215
  %3471 = zext i32 %3470 to i64
  %3472 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3473 = load i32*, i32** %3472, align 8
  %3474 = getelementptr inbounds i32, i32* %3473, i64 %3471
  %3475 = load i32, i32* %3474, align 4
  %3476 = icmp eq i32 %3475, -1
  br i1 %3476, label %3477, label %3481

3477:                                             ; preds = %3465
  %3478 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3467) #12
  %3479 = load i32*, i32** %3472, align 8
  %3480 = getelementptr inbounds i32, i32* %3479, i64 %3471
  store i32 %3478, i32* %3480, align 4
  br label %3481

3481:                                             ; preds = %3465, %3477
  %3482 = phi i32 [ %3478, %3477 ], [ %3475, %3465 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3467, i8 zeroext 9, i32 %3482) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3483:                                             ; preds = %2
  %3484 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3485 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3484, align 8
  %3486 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3487 = load i32, i32* %3486, align 4
  %3488 = and i32 %3487, 16777215
  %3489 = zext i32 %3488 to i64
  %3490 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3491 = load i32*, i32** %3490, align 8
  %3492 = getelementptr inbounds i32, i32* %3491, i64 %3489
  %3493 = load i32, i32* %3492, align 4
  %3494 = icmp eq i32 %3493, -1
  br i1 %3494, label %3495, label %3499

3495:                                             ; preds = %3483
  %3496 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3485) #12
  %3497 = load i32*, i32** %3490, align 8
  %3498 = getelementptr inbounds i32, i32* %3497, i64 %3489
  store i32 %3496, i32* %3498, align 4
  br label %3499

3499:                                             ; preds = %3483, %3495
  %3500 = phi i32 [ %3496, %3495 ], [ %3493, %3483 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3485, i8 zeroext 4, i32 %3500) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3501:                                             ; preds = %2
  %3502 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3503 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3502, align 8
  %3504 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3505 = load i32, i32* %3504, align 4
  %3506 = and i32 %3505, 16777215
  %3507 = zext i32 %3506 to i64
  %3508 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3509 = load i32*, i32** %3508, align 8
  %3510 = getelementptr inbounds i32, i32* %3509, i64 %3507
  %3511 = load i32, i32* %3510, align 4
  %3512 = icmp eq i32 %3511, -1
  br i1 %3512, label %3513, label %3517

3513:                                             ; preds = %3501
  %3514 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3503) #12
  %3515 = load i32*, i32** %3508, align 8
  %3516 = getelementptr inbounds i32, i32* %3515, i64 %3507
  store i32 %3514, i32* %3516, align 4
  br label %3517

3517:                                             ; preds = %3501, %3513
  %3518 = phi i32 [ %3514, %3513 ], [ %3511, %3501 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3503, i8 zeroext 5, i32 %3518) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3519:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitStackSlotEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3520:                                             ; preds = %2
  %3521 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3521) #12
  %3522 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 0
  store i32 5, i32* %3522, align 8, !alias.scope !289
  %3523 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 1
  store i32 9, i32* %3523, align 4, !alias.scope !289
  %3524 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %3524, align 8, !alias.scope !289
  %3525 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %3525, align 8, !alias.scope !289
  %3526 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3526, align 8, !alias.scope !289
  call void @_ZN2v88internal8compiler19InstructionSelector28VisitStackPointerGreaterThanEPNS1_4NodeEPNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3521) #12
  br label %7785

3527:                                             ; preds = %2
  %3528 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3529 = load i32, i32* %3528, align 4
  %3530 = and i32 %3529, 16777215
  %3531 = zext i32 %3530 to i64
  %3532 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3533 = load i32*, i32** %3532, align 8
  %3534 = getelementptr inbounds i32, i32* %3533, i64 %3531
  %3535 = load i32, i32* %3534, align 4
  %3536 = icmp eq i32 %3535, -1
  br i1 %3536, label %3537, label %3546

3537:                                             ; preds = %3527
  %3538 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3539 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3538, align 8
  %3540 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3539) #12
  %3541 = load i32*, i32** %3532, align 8
  %3542 = getelementptr inbounds i32, i32* %3541, i64 %3531
  store i32 %3540, i32* %3542, align 4
  %3543 = load i32, i32* %3528, align 4
  %3544 = and i32 %3543, 16777215
  %3545 = zext i32 %3544 to i64
  br label %3546

3546:                                             ; preds = %3527, %3537
  %3547 = phi i64 [ %3531, %3527 ], [ %3545, %3537 ]
  %3548 = phi i32 [ %3535, %3527 ], [ %3540, %3537 ]
  %3549 = zext i32 %3548 to i64
  %3550 = shl nuw nsw i64 %3549, 3
  %3551 = or i64 %3550, 927712935937
  %3552 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %3553 = load i64*, i64** %3552, align 8
  %3554 = lshr i64 %3547, 6
  %3555 = getelementptr inbounds i64, i64* %3553, i64 %3554
  %3556 = and i64 %3547, 63
  %3557 = shl i64 1, %3556
  %3558 = load i64, i64* %3555, align 8
  %3559 = or i64 %3558, %3557
  store i64 %3559, i64* %3555, align 8
  %3560 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3560) #12
  %3561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  store i64 %3551, i64* %3561, align 8
  %3562 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 29, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %5, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3560) #12
  br label %7785

3563:                                             ; preds = %2
  %3564 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3565 = load i32, i32* %3564, align 4
  %3566 = and i32 %3565, 16777215
  %3567 = zext i32 %3566 to i64
  %3568 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3569 = load i32*, i32** %3568, align 8
  %3570 = getelementptr inbounds i32, i32* %3569, i64 %3567
  %3571 = load i32, i32* %3570, align 4
  %3572 = icmp eq i32 %3571, -1
  br i1 %3572, label %3573, label %3582

3573:                                             ; preds = %3563
  %3574 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3575 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3574, align 8
  %3576 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3575) #12
  %3577 = load i32*, i32** %3568, align 8
  %3578 = getelementptr inbounds i32, i32* %3577, i64 %3567
  store i32 %3576, i32* %3578, align 4
  %3579 = load i32, i32* %3564, align 4
  %3580 = and i32 %3579, 16777215
  %3581 = zext i32 %3580 to i64
  br label %3582

3582:                                             ; preds = %3563, %3573
  %3583 = phi i64 [ %3567, %3563 ], [ %3581, %3573 ]
  %3584 = phi i32 [ %3571, %3563 ], [ %3576, %3573 ]
  %3585 = zext i32 %3584 to i64
  %3586 = shl nuw nsw i64 %3585, 3
  %3587 = or i64 %3586, 927712935937
  %3588 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %3589 = load i64*, i64** %3588, align 8
  %3590 = lshr i64 %3583, 6
  %3591 = getelementptr inbounds i64, i64* %3589, i64 %3590
  %3592 = and i64 %3583, 63
  %3593 = shl i64 1, %3592
  %3594 = load i64, i64* %3591, align 8
  %3595 = or i64 %3594, %3593
  store i64 %3595, i64* %3591, align 8
  %3596 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3596) #12
  %3597 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %3587, i64* %3597, align 8
  %3598 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 22, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3596) #12
  br label %7785

3599:                                             ; preds = %2
  %3600 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3601 = load i32, i32* %3600, align 4
  %3602 = and i32 %3601, 16777215
  %3603 = zext i32 %3602 to i64
  %3604 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3605 = load i32*, i32** %3604, align 8
  %3606 = getelementptr inbounds i32, i32* %3605, i64 %3603
  %3607 = load i32, i32* %3606, align 4
  %3608 = icmp eq i32 %3607, -1
  br i1 %3608, label %3609, label %3618

3609:                                             ; preds = %3599
  %3610 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3611 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3610, align 8
  %3612 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3611) #12
  %3613 = load i32*, i32** %3604, align 8
  %3614 = getelementptr inbounds i32, i32* %3613, i64 %3603
  store i32 %3612, i32* %3614, align 4
  %3615 = load i32, i32* %3600, align 4
  %3616 = and i32 %3615, 16777215
  %3617 = zext i32 %3616 to i64
  br label %3618

3618:                                             ; preds = %3599, %3609
  %3619 = phi i64 [ %3603, %3599 ], [ %3617, %3609 ]
  %3620 = phi i32 [ %3607, %3599 ], [ %3612, %3609 ]
  %3621 = zext i32 %3620 to i64
  %3622 = shl nuw nsw i64 %3621, 3
  %3623 = or i64 %3622, 927712935937
  %3624 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %3625 = load i64*, i64** %3624, align 8
  %3626 = lshr i64 %3619, 6
  %3627 = getelementptr inbounds i64, i64* %3625, i64 %3626
  %3628 = and i64 %3619, 63
  %3629 = shl i64 1, %3628
  %3630 = load i64, i64* %3627, align 8
  %3631 = or i64 %3630, %3629
  store i64 %3631, i64* %3627, align 8
  %3632 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3632) #12
  %3633 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %3623, i64* %3633, align 8
  %3634 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 23, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3632) #12
  br label %7785

3635:                                             ; preds = %2
  %3636 = tail call i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3637 = trunc i16 %3636 to i8
  %3638 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3639 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3638, align 8
  %3640 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3641 = load i32, i32* %3640, align 4
  %3642 = and i32 %3641, 16777215
  %3643 = zext i32 %3642 to i64
  %3644 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3645 = load i32*, i32** %3644, align 8
  %3646 = getelementptr inbounds i32, i32* %3645, i64 %3643
  %3647 = load i32, i32* %3646, align 4
  %3648 = icmp eq i32 %3647, -1
  br i1 %3648, label %3649, label %3653

3649:                                             ; preds = %3635
  %3650 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3639) #12
  %3651 = load i32*, i32** %3644, align 8
  %3652 = getelementptr inbounds i32, i32* %3651, i64 %3643
  store i32 %3650, i32* %3652, align 4
  br label %3653

3653:                                             ; preds = %3635, %3649
  %3654 = phi i32 [ %3650, %3649 ], [ %3647, %3635 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3639, i8 zeroext %3637, i32 %3654) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitUnalignedLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3655:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitUnalignedStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3656:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3657:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3658:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3659:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3660:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3661:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3662:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitMemoryBarrierEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3663:                                             ; preds = %2
  %3664 = tail call i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3665 = trunc i16 %3664 to i8
  %3666 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3667 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3666, align 8
  %3668 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3669 = load i32, i32* %3668, align 4
  %3670 = and i32 %3669, 16777215
  %3671 = zext i32 %3670 to i64
  %3672 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3673 = load i32*, i32** %3672, align 8
  %3674 = getelementptr inbounds i32, i32* %3673, i64 %3671
  %3675 = load i32, i32* %3674, align 4
  %3676 = icmp eq i32 %3675, -1
  br i1 %3676, label %3677, label %3681

3677:                                             ; preds = %3663
  %3678 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3667) #12
  %3679 = load i32*, i32** %3672, align 8
  %3680 = getelementptr inbounds i32, i32* %3679, i64 %3671
  store i32 %3678, i32* %3680, align 4
  br label %3681

3681:                                             ; preds = %3663, %3677
  %3682 = phi i32 [ %3678, %3677 ], [ %3675, %3663 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3667, i8 zeroext %3665, i32 %3682) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitWord32AtomicLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3683:                                             ; preds = %2
  %3684 = tail call i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3685 = trunc i16 %3684 to i8
  %3686 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3687 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3686, align 8
  %3688 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3689 = load i32, i32* %3688, align 4
  %3690 = and i32 %3689, 16777215
  %3691 = zext i32 %3690 to i64
  %3692 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3693 = load i32*, i32** %3692, align 8
  %3694 = getelementptr inbounds i32, i32* %3693, i64 %3691
  %3695 = load i32, i32* %3694, align 4
  %3696 = icmp eq i32 %3695, -1
  br i1 %3696, label %3697, label %3701

3697:                                             ; preds = %3683
  %3698 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3687) #12
  %3699 = load i32*, i32** %3692, align 8
  %3700 = getelementptr inbounds i32, i32* %3699, i64 %3691
  store i32 %3698, i32* %3700, align 4
  br label %3701

3701:                                             ; preds = %3683, %3697
  %3702 = phi i32 [ %3698, %3697 ], [ %3695, %3683 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3687, i8 zeroext %3685, i32 %3702) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitWord64AtomicLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3703:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitWord32AtomicStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3704:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitWord64AtomicStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3705:                                             ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3706:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3707:                                             ; preds = %2
  %3708 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3709 = trunc i16 %3708 to i8
  %3710 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3711 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3710, align 8
  %3712 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3713 = load i32, i32* %3712, align 4
  %3714 = and i32 %3713, 16777215
  %3715 = zext i32 %3714 to i64
  %3716 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3717 = load i32*, i32** %3716, align 8
  %3718 = getelementptr inbounds i32, i32* %3717, i64 %3715
  %3719 = load i32, i32* %3718, align 4
  %3720 = icmp eq i32 %3719, -1
  br i1 %3720, label %3721, label %3725

3721:                                             ; preds = %3707
  %3722 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3711) #12
  %3723 = load i32*, i32** %3716, align 8
  %3724 = getelementptr inbounds i32, i32* %3723, i64 %3715
  store i32 %3722, i32* %3724, align 4
  br label %3725

3725:                                             ; preds = %3707, %3721
  %3726 = phi i32 [ %3722, %3721 ], [ %3719, %3707 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3711, i8 zeroext %3709, i32 %3726) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3727:                                             ; preds = %2
  %3728 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3729 = trunc i16 %3728 to i8
  %3730 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3731 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3730, align 8
  %3732 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3733 = load i32, i32* %3732, align 4
  %3734 = and i32 %3733, 16777215
  %3735 = zext i32 %3734 to i64
  %3736 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3737 = load i32*, i32** %3736, align 8
  %3738 = getelementptr inbounds i32, i32* %3737, i64 %3735
  %3739 = load i32, i32* %3738, align 4
  %3740 = icmp eq i32 %3739, -1
  br i1 %3740, label %3741, label %3745

3741:                                             ; preds = %3727
  %3742 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3731) #12
  %3743 = load i32*, i32** %3736, align 8
  %3744 = getelementptr inbounds i32, i32* %3743, i64 %3735
  store i32 %3742, i32* %3744, align 4
  br label %3745

3745:                                             ; preds = %3727, %3741
  %3746 = phi i32 [ %3742, %3741 ], [ %3739, %3727 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3731, i8 zeroext %3729, i32 %3746) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3747:                                             ; preds = %2
  %3748 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3749 = trunc i16 %3748 to i8
  %3750 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3751 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3750, align 8
  %3752 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3753 = load i32, i32* %3752, align 4
  %3754 = and i32 %3753, 16777215
  %3755 = zext i32 %3754 to i64
  %3756 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3757 = load i32*, i32** %3756, align 8
  %3758 = getelementptr inbounds i32, i32* %3757, i64 %3755
  %3759 = load i32, i32* %3758, align 4
  %3760 = icmp eq i32 %3759, -1
  br i1 %3760, label %3761, label %3765

3761:                                             ; preds = %3747
  %3762 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3751) #12
  %3763 = load i32*, i32** %3756, align 8
  %3764 = getelementptr inbounds i32, i32* %3763, i64 %3755
  store i32 %3762, i32* %3764, align 4
  br label %3765

3765:                                             ; preds = %3747, %3761
  %3766 = phi i32 [ %3762, %3761 ], [ %3759, %3747 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3751, i8 zeroext %3749, i32 %3766) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicSubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3767:                                             ; preds = %2
  %3768 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3769 = trunc i16 %3768 to i8
  %3770 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3771 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3770, align 8
  %3772 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3773 = load i32, i32* %3772, align 4
  %3774 = and i32 %3773, 16777215
  %3775 = zext i32 %3774 to i64
  %3776 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3777 = load i32*, i32** %3776, align 8
  %3778 = getelementptr inbounds i32, i32* %3777, i64 %3775
  %3779 = load i32, i32* %3778, align 4
  %3780 = icmp eq i32 %3779, -1
  br i1 %3780, label %3781, label %3785

3781:                                             ; preds = %3767
  %3782 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3771) #12
  %3783 = load i32*, i32** %3776, align 8
  %3784 = getelementptr inbounds i32, i32* %3783, i64 %3775
  store i32 %3782, i32* %3784, align 4
  br label %3785

3785:                                             ; preds = %3767, %3781
  %3786 = phi i32 [ %3782, %3781 ], [ %3779, %3767 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3771, i8 zeroext %3769, i32 %3786) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicSubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3787:                                             ; preds = %2
  %3788 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3789 = trunc i16 %3788 to i8
  %3790 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3791 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3790, align 8
  %3792 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3793 = load i32, i32* %3792, align 4
  %3794 = and i32 %3793, 16777215
  %3795 = zext i32 %3794 to i64
  %3796 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3797 = load i32*, i32** %3796, align 8
  %3798 = getelementptr inbounds i32, i32* %3797, i64 %3795
  %3799 = load i32, i32* %3798, align 4
  %3800 = icmp eq i32 %3799, -1
  br i1 %3800, label %3801, label %3805

3801:                                             ; preds = %3787
  %3802 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3791) #12
  %3803 = load i32*, i32** %3796, align 8
  %3804 = getelementptr inbounds i32, i32* %3803, i64 %3795
  store i32 %3802, i32* %3804, align 4
  br label %3805

3805:                                             ; preds = %3787, %3801
  %3806 = phi i32 [ %3802, %3801 ], [ %3799, %3787 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3791, i8 zeroext %3789, i32 %3806) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicAndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3807:                                             ; preds = %2
  %3808 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3809 = trunc i16 %3808 to i8
  %3810 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3811 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3810, align 8
  %3812 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3813 = load i32, i32* %3812, align 4
  %3814 = and i32 %3813, 16777215
  %3815 = zext i32 %3814 to i64
  %3816 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3817 = load i32*, i32** %3816, align 8
  %3818 = getelementptr inbounds i32, i32* %3817, i64 %3815
  %3819 = load i32, i32* %3818, align 4
  %3820 = icmp eq i32 %3819, -1
  br i1 %3820, label %3821, label %3825

3821:                                             ; preds = %3807
  %3822 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3811) #12
  %3823 = load i32*, i32** %3816, align 8
  %3824 = getelementptr inbounds i32, i32* %3823, i64 %3815
  store i32 %3822, i32* %3824, align 4
  br label %3825

3825:                                             ; preds = %3807, %3821
  %3826 = phi i32 [ %3822, %3821 ], [ %3819, %3807 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3811, i8 zeroext %3809, i32 %3826) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicAndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3827:                                             ; preds = %2
  %3828 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3829 = trunc i16 %3828 to i8
  %3830 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3831 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3830, align 8
  %3832 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3833 = load i32, i32* %3832, align 4
  %3834 = and i32 %3833, 16777215
  %3835 = zext i32 %3834 to i64
  %3836 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3837 = load i32*, i32** %3836, align 8
  %3838 = getelementptr inbounds i32, i32* %3837, i64 %3835
  %3839 = load i32, i32* %3838, align 4
  %3840 = icmp eq i32 %3839, -1
  br i1 %3840, label %3841, label %3845

3841:                                             ; preds = %3827
  %3842 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3831) #12
  %3843 = load i32*, i32** %3836, align 8
  %3844 = getelementptr inbounds i32, i32* %3843, i64 %3835
  store i32 %3842, i32* %3844, align 4
  br label %3845

3845:                                             ; preds = %3827, %3841
  %3846 = phi i32 [ %3842, %3841 ], [ %3839, %3827 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3831, i8 zeroext %3829, i32 %3846) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitWord32AtomicOrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3847:                                             ; preds = %2
  %3848 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3849 = trunc i16 %3848 to i8
  %3850 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3851 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3850, align 8
  %3852 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3853 = load i32, i32* %3852, align 4
  %3854 = and i32 %3853, 16777215
  %3855 = zext i32 %3854 to i64
  %3856 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3857 = load i32*, i32** %3856, align 8
  %3858 = getelementptr inbounds i32, i32* %3857, i64 %3855
  %3859 = load i32, i32* %3858, align 4
  %3860 = icmp eq i32 %3859, -1
  br i1 %3860, label %3861, label %3865

3861:                                             ; preds = %3847
  %3862 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3851) #12
  %3863 = load i32*, i32** %3856, align 8
  %3864 = getelementptr inbounds i32, i32* %3863, i64 %3855
  store i32 %3862, i32* %3864, align 4
  br label %3865

3865:                                             ; preds = %3847, %3861
  %3866 = phi i32 [ %3862, %3861 ], [ %3859, %3847 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3851, i8 zeroext %3849, i32 %3866) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitWord64AtomicOrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3867:                                             ; preds = %2
  %3868 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3869 = trunc i16 %3868 to i8
  %3870 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3871 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3870, align 8
  %3872 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3873 = load i32, i32* %3872, align 4
  %3874 = and i32 %3873, 16777215
  %3875 = zext i32 %3874 to i64
  %3876 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3877 = load i32*, i32** %3876, align 8
  %3878 = getelementptr inbounds i32, i32* %3877, i64 %3875
  %3879 = load i32, i32* %3878, align 4
  %3880 = icmp eq i32 %3879, -1
  br i1 %3880, label %3881, label %3885

3881:                                             ; preds = %3867
  %3882 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3871) #12
  %3883 = load i32*, i32** %3876, align 8
  %3884 = getelementptr inbounds i32, i32* %3883, i64 %3875
  store i32 %3882, i32* %3884, align 4
  br label %3885

3885:                                             ; preds = %3867, %3881
  %3886 = phi i32 [ %3882, %3881 ], [ %3879, %3867 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3871, i8 zeroext %3869, i32 %3886) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicXorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3887:                                             ; preds = %2
  %3888 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3889 = trunc i16 %3888 to i8
  %3890 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3891 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3890, align 8
  %3892 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3893 = load i32, i32* %3892, align 4
  %3894 = and i32 %3893, 16777215
  %3895 = zext i32 %3894 to i64
  %3896 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3897 = load i32*, i32** %3896, align 8
  %3898 = getelementptr inbounds i32, i32* %3897, i64 %3895
  %3899 = load i32, i32* %3898, align 4
  %3900 = icmp eq i32 %3899, -1
  br i1 %3900, label %3901, label %3905

3901:                                             ; preds = %3887
  %3902 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3891) #12
  %3903 = load i32*, i32** %3896, align 8
  %3904 = getelementptr inbounds i32, i32* %3903, i64 %3895
  store i32 %3902, i32* %3904, align 4
  br label %3905

3905:                                             ; preds = %3887, %3901
  %3906 = phi i32 [ %3902, %3901 ], [ %3899, %3887 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3891, i8 zeroext %3889, i32 %3906) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicXorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3907:                                             ; preds = %2
  %3908 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3909 = trunc i16 %3908 to i8
  %3910 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3911 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3910, align 8
  %3912 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3913 = load i32, i32* %3912, align 4
  %3914 = and i32 %3913, 16777215
  %3915 = zext i32 %3914 to i64
  %3916 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3917 = load i32*, i32** %3916, align 8
  %3918 = getelementptr inbounds i32, i32* %3917, i64 %3915
  %3919 = load i32, i32* %3918, align 4
  %3920 = icmp eq i32 %3919, -1
  br i1 %3920, label %3921, label %3925

3921:                                             ; preds = %3907
  %3922 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3911) #12
  %3923 = load i32*, i32** %3916, align 8
  %3924 = getelementptr inbounds i32, i32* %3923, i64 %3915
  store i32 %3922, i32* %3924, align 4
  br label %3925

3925:                                             ; preds = %3907, %3921
  %3926 = phi i32 [ %3922, %3921 ], [ %3919, %3907 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3911, i8 zeroext %3909, i32 %3926) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitWord32AtomicExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3927:                                             ; preds = %2
  %3928 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3929 = trunc i16 %3928 to i8
  %3930 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3931 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3930, align 8
  %3932 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3933 = load i32, i32* %3932, align 4
  %3934 = and i32 %3933, 16777215
  %3935 = zext i32 %3934 to i64
  %3936 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3937 = load i32*, i32** %3936, align 8
  %3938 = getelementptr inbounds i32, i32* %3937, i64 %3935
  %3939 = load i32, i32* %3938, align 4
  %3940 = icmp eq i32 %3939, -1
  br i1 %3940, label %3941, label %3945

3941:                                             ; preds = %3927
  %3942 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3931) #12
  %3943 = load i32*, i32** %3936, align 8
  %3944 = getelementptr inbounds i32, i32* %3943, i64 %3935
  store i32 %3942, i32* %3944, align 4
  br label %3945

3945:                                             ; preds = %3927, %3941
  %3946 = phi i32 [ %3942, %3941 ], [ %3939, %3927 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3931, i8 zeroext %3929, i32 %3946) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitWord64AtomicExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3947:                                             ; preds = %2
  %3948 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3949 = trunc i16 %3948 to i8
  %3950 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3951 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3950, align 8
  %3952 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3953 = load i32, i32* %3952, align 4
  %3954 = and i32 %3953, 16777215
  %3955 = zext i32 %3954 to i64
  %3956 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3957 = load i32*, i32** %3956, align 8
  %3958 = getelementptr inbounds i32, i32* %3957, i64 %3955
  %3959 = load i32, i32* %3958, align 4
  %3960 = icmp eq i32 %3959, -1
  br i1 %3960, label %3961, label %3965

3961:                                             ; preds = %3947
  %3962 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3951) #12
  %3963 = load i32*, i32** %3956, align 8
  %3964 = getelementptr inbounds i32, i32* %3963, i64 %3955
  store i32 %3962, i32* %3964, align 4
  br label %3965

3965:                                             ; preds = %3947, %3961
  %3966 = phi i32 [ %3962, %3961 ], [ %3959, %3947 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3951, i8 zeroext %3949, i32 %3966) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector32VisitWord32AtomicCompareExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3967:                                             ; preds = %2
  %3968 = tail call i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3969 = trunc i16 %3968 to i8
  %3970 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3971 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3970, align 8
  %3972 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %3973 = load i32, i32* %3972, align 4
  %3974 = and i32 %3973, 16777215
  %3975 = zext i32 %3974 to i64
  %3976 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3977 = load i32*, i32** %3976, align 8
  %3978 = getelementptr inbounds i32, i32* %3977, i64 %3975
  %3979 = load i32, i32* %3978, align 4
  %3980 = icmp eq i32 %3979, -1
  br i1 %3980, label %3981, label %3985

3981:                                             ; preds = %3967
  %3982 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3971) #12
  %3983 = load i32*, i32** %3976, align 8
  %3984 = getelementptr inbounds i32, i32* %3983, i64 %3975
  store i32 %3982, i32* %3984, align 4
  br label %3985

3985:                                             ; preds = %3967, %3981
  %3986 = phi i32 [ %3982, %3981 ], [ %3979, %3967 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3971, i8 zeroext %3969, i32 %3986) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector32VisitWord64AtomicCompareExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

3987:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3988:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3989:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3990:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3991:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3992:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3993:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

3994:                                             ; preds = %2
  %3995 = tail call i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #12
  %3996 = trunc i16 %3995 to i8
  %3997 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %3998 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3997, align 8
  %3999 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4000 = load i32, i32* %3999, align 4
  %4001 = and i32 %4000, 16777215
  %4002 = zext i32 %4001 to i64
  %4003 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4004 = load i32*, i32** %4003, align 8
  %4005 = getelementptr inbounds i32, i32* %4004, i64 %4002
  %4006 = load i32, i32* %4005, align 4
  %4007 = icmp eq i32 %4006, -1
  br i1 %4007, label %4008, label %4012

4008:                                             ; preds = %3994
  %4009 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %3998) #12
  %4010 = load i32*, i32** %4003, align 8
  %4011 = getelementptr inbounds i32, i32* %4010, i64 %4002
  store i32 %4009, i32* %4011, align 4
  br label %4012

4012:                                             ; preds = %3994, %4008
  %4013 = phi i32 [ %4009, %4008 ], [ %4006, %3994 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %3998, i8 zeroext %3996, i32 %4013) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector18VisitProtectedLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4014:                                             ; preds = %2
  %4015 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4016 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4015, align 8
  %4017 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4018 = load i32, i32* %4017, align 4
  %4019 = and i32 %4018, 16777215
  %4020 = zext i32 %4019 to i64
  %4021 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4022 = load i32*, i32** %4021, align 8
  %4023 = getelementptr inbounds i32, i32* %4022, i64 %4020
  %4024 = load i32, i32* %4023, align 4
  %4025 = icmp eq i32 %4024, -1
  br i1 %4025, label %4026, label %4030

4026:                                             ; preds = %4014
  %4027 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4016) #12
  %4028 = load i32*, i32** %4021, align 8
  %4029 = getelementptr inbounds i32, i32* %4028, i64 %4020
  store i32 %4027, i32* %4029, align 4
  br label %4030

4030:                                             ; preds = %4014, %4026
  %4031 = phi i32 [ %4027, %4026 ], [ %4024, %4014 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4016, i8 zeroext 4, i32 %4031) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitSignExtendWord8ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4032:                                             ; preds = %2
  %4033 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4034 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4033, align 8
  %4035 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4036 = load i32, i32* %4035, align 4
  %4037 = and i32 %4036, 16777215
  %4038 = zext i32 %4037 to i64
  %4039 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4040 = load i32*, i32** %4039, align 8
  %4041 = getelementptr inbounds i32, i32* %4040, i64 %4038
  %4042 = load i32, i32* %4041, align 4
  %4043 = icmp eq i32 %4042, -1
  br i1 %4043, label %4044, label %4048

4044:                                             ; preds = %4032
  %4045 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4034) #12
  %4046 = load i32*, i32** %4039, align 8
  %4047 = getelementptr inbounds i32, i32* %4046, i64 %4038
  store i32 %4045, i32* %4047, align 4
  br label %4048

4048:                                             ; preds = %4032, %4044
  %4049 = phi i32 [ %4045, %4044 ], [ %4042, %4032 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4034, i8 zeroext 4, i32 %4049) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitSignExtendWord16ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4050:                                             ; preds = %2
  %4051 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4052 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4051, align 8
  %4053 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4054 = load i32, i32* %4053, align 4
  %4055 = and i32 %4054, 16777215
  %4056 = zext i32 %4055 to i64
  %4057 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4058 = load i32*, i32** %4057, align 8
  %4059 = getelementptr inbounds i32, i32* %4058, i64 %4056
  %4060 = load i32, i32* %4059, align 4
  %4061 = icmp eq i32 %4060, -1
  br i1 %4061, label %4062, label %4066

4062:                                             ; preds = %4050
  %4063 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4052) #12
  %4064 = load i32*, i32** %4057, align 8
  %4065 = getelementptr inbounds i32, i32* %4064, i64 %4056
  store i32 %4063, i32* %4065, align 4
  br label %4066

4066:                                             ; preds = %4050, %4062
  %4067 = phi i32 [ %4063, %4062 ], [ %4060, %4050 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4052, i8 zeroext 5, i32 %4067) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitSignExtendWord8ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4068:                                             ; preds = %2
  %4069 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4070 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4069, align 8
  %4071 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4072 = load i32, i32* %4071, align 4
  %4073 = and i32 %4072, 16777215
  %4074 = zext i32 %4073 to i64
  %4075 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4076 = load i32*, i32** %4075, align 8
  %4077 = getelementptr inbounds i32, i32* %4076, i64 %4074
  %4078 = load i32, i32* %4077, align 4
  %4079 = icmp eq i32 %4078, -1
  br i1 %4079, label %4080, label %4084

4080:                                             ; preds = %4068
  %4081 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4070) #12
  %4082 = load i32*, i32** %4075, align 8
  %4083 = getelementptr inbounds i32, i32* %4082, i64 %4074
  store i32 %4081, i32* %4083, align 4
  br label %4084

4084:                                             ; preds = %4068, %4080
  %4085 = phi i32 [ %4081, %4080 ], [ %4078, %4068 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4070, i8 zeroext 5, i32 %4085) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitSignExtendWord16ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4086:                                             ; preds = %2
  %4087 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4088 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4087, align 8
  %4089 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4090 = load i32, i32* %4089, align 4
  %4091 = and i32 %4090, 16777215
  %4092 = zext i32 %4091 to i64
  %4093 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4094 = load i32*, i32** %4093, align 8
  %4095 = getelementptr inbounds i32, i32* %4094, i64 %4092
  %4096 = load i32, i32* %4095, align 4
  %4097 = icmp eq i32 %4096, -1
  br i1 %4097, label %4098, label %4102

4098:                                             ; preds = %4086
  %4099 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4088) #12
  %4100 = load i32*, i32** %4093, align 8
  %4101 = getelementptr inbounds i32, i32* %4100, i64 %4092
  store i32 %4099, i32* %4101, align 4
  br label %4102

4102:                                             ; preds = %4086, %4098
  %4103 = phi i32 [ %4099, %4098 ], [ %4096, %4086 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4088, i8 zeroext 5, i32 %4103) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitSignExtendWord32ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4104:                                             ; preds = %2
  %4105 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4106 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4105, align 8
  %4107 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4108 = load i32, i32* %4107, align 4
  %4109 = and i32 %4108, 16777215
  %4110 = zext i32 %4109 to i64
  %4111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4112 = load i32*, i32** %4111, align 8
  %4113 = getelementptr inbounds i32, i32* %4112, i64 %4110
  %4114 = load i32, i32* %4113, align 4
  %4115 = icmp eq i32 %4114, -1
  br i1 %4115, label %4116, label %4120

4116:                                             ; preds = %4104
  %4117 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4106) #12
  %4118 = load i32*, i32** %4111, align 8
  %4119 = getelementptr inbounds i32, i32* %4118, i64 %4110
  store i32 %4117, i32* %4119, align 4
  br label %4120

4120:                                             ; preds = %4104, %4116
  %4121 = phi i32 [ %4117, %4116 ], [ %4114, %4104 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4106, i8 zeroext 5, i32 %4121) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4122:                                             ; preds = %2
  %4123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4124 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4123, align 8
  %4125 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4126 = load i32, i32* %4125, align 4
  %4127 = and i32 %4126, 16777215
  %4128 = zext i32 %4127 to i64
  %4129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4130 = load i32*, i32** %4129, align 8
  %4131 = getelementptr inbounds i32, i32* %4130, i64 %4128
  %4132 = load i32, i32* %4131, align 4
  %4133 = icmp eq i32 %4132, -1
  br i1 %4133, label %4134, label %4138

4134:                                             ; preds = %4122
  %4135 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4124) #12
  %4136 = load i32*, i32** %4129, align 8
  %4137 = getelementptr inbounds i32, i32* %4136, i64 %4128
  store i32 %4135, i32* %4137, align 4
  br label %4138

4138:                                             ; preds = %4122, %4134
  %4139 = phi i32 [ %4135, %4134 ], [ %4132, %4122 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4124, i8 zeroext 14, i32 %4139) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitF64x2SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4140:                                             ; preds = %2
  %4141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4142 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4141, align 8
  %4143 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4144 = load i32, i32* %4143, align 4
  %4145 = and i32 %4144, 16777215
  %4146 = zext i32 %4145 to i64
  %4147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4148 = load i32*, i32** %4147, align 8
  %4149 = getelementptr inbounds i32, i32* %4148, i64 %4146
  %4150 = load i32, i32* %4149, align 4
  %4151 = icmp eq i32 %4150, -1
  br i1 %4151, label %4152, label %4156

4152:                                             ; preds = %4140
  %4153 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4142) #12
  %4154 = load i32*, i32** %4147, align 8
  %4155 = getelementptr inbounds i32, i32* %4154, i64 %4146
  store i32 %4153, i32* %4155, align 4
  br label %4156

4156:                                             ; preds = %4140, %4152
  %4157 = phi i32 [ %4153, %4152 ], [ %4150, %4140 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4142, i8 zeroext 13, i32 %4157) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitF64x2ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4158:                                             ; preds = %2
  %4159 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4160 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4159, align 8
  %4161 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4162 = load i32, i32* %4161, align 4
  %4163 = and i32 %4162, 16777215
  %4164 = zext i32 %4163 to i64
  %4165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4166 = load i32*, i32** %4165, align 8
  %4167 = getelementptr inbounds i32, i32* %4166, i64 %4164
  %4168 = load i32, i32* %4167, align 4
  %4169 = icmp eq i32 %4168, -1
  br i1 %4169, label %4170, label %4174

4170:                                             ; preds = %4158
  %4171 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4160) #12
  %4172 = load i32*, i32** %4165, align 8
  %4173 = getelementptr inbounds i32, i32* %4172, i64 %4164
  store i32 %4171, i32* %4173, align 4
  br label %4174

4174:                                             ; preds = %4158, %4170
  %4175 = phi i32 [ %4171, %4170 ], [ %4168, %4158 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4160, i8 zeroext 14, i32 %4175) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitF64x2ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4176:                                             ; preds = %2
  %4177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4178 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4177, align 8
  %4179 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4180 = load i32, i32* %4179, align 4
  %4181 = and i32 %4180, 16777215
  %4182 = zext i32 %4181 to i64
  %4183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4184 = load i32*, i32** %4183, align 8
  %4185 = getelementptr inbounds i32, i32* %4184, i64 %4182
  %4186 = load i32, i32* %4185, align 4
  %4187 = icmp eq i32 %4186, -1
  br i1 %4187, label %4188, label %4192

4188:                                             ; preds = %4176
  %4189 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4178) #12
  %4190 = load i32*, i32** %4183, align 8
  %4191 = getelementptr inbounds i32, i32* %4190, i64 %4182
  store i32 %4189, i32* %4191, align 4
  br label %4192

4192:                                             ; preds = %4176, %4188
  %4193 = phi i32 [ %4189, %4188 ], [ %4186, %4176 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4178, i8 zeroext 14, i32 %4193) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4194:                                             ; preds = %2
  %4195 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4196 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4195, align 8
  %4197 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4198 = load i32, i32* %4197, align 4
  %4199 = and i32 %4198, 16777215
  %4200 = zext i32 %4199 to i64
  %4201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4202 = load i32*, i32** %4201, align 8
  %4203 = getelementptr inbounds i32, i32* %4202, i64 %4200
  %4204 = load i32, i32* %4203, align 4
  %4205 = icmp eq i32 %4204, -1
  br i1 %4205, label %4206, label %4210

4206:                                             ; preds = %4194
  %4207 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4196) #12
  %4208 = load i32*, i32** %4201, align 8
  %4209 = getelementptr inbounds i32, i32* %4208, i64 %4200
  store i32 %4207, i32* %4209, align 4
  br label %4210

4210:                                             ; preds = %4194, %4206
  %4211 = phi i32 [ %4207, %4206 ], [ %4204, %4194 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4196, i8 zeroext 14, i32 %4211) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4212:                                             ; preds = %2
  %4213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4214 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4213, align 8
  %4215 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4216 = load i32, i32* %4215, align 4
  %4217 = and i32 %4216, 16777215
  %4218 = zext i32 %4217 to i64
  %4219 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4220 = load i32*, i32** %4219, align 8
  %4221 = getelementptr inbounds i32, i32* %4220, i64 %4218
  %4222 = load i32, i32* %4221, align 4
  %4223 = icmp eq i32 %4222, -1
  br i1 %4223, label %4224, label %4228

4224:                                             ; preds = %4212
  %4225 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4214) #12
  %4226 = load i32*, i32** %4219, align 8
  %4227 = getelementptr inbounds i32, i32* %4226, i64 %4218
  store i32 %4225, i32* %4227, align 4
  br label %4228

4228:                                             ; preds = %4212, %4224
  %4229 = phi i32 [ %4225, %4224 ], [ %4222, %4212 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4214, i8 zeroext 14, i32 %4229) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4230:                                             ; preds = %2
  %4231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4232 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4231, align 8
  %4233 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4234 = load i32, i32* %4233, align 4
  %4235 = and i32 %4234, 16777215
  %4236 = zext i32 %4235 to i64
  %4237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4238 = load i32*, i32** %4237, align 8
  %4239 = getelementptr inbounds i32, i32* %4238, i64 %4236
  %4240 = load i32, i32* %4239, align 4
  %4241 = icmp eq i32 %4240, -1
  br i1 %4241, label %4242, label %4246

4242:                                             ; preds = %4230
  %4243 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4232) #12
  %4244 = load i32*, i32** %4237, align 8
  %4245 = getelementptr inbounds i32, i32* %4244, i64 %4236
  store i32 %4243, i32* %4245, align 4
  br label %4246

4246:                                             ; preds = %4230, %4242
  %4247 = phi i32 [ %4243, %4242 ], [ %4240, %4230 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4232, i8 zeroext 14, i32 %4247) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4248:                                             ; preds = %2
  %4249 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4250 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4249, align 8
  %4251 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4252 = load i32, i32* %4251, align 4
  %4253 = and i32 %4252, 16777215
  %4254 = zext i32 %4253 to i64
  %4255 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4256 = load i32*, i32** %4255, align 8
  %4257 = getelementptr inbounds i32, i32* %4256, i64 %4254
  %4258 = load i32, i32* %4257, align 4
  %4259 = icmp eq i32 %4258, -1
  br i1 %4259, label %4260, label %4264

4260:                                             ; preds = %4248
  %4261 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4250) #12
  %4262 = load i32*, i32** %4255, align 8
  %4263 = getelementptr inbounds i32, i32* %4262, i64 %4254
  store i32 %4261, i32* %4263, align 4
  br label %4264

4264:                                             ; preds = %4248, %4260
  %4265 = phi i32 [ %4261, %4260 ], [ %4258, %4248 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4250, i8 zeroext 14, i32 %4265) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4266:                                             ; preds = %2
  %4267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4268 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4267, align 8
  %4269 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4270 = load i32, i32* %4269, align 4
  %4271 = and i32 %4270, 16777215
  %4272 = zext i32 %4271 to i64
  %4273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4274 = load i32*, i32** %4273, align 8
  %4275 = getelementptr inbounds i32, i32* %4274, i64 %4272
  %4276 = load i32, i32* %4275, align 4
  %4277 = icmp eq i32 %4276, -1
  br i1 %4277, label %4278, label %4282

4278:                                             ; preds = %4266
  %4279 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4268) #12
  %4280 = load i32*, i32** %4273, align 8
  %4281 = getelementptr inbounds i32, i32* %4280, i64 %4272
  store i32 %4279, i32* %4281, align 4
  br label %4282

4282:                                             ; preds = %4266, %4278
  %4283 = phi i32 [ %4279, %4278 ], [ %4276, %4266 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4268, i8 zeroext 14, i32 %4283) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4284:                                             ; preds = %2
  %4285 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4286 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4285, align 8
  %4287 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4288 = load i32, i32* %4287, align 4
  %4289 = and i32 %4288, 16777215
  %4290 = zext i32 %4289 to i64
  %4291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4292 = load i32*, i32** %4291, align 8
  %4293 = getelementptr inbounds i32, i32* %4292, i64 %4290
  %4294 = load i32, i32* %4293, align 4
  %4295 = icmp eq i32 %4294, -1
  br i1 %4295, label %4296, label %4300

4296:                                             ; preds = %4284
  %4297 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4286) #12
  %4298 = load i32*, i32** %4291, align 8
  %4299 = getelementptr inbounds i32, i32* %4298, i64 %4290
  store i32 %4297, i32* %4299, align 4
  br label %4300

4300:                                             ; preds = %4284, %4296
  %4301 = phi i32 [ %4297, %4296 ], [ %4294, %4284 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4286, i8 zeroext 14, i32 %4301) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4302:                                             ; preds = %2
  %4303 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4304 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4303, align 8
  %4305 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4306 = load i32, i32* %4305, align 4
  %4307 = and i32 %4306, 16777215
  %4308 = zext i32 %4307 to i64
  %4309 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4310 = load i32*, i32** %4309, align 8
  %4311 = getelementptr inbounds i32, i32* %4310, i64 %4308
  %4312 = load i32, i32* %4311, align 4
  %4313 = icmp eq i32 %4312, -1
  br i1 %4313, label %4314, label %4318

4314:                                             ; preds = %4302
  %4315 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4304) #12
  %4316 = load i32*, i32** %4309, align 8
  %4317 = getelementptr inbounds i32, i32* %4316, i64 %4308
  store i32 %4315, i32* %4317, align 4
  br label %4318

4318:                                             ; preds = %4302, %4314
  %4319 = phi i32 [ %4315, %4314 ], [ %4312, %4302 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4304, i8 zeroext 14, i32 %4319) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4320:                                             ; preds = %2
  %4321 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4322 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4321, align 8
  %4323 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4324 = load i32, i32* %4323, align 4
  %4325 = and i32 %4324, 16777215
  %4326 = zext i32 %4325 to i64
  %4327 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4328 = load i32*, i32** %4327, align 8
  %4329 = getelementptr inbounds i32, i32* %4328, i64 %4326
  %4330 = load i32, i32* %4329, align 4
  %4331 = icmp eq i32 %4330, -1
  br i1 %4331, label %4332, label %4336

4332:                                             ; preds = %4320
  %4333 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4322) #12
  %4334 = load i32*, i32** %4327, align 8
  %4335 = getelementptr inbounds i32, i32* %4334, i64 %4326
  store i32 %4333, i32* %4335, align 4
  br label %4336

4336:                                             ; preds = %4320, %4332
  %4337 = phi i32 [ %4333, %4332 ], [ %4330, %4320 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4322, i8 zeroext 14, i32 %4337) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4338:                                             ; preds = %2
  %4339 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4340 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4339, align 8
  %4341 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4342 = load i32, i32* %4341, align 4
  %4343 = and i32 %4342, 16777215
  %4344 = zext i32 %4343 to i64
  %4345 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4346 = load i32*, i32** %4345, align 8
  %4347 = getelementptr inbounds i32, i32* %4346, i64 %4344
  %4348 = load i32, i32* %4347, align 4
  %4349 = icmp eq i32 %4348, -1
  br i1 %4349, label %4350, label %4354

4350:                                             ; preds = %4338
  %4351 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4340) #12
  %4352 = load i32*, i32** %4345, align 8
  %4353 = getelementptr inbounds i32, i32* %4352, i64 %4344
  store i32 %4351, i32* %4353, align 4
  br label %4354

4354:                                             ; preds = %4338, %4350
  %4355 = phi i32 [ %4351, %4350 ], [ %4348, %4338 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4340, i8 zeroext 14, i32 %4355) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4356:                                             ; preds = %2
  %4357 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4358 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4357, align 8
  %4359 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4360 = load i32, i32* %4359, align 4
  %4361 = and i32 %4360, 16777215
  %4362 = zext i32 %4361 to i64
  %4363 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4364 = load i32*, i32** %4363, align 8
  %4365 = getelementptr inbounds i32, i32* %4364, i64 %4362
  %4366 = load i32, i32* %4365, align 4
  %4367 = icmp eq i32 %4366, -1
  br i1 %4367, label %4368, label %4372

4368:                                             ; preds = %4356
  %4369 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4358) #12
  %4370 = load i32*, i32** %4363, align 8
  %4371 = getelementptr inbounds i32, i32* %4370, i64 %4362
  store i32 %4369, i32* %4371, align 4
  br label %4372

4372:                                             ; preds = %4356, %4368
  %4373 = phi i32 [ %4369, %4368 ], [ %4366, %4356 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4358, i8 zeroext 14, i32 %4373) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4374:                                             ; preds = %2
  %4375 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4376 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4375, align 8
  %4377 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4378 = load i32, i32* %4377, align 4
  %4379 = and i32 %4378, 16777215
  %4380 = zext i32 %4379 to i64
  %4381 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4382 = load i32*, i32** %4381, align 8
  %4383 = getelementptr inbounds i32, i32* %4382, i64 %4380
  %4384 = load i32, i32* %4383, align 4
  %4385 = icmp eq i32 %4384, -1
  br i1 %4385, label %4386, label %4390

4386:                                             ; preds = %4374
  %4387 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4376) #12
  %4388 = load i32*, i32** %4381, align 8
  %4389 = getelementptr inbounds i32, i32* %4388, i64 %4380
  store i32 %4387, i32* %4389, align 4
  br label %4390

4390:                                             ; preds = %4374, %4386
  %4391 = phi i32 [ %4387, %4386 ], [ %4384, %4374 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4376, i8 zeroext 14, i32 %4391) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2LtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4392:                                             ; preds = %2
  %4393 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4394 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4393, align 8
  %4395 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4396 = load i32, i32* %4395, align 4
  %4397 = and i32 %4396, 16777215
  %4398 = zext i32 %4397 to i64
  %4399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4400 = load i32*, i32** %4399, align 8
  %4401 = getelementptr inbounds i32, i32* %4400, i64 %4398
  %4402 = load i32, i32* %4401, align 4
  %4403 = icmp eq i32 %4402, -1
  br i1 %4403, label %4404, label %4408

4404:                                             ; preds = %4392
  %4405 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4394) #12
  %4406 = load i32*, i32** %4399, align 8
  %4407 = getelementptr inbounds i32, i32* %4406, i64 %4398
  store i32 %4405, i32* %4407, align 4
  br label %4408

4408:                                             ; preds = %4392, %4404
  %4409 = phi i32 [ %4405, %4404 ], [ %4402, %4392 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4394, i8 zeroext 14, i32 %4409) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2LeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4410:                                             ; preds = %2
  %4411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4412 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4411, align 8
  %4413 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4414 = load i32, i32* %4413, align 4
  %4415 = and i32 %4414, 16777215
  %4416 = zext i32 %4415 to i64
  %4417 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4418 = load i32*, i32** %4417, align 8
  %4419 = getelementptr inbounds i32, i32* %4418, i64 %4416
  %4420 = load i32, i32* %4419, align 4
  %4421 = icmp eq i32 %4420, -1
  br i1 %4421, label %4422, label %4426

4422:                                             ; preds = %4410
  %4423 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4412) #12
  %4424 = load i32*, i32** %4417, align 8
  %4425 = getelementptr inbounds i32, i32* %4424, i64 %4416
  store i32 %4423, i32* %4425, align 4
  br label %4426

4426:                                             ; preds = %4410, %4422
  %4427 = phi i32 [ %4423, %4422 ], [ %4420, %4410 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4412, i8 zeroext 14, i32 %4427) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2QfmaEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4428:                                             ; preds = %2
  %4429 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4430 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4429, align 8
  %4431 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4432 = load i32, i32* %4431, align 4
  %4433 = and i32 %4432, 16777215
  %4434 = zext i32 %4433 to i64
  %4435 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4436 = load i32*, i32** %4435, align 8
  %4437 = getelementptr inbounds i32, i32* %4436, i64 %4434
  %4438 = load i32, i32* %4437, align 4
  %4439 = icmp eq i32 %4438, -1
  br i1 %4439, label %4440, label %4444

4440:                                             ; preds = %4428
  %4441 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4430) #12
  %4442 = load i32*, i32** %4435, align 8
  %4443 = getelementptr inbounds i32, i32* %4442, i64 %4434
  store i32 %4441, i32* %4443, align 4
  br label %4444

4444:                                             ; preds = %4428, %4440
  %4445 = phi i32 [ %4441, %4440 ], [ %4438, %4428 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4430, i8 zeroext 14, i32 %4445) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2QfmsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4446:                                             ; preds = %2
  %4447 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4448 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4447, align 8
  %4449 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4450 = load i32, i32* %4449, align 4
  %4451 = and i32 %4450, 16777215
  %4452 = zext i32 %4451 to i64
  %4453 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4454 = load i32*, i32** %4453, align 8
  %4455 = getelementptr inbounds i32, i32* %4454, i64 %4452
  %4456 = load i32, i32* %4455, align 4
  %4457 = icmp eq i32 %4456, -1
  br i1 %4457, label %4458, label %4462

4458:                                             ; preds = %4446
  %4459 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4448) #12
  %4460 = load i32*, i32** %4453, align 8
  %4461 = getelementptr inbounds i32, i32* %4460, i64 %4452
  store i32 %4459, i32* %4461, align 4
  br label %4462

4462:                                             ; preds = %4446, %4458
  %4463 = phi i32 [ %4459, %4458 ], [ %4456, %4446 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4448, i8 zeroext 14, i32 %4463) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2PminEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4464:                                             ; preds = %2
  %4465 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4466 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4465, align 8
  %4467 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4468 = load i32, i32* %4467, align 4
  %4469 = and i32 %4468, 16777215
  %4470 = zext i32 %4469 to i64
  %4471 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4472 = load i32*, i32** %4471, align 8
  %4473 = getelementptr inbounds i32, i32* %4472, i64 %4470
  %4474 = load i32, i32* %4473, align 4
  %4475 = icmp eq i32 %4474, -1
  br i1 %4475, label %4476, label %4480

4476:                                             ; preds = %4464
  %4477 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4466) #12
  %4478 = load i32*, i32** %4471, align 8
  %4479 = getelementptr inbounds i32, i32* %4478, i64 %4470
  store i32 %4477, i32* %4479, align 4
  br label %4480

4480:                                             ; preds = %4464, %4476
  %4481 = phi i32 [ %4477, %4476 ], [ %4474, %4464 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4466, i8 zeroext 14, i32 %4481) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2PmaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4482:                                             ; preds = %2
  %4483 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4484 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4483, align 8
  %4485 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4486 = load i32, i32* %4485, align 4
  %4487 = and i32 %4486, 16777215
  %4488 = zext i32 %4487 to i64
  %4489 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4490 = load i32*, i32** %4489, align 8
  %4491 = getelementptr inbounds i32, i32* %4490, i64 %4488
  %4492 = load i32, i32* %4491, align 4
  %4493 = icmp eq i32 %4492, -1
  br i1 %4493, label %4494, label %4498

4494:                                             ; preds = %4482
  %4495 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4484) #12
  %4496 = load i32*, i32** %4489, align 8
  %4497 = getelementptr inbounds i32, i32* %4496, i64 %4488
  store i32 %4495, i32* %4497, align 4
  br label %4498

4498:                                             ; preds = %4482, %4494
  %4499 = phi i32 [ %4495, %4494 ], [ %4492, %4482 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4484, i8 zeroext 14, i32 %4499) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2CeilEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4500:                                             ; preds = %2
  %4501 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4502 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4501, align 8
  %4503 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4504 = load i32, i32* %4503, align 4
  %4505 = and i32 %4504, 16777215
  %4506 = zext i32 %4505 to i64
  %4507 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4508 = load i32*, i32** %4507, align 8
  %4509 = getelementptr inbounds i32, i32* %4508, i64 %4506
  %4510 = load i32, i32* %4509, align 4
  %4511 = icmp eq i32 %4510, -1
  br i1 %4511, label %4512, label %4516

4512:                                             ; preds = %4500
  %4513 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4502) #12
  %4514 = load i32*, i32** %4507, align 8
  %4515 = getelementptr inbounds i32, i32* %4514, i64 %4506
  store i32 %4513, i32* %4515, align 4
  br label %4516

4516:                                             ; preds = %4500, %4512
  %4517 = phi i32 [ %4513, %4512 ], [ %4510, %4500 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4502, i8 zeroext 14, i32 %4517) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitF64x2FloorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4518:                                             ; preds = %2
  %4519 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4520 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4519, align 8
  %4521 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4522 = load i32, i32* %4521, align 4
  %4523 = and i32 %4522, 16777215
  %4524 = zext i32 %4523 to i64
  %4525 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4526 = load i32*, i32** %4525, align 8
  %4527 = getelementptr inbounds i32, i32* %4526, i64 %4524
  %4528 = load i32, i32* %4527, align 4
  %4529 = icmp eq i32 %4528, -1
  br i1 %4529, label %4530, label %4534

4530:                                             ; preds = %4518
  %4531 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4520) #12
  %4532 = load i32*, i32** %4525, align 8
  %4533 = getelementptr inbounds i32, i32* %4532, i64 %4524
  store i32 %4531, i32* %4533, align 4
  br label %4534

4534:                                             ; preds = %4518, %4530
  %4535 = phi i32 [ %4531, %4530 ], [ %4528, %4518 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4520, i8 zeroext 14, i32 %4535) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitF64x2TruncEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4536:                                             ; preds = %2
  %4537 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4538 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4537, align 8
  %4539 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4540 = load i32, i32* %4539, align 4
  %4541 = and i32 %4540, 16777215
  %4542 = zext i32 %4541 to i64
  %4543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4544 = load i32*, i32** %4543, align 8
  %4545 = getelementptr inbounds i32, i32* %4544, i64 %4542
  %4546 = load i32, i32* %4545, align 4
  %4547 = icmp eq i32 %4546, -1
  br i1 %4547, label %4548, label %4552

4548:                                             ; preds = %4536
  %4549 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4538) #12
  %4550 = load i32*, i32** %4543, align 8
  %4551 = getelementptr inbounds i32, i32* %4550, i64 %4542
  store i32 %4549, i32* %4551, align 4
  br label %4552

4552:                                             ; preds = %4536, %4548
  %4553 = phi i32 [ %4549, %4548 ], [ %4546, %4536 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4538, i8 zeroext 14, i32 %4553) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitF64x2NearestIntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4554:                                             ; preds = %2
  %4555 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4556 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4555, align 8
  %4557 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4558 = load i32, i32* %4557, align 4
  %4559 = and i32 %4558, 16777215
  %4560 = zext i32 %4559 to i64
  %4561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4562 = load i32*, i32** %4561, align 8
  %4563 = getelementptr inbounds i32, i32* %4562, i64 %4560
  %4564 = load i32, i32* %4563, align 4
  %4565 = icmp eq i32 %4564, -1
  br i1 %4565, label %4566, label %4570

4566:                                             ; preds = %4554
  %4567 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4556) #12
  %4568 = load i32*, i32** %4561, align 8
  %4569 = getelementptr inbounds i32, i32* %4568, i64 %4560
  store i32 %4567, i32* %4569, align 4
  br label %4570

4570:                                             ; preds = %4554, %4566
  %4571 = phi i32 [ %4567, %4566 ], [ %4564, %4554 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4556, i8 zeroext 14, i32 %4571) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitF64x2ConvertLowI32x4SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4572:                                             ; preds = %2
  %4573 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4574 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4573, align 8
  %4575 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4576 = load i32, i32* %4575, align 4
  %4577 = and i32 %4576, 16777215
  %4578 = zext i32 %4577 to i64
  %4579 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4580 = load i32*, i32** %4579, align 8
  %4581 = getelementptr inbounds i32, i32* %4580, i64 %4578
  %4582 = load i32, i32* %4581, align 4
  %4583 = icmp eq i32 %4582, -1
  br i1 %4583, label %4584, label %4588

4584:                                             ; preds = %4572
  %4585 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4574) #12
  %4586 = load i32*, i32** %4579, align 8
  %4587 = getelementptr inbounds i32, i32* %4586, i64 %4578
  store i32 %4585, i32* %4587, align 4
  br label %4588

4588:                                             ; preds = %4572, %4584
  %4589 = phi i32 [ %4585, %4584 ], [ %4582, %4572 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4574, i8 zeroext 14, i32 %4589) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitF64x2ConvertLowI32x4UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4590:                                             ; preds = %2
  %4591 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4592 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4591, align 8
  %4593 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4594 = load i32, i32* %4593, align 4
  %4595 = and i32 %4594, 16777215
  %4596 = zext i32 %4595 to i64
  %4597 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4598 = load i32*, i32** %4597, align 8
  %4599 = getelementptr inbounds i32, i32* %4598, i64 %4596
  %4600 = load i32, i32* %4599, align 4
  %4601 = icmp eq i32 %4600, -1
  br i1 %4601, label %4602, label %4606

4602:                                             ; preds = %4590
  %4603 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4592) #12
  %4604 = load i32*, i32** %4597, align 8
  %4605 = getelementptr inbounds i32, i32* %4604, i64 %4596
  store i32 %4603, i32* %4605, align 4
  br label %4606

4606:                                             ; preds = %4590, %4602
  %4607 = phi i32 [ %4603, %4602 ], [ %4600, %4590 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4592, i8 zeroext 14, i32 %4607) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitF64x2PromoteLowF32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4608:                                             ; preds = %2
  %4609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4610 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4609, align 8
  %4611 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4612 = load i32, i32* %4611, align 4
  %4613 = and i32 %4612, 16777215
  %4614 = zext i32 %4613 to i64
  %4615 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4616 = load i32*, i32** %4615, align 8
  %4617 = getelementptr inbounds i32, i32* %4616, i64 %4614
  %4618 = load i32, i32* %4617, align 4
  %4619 = icmp eq i32 %4618, -1
  br i1 %4619, label %4620, label %4624

4620:                                             ; preds = %4608
  %4621 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4610) #12
  %4622 = load i32*, i32** %4615, align 8
  %4623 = getelementptr inbounds i32, i32* %4622, i64 %4614
  store i32 %4621, i32* %4623, align 4
  br label %4624

4624:                                             ; preds = %4608, %4620
  %4625 = phi i32 [ %4621, %4620 ], [ %4618, %4608 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4610, i8 zeroext 14, i32 %4625) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitF32x4SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4626:                                             ; preds = %2
  %4627 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4628 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4627, align 8
  %4629 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4630 = load i32, i32* %4629, align 4
  %4631 = and i32 %4630, 16777215
  %4632 = zext i32 %4631 to i64
  %4633 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4634 = load i32*, i32** %4633, align 8
  %4635 = getelementptr inbounds i32, i32* %4634, i64 %4632
  %4636 = load i32, i32* %4635, align 4
  %4637 = icmp eq i32 %4636, -1
  br i1 %4637, label %4638, label %4642

4638:                                             ; preds = %4626
  %4639 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4628) #12
  %4640 = load i32*, i32** %4633, align 8
  %4641 = getelementptr inbounds i32, i32* %4640, i64 %4632
  store i32 %4639, i32* %4641, align 4
  br label %4642

4642:                                             ; preds = %4626, %4638
  %4643 = phi i32 [ %4639, %4638 ], [ %4636, %4626 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4628, i8 zeroext 12, i32 %4643) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitF32x4ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4644:                                             ; preds = %2
  %4645 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4646 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4645, align 8
  %4647 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4648 = load i32, i32* %4647, align 4
  %4649 = and i32 %4648, 16777215
  %4650 = zext i32 %4649 to i64
  %4651 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4652 = load i32*, i32** %4651, align 8
  %4653 = getelementptr inbounds i32, i32* %4652, i64 %4650
  %4654 = load i32, i32* %4653, align 4
  %4655 = icmp eq i32 %4654, -1
  br i1 %4655, label %4656, label %4660

4656:                                             ; preds = %4644
  %4657 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4646) #12
  %4658 = load i32*, i32** %4651, align 8
  %4659 = getelementptr inbounds i32, i32* %4658, i64 %4650
  store i32 %4657, i32* %4659, align 4
  br label %4660

4660:                                             ; preds = %4644, %4656
  %4661 = phi i32 [ %4657, %4656 ], [ %4654, %4644 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4646, i8 zeroext 14, i32 %4661) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitF32x4ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4662:                                             ; preds = %2
  %4663 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4664 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4663, align 8
  %4665 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4666 = load i32, i32* %4665, align 4
  %4667 = and i32 %4666, 16777215
  %4668 = zext i32 %4667 to i64
  %4669 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4670 = load i32*, i32** %4669, align 8
  %4671 = getelementptr inbounds i32, i32* %4670, i64 %4668
  %4672 = load i32, i32* %4671, align 4
  %4673 = icmp eq i32 %4672, -1
  br i1 %4673, label %4674, label %4678

4674:                                             ; preds = %4662
  %4675 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4664) #12
  %4676 = load i32*, i32** %4669, align 8
  %4677 = getelementptr inbounds i32, i32* %4676, i64 %4668
  store i32 %4675, i32* %4677, align 4
  br label %4678

4678:                                             ; preds = %4662, %4674
  %4679 = phi i32 [ %4675, %4674 ], [ %4672, %4662 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4664, i8 zeroext 14, i32 %4679) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitF32x4SConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4680:                                             ; preds = %2
  %4681 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4682 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4681, align 8
  %4683 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4684 = load i32, i32* %4683, align 4
  %4685 = and i32 %4684, 16777215
  %4686 = zext i32 %4685 to i64
  %4687 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4688 = load i32*, i32** %4687, align 8
  %4689 = getelementptr inbounds i32, i32* %4688, i64 %4686
  %4690 = load i32, i32* %4689, align 4
  %4691 = icmp eq i32 %4690, -1
  br i1 %4691, label %4692, label %4696

4692:                                             ; preds = %4680
  %4693 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4682) #12
  %4694 = load i32*, i32** %4687, align 8
  %4695 = getelementptr inbounds i32, i32* %4694, i64 %4686
  store i32 %4693, i32* %4695, align 4
  br label %4696

4696:                                             ; preds = %4680, %4692
  %4697 = phi i32 [ %4693, %4692 ], [ %4690, %4680 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4682, i8 zeroext 14, i32 %4697) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitF32x4UConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4698:                                             ; preds = %2
  %4699 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4700 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4699, align 8
  %4701 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4702 = load i32, i32* %4701, align 4
  %4703 = and i32 %4702, 16777215
  %4704 = zext i32 %4703 to i64
  %4705 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4706 = load i32*, i32** %4705, align 8
  %4707 = getelementptr inbounds i32, i32* %4706, i64 %4704
  %4708 = load i32, i32* %4707, align 4
  %4709 = icmp eq i32 %4708, -1
  br i1 %4709, label %4710, label %4714

4710:                                             ; preds = %4698
  %4711 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4700) #12
  %4712 = load i32*, i32** %4705, align 8
  %4713 = getelementptr inbounds i32, i32* %4712, i64 %4704
  store i32 %4711, i32* %4713, align 4
  br label %4714

4714:                                             ; preds = %4698, %4710
  %4715 = phi i32 [ %4711, %4710 ], [ %4708, %4698 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4700, i8 zeroext 14, i32 %4715) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4716:                                             ; preds = %2
  %4717 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4718 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4717, align 8
  %4719 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4720 = load i32, i32* %4719, align 4
  %4721 = and i32 %4720, 16777215
  %4722 = zext i32 %4721 to i64
  %4723 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4724 = load i32*, i32** %4723, align 8
  %4725 = getelementptr inbounds i32, i32* %4724, i64 %4722
  %4726 = load i32, i32* %4725, align 4
  %4727 = icmp eq i32 %4726, -1
  br i1 %4727, label %4728, label %4732

4728:                                             ; preds = %4716
  %4729 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4718) #12
  %4730 = load i32*, i32** %4723, align 8
  %4731 = getelementptr inbounds i32, i32* %4730, i64 %4722
  store i32 %4729, i32* %4731, align 4
  br label %4732

4732:                                             ; preds = %4716, %4728
  %4733 = phi i32 [ %4729, %4728 ], [ %4726, %4716 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4718, i8 zeroext 14, i32 %4733) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4734:                                             ; preds = %2
  %4735 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4736 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4735, align 8
  %4737 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4738 = load i32, i32* %4737, align 4
  %4739 = and i32 %4738, 16777215
  %4740 = zext i32 %4739 to i64
  %4741 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4742 = load i32*, i32** %4741, align 8
  %4743 = getelementptr inbounds i32, i32* %4742, i64 %4740
  %4744 = load i32, i32* %4743, align 4
  %4745 = icmp eq i32 %4744, -1
  br i1 %4745, label %4746, label %4750

4746:                                             ; preds = %4734
  %4747 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4736) #12
  %4748 = load i32*, i32** %4741, align 8
  %4749 = getelementptr inbounds i32, i32* %4748, i64 %4740
  store i32 %4747, i32* %4749, align 4
  br label %4750

4750:                                             ; preds = %4734, %4746
  %4751 = phi i32 [ %4747, %4746 ], [ %4744, %4734 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4736, i8 zeroext 14, i32 %4751) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4752:                                             ; preds = %2
  %4753 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4754 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4753, align 8
  %4755 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4756 = load i32, i32* %4755, align 4
  %4757 = and i32 %4756, 16777215
  %4758 = zext i32 %4757 to i64
  %4759 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4760 = load i32*, i32** %4759, align 8
  %4761 = getelementptr inbounds i32, i32* %4760, i64 %4758
  %4762 = load i32, i32* %4761, align 4
  %4763 = icmp eq i32 %4762, -1
  br i1 %4763, label %4764, label %4768

4764:                                             ; preds = %4752
  %4765 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4754) #12
  %4766 = load i32*, i32** %4759, align 8
  %4767 = getelementptr inbounds i32, i32* %4766, i64 %4758
  store i32 %4765, i32* %4767, align 4
  br label %4768

4768:                                             ; preds = %4752, %4764
  %4769 = phi i32 [ %4765, %4764 ], [ %4762, %4752 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4754, i8 zeroext 14, i32 %4769) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitF32x4RecipApproxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4770:                                             ; preds = %2
  %4771 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4772 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4771, align 8
  %4773 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4774 = load i32, i32* %4773, align 4
  %4775 = and i32 %4774, 16777215
  %4776 = zext i32 %4775 to i64
  %4777 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4778 = load i32*, i32** %4777, align 8
  %4779 = getelementptr inbounds i32, i32* %4778, i64 %4776
  %4780 = load i32, i32* %4779, align 4
  %4781 = icmp eq i32 %4780, -1
  br i1 %4781, label %4782, label %4786

4782:                                             ; preds = %4770
  %4783 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4772) #12
  %4784 = load i32*, i32** %4777, align 8
  %4785 = getelementptr inbounds i32, i32* %4784, i64 %4776
  store i32 %4783, i32* %4785, align 4
  br label %4786

4786:                                             ; preds = %4770, %4782
  %4787 = phi i32 [ %4783, %4782 ], [ %4780, %4770 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4772, i8 zeroext 14, i32 %4787) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitF32x4RecipSqrtApproxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4788:                                             ; preds = %2
  %4789 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4790 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4789, align 8
  %4791 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4792 = load i32, i32* %4791, align 4
  %4793 = and i32 %4792, 16777215
  %4794 = zext i32 %4793 to i64
  %4795 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4796 = load i32*, i32** %4795, align 8
  %4797 = getelementptr inbounds i32, i32* %4796, i64 %4794
  %4798 = load i32, i32* %4797, align 4
  %4799 = icmp eq i32 %4798, -1
  br i1 %4799, label %4800, label %4804

4800:                                             ; preds = %4788
  %4801 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4790) #12
  %4802 = load i32*, i32** %4795, align 8
  %4803 = getelementptr inbounds i32, i32* %4802, i64 %4794
  store i32 %4801, i32* %4803, align 4
  br label %4804

4804:                                             ; preds = %4788, %4800
  %4805 = phi i32 [ %4801, %4800 ], [ %4798, %4788 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4790, i8 zeroext 14, i32 %4805) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4806:                                             ; preds = %2
  %4807 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4808 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4807, align 8
  %4809 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4810 = load i32, i32* %4809, align 4
  %4811 = and i32 %4810, 16777215
  %4812 = zext i32 %4811 to i64
  %4813 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4814 = load i32*, i32** %4813, align 8
  %4815 = getelementptr inbounds i32, i32* %4814, i64 %4812
  %4816 = load i32, i32* %4815, align 4
  %4817 = icmp eq i32 %4816, -1
  br i1 %4817, label %4818, label %4822

4818:                                             ; preds = %4806
  %4819 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4808) #12
  %4820 = load i32*, i32** %4813, align 8
  %4821 = getelementptr inbounds i32, i32* %4820, i64 %4812
  store i32 %4819, i32* %4821, align 4
  br label %4822

4822:                                             ; preds = %4806, %4818
  %4823 = phi i32 [ %4819, %4818 ], [ %4816, %4806 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4808, i8 zeroext 14, i32 %4823) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4824:                                             ; preds = %2
  %4825 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4826 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4825, align 8
  %4827 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4828 = load i32, i32* %4827, align 4
  %4829 = and i32 %4828, 16777215
  %4830 = zext i32 %4829 to i64
  %4831 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4832 = load i32*, i32** %4831, align 8
  %4833 = getelementptr inbounds i32, i32* %4832, i64 %4830
  %4834 = load i32, i32* %4833, align 4
  %4835 = icmp eq i32 %4834, -1
  br i1 %4835, label %4836, label %4840

4836:                                             ; preds = %4824
  %4837 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4826) #12
  %4838 = load i32*, i32** %4831, align 8
  %4839 = getelementptr inbounds i32, i32* %4838, i64 %4830
  store i32 %4837, i32* %4839, align 4
  br label %4840

4840:                                             ; preds = %4824, %4836
  %4841 = phi i32 [ %4837, %4836 ], [ %4834, %4824 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4826, i8 zeroext 14, i32 %4841) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4842:                                             ; preds = %2
  %4843 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4844 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4843, align 8
  %4845 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4846 = load i32, i32* %4845, align 4
  %4847 = and i32 %4846, 16777215
  %4848 = zext i32 %4847 to i64
  %4849 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4850 = load i32*, i32** %4849, align 8
  %4851 = getelementptr inbounds i32, i32* %4850, i64 %4848
  %4852 = load i32, i32* %4851, align 4
  %4853 = icmp eq i32 %4852, -1
  br i1 %4853, label %4854, label %4858

4854:                                             ; preds = %4842
  %4855 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4844) #12
  %4856 = load i32*, i32** %4849, align 8
  %4857 = getelementptr inbounds i32, i32* %4856, i64 %4848
  store i32 %4855, i32* %4857, align 4
  br label %4858

4858:                                             ; preds = %4842, %4854
  %4859 = phi i32 [ %4855, %4854 ], [ %4852, %4842 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4844, i8 zeroext 14, i32 %4859) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4860:                                             ; preds = %2
  %4861 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4862 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4861, align 8
  %4863 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4864 = load i32, i32* %4863, align 4
  %4865 = and i32 %4864, 16777215
  %4866 = zext i32 %4865 to i64
  %4867 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4868 = load i32*, i32** %4867, align 8
  %4869 = getelementptr inbounds i32, i32* %4868, i64 %4866
  %4870 = load i32, i32* %4869, align 4
  %4871 = icmp eq i32 %4870, -1
  br i1 %4871, label %4872, label %4876

4872:                                             ; preds = %4860
  %4873 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4862) #12
  %4874 = load i32*, i32** %4867, align 8
  %4875 = getelementptr inbounds i32, i32* %4874, i64 %4866
  store i32 %4873, i32* %4875, align 4
  br label %4876

4876:                                             ; preds = %4860, %4872
  %4877 = phi i32 [ %4873, %4872 ], [ %4870, %4860 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4862, i8 zeroext 14, i32 %4877) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4878:                                             ; preds = %2
  %4879 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4880 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4879, align 8
  %4881 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4882 = load i32, i32* %4881, align 4
  %4883 = and i32 %4882, 16777215
  %4884 = zext i32 %4883 to i64
  %4885 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4886 = load i32*, i32** %4885, align 8
  %4887 = getelementptr inbounds i32, i32* %4886, i64 %4884
  %4888 = load i32, i32* %4887, align 4
  %4889 = icmp eq i32 %4888, -1
  br i1 %4889, label %4890, label %4894

4890:                                             ; preds = %4878
  %4891 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4880) #12
  %4892 = load i32*, i32** %4885, align 8
  %4893 = getelementptr inbounds i32, i32* %4892, i64 %4884
  store i32 %4891, i32* %4893, align 4
  br label %4894

4894:                                             ; preds = %4878, %4890
  %4895 = phi i32 [ %4891, %4890 ], [ %4888, %4878 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4880, i8 zeroext 14, i32 %4895) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4896:                                             ; preds = %2
  %4897 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4898 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4897, align 8
  %4899 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4900 = load i32, i32* %4899, align 4
  %4901 = and i32 %4900, 16777215
  %4902 = zext i32 %4901 to i64
  %4903 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4904 = load i32*, i32** %4903, align 8
  %4905 = getelementptr inbounds i32, i32* %4904, i64 %4902
  %4906 = load i32, i32* %4905, align 4
  %4907 = icmp eq i32 %4906, -1
  br i1 %4907, label %4908, label %4912

4908:                                             ; preds = %4896
  %4909 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4898) #12
  %4910 = load i32*, i32** %4903, align 8
  %4911 = getelementptr inbounds i32, i32* %4910, i64 %4902
  store i32 %4909, i32* %4911, align 4
  br label %4912

4912:                                             ; preds = %4896, %4908
  %4913 = phi i32 [ %4909, %4908 ], [ %4906, %4896 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4898, i8 zeroext 14, i32 %4913) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4914:                                             ; preds = %2
  %4915 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4916 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4915, align 8
  %4917 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4918 = load i32, i32* %4917, align 4
  %4919 = and i32 %4918, 16777215
  %4920 = zext i32 %4919 to i64
  %4921 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4922 = load i32*, i32** %4921, align 8
  %4923 = getelementptr inbounds i32, i32* %4922, i64 %4920
  %4924 = load i32, i32* %4923, align 4
  %4925 = icmp eq i32 %4924, -1
  br i1 %4925, label %4926, label %4930

4926:                                             ; preds = %4914
  %4927 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4916) #12
  %4928 = load i32*, i32** %4921, align 8
  %4929 = getelementptr inbounds i32, i32* %4928, i64 %4920
  store i32 %4927, i32* %4929, align 4
  br label %4930

4930:                                             ; preds = %4914, %4926
  %4931 = phi i32 [ %4927, %4926 ], [ %4924, %4914 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4916, i8 zeroext 14, i32 %4931) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4932:                                             ; preds = %2
  %4933 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4934 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4933, align 8
  %4935 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4936 = load i32, i32* %4935, align 4
  %4937 = and i32 %4936, 16777215
  %4938 = zext i32 %4937 to i64
  %4939 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4940 = load i32*, i32** %4939, align 8
  %4941 = getelementptr inbounds i32, i32* %4940, i64 %4938
  %4942 = load i32, i32* %4941, align 4
  %4943 = icmp eq i32 %4942, -1
  br i1 %4943, label %4944, label %4948

4944:                                             ; preds = %4932
  %4945 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4934) #12
  %4946 = load i32*, i32** %4939, align 8
  %4947 = getelementptr inbounds i32, i32* %4946, i64 %4938
  store i32 %4945, i32* %4947, align 4
  br label %4948

4948:                                             ; preds = %4932, %4944
  %4949 = phi i32 [ %4945, %4944 ], [ %4942, %4932 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4934, i8 zeroext 14, i32 %4949) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4LtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4950:                                             ; preds = %2
  %4951 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4952 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4951, align 8
  %4953 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4954 = load i32, i32* %4953, align 4
  %4955 = and i32 %4954, 16777215
  %4956 = zext i32 %4955 to i64
  %4957 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4958 = load i32*, i32** %4957, align 8
  %4959 = getelementptr inbounds i32, i32* %4958, i64 %4956
  %4960 = load i32, i32* %4959, align 4
  %4961 = icmp eq i32 %4960, -1
  br i1 %4961, label %4962, label %4966

4962:                                             ; preds = %4950
  %4963 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4952) #12
  %4964 = load i32*, i32** %4957, align 8
  %4965 = getelementptr inbounds i32, i32* %4964, i64 %4956
  store i32 %4963, i32* %4965, align 4
  br label %4966

4966:                                             ; preds = %4950, %4962
  %4967 = phi i32 [ %4963, %4962 ], [ %4960, %4950 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4952, i8 zeroext 14, i32 %4967) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4LeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4968:                                             ; preds = %2
  %4969 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4970 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4969, align 8
  %4971 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4972 = load i32, i32* %4971, align 4
  %4973 = and i32 %4972, 16777215
  %4974 = zext i32 %4973 to i64
  %4975 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4976 = load i32*, i32** %4975, align 8
  %4977 = getelementptr inbounds i32, i32* %4976, i64 %4974
  %4978 = load i32, i32* %4977, align 4
  %4979 = icmp eq i32 %4978, -1
  br i1 %4979, label %4980, label %4984

4980:                                             ; preds = %4968
  %4981 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4970) #12
  %4982 = load i32*, i32** %4975, align 8
  %4983 = getelementptr inbounds i32, i32* %4982, i64 %4974
  store i32 %4981, i32* %4983, align 4
  br label %4984

4984:                                             ; preds = %4968, %4980
  %4985 = phi i32 [ %4981, %4980 ], [ %4978, %4968 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4970, i8 zeroext 14, i32 %4985) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4QfmaEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

4986:                                             ; preds = %2
  %4987 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4988 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4987, align 8
  %4989 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4990 = load i32, i32* %4989, align 4
  %4991 = and i32 %4990, 16777215
  %4992 = zext i32 %4991 to i64
  %4993 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4994 = load i32*, i32** %4993, align 8
  %4995 = getelementptr inbounds i32, i32* %4994, i64 %4992
  %4996 = load i32, i32* %4995, align 4
  %4997 = icmp eq i32 %4996, -1
  br i1 %4997, label %4998, label %5002

4998:                                             ; preds = %4986
  %4999 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4988) #12
  %5000 = load i32*, i32** %4993, align 8
  %5001 = getelementptr inbounds i32, i32* %5000, i64 %4992
  store i32 %4999, i32* %5001, align 4
  br label %5002

5002:                                             ; preds = %4986, %4998
  %5003 = phi i32 [ %4999, %4998 ], [ %4996, %4986 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4988, i8 zeroext 14, i32 %5003) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4QfmsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5004:                                             ; preds = %2
  %5005 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5006 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5005, align 8
  %5007 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5008 = load i32, i32* %5007, align 4
  %5009 = and i32 %5008, 16777215
  %5010 = zext i32 %5009 to i64
  %5011 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5012 = load i32*, i32** %5011, align 8
  %5013 = getelementptr inbounds i32, i32* %5012, i64 %5010
  %5014 = load i32, i32* %5013, align 4
  %5015 = icmp eq i32 %5014, -1
  br i1 %5015, label %5016, label %5020

5016:                                             ; preds = %5004
  %5017 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5006) #12
  %5018 = load i32*, i32** %5011, align 8
  %5019 = getelementptr inbounds i32, i32* %5018, i64 %5010
  store i32 %5017, i32* %5019, align 4
  br label %5020

5020:                                             ; preds = %5004, %5016
  %5021 = phi i32 [ %5017, %5016 ], [ %5014, %5004 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5006, i8 zeroext 14, i32 %5021) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4PminEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5022:                                             ; preds = %2
  %5023 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5024 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5023, align 8
  %5025 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5026 = load i32, i32* %5025, align 4
  %5027 = and i32 %5026, 16777215
  %5028 = zext i32 %5027 to i64
  %5029 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5030 = load i32*, i32** %5029, align 8
  %5031 = getelementptr inbounds i32, i32* %5030, i64 %5028
  %5032 = load i32, i32* %5031, align 4
  %5033 = icmp eq i32 %5032, -1
  br i1 %5033, label %5034, label %5038

5034:                                             ; preds = %5022
  %5035 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5024) #12
  %5036 = load i32*, i32** %5029, align 8
  %5037 = getelementptr inbounds i32, i32* %5036, i64 %5028
  store i32 %5035, i32* %5037, align 4
  br label %5038

5038:                                             ; preds = %5022, %5034
  %5039 = phi i32 [ %5035, %5034 ], [ %5032, %5022 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5024, i8 zeroext 14, i32 %5039) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4PmaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5040:                                             ; preds = %2
  %5041 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5042 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5041, align 8
  %5043 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5044 = load i32, i32* %5043, align 4
  %5045 = and i32 %5044, 16777215
  %5046 = zext i32 %5045 to i64
  %5047 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5048 = load i32*, i32** %5047, align 8
  %5049 = getelementptr inbounds i32, i32* %5048, i64 %5046
  %5050 = load i32, i32* %5049, align 4
  %5051 = icmp eq i32 %5050, -1
  br i1 %5051, label %5052, label %5056

5052:                                             ; preds = %5040
  %5053 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5042) #12
  %5054 = load i32*, i32** %5047, align 8
  %5055 = getelementptr inbounds i32, i32* %5054, i64 %5046
  store i32 %5053, i32* %5055, align 4
  br label %5056

5056:                                             ; preds = %5040, %5052
  %5057 = phi i32 [ %5053, %5052 ], [ %5050, %5040 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5042, i8 zeroext 14, i32 %5057) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4CeilEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5058:                                             ; preds = %2
  %5059 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5060 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5059, align 8
  %5061 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5062 = load i32, i32* %5061, align 4
  %5063 = and i32 %5062, 16777215
  %5064 = zext i32 %5063 to i64
  %5065 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5066 = load i32*, i32** %5065, align 8
  %5067 = getelementptr inbounds i32, i32* %5066, i64 %5064
  %5068 = load i32, i32* %5067, align 4
  %5069 = icmp eq i32 %5068, -1
  br i1 %5069, label %5070, label %5074

5070:                                             ; preds = %5058
  %5071 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5060) #12
  %5072 = load i32*, i32** %5065, align 8
  %5073 = getelementptr inbounds i32, i32* %5072, i64 %5064
  store i32 %5071, i32* %5073, align 4
  br label %5074

5074:                                             ; preds = %5058, %5070
  %5075 = phi i32 [ %5071, %5070 ], [ %5068, %5058 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5060, i8 zeroext 14, i32 %5075) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitF32x4FloorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5076:                                             ; preds = %2
  %5077 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5078 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5077, align 8
  %5079 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5080 = load i32, i32* %5079, align 4
  %5081 = and i32 %5080, 16777215
  %5082 = zext i32 %5081 to i64
  %5083 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5084 = load i32*, i32** %5083, align 8
  %5085 = getelementptr inbounds i32, i32* %5084, i64 %5082
  %5086 = load i32, i32* %5085, align 4
  %5087 = icmp eq i32 %5086, -1
  br i1 %5087, label %5088, label %5092

5088:                                             ; preds = %5076
  %5089 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5078) #12
  %5090 = load i32*, i32** %5083, align 8
  %5091 = getelementptr inbounds i32, i32* %5090, i64 %5082
  store i32 %5089, i32* %5091, align 4
  br label %5092

5092:                                             ; preds = %5076, %5088
  %5093 = phi i32 [ %5089, %5088 ], [ %5086, %5076 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5078, i8 zeroext 14, i32 %5093) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitF32x4TruncEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5094:                                             ; preds = %2
  %5095 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5096 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5095, align 8
  %5097 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5098 = load i32, i32* %5097, align 4
  %5099 = and i32 %5098, 16777215
  %5100 = zext i32 %5099 to i64
  %5101 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5102 = load i32*, i32** %5101, align 8
  %5103 = getelementptr inbounds i32, i32* %5102, i64 %5100
  %5104 = load i32, i32* %5103, align 4
  %5105 = icmp eq i32 %5104, -1
  br i1 %5105, label %5106, label %5110

5106:                                             ; preds = %5094
  %5107 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5096) #12
  %5108 = load i32*, i32** %5101, align 8
  %5109 = getelementptr inbounds i32, i32* %5108, i64 %5100
  store i32 %5107, i32* %5109, align 4
  br label %5110

5110:                                             ; preds = %5094, %5106
  %5111 = phi i32 [ %5107, %5106 ], [ %5104, %5094 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5096, i8 zeroext 14, i32 %5111) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector20VisitF32x4NearestIntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5112:                                             ; preds = %2
  %5113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5114 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5113, align 8
  %5115 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5116 = load i32, i32* %5115, align 4
  %5117 = and i32 %5116, 16777215
  %5118 = zext i32 %5117 to i64
  %5119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5120 = load i32*, i32** %5119, align 8
  %5121 = getelementptr inbounds i32, i32* %5120, i64 %5118
  %5122 = load i32, i32* %5121, align 4
  %5123 = icmp eq i32 %5122, -1
  br i1 %5123, label %5124, label %5128

5124:                                             ; preds = %5112
  %5125 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5114) #12
  %5126 = load i32*, i32** %5119, align 8
  %5127 = getelementptr inbounds i32, i32* %5126, i64 %5118
  store i32 %5125, i32* %5127, align 4
  br label %5128

5128:                                             ; preds = %5112, %5124
  %5129 = phi i32 [ %5125, %5124 ], [ %5122, %5112 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5114, i8 zeroext 14, i32 %5129) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitF32x4DemoteF64x2ZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5130:                                             ; preds = %2
  %5131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5132 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5131, align 8
  %5133 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5134 = load i32, i32* %5133, align 4
  %5135 = and i32 %5134, 16777215
  %5136 = zext i32 %5135 to i64
  %5137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5138 = load i32*, i32** %5137, align 8
  %5139 = getelementptr inbounds i32, i32* %5138, i64 %5136
  %5140 = load i32, i32* %5139, align 4
  %5141 = icmp eq i32 %5140, -1
  br i1 %5141, label %5142, label %5146

5142:                                             ; preds = %5130
  %5143 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5132) #12
  %5144 = load i32*, i32** %5137, align 8
  %5145 = getelementptr inbounds i32, i32* %5144, i64 %5136
  store i32 %5143, i32* %5145, align 4
  br label %5146

5146:                                             ; preds = %5130, %5142
  %5147 = phi i32 [ %5143, %5142 ], [ %5140, %5130 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5132, i8 zeroext 14, i32 %5147) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitI64x2SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5148:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector13MarkAsSimd128EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

5149:                                             ; preds = %2
  %5150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5151 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5150, align 8
  %5152 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5153 = load i32, i32* %5152, align 4
  %5154 = and i32 %5153, 16777215
  %5155 = zext i32 %5154 to i64
  %5156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5157 = load i32*, i32** %5156, align 8
  %5158 = getelementptr inbounds i32, i32* %5157, i64 %5155
  %5159 = load i32, i32* %5158, align 4
  %5160 = icmp eq i32 %5159, -1
  br i1 %5160, label %5161, label %5165

5161:                                             ; preds = %5149
  %5162 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5151) #12
  %5163 = load i32*, i32** %5156, align 8
  %5164 = getelementptr inbounds i32, i32* %5163, i64 %5155
  store i32 %5162, i32* %5164, align 4
  br label %5165

5165:                                             ; preds = %5149, %5161
  %5166 = phi i32 [ %5162, %5161 ], [ %5159, %5149 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5151, i8 zeroext 5, i32 %5166) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI64x2ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5167:                                             ; preds = %2
  %5168 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5169 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5168, align 8
  %5170 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5171 = load i32, i32* %5170, align 4
  %5172 = and i32 %5171, 16777215
  %5173 = zext i32 %5172 to i64
  %5174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5175 = load i32*, i32** %5174, align 8
  %5176 = getelementptr inbounds i32, i32* %5175, i64 %5173
  %5177 = load i32, i32* %5176, align 4
  %5178 = icmp eq i32 %5177, -1
  br i1 %5178, label %5179, label %5183

5179:                                             ; preds = %5167
  %5180 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5169) #12
  %5181 = load i32*, i32** %5174, align 8
  %5182 = getelementptr inbounds i32, i32* %5181, i64 %5173
  store i32 %5180, i32* %5182, align 4
  br label %5183

5183:                                             ; preds = %5167, %5179
  %5184 = phi i32 [ %5180, %5179 ], [ %5177, %5167 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5169, i8 zeroext 14, i32 %5184) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI64x2ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5185:                                             ; preds = %2
  tail call void @_ZN2v88internal8compiler19InstructionSelector13MarkAsSimd128EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

5186:                                             ; preds = %2
  %5187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5188 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5187, align 8
  %5189 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5190 = load i32, i32* %5189, align 4
  %5191 = and i32 %5190, 16777215
  %5192 = zext i32 %5191 to i64
  %5193 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5194 = load i32*, i32** %5193, align 8
  %5195 = getelementptr inbounds i32, i32* %5194, i64 %5192
  %5196 = load i32, i32* %5195, align 4
  %5197 = icmp eq i32 %5196, -1
  br i1 %5197, label %5198, label %5202

5198:                                             ; preds = %5186
  %5199 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5188) #12
  %5200 = load i32*, i32** %5193, align 8
  %5201 = getelementptr inbounds i32, i32* %5200, i64 %5192
  store i32 %5199, i32* %5201, align 4
  br label %5202

5202:                                             ; preds = %5186, %5198
  %5203 = phi i32 [ %5199, %5198 ], [ %5196, %5186 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5188, i8 zeroext 14, i32 %5203) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5204:                                             ; preds = %2
  %5205 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5206 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5205, align 8
  %5207 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5208 = load i32, i32* %5207, align 4
  %5209 = and i32 %5208, 16777215
  %5210 = zext i32 %5209 to i64
  %5211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5212 = load i32*, i32** %5211, align 8
  %5213 = getelementptr inbounds i32, i32* %5212, i64 %5210
  %5214 = load i32, i32* %5213, align 4
  %5215 = icmp eq i32 %5214, -1
  br i1 %5215, label %5216, label %5220

5216:                                             ; preds = %5204
  %5217 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5206) #12
  %5218 = load i32*, i32** %5211, align 8
  %5219 = getelementptr inbounds i32, i32* %5218, i64 %5210
  store i32 %5217, i32* %5219, align 4
  br label %5220

5220:                                             ; preds = %5204, %5216
  %5221 = phi i32 [ %5217, %5216 ], [ %5214, %5204 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5206, i8 zeroext 14, i32 %5221) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5222:                                             ; preds = %2
  %5223 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5224 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5223, align 8
  %5225 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5226 = load i32, i32* %5225, align 4
  %5227 = and i32 %5226, 16777215
  %5228 = zext i32 %5227 to i64
  %5229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5230 = load i32*, i32** %5229, align 8
  %5231 = getelementptr inbounds i32, i32* %5230, i64 %5228
  %5232 = load i32, i32* %5231, align 4
  %5233 = icmp eq i32 %5232, -1
  br i1 %5233, label %5234, label %5238

5234:                                             ; preds = %5222
  %5235 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5224) #12
  %5236 = load i32*, i32** %5229, align 8
  %5237 = getelementptr inbounds i32, i32* %5236, i64 %5228
  store i32 %5235, i32* %5237, align 4
  br label %5238

5238:                                             ; preds = %5222, %5234
  %5239 = phi i32 [ %5235, %5234 ], [ %5232, %5222 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5224, i8 zeroext 14, i32 %5239) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2SConvertI32x4LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5240:                                             ; preds = %2
  %5241 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5242 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5241, align 8
  %5243 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5244 = load i32, i32* %5243, align 4
  %5245 = and i32 %5244, 16777215
  %5246 = zext i32 %5245 to i64
  %5247 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5248 = load i32*, i32** %5247, align 8
  %5249 = getelementptr inbounds i32, i32* %5248, i64 %5246
  %5250 = load i32, i32* %5249, align 4
  %5251 = icmp eq i32 %5250, -1
  br i1 %5251, label %5252, label %5256

5252:                                             ; preds = %5240
  %5253 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5242) #12
  %5254 = load i32*, i32** %5247, align 8
  %5255 = getelementptr inbounds i32, i32* %5254, i64 %5246
  store i32 %5253, i32* %5255, align 4
  br label %5256

5256:                                             ; preds = %5240, %5252
  %5257 = phi i32 [ %5253, %5252 ], [ %5250, %5240 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5242, i8 zeroext 14, i32 %5257) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitI64x2SConvertI32x4HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5258:                                             ; preds = %2
  %5259 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5260 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5259, align 8
  %5261 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5262 = load i32, i32* %5261, align 4
  %5263 = and i32 %5262, 16777215
  %5264 = zext i32 %5263 to i64
  %5265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5266 = load i32*, i32** %5265, align 8
  %5267 = getelementptr inbounds i32, i32* %5266, i64 %5264
  %5268 = load i32, i32* %5267, align 4
  %5269 = icmp eq i32 %5268, -1
  br i1 %5269, label %5270, label %5274

5270:                                             ; preds = %5258
  %5271 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5260) #12
  %5272 = load i32*, i32** %5265, align 8
  %5273 = getelementptr inbounds i32, i32* %5272, i64 %5264
  store i32 %5271, i32* %5273, align 4
  br label %5274

5274:                                             ; preds = %5258, %5270
  %5275 = phi i32 [ %5271, %5270 ], [ %5268, %5258 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5260, i8 zeroext 14, i32 %5275) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2UConvertI32x4LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5276:                                             ; preds = %2
  %5277 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5278 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5277, align 8
  %5279 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5280 = load i32, i32* %5279, align 4
  %5281 = and i32 %5280, 16777215
  %5282 = zext i32 %5281 to i64
  %5283 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5284 = load i32*, i32** %5283, align 8
  %5285 = getelementptr inbounds i32, i32* %5284, i64 %5282
  %5286 = load i32, i32* %5285, align 4
  %5287 = icmp eq i32 %5286, -1
  br i1 %5287, label %5288, label %5292

5288:                                             ; preds = %5276
  %5289 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5278) #12
  %5290 = load i32*, i32** %5283, align 8
  %5291 = getelementptr inbounds i32, i32* %5290, i64 %5282
  store i32 %5289, i32* %5291, align 4
  br label %5292

5292:                                             ; preds = %5276, %5288
  %5293 = phi i32 [ %5289, %5288 ], [ %5286, %5276 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5278, i8 zeroext 14, i32 %5293) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitI64x2UConvertI32x4HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5294:                                             ; preds = %2
  %5295 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5296 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5295, align 8
  %5297 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5298 = load i32, i32* %5297, align 4
  %5299 = and i32 %5298, 16777215
  %5300 = zext i32 %5299 to i64
  %5301 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5302 = load i32*, i32** %5301, align 8
  %5303 = getelementptr inbounds i32, i32* %5302, i64 %5300
  %5304 = load i32, i32* %5303, align 4
  %5305 = icmp eq i32 %5304, -1
  br i1 %5305, label %5306, label %5310

5306:                                             ; preds = %5294
  %5307 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5296) #12
  %5308 = load i32*, i32** %5301, align 8
  %5309 = getelementptr inbounds i32, i32* %5308, i64 %5300
  store i32 %5307, i32* %5309, align 4
  br label %5310

5310:                                             ; preds = %5294, %5306
  %5311 = phi i32 [ %5307, %5306 ], [ %5304, %5294 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5296, i8 zeroext 4, i32 %5311) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI64x2BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5312:                                             ; preds = %2
  %5313 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5314 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5313, align 8
  %5315 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5316 = load i32, i32* %5315, align 4
  %5317 = and i32 %5316, 16777215
  %5318 = zext i32 %5317 to i64
  %5319 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5320 = load i32*, i32** %5319, align 8
  %5321 = getelementptr inbounds i32, i32* %5320, i64 %5318
  %5322 = load i32, i32* %5321, align 4
  %5323 = icmp eq i32 %5322, -1
  br i1 %5323, label %5324, label %5328

5324:                                             ; preds = %5312
  %5325 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5314) #12
  %5326 = load i32*, i32** %5319, align 8
  %5327 = getelementptr inbounds i32, i32* %5326, i64 %5318
  store i32 %5325, i32* %5327, align 4
  br label %5328

5328:                                             ; preds = %5312, %5324
  %5329 = phi i32 [ %5325, %5324 ], [ %5322, %5312 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5314, i8 zeroext 14, i32 %5329) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5330:                                             ; preds = %2
  %5331 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5332 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5331, align 8
  %5333 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5334 = load i32, i32* %5333, align 4
  %5335 = and i32 %5334, 16777215
  %5336 = zext i32 %5335 to i64
  %5337 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5338 = load i32*, i32** %5337, align 8
  %5339 = getelementptr inbounds i32, i32* %5338, i64 %5336
  %5340 = load i32, i32* %5339, align 4
  %5341 = icmp eq i32 %5340, -1
  br i1 %5341, label %5342, label %5346

5342:                                             ; preds = %5330
  %5343 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5332) #12
  %5344 = load i32*, i32** %5337, align 8
  %5345 = getelementptr inbounds i32, i32* %5344, i64 %5336
  store i32 %5343, i32* %5345, align 4
  br label %5346

5346:                                             ; preds = %5330, %5342
  %5347 = phi i32 [ %5343, %5342 ], [ %5340, %5330 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5332, i8 zeroext 14, i32 %5347) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI64x2ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5348:                                             ; preds = %2
  %5349 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5350 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5349, align 8
  %5351 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5352 = load i32, i32* %5351, align 4
  %5353 = and i32 %5352, 16777215
  %5354 = zext i32 %5353 to i64
  %5355 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5356 = load i32*, i32** %5355, align 8
  %5357 = getelementptr inbounds i32, i32* %5356, i64 %5354
  %5358 = load i32, i32* %5357, align 4
  %5359 = icmp eq i32 %5358, -1
  br i1 %5359, label %5360, label %5364

5360:                                             ; preds = %5348
  %5361 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5350) #12
  %5362 = load i32*, i32** %5355, align 8
  %5363 = getelementptr inbounds i32, i32* %5362, i64 %5354
  store i32 %5361, i32* %5363, align 4
  br label %5364

5364:                                             ; preds = %5348, %5360
  %5365 = phi i32 [ %5361, %5360 ], [ %5358, %5348 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5350, i8 zeroext 14, i32 %5365) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5366:                                             ; preds = %2
  %5367 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5368 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5367, align 8
  %5369 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5370 = load i32, i32* %5369, align 4
  %5371 = and i32 %5370, 16777215
  %5372 = zext i32 %5371 to i64
  %5373 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5374 = load i32*, i32** %5373, align 8
  %5375 = getelementptr inbounds i32, i32* %5374, i64 %5372
  %5376 = load i32, i32* %5375, align 4
  %5377 = icmp eq i32 %5376, -1
  br i1 %5377, label %5378, label %5382

5378:                                             ; preds = %5366
  %5379 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5368) #12
  %5380 = load i32*, i32** %5373, align 8
  %5381 = getelementptr inbounds i32, i32* %5380, i64 %5372
  store i32 %5379, i32* %5381, align 4
  br label %5382

5382:                                             ; preds = %5366, %5378
  %5383 = phi i32 [ %5379, %5378 ], [ %5376, %5366 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5368, i8 zeroext 14, i32 %5383) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5384:                                             ; preds = %2
  %5385 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5386 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5385, align 8
  %5387 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5388 = load i32, i32* %5387, align 4
  %5389 = and i32 %5388, 16777215
  %5390 = zext i32 %5389 to i64
  %5391 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5392 = load i32*, i32** %5391, align 8
  %5393 = getelementptr inbounds i32, i32* %5392, i64 %5390
  %5394 = load i32, i32* %5393, align 4
  %5395 = icmp eq i32 %5394, -1
  br i1 %5395, label %5396, label %5400

5396:                                             ; preds = %5384
  %5397 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5386) #12
  %5398 = load i32*, i32** %5391, align 8
  %5399 = getelementptr inbounds i32, i32* %5398, i64 %5390
  store i32 %5397, i32* %5399, align 4
  br label %5400

5400:                                             ; preds = %5384, %5396
  %5401 = phi i32 [ %5397, %5396 ], [ %5394, %5384 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5386, i8 zeroext 14, i32 %5401) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5402:                                             ; preds = %2
  %5403 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5404 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5403, align 8
  %5405 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5406 = load i32, i32* %5405, align 4
  %5407 = and i32 %5406, 16777215
  %5408 = zext i32 %5407 to i64
  %5409 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5410 = load i32*, i32** %5409, align 8
  %5411 = getelementptr inbounds i32, i32* %5410, i64 %5408
  %5412 = load i32, i32* %5411, align 4
  %5413 = icmp eq i32 %5412, -1
  br i1 %5413, label %5414, label %5418

5414:                                             ; preds = %5402
  %5415 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5404) #12
  %5416 = load i32*, i32** %5409, align 8
  %5417 = getelementptr inbounds i32, i32* %5416, i64 %5408
  store i32 %5415, i32* %5417, align 4
  br label %5418

5418:                                             ; preds = %5402, %5414
  %5419 = phi i32 [ %5415, %5414 ], [ %5412, %5402 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5404, i8 zeroext 14, i32 %5419) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI64x2EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5420:                                             ; preds = %2
  %5421 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5422 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5421, align 8
  %5423 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5424 = load i32, i32* %5423, align 4
  %5425 = and i32 %5424, 16777215
  %5426 = zext i32 %5425 to i64
  %5427 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5428 = load i32*, i32** %5427, align 8
  %5429 = getelementptr inbounds i32, i32* %5428, i64 %5426
  %5430 = load i32, i32* %5429, align 4
  %5431 = icmp eq i32 %5430, -1
  br i1 %5431, label %5432, label %5436

5432:                                             ; preds = %5420
  %5433 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5422) #12
  %5434 = load i32*, i32** %5427, align 8
  %5435 = getelementptr inbounds i32, i32* %5434, i64 %5426
  store i32 %5433, i32* %5435, align 4
  br label %5436

5436:                                             ; preds = %5420, %5432
  %5437 = phi i32 [ %5433, %5432 ], [ %5430, %5420 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5422, i8 zeroext 14, i32 %5437) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI64x2NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5438:                                             ; preds = %2
  %5439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5440 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5439, align 8
  %5441 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5442 = load i32, i32* %5441, align 4
  %5443 = and i32 %5442, 16777215
  %5444 = zext i32 %5443 to i64
  %5445 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5446 = load i32*, i32** %5445, align 8
  %5447 = getelementptr inbounds i32, i32* %5446, i64 %5444
  %5448 = load i32, i32* %5447, align 4
  %5449 = icmp eq i32 %5448, -1
  br i1 %5449, label %5450, label %5454

5450:                                             ; preds = %5438
  %5451 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5440) #12
  %5452 = load i32*, i32** %5445, align 8
  %5453 = getelementptr inbounds i32, i32* %5452, i64 %5444
  store i32 %5451, i32* %5453, align 4
  br label %5454

5454:                                             ; preds = %5438, %5450
  %5455 = phi i32 [ %5451, %5450 ], [ %5448, %5438 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5440, i8 zeroext 14, i32 %5455) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5456:                                             ; preds = %2
  %5457 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5458 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5457, align 8
  %5459 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5460 = load i32, i32* %5459, align 4
  %5461 = and i32 %5460, 16777215
  %5462 = zext i32 %5461 to i64
  %5463 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5464 = load i32*, i32** %5463, align 8
  %5465 = getelementptr inbounds i32, i32* %5464, i64 %5462
  %5466 = load i32, i32* %5465, align 4
  %5467 = icmp eq i32 %5466, -1
  br i1 %5467, label %5468, label %5472

5468:                                             ; preds = %5456
  %5469 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5458) #12
  %5470 = load i32*, i32** %5463, align 8
  %5471 = getelementptr inbounds i32, i32* %5470, i64 %5462
  store i32 %5469, i32* %5471, align 4
  br label %5472

5472:                                             ; preds = %5456, %5468
  %5473 = phi i32 [ %5469, %5468 ], [ %5466, %5456 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5458, i8 zeroext 14, i32 %5473) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5474:                                             ; preds = %2
  %5475 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5476 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5475, align 8
  %5477 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5478 = load i32, i32* %5477, align 4
  %5479 = and i32 %5478, 16777215
  %5480 = zext i32 %5479 to i64
  %5481 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5482 = load i32*, i32** %5481, align 8
  %5483 = getelementptr inbounds i32, i32* %5482, i64 %5480
  %5484 = load i32, i32* %5483, align 4
  %5485 = icmp eq i32 %5484, -1
  br i1 %5485, label %5486, label %5490

5486:                                             ; preds = %5474
  %5487 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5476) #12
  %5488 = load i32*, i32** %5481, align 8
  %5489 = getelementptr inbounds i32, i32* %5488, i64 %5480
  store i32 %5487, i32* %5489, align 4
  br label %5490

5490:                                             ; preds = %5474, %5486
  %5491 = phi i32 [ %5487, %5486 ], [ %5484, %5474 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5476, i8 zeroext 14, i32 %5491) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI64x2ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5492:                                             ; preds = %2
  %5493 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5494 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5493, align 8
  %5495 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5496 = load i32, i32* %5495, align 4
  %5497 = and i32 %5496, 16777215
  %5498 = zext i32 %5497 to i64
  %5499 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5500 = load i32*, i32** %5499, align 8
  %5501 = getelementptr inbounds i32, i32* %5500, i64 %5498
  %5502 = load i32, i32* %5501, align 4
  %5503 = icmp eq i32 %5502, -1
  br i1 %5503, label %5504, label %5508

5504:                                             ; preds = %5492
  %5505 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5494) #12
  %5506 = load i32*, i32** %5499, align 8
  %5507 = getelementptr inbounds i32, i32* %5506, i64 %5498
  store i32 %5505, i32* %5507, align 4
  br label %5508

5508:                                             ; preds = %5492, %5504
  %5509 = phi i32 [ %5505, %5504 ], [ %5502, %5492 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5494, i8 zeroext 14, i32 %5509) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitI64x2ExtMulLowI32x4SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5510:                                             ; preds = %2
  %5511 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5512 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5511, align 8
  %5513 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5514 = load i32, i32* %5513, align 4
  %5515 = and i32 %5514, 16777215
  %5516 = zext i32 %5515 to i64
  %5517 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5518 = load i32*, i32** %5517, align 8
  %5519 = getelementptr inbounds i32, i32* %5518, i64 %5516
  %5520 = load i32, i32* %5519, align 4
  %5521 = icmp eq i32 %5520, -1
  br i1 %5521, label %5522, label %5526

5522:                                             ; preds = %5510
  %5523 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5512) #12
  %5524 = load i32*, i32** %5517, align 8
  %5525 = getelementptr inbounds i32, i32* %5524, i64 %5516
  store i32 %5523, i32* %5525, align 4
  br label %5526

5526:                                             ; preds = %5510, %5522
  %5527 = phi i32 [ %5523, %5522 ], [ %5520, %5510 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5512, i8 zeroext 14, i32 %5527) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2ExtMulHighI32x4SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5528:                                             ; preds = %2
  %5529 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5530 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5529, align 8
  %5531 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5532 = load i32, i32* %5531, align 4
  %5533 = and i32 %5532, 16777215
  %5534 = zext i32 %5533 to i64
  %5535 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5536 = load i32*, i32** %5535, align 8
  %5537 = getelementptr inbounds i32, i32* %5536, i64 %5534
  %5538 = load i32, i32* %5537, align 4
  %5539 = icmp eq i32 %5538, -1
  br i1 %5539, label %5540, label %5544

5540:                                             ; preds = %5528
  %5541 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5530) #12
  %5542 = load i32*, i32** %5535, align 8
  %5543 = getelementptr inbounds i32, i32* %5542, i64 %5534
  store i32 %5541, i32* %5543, align 4
  br label %5544

5544:                                             ; preds = %5528, %5540
  %5545 = phi i32 [ %5541, %5540 ], [ %5538, %5528 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5530, i8 zeroext 14, i32 %5545) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitI64x2ExtMulLowI32x4UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5546:                                             ; preds = %2
  %5547 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5548 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5547, align 8
  %5549 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5550 = load i32, i32* %5549, align 4
  %5551 = and i32 %5550, 16777215
  %5552 = zext i32 %5551 to i64
  %5553 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5554 = load i32*, i32** %5553, align 8
  %5555 = getelementptr inbounds i32, i32* %5554, i64 %5552
  %5556 = load i32, i32* %5555, align 4
  %5557 = icmp eq i32 %5556, -1
  br i1 %5557, label %5558, label %5562

5558:                                             ; preds = %5546
  %5559 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5548) #12
  %5560 = load i32*, i32** %5553, align 8
  %5561 = getelementptr inbounds i32, i32* %5560, i64 %5552
  store i32 %5559, i32* %5561, align 4
  br label %5562

5562:                                             ; preds = %5546, %5558
  %5563 = phi i32 [ %5559, %5558 ], [ %5556, %5546 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5548, i8 zeroext 14, i32 %5563) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2ExtMulHighI32x4UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5564:                                             ; preds = %2
  %5565 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5566 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5565, align 8
  %5567 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5568 = load i32, i32* %5567, align 4
  %5569 = and i32 %5568, 16777215
  %5570 = zext i32 %5569 to i64
  %5571 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5572 = load i32*, i32** %5571, align 8
  %5573 = getelementptr inbounds i32, i32* %5572, i64 %5570
  %5574 = load i32, i32* %5573, align 4
  %5575 = icmp eq i32 %5574, -1
  br i1 %5575, label %5576, label %5580

5576:                                             ; preds = %5564
  %5577 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5566) #12
  %5578 = load i32*, i32** %5571, align 8
  %5579 = getelementptr inbounds i32, i32* %5578, i64 %5570
  store i32 %5577, i32* %5579, align 4
  br label %5580

5580:                                             ; preds = %5564, %5576
  %5581 = phi i32 [ %5577, %5576 ], [ %5574, %5564 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5566, i8 zeroext 14, i32 %5581) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitI32x4SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5582:                                             ; preds = %2
  %5583 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5584 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5583, align 8
  %5585 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5586 = load i32, i32* %5585, align 4
  %5587 = and i32 %5586, 16777215
  %5588 = zext i32 %5587 to i64
  %5589 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5590 = load i32*, i32** %5589, align 8
  %5591 = getelementptr inbounds i32, i32* %5590, i64 %5588
  %5592 = load i32, i32* %5591, align 4
  %5593 = icmp eq i32 %5592, -1
  br i1 %5593, label %5594, label %5598

5594:                                             ; preds = %5582
  %5595 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5584) #12
  %5596 = load i32*, i32** %5589, align 8
  %5597 = getelementptr inbounds i32, i32* %5596, i64 %5588
  store i32 %5595, i32* %5597, align 4
  br label %5598

5598:                                             ; preds = %5582, %5594
  %5599 = phi i32 [ %5595, %5594 ], [ %5592, %5582 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5584, i8 zeroext 4, i32 %5599) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI32x4ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5600:                                             ; preds = %2
  %5601 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5602 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5601, align 8
  %5603 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5604 = load i32, i32* %5603, align 4
  %5605 = and i32 %5604, 16777215
  %5606 = zext i32 %5605 to i64
  %5607 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5608 = load i32*, i32** %5607, align 8
  %5609 = getelementptr inbounds i32, i32* %5608, i64 %5606
  %5610 = load i32, i32* %5609, align 4
  %5611 = icmp eq i32 %5610, -1
  br i1 %5611, label %5612, label %5616

5612:                                             ; preds = %5600
  %5613 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5602) #12
  %5614 = load i32*, i32** %5607, align 8
  %5615 = getelementptr inbounds i32, i32* %5614, i64 %5606
  store i32 %5613, i32* %5615, align 4
  br label %5616

5616:                                             ; preds = %5600, %5612
  %5617 = phi i32 [ %5613, %5612 ], [ %5610, %5600 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5602, i8 zeroext 14, i32 %5617) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI32x4ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5618:                                             ; preds = %2
  %5619 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5620 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5619, align 8
  %5621 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5622 = load i32, i32* %5621, align 4
  %5623 = and i32 %5622, 16777215
  %5624 = zext i32 %5623 to i64
  %5625 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5626 = load i32*, i32** %5625, align 8
  %5627 = getelementptr inbounds i32, i32* %5626, i64 %5624
  %5628 = load i32, i32* %5627, align 4
  %5629 = icmp eq i32 %5628, -1
  br i1 %5629, label %5630, label %5634

5630:                                             ; preds = %5618
  %5631 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5620) #12
  %5632 = load i32*, i32** %5625, align 8
  %5633 = getelementptr inbounds i32, i32* %5632, i64 %5624
  store i32 %5631, i32* %5633, align 4
  br label %5634

5634:                                             ; preds = %5618, %5630
  %5635 = phi i32 [ %5631, %5630 ], [ %5628, %5618 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5620, i8 zeroext 14, i32 %5635) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitI32x4SConvertF32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5636:                                             ; preds = %2
  %5637 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5638 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5637, align 8
  %5639 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5640 = load i32, i32* %5639, align 4
  %5641 = and i32 %5640, 16777215
  %5642 = zext i32 %5641 to i64
  %5643 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5644 = load i32*, i32** %5643, align 8
  %5645 = getelementptr inbounds i32, i32* %5644, i64 %5642
  %5646 = load i32, i32* %5645, align 4
  %5647 = icmp eq i32 %5646, -1
  br i1 %5647, label %5648, label %5652

5648:                                             ; preds = %5636
  %5649 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5638) #12
  %5650 = load i32*, i32** %5643, align 8
  %5651 = getelementptr inbounds i32, i32* %5650, i64 %5642
  store i32 %5649, i32* %5651, align 4
  br label %5652

5652:                                             ; preds = %5636, %5648
  %5653 = phi i32 [ %5649, %5648 ], [ %5646, %5636 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5638, i8 zeroext 14, i32 %5653) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4SConvertI16x8LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5654:                                             ; preds = %2
  %5655 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5656 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5655, align 8
  %5657 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5658 = load i32, i32* %5657, align 4
  %5659 = and i32 %5658, 16777215
  %5660 = zext i32 %5659 to i64
  %5661 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5662 = load i32*, i32** %5661, align 8
  %5663 = getelementptr inbounds i32, i32* %5662, i64 %5660
  %5664 = load i32, i32* %5663, align 4
  %5665 = icmp eq i32 %5664, -1
  br i1 %5665, label %5666, label %5670

5666:                                             ; preds = %5654
  %5667 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5656) #12
  %5668 = load i32*, i32** %5661, align 8
  %5669 = getelementptr inbounds i32, i32* %5668, i64 %5660
  store i32 %5667, i32* %5669, align 4
  br label %5670

5670:                                             ; preds = %5654, %5666
  %5671 = phi i32 [ %5667, %5666 ], [ %5664, %5654 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5656, i8 zeroext 14, i32 %5671) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitI32x4SConvertI16x8HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5672:                                             ; preds = %2
  %5673 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5674 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5673, align 8
  %5675 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5676 = load i32, i32* %5675, align 4
  %5677 = and i32 %5676, 16777215
  %5678 = zext i32 %5677 to i64
  %5679 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5680 = load i32*, i32** %5679, align 8
  %5681 = getelementptr inbounds i32, i32* %5680, i64 %5678
  %5682 = load i32, i32* %5681, align 4
  %5683 = icmp eq i32 %5682, -1
  br i1 %5683, label %5684, label %5688

5684:                                             ; preds = %5672
  %5685 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5674) #12
  %5686 = load i32*, i32** %5679, align 8
  %5687 = getelementptr inbounds i32, i32* %5686, i64 %5678
  store i32 %5685, i32* %5687, align 4
  br label %5688

5688:                                             ; preds = %5672, %5684
  %5689 = phi i32 [ %5685, %5684 ], [ %5682, %5672 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5674, i8 zeroext 14, i32 %5689) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5690:                                             ; preds = %2
  %5691 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5692 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5691, align 8
  %5693 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5694 = load i32, i32* %5693, align 4
  %5695 = and i32 %5694, 16777215
  %5696 = zext i32 %5695 to i64
  %5697 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5698 = load i32*, i32** %5697, align 8
  %5699 = getelementptr inbounds i32, i32* %5698, i64 %5696
  %5700 = load i32, i32* %5699, align 4
  %5701 = icmp eq i32 %5700, -1
  br i1 %5701, label %5702, label %5706

5702:                                             ; preds = %5690
  %5703 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5692) #12
  %5704 = load i32*, i32** %5697, align 8
  %5705 = getelementptr inbounds i32, i32* %5704, i64 %5696
  store i32 %5703, i32* %5705, align 4
  br label %5706

5706:                                             ; preds = %5690, %5702
  %5707 = phi i32 [ %5703, %5702 ], [ %5700, %5690 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5692, i8 zeroext 14, i32 %5707) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5708:                                             ; preds = %2
  %5709 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5710 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5709, align 8
  %5711 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5712 = load i32, i32* %5711, align 4
  %5713 = and i32 %5712, 16777215
  %5714 = zext i32 %5713 to i64
  %5715 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5716 = load i32*, i32** %5715, align 8
  %5717 = getelementptr inbounds i32, i32* %5716, i64 %5714
  %5718 = load i32, i32* %5717, align 4
  %5719 = icmp eq i32 %5718, -1
  br i1 %5719, label %5720, label %5724

5720:                                             ; preds = %5708
  %5721 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5710) #12
  %5722 = load i32*, i32** %5715, align 8
  %5723 = getelementptr inbounds i32, i32* %5722, i64 %5714
  store i32 %5721, i32* %5723, align 4
  br label %5724

5724:                                             ; preds = %5708, %5720
  %5725 = phi i32 [ %5721, %5720 ], [ %5718, %5708 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5710, i8 zeroext 14, i32 %5725) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5726:                                             ; preds = %2
  %5727 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5728 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5727, align 8
  %5729 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5730 = load i32, i32* %5729, align 4
  %5731 = and i32 %5730, 16777215
  %5732 = zext i32 %5731 to i64
  %5733 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5734 = load i32*, i32** %5733, align 8
  %5735 = getelementptr inbounds i32, i32* %5734, i64 %5732
  %5736 = load i32, i32* %5735, align 4
  %5737 = icmp eq i32 %5736, -1
  br i1 %5737, label %5738, label %5742

5738:                                             ; preds = %5726
  %5739 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5728) #12
  %5740 = load i32*, i32** %5733, align 8
  %5741 = getelementptr inbounds i32, i32* %5740, i64 %5732
  store i32 %5739, i32* %5741, align 4
  br label %5742

5742:                                             ; preds = %5726, %5738
  %5743 = phi i32 [ %5739, %5738 ], [ %5736, %5726 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5728, i8 zeroext 14, i32 %5743) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5744:                                             ; preds = %2
  %5745 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5746 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5745, align 8
  %5747 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5748 = load i32, i32* %5747, align 4
  %5749 = and i32 %5748, 16777215
  %5750 = zext i32 %5749 to i64
  %5751 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5752 = load i32*, i32** %5751, align 8
  %5753 = getelementptr inbounds i32, i32* %5752, i64 %5750
  %5754 = load i32, i32* %5753, align 4
  %5755 = icmp eq i32 %5754, -1
  br i1 %5755, label %5756, label %5760

5756:                                             ; preds = %5744
  %5757 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5746) #12
  %5758 = load i32*, i32** %5751, align 8
  %5759 = getelementptr inbounds i32, i32* %5758, i64 %5750
  store i32 %5757, i32* %5759, align 4
  br label %5760

5760:                                             ; preds = %5744, %5756
  %5761 = phi i32 [ %5757, %5756 ], [ %5754, %5744 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5746, i8 zeroext 14, i32 %5761) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5762:                                             ; preds = %2
  %5763 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5764 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5763, align 8
  %5765 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5766 = load i32, i32* %5765, align 4
  %5767 = and i32 %5766, 16777215
  %5768 = zext i32 %5767 to i64
  %5769 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5770 = load i32*, i32** %5769, align 8
  %5771 = getelementptr inbounds i32, i32* %5770, i64 %5768
  %5772 = load i32, i32* %5771, align 4
  %5773 = icmp eq i32 %5772, -1
  br i1 %5773, label %5774, label %5778

5774:                                             ; preds = %5762
  %5775 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5764) #12
  %5776 = load i32*, i32** %5769, align 8
  %5777 = getelementptr inbounds i32, i32* %5776, i64 %5768
  store i32 %5775, i32* %5777, align 4
  br label %5778

5778:                                             ; preds = %5762, %5774
  %5779 = phi i32 [ %5775, %5774 ], [ %5772, %5762 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5764, i8 zeroext 14, i32 %5779) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5780:                                             ; preds = %2
  %5781 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5782 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5781, align 8
  %5783 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5784 = load i32, i32* %5783, align 4
  %5785 = and i32 %5784, 16777215
  %5786 = zext i32 %5785 to i64
  %5787 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5788 = load i32*, i32** %5787, align 8
  %5789 = getelementptr inbounds i32, i32* %5788, i64 %5786
  %5790 = load i32, i32* %5789, align 4
  %5791 = icmp eq i32 %5790, -1
  br i1 %5791, label %5792, label %5796

5792:                                             ; preds = %5780
  %5793 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5782) #12
  %5794 = load i32*, i32** %5787, align 8
  %5795 = getelementptr inbounds i32, i32* %5794, i64 %5786
  store i32 %5793, i32* %5795, align 4
  br label %5796

5796:                                             ; preds = %5780, %5792
  %5797 = phi i32 [ %5793, %5792 ], [ %5790, %5780 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5782, i8 zeroext 14, i32 %5797) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MinSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5798:                                             ; preds = %2
  %5799 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5800 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5799, align 8
  %5801 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5802 = load i32, i32* %5801, align 4
  %5803 = and i32 %5802, 16777215
  %5804 = zext i32 %5803 to i64
  %5805 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5806 = load i32*, i32** %5805, align 8
  %5807 = getelementptr inbounds i32, i32* %5806, i64 %5804
  %5808 = load i32, i32* %5807, align 4
  %5809 = icmp eq i32 %5808, -1
  br i1 %5809, label %5810, label %5814

5810:                                             ; preds = %5798
  %5811 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5800) #12
  %5812 = load i32*, i32** %5805, align 8
  %5813 = getelementptr inbounds i32, i32* %5812, i64 %5804
  store i32 %5811, i32* %5813, align 4
  br label %5814

5814:                                             ; preds = %5798, %5810
  %5815 = phi i32 [ %5811, %5810 ], [ %5808, %5798 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5800, i8 zeroext 14, i32 %5815) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MaxSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5816:                                             ; preds = %2
  %5817 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5818 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5817, align 8
  %5819 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5820 = load i32, i32* %5819, align 4
  %5821 = and i32 %5820, 16777215
  %5822 = zext i32 %5821 to i64
  %5823 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5824 = load i32*, i32** %5823, align 8
  %5825 = getelementptr inbounds i32, i32* %5824, i64 %5822
  %5826 = load i32, i32* %5825, align 4
  %5827 = icmp eq i32 %5826, -1
  br i1 %5827, label %5828, label %5832

5828:                                             ; preds = %5816
  %5829 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5818) #12
  %5830 = load i32*, i32** %5823, align 8
  %5831 = getelementptr inbounds i32, i32* %5830, i64 %5822
  store i32 %5829, i32* %5831, align 4
  br label %5832

5832:                                             ; preds = %5816, %5828
  %5833 = phi i32 [ %5829, %5828 ], [ %5826, %5816 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5818, i8 zeroext 14, i32 %5833) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI32x4EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5834:                                             ; preds = %2
  %5835 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5836 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5835, align 8
  %5837 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5838 = load i32, i32* %5837, align 4
  %5839 = and i32 %5838, 16777215
  %5840 = zext i32 %5839 to i64
  %5841 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5842 = load i32*, i32** %5841, align 8
  %5843 = getelementptr inbounds i32, i32* %5842, i64 %5840
  %5844 = load i32, i32* %5843, align 4
  %5845 = icmp eq i32 %5844, -1
  br i1 %5845, label %5846, label %5850

5846:                                             ; preds = %5834
  %5847 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5836) #12
  %5848 = load i32*, i32** %5841, align 8
  %5849 = getelementptr inbounds i32, i32* %5848, i64 %5840
  store i32 %5847, i32* %5849, align 4
  br label %5850

5850:                                             ; preds = %5834, %5846
  %5851 = phi i32 [ %5847, %5846 ], [ %5844, %5834 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5836, i8 zeroext 14, i32 %5851) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI32x4NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5852:                                             ; preds = %2
  %5853 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5854 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5853, align 8
  %5855 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5856 = load i32, i32* %5855, align 4
  %5857 = and i32 %5856, 16777215
  %5858 = zext i32 %5857 to i64
  %5859 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5860 = load i32*, i32** %5859, align 8
  %5861 = getelementptr inbounds i32, i32* %5860, i64 %5858
  %5862 = load i32, i32* %5861, align 4
  %5863 = icmp eq i32 %5862, -1
  br i1 %5863, label %5864, label %5868

5864:                                             ; preds = %5852
  %5865 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5854) #12
  %5866 = load i32*, i32** %5859, align 8
  %5867 = getelementptr inbounds i32, i32* %5866, i64 %5858
  store i32 %5865, i32* %5867, align 4
  br label %5868

5868:                                             ; preds = %5852, %5864
  %5869 = phi i32 [ %5865, %5864 ], [ %5862, %5852 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5854, i8 zeroext 14, i32 %5869) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5870:                                             ; preds = %2
  %5871 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5872 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5871, align 8
  %5873 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5874 = load i32, i32* %5873, align 4
  %5875 = and i32 %5874, 16777215
  %5876 = zext i32 %5875 to i64
  %5877 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5878 = load i32*, i32** %5877, align 8
  %5879 = getelementptr inbounds i32, i32* %5878, i64 %5876
  %5880 = load i32, i32* %5879, align 4
  %5881 = icmp eq i32 %5880, -1
  br i1 %5881, label %5882, label %5886

5882:                                             ; preds = %5870
  %5883 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5872) #12
  %5884 = load i32*, i32** %5877, align 8
  %5885 = getelementptr inbounds i32, i32* %5884, i64 %5876
  store i32 %5883, i32* %5885, align 4
  br label %5886

5886:                                             ; preds = %5870, %5882
  %5887 = phi i32 [ %5883, %5882 ], [ %5880, %5870 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5872, i8 zeroext 14, i32 %5887) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5888:                                             ; preds = %2
  %5889 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5890 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5889, align 8
  %5891 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5892 = load i32, i32* %5891, align 4
  %5893 = and i32 %5892, 16777215
  %5894 = zext i32 %5893 to i64
  %5895 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5896 = load i32*, i32** %5895, align 8
  %5897 = getelementptr inbounds i32, i32* %5896, i64 %5894
  %5898 = load i32, i32* %5897, align 4
  %5899 = icmp eq i32 %5898, -1
  br i1 %5899, label %5900, label %5904

5900:                                             ; preds = %5888
  %5901 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5890) #12
  %5902 = load i32*, i32** %5895, align 8
  %5903 = getelementptr inbounds i32, i32* %5902, i64 %5894
  store i32 %5901, i32* %5903, align 4
  br label %5904

5904:                                             ; preds = %5888, %5900
  %5905 = phi i32 [ %5901, %5900 ], [ %5898, %5888 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5890, i8 zeroext 14, i32 %5905) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitI32x4UConvertF32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5906:                                             ; preds = %2
  %5907 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5908 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5907, align 8
  %5909 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5910 = load i32, i32* %5909, align 4
  %5911 = and i32 %5910, 16777215
  %5912 = zext i32 %5911 to i64
  %5913 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5914 = load i32*, i32** %5913, align 8
  %5915 = getelementptr inbounds i32, i32* %5914, i64 %5912
  %5916 = load i32, i32* %5915, align 4
  %5917 = icmp eq i32 %5916, -1
  br i1 %5917, label %5918, label %5922

5918:                                             ; preds = %5906
  %5919 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5908) #12
  %5920 = load i32*, i32** %5913, align 8
  %5921 = getelementptr inbounds i32, i32* %5920, i64 %5912
  store i32 %5919, i32* %5921, align 4
  br label %5922

5922:                                             ; preds = %5906, %5918
  %5923 = phi i32 [ %5919, %5918 ], [ %5916, %5906 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5908, i8 zeroext 14, i32 %5923) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4UConvertI16x8LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5924:                                             ; preds = %2
  %5925 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5926 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5925, align 8
  %5927 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5928 = load i32, i32* %5927, align 4
  %5929 = and i32 %5928, 16777215
  %5930 = zext i32 %5929 to i64
  %5931 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5932 = load i32*, i32** %5931, align 8
  %5933 = getelementptr inbounds i32, i32* %5932, i64 %5930
  %5934 = load i32, i32* %5933, align 4
  %5935 = icmp eq i32 %5934, -1
  br i1 %5935, label %5936, label %5940

5936:                                             ; preds = %5924
  %5937 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5926) #12
  %5938 = load i32*, i32** %5931, align 8
  %5939 = getelementptr inbounds i32, i32* %5938, i64 %5930
  store i32 %5937, i32* %5939, align 4
  br label %5940

5940:                                             ; preds = %5924, %5936
  %5941 = phi i32 [ %5937, %5936 ], [ %5934, %5924 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5926, i8 zeroext 14, i32 %5941) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitI32x4UConvertI16x8HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5942:                                             ; preds = %2
  %5943 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5944 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5943, align 8
  %5945 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5946 = load i32, i32* %5945, align 4
  %5947 = and i32 %5946, 16777215
  %5948 = zext i32 %5947 to i64
  %5949 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5950 = load i32*, i32** %5949, align 8
  %5951 = getelementptr inbounds i32, i32* %5950, i64 %5948
  %5952 = load i32, i32* %5951, align 4
  %5953 = icmp eq i32 %5952, -1
  br i1 %5953, label %5954, label %5958

5954:                                             ; preds = %5942
  %5955 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5944) #12
  %5956 = load i32*, i32** %5949, align 8
  %5957 = getelementptr inbounds i32, i32* %5956, i64 %5948
  store i32 %5955, i32* %5957, align 4
  br label %5958

5958:                                             ; preds = %5942, %5954
  %5959 = phi i32 [ %5955, %5954 ], [ %5952, %5942 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5944, i8 zeroext 14, i32 %5959) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5960:                                             ; preds = %2
  %5961 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5962 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5961, align 8
  %5963 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5964 = load i32, i32* %5963, align 4
  %5965 = and i32 %5964, 16777215
  %5966 = zext i32 %5965 to i64
  %5967 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5968 = load i32*, i32** %5967, align 8
  %5969 = getelementptr inbounds i32, i32* %5968, i64 %5966
  %5970 = load i32, i32* %5969, align 4
  %5971 = icmp eq i32 %5970, -1
  br i1 %5971, label %5972, label %5976

5972:                                             ; preds = %5960
  %5973 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5962) #12
  %5974 = load i32*, i32** %5967, align 8
  %5975 = getelementptr inbounds i32, i32* %5974, i64 %5966
  store i32 %5973, i32* %5975, align 4
  br label %5976

5976:                                             ; preds = %5960, %5972
  %5977 = phi i32 [ %5973, %5972 ], [ %5970, %5960 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5962, i8 zeroext 14, i32 %5977) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MinUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5978:                                             ; preds = %2
  %5979 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5980 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5979, align 8
  %5981 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5982 = load i32, i32* %5981, align 4
  %5983 = and i32 %5982, 16777215
  %5984 = zext i32 %5983 to i64
  %5985 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5986 = load i32*, i32** %5985, align 8
  %5987 = getelementptr inbounds i32, i32* %5986, i64 %5984
  %5988 = load i32, i32* %5987, align 4
  %5989 = icmp eq i32 %5988, -1
  br i1 %5989, label %5990, label %5994

5990:                                             ; preds = %5978
  %5991 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5980) #12
  %5992 = load i32*, i32** %5985, align 8
  %5993 = getelementptr inbounds i32, i32* %5992, i64 %5984
  store i32 %5991, i32* %5993, align 4
  br label %5994

5994:                                             ; preds = %5978, %5990
  %5995 = phi i32 [ %5991, %5990 ], [ %5988, %5978 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5980, i8 zeroext 14, i32 %5995) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MaxUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

5996:                                             ; preds = %2
  %5997 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %5998 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5997, align 8
  %5999 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6000 = load i32, i32* %5999, align 4
  %6001 = and i32 %6000, 16777215
  %6002 = zext i32 %6001 to i64
  %6003 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6004 = load i32*, i32** %6003, align 8
  %6005 = getelementptr inbounds i32, i32* %6004, i64 %6002
  %6006 = load i32, i32* %6005, align 4
  %6007 = icmp eq i32 %6006, -1
  br i1 %6007, label %6008, label %6012

6008:                                             ; preds = %5996
  %6009 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %5998) #12
  %6010 = load i32*, i32** %6003, align 8
  %6011 = getelementptr inbounds i32, i32* %6010, i64 %6002
  store i32 %6009, i32* %6011, align 4
  br label %6012

6012:                                             ; preds = %5996, %6008
  %6013 = phi i32 [ %6009, %6008 ], [ %6006, %5996 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %5998, i8 zeroext 14, i32 %6013) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GtUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6014:                                             ; preds = %2
  %6015 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6016 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6015, align 8
  %6017 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6018 = load i32, i32* %6017, align 4
  %6019 = and i32 %6018, 16777215
  %6020 = zext i32 %6019 to i64
  %6021 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6022 = load i32*, i32** %6021, align 8
  %6023 = getelementptr inbounds i32, i32* %6022, i64 %6020
  %6024 = load i32, i32* %6023, align 4
  %6025 = icmp eq i32 %6024, -1
  br i1 %6025, label %6026, label %6030

6026:                                             ; preds = %6014
  %6027 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6016) #12
  %6028 = load i32*, i32** %6021, align 8
  %6029 = getelementptr inbounds i32, i32* %6028, i64 %6020
  store i32 %6027, i32* %6029, align 4
  br label %6030

6030:                                             ; preds = %6014, %6026
  %6031 = phi i32 [ %6027, %6026 ], [ %6024, %6014 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6016, i8 zeroext 14, i32 %6031) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GeUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6032:                                             ; preds = %2
  %6033 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6034 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6033, align 8
  %6035 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6036 = load i32, i32* %6035, align 4
  %6037 = and i32 %6036, 16777215
  %6038 = zext i32 %6037 to i64
  %6039 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6040 = load i32*, i32** %6039, align 8
  %6041 = getelementptr inbounds i32, i32* %6040, i64 %6038
  %6042 = load i32, i32* %6041, align 4
  %6043 = icmp eq i32 %6042, -1
  br i1 %6043, label %6044, label %6048

6044:                                             ; preds = %6032
  %6045 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6034) #12
  %6046 = load i32*, i32** %6039, align 8
  %6047 = getelementptr inbounds i32, i32* %6046, i64 %6038
  store i32 %6045, i32* %6047, align 4
  br label %6048

6048:                                             ; preds = %6032, %6044
  %6049 = phi i32 [ %6045, %6044 ], [ %6042, %6032 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6034, i8 zeroext 14, i32 %6049) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6050:                                             ; preds = %2
  %6051 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6052 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6051, align 8
  %6053 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6054 = load i32, i32* %6053, align 4
  %6055 = and i32 %6054, 16777215
  %6056 = zext i32 %6055 to i64
  %6057 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6058 = load i32*, i32** %6057, align 8
  %6059 = getelementptr inbounds i32, i32* %6058, i64 %6056
  %6060 = load i32, i32* %6059, align 4
  %6061 = icmp eq i32 %6060, -1
  br i1 %6061, label %6062, label %6066

6062:                                             ; preds = %6050
  %6063 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6052) #12
  %6064 = load i32*, i32** %6057, align 8
  %6065 = getelementptr inbounds i32, i32* %6064, i64 %6056
  store i32 %6063, i32* %6065, align 4
  br label %6066

6066:                                             ; preds = %6050, %6062
  %6067 = phi i32 [ %6063, %6062 ], [ %6060, %6050 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6052, i8 zeroext 4, i32 %6067) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI32x4BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6068:                                             ; preds = %2
  %6069 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6070 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6069, align 8
  %6071 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6072 = load i32, i32* %6071, align 4
  %6073 = and i32 %6072, 16777215
  %6074 = zext i32 %6073 to i64
  %6075 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6076 = load i32*, i32** %6075, align 8
  %6077 = getelementptr inbounds i32, i32* %6076, i64 %6074
  %6078 = load i32, i32* %6077, align 4
  %6079 = icmp eq i32 %6078, -1
  br i1 %6079, label %6080, label %6084

6080:                                             ; preds = %6068
  %6081 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6070) #12
  %6082 = load i32*, i32** %6075, align 8
  %6083 = getelementptr inbounds i32, i32* %6082, i64 %6074
  store i32 %6081, i32* %6083, align 4
  br label %6084

6084:                                             ; preds = %6068, %6080
  %6085 = phi i32 [ %6081, %6080 ], [ %6078, %6068 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6070, i8 zeroext 14, i32 %6085) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector19VisitI32x4DotI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6086:                                             ; preds = %2
  %6087 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6088 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6087, align 8
  %6089 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6090 = load i32, i32* %6089, align 4
  %6091 = and i32 %6090, 16777215
  %6092 = zext i32 %6091 to i64
  %6093 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6094 = load i32*, i32** %6093, align 8
  %6095 = getelementptr inbounds i32, i32* %6094, i64 %6092
  %6096 = load i32, i32* %6095, align 4
  %6097 = icmp eq i32 %6096, -1
  br i1 %6097, label %6098, label %6102

6098:                                             ; preds = %6086
  %6099 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6088) #12
  %6100 = load i32*, i32** %6093, align 8
  %6101 = getelementptr inbounds i32, i32* %6100, i64 %6092
  store i32 %6099, i32* %6101, align 4
  br label %6102

6102:                                             ; preds = %6086, %6098
  %6103 = phi i32 [ %6099, %6098 ], [ %6096, %6086 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6088, i8 zeroext 14, i32 %6103) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitI32x4ExtMulLowI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6104:                                             ; preds = %2
  %6105 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6106 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6105, align 8
  %6107 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6108 = load i32, i32* %6107, align 4
  %6109 = and i32 %6108, 16777215
  %6110 = zext i32 %6109 to i64
  %6111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6112 = load i32*, i32** %6111, align 8
  %6113 = getelementptr inbounds i32, i32* %6112, i64 %6110
  %6114 = load i32, i32* %6113, align 4
  %6115 = icmp eq i32 %6114, -1
  br i1 %6115, label %6116, label %6120

6116:                                             ; preds = %6104
  %6117 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6106) #12
  %6118 = load i32*, i32** %6111, align 8
  %6119 = getelementptr inbounds i32, i32* %6118, i64 %6110
  store i32 %6117, i32* %6119, align 4
  br label %6120

6120:                                             ; preds = %6104, %6116
  %6121 = phi i32 [ %6117, %6116 ], [ %6114, %6104 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6106, i8 zeroext 14, i32 %6121) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4ExtMulHighI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6122:                                             ; preds = %2
  %6123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6124 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6123, align 8
  %6125 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6126 = load i32, i32* %6125, align 4
  %6127 = and i32 %6126, 16777215
  %6128 = zext i32 %6127 to i64
  %6129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6130 = load i32*, i32** %6129, align 8
  %6131 = getelementptr inbounds i32, i32* %6130, i64 %6128
  %6132 = load i32, i32* %6131, align 4
  %6133 = icmp eq i32 %6132, -1
  br i1 %6133, label %6134, label %6138

6134:                                             ; preds = %6122
  %6135 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6124) #12
  %6136 = load i32*, i32** %6129, align 8
  %6137 = getelementptr inbounds i32, i32* %6136, i64 %6128
  store i32 %6135, i32* %6137, align 4
  br label %6138

6138:                                             ; preds = %6122, %6134
  %6139 = phi i32 [ %6135, %6134 ], [ %6132, %6122 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6124, i8 zeroext 14, i32 %6139) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitI32x4ExtMulLowI16x8UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6140:                                             ; preds = %2
  %6141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6142 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6141, align 8
  %6143 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6144 = load i32, i32* %6143, align 4
  %6145 = and i32 %6144, 16777215
  %6146 = zext i32 %6145 to i64
  %6147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6148 = load i32*, i32** %6147, align 8
  %6149 = getelementptr inbounds i32, i32* %6148, i64 %6146
  %6150 = load i32, i32* %6149, align 4
  %6151 = icmp eq i32 %6150, -1
  br i1 %6151, label %6152, label %6156

6152:                                             ; preds = %6140
  %6153 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6142) #12
  %6154 = load i32*, i32** %6147, align 8
  %6155 = getelementptr inbounds i32, i32* %6154, i64 %6146
  store i32 %6153, i32* %6155, align 4
  br label %6156

6156:                                             ; preds = %6140, %6152
  %6157 = phi i32 [ %6153, %6152 ], [ %6150, %6140 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6142, i8 zeroext 14, i32 %6157) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4ExtMulHighI16x8UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6158:                                             ; preds = %2
  %6159 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6160 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6159, align 8
  %6161 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6162 = load i32, i32* %6161, align 4
  %6163 = and i32 %6162, 16777215
  %6164 = zext i32 %6163 to i64
  %6165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6166 = load i32*, i32** %6165, align 8
  %6167 = getelementptr inbounds i32, i32* %6166, i64 %6164
  %6168 = load i32, i32* %6167, align 4
  %6169 = icmp eq i32 %6168, -1
  br i1 %6169, label %6170, label %6174

6170:                                             ; preds = %6158
  %6171 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6160) #12
  %6172 = load i32*, i32** %6165, align 8
  %6173 = getelementptr inbounds i32, i32* %6172, i64 %6164
  store i32 %6171, i32* %6173, align 4
  br label %6174

6174:                                             ; preds = %6158, %6170
  %6175 = phi i32 [ %6171, %6170 ], [ %6168, %6158 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6160, i8 zeroext 14, i32 %6175) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector30VisitI32x4ExtAddPairwiseI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6176:                                             ; preds = %2
  %6177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6178 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6177, align 8
  %6179 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6180 = load i32, i32* %6179, align 4
  %6181 = and i32 %6180, 16777215
  %6182 = zext i32 %6181 to i64
  %6183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6184 = load i32*, i32** %6183, align 8
  %6185 = getelementptr inbounds i32, i32* %6184, i64 %6182
  %6186 = load i32, i32* %6185, align 4
  %6187 = icmp eq i32 %6186, -1
  br i1 %6187, label %6188, label %6192

6188:                                             ; preds = %6176
  %6189 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6178) #12
  %6190 = load i32*, i32** %6183, align 8
  %6191 = getelementptr inbounds i32, i32* %6190, i64 %6182
  store i32 %6189, i32* %6191, align 4
  br label %6192

6192:                                             ; preds = %6176, %6188
  %6193 = phi i32 [ %6189, %6188 ], [ %6186, %6176 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6178, i8 zeroext 14, i32 %6193) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector30VisitI32x4ExtAddPairwiseI16x8UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6194:                                             ; preds = %2
  %6195 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6196 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6195, align 8
  %6197 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6198 = load i32, i32* %6197, align 4
  %6199 = and i32 %6198, 16777215
  %6200 = zext i32 %6199 to i64
  %6201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6202 = load i32*, i32** %6201, align 8
  %6203 = getelementptr inbounds i32, i32* %6202, i64 %6200
  %6204 = load i32, i32* %6203, align 4
  %6205 = icmp eq i32 %6204, -1
  br i1 %6205, label %6206, label %6210

6206:                                             ; preds = %6194
  %6207 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6196) #12
  %6208 = load i32*, i32** %6201, align 8
  %6209 = getelementptr inbounds i32, i32* %6208, i64 %6200
  store i32 %6207, i32* %6209, align 4
  br label %6210

6210:                                             ; preds = %6194, %6206
  %6211 = phi i32 [ %6207, %6206 ], [ %6204, %6194 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6196, i8 zeroext 14, i32 %6211) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitI32x4TruncSatF64x2SZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6212:                                             ; preds = %2
  %6213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6214 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6213, align 8
  %6215 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6216 = load i32, i32* %6215, align 4
  %6217 = and i32 %6216, 16777215
  %6218 = zext i32 %6217 to i64
  %6219 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6220 = load i32*, i32** %6219, align 8
  %6221 = getelementptr inbounds i32, i32* %6220, i64 %6218
  %6222 = load i32, i32* %6221, align 4
  %6223 = icmp eq i32 %6222, -1
  br i1 %6223, label %6224, label %6228

6224:                                             ; preds = %6212
  %6225 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6214) #12
  %6226 = load i32*, i32** %6219, align 8
  %6227 = getelementptr inbounds i32, i32* %6226, i64 %6218
  store i32 %6225, i32* %6227, align 4
  br label %6228

6228:                                             ; preds = %6212, %6224
  %6229 = phi i32 [ %6225, %6224 ], [ %6222, %6212 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6214, i8 zeroext 14, i32 %6229) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector28VisitI32x4TruncSatF64x2UZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6230:                                             ; preds = %2
  %6231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6232 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6231, align 8
  %6233 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6234 = load i32, i32* %6233, align 4
  %6235 = and i32 %6234, 16777215
  %6236 = zext i32 %6235 to i64
  %6237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6238 = load i32*, i32** %6237, align 8
  %6239 = getelementptr inbounds i32, i32* %6238, i64 %6236
  %6240 = load i32, i32* %6239, align 4
  %6241 = icmp eq i32 %6240, -1
  br i1 %6241, label %6242, label %6246

6242:                                             ; preds = %6230
  %6243 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6232) #12
  %6244 = load i32*, i32** %6237, align 8
  %6245 = getelementptr inbounds i32, i32* %6244, i64 %6236
  store i32 %6243, i32* %6245, align 4
  br label %6246

6246:                                             ; preds = %6230, %6242
  %6247 = phi i32 [ %6243, %6242 ], [ %6240, %6230 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6232, i8 zeroext 14, i32 %6247) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitI16x8SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6248:                                             ; preds = %2
  %6249 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6250 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6249, align 8
  %6251 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6252 = load i32, i32* %6251, align 4
  %6253 = and i32 %6252, 16777215
  %6254 = zext i32 %6253 to i64
  %6255 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6256 = load i32*, i32** %6255, align 8
  %6257 = getelementptr inbounds i32, i32* %6256, i64 %6254
  %6258 = load i32, i32* %6257, align 4
  %6259 = icmp eq i32 %6258, -1
  br i1 %6259, label %6260, label %6264

6260:                                             ; preds = %6248
  %6261 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6250) #12
  %6262 = load i32*, i32** %6255, align 8
  %6263 = getelementptr inbounds i32, i32* %6262, i64 %6254
  store i32 %6261, i32* %6263, align 4
  br label %6264

6264:                                             ; preds = %6248, %6260
  %6265 = phi i32 [ %6261, %6260 ], [ %6258, %6248 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6250, i8 zeroext 4, i32 %6265) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitI16x8ExtractLaneUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6266:                                             ; preds = %2
  %6267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6268 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6267, align 8
  %6269 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6270 = load i32, i32* %6269, align 4
  %6271 = and i32 %6270, 16777215
  %6272 = zext i32 %6271 to i64
  %6273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6274 = load i32*, i32** %6273, align 8
  %6275 = getelementptr inbounds i32, i32* %6274, i64 %6272
  %6276 = load i32, i32* %6275, align 4
  %6277 = icmp eq i32 %6276, -1
  br i1 %6277, label %6278, label %6282

6278:                                             ; preds = %6266
  %6279 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6268) #12
  %6280 = load i32*, i32** %6273, align 8
  %6281 = getelementptr inbounds i32, i32* %6280, i64 %6272
  store i32 %6279, i32* %6281, align 4
  br label %6282

6282:                                             ; preds = %6266, %6278
  %6283 = phi i32 [ %6279, %6278 ], [ %6276, %6266 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6268, i8 zeroext 4, i32 %6283) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitI16x8ExtractLaneSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6284:                                             ; preds = %2
  %6285 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6286 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6285, align 8
  %6287 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6288 = load i32, i32* %6287, align 4
  %6289 = and i32 %6288, 16777215
  %6290 = zext i32 %6289 to i64
  %6291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6292 = load i32*, i32** %6291, align 8
  %6293 = getelementptr inbounds i32, i32* %6292, i64 %6290
  %6294 = load i32, i32* %6293, align 4
  %6295 = icmp eq i32 %6294, -1
  br i1 %6295, label %6296, label %6300

6296:                                             ; preds = %6284
  %6297 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6286) #12
  %6298 = load i32*, i32** %6291, align 8
  %6299 = getelementptr inbounds i32, i32* %6298, i64 %6290
  store i32 %6297, i32* %6299, align 4
  br label %6300

6300:                                             ; preds = %6284, %6296
  %6301 = phi i32 [ %6297, %6296 ], [ %6294, %6284 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6286, i8 zeroext 14, i32 %6301) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI16x8ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6302:                                             ; preds = %2
  %6303 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6304 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6303, align 8
  %6305 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6306 = load i32, i32* %6305, align 4
  %6307 = and i32 %6306, 16777215
  %6308 = zext i32 %6307 to i64
  %6309 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6310 = load i32*, i32** %6309, align 8
  %6311 = getelementptr inbounds i32, i32* %6310, i64 %6308
  %6312 = load i32, i32* %6311, align 4
  %6313 = icmp eq i32 %6312, -1
  br i1 %6313, label %6314, label %6318

6314:                                             ; preds = %6302
  %6315 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6304) #12
  %6316 = load i32*, i32** %6309, align 8
  %6317 = getelementptr inbounds i32, i32* %6316, i64 %6308
  store i32 %6315, i32* %6317, align 4
  br label %6318

6318:                                             ; preds = %6302, %6314
  %6319 = phi i32 [ %6315, %6314 ], [ %6312, %6302 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6304, i8 zeroext 14, i32 %6319) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8SConvertI8x16LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6320:                                             ; preds = %2
  %6321 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6322 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6321, align 8
  %6323 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6324 = load i32, i32* %6323, align 4
  %6325 = and i32 %6324, 16777215
  %6326 = zext i32 %6325 to i64
  %6327 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6328 = load i32*, i32** %6327, align 8
  %6329 = getelementptr inbounds i32, i32* %6328, i64 %6326
  %6330 = load i32, i32* %6329, align 4
  %6331 = icmp eq i32 %6330, -1
  br i1 %6331, label %6332, label %6336

6332:                                             ; preds = %6320
  %6333 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6322) #12
  %6334 = load i32*, i32** %6327, align 8
  %6335 = getelementptr inbounds i32, i32* %6334, i64 %6326
  store i32 %6333, i32* %6335, align 4
  br label %6336

6336:                                             ; preds = %6320, %6332
  %6337 = phi i32 [ %6333, %6332 ], [ %6330, %6320 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6322, i8 zeroext 14, i32 %6337) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitI16x8SConvertI8x16HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6338:                                             ; preds = %2
  %6339 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6340 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6339, align 8
  %6341 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6342 = load i32, i32* %6341, align 4
  %6343 = and i32 %6342, 16777215
  %6344 = zext i32 %6343 to i64
  %6345 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6346 = load i32*, i32** %6345, align 8
  %6347 = getelementptr inbounds i32, i32* %6346, i64 %6344
  %6348 = load i32, i32* %6347, align 4
  %6349 = icmp eq i32 %6348, -1
  br i1 %6349, label %6350, label %6354

6350:                                             ; preds = %6338
  %6351 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6340) #12
  %6352 = load i32*, i32** %6345, align 8
  %6353 = getelementptr inbounds i32, i32* %6352, i64 %6344
  store i32 %6351, i32* %6353, align 4
  br label %6354

6354:                                             ; preds = %6338, %6350
  %6355 = phi i32 [ %6351, %6350 ], [ %6348, %6338 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6340, i8 zeroext 14, i32 %6355) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6356:                                             ; preds = %2
  %6357 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6358 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6357, align 8
  %6359 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6360 = load i32, i32* %6359, align 4
  %6361 = and i32 %6360, 16777215
  %6362 = zext i32 %6361 to i64
  %6363 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6364 = load i32*, i32** %6363, align 8
  %6365 = getelementptr inbounds i32, i32* %6364, i64 %6362
  %6366 = load i32, i32* %6365, align 4
  %6367 = icmp eq i32 %6366, -1
  br i1 %6367, label %6368, label %6372

6368:                                             ; preds = %6356
  %6369 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6358) #12
  %6370 = load i32*, i32** %6363, align 8
  %6371 = getelementptr inbounds i32, i32* %6370, i64 %6362
  store i32 %6369, i32* %6371, align 4
  br label %6372

6372:                                             ; preds = %6356, %6368
  %6373 = phi i32 [ %6369, %6368 ], [ %6366, %6356 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6358, i8 zeroext 14, i32 %6373) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6374:                                             ; preds = %2
  %6375 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6376 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6375, align 8
  %6377 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6378 = load i32, i32* %6377, align 4
  %6379 = and i32 %6378, 16777215
  %6380 = zext i32 %6379 to i64
  %6381 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6382 = load i32*, i32** %6381, align 8
  %6383 = getelementptr inbounds i32, i32* %6382, i64 %6380
  %6384 = load i32, i32* %6383, align 4
  %6385 = icmp eq i32 %6384, -1
  br i1 %6385, label %6386, label %6390

6386:                                             ; preds = %6374
  %6387 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6376) #12
  %6388 = load i32*, i32** %6381, align 8
  %6389 = getelementptr inbounds i32, i32* %6388, i64 %6380
  store i32 %6387, i32* %6389, align 4
  br label %6390

6390:                                             ; preds = %6374, %6386
  %6391 = phi i32 [ %6387, %6386 ], [ %6384, %6374 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6376, i8 zeroext 14, i32 %6391) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6392:                                             ; preds = %2
  %6393 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6394 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6393, align 8
  %6395 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6396 = load i32, i32* %6395, align 4
  %6397 = and i32 %6396, 16777215
  %6398 = zext i32 %6397 to i64
  %6399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6400 = load i32*, i32** %6399, align 8
  %6401 = getelementptr inbounds i32, i32* %6400, i64 %6398
  %6402 = load i32, i32* %6401, align 4
  %6403 = icmp eq i32 %6402, -1
  br i1 %6403, label %6404, label %6408

6404:                                             ; preds = %6392
  %6405 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6394) #12
  %6406 = load i32*, i32** %6399, align 8
  %6407 = getelementptr inbounds i32, i32* %6406, i64 %6398
  store i32 %6405, i32* %6407, align 4
  br label %6408

6408:                                             ; preds = %6392, %6404
  %6409 = phi i32 [ %6405, %6404 ], [ %6402, %6392 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6394, i8 zeroext 14, i32 %6409) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitI16x8SConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6410:                                             ; preds = %2
  %6411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6412 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6411, align 8
  %6413 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6414 = load i32, i32* %6413, align 4
  %6415 = and i32 %6414, 16777215
  %6416 = zext i32 %6415 to i64
  %6417 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6418 = load i32*, i32** %6417, align 8
  %6419 = getelementptr inbounds i32, i32* %6418, i64 %6416
  %6420 = load i32, i32* %6419, align 4
  %6421 = icmp eq i32 %6420, -1
  br i1 %6421, label %6422, label %6426

6422:                                             ; preds = %6410
  %6423 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6412) #12
  %6424 = load i32*, i32** %6417, align 8
  %6425 = getelementptr inbounds i32, i32* %6424, i64 %6416
  store i32 %6423, i32* %6425, align 4
  br label %6426

6426:                                             ; preds = %6410, %6422
  %6427 = phi i32 [ %6423, %6422 ], [ %6420, %6410 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6412, i8 zeroext 14, i32 %6427) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6428:                                             ; preds = %2
  %6429 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6430 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6429, align 8
  %6431 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6432 = load i32, i32* %6431, align 4
  %6433 = and i32 %6432, 16777215
  %6434 = zext i32 %6433 to i64
  %6435 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6436 = load i32*, i32** %6435, align 8
  %6437 = getelementptr inbounds i32, i32* %6436, i64 %6434
  %6438 = load i32, i32* %6437, align 4
  %6439 = icmp eq i32 %6438, -1
  br i1 %6439, label %6440, label %6444

6440:                                             ; preds = %6428
  %6441 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6430) #12
  %6442 = load i32*, i32** %6435, align 8
  %6443 = getelementptr inbounds i32, i32* %6442, i64 %6434
  store i32 %6441, i32* %6443, align 4
  br label %6444

6444:                                             ; preds = %6428, %6440
  %6445 = phi i32 [ %6441, %6440 ], [ %6438, %6428 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6430, i8 zeroext 14, i32 %6445) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8AddSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6446:                                             ; preds = %2
  %6447 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6448 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6447, align 8
  %6449 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6450 = load i32, i32* %6449, align 4
  %6451 = and i32 %6450, 16777215
  %6452 = zext i32 %6451 to i64
  %6453 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6454 = load i32*, i32** %6453, align 8
  %6455 = getelementptr inbounds i32, i32* %6454, i64 %6452
  %6456 = load i32, i32* %6455, align 4
  %6457 = icmp eq i32 %6456, -1
  br i1 %6457, label %6458, label %6462

6458:                                             ; preds = %6446
  %6459 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6448) #12
  %6460 = load i32*, i32** %6453, align 8
  %6461 = getelementptr inbounds i32, i32* %6460, i64 %6452
  store i32 %6459, i32* %6461, align 4
  br label %6462

6462:                                             ; preds = %6446, %6458
  %6463 = phi i32 [ %6459, %6458 ], [ %6456, %6446 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6448, i8 zeroext 14, i32 %6463) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6464:                                             ; preds = %2
  %6465 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6466 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6465, align 8
  %6467 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6468 = load i32, i32* %6467, align 4
  %6469 = and i32 %6468, 16777215
  %6470 = zext i32 %6469 to i64
  %6471 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6472 = load i32*, i32** %6471, align 8
  %6473 = getelementptr inbounds i32, i32* %6472, i64 %6470
  %6474 = load i32, i32* %6473, align 4
  %6475 = icmp eq i32 %6474, -1
  br i1 %6475, label %6476, label %6480

6476:                                             ; preds = %6464
  %6477 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6466) #12
  %6478 = load i32*, i32** %6471, align 8
  %6479 = getelementptr inbounds i32, i32* %6478, i64 %6470
  store i32 %6477, i32* %6479, align 4
  br label %6480

6480:                                             ; preds = %6464, %6476
  %6481 = phi i32 [ %6477, %6476 ], [ %6474, %6464 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6466, i8 zeroext 14, i32 %6481) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8SubSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6482:                                             ; preds = %2
  %6483 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6484 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6483, align 8
  %6485 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6486 = load i32, i32* %6485, align 4
  %6487 = and i32 %6486, 16777215
  %6488 = zext i32 %6487 to i64
  %6489 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6490 = load i32*, i32** %6489, align 8
  %6491 = getelementptr inbounds i32, i32* %6490, i64 %6488
  %6492 = load i32, i32* %6491, align 4
  %6493 = icmp eq i32 %6492, -1
  br i1 %6493, label %6494, label %6498

6494:                                             ; preds = %6482
  %6495 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6484) #12
  %6496 = load i32*, i32** %6489, align 8
  %6497 = getelementptr inbounds i32, i32* %6496, i64 %6488
  store i32 %6495, i32* %6497, align 4
  br label %6498

6498:                                             ; preds = %6482, %6494
  %6499 = phi i32 [ %6495, %6494 ], [ %6492, %6482 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6484, i8 zeroext 14, i32 %6499) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6500:                                             ; preds = %2
  %6501 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6502 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6501, align 8
  %6503 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6504 = load i32, i32* %6503, align 4
  %6505 = and i32 %6504, 16777215
  %6506 = zext i32 %6505 to i64
  %6507 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6508 = load i32*, i32** %6507, align 8
  %6509 = getelementptr inbounds i32, i32* %6508, i64 %6506
  %6510 = load i32, i32* %6509, align 4
  %6511 = icmp eq i32 %6510, -1
  br i1 %6511, label %6512, label %6516

6512:                                             ; preds = %6500
  %6513 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6502) #12
  %6514 = load i32*, i32** %6507, align 8
  %6515 = getelementptr inbounds i32, i32* %6514, i64 %6506
  store i32 %6513, i32* %6515, align 4
  br label %6516

6516:                                             ; preds = %6500, %6512
  %6517 = phi i32 [ %6513, %6512 ], [ %6510, %6500 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6502, i8 zeroext 14, i32 %6517) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MinSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6518:                                             ; preds = %2
  %6519 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6520 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6519, align 8
  %6521 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6522 = load i32, i32* %6521, align 4
  %6523 = and i32 %6522, 16777215
  %6524 = zext i32 %6523 to i64
  %6525 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6526 = load i32*, i32** %6525, align 8
  %6527 = getelementptr inbounds i32, i32* %6526, i64 %6524
  %6528 = load i32, i32* %6527, align 4
  %6529 = icmp eq i32 %6528, -1
  br i1 %6529, label %6530, label %6534

6530:                                             ; preds = %6518
  %6531 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6520) #12
  %6532 = load i32*, i32** %6525, align 8
  %6533 = getelementptr inbounds i32, i32* %6532, i64 %6524
  store i32 %6531, i32* %6533, align 4
  br label %6534

6534:                                             ; preds = %6518, %6530
  %6535 = phi i32 [ %6531, %6530 ], [ %6528, %6518 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6520, i8 zeroext 14, i32 %6535) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MaxSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6536:                                             ; preds = %2
  %6537 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6538 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6537, align 8
  %6539 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6540 = load i32, i32* %6539, align 4
  %6541 = and i32 %6540, 16777215
  %6542 = zext i32 %6541 to i64
  %6543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6544 = load i32*, i32** %6543, align 8
  %6545 = getelementptr inbounds i32, i32* %6544, i64 %6542
  %6546 = load i32, i32* %6545, align 4
  %6547 = icmp eq i32 %6546, -1
  br i1 %6547, label %6548, label %6552

6548:                                             ; preds = %6536
  %6549 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6538) #12
  %6550 = load i32*, i32** %6543, align 8
  %6551 = getelementptr inbounds i32, i32* %6550, i64 %6542
  store i32 %6549, i32* %6551, align 4
  br label %6552

6552:                                             ; preds = %6536, %6548
  %6553 = phi i32 [ %6549, %6548 ], [ %6546, %6536 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6538, i8 zeroext 14, i32 %6553) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI16x8EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6554:                                             ; preds = %2
  %6555 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6556 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6555, align 8
  %6557 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6558 = load i32, i32* %6557, align 4
  %6559 = and i32 %6558, 16777215
  %6560 = zext i32 %6559 to i64
  %6561 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6562 = load i32*, i32** %6561, align 8
  %6563 = getelementptr inbounds i32, i32* %6562, i64 %6560
  %6564 = load i32, i32* %6563, align 4
  %6565 = icmp eq i32 %6564, -1
  br i1 %6565, label %6566, label %6570

6566:                                             ; preds = %6554
  %6567 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6556) #12
  %6568 = load i32*, i32** %6561, align 8
  %6569 = getelementptr inbounds i32, i32* %6568, i64 %6560
  store i32 %6567, i32* %6569, align 4
  br label %6570

6570:                                             ; preds = %6554, %6566
  %6571 = phi i32 [ %6567, %6566 ], [ %6564, %6554 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6556, i8 zeroext 14, i32 %6571) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI16x8NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6572:                                             ; preds = %2
  %6573 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6574 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6573, align 8
  %6575 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6576 = load i32, i32* %6575, align 4
  %6577 = and i32 %6576, 16777215
  %6578 = zext i32 %6577 to i64
  %6579 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6580 = load i32*, i32** %6579, align 8
  %6581 = getelementptr inbounds i32, i32* %6580, i64 %6578
  %6582 = load i32, i32* %6581, align 4
  %6583 = icmp eq i32 %6582, -1
  br i1 %6583, label %6584, label %6588

6584:                                             ; preds = %6572
  %6585 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6574) #12
  %6586 = load i32*, i32** %6579, align 8
  %6587 = getelementptr inbounds i32, i32* %6586, i64 %6578
  store i32 %6585, i32* %6587, align 4
  br label %6588

6588:                                             ; preds = %6572, %6584
  %6589 = phi i32 [ %6585, %6584 ], [ %6582, %6572 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6574, i8 zeroext 14, i32 %6589) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6590:                                             ; preds = %2
  %6591 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6592 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6591, align 8
  %6593 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6594 = load i32, i32* %6593, align 4
  %6595 = and i32 %6594, 16777215
  %6596 = zext i32 %6595 to i64
  %6597 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6598 = load i32*, i32** %6597, align 8
  %6599 = getelementptr inbounds i32, i32* %6598, i64 %6596
  %6600 = load i32, i32* %6599, align 4
  %6601 = icmp eq i32 %6600, -1
  br i1 %6601, label %6602, label %6606

6602:                                             ; preds = %6590
  %6603 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6592) #12
  %6604 = load i32*, i32** %6597, align 8
  %6605 = getelementptr inbounds i32, i32* %6604, i64 %6596
  store i32 %6603, i32* %6605, align 4
  br label %6606

6606:                                             ; preds = %6590, %6602
  %6607 = phi i32 [ %6603, %6602 ], [ %6600, %6590 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6592, i8 zeroext 14, i32 %6607) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6608:                                             ; preds = %2
  %6609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6610 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6609, align 8
  %6611 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6612 = load i32, i32* %6611, align 4
  %6613 = and i32 %6612, 16777215
  %6614 = zext i32 %6613 to i64
  %6615 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6616 = load i32*, i32** %6615, align 8
  %6617 = getelementptr inbounds i32, i32* %6616, i64 %6614
  %6618 = load i32, i32* %6617, align 4
  %6619 = icmp eq i32 %6618, -1
  br i1 %6619, label %6620, label %6624

6620:                                             ; preds = %6608
  %6621 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6610) #12
  %6622 = load i32*, i32** %6615, align 8
  %6623 = getelementptr inbounds i32, i32* %6622, i64 %6614
  store i32 %6621, i32* %6623, align 4
  br label %6624

6624:                                             ; preds = %6608, %6620
  %6625 = phi i32 [ %6621, %6620 ], [ %6618, %6608 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6610, i8 zeroext 14, i32 %6625) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8UConvertI8x16LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6626:                                             ; preds = %2
  %6627 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6628 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6627, align 8
  %6629 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6630 = load i32, i32* %6629, align 4
  %6631 = and i32 %6630, 16777215
  %6632 = zext i32 %6631 to i64
  %6633 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6634 = load i32*, i32** %6633, align 8
  %6635 = getelementptr inbounds i32, i32* %6634, i64 %6632
  %6636 = load i32, i32* %6635, align 4
  %6637 = icmp eq i32 %6636, -1
  br i1 %6637, label %6638, label %6642

6638:                                             ; preds = %6626
  %6639 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6628) #12
  %6640 = load i32*, i32** %6633, align 8
  %6641 = getelementptr inbounds i32, i32* %6640, i64 %6632
  store i32 %6639, i32* %6641, align 4
  br label %6642

6642:                                             ; preds = %6626, %6638
  %6643 = phi i32 [ %6639, %6638 ], [ %6636, %6626 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6628, i8 zeroext 14, i32 %6643) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector27VisitI16x8UConvertI8x16HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6644:                                             ; preds = %2
  %6645 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6646 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6645, align 8
  %6647 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6648 = load i32, i32* %6647, align 4
  %6649 = and i32 %6648, 16777215
  %6650 = zext i32 %6649 to i64
  %6651 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6652 = load i32*, i32** %6651, align 8
  %6653 = getelementptr inbounds i32, i32* %6652, i64 %6650
  %6654 = load i32, i32* %6653, align 4
  %6655 = icmp eq i32 %6654, -1
  br i1 %6655, label %6656, label %6660

6656:                                             ; preds = %6644
  %6657 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6646) #12
  %6658 = load i32*, i32** %6651, align 8
  %6659 = getelementptr inbounds i32, i32* %6658, i64 %6650
  store i32 %6657, i32* %6659, align 4
  br label %6660

6660:                                             ; preds = %6644, %6656
  %6661 = phi i32 [ %6657, %6656 ], [ %6654, %6644 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6646, i8 zeroext 14, i32 %6661) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6662:                                             ; preds = %2
  %6663 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6664 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6663, align 8
  %6665 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6666 = load i32, i32* %6665, align 4
  %6667 = and i32 %6666, 16777215
  %6668 = zext i32 %6667 to i64
  %6669 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6670 = load i32*, i32** %6669, align 8
  %6671 = getelementptr inbounds i32, i32* %6670, i64 %6668
  %6672 = load i32, i32* %6671, align 4
  %6673 = icmp eq i32 %6672, -1
  br i1 %6673, label %6674, label %6678

6674:                                             ; preds = %6662
  %6675 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6664) #12
  %6676 = load i32*, i32** %6669, align 8
  %6677 = getelementptr inbounds i32, i32* %6676, i64 %6668
  store i32 %6675, i32* %6677, align 4
  br label %6678

6678:                                             ; preds = %6662, %6674
  %6679 = phi i32 [ %6675, %6674 ], [ %6672, %6662 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6664, i8 zeroext 14, i32 %6679) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitI16x8UConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6680:                                             ; preds = %2
  %6681 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6682 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6681, align 8
  %6683 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6684 = load i32, i32* %6683, align 4
  %6685 = and i32 %6684, 16777215
  %6686 = zext i32 %6685 to i64
  %6687 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6688 = load i32*, i32** %6687, align 8
  %6689 = getelementptr inbounds i32, i32* %6688, i64 %6686
  %6690 = load i32, i32* %6689, align 4
  %6691 = icmp eq i32 %6690, -1
  br i1 %6691, label %6692, label %6696

6692:                                             ; preds = %6680
  %6693 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6682) #12
  %6694 = load i32*, i32** %6687, align 8
  %6695 = getelementptr inbounds i32, i32* %6694, i64 %6686
  store i32 %6693, i32* %6695, align 4
  br label %6696

6696:                                             ; preds = %6680, %6692
  %6697 = phi i32 [ %6693, %6692 ], [ %6690, %6680 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6682, i8 zeroext 14, i32 %6697) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8AddSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6698:                                             ; preds = %2
  %6699 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6700 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6699, align 8
  %6701 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6702 = load i32, i32* %6701, align 4
  %6703 = and i32 %6702, 16777215
  %6704 = zext i32 %6703 to i64
  %6705 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6706 = load i32*, i32** %6705, align 8
  %6707 = getelementptr inbounds i32, i32* %6706, i64 %6704
  %6708 = load i32, i32* %6707, align 4
  %6709 = icmp eq i32 %6708, -1
  br i1 %6709, label %6710, label %6714

6710:                                             ; preds = %6698
  %6711 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6700) #12
  %6712 = load i32*, i32** %6705, align 8
  %6713 = getelementptr inbounds i32, i32* %6712, i64 %6704
  store i32 %6711, i32* %6713, align 4
  br label %6714

6714:                                             ; preds = %6698, %6710
  %6715 = phi i32 [ %6711, %6710 ], [ %6708, %6698 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6700, i8 zeroext 14, i32 %6715) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8SubSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6716:                                             ; preds = %2
  %6717 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6718 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6717, align 8
  %6719 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6720 = load i32, i32* %6719, align 4
  %6721 = and i32 %6720, 16777215
  %6722 = zext i32 %6721 to i64
  %6723 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6724 = load i32*, i32** %6723, align 8
  %6725 = getelementptr inbounds i32, i32* %6724, i64 %6722
  %6726 = load i32, i32* %6725, align 4
  %6727 = icmp eq i32 %6726, -1
  br i1 %6727, label %6728, label %6732

6728:                                             ; preds = %6716
  %6729 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6718) #12
  %6730 = load i32*, i32** %6723, align 8
  %6731 = getelementptr inbounds i32, i32* %6730, i64 %6722
  store i32 %6729, i32* %6731, align 4
  br label %6732

6732:                                             ; preds = %6716, %6728
  %6733 = phi i32 [ %6729, %6728 ], [ %6726, %6716 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6718, i8 zeroext 14, i32 %6733) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MinUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6734:                                             ; preds = %2
  %6735 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6736 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6735, align 8
  %6737 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6738 = load i32, i32* %6737, align 4
  %6739 = and i32 %6738, 16777215
  %6740 = zext i32 %6739 to i64
  %6741 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6742 = load i32*, i32** %6741, align 8
  %6743 = getelementptr inbounds i32, i32* %6742, i64 %6740
  %6744 = load i32, i32* %6743, align 4
  %6745 = icmp eq i32 %6744, -1
  br i1 %6745, label %6746, label %6750

6746:                                             ; preds = %6734
  %6747 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6736) #12
  %6748 = load i32*, i32** %6741, align 8
  %6749 = getelementptr inbounds i32, i32* %6748, i64 %6740
  store i32 %6747, i32* %6749, align 4
  br label %6750

6750:                                             ; preds = %6734, %6746
  %6751 = phi i32 [ %6747, %6746 ], [ %6744, %6734 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6736, i8 zeroext 14, i32 %6751) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MaxUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6752:                                             ; preds = %2
  %6753 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6754 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6753, align 8
  %6755 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6756 = load i32, i32* %6755, align 4
  %6757 = and i32 %6756, 16777215
  %6758 = zext i32 %6757 to i64
  %6759 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6760 = load i32*, i32** %6759, align 8
  %6761 = getelementptr inbounds i32, i32* %6760, i64 %6758
  %6762 = load i32, i32* %6761, align 4
  %6763 = icmp eq i32 %6762, -1
  br i1 %6763, label %6764, label %6768

6764:                                             ; preds = %6752
  %6765 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6754) #12
  %6766 = load i32*, i32** %6759, align 8
  %6767 = getelementptr inbounds i32, i32* %6766, i64 %6758
  store i32 %6765, i32* %6767, align 4
  br label %6768

6768:                                             ; preds = %6752, %6764
  %6769 = phi i32 [ %6765, %6764 ], [ %6762, %6752 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6754, i8 zeroext 14, i32 %6769) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GtUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6770:                                             ; preds = %2
  %6771 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6772 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6771, align 8
  %6773 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6774 = load i32, i32* %6773, align 4
  %6775 = and i32 %6774, 16777215
  %6776 = zext i32 %6775 to i64
  %6777 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6778 = load i32*, i32** %6777, align 8
  %6779 = getelementptr inbounds i32, i32* %6778, i64 %6776
  %6780 = load i32, i32* %6779, align 4
  %6781 = icmp eq i32 %6780, -1
  br i1 %6781, label %6782, label %6786

6782:                                             ; preds = %6770
  %6783 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6772) #12
  %6784 = load i32*, i32** %6777, align 8
  %6785 = getelementptr inbounds i32, i32* %6784, i64 %6776
  store i32 %6783, i32* %6785, align 4
  br label %6786

6786:                                             ; preds = %6770, %6782
  %6787 = phi i32 [ %6783, %6782 ], [ %6780, %6770 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6772, i8 zeroext 14, i32 %6787) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GeUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6788:                                             ; preds = %2
  %6789 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6790 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6789, align 8
  %6791 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6792 = load i32, i32* %6791, align 4
  %6793 = and i32 %6792, 16777215
  %6794 = zext i32 %6793 to i64
  %6795 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6796 = load i32*, i32** %6795, align 8
  %6797 = getelementptr inbounds i32, i32* %6796, i64 %6794
  %6798 = load i32, i32* %6797, align 4
  %6799 = icmp eq i32 %6798, -1
  br i1 %6799, label %6800, label %6804

6800:                                             ; preds = %6788
  %6801 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6790) #12
  %6802 = load i32*, i32** %6795, align 8
  %6803 = getelementptr inbounds i32, i32* %6802, i64 %6794
  store i32 %6801, i32* %6803, align 4
  br label %6804

6804:                                             ; preds = %6788, %6800
  %6805 = phi i32 [ %6801, %6800 ], [ %6798, %6788 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6790, i8 zeroext 14, i32 %6805) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8RoundingAverageUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6806:                                             ; preds = %2
  %6807 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6808 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6807, align 8
  %6809 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6810 = load i32, i32* %6809, align 4
  %6811 = and i32 %6810, 16777215
  %6812 = zext i32 %6811 to i64
  %6813 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6814 = load i32*, i32** %6813, align 8
  %6815 = getelementptr inbounds i32, i32* %6814, i64 %6812
  %6816 = load i32, i32* %6815, align 4
  %6817 = icmp eq i32 %6816, -1
  br i1 %6817, label %6818, label %6822

6818:                                             ; preds = %6806
  %6819 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6808) #12
  %6820 = load i32*, i32** %6813, align 8
  %6821 = getelementptr inbounds i32, i32* %6820, i64 %6812
  store i32 %6819, i32* %6821, align 4
  br label %6822

6822:                                             ; preds = %6806, %6818
  %6823 = phi i32 [ %6819, %6818 ], [ %6816, %6806 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6808, i8 zeroext 14, i32 %6823) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI16x8Q15MulRSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6824:                                             ; preds = %2
  %6825 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6826 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6825, align 8
  %6827 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6828 = load i32, i32* %6827, align 4
  %6829 = and i32 %6828, 16777215
  %6830 = zext i32 %6829 to i64
  %6831 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6832 = load i32*, i32** %6831, align 8
  %6833 = getelementptr inbounds i32, i32* %6832, i64 %6830
  %6834 = load i32, i32* %6833, align 4
  %6835 = icmp eq i32 %6834, -1
  br i1 %6835, label %6836, label %6840

6836:                                             ; preds = %6824
  %6837 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6826) #12
  %6838 = load i32*, i32** %6831, align 8
  %6839 = getelementptr inbounds i32, i32* %6838, i64 %6830
  store i32 %6837, i32* %6839, align 4
  br label %6840

6840:                                             ; preds = %6824, %6836
  %6841 = phi i32 [ %6837, %6836 ], [ %6834, %6824 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6826, i8 zeroext 14, i32 %6841) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6842:                                             ; preds = %2
  %6843 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6844 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6843, align 8
  %6845 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6846 = load i32, i32* %6845, align 4
  %6847 = and i32 %6846, 16777215
  %6848 = zext i32 %6847 to i64
  %6849 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6850 = load i32*, i32** %6849, align 8
  %6851 = getelementptr inbounds i32, i32* %6850, i64 %6848
  %6852 = load i32, i32* %6851, align 4
  %6853 = icmp eq i32 %6852, -1
  br i1 %6853, label %6854, label %6858

6854:                                             ; preds = %6842
  %6855 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6844) #12
  %6856 = load i32*, i32** %6849, align 8
  %6857 = getelementptr inbounds i32, i32* %6856, i64 %6848
  store i32 %6855, i32* %6857, align 4
  br label %6858

6858:                                             ; preds = %6842, %6854
  %6859 = phi i32 [ %6855, %6854 ], [ %6852, %6842 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6844, i8 zeroext 4, i32 %6859) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6860:                                             ; preds = %2
  %6861 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6862 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6861, align 8
  %6863 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6864 = load i32, i32* %6863, align 4
  %6865 = and i32 %6864, 16777215
  %6866 = zext i32 %6865 to i64
  %6867 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6868 = load i32*, i32** %6867, align 8
  %6869 = getelementptr inbounds i32, i32* %6868, i64 %6866
  %6870 = load i32, i32* %6869, align 4
  %6871 = icmp eq i32 %6870, -1
  br i1 %6871, label %6872, label %6876

6872:                                             ; preds = %6860
  %6873 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6862) #12
  %6874 = load i32*, i32** %6867, align 8
  %6875 = getelementptr inbounds i32, i32* %6874, i64 %6866
  store i32 %6873, i32* %6875, align 4
  br label %6876

6876:                                             ; preds = %6860, %6872
  %6877 = phi i32 [ %6873, %6872 ], [ %6870, %6860 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6862, i8 zeroext 14, i32 %6877) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitI16x8ExtMulLowI8x16SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6878:                                             ; preds = %2
  %6879 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6880 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6879, align 8
  %6881 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6882 = load i32, i32* %6881, align 4
  %6883 = and i32 %6882, 16777215
  %6884 = zext i32 %6883 to i64
  %6885 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6886 = load i32*, i32** %6885, align 8
  %6887 = getelementptr inbounds i32, i32* %6886, i64 %6884
  %6888 = load i32, i32* %6887, align 4
  %6889 = icmp eq i32 %6888, -1
  br i1 %6889, label %6890, label %6894

6890:                                             ; preds = %6878
  %6891 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6880) #12
  %6892 = load i32*, i32** %6885, align 8
  %6893 = getelementptr inbounds i32, i32* %6892, i64 %6884
  store i32 %6891, i32* %6893, align 4
  br label %6894

6894:                                             ; preds = %6878, %6890
  %6895 = phi i32 [ %6891, %6890 ], [ %6888, %6878 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6880, i8 zeroext 14, i32 %6895) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8ExtMulHighI8x16SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6896:                                             ; preds = %2
  %6897 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6898 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6897, align 8
  %6899 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6900 = load i32, i32* %6899, align 4
  %6901 = and i32 %6900, 16777215
  %6902 = zext i32 %6901 to i64
  %6903 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6904 = load i32*, i32** %6903, align 8
  %6905 = getelementptr inbounds i32, i32* %6904, i64 %6902
  %6906 = load i32, i32* %6905, align 4
  %6907 = icmp eq i32 %6906, -1
  br i1 %6907, label %6908, label %6912

6908:                                             ; preds = %6896
  %6909 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6898) #12
  %6910 = load i32*, i32** %6903, align 8
  %6911 = getelementptr inbounds i32, i32* %6910, i64 %6902
  store i32 %6909, i32* %6911, align 4
  br label %6912

6912:                                             ; preds = %6896, %6908
  %6913 = phi i32 [ %6909, %6908 ], [ %6906, %6896 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6898, i8 zeroext 14, i32 %6913) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector25VisitI16x8ExtMulLowI8x16UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6914:                                             ; preds = %2
  %6915 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6916 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6915, align 8
  %6917 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6918 = load i32, i32* %6917, align 4
  %6919 = and i32 %6918, 16777215
  %6920 = zext i32 %6919 to i64
  %6921 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6922 = load i32*, i32** %6921, align 8
  %6923 = getelementptr inbounds i32, i32* %6922, i64 %6920
  %6924 = load i32, i32* %6923, align 4
  %6925 = icmp eq i32 %6924, -1
  br i1 %6925, label %6926, label %6930

6926:                                             ; preds = %6914
  %6927 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6916) #12
  %6928 = load i32*, i32** %6921, align 8
  %6929 = getelementptr inbounds i32, i32* %6928, i64 %6920
  store i32 %6927, i32* %6929, align 4
  br label %6930

6930:                                             ; preds = %6914, %6926
  %6931 = phi i32 [ %6927, %6926 ], [ %6924, %6914 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6916, i8 zeroext 14, i32 %6931) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8ExtMulHighI8x16UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6932:                                             ; preds = %2
  %6933 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6934 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6933, align 8
  %6935 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6936 = load i32, i32* %6935, align 4
  %6937 = and i32 %6936, 16777215
  %6938 = zext i32 %6937 to i64
  %6939 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6940 = load i32*, i32** %6939, align 8
  %6941 = getelementptr inbounds i32, i32* %6940, i64 %6938
  %6942 = load i32, i32* %6941, align 4
  %6943 = icmp eq i32 %6942, -1
  br i1 %6943, label %6944, label %6948

6944:                                             ; preds = %6932
  %6945 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6934) #12
  %6946 = load i32*, i32** %6939, align 8
  %6947 = getelementptr inbounds i32, i32* %6946, i64 %6938
  store i32 %6945, i32* %6947, align 4
  br label %6948

6948:                                             ; preds = %6932, %6944
  %6949 = phi i32 [ %6945, %6944 ], [ %6942, %6932 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6934, i8 zeroext 14, i32 %6949) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector30VisitI16x8ExtAddPairwiseI8x16SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6950:                                             ; preds = %2
  %6951 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6952 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6951, align 8
  %6953 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6954 = load i32, i32* %6953, align 4
  %6955 = and i32 %6954, 16777215
  %6956 = zext i32 %6955 to i64
  %6957 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6958 = load i32*, i32** %6957, align 8
  %6959 = getelementptr inbounds i32, i32* %6958, i64 %6956
  %6960 = load i32, i32* %6959, align 4
  %6961 = icmp eq i32 %6960, -1
  br i1 %6961, label %6962, label %6966

6962:                                             ; preds = %6950
  %6963 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6952) #12
  %6964 = load i32*, i32** %6957, align 8
  %6965 = getelementptr inbounds i32, i32* %6964, i64 %6956
  store i32 %6963, i32* %6965, align 4
  br label %6966

6966:                                             ; preds = %6950, %6962
  %6967 = phi i32 [ %6963, %6962 ], [ %6960, %6950 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6952, i8 zeroext 14, i32 %6967) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector30VisitI16x8ExtAddPairwiseI8x16UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6968:                                             ; preds = %2
  %6969 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6970 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6969, align 8
  %6971 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6972 = load i32, i32* %6971, align 4
  %6973 = and i32 %6972, 16777215
  %6974 = zext i32 %6973 to i64
  %6975 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6976 = load i32*, i32** %6975, align 8
  %6977 = getelementptr inbounds i32, i32* %6976, i64 %6974
  %6978 = load i32, i32* %6977, align 4
  %6979 = icmp eq i32 %6978, -1
  br i1 %6979, label %6980, label %6984

6980:                                             ; preds = %6968
  %6981 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6970) #12
  %6982 = load i32*, i32** %6975, align 8
  %6983 = getelementptr inbounds i32, i32* %6982, i64 %6974
  store i32 %6981, i32* %6983, align 4
  br label %6984

6984:                                             ; preds = %6968, %6980
  %6985 = phi i32 [ %6981, %6980 ], [ %6978, %6968 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6970, i8 zeroext 14, i32 %6985) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitI8x16SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

6986:                                             ; preds = %2
  %6987 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %6988 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6987, align 8
  %6989 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6990 = load i32, i32* %6989, align 4
  %6991 = and i32 %6990, 16777215
  %6992 = zext i32 %6991 to i64
  %6993 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %6994 = load i32*, i32** %6993, align 8
  %6995 = getelementptr inbounds i32, i32* %6994, i64 %6992
  %6996 = load i32, i32* %6995, align 4
  %6997 = icmp eq i32 %6996, -1
  br i1 %6997, label %6998, label %7002

6998:                                             ; preds = %6986
  %6999 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %6988) #12
  %7000 = load i32*, i32** %6993, align 8
  %7001 = getelementptr inbounds i32, i32* %7000, i64 %6992
  store i32 %6999, i32* %7001, align 4
  br label %7002

7002:                                             ; preds = %6986, %6998
  %7003 = phi i32 [ %6999, %6998 ], [ %6996, %6986 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %6988, i8 zeroext 4, i32 %7003) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitI8x16ExtractLaneUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7004:                                             ; preds = %2
  %7005 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7006 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7005, align 8
  %7007 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7008 = load i32, i32* %7007, align 4
  %7009 = and i32 %7008, 16777215
  %7010 = zext i32 %7009 to i64
  %7011 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7012 = load i32*, i32** %7011, align 8
  %7013 = getelementptr inbounds i32, i32* %7012, i64 %7010
  %7014 = load i32, i32* %7013, align 4
  %7015 = icmp eq i32 %7014, -1
  br i1 %7015, label %7016, label %7020

7016:                                             ; preds = %7004
  %7017 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7006) #12
  %7018 = load i32*, i32** %7011, align 8
  %7019 = getelementptr inbounds i32, i32* %7018, i64 %7010
  store i32 %7017, i32* %7019, align 4
  br label %7020

7020:                                             ; preds = %7004, %7016
  %7021 = phi i32 [ %7017, %7016 ], [ %7014, %7004 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7006, i8 zeroext 4, i32 %7021) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector22VisitI8x16ExtractLaneSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7022:                                             ; preds = %2
  %7023 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7024 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7023, align 8
  %7025 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7026 = load i32, i32* %7025, align 4
  %7027 = and i32 %7026, 16777215
  %7028 = zext i32 %7027 to i64
  %7029 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7030 = load i32*, i32** %7029, align 8
  %7031 = getelementptr inbounds i32, i32* %7030, i64 %7028
  %7032 = load i32, i32* %7031, align 4
  %7033 = icmp eq i32 %7032, -1
  br i1 %7033, label %7034, label %7038

7034:                                             ; preds = %7022
  %7035 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7024) #12
  %7036 = load i32*, i32** %7029, align 8
  %7037 = getelementptr inbounds i32, i32* %7036, i64 %7028
  store i32 %7035, i32* %7037, align 4
  br label %7038

7038:                                             ; preds = %7022, %7034
  %7039 = phi i32 [ %7035, %7034 ], [ %7032, %7022 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7024, i8 zeroext 14, i32 %7039) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector21VisitI8x16ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7040:                                             ; preds = %2
  %7041 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7042 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7041, align 8
  %7043 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7044 = load i32, i32* %7043, align 4
  %7045 = and i32 %7044, 16777215
  %7046 = zext i32 %7045 to i64
  %7047 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7048 = load i32*, i32** %7047, align 8
  %7049 = getelementptr inbounds i32, i32* %7048, i64 %7046
  %7050 = load i32, i32* %7049, align 4
  %7051 = icmp eq i32 %7050, -1
  br i1 %7051, label %7052, label %7056

7052:                                             ; preds = %7040
  %7053 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7042) #12
  %7054 = load i32*, i32** %7047, align 8
  %7055 = getelementptr inbounds i32, i32* %7054, i64 %7046
  store i32 %7053, i32* %7055, align 4
  br label %7056

7056:                                             ; preds = %7040, %7052
  %7057 = phi i32 [ %7053, %7052 ], [ %7050, %7040 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7042, i8 zeroext 14, i32 %7057) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7058:                                             ; preds = %2
  %7059 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7060 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7059, align 8
  %7061 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7062 = load i32, i32* %7061, align 4
  %7063 = and i32 %7062, 16777215
  %7064 = zext i32 %7063 to i64
  %7065 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7066 = load i32*, i32** %7065, align 8
  %7067 = getelementptr inbounds i32, i32* %7066, i64 %7064
  %7068 = load i32, i32* %7067, align 4
  %7069 = icmp eq i32 %7068, -1
  br i1 %7069, label %7070, label %7074

7070:                                             ; preds = %7058
  %7071 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7060) #12
  %7072 = load i32*, i32** %7065, align 8
  %7073 = getelementptr inbounds i32, i32* %7072, i64 %7064
  store i32 %7071, i32* %7073, align 4
  br label %7074

7074:                                             ; preds = %7058, %7070
  %7075 = phi i32 [ %7071, %7070 ], [ %7068, %7058 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7060, i8 zeroext 14, i32 %7075) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7076:                                             ; preds = %2
  %7077 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7078 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7077, align 8
  %7079 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7080 = load i32, i32* %7079, align 4
  %7081 = and i32 %7080, 16777215
  %7082 = zext i32 %7081 to i64
  %7083 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7084 = load i32*, i32** %7083, align 8
  %7085 = getelementptr inbounds i32, i32* %7084, i64 %7082
  %7086 = load i32, i32* %7085, align 4
  %7087 = icmp eq i32 %7086, -1
  br i1 %7087, label %7088, label %7092

7088:                                             ; preds = %7076
  %7089 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7078) #12
  %7090 = load i32*, i32** %7083, align 8
  %7091 = getelementptr inbounds i32, i32* %7090, i64 %7082
  store i32 %7089, i32* %7091, align 4
  br label %7092

7092:                                             ; preds = %7076, %7088
  %7093 = phi i32 [ %7089, %7088 ], [ %7086, %7076 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7078, i8 zeroext 14, i32 %7093) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7094:                                             ; preds = %2
  %7095 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7096 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7095, align 8
  %7097 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7098 = load i32, i32* %7097, align 4
  %7099 = and i32 %7098, 16777215
  %7100 = zext i32 %7099 to i64
  %7101 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7102 = load i32*, i32** %7101, align 8
  %7103 = getelementptr inbounds i32, i32* %7102, i64 %7100
  %7104 = load i32, i32* %7103, align 4
  %7105 = icmp eq i32 %7104, -1
  br i1 %7105, label %7106, label %7110

7106:                                             ; preds = %7094
  %7107 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7096) #12
  %7108 = load i32*, i32** %7101, align 8
  %7109 = getelementptr inbounds i32, i32* %7108, i64 %7100
  store i32 %7107, i32* %7109, align 4
  br label %7110

7110:                                             ; preds = %7094, %7106
  %7111 = phi i32 [ %7107, %7106 ], [ %7104, %7094 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7096, i8 zeroext 14, i32 %7111) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitI8x16SConvertI16x8EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7112:                                             ; preds = %2
  %7113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7114 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7113, align 8
  %7115 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7116 = load i32, i32* %7115, align 4
  %7117 = and i32 %7116, 16777215
  %7118 = zext i32 %7117 to i64
  %7119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7120 = load i32*, i32** %7119, align 8
  %7121 = getelementptr inbounds i32, i32* %7120, i64 %7118
  %7122 = load i32, i32* %7121, align 4
  %7123 = icmp eq i32 %7122, -1
  br i1 %7123, label %7124, label %7128

7124:                                             ; preds = %7112
  %7125 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7114) #12
  %7126 = load i32*, i32** %7119, align 8
  %7127 = getelementptr inbounds i32, i32* %7126, i64 %7118
  store i32 %7125, i32* %7127, align 4
  br label %7128

7128:                                             ; preds = %7112, %7124
  %7129 = phi i32 [ %7125, %7124 ], [ %7122, %7112 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7114, i8 zeroext 14, i32 %7129) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7130:                                             ; preds = %2
  %7131 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7132 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7131, align 8
  %7133 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7134 = load i32, i32* %7133, align 4
  %7135 = and i32 %7134, 16777215
  %7136 = zext i32 %7135 to i64
  %7137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7138 = load i32*, i32** %7137, align 8
  %7139 = getelementptr inbounds i32, i32* %7138, i64 %7136
  %7140 = load i32, i32* %7139, align 4
  %7141 = icmp eq i32 %7140, -1
  br i1 %7141, label %7142, label %7146

7142:                                             ; preds = %7130
  %7143 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7132) #12
  %7144 = load i32*, i32** %7137, align 8
  %7145 = getelementptr inbounds i32, i32* %7144, i64 %7136
  store i32 %7143, i32* %7145, align 4
  br label %7146

7146:                                             ; preds = %7130, %7142
  %7147 = phi i32 [ %7143, %7142 ], [ %7140, %7130 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7132, i8 zeroext 14, i32 %7147) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16AddSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7148:                                             ; preds = %2
  %7149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7150 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7149, align 8
  %7151 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7152 = load i32, i32* %7151, align 4
  %7153 = and i32 %7152, 16777215
  %7154 = zext i32 %7153 to i64
  %7155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7156 = load i32*, i32** %7155, align 8
  %7157 = getelementptr inbounds i32, i32* %7156, i64 %7154
  %7158 = load i32, i32* %7157, align 4
  %7159 = icmp eq i32 %7158, -1
  br i1 %7159, label %7160, label %7164

7160:                                             ; preds = %7148
  %7161 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7150) #12
  %7162 = load i32*, i32** %7155, align 8
  %7163 = getelementptr inbounds i32, i32* %7162, i64 %7154
  store i32 %7161, i32* %7163, align 4
  br label %7164

7164:                                             ; preds = %7148, %7160
  %7165 = phi i32 [ %7161, %7160 ], [ %7158, %7148 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7150, i8 zeroext 14, i32 %7165) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7166:                                             ; preds = %2
  %7167 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7168 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7167, align 8
  %7169 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7170 = load i32, i32* %7169, align 4
  %7171 = and i32 %7170, 16777215
  %7172 = zext i32 %7171 to i64
  %7173 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7174 = load i32*, i32** %7173, align 8
  %7175 = getelementptr inbounds i32, i32* %7174, i64 %7172
  %7176 = load i32, i32* %7175, align 4
  %7177 = icmp eq i32 %7176, -1
  br i1 %7177, label %7178, label %7182

7178:                                             ; preds = %7166
  %7179 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7168) #12
  %7180 = load i32*, i32** %7173, align 8
  %7181 = getelementptr inbounds i32, i32* %7180, i64 %7172
  store i32 %7179, i32* %7181, align 4
  br label %7182

7182:                                             ; preds = %7166, %7178
  %7183 = phi i32 [ %7179, %7178 ], [ %7176, %7166 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7168, i8 zeroext 14, i32 %7183) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16SubSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7184:                                             ; preds = %2
  %7185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7186 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7185, align 8
  %7187 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7188 = load i32, i32* %7187, align 4
  %7189 = and i32 %7188, 16777215
  %7190 = zext i32 %7189 to i64
  %7191 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7192 = load i32*, i32** %7191, align 8
  %7193 = getelementptr inbounds i32, i32* %7192, i64 %7190
  %7194 = load i32, i32* %7193, align 4
  %7195 = icmp eq i32 %7194, -1
  br i1 %7195, label %7196, label %7200

7196:                                             ; preds = %7184
  %7197 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7186) #12
  %7198 = load i32*, i32** %7191, align 8
  %7199 = getelementptr inbounds i32, i32* %7198, i64 %7190
  store i32 %7197, i32* %7199, align 4
  br label %7200

7200:                                             ; preds = %7184, %7196
  %7201 = phi i32 [ %7197, %7196 ], [ %7194, %7184 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7186, i8 zeroext 14, i32 %7201) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MinSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7202:                                             ; preds = %2
  %7203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7204 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7203, align 8
  %7205 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7206 = load i32, i32* %7205, align 4
  %7207 = and i32 %7206, 16777215
  %7208 = zext i32 %7207 to i64
  %7209 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7210 = load i32*, i32** %7209, align 8
  %7211 = getelementptr inbounds i32, i32* %7210, i64 %7208
  %7212 = load i32, i32* %7211, align 4
  %7213 = icmp eq i32 %7212, -1
  br i1 %7213, label %7214, label %7218

7214:                                             ; preds = %7202
  %7215 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7204) #12
  %7216 = load i32*, i32** %7209, align 8
  %7217 = getelementptr inbounds i32, i32* %7216, i64 %7208
  store i32 %7215, i32* %7217, align 4
  br label %7218

7218:                                             ; preds = %7202, %7214
  %7219 = phi i32 [ %7215, %7214 ], [ %7212, %7202 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7204, i8 zeroext 14, i32 %7219) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MaxSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7220:                                             ; preds = %2
  %7221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7222 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7221, align 8
  %7223 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7224 = load i32, i32* %7223, align 4
  %7225 = and i32 %7224, 16777215
  %7226 = zext i32 %7225 to i64
  %7227 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7228 = load i32*, i32** %7227, align 8
  %7229 = getelementptr inbounds i32, i32* %7228, i64 %7226
  %7230 = load i32, i32* %7229, align 4
  %7231 = icmp eq i32 %7230, -1
  br i1 %7231, label %7232, label %7236

7232:                                             ; preds = %7220
  %7233 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7222) #12
  %7234 = load i32*, i32** %7227, align 8
  %7235 = getelementptr inbounds i32, i32* %7234, i64 %7226
  store i32 %7233, i32* %7235, align 4
  br label %7236

7236:                                             ; preds = %7220, %7232
  %7237 = phi i32 [ %7233, %7232 ], [ %7230, %7220 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7222, i8 zeroext 14, i32 %7237) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI8x16EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7238:                                             ; preds = %2
  %7239 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7240 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7239, align 8
  %7241 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7242 = load i32, i32* %7241, align 4
  %7243 = and i32 %7242, 16777215
  %7244 = zext i32 %7243 to i64
  %7245 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7246 = load i32*, i32** %7245, align 8
  %7247 = getelementptr inbounds i32, i32* %7246, i64 %7244
  %7248 = load i32, i32* %7247, align 4
  %7249 = icmp eq i32 %7248, -1
  br i1 %7249, label %7250, label %7254

7250:                                             ; preds = %7238
  %7251 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7240) #12
  %7252 = load i32*, i32** %7245, align 8
  %7253 = getelementptr inbounds i32, i32* %7252, i64 %7244
  store i32 %7251, i32* %7253, align 4
  br label %7254

7254:                                             ; preds = %7238, %7250
  %7255 = phi i32 [ %7251, %7250 ], [ %7248, %7238 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7240, i8 zeroext 14, i32 %7255) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitI8x16NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7256:                                             ; preds = %2
  %7257 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7258 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7257, align 8
  %7259 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7260 = load i32, i32* %7259, align 4
  %7261 = and i32 %7260, 16777215
  %7262 = zext i32 %7261 to i64
  %7263 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7264 = load i32*, i32** %7263, align 8
  %7265 = getelementptr inbounds i32, i32* %7264, i64 %7262
  %7266 = load i32, i32* %7265, align 4
  %7267 = icmp eq i32 %7266, -1
  br i1 %7267, label %7268, label %7272

7268:                                             ; preds = %7256
  %7269 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7258) #12
  %7270 = load i32*, i32** %7263, align 8
  %7271 = getelementptr inbounds i32, i32* %7270, i64 %7262
  store i32 %7269, i32* %7271, align 4
  br label %7272

7272:                                             ; preds = %7256, %7268
  %7273 = phi i32 [ %7269, %7268 ], [ %7266, %7256 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7258, i8 zeroext 14, i32 %7273) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7274:                                             ; preds = %2
  %7275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7276 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7275, align 8
  %7277 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7278 = load i32, i32* %7277, align 4
  %7279 = and i32 %7278, 16777215
  %7280 = zext i32 %7279 to i64
  %7281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7282 = load i32*, i32** %7281, align 8
  %7283 = getelementptr inbounds i32, i32* %7282, i64 %7280
  %7284 = load i32, i32* %7283, align 4
  %7285 = icmp eq i32 %7284, -1
  br i1 %7285, label %7286, label %7290

7286:                                             ; preds = %7274
  %7287 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7276) #12
  %7288 = load i32*, i32** %7281, align 8
  %7289 = getelementptr inbounds i32, i32* %7288, i64 %7280
  store i32 %7287, i32* %7289, align 4
  br label %7290

7290:                                             ; preds = %7274, %7286
  %7291 = phi i32 [ %7287, %7286 ], [ %7284, %7274 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7276, i8 zeroext 14, i32 %7291) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7292:                                             ; preds = %2
  %7293 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7294 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7293, align 8
  %7295 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7296 = load i32, i32* %7295, align 4
  %7297 = and i32 %7296, 16777215
  %7298 = zext i32 %7297 to i64
  %7299 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7300 = load i32*, i32** %7299, align 8
  %7301 = getelementptr inbounds i32, i32* %7300, i64 %7298
  %7302 = load i32, i32* %7301, align 4
  %7303 = icmp eq i32 %7302, -1
  br i1 %7303, label %7304, label %7308

7304:                                             ; preds = %7292
  %7305 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7294) #12
  %7306 = load i32*, i32** %7299, align 8
  %7307 = getelementptr inbounds i32, i32* %7306, i64 %7298
  store i32 %7305, i32* %7307, align 4
  br label %7308

7308:                                             ; preds = %7292, %7304
  %7309 = phi i32 [ %7305, %7304 ], [ %7302, %7292 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7294, i8 zeroext 14, i32 %7309) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7310:                                             ; preds = %2
  %7311 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7312 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7311, align 8
  %7313 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7314 = load i32, i32* %7313, align 4
  %7315 = and i32 %7314, 16777215
  %7316 = zext i32 %7315 to i64
  %7317 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7318 = load i32*, i32** %7317, align 8
  %7319 = getelementptr inbounds i32, i32* %7318, i64 %7316
  %7320 = load i32, i32* %7319, align 4
  %7321 = icmp eq i32 %7320, -1
  br i1 %7321, label %7322, label %7326

7322:                                             ; preds = %7310
  %7323 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7312) #12
  %7324 = load i32*, i32** %7317, align 8
  %7325 = getelementptr inbounds i32, i32* %7324, i64 %7316
  store i32 %7323, i32* %7325, align 4
  br label %7326

7326:                                             ; preds = %7310, %7322
  %7327 = phi i32 [ %7323, %7322 ], [ %7320, %7310 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7312, i8 zeroext 14, i32 %7327) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitI8x16UConvertI16x8EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7328:                                             ; preds = %2
  %7329 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7330 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7329, align 8
  %7331 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7332 = load i32, i32* %7331, align 4
  %7333 = and i32 %7332, 16777215
  %7334 = zext i32 %7333 to i64
  %7335 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7336 = load i32*, i32** %7335, align 8
  %7337 = getelementptr inbounds i32, i32* %7336, i64 %7334
  %7338 = load i32, i32* %7337, align 4
  %7339 = icmp eq i32 %7338, -1
  br i1 %7339, label %7340, label %7344

7340:                                             ; preds = %7328
  %7341 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7330) #12
  %7342 = load i32*, i32** %7335, align 8
  %7343 = getelementptr inbounds i32, i32* %7342, i64 %7334
  store i32 %7341, i32* %7343, align 4
  br label %7344

7344:                                             ; preds = %7328, %7340
  %7345 = phi i32 [ %7341, %7340 ], [ %7338, %7328 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7330, i8 zeroext 14, i32 %7345) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16AddSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7346:                                             ; preds = %2
  %7347 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7348 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7347, align 8
  %7349 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7350 = load i32, i32* %7349, align 4
  %7351 = and i32 %7350, 16777215
  %7352 = zext i32 %7351 to i64
  %7353 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7354 = load i32*, i32** %7353, align 8
  %7355 = getelementptr inbounds i32, i32* %7354, i64 %7352
  %7356 = load i32, i32* %7355, align 4
  %7357 = icmp eq i32 %7356, -1
  br i1 %7357, label %7358, label %7362

7358:                                             ; preds = %7346
  %7359 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7348) #12
  %7360 = load i32*, i32** %7353, align 8
  %7361 = getelementptr inbounds i32, i32* %7360, i64 %7352
  store i32 %7359, i32* %7361, align 4
  br label %7362

7362:                                             ; preds = %7346, %7358
  %7363 = phi i32 [ %7359, %7358 ], [ %7356, %7346 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7348, i8 zeroext 14, i32 %7363) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16SubSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7364:                                             ; preds = %2
  %7365 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7366 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7365, align 8
  %7367 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7368 = load i32, i32* %7367, align 4
  %7369 = and i32 %7368, 16777215
  %7370 = zext i32 %7369 to i64
  %7371 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7372 = load i32*, i32** %7371, align 8
  %7373 = getelementptr inbounds i32, i32* %7372, i64 %7370
  %7374 = load i32, i32* %7373, align 4
  %7375 = icmp eq i32 %7374, -1
  br i1 %7375, label %7376, label %7380

7376:                                             ; preds = %7364
  %7377 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7366) #12
  %7378 = load i32*, i32** %7371, align 8
  %7379 = getelementptr inbounds i32, i32* %7378, i64 %7370
  store i32 %7377, i32* %7379, align 4
  br label %7380

7380:                                             ; preds = %7364, %7376
  %7381 = phi i32 [ %7377, %7376 ], [ %7374, %7364 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7366, i8 zeroext 14, i32 %7381) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MinUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7382:                                             ; preds = %2
  %7383 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7384 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7383, align 8
  %7385 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7386 = load i32, i32* %7385, align 4
  %7387 = and i32 %7386, 16777215
  %7388 = zext i32 %7387 to i64
  %7389 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7390 = load i32*, i32** %7389, align 8
  %7391 = getelementptr inbounds i32, i32* %7390, i64 %7388
  %7392 = load i32, i32* %7391, align 4
  %7393 = icmp eq i32 %7392, -1
  br i1 %7393, label %7394, label %7398

7394:                                             ; preds = %7382
  %7395 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7384) #12
  %7396 = load i32*, i32** %7389, align 8
  %7397 = getelementptr inbounds i32, i32* %7396, i64 %7388
  store i32 %7395, i32* %7397, align 4
  br label %7398

7398:                                             ; preds = %7382, %7394
  %7399 = phi i32 [ %7395, %7394 ], [ %7392, %7382 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7384, i8 zeroext 14, i32 %7399) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MaxUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7400:                                             ; preds = %2
  %7401 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7402 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7401, align 8
  %7403 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7404 = load i32, i32* %7403, align 4
  %7405 = and i32 %7404, 16777215
  %7406 = zext i32 %7405 to i64
  %7407 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7408 = load i32*, i32** %7407, align 8
  %7409 = getelementptr inbounds i32, i32* %7408, i64 %7406
  %7410 = load i32, i32* %7409, align 4
  %7411 = icmp eq i32 %7410, -1
  br i1 %7411, label %7412, label %7416

7412:                                             ; preds = %7400
  %7413 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7402) #12
  %7414 = load i32*, i32** %7407, align 8
  %7415 = getelementptr inbounds i32, i32* %7414, i64 %7406
  store i32 %7413, i32* %7415, align 4
  br label %7416

7416:                                             ; preds = %7400, %7412
  %7417 = phi i32 [ %7413, %7412 ], [ %7410, %7400 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7402, i8 zeroext 14, i32 %7417) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GtUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7418:                                             ; preds = %2
  %7419 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7420 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7419, align 8
  %7421 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7422 = load i32, i32* %7421, align 4
  %7423 = and i32 %7422, 16777215
  %7424 = zext i32 %7423 to i64
  %7425 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7426 = load i32*, i32** %7425, align 8
  %7427 = getelementptr inbounds i32, i32* %7426, i64 %7424
  %7428 = load i32, i32* %7427, align 4
  %7429 = icmp eq i32 %7428, -1
  br i1 %7429, label %7430, label %7434

7430:                                             ; preds = %7418
  %7431 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7420) #12
  %7432 = load i32*, i32** %7425, align 8
  %7433 = getelementptr inbounds i32, i32* %7432, i64 %7424
  store i32 %7431, i32* %7433, align 4
  br label %7434

7434:                                             ; preds = %7418, %7430
  %7435 = phi i32 [ %7431, %7430 ], [ %7428, %7418 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7420, i8 zeroext 14, i32 %7435) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GeUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7436:                                             ; preds = %2
  %7437 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7438 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7437, align 8
  %7439 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7440 = load i32, i32* %7439, align 4
  %7441 = and i32 %7440, 16777215
  %7442 = zext i32 %7441 to i64
  %7443 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7444 = load i32*, i32** %7443, align 8
  %7445 = getelementptr inbounds i32, i32* %7444, i64 %7442
  %7446 = load i32, i32* %7445, align 4
  %7447 = icmp eq i32 %7446, -1
  br i1 %7447, label %7448, label %7452

7448:                                             ; preds = %7436
  %7449 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7438) #12
  %7450 = load i32*, i32** %7443, align 8
  %7451 = getelementptr inbounds i32, i32* %7450, i64 %7442
  store i32 %7449, i32* %7451, align 4
  br label %7452

7452:                                             ; preds = %7436, %7448
  %7453 = phi i32 [ %7449, %7448 ], [ %7446, %7436 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7438, i8 zeroext 14, i32 %7453) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector26VisitI8x16RoundingAverageUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7454:                                             ; preds = %2
  %7455 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7456 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7455, align 8
  %7457 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7458 = load i32, i32* %7457, align 4
  %7459 = and i32 %7458, 16777215
  %7460 = zext i32 %7459 to i64
  %7461 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7462 = load i32*, i32** %7461, align 8
  %7463 = getelementptr inbounds i32, i32* %7462, i64 %7460
  %7464 = load i32, i32* %7463, align 4
  %7465 = icmp eq i32 %7464, -1
  br i1 %7465, label %7466, label %7470

7466:                                             ; preds = %7454
  %7467 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7456) #12
  %7468 = load i32*, i32** %7461, align 8
  %7469 = getelementptr inbounds i32, i32* %7468, i64 %7460
  store i32 %7467, i32* %7469, align 4
  br label %7470

7470:                                             ; preds = %7454, %7466
  %7471 = phi i32 [ %7467, %7466 ], [ %7464, %7454 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7456, i8 zeroext 14, i32 %7471) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector16VisitI8x16PopcntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7472:                                             ; preds = %2
  %7473 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7474 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7473, align 8
  %7475 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7476 = load i32, i32* %7475, align 4
  %7477 = and i32 %7476, 16777215
  %7478 = zext i32 %7477 to i64
  %7479 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7480 = load i32*, i32** %7479, align 8
  %7481 = getelementptr inbounds i32, i32* %7480, i64 %7478
  %7482 = load i32, i32* %7481, align 4
  %7483 = icmp eq i32 %7482, -1
  br i1 %7483, label %7484, label %7488

7484:                                             ; preds = %7472
  %7485 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7474) #12
  %7486 = load i32*, i32** %7479, align 8
  %7487 = getelementptr inbounds i32, i32* %7486, i64 %7478
  store i32 %7485, i32* %7487, align 4
  br label %7488

7488:                                             ; preds = %7472, %7484
  %7489 = phi i32 [ %7485, %7484 ], [ %7482, %7472 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7474, i8 zeroext 14, i32 %7489) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7490:                                             ; preds = %2
  %7491 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7492 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7491, align 8
  %7493 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7494 = load i32, i32* %7493, align 4
  %7495 = and i32 %7494, 16777215
  %7496 = zext i32 %7495 to i64
  %7497 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7498 = load i32*, i32** %7497, align 8
  %7499 = getelementptr inbounds i32, i32* %7498, i64 %7496
  %7500 = load i32, i32* %7499, align 4
  %7501 = icmp eq i32 %7500, -1
  br i1 %7501, label %7502, label %7506

7502:                                             ; preds = %7490
  %7503 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7492) #12
  %7504 = load i32*, i32** %7497, align 8
  %7505 = getelementptr inbounds i32, i32* %7504, i64 %7496
  store i32 %7503, i32* %7505, align 4
  br label %7506

7506:                                             ; preds = %7490, %7502
  %7507 = phi i32 [ %7503, %7502 ], [ %7500, %7490 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7492, i8 zeroext 4, i32 %7507) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7508:                                             ; preds = %2
  %7509 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7510 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7509, align 8
  %7511 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7512 = load i32, i32* %7511, align 4
  %7513 = and i32 %7512, 16777215
  %7514 = zext i32 %7513 to i64
  %7515 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7516 = load i32*, i32** %7515, align 8
  %7517 = getelementptr inbounds i32, i32* %7516, i64 %7514
  %7518 = load i32, i32* %7517, align 4
  %7519 = icmp eq i32 %7518, -1
  br i1 %7519, label %7520, label %7524

7520:                                             ; preds = %7508
  %7521 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7510) #12
  %7522 = load i32*, i32** %7515, align 8
  %7523 = getelementptr inbounds i32, i32* %7522, i64 %7514
  store i32 %7521, i32* %7523, align 4
  br label %7524

7524:                                             ; preds = %7508, %7520
  %7525 = phi i32 [ %7521, %7520 ], [ %7518, %7508 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7510, i8 zeroext 14, i32 %7525) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector14VisitS128ConstEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7526:                                             ; preds = %2
  %7527 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7528 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7527, align 8
  %7529 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7530 = load i32, i32* %7529, align 4
  %7531 = and i32 %7530, 16777215
  %7532 = zext i32 %7531 to i64
  %7533 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7534 = load i32*, i32** %7533, align 8
  %7535 = getelementptr inbounds i32, i32* %7534, i64 %7532
  %7536 = load i32, i32* %7535, align 4
  %7537 = icmp eq i32 %7536, -1
  br i1 %7537, label %7538, label %7542

7538:                                             ; preds = %7526
  %7539 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7528) #12
  %7540 = load i32*, i32** %7533, align 8
  %7541 = getelementptr inbounds i32, i32* %7540, i64 %7532
  store i32 %7539, i32* %7541, align 4
  br label %7542

7542:                                             ; preds = %7526, %7538
  %7543 = phi i32 [ %7539, %7538 ], [ %7536, %7526 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7528, i8 zeroext 14, i32 %7543) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitS128ZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7544:                                             ; preds = %2
  %7545 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7546 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7545, align 8
  %7547 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7548 = load i32, i32* %7547, align 4
  %7549 = and i32 %7548, 16777215
  %7550 = zext i32 %7549 to i64
  %7551 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7552 = load i32*, i32** %7551, align 8
  %7553 = getelementptr inbounds i32, i32* %7552, i64 %7550
  %7554 = load i32, i32* %7553, align 4
  %7555 = icmp eq i32 %7554, -1
  br i1 %7555, label %7556, label %7560

7556:                                             ; preds = %7544
  %7557 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7546) #12
  %7558 = load i32*, i32** %7551, align 8
  %7559 = getelementptr inbounds i32, i32* %7558, i64 %7550
  store i32 %7557, i32* %7559, align 4
  br label %7560

7560:                                             ; preds = %7544, %7556
  %7561 = phi i32 [ %7557, %7556 ], [ %7554, %7544 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7546, i8 zeroext 14, i32 %7561) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitS128AndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7562:                                             ; preds = %2
  %7563 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7564 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7563, align 8
  %7565 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7566 = load i32, i32* %7565, align 4
  %7567 = and i32 %7566, 16777215
  %7568 = zext i32 %7567 to i64
  %7569 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7570 = load i32*, i32** %7569, align 8
  %7571 = getelementptr inbounds i32, i32* %7570, i64 %7568
  %7572 = load i32, i32* %7571, align 4
  %7573 = icmp eq i32 %7572, -1
  br i1 %7573, label %7574, label %7578

7574:                                             ; preds = %7562
  %7575 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7564) #12
  %7576 = load i32*, i32** %7569, align 8
  %7577 = getelementptr inbounds i32, i32* %7576, i64 %7568
  store i32 %7575, i32* %7577, align 4
  br label %7578

7578:                                             ; preds = %7562, %7574
  %7579 = phi i32 [ %7575, %7574 ], [ %7572, %7562 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7564, i8 zeroext 14, i32 %7579) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector11VisitS128OrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7580:                                             ; preds = %2
  %7581 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7582 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7581, align 8
  %7583 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7584 = load i32, i32* %7583, align 4
  %7585 = and i32 %7584, 16777215
  %7586 = zext i32 %7585 to i64
  %7587 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7588 = load i32*, i32** %7587, align 8
  %7589 = getelementptr inbounds i32, i32* %7588, i64 %7586
  %7590 = load i32, i32* %7589, align 4
  %7591 = icmp eq i32 %7590, -1
  br i1 %7591, label %7592, label %7596

7592:                                             ; preds = %7580
  %7593 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7582) #12
  %7594 = load i32*, i32** %7587, align 8
  %7595 = getelementptr inbounds i32, i32* %7594, i64 %7586
  store i32 %7593, i32* %7595, align 4
  br label %7596

7596:                                             ; preds = %7580, %7592
  %7597 = phi i32 [ %7593, %7592 ], [ %7590, %7580 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7582, i8 zeroext 14, i32 %7597) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitS128XorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7598:                                             ; preds = %2
  %7599 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7600 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7599, align 8
  %7601 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7602 = load i32, i32* %7601, align 4
  %7603 = and i32 %7602, 16777215
  %7604 = zext i32 %7603 to i64
  %7605 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7606 = load i32*, i32** %7605, align 8
  %7607 = getelementptr inbounds i32, i32* %7606, i64 %7604
  %7608 = load i32, i32* %7607, align 4
  %7609 = icmp eq i32 %7608, -1
  br i1 %7609, label %7610, label %7614

7610:                                             ; preds = %7598
  %7611 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7600) #12
  %7612 = load i32*, i32** %7605, align 8
  %7613 = getelementptr inbounds i32, i32* %7612, i64 %7604
  store i32 %7611, i32* %7613, align 4
  br label %7614

7614:                                             ; preds = %7598, %7610
  %7615 = phi i32 [ %7611, %7610 ], [ %7608, %7598 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7600, i8 zeroext 14, i32 %7615) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector12VisitS128NotEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7616:                                             ; preds = %2
  %7617 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7618 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7617, align 8
  %7619 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7620 = load i32, i32* %7619, align 4
  %7621 = and i32 %7620, 16777215
  %7622 = zext i32 %7621 to i64
  %7623 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7624 = load i32*, i32** %7623, align 8
  %7625 = getelementptr inbounds i32, i32* %7624, i64 %7622
  %7626 = load i32, i32* %7625, align 4
  %7627 = icmp eq i32 %7626, -1
  br i1 %7627, label %7628, label %7632

7628:                                             ; preds = %7616
  %7629 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7618) #12
  %7630 = load i32*, i32** %7623, align 8
  %7631 = getelementptr inbounds i32, i32* %7630, i64 %7622
  store i32 %7629, i32* %7631, align 4
  br label %7632

7632:                                             ; preds = %7616, %7628
  %7633 = phi i32 [ %7629, %7628 ], [ %7626, %7616 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7618, i8 zeroext 14, i32 %7633) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitS128SelectEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7634:                                             ; preds = %2
  %7635 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7636 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7635, align 8
  %7637 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7638 = load i32, i32* %7637, align 4
  %7639 = and i32 %7638, 16777215
  %7640 = zext i32 %7639 to i64
  %7641 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7642 = load i32*, i32** %7641, align 8
  %7643 = getelementptr inbounds i32, i32* %7642, i64 %7640
  %7644 = load i32, i32* %7643, align 4
  %7645 = icmp eq i32 %7644, -1
  br i1 %7645, label %7646, label %7650

7646:                                             ; preds = %7634
  %7647 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7636) #12
  %7648 = load i32*, i32** %7641, align 8
  %7649 = getelementptr inbounds i32, i32* %7648, i64 %7640
  store i32 %7647, i32* %7649, align 4
  br label %7650

7650:                                             ; preds = %7634, %7646
  %7651 = phi i32 [ %7647, %7646 ], [ %7644, %7634 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7636, i8 zeroext 14, i32 %7651) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector15VisitS128AndNotEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7652:                                             ; preds = %2
  %7653 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7654 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7653, align 8
  %7655 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7656 = load i32, i32* %7655, align 4
  %7657 = and i32 %7656, 16777215
  %7658 = zext i32 %7657 to i64
  %7659 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7660 = load i32*, i32** %7659, align 8
  %7661 = getelementptr inbounds i32, i32* %7660, i64 %7658
  %7662 = load i32, i32* %7661, align 4
  %7663 = icmp eq i32 %7662, -1
  br i1 %7663, label %7664, label %7668

7664:                                             ; preds = %7652
  %7665 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7654) #12
  %7666 = load i32*, i32** %7659, align 8
  %7667 = getelementptr inbounds i32, i32* %7666, i64 %7658
  store i32 %7665, i32* %7667, align 4
  br label %7668

7668:                                             ; preds = %7652, %7664
  %7669 = phi i32 [ %7665, %7664 ], [ %7662, %7652 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7654, i8 zeroext 14, i32 %7669) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16SwizzleEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7670:                                             ; preds = %2
  %7671 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7672 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7671, align 8
  %7673 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7674 = load i32, i32* %7673, align 4
  %7675 = and i32 %7674, 16777215
  %7676 = zext i32 %7675 to i64
  %7677 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7678 = load i32*, i32** %7677, align 8
  %7679 = getelementptr inbounds i32, i32* %7678, i64 %7676
  %7680 = load i32, i32* %7679, align 4
  %7681 = icmp eq i32 %7680, -1
  br i1 %7681, label %7682, label %7686

7682:                                             ; preds = %7670
  %7683 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7672) #12
  %7684 = load i32*, i32** %7677, align 8
  %7685 = getelementptr inbounds i32, i32* %7684, i64 %7676
  store i32 %7683, i32* %7685, align 4
  br label %7686

7686:                                             ; preds = %7670, %7682
  %7687 = phi i32 [ %7683, %7682 ], [ %7680, %7670 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7672, i8 zeroext 14, i32 %7687) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16ShuffleEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7688:                                             ; preds = %2
  %7689 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7690 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7689, align 8
  %7691 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7692 = load i32, i32* %7691, align 4
  %7693 = and i32 %7692, 16777215
  %7694 = zext i32 %7693 to i64
  %7695 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7696 = load i32*, i32** %7695, align 8
  %7697 = getelementptr inbounds i32, i32* %7696, i64 %7694
  %7698 = load i32, i32* %7697, align 4
  %7699 = icmp eq i32 %7698, -1
  br i1 %7699, label %7700, label %7704

7700:                                             ; preds = %7688
  %7701 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7690) #12
  %7702 = load i32*, i32** %7695, align 8
  %7703 = getelementptr inbounds i32, i32* %7702, i64 %7694
  store i32 %7701, i32* %7703, align 4
  br label %7704

7704:                                             ; preds = %7688, %7700
  %7705 = phi i32 [ %7701, %7700 ], [ %7698, %7688 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7690, i8 zeroext 4, i32 %7705) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector16VisitV128AnyTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7706:                                             ; preds = %2
  %7707 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7708 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7707, align 8
  %7709 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7710 = load i32, i32* %7709, align 4
  %7711 = and i32 %7710, 16777215
  %7712 = zext i32 %7711 to i64
  %7713 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7714 = load i32*, i32** %7713, align 8
  %7715 = getelementptr inbounds i32, i32* %7714, i64 %7712
  %7716 = load i32, i32* %7715, align 4
  %7717 = icmp eq i32 %7716, -1
  br i1 %7717, label %7718, label %7722

7718:                                             ; preds = %7706
  %7719 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7708) #12
  %7720 = load i32*, i32** %7713, align 8
  %7721 = getelementptr inbounds i32, i32* %7720, i64 %7712
  store i32 %7719, i32* %7721, align 4
  br label %7722

7722:                                             ; preds = %7706, %7718
  %7723 = phi i32 [ %7719, %7718 ], [ %7716, %7706 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7708, i8 zeroext 4, i32 %7723) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI64x2AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7724:                                             ; preds = %2
  %7725 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7726 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7725, align 8
  %7727 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7728 = load i32, i32* %7727, align 4
  %7729 = and i32 %7728, 16777215
  %7730 = zext i32 %7729 to i64
  %7731 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7732 = load i32*, i32** %7731, align 8
  %7733 = getelementptr inbounds i32, i32* %7732, i64 %7730
  %7734 = load i32, i32* %7733, align 4
  %7735 = icmp eq i32 %7734, -1
  br i1 %7735, label %7736, label %7740

7736:                                             ; preds = %7724
  %7737 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7726) #12
  %7738 = load i32*, i32** %7731, align 8
  %7739 = getelementptr inbounds i32, i32* %7738, i64 %7730
  store i32 %7737, i32* %7739, align 4
  br label %7740

7740:                                             ; preds = %7724, %7736
  %7741 = phi i32 [ %7737, %7736 ], [ %7734, %7724 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7726, i8 zeroext 4, i32 %7741) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI32x4AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7742:                                             ; preds = %2
  %7743 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7744 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7743, align 8
  %7745 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7746 = load i32, i32* %7745, align 4
  %7747 = and i32 %7746, 16777215
  %7748 = zext i32 %7747 to i64
  %7749 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7750 = load i32*, i32** %7749, align 8
  %7751 = getelementptr inbounds i32, i32* %7750, i64 %7748
  %7752 = load i32, i32* %7751, align 4
  %7753 = icmp eq i32 %7752, -1
  br i1 %7753, label %7754, label %7758

7754:                                             ; preds = %7742
  %7755 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7744) #12
  %7756 = load i32*, i32** %7749, align 8
  %7757 = getelementptr inbounds i32, i32* %7756, i64 %7748
  store i32 %7755, i32* %7757, align 4
  br label %7758

7758:                                             ; preds = %7742, %7754
  %7759 = phi i32 [ %7755, %7754 ], [ %7752, %7742 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7744, i8 zeroext 4, i32 %7759) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7760:                                             ; preds = %2
  %7761 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7762 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7761, align 8
  %7763 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7764 = load i32, i32* %7763, align 4
  %7765 = and i32 %7764, 16777215
  %7766 = zext i32 %7765 to i64
  %7767 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %7768 = load i32*, i32** %7767, align 8
  %7769 = getelementptr inbounds i32, i32* %7768, i64 %7766
  %7770 = load i32, i32* %7769, align 4
  %7771 = icmp eq i32 %7770, -1
  br i1 %7771, label %7772, label %7776

7772:                                             ; preds = %7760
  %7773 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7762) #12
  %7774 = load i32*, i32** %7767, align 8
  %7775 = getelementptr inbounds i32, i32* %7774, i64 %7766
  store i32 %7773, i32* %7775, align 4
  br label %7776

7776:                                             ; preds = %7760, %7772
  %7777 = phi i32 [ %7773, %7772 ], [ %7770, %7760 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7762, i8 zeroext 4, i32 %7777) #12
  tail call void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %7785

7778:                                             ; preds = %2
  %7779 = zext i16 %39 to i32
  %7780 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 0, i32 1
  %7781 = load i8*, i8** %7780, align 8
  %7782 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7783 = load i32, i32* %7782, align 4
  %7784 = and i32 %7783, 16777215
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 %7779, i8* %7781, i32 %7784) #13
  unreachable

7785:                                             ; preds = %226, %207, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %7776, %7758, %7740, %7722, %7704, %7686, %7668, %7650, %7632, %7614, %7596, %7578, %7560, %7542, %7524, %7506, %7488, %7470, %7452, %7434, %7416, %7398, %7380, %7362, %7344, %7326, %7308, %7290, %7272, %7254, %7236, %7218, %7200, %7182, %7164, %7146, %7128, %7110, %7092, %7074, %7056, %7038, %7020, %7002, %6984, %6966, %6948, %6930, %6912, %6894, %6876, %6858, %6840, %6822, %6804, %6786, %6768, %6750, %6732, %6714, %6696, %6678, %6660, %6642, %6624, %6606, %6588, %6570, %6552, %6534, %6516, %6498, %6480, %6462, %6444, %6426, %6408, %6390, %6372, %6354, %6336, %6318, %6300, %6282, %6264, %6246, %6228, %6210, %6192, %6174, %6156, %6138, %6120, %6102, %6084, %6066, %6048, %6030, %6012, %5994, %5976, %5958, %5940, %5922, %5904, %5886, %5868, %5850, %5832, %5814, %5796, %5778, %5760, %5742, %5724, %5706, %5688, %5670, %5652, %5634, %5616, %5598, %5580, %5562, %5544, %5526, %5508, %5490, %5472, %5454, %5436, %5418, %5400, %5382, %5364, %5346, %5328, %5310, %5292, %5274, %5256, %5238, %5220, %5202, %5183, %5165, %5146, %5128, %5110, %5092, %5074, %5056, %5038, %5020, %5002, %4984, %4966, %4948, %4930, %4912, %4894, %4876, %4858, %4840, %4822, %4804, %4786, %4768, %4750, %4732, %4714, %4696, %4678, %4660, %4642, %4624, %4606, %4588, %4570, %4552, %4534, %4516, %4498, %4480, %4462, %4444, %4426, %4408, %4390, %4372, %4354, %4336, %4318, %4300, %4282, %4264, %4246, %4228, %4210, %4192, %4174, %4156, %4138, %4120, %4102, %4084, %4066, %4048, %4030, %4012, %3985, %3965, %3945, %3925, %3905, %3885, %3865, %3845, %3825, %3805, %3785, %3765, %3745, %3725, %3704, %3703, %3701, %3681, %3662, %3655, %3653, %3618, %3582, %3546, %3520, %3519, %3517, %3499, %3481, %3463, %3445, %3427, %3409, %3391, %3373, %3355, %3337, %3319, %3301, %3283, %3265, %3247, %3227, %3181, %3180, %3179, %3177, %3159, %3141, %3123, %3105, %3087, %3069, %3051, %3033, %3015, %2997, %2979, %2961, %2943, %2925, %2907, %2889, %2871, %2853, %2835, %2817, %2799, %2781, %2763, %2745, %2727, %2709, %2691, %2673, %2655, %2637, %2617, %2570, %2552, %2535, %2534, %2533, %2531, %2513, %2495, %2477, %2459, %2441, %2423, %2405, %2387, %2369, %2351, %2333, %2315, %2297, %2279, %2261, %2243, %2225, %2207, %2189, %2171, %2153, %2135, %2117, %2099, %2081, %2063, %2045, %2027, %2009, %1991, %1973, %1953, %1924, %1885, %1867, %1849, %1831, %1813, %1795, %1777, %1759, %1739, %1687, %1667, %1615, %1598, %1597, %1595, %1578, %1577, %1575, %1557, %1539, %1521, %1503, %1485, %1467, %1450, %1448, %1431, %1430, %1428, %1411, %1410, %1408, %1390, %1373, %1371, %1353, %1336, %1334, %1316, %1298, %1278, %1232, %1230, %1212, %1194, %1176, %1158, %1140, %1122, %1104, %1086, %1068, %1050, %1032, %1014, %996, %976, %929, %911, %893, %875, %857, %839, %821, %804, %802, %784, %766, %748, %730, %712, %694, %676, %658, %641, %640, %638, %618, %600, %582, %545, %499, %498, %493, %489, %488, %484, %450, %419, %418, %417, %416, %405, %379, %336, %309, %282, %255, %229, %228, %205, %187, %140, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector9VisitGotoEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Constant", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 0
  store i32 7, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 1
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %14 = sext i32 %10 to i64
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %7, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  %16 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  store i64 %15, i64* %19, align 8
  %20 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 12, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %5, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector9VisitCallEPNS1_4NodeEPNS1_10BasicBlockE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::Constant", align 8
  %6 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %7 = alloca %"struct.v8::internal::compiler::CallBuffer", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %10 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler16CallDescriptorOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %9) #12
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %10, i64 0, i32 11, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %3
  %16 = shl i32 %12, 14
  %17 = and i32 %16, 4194304
  %18 = or i32 %17, 8
  %19 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 0, i64* %20, align 8
  %21 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %18, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %22 = load i32, i32* %11, align 8
  br label %23

23:                                               ; preds = %15, %3
  %24 = phi i32 [ %22, %15 ], [ %12, %3 ]
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %62, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %10, i64 0, i32 4
  %29 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 251658240
  %35 = icmp eq i32 %34, 251658240
  %36 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %37 = add i64 %36, 32
  br i1 %35, label %38, label %42

38:                                               ; preds = %27
  %39 = inttoptr i64 %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 16
  br label %42

42:                                               ; preds = %27, %38
  %43 = phi i64 [ %41, %38 ], [ %37, %27 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::Node"**
  %45 = shl i64 %31, 32
  %46 = add i64 %45, 4294967296
  %47 = ashr exact i64 %46, 32
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 %47
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %51 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %51, i64 0, i32 1
  %53 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %52, align 8
  %54 = call fastcc %"class.v8::internal::compiler::FrameStateDescriptor"* @_ZN2v88internal8compiler12_GLOBAL__N_131GetFrameStateDescriptorInternalEPNS0_4ZoneENS1_10FrameStateE(%"class.v8::internal::Zone"* %53, %"class.v8::internal::compiler::Node"* %49) #12
  %55 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 30
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateDescriptor", %"class.v8::internal::compiler::FrameStateDescriptor"* %54, i64 0, i32 6
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %56, align 8
  %60 = icmp ult i64 %59, %58
  %61 = select i1 %60, i64 %58, i64 %59
  store i64 %61, i64* %56, align 8
  br label %62

62:                                               ; preds = %23, %42
  %63 = phi %"class.v8::internal::compiler::FrameStateDescriptor"* [ %54, %42 ], [ null, %23 ]
  %64 = bitcast %"struct.v8::internal::compiler::CallBuffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %66 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %65, align 8
  call void @_ZN2v88internal8compiler10CallBufferC2EPNS0_4ZoneEPKNS1_14CallDescriptorEPNS1_20FrameStateDescriptorE(%"struct.v8::internal::compiler::CallBuffer"* nonnull %7, %"class.v8::internal::Zone"* %66, %"class.v8::internal::compiler::CallDescriptor"* %10, %"class.v8::internal::compiler::FrameStateDescriptor"* %63)
  %67 = load i32, i32* %11, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20InitializeCallBufferEPNS1_4NodeEPNS1_10CallBufferENS_4base5FlagsINS2_14CallBufferFlagEiEEbi(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"struct.v8::internal::compiler::CallBuffer"* nonnull %7, i32 3, i1 zeroext false, i32 0)
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 5
  call void @_ZN2v88internal8compiler19InstructionSelector20EmitPrepareArgumentsEPNS0_10ZoneVectorINS1_13PushParameterEEEPKNS1_14CallDescriptorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::ZoneVector.1544"* %68, %"class.v8::internal::compiler::CallDescriptor"* %10, %"class.v8::internal::compiler::Node"* %1) #12
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 5, i32 0, i32 0, i32 1
  %70 = bitcast %"struct.v8::internal::compiler::PushParameter"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.v8::internal::ZoneVector.1544"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = ashr exact i64 %74, 4
  %76 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 31
  %77 = load i64*, i64** %76, align 8
  %78 = load i64, i64* %77, align 8
  %79 = icmp ugt i64 %78, %75
  %80 = select i1 %79, i64 %78, i64 %75
  store i64 %80, i64* %77, align 8
  %81 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %2, null
  br i1 %81, label %314, label %82

82:                                               ; preds = %62
  %83 = or i32 %67, 2
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0
  %85 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %86 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %85, align 8
  %87 = bitcast %"class.v8::internal::compiler::Constant"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 0
  store i32 7, i32* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 1
  store i8 0, i8* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 2
  %93 = sext i32 %89 to i64
  store i64 %93, i64* %92, align 8
  %94 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %86, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #12
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %96 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %95, align 8
  %97 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %98 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %97, align 8
  %99 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %96, %98
  %100 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %98 to i64
  br i1 %99, label %101, label %106

101:                                              ; preds = %82
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %96, i64 0, i32 0
  store i64 %94, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %96, i64 1
  %104 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %103 to i64
  %105 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %95 to i64*
  store i64 %104, i64* %105, align 8
  br label %314

106:                                              ; preds = %82
  %107 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %96 to i64
  %108 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %95 to i64*
  %109 = bitcast %"class.std::__1::vector.1241"* %84 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %107, %110
  %112 = ashr exact i64 %111, 3
  %113 = add nsw i64 %112, 1
  %114 = icmp ugt i64 %113, 268435455
  br i1 %114, label %115, label %117

115:                                              ; preds = %106
  %116 = bitcast %"class.std::__1::vector.1241"* %84 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #13
  unreachable

117:                                              ; preds = %106
  %118 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %97 to i64*
  %119 = sub i64 %100, %110
  %120 = ashr exact i64 %119, 3
  %121 = icmp ult i64 %120, 134217727
  br i1 %121, label %122, label %127

122:                                              ; preds = %117
  %123 = ashr exact i64 %119, 2
  %124 = icmp ult i64 %123, %113
  %125 = select i1 %124, i64 %113, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %145, label %127

127:                                              ; preds = %122, %117
  %128 = phi i64 [ %125, %122 ], [ 268435455, %117 ]
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %130 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %129, align 8
  %131 = shl i64 %128, 3
  %132 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %130, i64 0, i32 2
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %130, i64 0, i32 3
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %135, %133
  %137 = icmp ugt i64 %131, %136
  br i1 %137, label %138, label %140, !prof !2

138:                                              ; preds = %127
  %139 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %130, i64 %131) #12
  br label %142

140:                                              ; preds = %127
  %141 = add i64 %133, %131
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %140, %138
  %143 = phi i64 [ %139, %138 ], [ %133, %140 ]
  %144 = inttoptr i64 %143 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %145

145:                                              ; preds = %142, %122
  %146 = phi i64 [ %128, %142 ], [ 0, %122 ]
  %147 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %144, %142 ], [ null, %122 ]
  %148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 %112
  %149 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 %146
  %150 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %149 to i64
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 0, i32 0
  store i64 %94, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 1
  %153 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %152 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %84, i64 0, i32 0, i32 0
  %155 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %154, align 8
  %156 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %155 to i64
  %157 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %95, align 8
  %158 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %157, %155
  br i1 %158, label %311, label %159

159:                                              ; preds = %145
  %160 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 -1, i32 0
  %161 = ptrtoint i64* %160 to i64
  %162 = sub i64 %161, %156
  %163 = lshr i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = icmp ult i64 %164, 4
  br i1 %165, label %255, label %166

166:                                              ; preds = %159
  %167 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 -1, i32 0
  %168 = ptrtoint i64* %167 to i64
  %169 = sub i64 %168, %156
  %170 = lshr i64 %169, 3
  %171 = xor i64 %170, -1
  %172 = add nsw i64 %112, %171
  %173 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 %172
  %174 = xor i64 %170, -1
  %175 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 %174
  %176 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %173, %157
  %177 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %175, %148
  %178 = and i1 %176, %177
  br i1 %178, label %255, label %179

179:                                              ; preds = %166
  %180 = and i64 %164, 4611686018427387900
  %181 = sub nsw i64 0, %180
  %182 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 %181
  %183 = sub nsw i64 0, %180
  %184 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 %183
  %185 = add nsw i64 %180, -4
  %186 = lshr exact i64 %185, 2
  %187 = add nuw nsw i64 %186, 1
  %188 = and i64 %187, 1
  %189 = icmp eq i64 %185, 0
  br i1 %189, label %232, label %190

190:                                              ; preds = %179
  %191 = sub nuw nsw i64 %187, %188
  %192 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 -1
  %193 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 -1
  br label %194

194:                                              ; preds = %194, %190
  %195 = phi i64 [ 0, %190 ], [ %229, %194 ]
  %196 = phi i64 [ %191, %190 ], [ %230, %194 ]
  %197 = sub i64 0, %195
  %198 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 %197
  %199 = sub i64 0, %195
  %200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %192, i64 %199
  %201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %200, i64 0, i32 0
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 -1, i32 0
  %203 = getelementptr inbounds i64, i64* %201, i64 -1
  %204 = bitcast i64* %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8, !alias.scope !292
  %206 = getelementptr inbounds i64, i64* %201, i64 -3
  %207 = bitcast i64* %206 to <2 x i64>*
  %208 = load <2 x i64>, <2 x i64>* %207, align 8, !alias.scope !292
  %209 = getelementptr inbounds i64, i64* %202, i64 -1
  %210 = bitcast i64* %209 to <2 x i64>*
  store <2 x i64> %205, <2 x i64>* %210, align 8, !alias.scope !295, !noalias !292
  %211 = getelementptr inbounds i64, i64* %202, i64 -3
  %212 = bitcast i64* %211 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %212, align 8, !alias.scope !295, !noalias !292
  %213 = sub nuw nsw i64 -4, %195
  %214 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 %213
  %215 = sub nuw nsw i64 -4, %195
  %216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %193, i64 %215
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 0, i32 0
  %218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %214, i64 -1, i32 0
  %219 = getelementptr inbounds i64, i64* %217, i64 -1
  %220 = bitcast i64* %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !alias.scope !292
  %222 = getelementptr inbounds i64, i64* %217, i64 -3
  %223 = bitcast i64* %222 to <2 x i64>*
  %224 = load <2 x i64>, <2 x i64>* %223, align 8, !alias.scope !292
  %225 = getelementptr inbounds i64, i64* %218, i64 -1
  %226 = bitcast i64* %225 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %226, align 8, !alias.scope !295, !noalias !292
  %227 = getelementptr inbounds i64, i64* %218, i64 -3
  %228 = bitcast i64* %227 to <2 x i64>*
  store <2 x i64> %224, <2 x i64>* %228, align 8, !alias.scope !295, !noalias !292
  %229 = add i64 %195, 8
  %230 = add i64 %196, -2
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %194, !llvm.loop !297

232:                                              ; preds = %194, %179
  %233 = phi i64 [ 0, %179 ], [ %229, %194 ]
  %234 = icmp eq i64 %188, 0
  br i1 %234, label %253, label %235

235:                                              ; preds = %232
  %236 = sub i64 0, %233
  %237 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 %236
  %238 = sub i64 0, %233
  %239 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 -1
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %239, i64 %238
  %241 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %240, i64 0, i32 0
  %242 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %237, i64 -1, i32 0
  %243 = getelementptr inbounds i64, i64* %241, i64 -1
  %244 = bitcast i64* %243 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8, !alias.scope !292
  %246 = getelementptr inbounds i64, i64* %241, i64 -3
  %247 = bitcast i64* %246 to <2 x i64>*
  %248 = load <2 x i64>, <2 x i64>* %247, align 8, !alias.scope !292
  %249 = getelementptr inbounds i64, i64* %242, i64 -1
  %250 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %250, align 8, !alias.scope !295, !noalias !292
  %251 = getelementptr inbounds i64, i64* %242, i64 -3
  %252 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> %248, <2 x i64>* %252, align 8, !alias.scope !295, !noalias !292
  br label %253

253:                                              ; preds = %232, %235
  %254 = icmp eq i64 %164, %180
  br i1 %254, label %311, label %255

255:                                              ; preds = %253, %166, %159
  %256 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %148, %166 ], [ %148, %159 ], [ %182, %253 ]
  %257 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %157, %166 ], [ %157, %159 ], [ %184, %253 ]
  %258 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %257, i64 -1, i32 0
  %259 = ptrtoint i64* %258 to i64
  %260 = sub i64 %259, %156
  %261 = lshr i64 %260, 3
  %262 = add nuw nsw i64 %261, 1
  %263 = and i64 %262, 7
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %276, label %265

265:                                              ; preds = %255, %265
  %266 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %273, %265 ], [ %256, %255 ]
  %267 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %269, %265 ], [ %257, %255 ]
  %268 = phi i64 [ %274, %265 ], [ %263, %255 ]
  %269 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %267, i64 -1
  %270 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %269, i64 0, i32 0
  %271 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %266, i64 -1, i32 0
  %272 = load i64, i64* %270, align 8
  store i64 %272, i64* %271, align 8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %266, i64 -1
  %274 = add i64 %268, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %265, !llvm.loop !298

276:                                              ; preds = %265, %255
  %277 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %255 ], [ %273, %265 ]
  %278 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %256, %255 ], [ %273, %265 ]
  %279 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %257, %255 ], [ %269, %265 ]
  %280 = icmp ult i64 %260, 56
  br i1 %280, label %311, label %281

281:                                              ; preds = %276, %281
  %282 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %309, %281 ], [ %278, %276 ]
  %283 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %305, %281 ], [ %279, %276 ]
  %284 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -1, i32 0
  %285 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -1, i32 0
  %286 = load i64, i64* %284, align 8
  store i64 %286, i64* %285, align 8
  %287 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -2, i32 0
  %288 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -2, i32 0
  %289 = load i64, i64* %287, align 8
  store i64 %289, i64* %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -3, i32 0
  %291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -3, i32 0
  %292 = load i64, i64* %290, align 8
  store i64 %292, i64* %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -4, i32 0
  %294 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -4, i32 0
  %295 = load i64, i64* %293, align 8
  store i64 %295, i64* %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -5, i32 0
  %297 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -5, i32 0
  %298 = load i64, i64* %296, align 8
  store i64 %298, i64* %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -6, i32 0
  %300 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -6, i32 0
  %301 = load i64, i64* %299, align 8
  store i64 %301, i64* %300, align 8
  %302 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -7, i32 0
  %303 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -7, i32 0
  %304 = load i64, i64* %302, align 8
  store i64 %304, i64* %303, align 8
  %305 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %283, i64 -8
  %306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %305, i64 0, i32 0
  %307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -8, i32 0
  %308 = load i64, i64* %306, align 8
  store i64 %308, i64* %307, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %282, i64 -8
  %310 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %305, %155
  br i1 %310, label %311, label %281, !llvm.loop !299

311:                                              ; preds = %276, %281, %253, %145
  %312 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %148, %145 ], [ %182, %253 ], [ %277, %276 ], [ %309, %281 ]
  %313 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %312 to i64
  store i64 %313, i64* %109, align 8
  store i64 %153, i64* %108, align 8
  store i64 %150, i64* %118, align 8
  br label %314

314:                                              ; preds = %311, %101, %62
  %315 = phi i32 [ %67, %62 ], [ %83, %101 ], [ %83, %311 ]
  %316 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %10, i64 0, i32 0
  %317 = load i32, i32* %316, align 8
  switch i32 %317, label %338 [
    i32 2, label %318
    i32 0, label %326
    i32 1, label %329
    i32 3, label %332
    i32 4, label %332
    i32 5, label %332
    i32 6, label %335
  ]

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %10, i64 0, i32 4
  %320 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %320, i64 0, i32 1
  %322 = load i64, i64* %321, align 8
  %323 = trunc i64 %322 to i32
  %324 = shl i32 %323, 22
  %325 = or i32 %324, 10
  br label %338

326:                                              ; preds = %314
  %327 = shl i32 %315, 22
  %328 = or i32 %327, 3
  br label %338

329:                                              ; preds = %314
  %330 = shl i32 %315, 22
  %331 = or i32 %330, 4
  br label %338

332:                                              ; preds = %314, %314, %314
  %333 = shl i32 %315, 22
  %334 = or i32 %333, 5
  br label %338

335:                                              ; preds = %314
  %336 = shl i32 %315, 22
  %337 = or i32 %336, 6
  br label %338

338:                                              ; preds = %314, %335, %332, %329, %326, %318
  %339 = phi i32 [ undef, %314 ], [ %337, %335 ], [ %334, %332 ], [ %331, %329 ], [ %328, %326 ], [ %325, %318 ]
  %340 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 3, i32 0
  %341 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 3, i32 0, i32 0, i32 1
  %342 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.std::__1::vector.1241"* %340 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = sub i64 %343, %345
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %359

348:                                              ; preds = %338
  %349 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0
  %350 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %351 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.std::__1::vector.1241"* %349 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = sub i64 %352, %354
  %356 = ashr exact i64 %355, 3
  %357 = inttoptr i64 %354 to %"class.v8::internal::compiler::InstructionOperand"*
  %358 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %339, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %356, %"class.v8::internal::compiler::InstructionOperand"* %357, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  br label %372

359:                                              ; preds = %338
  %360 = inttoptr i64 %345 to %"class.v8::internal::compiler::InstructionOperand"*
  %361 = ashr exact i64 %346, 3
  %362 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0
  %363 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %364 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = bitcast %"class.std::__1::vector.1241"* %362 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = sub i64 %365, %367
  %369 = ashr exact i64 %368, 3
  %370 = inttoptr i64 %367 to %"class.v8::internal::compiler::InstructionOperand"*
  %371 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %339, i64 %361, %"class.v8::internal::compiler::InstructionOperand"* %360, i64 %369, %"class.v8::internal::compiler::InstructionOperand"* %370, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  br label %372

372:                                              ; preds = %348, %359
  %373 = phi %"class.v8::internal::compiler::Instruction"* [ %371, %359 ], [ %358, %348 ]
  %374 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 25
  %375 = load i8, i8* %374, align 8, !range !47
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %392

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %373, i64 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = or i32 %379, 1073741824
  store i32 %380, i32* %378, align 4
  %381 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 2
  call void @_ZN2v88internal8compiler19InstructionSelector18EmitPrepareResultsEPNS0_10ZoneVectorINS1_13PushParameterEEEPKNS1_14CallDescriptorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::ZoneVector.1544"* %381, %"class.v8::internal::compiler::CallDescriptor"* %10, %"class.v8::internal::compiler::Node"* %1) #12
  %382 = load i32, i32* %11, align 8
  %383 = trunc i32 %382 to i8
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %392

385:                                              ; preds = %377
  %386 = shl i32 %382, 14
  %387 = and i32 %386, 4194304
  %388 = or i32 %387, 9
  %389 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389)
  %390 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %6, i64 0, i32 0
  store i64 0, i64* %390, align 8
  %391 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %388, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %6, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389)
  br label %392

392:                                              ; preds = %372, %377, %385
  %393 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %394 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %393, align 8
  %395 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %394, null
  br i1 %395, label %398, label %396

396:                                              ; preds = %392
  %397 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %394 to i64
  store i64 %397, i64* %70, align 8
  br label %398

398:                                              ; preds = %396, %392
  %399 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %400 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %399, align 8
  %401 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %400, null
  br i1 %401, label %406, label %402

402:                                              ; preds = %398
  %403 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %400 to i64
  %404 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %405 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %404 to i64*
  store i64 %403, i64* %405, align 8
  br label %406

406:                                              ; preds = %402, %398
  %407 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %408 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %407, align 8
  %409 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %408, null
  br i1 %409, label %412, label %410

410:                                              ; preds = %406
  %411 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %408 to i64
  store i64 %411, i64* %342, align 8
  br label %412

412:                                              ; preds = %410, %406
  %413 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %414 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %413, align 8
  %415 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %414, null
  br i1 %415, label %420, label %416

416:                                              ; preds = %412
  %417 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %414 to i64
  %418 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %419 = bitcast %"struct.v8::internal::compiler::PushParameter"** %418 to i64*
  store i64 %417, i64* %419, align 8
  br label %420

420:                                              ; preds = %412, %416
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %64) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector13VisitTailCallEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::Constant", align 8
  %5 = alloca %"class.v8::internal::compiler::Constant", align 8
  %6 = alloca %"struct.v8::internal::compiler::CallBuffer", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler16CallDescriptorOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %11, i64 0, i32 0
  %13 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %12, align 8
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %15 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler16CallDescriptorOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #12
  %16 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor22GetStackParameterDeltaEPKS2_(%"class.v8::internal::compiler::CallDescriptor"* %15, %"class.v8::internal::compiler::CallDescriptor"* %13) #12
  %17 = bitcast %"struct.v8::internal::compiler::CallBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %19 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  call void @_ZN2v88internal8compiler10CallBufferC2EPNS0_4ZoneEPKNS1_14CallDescriptorEPNS1_20FrameStateDescriptorE(%"struct.v8::internal::compiler::CallBuffer"* nonnull %6, %"class.v8::internal::Zone"* %19, %"class.v8::internal::compiler::CallDescriptor"* %9, %"class.v8::internal::compiler::FrameStateDescriptor"* null)
  %20 = call zeroext i1 @_ZN2v88internal8compiler19InstructionSelector26IsTailCallAddressImmediateEv(%"class.v8::internal::compiler::InstructionSelector"* %0) #12
  %21 = select i1 %20, i32 7, i32 5
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %15, i64 0, i32 11, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = lshr i32 %23, 3
  %25 = and i32 %24, 8
  %26 = or i32 %25, %21
  call void @_ZN2v88internal8compiler19InstructionSelector20InitializeCallBufferEPNS1_4NodeEPNS1_10CallBufferENS_4base5FlagsINS2_14CallBufferFlagEiEEbi(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"struct.v8::internal::compiler::CallBuffer"* nonnull %6, i32 %26, i1 zeroext true, i32 %16)
  %27 = sext i32 %16 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 31
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %27
  %32 = select i1 %31, i64 %30, i64 %27
  store i64 %32, i64* %29, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %9, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  switch i32 %34, label %37 [
    i32 0, label %38
    i32 2, label %35
    i32 4, label %36
  ]

35:                                               ; preds = %2
  br label %38

36:                                               ; preds = %2
  br label %38

37:                                               ; preds = %2
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

38:                                               ; preds = %2, %36, %35
  %39 = phi i32 [ 2, %36 ], [ 1, %35 ], [ %34, %2 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %9, i64 0, i32 11, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = shl i32 %41, 22
  %43 = or i32 %42, %39
  %44 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 0, i64* %45, align 8
  %46 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 11, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %47 = call i32 @_ZNK2v88internal8compiler14CallDescriptor31GetOffsetToFirstUnusedStackSlotEv(%"class.v8::internal::compiler::CallDescriptor"* %15) #12
  %48 = add nsw i32 %47, -1
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 4, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %51 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %50, align 8
  %52 = bitcast %"class.v8::internal::compiler::Constant"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %4, i32 %48) #12
  %53 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %51, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #12
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 4, i32 0, i32 0, i32 1
  %55 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %54, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %56, align 8
  %58 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %55, %57
  %59 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %57 to i64
  br i1 %58, label %60, label %65

60:                                               ; preds = %38
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %55, i64 0, i32 0
  store i64 %53, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %55, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %62 to i64
  %64 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %54 to i64*
  store i64 %63, i64* %64, align 8
  br label %273

65:                                               ; preds = %38
  %66 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %55 to i64
  %67 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %54 to i64*
  %68 = bitcast %"class.std::__1::vector.1241"* %49 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %66, %69
  %71 = ashr exact i64 %70, 3
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 268435455
  br i1 %73, label %74, label %76

74:                                               ; preds = %65
  %75 = bitcast %"class.std::__1::vector.1241"* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #13
  unreachable

76:                                               ; preds = %65
  %77 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %56 to i64*
  %78 = sub i64 %59, %69
  %79 = ashr exact i64 %78, 3
  %80 = icmp ult i64 %79, 134217727
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = ashr exact i64 %78, 2
  %83 = icmp ult i64 %82, %72
  %84 = select i1 %83, i64 %72, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %104, label %86

86:                                               ; preds = %81, %76
  %87 = phi i64 [ %84, %81 ], [ 268435455, %76 ]
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %89 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %88, align 8
  %90 = shl i64 %87, 3
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ugt i64 %90, %95
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %86
  %98 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %89, i64 %90) #12
  br label %101

99:                                               ; preds = %86
  %100 = add i64 %92, %90
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %104

104:                                              ; preds = %101, %81
  %105 = phi i64 [ %87, %101 ], [ 0, %81 ]
  %106 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %103, %101 ], [ null, %81 ]
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %106, i64 %71
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %106, i64 %105
  %109 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 0, i32 0
  store i64 %53, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 1
  %112 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %111 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %49, i64 0, i32 0, i32 0
  %114 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %113, align 8
  %115 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %114 to i64
  %116 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %54, align 8
  %117 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %116, %114
  br i1 %117, label %270, label %118

118:                                              ; preds = %104
  %119 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 -1, i32 0
  %120 = ptrtoint i64* %119 to i64
  %121 = sub i64 %120, %115
  %122 = lshr i64 %121, 3
  %123 = add nuw nsw i64 %122, 1
  %124 = icmp ult i64 %123, 4
  br i1 %124, label %214, label %125

125:                                              ; preds = %118
  %126 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 -1, i32 0
  %127 = ptrtoint i64* %126 to i64
  %128 = sub i64 %127, %115
  %129 = lshr i64 %128, 3
  %130 = xor i64 %129, -1
  %131 = add nsw i64 %71, %130
  %132 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %106, i64 %131
  %133 = xor i64 %129, -1
  %134 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 %133
  %135 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %132, %116
  %136 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %134, %107
  %137 = and i1 %135, %136
  br i1 %137, label %214, label %138

138:                                              ; preds = %125
  %139 = and i64 %123, 4611686018427387900
  %140 = sub nsw i64 0, %139
  %141 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 %140
  %142 = sub nsw i64 0, %139
  %143 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 %142
  %144 = add nsw i64 %139, -4
  %145 = lshr exact i64 %144, 2
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 1
  %148 = icmp eq i64 %144, 0
  br i1 %148, label %191, label %149

149:                                              ; preds = %138
  %150 = sub nuw nsw i64 %146, %147
  %151 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 -1
  %152 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 -1
  br label %153

153:                                              ; preds = %153, %149
  %154 = phi i64 [ 0, %149 ], [ %188, %153 ]
  %155 = phi i64 [ %150, %149 ], [ %189, %153 ]
  %156 = sub i64 0, %154
  %157 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 %156
  %158 = sub i64 0, %154
  %159 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %151, i64 %158
  %160 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %159, i64 0, i32 0
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %157, i64 -1, i32 0
  %162 = getelementptr inbounds i64, i64* %160, i64 -1
  %163 = bitcast i64* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !300
  %165 = getelementptr inbounds i64, i64* %160, i64 -3
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !300
  %168 = getelementptr inbounds i64, i64* %161, i64 -1
  %169 = bitcast i64* %168 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %169, align 8, !alias.scope !303, !noalias !300
  %170 = getelementptr inbounds i64, i64* %161, i64 -3
  %171 = bitcast i64* %170 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %171, align 8, !alias.scope !303, !noalias !300
  %172 = sub nuw nsw i64 -4, %154
  %173 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 %172
  %174 = sub nuw nsw i64 -4, %154
  %175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %152, i64 %174
  %176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %175, i64 0, i32 0
  %177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %173, i64 -1, i32 0
  %178 = getelementptr inbounds i64, i64* %176, i64 -1
  %179 = bitcast i64* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8, !alias.scope !300
  %181 = getelementptr inbounds i64, i64* %176, i64 -3
  %182 = bitcast i64* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !300
  %184 = getelementptr inbounds i64, i64* %177, i64 -1
  %185 = bitcast i64* %184 to <2 x i64>*
  store <2 x i64> %180, <2 x i64>* %185, align 8, !alias.scope !303, !noalias !300
  %186 = getelementptr inbounds i64, i64* %177, i64 -3
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 8, !alias.scope !303, !noalias !300
  %188 = add i64 %154, 8
  %189 = add i64 %155, -2
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %153, !llvm.loop !305

191:                                              ; preds = %153, %138
  %192 = phi i64 [ 0, %138 ], [ %188, %153 ]
  %193 = icmp eq i64 %147, 0
  br i1 %193, label %212, label %194

194:                                              ; preds = %191
  %195 = sub i64 0, %192
  %196 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 %195
  %197 = sub i64 0, %192
  %198 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %116, i64 -1
  %199 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 %197
  %200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %199, i64 0, i32 0
  %201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %196, i64 -1, i32 0
  %202 = getelementptr inbounds i64, i64* %200, i64 -1
  %203 = bitcast i64* %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !300
  %205 = getelementptr inbounds i64, i64* %200, i64 -3
  %206 = bitcast i64* %205 to <2 x i64>*
  %207 = load <2 x i64>, <2 x i64>* %206, align 8, !alias.scope !300
  %208 = getelementptr inbounds i64, i64* %201, i64 -1
  %209 = bitcast i64* %208 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %209, align 8, !alias.scope !303, !noalias !300
  %210 = getelementptr inbounds i64, i64* %201, i64 -3
  %211 = bitcast i64* %210 to <2 x i64>*
  store <2 x i64> %207, <2 x i64>* %211, align 8, !alias.scope !303, !noalias !300
  br label %212

212:                                              ; preds = %191, %194
  %213 = icmp eq i64 %123, %139
  br i1 %213, label %270, label %214

214:                                              ; preds = %212, %125, %118
  %215 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %107, %125 ], [ %107, %118 ], [ %141, %212 ]
  %216 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %116, %125 ], [ %116, %118 ], [ %143, %212 ]
  %217 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 -1, i32 0
  %218 = ptrtoint i64* %217 to i64
  %219 = sub i64 %218, %115
  %220 = lshr i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 7
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %235, label %224

224:                                              ; preds = %214, %224
  %225 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %232, %224 ], [ %215, %214 ]
  %226 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %228, %224 ], [ %216, %214 ]
  %227 = phi i64 [ %233, %224 ], [ %222, %214 ]
  %228 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %226, i64 -1
  %229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %228, i64 0, i32 0
  %230 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %225, i64 -1, i32 0
  %231 = load i64, i64* %229, align 8
  store i64 %231, i64* %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %225, i64 -1
  %233 = add i64 %227, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %224, !llvm.loop !306

235:                                              ; preds = %224, %214
  %236 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %214 ], [ %232, %224 ]
  %237 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %215, %214 ], [ %232, %224 ]
  %238 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %216, %214 ], [ %228, %224 ]
  %239 = icmp ult i64 %219, 56
  br i1 %239, label %270, label %240

240:                                              ; preds = %235, %240
  %241 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %268, %240 ], [ %237, %235 ]
  %242 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %264, %240 ], [ %238, %235 ]
  %243 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -1, i32 0
  %244 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -1, i32 0
  %245 = load i64, i64* %243, align 8
  store i64 %245, i64* %244, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -2, i32 0
  %247 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -2, i32 0
  %248 = load i64, i64* %246, align 8
  store i64 %248, i64* %247, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -3, i32 0
  %250 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -3, i32 0
  %251 = load i64, i64* %249, align 8
  store i64 %251, i64* %250, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -4, i32 0
  %253 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -4, i32 0
  %254 = load i64, i64* %252, align 8
  store i64 %254, i64* %253, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -5, i32 0
  %256 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -5, i32 0
  %257 = load i64, i64* %255, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -6, i32 0
  %259 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -6, i32 0
  %260 = load i64, i64* %258, align 8
  store i64 %260, i64* %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -7, i32 0
  %262 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -7, i32 0
  %263 = load i64, i64* %261, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %242, i64 -8
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %264, i64 0, i32 0
  %266 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -8, i32 0
  %267 = load i64, i64* %265, align 8
  store i64 %267, i64* %266, align 8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %241, i64 -8
  %269 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %264, %114
  br i1 %269, label %270, label %240, !llvm.loop !307

270:                                              ; preds = %235, %240, %212, %104
  %271 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %107, %104 ], [ %141, %212 ], [ %236, %235 ], [ %268, %240 ]
  %272 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %271 to i64
  store i64 %272, i64* %68, align 8
  store i64 %112, i64* %67, align 8
  store i64 %109, i64* %77, align 8
  br label %273

273:                                              ; preds = %60, %270
  %274 = add nsw i32 %16, 1
  %275 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %50, align 8
  %276 = bitcast %"class.v8::internal::compiler::Constant"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %276) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %5, i32 %274) #12
  %277 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %275, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %276) #12
  %278 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %54, align 8
  %279 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %56, align 8
  %280 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %278, %279
  %281 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %279 to i64
  br i1 %280, label %282, label %289

282:                                              ; preds = %273
  %283 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 0, i32 0
  store i64 %277, i64* %283, align 8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 1
  %285 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %284 to i64
  %286 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %54 to i64*
  store i64 %285, i64* %286, align 8
  %287 = bitcast %"class.std::__1::vector.1241"* %49 to i64*
  %288 = load i64, i64* %287, align 8
  br label %497

289:                                              ; preds = %273
  %290 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %278 to i64
  %291 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %54 to i64*
  %292 = bitcast %"class.std::__1::vector.1241"* %49 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = sub i64 %290, %293
  %295 = ashr exact i64 %294, 3
  %296 = add nsw i64 %295, 1
  %297 = icmp ugt i64 %296, 268435455
  br i1 %297, label %298, label %300

298:                                              ; preds = %289
  %299 = bitcast %"class.std::__1::vector.1241"* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %299) #13
  unreachable

300:                                              ; preds = %289
  %301 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %56 to i64*
  %302 = sub i64 %281, %293
  %303 = ashr exact i64 %302, 3
  %304 = icmp ult i64 %303, 134217727
  br i1 %304, label %305, label %310

305:                                              ; preds = %300
  %306 = ashr exact i64 %302, 2
  %307 = icmp ult i64 %306, %296
  %308 = select i1 %307, i64 %296, i64 %306
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %328, label %310

310:                                              ; preds = %305, %300
  %311 = phi i64 [ %308, %305 ], [ 268435455, %300 ]
  %312 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %313 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %312, align 8
  %314 = shl i64 %311, 3
  %315 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %313, i64 0, i32 2
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %313, i64 0, i32 3
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %318, %316
  %320 = icmp ugt i64 %314, %319
  br i1 %320, label %321, label %323, !prof !2

321:                                              ; preds = %310
  %322 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %313, i64 %314) #12
  br label %325

323:                                              ; preds = %310
  %324 = add i64 %316, %314
  store i64 %324, i64* %315, align 8
  br label %325

325:                                              ; preds = %323, %321
  %326 = phi i64 [ %322, %321 ], [ %316, %323 ]
  %327 = inttoptr i64 %326 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %328

328:                                              ; preds = %325, %305
  %329 = phi i64 [ %311, %325 ], [ 0, %305 ]
  %330 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %327, %325 ], [ null, %305 ]
  %331 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %330, i64 %295
  %332 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %330, i64 %329
  %333 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %332 to i64
  %334 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %331, i64 0, i32 0
  store i64 %277, i64* %334, align 8
  %335 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %331, i64 1
  %336 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %335 to i64
  %337 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %49, i64 0, i32 0, i32 0
  %338 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %337, align 8
  %339 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %338 to i64
  %340 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %54, align 8
  %341 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %340, %338
  br i1 %341, label %494, label %342

342:                                              ; preds = %328
  %343 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 -1, i32 0
  %344 = ptrtoint i64* %343 to i64
  %345 = sub i64 %344, %339
  %346 = lshr i64 %345, 3
  %347 = add nuw nsw i64 %346, 1
  %348 = icmp ult i64 %347, 4
  br i1 %348, label %438, label %349

349:                                              ; preds = %342
  %350 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 -1, i32 0
  %351 = ptrtoint i64* %350 to i64
  %352 = sub i64 %351, %339
  %353 = lshr i64 %352, 3
  %354 = xor i64 %353, -1
  %355 = add nsw i64 %295, %354
  %356 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %330, i64 %355
  %357 = xor i64 %353, -1
  %358 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 %357
  %359 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %356, %340
  %360 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %358, %331
  %361 = and i1 %359, %360
  br i1 %361, label %438, label %362

362:                                              ; preds = %349
  %363 = and i64 %347, 4611686018427387900
  %364 = sub nsw i64 0, %363
  %365 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %331, i64 %364
  %366 = sub nsw i64 0, %363
  %367 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 %366
  %368 = add nsw i64 %363, -4
  %369 = lshr exact i64 %368, 2
  %370 = add nuw nsw i64 %369, 1
  %371 = and i64 %370, 1
  %372 = icmp eq i64 %368, 0
  br i1 %372, label %417, label %373

373:                                              ; preds = %362
  %374 = sub nuw nsw i64 %370, %371
  %375 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 -1
  %376 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 -1
  br label %377

377:                                              ; preds = %377, %373
  %378 = phi i64 [ 0, %373 ], [ %412, %377 ]
  %379 = phi i64 [ %374, %373 ], [ %413, %377 ]
  %380 = sub i64 0, %378
  %381 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %331, i64 %380
  %382 = sub i64 0, %378
  %383 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %375, i64 %382
  %384 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %383, i64 0, i32 0
  %385 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %381, i64 -1, i32 0
  %386 = getelementptr inbounds i64, i64* %384, i64 -1
  %387 = bitcast i64* %386 to <2 x i64>*
  %388 = load <2 x i64>, <2 x i64>* %387, align 8, !alias.scope !308
  %389 = getelementptr inbounds i64, i64* %384, i64 -3
  %390 = bitcast i64* %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !308
  %392 = getelementptr inbounds i64, i64* %385, i64 -1
  %393 = bitcast i64* %392 to <2 x i64>*
  store <2 x i64> %388, <2 x i64>* %393, align 8, !alias.scope !311, !noalias !308
  %394 = getelementptr inbounds i64, i64* %385, i64 -3
  %395 = bitcast i64* %394 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %395, align 8, !alias.scope !311, !noalias !308
  %396 = sub nuw nsw i64 -4, %378
  %397 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %331, i64 %396
  %398 = sub nuw nsw i64 -4, %378
  %399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %376, i64 %398
  %400 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %399, i64 0, i32 0
  %401 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %397, i64 -1, i32 0
  %402 = getelementptr inbounds i64, i64* %400, i64 -1
  %403 = bitcast i64* %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !308
  %405 = getelementptr inbounds i64, i64* %400, i64 -3
  %406 = bitcast i64* %405 to <2 x i64>*
  %407 = load <2 x i64>, <2 x i64>* %406, align 8, !alias.scope !308
  %408 = getelementptr inbounds i64, i64* %401, i64 -1
  %409 = bitcast i64* %408 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %409, align 8, !alias.scope !311, !noalias !308
  %410 = getelementptr inbounds i64, i64* %401, i64 -3
  %411 = bitcast i64* %410 to <2 x i64>*
  store <2 x i64> %407, <2 x i64>* %411, align 8, !alias.scope !311, !noalias !308
  %412 = add i64 %378, 8
  %413 = add i64 %379, -2
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %377, !llvm.loop !313

415:                                              ; preds = %377
  %416 = sub nuw nsw i64 -8, %378
  br label %417

417:                                              ; preds = %415, %362
  %418 = phi i64 [ 0, %362 ], [ %416, %415 ]
  %419 = icmp eq i64 %371, 0
  br i1 %419, label %436, label %420

420:                                              ; preds = %417
  %421 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %331, i64 %418
  %422 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %340, i64 -1
  %423 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %422, i64 %418
  %424 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %423, i64 0, i32 0
  %425 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %421, i64 -1, i32 0
  %426 = getelementptr inbounds i64, i64* %424, i64 -1
  %427 = bitcast i64* %426 to <2 x i64>*
  %428 = load <2 x i64>, <2 x i64>* %427, align 8, !alias.scope !308
  %429 = getelementptr inbounds i64, i64* %424, i64 -3
  %430 = bitcast i64* %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !308
  %432 = getelementptr inbounds i64, i64* %425, i64 -1
  %433 = bitcast i64* %432 to <2 x i64>*
  store <2 x i64> %428, <2 x i64>* %433, align 8, !alias.scope !311, !noalias !308
  %434 = getelementptr inbounds i64, i64* %425, i64 -3
  %435 = bitcast i64* %434 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %435, align 8, !alias.scope !311, !noalias !308
  br label %436

436:                                              ; preds = %417, %420
  %437 = icmp eq i64 %347, %363
  br i1 %437, label %494, label %438

438:                                              ; preds = %436, %349, %342
  %439 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %331, %349 ], [ %331, %342 ], [ %365, %436 ]
  %440 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %340, %349 ], [ %340, %342 ], [ %367, %436 ]
  %441 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %440, i64 -1, i32 0
  %442 = ptrtoint i64* %441 to i64
  %443 = sub i64 %442, %339
  %444 = lshr i64 %443, 3
  %445 = add nuw nsw i64 %444, 1
  %446 = and i64 %445, 7
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %459, label %448

448:                                              ; preds = %438, %448
  %449 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %456, %448 ], [ %439, %438 ]
  %450 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %452, %448 ], [ %440, %438 ]
  %451 = phi i64 [ %457, %448 ], [ %446, %438 ]
  %452 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %450, i64 -1
  %453 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %452, i64 0, i32 0
  %454 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %449, i64 -1, i32 0
  %455 = load i64, i64* %453, align 8
  store i64 %455, i64* %454, align 8
  %456 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %449, i64 -1
  %457 = add i64 %451, -1
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %459, label %448, !llvm.loop !314

459:                                              ; preds = %448, %438
  %460 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %438 ], [ %456, %448 ]
  %461 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %439, %438 ], [ %456, %448 ]
  %462 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %440, %438 ], [ %452, %448 ]
  %463 = icmp ult i64 %443, 56
  br i1 %463, label %494, label %464

464:                                              ; preds = %459, %464
  %465 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %492, %464 ], [ %461, %459 ]
  %466 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %488, %464 ], [ %462, %459 ]
  %467 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -1, i32 0
  %468 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -1, i32 0
  %469 = load i64, i64* %467, align 8
  store i64 %469, i64* %468, align 8
  %470 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -2, i32 0
  %471 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -2, i32 0
  %472 = load i64, i64* %470, align 8
  store i64 %472, i64* %471, align 8
  %473 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -3, i32 0
  %474 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -3, i32 0
  %475 = load i64, i64* %473, align 8
  store i64 %475, i64* %474, align 8
  %476 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -4, i32 0
  %477 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -4, i32 0
  %478 = load i64, i64* %476, align 8
  store i64 %478, i64* %477, align 8
  %479 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -5, i32 0
  %480 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -5, i32 0
  %481 = load i64, i64* %479, align 8
  store i64 %481, i64* %480, align 8
  %482 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -6, i32 0
  %483 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -6, i32 0
  %484 = load i64, i64* %482, align 8
  store i64 %484, i64* %483, align 8
  %485 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -7, i32 0
  %486 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -7, i32 0
  %487 = load i64, i64* %485, align 8
  store i64 %487, i64* %486, align 8
  %488 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %466, i64 -8
  %489 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %488, i64 0, i32 0
  %490 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -8, i32 0
  %491 = load i64, i64* %489, align 8
  store i64 %491, i64* %490, align 8
  %492 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %465, i64 -8
  %493 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %488, %338
  br i1 %493, label %494, label %464, !llvm.loop !315

494:                                              ; preds = %459, %464, %436, %328
  %495 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %331, %328 ], [ %365, %436 ], [ %460, %459 ], [ %492, %464 ]
  %496 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %495 to i64
  store i64 %496, i64* %292, align 8
  store i64 %336, i64* %291, align 8
  store i64 %333, i64* %301, align 8
  br label %497

497:                                              ; preds = %282, %494
  %498 = phi i64* [ %286, %282 ], [ %291, %494 ]
  %499 = phi i64 [ %288, %282 ], [ %496, %494 ]
  %500 = phi i64 [ %285, %282 ], [ %336, %494 ]
  %501 = sub i64 %500, %499
  %502 = ashr exact i64 %501, 3
  %503 = inttoptr i64 %499 to %"class.v8::internal::compiler::InstructionOperand"*
  %504 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 %43, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %502, %"class.v8::internal::compiler::InstructionOperand"* %503, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  %505 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %506 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %505, align 8
  %507 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %506, null
  br i1 %507, label %512, label %508

508:                                              ; preds = %497
  %509 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %506 to i64
  %510 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 5, i32 0, i32 0, i32 1
  %511 = bitcast %"struct.v8::internal::compiler::PushParameter"** %510 to i64*
  store i64 %509, i64* %511, align 8
  br label %512

512:                                              ; preds = %508, %497
  %513 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %514 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %513, align 8
  %515 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %514, null
  br i1 %515, label %518, label %516

516:                                              ; preds = %512
  %517 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %514 to i64
  store i64 %517, i64* %498, align 8
  br label %518

518:                                              ; preds = %516, %512
  %519 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %520 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %519, align 8
  %521 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %520, null
  br i1 %521, label %526, label %522

522:                                              ; preds = %518
  %523 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %520 to i64
  %524 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 3, i32 0, i32 0, i32 1
  %525 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %524 to i64*
  store i64 %523, i64* %525, align 8
  br label %526

526:                                              ; preds = %522, %518
  %527 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %528 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %527, align 8
  %529 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %528, null
  br i1 %529, label %534, label %530

530:                                              ; preds = %526
  %531 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %528 to i64
  %532 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %6, i64 0, i32 2, i32 0, i32 0, i32 1
  %533 = bitcast %"struct.v8::internal::compiler::PushParameter"** %532 to i64*
  store i64 %531, i64* %533, align 8
  br label %534

534:                                              ; preds = %526, %530
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector11VisitBranchEPNS1_4NodeEPNS1_10BasicBlockES6_(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %6 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = tail call zeroext i8 @_ZN2v88internal8compiler15IsSafetyCheckOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %14 [
    i32 1, label %35
    i32 0, label %15
    i32 2, label %12
  ]

12:                                               ; preds = %4
  %13 = icmp eq i8 %9, 0
  br i1 %13, label %17, label %35

14:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %4
  %16 = icmp eq i8 %9, 2
  br i1 %16, label %35, label %17

17:                                               ; preds = %15, %12
  %18 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 0
  store i32 2, i32* %19, align 8, !alias.scope !316
  %20 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 1
  store i32 1, i32* %20, align 4, !alias.scope !316
  %21 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %21, align 8, !alias.scope !316
  %22 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %22, align 8, !alias.scope !316
  %23 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 9
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %23, align 8, !alias.scope !316
  %24 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 10
  store %"class.v8::internal::compiler::BasicBlock"* %3, %"class.v8::internal::compiler::BasicBlock"** %24, align 8, !alias.scope !316
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 251658240
  %28 = icmp eq i32 %27, 251658240
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %30 = add i64 %29, 32
  br i1 %28, label %31, label %53

31:                                               ; preds = %17
  %32 = inttoptr i64 %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 16
  br label %53

35:                                               ; preds = %15, %4, %12
  %36 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 0
  store i32 1, i32* %37, align 8, !alias.scope !319
  %38 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 1
  store i32 1, i32* %38, align 4, !alias.scope !319
  %39 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %39, align 8, !alias.scope !319
  %40 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %40, align 8, !alias.scope !319
  %41 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 9
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %41, align 8, !alias.scope !319
  %42 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %6, i64 0, i32 10
  store %"class.v8::internal::compiler::BasicBlock"* %3, %"class.v8::internal::compiler::BasicBlock"** %42, align 8, !alias.scope !319
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 251658240
  %46 = icmp eq i32 %45, 251658240
  %47 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %48 = add i64 %47, 32
  br i1 %46, label %49, label %53

49:                                               ; preds = %35
  %50 = inttoptr i64 %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 16
  br label %53

53:                                               ; preds = %49, %35, %31, %17
  %54 = phi i64 [ %34, %31 ], [ %30, %17 ], [ %52, %49 ], [ %48, %35 ]
  %55 = phi %"class.v8::internal::compiler::FlagsContinuation"* [ %5, %31 ], [ %5, %17 ], [ %6, %49 ], [ %6, %35 ]
  %56 = phi i8* [ %18, %31 ], [ %18, %17 ], [ %36, %49 ], [ %36, %35 ]
  %57 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %58, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %56) #12
  ret void
}

declare dereferenceable(12) %"class.v8::internal::compiler::IfValueParameters"* @_ZN2v88internal8compiler19IfValueParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector11VisitSwitchEPNS1_4NodeERKNS1_10SwitchInfoE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::SwitchInfo"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector11VisitReturnEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Constant", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %7, i64 0, i32 4
  %9 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi i32 [ %17, %13 ], [ 1, %2 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %21 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %22 = sext i32 %19 to i64
  %23 = shl nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %18
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %21, i64 %23) #12
  br label %34

32:                                               ; preds = %18
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::InstructionOperand"*
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 251658240
  %40 = icmp eq i32 %39, 251658240
  %41 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %42 = add i64 %41, 32
  br i1 %40, label %43, label %47

43:                                               ; preds = %34
  %44 = inttoptr i64 %42 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 16
  br label %47

47:                                               ; preds = %34, %43
  %48 = phi i64 [ %46, %43 ], [ %42, %34 ]
  %49 = inttoptr i64 %48 to %"class.v8::internal::compiler::Node"**
  %50 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %50, i64 0, i32 0
  %52 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %52, i64 0, i32 2
  %54 = load i16, i16* %53, align 8
  %55 = and i16 %54, -2
  %56 = icmp eq i16 %55, 22
  br i1 %56, label %57, label %67

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %59 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %58, align 8
  %60 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #12
  %61 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %50) #12
  %62 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i64*
  %63 = extractvalue { i64, i64 } %61, 0
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %65 = extractvalue { i64, i64 } %61, 1
  store i64 %65, i64* %64, align 8
  %66 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %59, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #12
  br label %100

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %50, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 16777215
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %86

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %79 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %78, align 8
  %80 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %79) #12
  %81 = load i32*, i32** %72, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 %71
  store i32 %80, i32* %82, align 4
  %83 = load i32, i32* %68, align 4
  %84 = and i32 %83, 16777215
  %85 = zext i32 %84 to i64
  br label %86

86:                                               ; preds = %67, %77
  %87 = phi i64 [ %71, %67 ], [ %85, %77 ]
  %88 = phi i32 [ %75, %67 ], [ %80, %77 ]
  %89 = zext i32 %88 to i64
  %90 = shl nuw nsw i64 %89, 3
  %91 = or i64 %90, 377957122049
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = lshr i64 %87, 6
  %95 = getelementptr inbounds i64, i64* %93, i64 %94
  %96 = and i64 %87, 63
  %97 = shl i64 1, %96
  %98 = load i64, i64* %95, align 8
  %99 = or i64 %98, %97
  store i64 %99, i64* %95, align 8
  br label %100

100:                                              ; preds = %86, %57
  %101 = phi i64 [ %66, %57 ], [ %91, %86 ]
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %36, i64 0, i32 0
  store i64 %101, i64* %102, align 8
  %103 = icmp sgt i32 %19, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = inttoptr i64 %42 to i64*
  %106 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %109 = zext i32 %19 to i64
  br label %112

110:                                              ; preds = %189, %100
  %111 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 21, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %22, %"class.v8::internal::compiler::InstructionOperand"* %36, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  ret void

112:                                              ; preds = %189, %104
  %113 = phi i64 [ 1, %104 ], [ %202, %189 ]
  %114 = load i32, i32* %37, align 4
  %115 = and i32 %114, 251658240
  %116 = icmp eq i32 %115, 251658240
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = load i64, i64* %105, align 8
  %119 = add i64 %118, 16
  br label %120

120:                                              ; preds = %112, %117
  %121 = phi i64 [ %119, %117 ], [ %42, %112 ]
  %122 = inttoptr i64 %121 to %"class.v8::internal::compiler::Node"**
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 %113
  %124 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, align 8
  %125 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %4, align 8
  %126 = add nsw i64 %113, -1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %125, i64 0, i32 0
  %128 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %128, i64 0, i32 4
  %130 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %130, i64 0, i32 2
  %132 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %132, i64 %126
  %134 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %133 to i64*
  %135 = load i64, i64* %134, align 4
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %124, i64 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 16777215
  %139 = zext i32 %138 to i64
  %140 = load i32*, i32** %106, align 8
  %141 = getelementptr inbounds i32, i32* %140, i64 %139
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %144, label %149

144:                                              ; preds = %120
  %145 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %107, align 8
  %146 = call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %145) #12
  %147 = load i32*, i32** %106, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 %139
  store i32 %146, i32* %148, align 4
  br label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %146, %144 ], [ %142, %120 ]
  %151 = trunc i64 %135 to i32
  %152 = lshr i64 %135, 32
  %153 = and i32 %151, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp ugt i32 %151, -3
  %156 = and i1 %155, %154
  br i1 %156, label %157, label %161

157:                                              ; preds = %149
  %158 = zext i32 %150 to i64
  %159 = shl nuw nsw i64 %158, 3
  %160 = or i64 %159, 927712935937
  br label %189

161:                                              ; preds = %149
  %162 = and i32 %151, -2147483647
  switch i32 %162, label %177 [
    i32 -2147483647, label %163
    i32 1, label %170
  ]

163:                                              ; preds = %161
  %164 = lshr i64 %135, 1
  %165 = zext i32 %150 to i64
  %166 = shl nuw nsw i64 %165, 3
  %167 = shl i64 %164, 36
  %168 = or i64 %167, %166
  %169 = or i64 %168, 1
  br label %189

170:                                              ; preds = %161
  %171 = lshr i64 %135, 1
  %172 = zext i32 %150 to i64
  %173 = shl nuw nsw i64 %172, 3
  %174 = shl i64 %171, 36
  %175 = or i64 %174, %173
  %176 = or i64 %175, 1
  br label %189

177:                                              ; preds = %161
  %178 = trunc i64 %152 to i8
  %179 = icmp ugt i8 %178, 11
  %180 = lshr i64 %135, 1
  %181 = zext i32 %150 to i64
  %182 = shl nuw nsw i64 %181, 3
  %183 = shl i64 %180, 41
  %184 = or i64 %182, %183
  br i1 %179, label %185, label %187

185:                                              ; preds = %177
  %186 = or i64 %184, 858993459201
  br label %189

187:                                              ; preds = %177
  %188 = or i64 %184, 790273982465
  br label %189

189:                                              ; preds = %157, %163, %170, %185, %187
  %190 = phi i64 [ %160, %157 ], [ %169, %163 ], [ %176, %170 ], [ %186, %185 ], [ %188, %187 ]
  %191 = load i32, i32* %136, align 4
  %192 = and i32 %191, 16777215
  %193 = zext i32 %192 to i64
  %194 = load i64*, i64** %108, align 8
  %195 = lshr i64 %193, 6
  %196 = getelementptr inbounds i64, i64* %194, i64 %195
  %197 = and i64 %193, 63
  %198 = shl i64 1, %197
  %199 = load i64, i64* %196, align 8
  %200 = or i64 %198, %199
  store i64 %200, i64* %196, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %36, i64 %113, i32 0
  store i64 %190, i64* %201, align 8
  %202 = add nuw nsw i64 %113, 1
  %203 = icmp eq i64 %202, %109
  br i1 %203, label %110, label %112
}

declare dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitDeoptimizeENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceENS1_10FrameStateE(%"class.v8::internal::compiler::InstructionSelector"*, i8 zeroext, i8 zeroext, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16), %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::ZoneVector.1240", align 8
  %7 = bitcast %"class.v8::internal::ZoneVector.1240"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %9, i64 0, i32 1
  %11 = bitcast %"class.v8::internal::Zone"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %13 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  store i64 %12, i64* %14, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector25AppendDeoptimizeArgumentsEPNS0_10ZoneVectorINS1_18InstructionOperandEEENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceENS1_10FrameStateE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::ZoneVector.1240"* nonnull %6, i8 zeroext %1, i8 zeroext %2, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16) %3, %"class.v8::internal::compiler::Node"* %4)
  %15 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %6, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::ZoneVector.1240"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  %22 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %6, i64 0, i32 0, i32 0, i32 0
  %23 = inttoptr i64 %19 to %"class.v8::internal::compiler::InstructionOperand"*
  %24 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 20, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %21, %"class.v8::internal::compiler::InstructionOperand"* %23, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  %25 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %22, align 8
  %26 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %5
  %28 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %25 to i64
  store i64 %28, i64* %16, align 8
  br label %29

29:                                               ; preds = %5, %27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector10VisitThrowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 19, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector27MarkPairProjectionsAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties14FindProjectionEPNS1_4NodeEm(%"class.v8::internal::compiler::Node"* %1, i64 0) #12
  %4 = icmp eq %"class.v8::internal::compiler::Node"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777215
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %11
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %21

17:                                               ; preds = %5
  %18 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %7) #12
  %19 = load i32*, i32** %12, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 %11
  store i32 %18, i32* %20, align 4
  br label %21

21:                                               ; preds = %5, %17
  %22 = phi i32 [ %18, %17 ], [ %15, %5 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %7, i8 zeroext 4, i32 %22) #12
  br label %23

23:                                               ; preds = %2, %21
  %24 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties14FindProjectionEPNS1_4NodeEm(%"class.v8::internal::compiler::Node"* %1, i64 1) #12
  %25 = icmp eq %"class.v8::internal::compiler::Node"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %28 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 16777215
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %32
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %42

38:                                               ; preds = %26
  %39 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %28) #12
  %40 = load i32*, i32** %33, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 %32
  store i32 %39, i32* %41, align 4
  br label %42

42:                                               ; preds = %26, %38
  %43 = phi i32 [ %39, %38 ], [ %36, %26 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %28, i8 zeroext 4, i32 %43) #12
  br label %44

44:                                               ; preds = %23, %42
  ret void
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties14FindProjectionEPNS1_4NodeEm(%"class.v8::internal::compiler::Node"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler19InstructionSelector12MarkAsWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4) #12
  %16 = load i32*, i32** %9, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %8
  store i32 %15, i32* %17, align 4
  br label %18

18:                                               ; preds = %2, %14
  %19 = phi i32 [ %15, %14 ], [ %12, %2 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4, i8 zeroext 4, i32 %19) #12
  ret void
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitIfExceptionEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %15) #12
  %17 = load i32*, i32** %8, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %7
  store i32 %16, i32* %18, align 4
  %19 = load i32, i32* %4, align 4
  %20 = and i32 %19, 16777215
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %2, %13
  %23 = phi i64 [ %7, %2 ], [ %21, %13 ]
  %24 = phi i32 [ %11, %2 ], [ %16, %13 ]
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = or i64 %26, 790273982465
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = lshr i64 %23, 6
  %31 = getelementptr inbounds i64, i64* %29, i64 %30
  %32 = and i64 %23, 63
  %33 = shl i64 1, %32
  %34 = load i64, i64* %31, align 8
  %35 = or i64 %33, %34
  store i64 %35, i64* %31, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %27, i64* %37, align 8
  %38 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFinishRegionEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %9, label %13

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 16
  br label %13

13:                                               ; preds = %9, %2
  %14 = phi i64 [ %12, %9 ], [ %8, %2 ]
  %15 = inttoptr i64 %14 to %"class.v8::internal::compiler::Node"**
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777215
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = lshr i64 %20, 6
  %24 = getelementptr inbounds i64, i64* %22, i64 %23
  %25 = and i64 %20, 63
  %26 = shl i64 1, %25
  %27 = load i64, i64* %24, align 8
  %28 = or i64 %26, %27
  store i64 %28, i64* %24, align 8
  %29 = load i32, i32* %3, align 4
  %30 = and i32 %29, 251658240
  %31 = icmp eq i32 %30, 251658240
  br i1 %31, label %32, label %36

32:                                               ; preds = %13
  %33 = inttoptr i64 %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %13, %32
  %37 = phi i64 [ %35, %32 ], [ %8, %13 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %39) #12
  ret void
}

declare i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector14VisitParameterEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = tail call i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #12
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK2v88internal8compiler7Linkage29ParameterHasSecondaryLocationEi(%"class.v8::internal::compiler::Linkage"* %8, i32 %6) #12
  %10 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %7, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Linkage", %"class.v8::internal::compiler::Linkage"* %10, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %11, align 8
  %13 = icmp eq i32 %6, -1
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %12, i64 0, i32 3
  br label %26

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %12, i64 0, i32 4
  %18 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %17, align 8
  %19 = sext i32 %6 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %18, i64 0, i32 2
  %21 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %18, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %19
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %21, i64 %24
  br label %26

26:                                               ; preds = %14, %16
  %27 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %15, %14 ], [ %25, %16 ]
  %28 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  br i1 %9, label %30, label %68

30:                                               ; preds = %26
  %31 = tail call i64 @_ZNK2v88internal8compiler7Linkage29GetParameterSecondaryLocationEi(%"class.v8::internal::compiler::Linkage"* %10, i32 %6) #12
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 16777215
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %35
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %50

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %43 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %42, align 8
  %44 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %43) #12
  %45 = load i32*, i32** %36, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %35
  store i32 %44, i32* %46, align 4
  %47 = load i32, i32* %32, align 4
  %48 = and i32 %47, 16777215
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %30, %41
  %51 = phi i64 [ %35, %30 ], [ %49, %41 ]
  %52 = phi i32 [ %39, %30 ], [ %44, %41 ]
  %53 = lshr i64 %31, 1
  %54 = zext i32 %52 to i64
  %55 = shl nuw nsw i64 %54, 3
  %56 = shl i64 %29, 40
  %57 = shl i64 %53, 47
  %58 = or i64 %56, %57
  %59 = or i64 %58, %55
  %60 = or i64 %59, 1889785610241
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = lshr i64 %51, 6
  %64 = getelementptr inbounds i64, i64* %62, i64 %63
  %65 = and i64 %51, 63
  %66 = shl i64 1, %65
  %67 = load i64, i64* %64, align 8
  br label %136

68:                                               ; preds = %26
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 16777215
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %72
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %78, label %84

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %80 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %79, align 8
  %81 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %80) #12
  %82 = load i32*, i32** %73, align 8
  %83 = getelementptr inbounds i32, i32* %82, i64 %72
  store i32 %81, i32* %83, align 4
  br label %84

84:                                               ; preds = %78, %68
  %85 = phi i32 [ %81, %78 ], [ %76, %68 ]
  %86 = trunc i64 %29 to i32
  %87 = lshr i64 %29, 32
  %88 = and i32 %86, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp ugt i32 %86, -3
  %91 = and i1 %90, %89
  br i1 %91, label %92, label %96

92:                                               ; preds = %84
  %93 = zext i32 %85 to i64
  %94 = shl nuw nsw i64 %93, 3
  %95 = or i64 %94, 927712935937
  br label %124

96:                                               ; preds = %84
  %97 = and i32 %86, -2147483647
  switch i32 %97, label %112 [
    i32 -2147483647, label %98
    i32 1, label %105
  ]

98:                                               ; preds = %96
  %99 = lshr i64 %29, 1
  %100 = zext i32 %85 to i64
  %101 = shl nuw nsw i64 %100, 3
  %102 = shl i64 %99, 36
  %103 = or i64 %102, %101
  %104 = or i64 %103, 1
  br label %124

105:                                              ; preds = %96
  %106 = lshr i64 %29, 1
  %107 = zext i32 %85 to i64
  %108 = shl nuw nsw i64 %107, 3
  %109 = shl i64 %106, 36
  %110 = or i64 %109, %108
  %111 = or i64 %110, 1
  br label %124

112:                                              ; preds = %96
  %113 = trunc i64 %87 to i8
  %114 = icmp ugt i8 %113, 11
  %115 = lshr i64 %29, 1
  %116 = zext i32 %85 to i64
  %117 = shl nuw nsw i64 %116, 3
  %118 = shl i64 %115, 41
  %119 = or i64 %117, %118
  br i1 %114, label %120, label %122

120:                                              ; preds = %112
  %121 = or i64 %119, 858993459201
  br label %124

122:                                              ; preds = %112
  %123 = or i64 %119, 790273982465
  br label %124

124:                                              ; preds = %92, %98, %105, %120, %122
  %125 = phi i64 [ %95, %92 ], [ %104, %98 ], [ %111, %105 ], [ %121, %120 ], [ %123, %122 ]
  %126 = load i32, i32* %69, align 4
  %127 = and i32 %126, 16777215
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = lshr i64 %128, 6
  %132 = getelementptr inbounds i64, i64* %130, i64 %131
  %133 = and i64 %128, 63
  %134 = shl i64 1, %133
  %135 = load i64, i64* %132, align 8
  br label %136

136:                                              ; preds = %124, %50
  %137 = phi i64 [ %135, %124 ], [ %66, %50 ]
  %138 = phi i64 [ %134, %124 ], [ %67, %50 ]
  %139 = phi i64* [ %132, %124 ], [ %64, %50 ]
  %140 = phi i64 [ %125, %124 ], [ %60, %50 ]
  %141 = or i64 %138, %137
  store i64 %141, i64* %139, align 8
  %142 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142)
  %143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %140, i64* %143, align 8
  %144 = and i64 %140, 7
  %145 = icmp ne i64 %144, 0
  %146 = zext i1 %145 to i64
  %147 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %146, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector13VisitOsrValueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = tail call i32 @_ZN2v88internal8compiler15OsrValueIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #12
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Linkage"*, %"class.v8::internal::compiler::Linkage"** %7, align 8
  %9 = tail call i64 @_ZNK2v88internal8compiler7Linkage19GetOsrValueLocationEi(%"class.v8::internal::compiler::Linkage"* %8, i32 %6) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 16777215
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %13
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %21 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %20, align 8
  %22 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %21) #12
  %23 = load i32*, i32** %14, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %13
  store i32 %22, i32* %24, align 4
  br label %25

25:                                               ; preds = %19, %2
  %26 = phi i32 [ %22, %19 ], [ %17, %2 ]
  %27 = trunc i64 %9 to i32
  %28 = lshr i64 %9, 32
  %29 = and i32 %27, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp ugt i32 %27, -3
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %37

33:                                               ; preds = %25
  %34 = zext i32 %26 to i64
  %35 = shl nuw nsw i64 %34, 3
  %36 = or i64 %35, 927712935937
  br label %65

37:                                               ; preds = %25
  %38 = and i32 %27, -2147483647
  switch i32 %38, label %53 [
    i32 -2147483647, label %39
    i32 1, label %46
  ]

39:                                               ; preds = %37
  %40 = lshr i64 %9, 1
  %41 = zext i32 %26 to i64
  %42 = shl nuw nsw i64 %41, 3
  %43 = shl i64 %40, 36
  %44 = or i64 %43, %42
  %45 = or i64 %44, 1
  br label %65

46:                                               ; preds = %37
  %47 = lshr i64 %9, 1
  %48 = zext i32 %26 to i64
  %49 = shl nuw nsw i64 %48, 3
  %50 = shl i64 %47, 36
  %51 = or i64 %50, %49
  %52 = or i64 %51, 1
  br label %65

53:                                               ; preds = %37
  %54 = trunc i64 %28 to i8
  %55 = icmp ugt i8 %54, 11
  %56 = lshr i64 %9, 1
  %57 = zext i32 %26 to i64
  %58 = shl nuw nsw i64 %57, 3
  %59 = shl i64 %56, 41
  %60 = or i64 %58, %59
  br i1 %55, label %61, label %63

61:                                               ; preds = %53
  %62 = or i64 %60, 858993459201
  br label %65

63:                                               ; preds = %53
  %64 = or i64 %60, 790273982465
  br label %65

65:                                               ; preds = %33, %39, %46, %61, %63
  %66 = phi i64 [ %36, %33 ], [ %45, %39 ], [ %52, %46 ], [ %62, %61 ], [ %64, %63 ]
  %67 = load i32, i32* %10, align 4
  %68 = and i32 %67, 16777215
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = lshr i64 %69, 6
  %73 = getelementptr inbounds i64, i64* %71, i64 %72
  %74 = and i64 %69, 63
  %75 = shl i64 1, %74
  %76 = load i64, i64* %73, align 8
  %77 = or i64 %75, %76
  store i64 %77, i64* %73, align 8
  %78 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %66, i64* %79, align 8
  %80 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  ret void
}

declare zeroext i8 @_ZN2v88internal8compiler19PhiRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector8VisitPhiEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %8, i64 0, i32 1
  %10 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %14
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %8) #12
  %22 = load i32*, i32** %15, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %14
  store i32 %21, i32* %23, align 4
  br label %24

24:                                               ; preds = %2, %20
  %25 = phi i32 [ %21, %20 ], [ %18, %2 ]
  %26 = sext i32 %6 to i64
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %28
  %32 = icmp ult i64 %31, 48
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %24
  %34 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %10, i64 48) #12
  br label %37

35:                                               ; preds = %24
  %36 = add i64 %28, 48
  store i64 %36, i64* %27, align 8
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i64 [ %34, %33 ], [ %28, %35 ]
  %39 = inttoptr i64 %38 to %"class.v8::internal::compiler::PhiInstruction"*
  tail call void @_ZN2v88internal8compiler14PhiInstructionC1EPNS0_4ZoneEim(%"class.v8::internal::compiler::PhiInstruction"* %39, %"class.v8::internal::Zone"* %10, i32 %25, i64 %26) #12
  %40 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 7
  %42 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %40, i64 0, i32 2
  %46 = bitcast %"class.v8::internal::ZoneVector"** %45 to %"class.std::__1::vector.1182"**
  %47 = load %"class.std::__1::vector.1182"*, %"class.std::__1::vector.1182"** %46, align 8
  %48 = sext i32 %44 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %47, i64 0, i32 0, i32 1
  %50 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.1182"* %47 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp ugt i64 %55, %48
  br i1 %56, label %59, label %57

57:                                               ; preds = %37
  %58 = bitcast %"class.std::__1::vector.1182"* %47 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %58) #13
  unreachable

59:                                               ; preds = %37
  %60 = inttoptr i64 %53 to %"class.v8::internal::compiler::InstructionBlock"**
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %60, i64 %48
  %62 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %62, i64 0, i32 2, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %62, i64 0, i32 2, i32 0, i32 0, i32 1
  %65 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %62, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %66, align 8
  %68 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %65, %67
  %69 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %67 to i64
  br i1 %68, label %75, label %70

70:                                               ; preds = %59
  %71 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %65 to i64*
  store i64 %38, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %65, i64 1
  %73 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %72 to i64
  %74 = bitcast %"class.v8::internal::compiler::PhiInstruction"*** %64 to i64*
  store i64 %73, i64* %74, align 8
  br label %300

75:                                               ; preds = %59
  %76 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %65 to i64
  %77 = bitcast %"class.v8::internal::compiler::PhiInstruction"*** %64 to i64*
  %78 = bitcast %"class.std::__1::vector.1191"* %63 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %76, %79
  %81 = ashr exact i64 %80, 3
  %82 = add nsw i64 %81, 1
  %83 = icmp ugt i64 %82, 268435455
  br i1 %83, label %84, label %86

84:                                               ; preds = %75
  %85 = bitcast %"class.std::__1::vector.1191"* %63 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #13
  unreachable

86:                                               ; preds = %75
  %87 = bitcast %"class.v8::internal::compiler::PhiInstruction"*** %66 to i64*
  %88 = sub i64 %69, %79
  %89 = ashr exact i64 %88, 3
  %90 = icmp ult i64 %89, 134217727
  br i1 %90, label %91, label %96

91:                                               ; preds = %86
  %92 = ashr exact i64 %88, 2
  %93 = icmp ult i64 %92, %82
  %94 = select i1 %93, i64 %82, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %114, label %96

96:                                               ; preds = %91, %86
  %97 = phi i64 [ %94, %91 ], [ 268435455, %86 ]
  %98 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %62, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %99 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %98, align 8
  %100 = shl i64 %97, 3
  %101 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %99, i64 0, i32 2
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %99, i64 0, i32 3
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %104, %102
  %106 = icmp ugt i64 %100, %105
  br i1 %106, label %107, label %109, !prof !2

107:                                              ; preds = %96
  %108 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %99, i64 %100) #12
  br label %111

109:                                              ; preds = %96
  %110 = add i64 %102, %100
  store i64 %110, i64* %101, align 8
  br label %111

111:                                              ; preds = %109, %107
  %112 = phi i64 [ %108, %107 ], [ %102, %109 ]
  %113 = inttoptr i64 %112 to %"class.v8::internal::compiler::PhiInstruction"**
  br label %114

114:                                              ; preds = %111, %91
  %115 = phi i64 [ %97, %111 ], [ 0, %91 ]
  %116 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %113, %111 ], [ null, %91 ]
  %117 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %116, i64 %81
  %118 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %116, i64 %115
  %119 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %118 to i64
  %120 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %117 to i64*
  store i64 %38, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %117, i64 1
  %122 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %121 to i64
  %123 = getelementptr inbounds %"class.std::__1::vector.1191", %"class.std::__1::vector.1191"* %63, i64 0, i32 0, i32 0
  %124 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %123, align 8
  %125 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %124 to i64
  %126 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %64, align 8
  %127 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %126, %124
  br i1 %127, label %297, label %128

128:                                              ; preds = %114
  %129 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 -1
  %130 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %129 to i64
  %131 = sub i64 %130, %125
  %132 = lshr i64 %131, 3
  %133 = add nuw nsw i64 %132, 1
  %134 = icmp ult i64 %133, 4
  br i1 %134, label %227, label %135

135:                                              ; preds = %128
  %136 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 -1
  %137 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %136 to i64
  %138 = sub i64 %137, %125
  %139 = lshr i64 %138, 3
  %140 = xor i64 %139, -1
  %141 = add nsw i64 %81, %140
  %142 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %116, i64 %141
  %143 = xor i64 %139, -1
  %144 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 %143
  %145 = icmp ult %"class.v8::internal::compiler::PhiInstruction"** %142, %126
  %146 = icmp ult %"class.v8::internal::compiler::PhiInstruction"** %144, %117
  %147 = and i1 %145, %146
  br i1 %147, label %227, label %148

148:                                              ; preds = %135
  %149 = and i64 %133, 4611686018427387900
  %150 = sub nsw i64 0, %149
  %151 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %117, i64 %150
  %152 = sub nsw i64 0, %149
  %153 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 %152
  %154 = add nsw i64 %149, -4
  %155 = lshr exact i64 %154, 2
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 1
  %158 = icmp eq i64 %154, 0
  br i1 %158, label %205, label %159

159:                                              ; preds = %148
  %160 = sub nuw nsw i64 %156, %157
  %161 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %117, i64 -1
  %162 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 -1
  %163 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %117, i64 -1
  %164 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 -1
  br label %165

165:                                              ; preds = %165, %159
  %166 = phi i64 [ 0, %159 ], [ %200, %165 ]
  %167 = phi i64 [ %160, %159 ], [ %201, %165 ]
  %168 = sub i64 0, %166
  %169 = sub i64 0, %166
  %170 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %161, i64 %168
  %171 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %162, i64 %169
  %172 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %171, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !322
  %175 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %171, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !322
  %179 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %170, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %179 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 8, !alias.scope !325, !noalias !322
  %181 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %170, i64 -2
  %182 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %181, i64 -1
  %183 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %182 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %183, align 8, !alias.scope !325, !noalias !322
  %184 = sub nuw nsw i64 -4, %166
  %185 = sub nuw nsw i64 -4, %166
  %186 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %163, i64 %184
  %187 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %164, i64 %185
  %188 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %187, i64 -1
  %189 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8, !alias.scope !322
  %191 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %187, i64 -2
  %192 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %191, i64 -1
  %193 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8, !alias.scope !322
  %195 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %186, i64 -1
  %196 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %195 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %196, align 8, !alias.scope !325, !noalias !322
  %197 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %186, i64 -2
  %198 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %197, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %198 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %199, align 8, !alias.scope !325, !noalias !322
  %200 = add i64 %166, 8
  %201 = add i64 %167, -2
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %165, !llvm.loop !327

203:                                              ; preds = %165
  %204 = sub nuw nsw i64 -8, %166
  br label %205

205:                                              ; preds = %203, %148
  %206 = phi i64 [ 0, %148 ], [ %204, %203 ]
  %207 = icmp eq i64 %157, 0
  br i1 %207, label %225, label %208

208:                                              ; preds = %205
  %209 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %117, i64 -1
  %210 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %126, i64 -1
  %211 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %209, i64 %206
  %212 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %210, i64 %206
  %213 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %212, i64 -1
  %214 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !alias.scope !322
  %216 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %212, i64 -2
  %217 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %216, i64 -1
  %218 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %217 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 8, !alias.scope !322
  %220 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %211, i64 -1
  %221 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %220 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %221, align 8, !alias.scope !325, !noalias !322
  %222 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %211, i64 -2
  %223 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %222, i64 -1
  %224 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %223 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %224, align 8, !alias.scope !325, !noalias !322
  br label %225

225:                                              ; preds = %205, %208
  %226 = icmp eq i64 %133, %149
  br i1 %226, label %297, label %227

227:                                              ; preds = %225, %135, %128
  %228 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %117, %135 ], [ %117, %128 ], [ %151, %225 ]
  %229 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %126, %135 ], [ %126, %128 ], [ %153, %225 ]
  %230 = getelementptr %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %229, i64 -1
  %231 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %230 to i64
  %232 = sub i64 %231, %125
  %233 = lshr i64 %232, 3
  %234 = add nuw nsw i64 %233, 1
  %235 = and i64 %234, 7
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %237
  %238 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %241, %237 ], [ %228, %227 ]
  %239 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %242, %237 ], [ %229, %227 ]
  %240 = phi i64 [ %246, %237 ], [ %235, %227 ]
  %241 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %238, i64 -1
  %242 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %239, i64 -1
  %243 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = add i64 %240, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %237, !llvm.loop !328

248:                                              ; preds = %237, %227
  %249 = phi %"class.v8::internal::compiler::PhiInstruction"** [ undef, %227 ], [ %241, %237 ]
  %250 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %228, %227 ], [ %241, %237 ]
  %251 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %229, %227 ], [ %242, %237 ]
  %252 = icmp ult i64 %232, 56
  br i1 %252, label %297, label %253

253:                                              ; preds = %248, %253
  %254 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %291, %253 ], [ %250, %248 ]
  %255 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %292, %253 ], [ %251, %248 ]
  %256 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -1
  %257 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -1
  %258 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %256 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -2
  %262 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -2
  %263 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %261 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -3
  %267 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -3
  %268 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %266 to i64*
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -4
  %272 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -4
  %273 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %271 to i64*
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -5
  %277 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -5
  %278 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -6
  %282 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -6
  %283 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -7
  %287 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -7
  %288 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %254, i64 -8
  %292 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %255, i64 -8
  %293 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::compiler::PhiInstruction"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %292, %124
  br i1 %296, label %297, label %253, !llvm.loop !329

297:                                              ; preds = %248, %253, %225, %114
  %298 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %117, %114 ], [ %151, %225 ], [ %249, %248 ], [ %291, %253 ]
  %299 = ptrtoint %"class.v8::internal::compiler::PhiInstruction"** %298 to i64
  store i64 %299, i64* %78, align 8
  store i64 %122, i64* %77, align 8
  store i64 %119, i64* %87, align 8
  br label %300

300:                                              ; preds = %70, %297
  %301 = icmp sgt i32 %6, 0
  br i1 %301, label %302, label %308

302:                                              ; preds = %300
  %303 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %304 = add i64 %303, 32
  %305 = inttoptr i64 %304 to i64*
  %306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %307 = zext i32 %6 to i64
  br label %309

308:                                              ; preds = %345, %300
  ret void

309:                                              ; preds = %345, %302
  %310 = phi i64 [ 0, %302 ], [ %347, %345 ]
  %311 = load i32, i32* %11, align 4
  %312 = and i32 %311, 251658240
  %313 = icmp eq i32 %312, 251658240
  br i1 %313, label %314, label %317

314:                                              ; preds = %309
  %315 = load i64, i64* %305, align 8
  %316 = add i64 %315, 16
  br label %317

317:                                              ; preds = %309, %314
  %318 = phi i64 [ %316, %314 ], [ %304, %309 ]
  %319 = inttoptr i64 %318 to %"class.v8::internal::compiler::Node"**
  %320 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %319, i64 %310
  %321 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %320, align 8
  %322 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %321, i64 0, i32 3
  %323 = load i32, i32* %322, align 4
  %324 = and i32 %323, 16777215
  %325 = zext i32 %324 to i64
  %326 = load i64*, i64** %306, align 8
  %327 = lshr i64 %325, 6
  %328 = getelementptr inbounds i64, i64* %326, i64 %327
  %329 = and i64 %325, 63
  %330 = shl i64 1, %329
  %331 = load i64, i64* %328, align 8
  %332 = or i64 %330, %331
  store i64 %332, i64* %328, align 8
  %333 = load i32, i32* %322, align 4
  %334 = and i32 %333, 16777215
  %335 = zext i32 %334 to i64
  %336 = load i32*, i32** %15, align 8
  %337 = getelementptr inbounds i32, i32* %336, i64 %335
  %338 = load i32, i32* %337, align 4
  %339 = icmp eq i32 %338, -1
  br i1 %339, label %340, label %345

340:                                              ; preds = %317
  %341 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7, align 8
  %342 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %341) #12
  %343 = load i32*, i32** %15, align 8
  %344 = getelementptr inbounds i32, i32* %343, i64 %335
  store i32 %342, i32* %344, align 4
  br label %345

345:                                              ; preds = %317, %340
  %346 = phi i32 [ %342, %340 ], [ %338, %317 ]
  tail call void @_ZN2v88internal8compiler14PhiInstruction8SetInputEmi(%"class.v8::internal::compiler::PhiInstruction"* %39, i64 %310, i32 %346) #12
  %347 = add nuw nsw i64 %310, 1
  %348 = icmp eq i64 %347, %307
  br i1 %348, label %308, label %309
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitProjectionEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 251658240
  %8 = icmp eq i32 %7, 251658240
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %10 = add i64 %9, 32
  br i1 %8, label %11, label %15

11:                                               ; preds = %2
  %12 = inttoptr i64 %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 16
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i64 [ %14, %11 ], [ %10, %2 ]
  %17 = inttoptr i64 %16 to %"class.v8::internal::compiler::Node"**
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 8
  switch i16 %22, label %109 [
    i16 312, label %23
    i16 314, label %23
    i16 316, label %23
    i16 334, label %23
    i16 336, label %23
    i16 467, label %23
    i16 468, label %23
    i16 469, label %23
    i16 470, label %23
    i16 506, label %23
    i16 507, label %23
    i16 508, label %23
    i16 509, label %23
    i16 510, label %23
    i16 511, label %23
    i16 300, label %23
    i16 451, label %23
  ]

23:                                               ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %24, align 8
  %26 = tail call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #12
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %96

28:                                               ; preds = %23
  %29 = load i32, i32* %5, align 4
  %30 = and i32 %29, 16777215
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %46

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %39 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %38, align 8
  %40 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %39) #12
  %41 = load i32*, i32** %32, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 %31
  store i32 %40, i32* %42, align 4
  %43 = load i32, i32* %5, align 4
  %44 = and i32 %43, 16777215
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %28, %37
  %47 = phi i64 [ %31, %28 ], [ %45, %37 ]
  %48 = phi i32 [ %35, %28 ], [ %40, %37 ]
  %49 = zext i32 %48 to i64
  %50 = shl nuw nsw i64 %49, 3
  %51 = or i64 %50, 1065151889409
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = lshr i64 %47, 6
  %55 = getelementptr inbounds i64, i64* %53, i64 %54
  %56 = and i64 %47, 63
  %57 = shl i64 1, %56
  %58 = load i64, i64* %55, align 8
  %59 = or i64 %58, %57
  store i64 %59, i64* %55, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 16777215
  %63 = zext i32 %62 to i64
  %64 = load i32*, i32** %32, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 %63
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %77

68:                                               ; preds = %46
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %70 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %69, align 8
  %71 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %70) #12
  %72 = load i32*, i32** %32, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %63
  store i32 %71, i32* %73, align 4
  %74 = load i32, i32* %60, align 4
  %75 = and i32 %74, 16777215
  %76 = zext i32 %75 to i64
  br label %77

77:                                               ; preds = %46, %68
  %78 = phi i64 [ %63, %46 ], [ %76, %68 ]
  %79 = phi i32 [ %66, %46 ], [ %71, %68 ]
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 3
  %82 = or i64 %81, 34359738369
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = lshr i64 %78, 6
  %86 = getelementptr inbounds i64, i64* %84, i64 %85
  %87 = and i64 %78, 63
  %88 = shl i64 1, %87
  %89 = load i64, i64* %86, align 8
  %90 = or i64 %89, %88
  store i64 %90, i64* %86, align 8
  %91 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %51, i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %82, i64* %94, align 8
  %95 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  br label %109

96:                                               ; preds = %23
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 16777215
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %102 = load i64*, i64** %101, align 8
  %103 = lshr i64 %100, 6
  %104 = getelementptr inbounds i64, i64* %102, i64 %103
  %105 = and i64 %100, 63
  %106 = shl i64 1, %105
  %107 = load i64, i64* %104, align 8
  %108 = or i64 %106, %107
  store i64 %108, i64* %104, align 8
  br label %109

109:                                              ; preds = %15, %77, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector13VisitConstantEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %5 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %4, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %6, align 8
  %7 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %4, %"class.v8::internal::compiler::Node"* %1)
  %8 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %7, i64* %9, align 8
  %10 = and i64 %7, 7
  %11 = icmp ne i64 %10, 0
  %12 = zext i1 %11 to i64
  %13 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 %12, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitDeoptimizeIfEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, align 2
  %4 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %5 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %6 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %6)
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = tail call dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %6, i8* align 2 %14, i64 22, i1 false)
  %15 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 4
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %21 [
    i32 1, label %58
    i32 0, label %22
    i32 2, label %19
  ]

19:                                               ; preds = %2
  %20 = icmp eq i8 %16, 0
  br i1 %20, label %24, label %58

21:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

22:                                               ; preds = %2
  %23 = icmp eq i8 %16, 2
  br i1 %23, label %58, label %24

24:                                               ; preds = %22, %19
  %25 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %31 = add i64 %30, 32
  br i1 %29, label %32, label %36

32:                                               ; preds = %24
  %33 = inttoptr i64 %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %24, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %24 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 1
  %40 = bitcast %"class.v8::internal::compiler::Node"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 0
  store i32 4, i32* %42, align 8, !alias.scope !330
  %43 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 1
  store i32 1, i32* %43, align 4, !alias.scope !330
  %44 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 2
  store i8 %11, i8* %44, align 8, !alias.scope !330
  %45 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 3
  store i8 %13, i8* %45, align 1, !alias.scope !330
  %46 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 5
  %47 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %46 to i8*
  %48 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %3, i64 0, i32 1
  %49 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 2 %49, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 6
  %51 = bitcast %"class.v8::internal::compiler::Node"** %50 to i64*
  store i64 %41, i64* %51, align 8, !alias.scope !330
  %52 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 7
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %52, align 8, !alias.scope !330
  %53 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 8
  store i32 0, i32* %53, align 8, !alias.scope !330
  br i1 %29, label %54, label %92

54:                                               ; preds = %36
  %55 = inttoptr i64 %31 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 16
  br label %92

58:                                               ; preds = %22, %2, %19
  %59 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %59) #12
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 251658240
  %63 = icmp eq i32 %62, 251658240
  %64 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %65 = add i64 %64, 32
  br i1 %63, label %66, label %70

66:                                               ; preds = %58
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 16
  br label %70

70:                                               ; preds = %58, %66
  %71 = phi i64 [ %69, %66 ], [ %65, %58 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 1
  %74 = bitcast %"class.v8::internal::compiler::Node"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 0
  store i32 3, i32* %76, align 8, !alias.scope !333
  %77 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 1
  store i32 1, i32* %77, align 4, !alias.scope !333
  %78 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 2
  store i8 %11, i8* %78, align 8, !alias.scope !333
  %79 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 3
  store i8 %13, i8* %79, align 1, !alias.scope !333
  %80 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 5
  %81 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %80 to i8*
  %82 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %3, i64 0, i32 1
  %83 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 2 %83, i64 16, i1 false)
  %84 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 6
  %85 = bitcast %"class.v8::internal::compiler::Node"** %84 to i64*
  store i64 %75, i64* %85, align 8, !alias.scope !333
  %86 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 7
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %86, align 8, !alias.scope !333
  %87 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 8
  store i32 0, i32* %87, align 8, !alias.scope !333
  br i1 %63, label %88, label %92

88:                                               ; preds = %70
  %89 = inttoptr i64 %65 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 16
  br label %92

92:                                               ; preds = %88, %70, %54, %36
  %93 = phi i64 [ %57, %54 ], [ %31, %36 ], [ %91, %88 ], [ %65, %70 ]
  %94 = phi %"class.v8::internal::compiler::FlagsContinuation"* [ %4, %54 ], [ %4, %36 ], [ %5, %88 ], [ %5, %70 ]
  %95 = phi i8* [ %25, %54 ], [ %25, %36 ], [ %59, %88 ], [ %59, %70 ]
  %96 = inttoptr i64 %93 to %"class.v8::internal::compiler::Node"**
  %97 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %97, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector21VisitDeoptimizeUnlessEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, align 2
  %4 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %5 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %6 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %6)
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = tail call dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %6, i8* align 2 %14, i64 22, i1 false)
  %15 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %9, i64 0, i32 4
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %21 [
    i32 1, label %58
    i32 0, label %22
    i32 2, label %19
  ]

19:                                               ; preds = %2
  %20 = icmp eq i8 %16, 0
  br i1 %20, label %24, label %58

21:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

22:                                               ; preds = %2
  %23 = icmp eq i8 %16, 2
  br i1 %23, label %58, label %24

24:                                               ; preds = %22, %19
  %25 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %31 = add i64 %30, 32
  br i1 %29, label %32, label %36

32:                                               ; preds = %24
  %33 = inttoptr i64 %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %24, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %24 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 1
  %40 = bitcast %"class.v8::internal::compiler::Node"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 0
  store i32 4, i32* %42, align 8, !alias.scope !336
  %43 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 1
  store i32 0, i32* %43, align 4, !alias.scope !336
  %44 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 2
  store i8 %11, i8* %44, align 8, !alias.scope !336
  %45 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 3
  store i8 %13, i8* %45, align 1, !alias.scope !336
  %46 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 5
  %47 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %46 to i8*
  %48 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %3, i64 0, i32 1
  %49 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 2 %49, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 6
  %51 = bitcast %"class.v8::internal::compiler::Node"** %50 to i64*
  store i64 %41, i64* %51, align 8, !alias.scope !336
  %52 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 7
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %52, align 8, !alias.scope !336
  %53 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 8
  store i32 0, i32* %53, align 8, !alias.scope !336
  br i1 %29, label %54, label %92

54:                                               ; preds = %36
  %55 = inttoptr i64 %31 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 16
  br label %92

58:                                               ; preds = %22, %2, %19
  %59 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %59) #12
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 251658240
  %63 = icmp eq i32 %62, 251658240
  %64 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %65 = add i64 %64, 32
  br i1 %63, label %66, label %70

66:                                               ; preds = %58
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 16
  br label %70

70:                                               ; preds = %58, %66
  %71 = phi i64 [ %69, %66 ], [ %65, %58 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 1
  %74 = bitcast %"class.v8::internal::compiler::Node"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 0
  store i32 3, i32* %76, align 8, !alias.scope !339
  %77 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 1
  store i32 0, i32* %77, align 4, !alias.scope !339
  %78 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 2
  store i8 %11, i8* %78, align 8, !alias.scope !339
  %79 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 3
  store i8 %13, i8* %79, align 1, !alias.scope !339
  %80 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 5
  %81 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %80 to i8*
  %82 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %3, i64 0, i32 1
  %83 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 2 %83, i64 16, i1 false)
  %84 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 6
  %85 = bitcast %"class.v8::internal::compiler::Node"** %84 to i64*
  store i64 %75, i64* %85, align 8, !alias.scope !339
  %86 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 7
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %86, align 8, !alias.scope !339
  %87 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %5, i64 0, i32 8
  store i32 0, i32* %87, align 8, !alias.scope !339
  br i1 %63, label %88, label %92

88:                                               ; preds = %70
  %89 = inttoptr i64 %65 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 16
  br label %92

92:                                               ; preds = %88, %70, %54, %36
  %93 = phi i64 [ %57, %54 ], [ %31, %36 ], [ %91, %88 ], [ %65, %70 ]
  %94 = phi %"class.v8::internal::compiler::FlagsContinuation"* [ %4, %54 ], [ %4, %36 ], [ %5, %88 ], [ %5, %70 ]
  %95 = phi i8* [ %25, %54 ], [ %25, %36 ], [ %59, %88 ], [ %59, %70 ]
  %96 = inttoptr i64 %93 to %"class.v8::internal::compiler::Node"**
  %97 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %97, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector36VisitDynamicCheckMapsWithDeoptUnlessEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Constant", align 8
  %4 = alloca %"class.v8::internal::compiler::Constant", align 8
  %5 = alloca { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, align 2
  %6 = alloca %"class.v8::internal::DynamicCheckMapsDescriptor", align 8
  %7 = alloca [3 x %"class.v8::internal::compiler::InstructionOperand"], align 16
  %8 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %9 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %10 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %13 = tail call dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %12) #12
  %14 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %13, i64 0, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %13, i64 0, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %13, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %10, i8* align 2 %18, i64 22, i1 false)
  %19 = bitcast %"class.v8::internal::DynamicCheckMapsDescriptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.v8::internal::DynamicCheckMapsDescriptor", %"class.v8::internal::DynamicCheckMapsDescriptor"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::CallInterfaceDescriptorData"* getelementptr inbounds ([404 x %"class.v8::internal::CallInterfaceDescriptorData"], [404 x %"class.v8::internal::CallInterfaceDescriptorData"]* @_ZN2v88internal15CallDescriptors21call_descriptor_data_E, i64 0, i64 44), %"class.v8::internal::CallInterfaceDescriptorData"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %22 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::DynamicCheckMapsDescriptor", %"class.v8::internal::DynamicCheckMapsDescriptor"* %6, i64 0, i32 0, i32 0
  %24 = call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeE(%"class.v8::internal::Zone"* %22, %"class.v8::internal::CallInterfaceDescriptor"* nonnull dereferenceable(8) %23, i32 0, i32 0, i8 96, i32 0) #12
  %25 = bitcast [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 0
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 2
  br i1 %30, label %32, label %31, !prof !59

31:                                               ; preds = %2
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 251658240
  %36 = icmp eq i32 %35, 251658240
  %37 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %38 = add i64 %37, 32
  br i1 %36, label %39, label %43

39:                                               ; preds = %32
  %40 = inttoptr i64 %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 16
  br label %43

43:                                               ; preds = %32, %39
  %44 = phi i64 [ %42, %39 ], [ %38, %32 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, i64 2
  %47 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %24, i64 0, i32 4
  %49 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %49, i64 0, i32 2
  %51 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %49, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %51, i64 %53
  %55 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %54 to i64*
  %56 = load i64, i64* %55, align 4
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %47, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 16777215
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 %60
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %72

66:                                               ; preds = %43
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %68 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %67, align 8
  %69 = call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %68) #12
  %70 = load i32*, i32** %61, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %60
  store i32 %69, i32* %71, align 4
  br label %72

72:                                               ; preds = %66, %43
  %73 = phi i32 [ %69, %66 ], [ %64, %43 ]
  %74 = trunc i64 %56 to i32
  %75 = lshr i64 %56, 32
  %76 = and i32 %74, 1
  %77 = icmp eq i32 %76, 0
  %78 = icmp ugt i32 %74, -3
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %84

80:                                               ; preds = %72
  %81 = zext i32 %73 to i64
  %82 = shl nuw nsw i64 %81, 3
  %83 = or i64 %82, 927712935937
  br label %112

84:                                               ; preds = %72
  %85 = and i32 %74, -2147483647
  switch i32 %85, label %100 [
    i32 -2147483647, label %86
    i32 1, label %93
  ]

86:                                               ; preds = %84
  %87 = lshr i64 %56, 1
  %88 = zext i32 %73 to i64
  %89 = shl nuw nsw i64 %88, 3
  %90 = shl i64 %87, 36
  %91 = or i64 %90, %89
  %92 = or i64 %91, 1
  br label %112

93:                                               ; preds = %84
  %94 = lshr i64 %56, 1
  %95 = zext i32 %73 to i64
  %96 = shl nuw nsw i64 %95, 3
  %97 = shl i64 %94, 36
  %98 = or i64 %97, %96
  %99 = or i64 %98, 1
  br label %112

100:                                              ; preds = %84
  %101 = trunc i64 %75 to i8
  %102 = icmp ugt i8 %101, 11
  %103 = lshr i64 %56, 1
  %104 = zext i32 %73 to i64
  %105 = shl nuw nsw i64 %104, 3
  %106 = shl i64 %103, 41
  %107 = or i64 %105, %106
  br i1 %102, label %108, label %110

108:                                              ; preds = %100
  %109 = or i64 %107, 858993459201
  br label %112

110:                                              ; preds = %100
  %111 = or i64 %107, 790273982465
  br label %112

112:                                              ; preds = %80, %86, %93, %108, %110
  %113 = phi i64 [ %83, %80 ], [ %92, %86 ], [ %99, %93 ], [ %109, %108 ], [ %111, %110 ]
  %114 = load i32, i32* %57, align 4
  %115 = and i32 %114, 16777215
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = lshr i64 %116, 6
  %120 = getelementptr inbounds i64, i64* %118, i64 %119
  %121 = and i64 %116, 63
  %122 = shl i64 1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %122, %123
  store i64 %124, i64* %120, align 8
  %125 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 0, i32 0
  store i64 %113, i64* %125, align 16
  %126 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %126, i64 0, i32 5
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %128, 1
  br i1 %129, label %131, label %130, !prof !59

130:                                              ; preds = %112
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

131:                                              ; preds = %112
  %132 = load i32, i32* %33, align 4
  %133 = and i32 %132, 251658240
  %134 = icmp eq i32 %133, 251658240
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = inttoptr i64 %38 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 16
  br label %139

139:                                              ; preds = %131, %135
  %140 = phi i64 [ %138, %135 ], [ %38, %131 ]
  %141 = inttoptr i64 %140 to %"class.v8::internal::compiler::Node"**
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 1
  %143 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %145 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #12
  %147 = call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %143) #12
  %148 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i64*
  %149 = extractvalue { i64, i64 } %147, 0
  store i64 %149, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %151 = extractvalue { i64, i64 } %147, 1
  store i64 %151, i64* %150, align 8
  %152 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %145, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #12
  %153 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 1, i32 0
  store i64 %152, i64* %153, align 8
  %154 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %154, i64 0, i32 5
  %156 = load i32, i32* %155, align 4
  %157 = icmp sgt i32 %156, 3
  br i1 %157, label %159, label %158, !prof !59

158:                                              ; preds = %139
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

159:                                              ; preds = %139
  %160 = load i32, i32* %33, align 4
  %161 = and i32 %160, 251658240
  %162 = icmp eq i32 %161, 251658240
  br i1 %162, label %163, label %167

163:                                              ; preds = %159
  %164 = inttoptr i64 %38 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, 16
  br label %167

167:                                              ; preds = %159, %163
  %168 = phi i64 [ %166, %163 ], [ %38, %159 ]
  %169 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"**
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 3
  %171 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, align 8
  %172 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %144, align 8
  %173 = bitcast %"class.v8::internal::compiler::Constant"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #12
  %174 = call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %171) #12
  %175 = bitcast %"class.v8::internal::compiler::Constant"* %4 to i64*
  %176 = extractvalue { i64, i64 } %174, 0
  store i64 %176, i64* %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %4, i64 0, i32 2
  %178 = extractvalue { i64, i64 } %174, 1
  store i64 %178, i64* %177, align 8
  %179 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %172, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #12
  %180 = getelementptr inbounds [3 x %"class.v8::internal::compiler::InstructionOperand"], [3 x %"class.v8::internal::compiler::InstructionOperand"]* %7, i64 0, i64 2, i32 0
  store i64 %179, i64* %180, align 16
  %181 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %182 = load i32, i32* %181, align 8
  switch i32 %182, label %183 [
    i32 1, label %225
    i32 0, label %184
    i32 2, label %184
  ]

183:                                              ; preds = %167
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

184:                                              ; preds = %167, %167
  %185 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %185) #12
  %186 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %186, i64 0, i32 5
  %188 = load i32, i32* %187, align 4
  %189 = icmp sgt i32 %188, 4
  br i1 %189, label %191, label %190, !prof !59

190:                                              ; preds = %184
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

191:                                              ; preds = %184
  %192 = load i32, i32* %33, align 4
  %193 = and i32 %192, 251658240
  %194 = icmp eq i32 %193, 251658240
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = inttoptr i64 %38 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = add i64 %197, 16
  br label %199

199:                                              ; preds = %191, %195
  %200 = phi i64 [ %198, %195 ], [ %38, %191 ]
  %201 = inttoptr i64 %200 to %"class.v8::internal::compiler::Node"**
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, i64 4
  %203 = bitcast %"class.v8::internal::compiler::Node"** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 0
  store i32 4, i32* %205, align 8, !alias.scope !342
  %206 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 1
  store i32 0, i32* %206, align 4, !alias.scope !342
  %207 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 2
  store i8 %15, i8* %207, align 8, !alias.scope !342
  %208 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 3
  store i8 %17, i8* %208, align 1, !alias.scope !342
  %209 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 5
  %210 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %209 to i8*
  %211 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %5, i64 0, i32 1
  %212 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 2 %212, i64 16, i1 false)
  %213 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 6
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  store i64 %204, i64* %214, align 8, !alias.scope !342
  %215 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 7
  store %"class.v8::internal::compiler::InstructionOperand"* %26, %"class.v8::internal::compiler::InstructionOperand"** %215, align 8, !alias.scope !342
  %216 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %8, i64 0, i32 8
  store i32 3, i32* %216, align 8, !alias.scope !342
  %217 = load i32, i32* %187, align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %220, label %219, !prof !59

219:                                              ; preds = %199
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

220:                                              ; preds = %199
  br i1 %194, label %221, label %266

221:                                              ; preds = %220
  %222 = inttoptr i64 %38 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, 16
  br label %266

225:                                              ; preds = %167
  %226 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %226) #12
  %227 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %227, i64 0, i32 5
  %229 = load i32, i32* %228, align 4
  %230 = icmp sgt i32 %229, 4
  br i1 %230, label %232, label %231, !prof !59

231:                                              ; preds = %225
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

232:                                              ; preds = %225
  %233 = load i32, i32* %33, align 4
  %234 = and i32 %233, 251658240
  %235 = icmp eq i32 %234, 251658240
  br i1 %235, label %236, label %240

236:                                              ; preds = %232
  %237 = inttoptr i64 %38 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, 16
  br label %240

240:                                              ; preds = %232, %236
  %241 = phi i64 [ %239, %236 ], [ %38, %232 ]
  %242 = inttoptr i64 %241 to %"class.v8::internal::compiler::Node"**
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %242, i64 4
  %244 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 0
  store i32 3, i32* %246, align 8, !alias.scope !345
  %247 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 1
  store i32 0, i32* %247, align 4, !alias.scope !345
  %248 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 2
  store i8 %15, i8* %248, align 8, !alias.scope !345
  %249 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 3
  store i8 %17, i8* %249, align 1, !alias.scope !345
  %250 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 5
  %251 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %250 to i8*
  %252 = getelementptr inbounds { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }, { [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }* %5, i64 0, i32 1
  %253 = bitcast %"struct.v8::internal::compiler::FeedbackSource"* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 2 %253, i64 16, i1 false)
  %254 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 6
  %255 = bitcast %"class.v8::internal::compiler::Node"** %254 to i64*
  store i64 %245, i64* %255, align 8, !alias.scope !345
  %256 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 7
  store %"class.v8::internal::compiler::InstructionOperand"* %26, %"class.v8::internal::compiler::InstructionOperand"** %256, align 8, !alias.scope !345
  %257 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %9, i64 0, i32 8
  store i32 3, i32* %257, align 8, !alias.scope !345
  %258 = load i32, i32* %228, align 4
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %261, label %260, !prof !59

260:                                              ; preds = %240
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

261:                                              ; preds = %240
  br i1 %235, label %262, label %266

262:                                              ; preds = %261
  %263 = inttoptr i64 %38 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = add i64 %264, 16
  br label %266

266:                                              ; preds = %262, %261, %221, %220
  %267 = phi i64 [ %224, %221 ], [ %38, %220 ], [ %265, %262 ], [ %38, %261 ]
  %268 = phi %"class.v8::internal::compiler::FlagsContinuation"* [ %8, %221 ], [ %8, %220 ], [ %9, %262 ], [ %9, %261 ]
  %269 = phi i8* [ %185, %221 ], [ %185, %220 ], [ %226, %262 ], [ %226, %261 ]
  %270 = inttoptr i64 %267 to %"class.v8::internal::compiler::Node"**
  %271 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %270, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %271, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %268) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %269) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector11VisitTrapIfEPNS1_4NodeENS1_6TrapIdE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %5 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 251658240
  %9 = icmp eq i32 %8, 251658240
  %10 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %11 = add i64 %10, 32
  br i1 %9, label %12, label %16

12:                                               ; preds = %3
  %13 = inttoptr i64 %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 16
  br label %16

16:                                               ; preds = %3, %12
  %17 = phi i64 [ %15, %12 ], [ %11, %3 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"**
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 1
  %20 = bitcast %"class.v8::internal::compiler::Node"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 0
  store i32 6, i32* %22, align 8, !alias.scope !348
  %23 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 1
  store i32 1, i32* %23, align 4, !alias.scope !348
  %24 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %24, align 8, !alias.scope !348
  %25 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %25, align 8, !alias.scope !348
  %26 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 6
  %27 = bitcast %"class.v8::internal::compiler::Node"** %26 to i64*
  store i64 %21, i64* %27, align 8, !alias.scope !348
  %28 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 11
  store i32 %2, i32* %28, align 8, !alias.scope !348
  br i1 %9, label %29, label %33

29:                                               ; preds = %16
  %30 = inttoptr i64 %11 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %16, %29
  %34 = phi i64 [ %32, %29 ], [ %11, %16 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %36, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

declare i32 @_ZN2v88internal8compiler8TrapIdOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitTrapUnlessEPNS1_4NodeENS1_6TrapIdE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %5 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 251658240
  %9 = icmp eq i32 %8, 251658240
  %10 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %11 = add i64 %10, 32
  br i1 %9, label %12, label %16

12:                                               ; preds = %3
  %13 = inttoptr i64 %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 16
  br label %16

16:                                               ; preds = %3, %12
  %17 = phi i64 [ %15, %12 ], [ %11, %3 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"**
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 1
  %20 = bitcast %"class.v8::internal::compiler::Node"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 0
  store i32 6, i32* %22, align 8, !alias.scope !351
  %23 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 1
  store i32 0, i32* %23, align 4, !alias.scope !351
  %24 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %24, align 8, !alias.scope !351
  %25 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %25, align 8, !alias.scope !351
  %26 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 6
  %27 = bitcast %"class.v8::internal::compiler::Node"** %26 to i64*
  store i64 %21, i64* %27, align 8, !alias.scope !351
  %28 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %4, i64 0, i32 11
  store i32 %2, i32* %28, align 8, !alias.scope !351
  br i1 %9, label %29, label %33

29:                                               ; preds = %16
  %30 = inttoptr i64 %11 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %16, %29
  %34 = phi i64 [ %32, %29 ], [ %11, %16 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %36, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitAbortCSAAssertEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitDebugBreakEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 17, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitUnreachableEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 17, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitStaticAssertEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.v8::internal::compiler::UnparkedScopeIfNeeded", align 8
  %4 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler4Node7InputAtEi(%"class.v8::internal::compiler::Node"* %1, i32 0)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::UnparkedScopeIfNeeded", %"class.v8::internal::compiler::UnparkedScopeIfNeeded"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 29
  %7 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %6, align 8
  call void @_ZN2v88internal8compiler21UnparkedScopeIfNeededC2EPNS1_12JSHeapBrokerEb(%"class.v8::internal::compiler::UnparkedScopeIfNeeded"* nonnull %3, %"class.v8::internal::compiler::JSHeapBroker"* %7, i1 zeroext true)
  call void @_ZNK2v88internal8compiler4Node5PrintEi(%"class.v8::internal::compiler::Node"* %4, i32 4) #12
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %10 = call i8* @_ZN2v88internal8compiler20StaticAssertSourceOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %9) #12
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i8* %10) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector14VisitDeadValueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::OperandGenerator", align 8
  %5 = bitcast %"class.v8::internal::compiler::OperandGenerator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %4, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::InstructionSelector"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = tail call zeroext i8 @_ZN2v88internal8compiler25DeadValueRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 16777215
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %15
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  %22 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %11) #12
  %23 = load i32*, i32** %16, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %15
  store i32 %22, i32* %24, align 4
  br label %25

25:                                               ; preds = %2, %21
  %26 = phi i32 [ %22, %21 ], [ %19, %2 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %11, i8 zeroext %9, i32 %26) #12
  %27 = call i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"* nonnull %4, %"class.v8::internal::compiler::Node"* %1)
  %28 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %27, i64* %29, align 8
  %30 = and i64 %27, 7
  %31 = icmp ne i64 %30, 0
  %32 = zext i1 %31 to i64
  %33 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 17, i64 %32, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector12VisitCommentEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Constant", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1) #12
  %10 = bitcast %"class.v8::internal::compiler::Constant"* %3 to i64*
  %11 = extractvalue { i64, i64 } %9, 0
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %3, i64 0, i32 2
  %13 = extractvalue { i64, i64 } %9, 1
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %7, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 18, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector11VisitRetainEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 251658240
  %8 = icmp eq i32 %7, 251658240
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %10 = add i64 %9, 32
  br i1 %8, label %11, label %15

11:                                               ; preds = %2
  %12 = inttoptr i64 %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 16
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i64 [ %14, %11 ], [ %10, %2 ]
  %17 = inttoptr i64 %16 to %"class.v8::internal::compiler::Node"**
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %22
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %37

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %30 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %29, align 8
  %31 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %30) #12
  %32 = load i32*, i32** %23, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32 %31, i32* %33, align 4
  %34 = load i32, i32* %19, align 4
  %35 = and i32 %34, 16777215
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %15, %28
  %38 = phi i64 [ %22, %15 ], [ %36, %28 ]
  %39 = phi i32 [ %26, %15 ], [ %31, %28 ]
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 3
  %42 = or i64 %41, 103079215105
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = lshr i64 %38, 6
  %46 = getelementptr inbounds i64, i64* %44, i64 %45
  %47 = and i64 %38, 63
  %48 = shl i64 1, %47
  %49 = load i64, i64* %46, align 8
  %50 = or i64 %49, %48
  store i64 %50, i64* %46, align 8
  %51 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %42, i64* %54, align 8
  %55 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 0, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  ret void
}

declare i16 @_ZN2v88internal8compiler20LoadRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector9VisitLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitLoadTransformEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitLoadLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitPoisonedLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector10VisitStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitProtectedStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitStoreLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32AndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitWord32OrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32XorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32ShrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32SarEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32RolEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32RorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector16VisitWord32EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32ClzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord32CtzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitWord32ReverseBitsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitWord32ReverseBytesEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32AbsWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitWord32PopcntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitWord64PopcntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector11VisitSelectEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %4 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 251658240
  %8 = icmp eq i32 %7, 251658240
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %10 = add i64 %9, 32
  br i1 %8, label %11, label %15

11:                                               ; preds = %2
  %12 = inttoptr i64 %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 16
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i64 [ %14, %11 ], [ %10, %2 ]
  %17 = inttoptr i64 %16 to %"class.v8::internal::compiler::Node"**
  %18 = inttoptr i64 %16 to %"class.v8::internal::compiler::Node"**
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, i64 1
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 2
  %21 = bitcast %"class.v8::internal::compiler::Node"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.v8::internal::compiler::Node"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 0
  store i32 7, i32* %25, align 8, !alias.scope !354
  %26 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 1
  store i32 1, i32* %26, align 4, !alias.scope !354
  %27 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %27, align 8, !alias.scope !354
  %28 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %28, align 8, !alias.scope !354
  %29 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %29, align 8, !alias.scope !354
  %30 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 12
  %31 = bitcast %"class.v8::internal::compiler::Node"** %30 to i64*
  store i64 %22, i64* %31, align 8, !alias.scope !354
  %32 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 13
  %33 = bitcast %"class.v8::internal::compiler::Node"** %32 to i64*
  store i64 %24, i64* %33, align 8, !alias.scope !354
  br i1 %8, label %34, label %38

34:                                               ; preds = %15
  %35 = inttoptr i64 %10 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 16
  br label %38

38:                                               ; preds = %15, %34
  %39 = phi i64 [ %37, %34 ], [ %10, %15 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::compiler::Node"**
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  call void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %41, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64AndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitWord64OrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64XorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64ShrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64SarEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64RolEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64RorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64ClzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitWord64CtzEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitWord64ReverseBitsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitWord64ReverseBytesEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler19InstructionSelector13MarkAsSimd128EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %4) #12
  %16 = load i32*, i32** %9, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %8
  store i32 %15, i32* %17, align 4
  br label %18

18:                                               ; preds = %2, %14
  %19 = phi i32 [ %15, %14 ], [ %12, %2 ]
  tail call void @_ZN2v88internal8compiler19InstructionSequence20MarkAsRepresentationENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4, i8 zeroext 14, i32 %19) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector24VisitSimd128ReverseBytesEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64AbsWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector16VisitWord64EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32AddWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32SubWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32MulWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitInt32MulHighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt32ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitInt32LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt32LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitUint32DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitUint32LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitUint32LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitUint32ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitUint32MulHighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64AddWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64SubWithOverflowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitInt64LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitInt64LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitUint64DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitUint64LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitUint64LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitUint64ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector24VisitBitcastTaggedToWordEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %9, label %13

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 16
  br label %13

13:                                               ; preds = %9, %2
  %14 = phi i64 [ %12, %9 ], [ %8, %2 ]
  %15 = inttoptr i64 %14 to %"class.v8::internal::compiler::Node"**
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777215
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = lshr i64 %20, 6
  %24 = getelementptr inbounds i64, i64* %22, i64 %23
  %25 = and i64 %20, 63
  %26 = shl i64 1, %25
  %27 = load i64, i64* %24, align 8
  %28 = or i64 %26, %27
  store i64 %28, i64* %24, align 8
  %29 = load i32, i32* %3, align 4
  %30 = and i32 %29, 251658240
  %31 = icmp eq i32 %30, 251658240
  br i1 %31, label %32, label %36

32:                                               ; preds = %13
  %33 = inttoptr i64 %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %13, %32
  %37 = phi i64 [ %35, %32 ], [ %8, %13 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %39) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector24VisitBitcastWordToTaggedEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %16 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %15, align 8
  %17 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %16) #12
  %18 = load i32*, i32** %9, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %8
  store i32 %17, i32* %19, align 4
  %20 = load i32, i32* %5, align 4
  %21 = and i32 %20, 16777215
  %22 = zext i32 %21 to i64
  br label %23

23:                                               ; preds = %2, %14
  %24 = phi i64 [ %8, %2 ], [ %22, %14 ]
  %25 = phi i32 [ %12, %2 ], [ %17, %14 ]
  %26 = zext i32 %25 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = or i64 %27, 1065151889409
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = lshr i64 %24, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = and i64 %24, 63
  %34 = shl i64 1, %33
  %35 = load i64, i64* %32, align 8
  %36 = or i64 %35, %34
  store i64 %36, i64* %32, align 8
  %37 = load i32, i32* %5, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  %40 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %41 = add i64 %40, 32
  br i1 %39, label %42, label %46

42:                                               ; preds = %23
  %43 = inttoptr i64 %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 16
  br label %46

46:                                               ; preds = %23, %42
  %47 = phi i64 [ %45, %42 ], [ %41, %23 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %49, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 16777215
  %53 = zext i32 %52 to i64
  %54 = load i32*, i32** %9, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %53
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %58, label %67

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %60 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %59, align 8
  %61 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %60) #12
  %62 = load i32*, i32** %9, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 %53
  store i32 %61, i32* %63, align 4
  %64 = load i32, i32* %50, align 4
  %65 = and i32 %64, 16777215
  %66 = zext i32 %65 to i64
  br label %67

67:                                               ; preds = %46, %58
  %68 = phi i64 [ %53, %46 ], [ %66, %58 ]
  %69 = phi i32 [ %56, %46 ], [ %61, %58 ]
  %70 = zext i32 %69 to i64
  %71 = shl nuw nsw i64 %70, 3
  %72 = or i64 %71, 34359738369
  %73 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = lshr i64 %68, 6
  %76 = getelementptr inbounds i64, i64* %74, i64 %75
  %77 = and i64 %68, 63
  %78 = shl i64 1, %77
  %79 = load i64, i64* %76, align 8
  %80 = or i64 %79, %78
  store i64 %80, i64* %76, align 8
  %81 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %28, i64* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %72, i64* %84, align 8
  %85 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 15, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector12EmitIdentityEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %9, label %13

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 16
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %12, %9 ], [ %8, %2 ]
  %15 = inttoptr i64 %14 to %"class.v8::internal::compiler::Node"**
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777215
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = lshr i64 %20, 6
  %24 = getelementptr inbounds i64, i64* %22, i64 %23
  %25 = and i64 %20, 63
  %26 = shl i64 1, %25
  %27 = load i64, i64* %24, align 8
  %28 = or i64 %26, %27
  store i64 %28, i64* %24, align 8
  %29 = load i32, i32* %3, align 4
  %30 = and i32 %29, 251658240
  %31 = icmp eq i32 %30, 251658240
  br i1 %31, label %32, label %36

32:                                               ; preds = %13
  %33 = inttoptr i64 %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %13, %32
  %37 = phi i64 [ %35, %32 ], [ %8, %13 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %39)
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitChangeFloat32ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeInt32ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeInt64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitChangeUint32ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeFloat64ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitChangeFloat64ToUint32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitChangeFloat64ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19InstructionSelector22CanProduceSignalingNaNEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, -2
  %8 = icmp eq i16 %7, 374
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = icmp ne i16 %6, 376
  ret i1 %10

11:                                               ; preds = %2
  ret i1 false
}

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitFloat64SilenceNaNEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitTruncateFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitTruncateFloat64ToUint32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitTruncateFloat32ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitTruncateFloat32ToUint32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector30VisitTryTruncateFloat32ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector30VisitTryTruncateFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector31VisitTryTruncateFloat32ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector31VisitTryTruncateFloat64ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastWord32ToWord64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitChangeInt32ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitChangeUint32ToUint64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector29VisitTruncateFloat64ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitTruncateFloat64ToWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitTruncateInt64ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundFloat64ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundInt64ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundInt32ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector24VisitRoundInt64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastFloat32ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitRoundUint32ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitRoundUint64ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitRoundUint64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastFloat64ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastInt32ToFloat32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitBitcastInt64ToFloat64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat32SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat32EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitFloat32LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitFloat32LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat32MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64ModEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64AcosEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 73) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64AcoshEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 74) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64AsinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 75) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64AsinhEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 76) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64AtanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 77) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64AtanhEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 78) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64Atan2EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitFloat64Ieee754BinopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 79) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64CbrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 80) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64CosEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 81) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64CoshEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 82) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64ExpEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 83) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64Expm1EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 84) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64LogEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 85) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64Log1pEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 86) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64Log10EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 87) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64Log2EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 88) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64PowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector24VisitFloat64Ieee754BinopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 89) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64SinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 90) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64SinhEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 91) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15VisitFloat64TanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 92) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector16VisitFloat64TanhEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, i32 93) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitFloat64EqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitFloat64LessThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitFloat64LessThanOrEqualEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitFloat32RoundDownEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitFloat64RoundDownEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitFloat32RoundUpEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitFloat64RoundUpEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat32RoundTruncateEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat64RoundTruncateEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat64RoundTiesAwayEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat32RoundTiesEvenEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitFloat64RoundTiesEvenEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitFloat64ExtractLowWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector29VisitFloat64ExtractHighWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitFloat64InsertLowWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitFloat64InsertHighWord32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector30VisitTaggedPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector30VisitWord32PoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector30VisitWord64PoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitStackSlotEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector28VisitStackPointerGreaterThanEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::FlagsContinuation", align 8
  %4 = bitcast %"class.v8::internal::compiler::FlagsContinuation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 0
  store i32 5, i32* %5, align 8, !alias.scope !357
  %6 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 1
  store i32 9, i32* %6, align 4, !alias.scope !357
  %7 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  store i64* null, i64** %7, align 8, !alias.scope !357
  %8 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 5, i32 1, i32 0
  store i32 -1, i32* %8, align 8, !alias.scope !357
  %9 = getelementptr inbounds %"class.v8::internal::compiler::FlagsContinuation", %"class.v8::internal::compiler::FlagsContinuation"* %3, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %9, align 8, !alias.scope !357
  call void @_ZN2v88internal8compiler19InstructionSelector28VisitStackPointerGreaterThanEPNS1_4NodeEPNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::FlagsContinuation"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector25VisitLoadStackCheckOffsetEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %15) #12
  %17 = load i32*, i32** %8, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %7
  store i32 %16, i32* %18, align 4
  %19 = load i32, i32* %4, align 4
  %20 = and i32 %19, 16777215
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %2, %13
  %23 = phi i64 [ %7, %2 ], [ %21, %13 ]
  %24 = phi i32 [ %11, %2 ], [ %16, %13 ]
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = or i64 %26, 927712935937
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = lshr i64 %23, 6
  %31 = getelementptr inbounds i64, i64* %29, i64 %30
  %32 = and i64 %23, 63
  %33 = shl i64 1, %32
  %34 = load i64, i64* %31, align 8
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %27, i64* %37, align 8
  %38 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 29, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector21VisitLoadFramePointerEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %15) #12
  %17 = load i32*, i32** %8, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %7
  store i32 %16, i32* %18, align 4
  %19 = load i32, i32* %4, align 4
  %20 = and i32 %19, 16777215
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %2, %13
  %23 = phi i64 [ %7, %2 ], [ %21, %13 ]
  %24 = phi i32 [ %11, %2 ], [ %16, %13 ]
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = or i64 %26, 927712935937
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = lshr i64 %23, 6
  %31 = getelementptr inbounds i64, i64* %29, i64 %30
  %32 = and i64 %23, 63
  %33 = shl i64 1, %32
  %34 = load i64, i64* %31, align 8
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %27, i64* %37, align 8
  %38 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 22, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector27VisitLoadParentFramePointerEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %15) #12
  %17 = load i32*, i32** %8, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %7
  store i32 %16, i32* %18, align 4
  %19 = load i32, i32* %4, align 4
  %20 = and i32 %19, 16777215
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %2, %13
  %23 = phi i64 [ %7, %2 ], [ %21, %13 ]
  %24 = phi i32 [ %11, %2 ], [ %16, %13 ]
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = or i64 %26, 927712935937
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = lshr i64 %23, 6
  %31 = getelementptr inbounds i64, i64* %29, i64 %30
  %32 = and i64 %23, 63
  %33 = shl i64 1, %32
  %34 = load i64, i64* %31, align 8
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %27, i64* %37, align 8
  %38 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 23, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitUnalignedLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitUnalignedStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitInt32PairAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitInt32PairSubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17VisitInt32PairMulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector18VisitWord32PairShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector18VisitWord32PairShrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector18VisitWord32PairSarEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitMemoryBarrierEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitWord32AtomicLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitWord64AtomicLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitWord32AtomicStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitWord64AtomicStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector26VisitWord32AtomicPairStoreEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector25VisitWord32AtomicPairLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

declare i16 @_ZN2v88internal8compiler12AtomicOpTypeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicSubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicSubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicAndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicAndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitWord32AtomicOrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitWord64AtomicOrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord32AtomicXorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWord64AtomicXorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitWord32AtomicExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitWord64AtomicExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector32VisitWord32AtomicCompareExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector32VisitWord64AtomicCompareExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector24VisitWord32AtomicPairAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector24VisitWord32AtomicPairSubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector24VisitWord32AtomicPairAndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector23VisitWord32AtomicPairOrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector24VisitWord32AtomicPairXorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector29VisitWord32AtomicPairExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector36VisitWord32AtomicPairCompareExchangeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

declare void @_ZN2v88internal8compiler19InstructionSelector18VisitProtectedLoadEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitSignExtendWord8ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitSignExtendWord16ToInt32EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitSignExtendWord8ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitSignExtendWord16ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitSignExtendWord32ToInt64EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector21VisitUnsafePointerAddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19InstructionSelector13VisitInt64AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitF64x2SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitF64x2ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitF64x2ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF64x2MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2LtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF64x2LeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2QfmaEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2QfmsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2PminEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2PmaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF64x2CeilEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitF64x2FloorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitF64x2TruncEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitF64x2NearestIntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitF64x2ConvertLowI32x4SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitF64x2ConvertLowI32x4UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitF64x2PromoteLowF32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitF32x4SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitF32x4ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitF32x4ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitF32x4SConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitF32x4UConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4SqrtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitF32x4RecipApproxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitF32x4RecipSqrtApproxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4DivEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4MinEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitF32x4MaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4LtEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitF32x4LeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4QfmaEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4QfmsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4PminEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4PmaxEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitF32x4CeilEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitF32x4FloorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitF32x4TruncEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitF32x4NearestIntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitF32x4DemoteF64x2ZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitI64x2SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector22VisitI64x2SplatI32PairEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI64x2ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI64x2ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector28VisitI64x2ReplaceLaneI32PairEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"* nocapture readnone) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2SConvertI32x4LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitI64x2SConvertI32x4HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2UConvertI32x4LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitI64x2UConvertI32x4HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI64x2BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI64x2ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI64x2EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI64x2NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI64x2GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI64x2ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitI64x2ExtMulLowI32x4SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2ExtMulHighI32x4SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitI64x2ExtMulLowI32x4UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI64x2ExtMulHighI32x4UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitI32x4SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI32x4ExtractLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI32x4ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitI32x4SConvertF32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4SConvertI16x8LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitI32x4SConvertI16x8HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MinSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MaxSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI32x4EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI32x4NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitI32x4UConvertF32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4UConvertI16x8LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitI32x4UConvertI16x8HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MinUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI32x4MaxUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GtUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4GeUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI32x4AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI32x4BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector19VisitI32x4DotI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitI32x4ExtMulLowI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4ExtMulHighI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitI32x4ExtMulLowI16x8UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI32x4ExtMulHighI16x8UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector30VisitI32x4ExtAddPairwiseI16x8SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector30VisitI32x4ExtAddPairwiseI16x8UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitI32x4TruncSatF64x2SZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitI32x4TruncSatF64x2UZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitI16x8SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitI16x8ExtractLaneUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitI16x8ExtractLaneSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI16x8ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8SConvertI8x16LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitI16x8SConvertI8x16HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitI16x8SConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8AddSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8SubSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8MulEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MinSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MaxSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI16x8EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI16x8NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8UConvertI8x16LowEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector27VisitI16x8UConvertI8x16HighEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitI16x8UConvertI32x4EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8AddSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8SubSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MinUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI16x8MaxUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GtUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8GeUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8RoundingAverageUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI16x8Q15MulRSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI16x8AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitI16x8ExtMulLowI8x16SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8ExtMulHighI8x16SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector25VisitI16x8ExtMulLowI8x16UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI16x8ExtMulHighI8x16UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector30VisitI16x8ExtAddPairwiseI8x16SEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector30VisitI16x8ExtAddPairwiseI8x16UEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitI8x16SplatEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitI8x16ExtractLaneUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector22VisitI8x16ExtractLaneSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector21VisitI8x16ReplaceLaneEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16NegEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16ShlEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16ShrSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitI8x16SConvertI16x8EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16AddEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16AddSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16SubEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16SubSatSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MinSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MaxSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI8x16EqEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitI8x16NeEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GtSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GeSEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16ShrUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitI8x16UConvertI16x8EPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16AddSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16SubSatUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MinUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitI8x16MaxUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GtUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16GeUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector26VisitI8x16RoundingAverageUEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector16VisitI8x16PopcntEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitI8x16AbsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16BitMaskEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector14VisitS128ConstEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector13VisitS128ZeroEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitS128AndEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector11VisitS128OrEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitS128XorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector12VisitS128NotEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitS128SelectEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector15VisitS128AndNotEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16SwizzleEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16ShuffleEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector16VisitV128AnyTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI64x2AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI32x4AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI16x8AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector17VisitI8x16AllTrueEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector27EmitWordPoisonOnSpeculationEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %97, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %15, label %14, !prof !59

14:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 251658240
  %19 = icmp eq i32 %18, 251658240
  %20 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %21 = add i64 %20, 32
  br i1 %19, label %22, label %26

22:                                               ; preds = %15
  %23 = inttoptr i64 %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 16
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %15 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::Node"**
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 16777215
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %33
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %48

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %41 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %40, align 8
  %42 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %41) #12
  %43 = load i32*, i32** %34, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %33
  store i32 %42, i32* %44, align 4
  %45 = load i32, i32* %30, align 4
  %46 = and i32 %45, 16777215
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %26, %39
  %49 = phi i64 [ %33, %26 ], [ %47, %39 ]
  %50 = phi i32 [ %37, %26 ], [ %42, %39 ]
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 3
  %53 = or i64 %52, 377957122049
  %54 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = lshr i64 %49, 6
  %57 = getelementptr inbounds i64, i64* %55, i64 %56
  %58 = and i64 %49, 63
  %59 = shl i64 1, %58
  %60 = load i64, i64* %57, align 8
  %61 = or i64 %60, %59
  store i64 %61, i64* %57, align 8
  %62 = load i32, i32* %16, align 4
  %63 = and i32 %62, 16777215
  %64 = zext i32 %63 to i64
  %65 = load i32*, i32** %34, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %64
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %78

69:                                               ; preds = %48
  %70 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %71 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %70, align 8
  %72 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %71) #12
  %73 = load i32*, i32** %34, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %64
  store i32 %72, i32* %74, align 4
  %75 = load i32, i32* %16, align 4
  %76 = and i32 %75, 16777215
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %48, %69
  %79 = phi i64 [ %64, %48 ], [ %77, %69 ]
  %80 = phi i32 [ %67, %48 ], [ %72, %69 ]
  %81 = zext i32 %80 to i64
  %82 = shl nuw nsw i64 %81, 3
  %83 = or i64 %82, 1065151889409
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 12, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = lshr i64 %79, 6
  %87 = getelementptr inbounds i64, i64* %85, i64 %86
  %88 = and i64 %79, 63
  %89 = shl i64 1, %88
  %90 = load i64, i64* %87, align 8
  %91 = or i64 %90, %89
  store i64 %91, i64* %87, align 8
  %92 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %83, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %53, i64* %95, align 8
  %96 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 27, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %3, i64 1, %"class.v8::internal::compiler::InstructionOperand"* nonnull %4, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  br label %135

97:                                               ; preds = %2
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = and i32 %99, 251658240
  %101 = icmp eq i32 %100, 251658240
  %102 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %103 = add i64 %102, 32
  br i1 %101, label %104, label %108

104:                                              ; preds = %97
  %105 = inttoptr i64 %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 16
  br label %108

108:                                              ; preds = %104, %97
  %109 = phi i64 [ %107, %104 ], [ %103, %97 ]
  %110 = inttoptr i64 %109 to %"class.v8::internal::compiler::Node"**
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %111, i64 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 16777215
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 13, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = lshr i64 %115, 6
  %119 = getelementptr inbounds i64, i64* %117, i64 %118
  %120 = and i64 %115, 63
  %121 = shl i64 1, %120
  %122 = load i64, i64* %119, align 8
  %123 = or i64 %121, %122
  store i64 %123, i64* %119, align 8
  %124 = load i32, i32* %98, align 4
  %125 = and i32 %124, 251658240
  %126 = icmp eq i32 %125, 251658240
  br i1 %126, label %127, label %131

127:                                              ; preds = %108
  %128 = inttoptr i64 %103 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 16
  br label %131

131:                                              ; preds = %108, %127
  %132 = phi i64 [ %130, %127 ], [ %103, %108 ]
  %133 = inttoptr i64 %132 to %"class.v8::internal::compiler::Node"**
  %134 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, align 8
  tail call void @_ZN2v88internal8compiler19InstructionSelector9SetRenameEPKNS1_4NodeES5_(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %134) #12
  br label %135

135:                                              ; preds = %131, %78
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector28VisitStackPointerGreaterThanEPNS1_4NodeEPNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector23VisitFloat64Ieee754UnopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector24VisitFloat64Ieee754BinopEPNS1_4NodeEj(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector15EmitTableSwitchERKNS1_10SwitchInfoERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::SwitchInfo"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::Constant", align 8
  %5 = alloca %"class.v8::internal::compiler::Constant", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %1, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, align 8
  %11 = shl i64 %8, 3
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ugt i64 %11, %16
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %3
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %10, i64 %11) #12
  br label %22

20:                                               ; preds = %3
  %21 = add i64 %13, %11
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::InstructionOperand"*
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 0, i32 0
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %1, i64 0, i32 4
  %29 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %31 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %30, align 8
  %32 = bitcast %"class.v8::internal::compiler::Constant"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %29, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %4, i64 0, i32 0
  store i32 7, i32* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %4, i64 0, i32 1
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %4, i64 0, i32 2
  %38 = sext i32 %34 to i64
  store i64 %38, i64* %37, align 8
  %39 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %31, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  %40 = add i64 %11, -8
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %42, label %141

42:                                               ; preds = %22
  %43 = lshr exact i64 %40, 3
  %44 = lshr exact i64 %40, 3
  %45 = icmp ult i64 %40, 32
  br i1 %45, label %131, label %46

46:                                               ; preds = %42
  %47 = and i64 %44, 2305843009213693948
  %48 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 %47
  %49 = sub nsw i64 %43, %47
  %50 = insertelement <2 x i64> undef, i64 %39, i32 0
  %51 = shufflevector <2 x i64> %50, <2 x i64> undef, <2 x i32> zeroinitializer
  %52 = insertelement <2 x i64> undef, i64 %39, i32 0
  %53 = shufflevector <2 x i64> %52, <2 x i64> undef, <2 x i32> zeroinitializer
  %54 = add nsw i64 %47, -4
  %55 = lshr exact i64 %54, 2
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp ult i64 %54, 28
  br i1 %58, label %114, label %59

59:                                               ; preds = %46
  %60 = sub nsw i64 %56, %57
  %61 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %62 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %63 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %64 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %65 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %66 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %67 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  %68 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  br label %69

69:                                               ; preds = %69, %59
  %70 = phi i64 [ 0, %59 ], [ %111, %69 ]
  %71 = phi i64 [ %60, %59 ], [ %112, %69 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %61, i64 %70
  %73 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %72 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %72, i64 2
  %75 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %74 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %75, align 8
  %76 = or i64 %70, 4
  %77 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %62, i64 %76
  %78 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %77 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %77, i64 2
  %80 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %79 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %80, align 8
  %81 = or i64 %70, 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %63, i64 %81
  %83 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %82 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 2
  %85 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %84 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %85, align 8
  %86 = or i64 %70, 12
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %64, i64 %86
  %88 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %87 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %87, i64 2
  %90 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %89 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %90, align 8
  %91 = or i64 %70, 16
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %65, i64 %91
  %93 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %92 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %92, i64 2
  %95 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %94 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %95, align 8
  %96 = or i64 %70, 20
  %97 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %66, i64 %96
  %98 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %97 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %97, i64 2
  %100 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %99 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %100, align 8
  %101 = or i64 %70, 24
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %67, i64 %101
  %103 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %102 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %102, i64 2
  %105 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %104 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %105, align 8
  %106 = or i64 %70, 28
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %68, i64 %106
  %108 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %107 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 2
  %110 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %109 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %110, align 8
  %111 = add i64 %70, 32
  %112 = add i64 %71, -8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %69, !llvm.loop !360

114:                                              ; preds = %69, %46
  %115 = phi i64 [ 0, %46 ], [ %111, %69 ]
  %116 = icmp eq i64 %57, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %114
  %118 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 1
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ %115, %117 ], [ %126, %119 ]
  %121 = phi i64 [ %57, %117 ], [ %127, %119 ]
  %122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %118, i64 %120
  %123 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %122 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %122, i64 2
  %125 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %124 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %125, align 8
  %126 = add i64 %120, 4
  %127 = add i64 %121, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %119, !llvm.loop !361

129:                                              ; preds = %119, %114
  %130 = icmp eq i64 %44, %47
  br i1 %130, label %141, label %131

131:                                              ; preds = %129, %42
  %132 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %24, %42 ], [ %48, %129 ]
  %133 = phi i64 [ %43, %42 ], [ %49, %129 ]
  br label %134

134:                                              ; preds = %131, %134
  %135 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %137, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %139, %134 ], [ %133, %131 ]
  %137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %135, i64 1
  %138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %137, i64 0, i32 0
  store i64 %39, i64* %138, align 8
  %139 = add nsw i64 %136, -1
  %140 = icmp sgt i64 %139, 0
  br i1 %140, label %134, label %141, !llvm.loop !362

141:                                              ; preds = %134, %129, %22
  %142 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %1, i64 0, i32 0
  %143 = load %"class.v8::internal::ZoneVector.1555"*, %"class.v8::internal::ZoneVector.1555"** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::ZoneVector.1555", %"class.v8::internal::ZoneVector.1555"* %143, i64 0, i32 0, i32 0, i32 1
  %147 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %146, align 8
  %148 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %145, %147
  br i1 %148, label %155, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %1, i64 0, i32 1
  %151 = bitcast %"class.v8::internal::compiler::Constant"* %5 to i8*
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 0
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 1
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 2
  br label %157

155:                                              ; preds = %157, %141
  %156 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 14, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %8, %"class.v8::internal::compiler::InstructionOperand"* %24, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  ret void

157:                                              ; preds = %149, %157
  %158 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %145, %149 ], [ %173, %157 ]
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = load i32, i32* %150, align 8
  %162 = sub nsw i32 %160, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 0, i32 2
  %165 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, align 8
  %166 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #12
  %167 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %165, i64 0, i32 1
  %168 = load i32, i32* %167, align 4
  store i32 7, i32* %152, align 8
  store i8 0, i8* %153, align 4
  %169 = sext i32 %168 to i64
  store i64 %169, i64* %154, align 8
  %170 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %166, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #12
  %171 = add nsw i64 %163, 2
  %172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %24, i64 %171, i32 0
  store i64 %170, i64* %172, align 8
  %173 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 1
  %174 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %173, %147
  br i1 %174, label %155, label %157
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector22EmitBinarySearchSwitchERKNS1_10SwitchInfoERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::SwitchInfo"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.anon.1640, align 1
  %5 = alloca %"class.v8::internal::compiler::Constant", align 8
  %6 = alloca %"class.v8::internal::compiler::Constant", align 8
  %7 = alloca %"class.v8::internal::compiler::Constant", align 8
  %8 = alloca %"class.std::__1::vector.1563", align 8
  %9 = bitcast %"class.v8::internal::compiler::SwitchInfo"* %1 to %"class.std::__1::vector.1556"**
  %10 = load %"class.std::__1::vector.1556"*, %"class.std::__1::vector.1556"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.1556", %"class.std::__1::vector.1556"* %10, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1556"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = add nsw i64 %17, 2
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 0
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %21 = shl i64 %18, 3
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = icmp ugt i64 %21, %26
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %3
  %29 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %21) #12
  br label %32

30:                                               ; preds = %3
  %31 = add i64 %21, %23
  store i64 %31, i64* %22, align 8
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i64 [ %29, %28 ], [ %23, %30 ]
  %34 = inttoptr i64 %33 to %"class.v8::internal::compiler::InstructionOperand"*
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %34, i64 0, i32 0
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::SwitchInfo", %"class.v8::internal::compiler::SwitchInfo"* %1, i64 0, i32 4
  %39 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %41 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %40, align 8
  %42 = bitcast %"class.v8::internal::compiler::Constant"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %39, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 0
  store i32 7, i32* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 1
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %5, i64 0, i32 2
  %48 = sext i32 %44 to i64
  store i64 %48, i64* %47, align 8
  %49 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %41, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %34, i64 1, i32 0
  store i64 %49, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector.1563"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = load %"class.std::__1::vector.1556"*, %"class.std::__1::vector.1556"** %9, align 8, !noalias !364
  %53 = getelementptr inbounds %"class.std::__1::vector.1556", %"class.std::__1::vector.1556"* %52, i64 0, i32 0, i32 0
  %54 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %53, align 8, !noalias !364
  %55 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.1556", %"class.std::__1::vector.1556"* %52, i64 0, i32 0, i32 1
  %57 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %56, align 8, !noalias !364
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #12, !alias.scope !364
  %58 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %57 to i64
  %59 = sub i64 %58, %55
  %60 = ashr exact i64 %59, 4
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %126, label %62

62:                                               ; preds = %32
  %63 = icmp ugt i64 %60, 1152921504606846975
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::vector.1563"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %65) #13
  unreachable

66:                                               ; preds = %62
  %67 = call i8* @_Znwm(i64 %59) #14
  %68 = bitcast i8* %67 to %"struct.v8::internal::compiler::CaseInfo"*
  %69 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %8, i64 0, i32 0, i32 1
  %70 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %69 to i8**
  store i8* %67, i8** %70, align 8, !alias.scope !364
  %71 = bitcast %"class.std::__1::vector.1563"* %8 to i8**
  store i8* %67, i8** %71, align 8, !alias.scope !364
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %68, i64 %60
  %73 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.v8::internal::compiler::CaseInfo"* %72, %"struct.v8::internal::compiler::CaseInfo"** %73, align 8, !alias.scope !364
  %74 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %69 to i64*
  %75 = ptrtoint i8* %67 to i64
  %76 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %54, %57
  br i1 %76, label %123, label %77

77:                                               ; preds = %66
  %78 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %57, i64 -1, i32 0
  %79 = ptrtoint i32* %78 to i64
  %80 = sub i64 %79, %55
  %81 = lshr i64 %80, 4
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 3
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %77, %85
  %86 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %92, %85 ], [ %68, %77 ]
  %87 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %91, %85 ], [ %54, %77 ]
  %88 = phi i64 [ %93, %85 ], [ %83, %77 ]
  %89 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %86 to i8*
  %90 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #12
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %87, i64 1
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %86, i64 1
  %93 = add i64 %88, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !367

95:                                               ; preds = %85, %77
  %96 = phi %"struct.v8::internal::compiler::CaseInfo"* [ undef, %77 ], [ %92, %85 ]
  %97 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %68, %77 ], [ %92, %85 ]
  %98 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %54, %77 ], [ %91, %85 ]
  %99 = icmp ult i64 %80, 48
  br i1 %99, label %120, label %100

100:                                              ; preds = %95, %100
  %101 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %118, %100 ], [ %97, %95 ]
  %102 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %117, %100 ], [ %98, %95 ]
  %103 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %101 to i8*
  %104 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #12
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %102, i64 1
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %101, i64 1
  %107 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %106 to i8*
  %108 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 16, i1 false) #12
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %102, i64 2
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %101, i64 2
  %111 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %110 to i8*
  %112 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #12
  %113 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %102, i64 3
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %101, i64 3
  %115 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %114 to i8*
  %116 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 16, i1 false) #12
  %117 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %102, i64 4
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %101, i64 4
  %119 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %117, %57
  br i1 %119, label %120, label %100

120:                                              ; preds = %100, %95
  %121 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %96, %95 ], [ %118, %100 ]
  %122 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %121 to i64
  br label %123

123:                                              ; preds = %120, %66
  %124 = phi i64 [ %75, %66 ], [ %122, %120 ]
  store i64 %124, i64* %74, align 8, !alias.scope !364
  %125 = inttoptr i64 %124 to %"struct.v8::internal::compiler::CaseInfo"*
  br label %126

126:                                              ; preds = %32, %123
  %127 = phi %"struct.v8::internal::compiler::CaseInfo"* [ null, %32 ], [ %125, %123 ]
  %128 = phi %"struct.v8::internal::compiler::CaseInfo"* [ null, %32 ], [ %68, %123 ]
  %129 = getelementptr inbounds %class.anon.1640, %class.anon.1640* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %129)
  %130 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %128 to i64
  %131 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %127 to i64
  %132 = sub i64 %131, %130
  %133 = ashr exact i64 %132, 4
  %134 = icmp sgt i64 %132, 2048
  br i1 %134, label %135, label %146

135:                                              ; preds = %126
  %136 = icmp slt i64 %133, 576460752303423487
  %137 = select i1 %136, i64 %133, i64 576460752303423487
  br label %138

138:                                              ; preds = %143, %135
  %139 = phi i64 [ %144, %143 ], [ %137, %135 ]
  %140 = shl i64 %139, 4
  %141 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %140, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %142 = icmp eq i8* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %138
  %144 = lshr i64 %139, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %138

146:                                              ; preds = %143, %126
  call void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %128, %"struct.v8::internal::compiler::CaseInfo"* %127, %class.anon.1640* nonnull dereferenceable(1) %4, i64 %133, %"struct.v8::internal::compiler::CaseInfo"* null, i64 0) #12
  br label %149

147:                                              ; preds = %138
  %148 = bitcast i8* %141 to %"struct.v8::internal::compiler::CaseInfo"*
  call void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %128, %"struct.v8::internal::compiler::CaseInfo"* %127, %class.anon.1640* nonnull dereferenceable(1) %4, i64 %133, %"struct.v8::internal::compiler::CaseInfo"* nonnull %148, i64 %139) #12
  call void @_ZdlPv(i8* nonnull %141) #14
  br label %149

149:                                              ; preds = %146, %147
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %129)
  %150 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %8, i64 0, i32 0, i32 1
  %151 = bitcast %"struct.v8::internal::compiler::CaseInfo"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::vector.1563"* %8 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %152, %154
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = bitcast %"class.v8::internal::compiler::Constant"* %6 to i8*
  %158 = bitcast %"class.v8::internal::compiler::Constant"* %7 to i8*
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %7, i64 0, i32 0
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %7, i64 0, i32 1
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %7, i64 0, i32 2
  br label %171

162:                                              ; preds = %171, %149
  %163 = call %"class.v8::internal::compiler::Instruction"* @_ZN2v88internal8compiler19InstructionSelector4EmitEjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::InstructionSelector"* %0, i32 13, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null, i64 %18, %"class.v8::internal::compiler::InstructionOperand"* %34, i64 0, %"class.v8::internal::compiler::InstructionOperand"* null)
  %164 = getelementptr inbounds %"class.std::__1::vector.1563", %"class.std::__1::vector.1563"* %8, i64 0, i32 0, i32 0
  %165 = load %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"** %164, align 8
  %166 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %165 to i64
  store i64 %168, i64* %151, align 8
  %169 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %165 to i8*
  call void @_ZdlPv(i8* %169) #14
  br label %170

170:                                              ; preds = %162, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  ret void

171:                                              ; preds = %156, %171
  %172 = phi i64 [ %154, %156 ], [ %193, %171 ]
  %173 = phi i64 [ 0, %156 ], [ %191, %171 ]
  %174 = inttoptr i64 %172 to %"struct.v8::internal::compiler::CaseInfo"*
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %174, i64 %173, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #12
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %6, i32 %176) #12
  %178 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %177, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #12
  %179 = shl i64 %173, 1
  %180 = add i64 %179, 2
  %181 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %34, i64 %180, i32 0
  store i64 %178, i64* %181, align 8
  %182 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %174, i64 %173, i32 2
  %183 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %182, align 8
  %184 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #12
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %183, i64 0, i32 1
  %186 = load i32, i32* %185, align 4
  store i32 7, i32* %159, align 8
  store i8 0, i8* %160, align 4
  %187 = sext i32 %186 to i64
  store i64 %187, i64* %161, align 8
  %188 = call i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"* %184, %"class.v8::internal::compiler::Constant"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #12
  %189 = add i64 %179, 3
  %190 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %34, i64 %189, i32 0
  store i64 %188, i64* %190, align 8
  %191 = add nuw i64 %173, 1
  %192 = load i64, i64* %151, align 8
  %193 = load i64, i64* %153, align 8
  %194 = sub i64 %192, %193
  %195 = ashr exact i64 %194, 4
  %196 = icmp ult i64 %191, %195
  br i1 %196, label %171, label %162
}

declare zeroext i1 @_ZNK2v88internal8compiler7Linkage29ParameterHasSecondaryLocationEi(%"class.v8::internal::compiler::Linkage"*, i32) local_unnamed_addr #3

declare i64 @_ZNK2v88internal8compiler7Linkage29GetParameterSecondaryLocationEi(%"class.v8::internal::compiler::Linkage"*, i32) local_unnamed_addr #3

declare i32 @_ZN2v88internal8compiler15OsrValueIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal8compiler7Linkage19GetOsrValueLocationEi(%"class.v8::internal::compiler::Linkage"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler14PhiInstruction8SetInputEmi(%"class.v8::internal::compiler::PhiInstruction"*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal8compiler16OperandGenerator16DefineAsConstantEPNS1_4NodeE(%"class.v8::internal::compiler::OperandGenerator"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::OperandGenerator", %"class.v8::internal::compiler::OperandGenerator"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %4, i64 0, i32 12, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = lshr i64 %8, 6
  %12 = getelementptr inbounds i64, i64* %10, i64 %11
  %13 = and i64 %8, 63
  %14 = shl i64 1, %13
  %15 = load i64, i64* %12, align 8
  %16 = or i64 %14, %15
  store i64 %16, i64* %12, align 8
  %17 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %3, align 8
  %18 = load i32, i32* %5, align 4
  %19 = and i32 %18, 16777215
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %17, i64 0, i32 15, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %20
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %33

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %17, i64 0, i32 2
  %28 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %27, align 8
  %29 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %28) #12
  %30 = load i32*, i32** %21, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %20
  store i32 %29, i32* %31, align 4
  %32 = load %"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::InstructionSelector"** %3, align 8
  br label %33

33:                                               ; preds = %2, %26
  %34 = phi %"class.v8::internal::compiler::InstructionSelector"* [ %32, %26 ], [ %17, %2 ]
  %35 = phi i32 [ %29, %26 ], [ %24, %2 ]
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %34, i64 0, i32 2
  %37 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %36, align 8
  %38 = tail call { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1)
  %39 = extractvalue { i64, i64 } %38, 0
  %40 = extractvalue { i64, i64 } %38, 1
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %37, i64 0, i32 5, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %37, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %74, label %46

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %37, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %70, %46
  %49 = phi %"class.std::__1::__tree_node"* [ %73, %70 ], [ %44, %46 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %72, %70 ], [ %47, %46 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 1, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %35
  br i1 %53, label %54, label %60

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %70

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 0
  br label %76

60:                                               ; preds = %48
  %61 = icmp slt i32 %52, %35
  br i1 %61, label %62, label %68

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 1
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 0
  br label %76

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 0
  br label %76

70:                                               ; preds = %62, %54
  %71 = phi %"class.std::__1::__tree_node_base"* [ %56, %54 ], [ %64, %62 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %55, %54 ], [ %63, %62 ]
  %73 = bitcast %"class.std::__1::__tree_node_base"* %71 to %"class.std::__1::__tree_node"*
  br label %48

74:                                               ; preds = %33
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  br label %76

76:                                               ; preds = %74, %68, %66, %58
  %77 = phi %"class.std::__1::__tree_end_node"* [ %42, %74 ], [ %59, %58 ], [ %67, %66 ], [ %69, %68 ]
  %78 = phi %"class.std::__1::__tree_node_base"** [ %75, %74 ], [ %55, %58 ], [ %63, %66 ], [ %50, %68 ]
  %79 = bitcast %"class.std::__1::__tree_node_base"** %78 to %"class.std::__1::__tree_node"**
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node"* %80, null
  br i1 %81, label %82, label %121

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %37, i64 0, i32 5, i32 0, i32 1, i32 1, i32 0, i32 0
  %84 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %83, align 8, !noalias !368
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %84, i64 0, i32 2
  %86 = load i64, i64* %85, align 8, !noalias !368
  %87 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %84, i64 0, i32 3
  %88 = load i64, i64* %87, align 8, !noalias !368
  %89 = sub i64 %88, %86
  %90 = icmp ult i64 %89, 56
  br i1 %90, label %91, label %93, !prof !2

91:                                               ; preds = %82
  %92 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %84, i64 56) #12, !noalias !368
  br label %95

93:                                               ; preds = %82
  %94 = add i64 %86, 56
  store i64 %94, i64* %85, align 8, !noalias !368
  br label %95

95:                                               ; preds = %93, %91
  %96 = phi i64 [ %92, %91 ], [ %86, %93 ]
  %97 = inttoptr i64 %96 to %"class.std::__1::__tree_node"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 1, i32 0, i32 0
  store i32 %35, i32* %98, align 8, !noalias !368
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 1, i32 0, i32 1
  %100 = bitcast %"class.v8::internal::compiler::Constant"* %99 to i64*
  store i64 %39, i64* %100, align 8, !noalias !368
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 1, i32 0, i32 1, i32 2
  store i64 %40, i64* %101, align 8, !noalias !368
  %102 = inttoptr i64 %96 to %"class.std::__1::__tree_node_base"*
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 2
  %104 = inttoptr i64 %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %103, align 8
  store %"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"** %78, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree.1216", %"class.std::__1::__tree.1216"* %41, i64 0, i32 0
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %95
  %111 = ptrtoint %"class.std::__1::__tree_node_base"* %108 to i64
  %112 = bitcast %"class.std::__1::__tree.1216"* %41 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  br label %114

114:                                              ; preds = %110, %95
  %115 = phi %"class.std::__1::__tree_node_base"* [ %102, %95 ], [ %113, %110 ]
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %37, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"* %115) #12
  %118 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %37, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %118, align 8
  br label %121

121:                                              ; preds = %76, %114
  %122 = zext i32 %35 to i64
  %123 = shl nuw nsw i64 %122, 3
  %124 = or i64 %123, 2
  ret i64 %124
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector28UpdateMaxPushedArgumentCountEm(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 31
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %1
  %7 = select i1 %6, i64 %5, i64 %1
  store i64 %7, i64* %4, align 8
  ret void
}

declare %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler16CallDescriptorOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CallBufferC2EPNS0_4ZoneEPKNS1_14CallDescriptorEPNS1_20FrameStateDescriptorE(%"struct.v8::internal::compiler::CallBuffer"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::CallDescriptor"* %2, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::FrameStateDescriptor"* %3, %"class.v8::internal::compiler::FrameStateDescriptor"** %6, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 2
  %8 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.1549"* %9 to i64*
  %11 = bitcast %"class.v8::internal::ZoneVector.1544"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  store i64 %8, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %13 to i64*
  %15 = bitcast %"class.v8::internal::ZoneVector.1240"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #12
  store i64 %8, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %17 to i64*
  %19 = bitcast %"class.v8::internal::ZoneVector.1240"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  store i64 %8, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %22 = bitcast %"struct.std::__1::__compressed_pair_elem.1549"* %21 to i64*
  %23 = bitcast %"class.v8::internal::ZoneVector.1544"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #12
  store i64 %8, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 4
  %25 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"struct.v8::internal::compiler::PushParameter"** %28 to i64*
  %30 = bitcast %"class.v8::internal::ZoneVector.1544"* %7 to i64*
  %31 = icmp eq i64 %27, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %4
  %33 = bitcast %"class.v8::internal::ZoneVector.1240"* %12 to i64*
  br label %114

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::compiler::PushParameter"** %35 to i64*
  %37 = shl i64 %27, 4
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %39
  %43 = icmp ugt i64 %37, %42
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %34
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %37) #12
  br label %48

46:                                               ; preds = %34
  %47 = add i64 %39, %37
  store i64 %47, i64* %38, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %39, %46 ]
  %50 = inttoptr i64 %49 to %"struct.v8::internal::compiler::PushParameter"*
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %50, i64 %27
  %52 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %51 to i64
  %53 = getelementptr inbounds %"class.v8::internal::ZoneVector.1544", %"class.v8::internal::ZoneVector.1544"* %7, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %53, align 8
  %55 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %35, align 8
  %56 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %55, %54
  br i1 %56, label %104, label %57

57:                                               ; preds = %48
  %58 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %54 to i64
  %59 = getelementptr %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %55, i64 -1, i32 0
  %60 = ptrtoint %"class.v8::internal::compiler::Node"** %59 to i64
  %61 = sub i64 %60, %58
  %62 = lshr i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %57, %66
  %67 = phi %"struct.v8::internal::compiler::PushParameter"* [ %70, %66 ], [ %50, %57 ]
  %68 = phi %"struct.v8::internal::compiler::PushParameter"* [ %71, %66 ], [ %55, %57 ]
  %69 = phi i64 [ %74, %66 ], [ %64, %57 ]
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %67, i64 -1
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %68, i64 -1
  %72 = bitcast %"struct.v8::internal::compiler::PushParameter"* %70 to i8*
  %73 = bitcast %"struct.v8::internal::compiler::PushParameter"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false) #12
  %74 = add i64 %69, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %66, !llvm.loop !371

76:                                               ; preds = %66, %57
  %77 = phi %"struct.v8::internal::compiler::PushParameter"* [ undef, %57 ], [ %70, %66 ]
  %78 = phi %"struct.v8::internal::compiler::PushParameter"* [ %50, %57 ], [ %70, %66 ]
  %79 = phi %"struct.v8::internal::compiler::PushParameter"* [ %55, %57 ], [ %71, %66 ]
  %80 = icmp ult i64 %61, 48
  br i1 %80, label %101, label %81

81:                                               ; preds = %76, %81
  %82 = phi %"struct.v8::internal::compiler::PushParameter"* [ %96, %81 ], [ %78, %76 ]
  %83 = phi %"struct.v8::internal::compiler::PushParameter"* [ %97, %81 ], [ %79, %76 ]
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %82, i64 -1
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %83, i64 -1
  %86 = bitcast %"struct.v8::internal::compiler::PushParameter"* %84 to i8*
  %87 = bitcast %"struct.v8::internal::compiler::PushParameter"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 16, i1 false) #12
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %82, i64 -2
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %83, i64 -2
  %90 = bitcast %"struct.v8::internal::compiler::PushParameter"* %88 to i8*
  %91 = bitcast %"struct.v8::internal::compiler::PushParameter"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 16, i1 false) #12
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %82, i64 -3
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %83, i64 -3
  %94 = bitcast %"struct.v8::internal::compiler::PushParameter"* %92 to i8*
  %95 = bitcast %"struct.v8::internal::compiler::PushParameter"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #12
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %82, i64 -4
  %97 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %83, i64 -4
  %98 = bitcast %"struct.v8::internal::compiler::PushParameter"* %96 to i8*
  %99 = bitcast %"struct.v8::internal::compiler::PushParameter"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #12
  %100 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %97, %54
  br i1 %100, label %101, label %81

101:                                              ; preds = %81, %76
  %102 = phi %"struct.v8::internal::compiler::PushParameter"* [ %77, %76 ], [ %96, %81 ]
  %103 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %102 to i64
  br label %104

104:                                              ; preds = %101, %48
  %105 = phi i64 [ %103, %101 ], [ %49, %48 ]
  store i64 %105, i64* %30, align 8
  store i64 %49, i64* %36, align 8
  store i64 %52, i64* %29, align 8
  %106 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %24, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %106, i64 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.v8::internal::ZoneVector.1240"* %12 to i64*
  %113 = load i64, i64* %112, align 8
  br label %114

114:                                              ; preds = %32, %104
  %115 = phi i64* [ %33, %32 ], [ %112, %104 ]
  %116 = phi i64 [ 0, %32 ], [ %113, %104 ]
  %117 = phi i64 [ 0, %32 ], [ %111, %104 ]
  %118 = phi i64 [ 0, %32 ], [ %108, %104 ]
  %119 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %119 to i64*
  %121 = sub i64 %117, %116
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, %118
  br i1 %123, label %124, label %312

124:                                              ; preds = %114
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %126 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %127, %116
  %129 = ashr exact i64 %128, 3
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %131 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %130, align 8
  %132 = shl i64 %118, 3
  %133 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %131, i64 0, i32 2
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %131, i64 0, i32 3
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %136, %134
  %138 = icmp ugt i64 %132, %137
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %124
  %140 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %131, i64 %132) #12
  br label %143

141:                                              ; preds = %124
  %142 = add i64 %134, %132
  store i64 %142, i64* %133, align 8
  br label %143

143:                                              ; preds = %141, %139
  %144 = phi i64 [ %140, %139 ], [ %134, %141 ]
  %145 = inttoptr i64 %144 to %"class.v8::internal::compiler::InstructionOperand"*
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %145, i64 %129
  %147 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %146 to i64
  %148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %145, i64 %118
  %149 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %148 to i64
  %150 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %12, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %150, align 8
  %152 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %151 to i64
  %153 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %125, align 8
  %154 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %153, %151
  br i1 %154, label %310, label %155

155:                                              ; preds = %143
  %156 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 -1, i32 0
  %157 = ptrtoint i64* %156 to i64
  %158 = sub i64 %157, %152
  %159 = lshr i64 %158, 3
  %160 = add nuw nsw i64 %159, 1
  %161 = icmp ult i64 %160, 4
  br i1 %161, label %251, label %162

162:                                              ; preds = %155
  %163 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 -1, i32 0
  %164 = ptrtoint i64* %163 to i64
  %165 = sub i64 %164, %152
  %166 = lshr i64 %165, 3
  %167 = xor i64 %166, -1
  %168 = add nsw i64 %129, %167
  %169 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %145, i64 %168
  %170 = xor i64 %166, -1
  %171 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 %170
  %172 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %169, %153
  %173 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %171, %146
  %174 = and i1 %172, %173
  br i1 %174, label %251, label %175

175:                                              ; preds = %162
  %176 = and i64 %160, 4611686018427387900
  %177 = sub nsw i64 0, %176
  %178 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %146, i64 %177
  %179 = sub nsw i64 0, %176
  %180 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 %179
  %181 = add nsw i64 %176, -4
  %182 = lshr exact i64 %181, 2
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 1
  %185 = icmp eq i64 %181, 0
  br i1 %185, label %228, label %186

186:                                              ; preds = %175
  %187 = sub nuw nsw i64 %183, %184
  %188 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 -1
  %189 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 -1
  br label %190

190:                                              ; preds = %190, %186
  %191 = phi i64 [ 0, %186 ], [ %225, %190 ]
  %192 = phi i64 [ %187, %186 ], [ %226, %190 ]
  %193 = sub i64 0, %191
  %194 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %146, i64 %193
  %195 = sub i64 0, %191
  %196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %188, i64 %195
  %197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %196, i64 0, i32 0
  %198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %194, i64 -1, i32 0
  %199 = getelementptr inbounds i64, i64* %197, i64 -1
  %200 = bitcast i64* %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8, !alias.scope !372
  %202 = getelementptr inbounds i64, i64* %197, i64 -3
  %203 = bitcast i64* %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !372
  %205 = getelementptr inbounds i64, i64* %198, i64 -1
  %206 = bitcast i64* %205 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %206, align 8, !alias.scope !375, !noalias !372
  %207 = getelementptr inbounds i64, i64* %198, i64 -3
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %208, align 8, !alias.scope !375, !noalias !372
  %209 = sub nuw nsw i64 -4, %191
  %210 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %146, i64 %209
  %211 = sub nuw nsw i64 -4, %191
  %212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %189, i64 %211
  %213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %212, i64 0, i32 0
  %214 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %210, i64 -1, i32 0
  %215 = getelementptr inbounds i64, i64* %213, i64 -1
  %216 = bitcast i64* %215 to <2 x i64>*
  %217 = load <2 x i64>, <2 x i64>* %216, align 8, !alias.scope !372
  %218 = getelementptr inbounds i64, i64* %213, i64 -3
  %219 = bitcast i64* %218 to <2 x i64>*
  %220 = load <2 x i64>, <2 x i64>* %219, align 8, !alias.scope !372
  %221 = getelementptr inbounds i64, i64* %214, i64 -1
  %222 = bitcast i64* %221 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %222, align 8, !alias.scope !375, !noalias !372
  %223 = getelementptr inbounds i64, i64* %214, i64 -3
  %224 = bitcast i64* %223 to <2 x i64>*
  store <2 x i64> %220, <2 x i64>* %224, align 8, !alias.scope !375, !noalias !372
  %225 = add i64 %191, 8
  %226 = add i64 %192, -2
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %190, !llvm.loop !377

228:                                              ; preds = %190, %175
  %229 = phi i64 [ 0, %175 ], [ %225, %190 ]
  %230 = icmp eq i64 %184, 0
  br i1 %230, label %249, label %231

231:                                              ; preds = %228
  %232 = sub i64 0, %229
  %233 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %146, i64 %232
  %234 = sub i64 0, %229
  %235 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %153, i64 -1
  %236 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %235, i64 %234
  %237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %236, i64 0, i32 0
  %238 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %233, i64 -1, i32 0
  %239 = getelementptr inbounds i64, i64* %237, i64 -1
  %240 = bitcast i64* %239 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !alias.scope !372
  %242 = getelementptr inbounds i64, i64* %237, i64 -3
  %243 = bitcast i64* %242 to <2 x i64>*
  %244 = load <2 x i64>, <2 x i64>* %243, align 8, !alias.scope !372
  %245 = getelementptr inbounds i64, i64* %238, i64 -1
  %246 = bitcast i64* %245 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %246, align 8, !alias.scope !375, !noalias !372
  %247 = getelementptr inbounds i64, i64* %238, i64 -3
  %248 = bitcast i64* %247 to <2 x i64>*
  store <2 x i64> %244, <2 x i64>* %248, align 8, !alias.scope !375, !noalias !372
  br label %249

249:                                              ; preds = %228, %231
  %250 = icmp eq i64 %160, %176
  br i1 %250, label %307, label %251

251:                                              ; preds = %249, %162, %155
  %252 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %146, %162 ], [ %146, %155 ], [ %178, %249 ]
  %253 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %153, %162 ], [ %153, %155 ], [ %180, %249 ]
  %254 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %253, i64 -1, i32 0
  %255 = ptrtoint i64* %254 to i64
  %256 = sub i64 %255, %152
  %257 = lshr i64 %256, 3
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 7
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %272, label %261

261:                                              ; preds = %251, %261
  %262 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %269, %261 ], [ %252, %251 ]
  %263 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %265, %261 ], [ %253, %251 ]
  %264 = phi i64 [ %270, %261 ], [ %259, %251 ]
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %263, i64 -1
  %266 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %265, i64 0, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %262, i64 -1, i32 0
  %268 = load i64, i64* %266, align 8
  store i64 %268, i64* %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %262, i64 -1
  %270 = add i64 %264, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %261, !llvm.loop !378

272:                                              ; preds = %261, %251
  %273 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %251 ], [ %269, %261 ]
  %274 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %252, %251 ], [ %269, %261 ]
  %275 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %253, %251 ], [ %265, %261 ]
  %276 = icmp ult i64 %256, 56
  br i1 %276, label %307, label %277

277:                                              ; preds = %272, %277
  %278 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %305, %277 ], [ %274, %272 ]
  %279 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %301, %277 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -1, i32 0
  %281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -1, i32 0
  %282 = load i64, i64* %280, align 8
  store i64 %282, i64* %281, align 8
  %283 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -2, i32 0
  %284 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -2, i32 0
  %285 = load i64, i64* %283, align 8
  store i64 %285, i64* %284, align 8
  %286 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -3, i32 0
  %287 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -3, i32 0
  %288 = load i64, i64* %286, align 8
  store i64 %288, i64* %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -4, i32 0
  %290 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -4, i32 0
  %291 = load i64, i64* %289, align 8
  store i64 %291, i64* %290, align 8
  %292 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -5, i32 0
  %293 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -5, i32 0
  %294 = load i64, i64* %292, align 8
  store i64 %294, i64* %293, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -6, i32 0
  %296 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -6, i32 0
  %297 = load i64, i64* %295, align 8
  store i64 %297, i64* %296, align 8
  %298 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -7, i32 0
  %299 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -7, i32 0
  %300 = load i64, i64* %298, align 8
  store i64 %300, i64* %299, align 8
  %301 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %279, i64 -8
  %302 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %301, i64 0, i32 0
  %303 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -8, i32 0
  %304 = load i64, i64* %302, align 8
  store i64 %304, i64* %303, align 8
  %305 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %278, i64 -8
  %306 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %301, %151
  br i1 %306, label %307, label %277, !llvm.loop !379

307:                                              ; preds = %272, %277, %249
  %308 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %178, %249 ], [ %273, %272 ], [ %305, %277 ]
  %309 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %308 to i64
  br label %310

310:                                              ; preds = %307, %143
  %311 = phi i64 [ %309, %307 ], [ %147, %143 ]
  store i64 %311, i64* %115, align 8
  store i64 %147, i64* %126, align 8
  store i64 %149, i64* %120, align 8
  br label %312

312:                                              ; preds = %114, %310
  %313 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %314 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %313, i64 0, i32 4
  %315 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %315, i64 0, i32 1
  %317 = load i64, i64* %316, align 8
  %318 = add i64 %317, 1
  %319 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %320 = bitcast %"struct.v8::internal::compiler::PushParameter"** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.v8::internal::ZoneVector.1544"* %20 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = sub i64 %321, %323
  %325 = ashr exact i64 %324, 4
  %326 = icmp ult i64 %325, %318
  br i1 %326, label %327, label %412

327:                                              ; preds = %312
  %328 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %329 = bitcast %"struct.v8::internal::compiler::PushParameter"** %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = sub i64 %330, %323
  %332 = ashr exact i64 %331, 4
  %333 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %334 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %333, align 8
  %335 = shl i64 %318, 4
  %336 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %334, i64 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %334, i64 0, i32 3
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %339, %337
  %341 = icmp ugt i64 %335, %340
  br i1 %341, label %342, label %344, !prof !2

342:                                              ; preds = %327
  %343 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %334, i64 %335) #12
  br label %346

344:                                              ; preds = %327
  %345 = add i64 %337, %335
  store i64 %345, i64* %336, align 8
  br label %346

346:                                              ; preds = %344, %342
  %347 = phi i64 [ %343, %342 ], [ %337, %344 ]
  %348 = inttoptr i64 %347 to %"struct.v8::internal::compiler::PushParameter"*
  %349 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %348, i64 %332
  %350 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %349 to i64
  %351 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %348, i64 %318
  %352 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %351 to i64
  %353 = getelementptr inbounds %"class.v8::internal::ZoneVector.1544", %"class.v8::internal::ZoneVector.1544"* %20, i64 0, i32 0, i32 0, i32 0
  %354 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %353, align 8
  %355 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %328, align 8
  %356 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %355, %354
  br i1 %356, label %404, label %357

357:                                              ; preds = %346
  %358 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %354 to i64
  %359 = getelementptr %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %355, i64 -1, i32 0
  %360 = ptrtoint %"class.v8::internal::compiler::Node"** %359 to i64
  %361 = sub i64 %360, %358
  %362 = lshr i64 %361, 4
  %363 = add nuw nsw i64 %362, 1
  %364 = and i64 %363, 3
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %376, label %366

366:                                              ; preds = %357, %366
  %367 = phi %"struct.v8::internal::compiler::PushParameter"* [ %370, %366 ], [ %349, %357 ]
  %368 = phi %"struct.v8::internal::compiler::PushParameter"* [ %371, %366 ], [ %355, %357 ]
  %369 = phi i64 [ %374, %366 ], [ %364, %357 ]
  %370 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %367, i64 -1
  %371 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %368, i64 -1
  %372 = bitcast %"struct.v8::internal::compiler::PushParameter"* %370 to i8*
  %373 = bitcast %"struct.v8::internal::compiler::PushParameter"* %371 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* align 8 %373, i64 16, i1 false) #12
  %374 = add i64 %369, -1
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %376, label %366, !llvm.loop !380

376:                                              ; preds = %366, %357
  %377 = phi %"struct.v8::internal::compiler::PushParameter"* [ undef, %357 ], [ %370, %366 ]
  %378 = phi %"struct.v8::internal::compiler::PushParameter"* [ %349, %357 ], [ %370, %366 ]
  %379 = phi %"struct.v8::internal::compiler::PushParameter"* [ %355, %357 ], [ %371, %366 ]
  %380 = icmp ult i64 %361, 48
  br i1 %380, label %401, label %381

381:                                              ; preds = %376, %381
  %382 = phi %"struct.v8::internal::compiler::PushParameter"* [ %396, %381 ], [ %378, %376 ]
  %383 = phi %"struct.v8::internal::compiler::PushParameter"* [ %397, %381 ], [ %379, %376 ]
  %384 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %382, i64 -1
  %385 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %383, i64 -1
  %386 = bitcast %"struct.v8::internal::compiler::PushParameter"* %384 to i8*
  %387 = bitcast %"struct.v8::internal::compiler::PushParameter"* %385 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* align 8 %387, i64 16, i1 false) #12
  %388 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %382, i64 -2
  %389 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %383, i64 -2
  %390 = bitcast %"struct.v8::internal::compiler::PushParameter"* %388 to i8*
  %391 = bitcast %"struct.v8::internal::compiler::PushParameter"* %389 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %390, i8* align 8 %391, i64 16, i1 false) #12
  %392 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %382, i64 -3
  %393 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %383, i64 -3
  %394 = bitcast %"struct.v8::internal::compiler::PushParameter"* %392 to i8*
  %395 = bitcast %"struct.v8::internal::compiler::PushParameter"* %393 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %394, i8* align 8 %395, i64 16, i1 false) #12
  %396 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %382, i64 -4
  %397 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %383, i64 -4
  %398 = bitcast %"struct.v8::internal::compiler::PushParameter"* %396 to i8*
  %399 = bitcast %"struct.v8::internal::compiler::PushParameter"* %397 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %398, i8* align 8 %399, i64 16, i1 false) #12
  %400 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %397, %354
  br i1 %400, label %401, label %381

401:                                              ; preds = %381, %376
  %402 = phi %"struct.v8::internal::compiler::PushParameter"* [ %377, %376 ], [ %396, %381 ]
  %403 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %402 to i64
  br label %404

404:                                              ; preds = %401, %346
  %405 = phi i64 [ %403, %401 ], [ %350, %346 ]
  store i64 %405, i64* %322, align 8
  store i64 %350, i64* %329, align 8
  store i64 %352, i64* %320, align 8
  %406 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %407 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %406, i64 0, i32 4
  %408 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %407, align 8
  %409 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %408, i64 0, i32 1
  %410 = load i64, i64* %409, align 8
  %411 = add i64 %410, 1
  br label %412

412:                                              ; preds = %312, %404
  %413 = phi i64 [ %318, %312 ], [ %411, %404 ]
  %414 = load %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::compiler::FrameStateDescriptor"** %6, align 8
  %415 = icmp eq %"class.v8::internal::compiler::FrameStateDescriptor"* %414, null
  br i1 %415, label %419, label %416

416:                                              ; preds = %412
  %417 = tail call i64 @_ZNK2v88internal8compiler20FrameStateDescriptor12GetTotalSizeEv(%"class.v8::internal::compiler::FrameStateDescriptor"* nonnull %414) #12
  %418 = add i64 %417, 1
  br label %419

419:                                              ; preds = %412, %416
  %420 = phi i64 [ %418, %416 ], [ 0, %412 ]
  %421 = add i64 %413, %420
  %422 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %423 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %422 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.v8::internal::ZoneVector.1240"* %16 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = sub i64 %424, %426
  %428 = ashr exact i64 %427, 3
  %429 = icmp ult i64 %428, %421
  br i1 %429, label %430, label %618

430:                                              ; preds = %419
  %431 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %432 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = sub i64 %433, %426
  %435 = ashr exact i64 %434, 3
  %436 = getelementptr inbounds %"struct.v8::internal::compiler::CallBuffer", %"struct.v8::internal::compiler::CallBuffer"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %437 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %436, align 8
  %438 = shl i64 %421, 3
  %439 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %437, i64 0, i32 2
  %440 = load i64, i64* %439, align 8
  %441 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %437, i64 0, i32 3
  %442 = load i64, i64* %441, align 8
  %443 = sub i64 %442, %440
  %444 = icmp ugt i64 %438, %443
  br i1 %444, label %445, label %447, !prof !2

445:                                              ; preds = %430
  %446 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %437, i64 %438) #12
  br label %449

447:                                              ; preds = %430
  %448 = add i64 %440, %438
  store i64 %448, i64* %439, align 8
  br label %449

449:                                              ; preds = %447, %445
  %450 = phi i64 [ %446, %445 ], [ %440, %447 ]
  %451 = inttoptr i64 %450 to %"class.v8::internal::compiler::InstructionOperand"*
  %452 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %451, i64 %435
  %453 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %452 to i64
  %454 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %451, i64 %421
  %455 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %454 to i64
  %456 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %16, i64 0, i32 0, i32 0, i32 0
  %457 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %456, align 8
  %458 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %457 to i64
  %459 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %431, align 8
  %460 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %459, %457
  br i1 %460, label %616, label %461

461:                                              ; preds = %449
  %462 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 -1, i32 0
  %463 = ptrtoint i64* %462 to i64
  %464 = sub i64 %463, %458
  %465 = lshr i64 %464, 3
  %466 = add nuw nsw i64 %465, 1
  %467 = icmp ult i64 %466, 4
  br i1 %467, label %557, label %468

468:                                              ; preds = %461
  %469 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 -1, i32 0
  %470 = ptrtoint i64* %469 to i64
  %471 = sub i64 %470, %458
  %472 = lshr i64 %471, 3
  %473 = xor i64 %472, -1
  %474 = add nsw i64 %435, %473
  %475 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %451, i64 %474
  %476 = xor i64 %472, -1
  %477 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 %476
  %478 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %475, %459
  %479 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %477, %452
  %480 = and i1 %478, %479
  br i1 %480, label %557, label %481

481:                                              ; preds = %468
  %482 = and i64 %466, 4611686018427387900
  %483 = sub nsw i64 0, %482
  %484 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %452, i64 %483
  %485 = sub nsw i64 0, %482
  %486 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 %485
  %487 = add nsw i64 %482, -4
  %488 = lshr exact i64 %487, 2
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 1
  %491 = icmp eq i64 %487, 0
  br i1 %491, label %536, label %492

492:                                              ; preds = %481
  %493 = sub nuw nsw i64 %489, %490
  %494 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 -1
  %495 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 -1
  br label %496

496:                                              ; preds = %496, %492
  %497 = phi i64 [ 0, %492 ], [ %531, %496 ]
  %498 = phi i64 [ %493, %492 ], [ %532, %496 ]
  %499 = sub i64 0, %497
  %500 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %452, i64 %499
  %501 = sub i64 0, %497
  %502 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %494, i64 %501
  %503 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %502, i64 0, i32 0
  %504 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %500, i64 -1, i32 0
  %505 = getelementptr inbounds i64, i64* %503, i64 -1
  %506 = bitcast i64* %505 to <2 x i64>*
  %507 = load <2 x i64>, <2 x i64>* %506, align 8, !alias.scope !381
  %508 = getelementptr inbounds i64, i64* %503, i64 -3
  %509 = bitcast i64* %508 to <2 x i64>*
  %510 = load <2 x i64>, <2 x i64>* %509, align 8, !alias.scope !381
  %511 = getelementptr inbounds i64, i64* %504, i64 -1
  %512 = bitcast i64* %511 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %512, align 8, !alias.scope !384, !noalias !381
  %513 = getelementptr inbounds i64, i64* %504, i64 -3
  %514 = bitcast i64* %513 to <2 x i64>*
  store <2 x i64> %510, <2 x i64>* %514, align 8, !alias.scope !384, !noalias !381
  %515 = sub nuw nsw i64 -4, %497
  %516 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %452, i64 %515
  %517 = sub nuw nsw i64 -4, %497
  %518 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %495, i64 %517
  %519 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %518, i64 0, i32 0
  %520 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %516, i64 -1, i32 0
  %521 = getelementptr inbounds i64, i64* %519, i64 -1
  %522 = bitcast i64* %521 to <2 x i64>*
  %523 = load <2 x i64>, <2 x i64>* %522, align 8, !alias.scope !381
  %524 = getelementptr inbounds i64, i64* %519, i64 -3
  %525 = bitcast i64* %524 to <2 x i64>*
  %526 = load <2 x i64>, <2 x i64>* %525, align 8, !alias.scope !381
  %527 = getelementptr inbounds i64, i64* %520, i64 -1
  %528 = bitcast i64* %527 to <2 x i64>*
  store <2 x i64> %523, <2 x i64>* %528, align 8, !alias.scope !384, !noalias !381
  %529 = getelementptr inbounds i64, i64* %520, i64 -3
  %530 = bitcast i64* %529 to <2 x i64>*
  store <2 x i64> %526, <2 x i64>* %530, align 8, !alias.scope !384, !noalias !381
  %531 = add i64 %497, 8
  %532 = add i64 %498, -2
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %534, label %496, !llvm.loop !386

534:                                              ; preds = %496
  %535 = sub nuw nsw i64 -8, %497
  br label %536

536:                                              ; preds = %534, %481
  %537 = phi i64 [ 0, %481 ], [ %535, %534 ]
  %538 = icmp eq i64 %490, 0
  br i1 %538, label %555, label %539

539:                                              ; preds = %536
  %540 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %452, i64 %537
  %541 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %459, i64 -1
  %542 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %541, i64 %537
  %543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %542, i64 0, i32 0
  %544 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %540, i64 -1, i32 0
  %545 = getelementptr inbounds i64, i64* %543, i64 -1
  %546 = bitcast i64* %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !381
  %548 = getelementptr inbounds i64, i64* %543, i64 -3
  %549 = bitcast i64* %548 to <2 x i64>*
  %550 = load <2 x i64>, <2 x i64>* %549, align 8, !alias.scope !381
  %551 = getelementptr inbounds i64, i64* %544, i64 -1
  %552 = bitcast i64* %551 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %552, align 8, !alias.scope !384, !noalias !381
  %553 = getelementptr inbounds i64, i64* %544, i64 -3
  %554 = bitcast i64* %553 to <2 x i64>*
  store <2 x i64> %550, <2 x i64>* %554, align 8, !alias.scope !384, !noalias !381
  br label %555

555:                                              ; preds = %536, %539
  %556 = icmp eq i64 %466, %482
  br i1 %556, label %613, label %557

557:                                              ; preds = %555, %468, %461
  %558 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %452, %468 ], [ %452, %461 ], [ %484, %555 ]
  %559 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %459, %468 ], [ %459, %461 ], [ %486, %555 ]
  %560 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %559, i64 -1, i32 0
  %561 = ptrtoint i64* %560 to i64
  %562 = sub i64 %561, %458
  %563 = lshr i64 %562, 3
  %564 = add nuw nsw i64 %563, 1
  %565 = and i64 %564, 7
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %578, label %567

567:                                              ; preds = %557, %567
  %568 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %575, %567 ], [ %558, %557 ]
  %569 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %571, %567 ], [ %559, %557 ]
  %570 = phi i64 [ %576, %567 ], [ %565, %557 ]
  %571 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %569, i64 -1
  %572 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %571, i64 0, i32 0
  %573 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %568, i64 -1, i32 0
  %574 = load i64, i64* %572, align 8
  store i64 %574, i64* %573, align 8
  %575 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %568, i64 -1
  %576 = add i64 %570, -1
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %567, !llvm.loop !387

578:                                              ; preds = %567, %557
  %579 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %557 ], [ %575, %567 ]
  %580 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %558, %557 ], [ %575, %567 ]
  %581 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %559, %557 ], [ %571, %567 ]
  %582 = icmp ult i64 %562, 56
  br i1 %582, label %613, label %583

583:                                              ; preds = %578, %583
  %584 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %611, %583 ], [ %580, %578 ]
  %585 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %607, %583 ], [ %581, %578 ]
  %586 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -1, i32 0
  %587 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -1, i32 0
  %588 = load i64, i64* %586, align 8
  store i64 %588, i64* %587, align 8
  %589 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -2, i32 0
  %590 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -2, i32 0
  %591 = load i64, i64* %589, align 8
  store i64 %591, i64* %590, align 8
  %592 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -3, i32 0
  %593 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -3, i32 0
  %594 = load i64, i64* %592, align 8
  store i64 %594, i64* %593, align 8
  %595 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -4, i32 0
  %596 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -4, i32 0
  %597 = load i64, i64* %595, align 8
  store i64 %597, i64* %596, align 8
  %598 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -5, i32 0
  %599 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -5, i32 0
  %600 = load i64, i64* %598, align 8
  store i64 %600, i64* %599, align 8
  %601 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -6, i32 0
  %602 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -6, i32 0
  %603 = load i64, i64* %601, align 8
  store i64 %603, i64* %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -7, i32 0
  %605 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -7, i32 0
  %606 = load i64, i64* %604, align 8
  store i64 %606, i64* %605, align 8
  %607 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %585, i64 -8
  %608 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %607, i64 0, i32 0
  %609 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -8, i32 0
  %610 = load i64, i64* %608, align 8
  store i64 %610, i64* %609, align 8
  %611 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %584, i64 -8
  %612 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %607, %457
  br i1 %612, label %613, label %583, !llvm.loop !388

613:                                              ; preds = %578, %583, %555
  %614 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %484, %555 ], [ %579, %578 ], [ %611, %583 ]
  %615 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %614 to i64
  br label %616

616:                                              ; preds = %613, %449
  %617 = phi i64 [ %615, %613 ], [ %453, %449 ]
  store i64 %617, i64* %425, align 8
  store i64 %453, i64* %432, align 8
  store i64 %455, i64* %423, align 8
  br label %618

618:                                              ; preds = %419, %616
  ret void
}

declare void @_ZN2v88internal8compiler19InstructionSelector20EmitPrepareArgumentsEPNS0_10ZoneVectorINS1_13PushParameterEEEPKNS1_14CallDescriptorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::ZoneVector.1544"*, %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector18EmitPrepareResultsEPNS0_10ZoneVectorINS1_13PushParameterEEEPKNS1_14CallDescriptorEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::ZoneVector.1544"*, %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal8compiler14CallDescriptor22GetStackParameterDeltaEPKS2_(%"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler19InstructionSelector26IsTailCallAddressImmediateEv(%"class.v8::internal::compiler::InstructionSelector"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal8compiler14CallDescriptor31GetOffsetToFirstUnusedStackSlotEv(%"class.v8::internal::compiler::CallDescriptor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19InstructionSelector14NeedsPoisoningENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 23
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %9 [
    i32 1, label %10
    i32 0, label %5
    i32 2, label %7
  ]

5:                                                ; preds = %2
  %6 = icmp ne i8 %1, 2
  br label %10

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 0
  br label %10

9:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

10:                                               ; preds = %2, %7, %5
  %11 = phi i1 [ %8, %7 ], [ %6, %5 ], [ false, %2 ]
  ret i1 %11
}

declare zeroext i8 @_ZN2v88internal8compiler15IsSafetyCheckOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSelector20VisitWordCompareZeroEPNS1_4NodeES4_PNS1_17FlagsContinuationE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::FlagsContinuation"*) local_unnamed_addr #3

declare %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage21GetStubCallDescriptorEPNS0_4ZoneERKNS0_23CallInterfaceDescriptorEiNS_4base5FlagsINS1_14CallDescriptor4FlagEiEENS9_INS1_8Operator8PropertyEhEENS0_12StubCallModeE(%"class.v8::internal::Zone"*, %"class.v8::internal::CallInterfaceDescriptor"* dereferenceable(8), i32, i32, i8, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21UnparkedScopeIfNeededC2EPNS1_12JSHeapBrokerEb(%"class.v8::internal::compiler::UnparkedScopeIfNeeded"*, %"class.v8::internal::compiler::JSHeapBroker"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::UnparkedScopeIfNeeded", %"class.v8::internal::compiler::UnparkedScopeIfNeeded"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::UnparkedScopeIfNeeded", %"class.v8::internal::compiler::UnparkedScopeIfNeeded"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon.1577* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = icmp eq %"class.v8::internal::compiler::JSHeapBroker"* %1, null
  %8 = xor i1 %2, true
  %9 = or i1 %7, %8
  br i1 %9, label %36, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 14
  %12 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %11, align 8
  %13 = icmp eq %"class.v8::internal::LocalIsolate"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %12, i64 0, i32 1
  %16 = tail call zeroext i1 @_ZN2v88internal9LocalHeap8IsParkedEv(%"class.v8::internal::LocalHeap"* %15) #12
  br i1 %16, label %17, label %36

17:                                               ; preds = %14
  %18 = load i8, i8* %4, align 8, !range !47
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.v8::internal::compiler::UnparkedScopeIfNeeded", %"class.v8::internal::compiler::UnparkedScopeIfNeeded"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = cmpxchg i32* %23, i32 0, i32 1 seq_cst seq_cst
  %25 = extractvalue { i32, i1 } %24, 1
  br i1 %25, label %28, label %26

26:                                               ; preds = %20
  %27 = extractvalue { i32, i1 } %24, 0
  tail call void @_ZN2v88internal9LocalHeap12ParkSlowPathENS1_11ThreadStateE(%"class.v8::internal::LocalHeap"* %22, i32 %27) #12
  br label %28

28:                                               ; preds = %26, %20
  store i8 0, i8* %4, align 8
  br label %29

29:                                               ; preds = %28, %17
  %30 = getelementptr inbounds %"class.v8::internal::compiler::UnparkedScopeIfNeeded", %"class.v8::internal::compiler::UnparkedScopeIfNeeded"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::LocalHeap"* %15, %"class.v8::internal::LocalHeap"** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %12, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %32 = cmpxchg i32* %31, i32 1, i32 0 seq_cst seq_cst
  %33 = extractvalue { i32, i1 } %32, 1
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  tail call void @_ZN2v88internal9LocalHeap14UnparkSlowPathEv(%"class.v8::internal::LocalHeap"* %15) #12
  br label %35

35:                                               ; preds = %29, %34
  store i8 1, i8* %4, align 8
  br label %36

36:                                               ; preds = %14, %35, %10, %3
  ret void
}

declare void @_ZNK2v88internal8compiler4Node5PrintEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #3

declare i8* @_ZN2v88internal8compiler20StaticAssertSourceOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare zeroext i8 @_ZN2v88internal8compiler25DeadValueRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19InstructionSelector25ZeroExtendsWord32ToWord64EPNS1_4NodeEi(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, 35
  br i1 %8, label %9, label %64

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 16777215
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 32, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %13
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  %20 = icmp eq i8 %17, 1
  br label %66

21:                                               ; preds = %9
  %22 = icmp sgt i32 %2, 99
  br i1 %22, label %66, label %23

23:                                               ; preds = %21
  store i8 1, i8* %16, align 1
  %24 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %66

28:                                               ; preds = %23
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %30 = add i64 %29, 32
  %31 = inttoptr i64 %30 to i64*
  %32 = add nsw i32 %2, 1
  %33 = zext i32 %26 to i64
  br label %43

34:                                               ; preds = %51
  %35 = icmp eq i64 %57, %33
  br i1 %35, label %66, label %36

36:                                               ; preds = %34
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %57, %40
  br i1 %41, label %43, label %42, !prof !59

42:                                               ; preds = %36
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

43:                                               ; preds = %28, %36
  %44 = phi i64 [ 0, %28 ], [ %57, %36 ]
  %45 = load i32, i32* %10, align 4
  %46 = and i32 %45, 251658240
  %47 = icmp eq i32 %46, 251658240
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load i64, i64* %31, align 8
  %50 = add i64 %49, 16
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi i64 [ %50, %48 ], [ %30, %43 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::Node"**
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, i64 %44
  %55 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, align 8
  %56 = tail call zeroext i1 @_ZN2v88internal8compiler19InstructionSelector25ZeroExtendsWord32ToWord64EPNS1_4NodeEi(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %55, i32 %32)
  %57 = add nuw nsw i64 %44, 1
  br i1 %56, label %34, label %58

58:                                               ; preds = %51
  %59 = load i32, i32* %10, align 4
  %60 = and i32 %59, 16777215
  %61 = zext i32 %60 to i64
  %62 = load i8*, i8** %14, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  store i8 2, i8* %63, align 1
  br label %66

64:                                               ; preds = %3
  %65 = tail call zeroext i1 @_ZN2v88internal8compiler19InstructionSelector31ZeroExtendsWord32ToWord64NoPhisEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* %0, %"class.v8::internal::compiler::Node"* %1) #12
  br label %66

66:                                               ; preds = %34, %23, %58, %19, %21, %64
  %67 = phi i1 [ %65, %64 ], [ %20, %19 ], [ false, %21 ], [ false, %58 ], [ true, %23 ], [ true, %34 ]
  ret i1 %67
}

declare zeroext i1 @_ZN2v88internal8compiler19InstructionSelector31ZeroExtendsWord32ToWord64NoPhisEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.v8::internal::compiler::FrameStateDescriptor"* @_ZN2v88internal8compiler12_GLOBAL__N_131GetFrameStateDescriptorInternalEPNS0_4ZoneENS1_10FrameStateE(%"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = tail call dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %5, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::FrameStateFunctionInfo"*, %"class.v8::internal::compiler::FrameStateFunctionInfo"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::FrameStateFunctionInfo"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %7, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  %17 = sext i32 %11 to i64
  %18 = sext i32 %13 to i64
  %19 = zext i1 %16 to i64
  br label %20

20:                                               ; preds = %2, %9
  %21 = phi i64 [ %18, %9 ], [ 0, %2 ]
  %22 = phi i64 [ %17, %9 ], [ 0, %2 ]
  %23 = phi i64 [ %19, %9 ], [ 1, %2 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 251658240
  %27 = icmp eq i32 %26, 251658240
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %29 = add i64 %28, 32
  br i1 %27, label %30, label %34

30:                                               ; preds = %20
  %31 = inttoptr i64 %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %20 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 5
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %38, i64 0, i32 0
  %40 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %40, i64 0, i32 2
  %42 = load i16, i16* %41, align 8
  %43 = icmp eq i16 %42, 41
  br i1 %43, label %44, label %56

44:                                               ; preds = %34
  br i1 %27, label %45, label %49

45:                                               ; preds = %44
  %46 = inttoptr i64 %29 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 16
  br label %49

49:                                               ; preds = %44, %45
  %50 = phi i64 [ %48, %45 ], [ %29, %44 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, i64 5
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = tail call fastcc %"class.v8::internal::compiler::FrameStateDescriptor"* @_ZN2v88internal8compiler12_GLOBAL__N_131GetFrameStateDescriptorInternalEPNS0_4ZoneENS1_10FrameStateE(%"class.v8::internal::Zone"* %0, %"class.v8::internal::compiler::Node"* %53)
  %55 = load %"class.v8::internal::compiler::FrameStateFunctionInfo"*, %"class.v8::internal::compiler::FrameStateFunctionInfo"** %6, align 8
  br label %56

56:                                               ; preds = %49, %34
  %57 = phi %"class.v8::internal::compiler::FrameStateFunctionInfo"* [ %55, %49 ], [ %7, %34 ]
  %58 = phi %"class.v8::internal::compiler::FrameStateDescriptor"* [ %54, %49 ], [ null, %34 ]
  %59 = icmp eq %"class.v8::internal::compiler::FrameStateFunctionInfo"* %57, null
  br i1 %59, label %93, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %57, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %64, label %89

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %5, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %5, i64 0, i32 1, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %57, i64 0, i32 3, i32 0, i32 0
  %70 = bitcast i64** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %57, i64 1
  %73 = bitcast %"class.v8::internal::compiler::FrameStateFunctionInfo"* %72 to %"class.v8::internal::Signature.1670"**
  %74 = load %"class.v8::internal::Signature.1670"*, %"class.v8::internal::Signature.1670"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %78, %76
  %80 = icmp ult i64 %79, 136
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %64
  %82 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 136) #12
  br label %85

83:                                               ; preds = %64
  %84 = add i64 %76, 136
  store i64 %84, i64* %75, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi i64 [ %82, %81 ], [ %76, %83 ]
  %87 = inttoptr i64 %86 to %"class.v8::internal::compiler::JSToWasmFrameStateDescriptor"*
  tail call void @_ZN2v88internal8compiler28JSToWasmFrameStateDescriptorC1EPNS0_4ZoneENS1_14FrameStateTypeENS0_14BytecodeOffsetENS1_23OutputFrameStateCombineEmmmNS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPNS1_20FrameStateDescriptorEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::compiler::JSToWasmFrameStateDescriptor"* %87, %"class.v8::internal::Zone"* %0, i32 4, i32 %66, i64 %68, i64 %22, i64 %21, i64 %23, i64 %71, %"class.v8::internal::compiler::FrameStateDescriptor"* %58, %"class.v8::internal::Signature.1670"* %74) #12
  %88 = getelementptr inbounds %"class.v8::internal::compiler::JSToWasmFrameStateDescriptor", %"class.v8::internal::compiler::JSToWasmFrameStateDescriptor"* %87, i64 0, i32 0
  br label %113

89:                                               ; preds = %60
  %90 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %57, i64 0, i32 3, i32 0, i32 0
  %91 = bitcast i64** %90 to i64*
  %92 = load i64, i64* %91, align 8
  br label %93

93:                                               ; preds = %56, %89
  %94 = phi i32 [ %62, %89 ], [ 0, %56 ]
  %95 = phi i64 [ %92, %89 ], [ 0, %56 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %5, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %5, i64 0, i32 1, i32 0
  %98 = load i32, i32* %96, align 8
  %99 = load i64, i64* %97, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %103, %101
  %105 = icmp ult i64 %104, 128
  br i1 %105, label %106, label %108, !prof !2

106:                                              ; preds = %93
  %107 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 128) #12
  br label %110

108:                                              ; preds = %93
  %109 = add i64 %101, 128
  store i64 %109, i64* %100, align 8
  br label %110

110:                                              ; preds = %106, %108
  %111 = phi i64 [ %107, %106 ], [ %101, %108 ]
  %112 = inttoptr i64 %111 to %"class.v8::internal::compiler::FrameStateDescriptor"*
  tail call void @_ZN2v88internal8compiler20FrameStateDescriptorC1EPNS0_4ZoneENS1_14FrameStateTypeENS0_14BytecodeOffsetENS1_23OutputFrameStateCombineEmmmNS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPS2_(%"class.v8::internal::compiler::FrameStateDescriptor"* %112, %"class.v8::internal::Zone"* %0, i32 %94, i32 %98, i64 %99, i64 %22, i64 %21, i64 %23, i64 %95, %"class.v8::internal::compiler::FrameStateDescriptor"* %58) #12
  br label %113

113:                                              ; preds = %110, %85
  %114 = phi %"class.v8::internal::compiler::FrameStateDescriptor"* [ %88, %85 ], [ %112, %110 ]
  ret %"class.v8::internal::compiler::FrameStateDescriptor"* %114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector19CanonicalizeShuffleEPNS1_4NodeEPhPb(%"class.v8::internal::compiler::InstructionSelector"* nocapture readonly, %"class.v8::internal::compiler::Node"*, i8*, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = tail call dereferenceable(16) %"class.v8::internal::compiler::S128ImmediateParameter"* @_ZN2v88internal8compiler24S128ImmediateParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #12
  %9 = getelementptr inbounds %"class.v8::internal::compiler::S128ImmediateParameter", %"class.v8::internal::compiler::S128ImmediateParameter"* %8, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %9, i64 16, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 251658240
  %13 = icmp eq i32 %12, 251658240
  %14 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %15 = add i64 %14, 32
  br i1 %13, label %16, label %20

16:                                               ; preds = %4
  %17 = inttoptr i64 %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 16
  br label %20

20:                                               ; preds = %4, %16
  %21 = phi i64 [ %19, %16 ], [ %15, %4 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"**
  %23 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 16777215
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 %27
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %40

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %35 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %34, align 8
  %36 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %35) #12
  %37 = load i32*, i32** %28, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %27
  store i32 %36, i32* %38, align 4
  %39 = load i32, i32* %10, align 4
  br label %40

40:                                               ; preds = %20, %33
  %41 = phi i32 [ %39, %33 ], [ %11, %20 ]
  %42 = phi i32 [ %36, %33 ], [ %31, %20 ]
  %43 = and i32 %41, 251658240
  %44 = icmp eq i32 %43, 251658240
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = inttoptr i64 %15 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 16
  br label %49

49:                                               ; preds = %40, %45
  %50 = phi i64 [ %48, %45 ], [ %15, %40 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, i64 1
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = zext i32 %56 to i64
  %58 = load i32*, i32** %28, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %57
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %62, label %68

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSelector", %"class.v8::internal::compiler::InstructionSelector"* %0, i64 0, i32 2
  %64 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %63, align 8
  %65 = tail call i32 @_ZN2v88internal8compiler19InstructionSequence19NextVirtualRegisterEv(%"class.v8::internal::compiler::InstructionSequence"* %64) #12
  %66 = load i32*, i32** %28, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %57
  store i32 %65, i32* %67, align 4
  br label %68

68:                                               ; preds = %49, %62
  %69 = phi i32 [ %65, %62 ], [ %60, %49 ]
  %70 = icmp eq i32 %42, %69
  call void @_ZN2v88internal4wasm11SimdShuffle19CanonicalizeShuffleEbPhPbS4_(i1 zeroext %70, i8* %2, i8* nonnull %5, i8* %3) #12
  %71 = load i8, i8* %5, align 1, !range !47
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %68
  call void @_ZN2v88internal8compiler19InstructionSelector17SwapShuffleInputsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* undef, %"class.v8::internal::compiler::Node"* %1)
  br label %74

74:                                               ; preds = %68, %73
  %75 = load i8, i8* %3, align 1, !range !47
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %107, label %77

77:                                               ; preds = %74
  %78 = load i32, i32* %10, align 4
  %79 = and i32 %78, 251658240
  %80 = icmp eq i32 %79, 251658240
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = inttoptr i64 %15 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 16
  br label %85

85:                                               ; preds = %77, %81
  %86 = phi i64 [ %84, %81 ], [ %15, %77 ]
  %87 = inttoptr i64 %86 to %"class.v8::internal::compiler::Node"**
  %88 = inttoptr i64 %86 to %"class.v8::internal::compiler::Node"**
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %87, i64 1
  %90 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %88, align 8
  %91 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, align 8
  %92 = icmp eq %"class.v8::internal::compiler::Node"* %91, %90
  br i1 %92, label %107, label %93

93:                                               ; preds = %85
  br i1 %80, label %96, label %94

94:                                               ; preds = %93
  %95 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %99

96:                                               ; preds = %93
  %97 = inttoptr i64 %15 to %"struct.v8::internal::compiler::Node::Use"**
  %98 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %97, align 8
  br label %99

99:                                               ; preds = %96, %94
  %100 = phi %"struct.v8::internal::compiler::Node::Use"* [ %95, %94 ], [ %98, %96 ]
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %100, i64 -2
  %102 = icmp eq %"class.v8::internal::compiler::Node"* %91, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %91, %"struct.v8::internal::compiler::Node::Use"* %101) #12
  br label %104

104:                                              ; preds = %103, %99
  store %"class.v8::internal::compiler::Node"* %90, %"class.v8::internal::compiler::Node"** %89, align 8
  %105 = icmp eq %"class.v8::internal::compiler::Node"* %90, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %104
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %90, %"struct.v8::internal::compiler::Node::Use"* %101) #12
  br label %107

107:                                              ; preds = %106, %104, %85, %74
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  ret void
}

declare dereferenceable(16) %"class.v8::internal::compiler::S128ImmediateParameter"* @_ZN2v88internal8compiler24S128ImmediateParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare void @_ZN2v88internal4wasm11SimdShuffle19CanonicalizeShuffleEbPhPbS4_(i1 zeroext, i8*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19InstructionSelector17SwapShuffleInputsEPNS1_4NodeE(%"class.v8::internal::compiler::InstructionSelector"* nocapture readnone, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %9, label %13

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 16
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %12, %9 ], [ %8, %2 ]
  %15 = inttoptr i64 %14 to %"class.v8::internal::compiler::Node"**
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, i64 1
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::Node"* %16, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %13
  br i1 %6, label %23, label %21

21:                                               ; preds = %20
  %22 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %26

23:                                               ; preds = %20
  %24 = inttoptr i64 %8 to %"struct.v8::internal::compiler::Node::Use"**
  %25 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %24, align 8
  br label %26

26:                                               ; preds = %23, %21
  %27 = phi %"struct.v8::internal::compiler::Node::Use"* [ %22, %21 ], [ %25, %23 ]
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %27, i64 -1
  %29 = icmp eq %"class.v8::internal::compiler::Node"* %16, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %16, %"struct.v8::internal::compiler::Node::Use"* %28) #12
  br label %31

31:                                               ; preds = %30, %26
  store %"class.v8::internal::compiler::Node"* %18, %"class.v8::internal::compiler::Node"** %15, align 8
  %32 = icmp eq %"class.v8::internal::compiler::Node"* %18, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %18, %"struct.v8::internal::compiler::Node::Use"* %28) #12
  br label %34

34:                                               ; preds = %13, %31, %33
  %35 = load i32, i32* %3, align 4
  %36 = and i32 %35, 251658240
  %37 = icmp eq i32 %36, 251658240
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = inttoptr i64 %8 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 16
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi i64 [ %41, %38 ], [ %8, %34 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::Node"**
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 1
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, align 8
  %47 = icmp eq %"class.v8::internal::compiler::Node"* %46, %16
  br i1 %47, label %62, label %48

48:                                               ; preds = %42
  br i1 %37, label %51, label %49

49:                                               ; preds = %48
  %50 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %54

51:                                               ; preds = %48
  %52 = inttoptr i64 %8 to %"struct.v8::internal::compiler::Node::Use"**
  %53 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %52, align 8
  br label %54

54:                                               ; preds = %51, %49
  %55 = phi %"struct.v8::internal::compiler::Node::Use"* [ %50, %49 ], [ %53, %51 ]
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %55, i64 -2
  %57 = icmp eq %"class.v8::internal::compiler::Node"* %46, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %46, %"struct.v8::internal::compiler::Node::Use"* %56) #12
  br label %59

59:                                               ; preds = %58, %54
  store %"class.v8::internal::compiler::Node"* %16, %"class.v8::internal::compiler::Node"** %45, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"* %16, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %59
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %16, %"struct.v8::internal::compiler::Node::Use"* %56) #12
  br label %62

62:                                               ; preds = %42, %59, %61
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler20InstructionScheduler18SchedulerSupportedEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZN2v88internal8compiler11InstructionC1EjmPNS1_18InstructionOperandEmS4_mS4_(%"class.v8::internal::compiler::Instruction"*, i32, i64, %"class.v8::internal::compiler::InstructionOperand"*, i64, %"class.v8::internal::compiler::InstructionOperand"*, i64, %"class.v8::internal::compiler::InstructionOperand"*) unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare i32 @_ZN2v88internal8compiler10ObjectIdOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal8compiler14HeapConstantOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::StateValueDescriptor"* @_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertENS_11__wrap_iterIPKS4_EEmRS9_(%"class.std::__1::vector.1279"*, %"class.v8::internal::compiler::StateValueDescriptor"*, i64, %"class.v8::internal::compiler::StateValueDescriptor"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 0
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %321, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %12, align 8
  %14 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %13 to i64
  %15 = sub i64 %11, %14
  %16 = ashr exact i64 %15, 4
  %17 = icmp ult i64 %16, %2
  br i1 %17, label %159, label %18

18:                                               ; preds = %8
  %19 = sub i64 %14, %5
  %20 = ashr exact i64 %19, 4
  %21 = icmp ult i64 %20, %2
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %12 to i64*
  br label %63

24:                                               ; preds = %18
  %25 = sub i64 %2, %20
  %26 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %12 to i64*
  %27 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %13, i64 %25
  %28 = icmp eq i64 %25, 0
  br i1 %28, label %58, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %3, i64 0, i32 0
  %31 = shl nsw i64 %2, 4
  %32 = add i64 %31, -16
  %33 = sub i64 %32, %19
  %34 = lshr i64 %33, 4
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 3
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %29, %38
  %39 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %42, %38 ], [ %13, %29 ]
  %40 = phi i64 [ %43, %38 ], [ %36, %29 ]
  %41 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %39, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %30, i64 16, i1 false) #12
  %42 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %39, i64 1
  %43 = add i64 %40, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %38, !llvm.loop !389

45:                                               ; preds = %38, %29
  %46 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %13, %29 ], [ %42, %38 ]
  %47 = icmp ult i64 %33, 48
  br i1 %47, label %48, label %50

48:                                               ; preds = %50, %45
  %49 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %27 to i64
  br label %58

50:                                               ; preds = %45, %50
  %51 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %56, %50 ], [ %46, %45 ]
  %52 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %51, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %30, i64 16, i1 false) #12
  %53 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %51, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %30, i64 16, i1 false) #12
  %54 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %51, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %30, i64 16, i1 false) #12
  %55 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %51, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %30, i64 16, i1 false) #12
  %56 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %51, i64 4
  %57 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %56, %27
  br i1 %57, label %48, label %50

58:                                               ; preds = %48, %24
  %59 = phi i64 [ %49, %48 ], [ %14, %24 ]
  store i64 %59, i64* %26, align 8
  %60 = icmp eq i64 %19, 0
  br i1 %60, label %321, label %61

61:                                               ; preds = %58
  %62 = inttoptr i64 %59 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %63

63:                                               ; preds = %61, %22
  %64 = phi i64* [ %26, %61 ], [ %23, %22 ]
  %65 = phi i64 [ %59, %61 ], [ %14, %22 ]
  %66 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %62, %61 ], [ %13, %22 ]
  %67 = phi i64 [ %20, %61 ], [ %2, %22 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 %2
  %69 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %68 to i64
  %70 = sub i64 %65, %69
  %71 = ashr exact i64 %70, 4
  %72 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 %71
  %73 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %72, %13
  br i1 %73, label %74, label %102

74:                                               ; preds = %63
  %75 = sub nsw i64 0, %71
  %76 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %13, i64 %75, i32 0
  %77 = xor i64 %5, -1
  %78 = getelementptr i8, i8* %76, i64 %77
  %79 = ptrtoint i8* %78 to i64
  %80 = lshr i64 %79, 4
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %74, %84
  %85 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %91, %84 ], [ %66, %74 ]
  %86 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %90, %84 ], [ %72, %74 ]
  %87 = phi i64 [ %92, %84 ], [ %82, %74 ]
  %88 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %85, i64 0, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %86, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #12
  %90 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %86, i64 1
  %91 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %85, i64 1
  %92 = add i64 %87, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !390

94:                                               ; preds = %84, %74
  %95 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %66, %74 ], [ %91, %84 ]
  %96 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %72, %74 ], [ %90, %84 ]
  %97 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %74 ], [ %91, %84 ]
  %98 = icmp ult i8* %78, inttoptr (i64 48 to i8*)
  br i1 %98, label %99, label %109

99:                                               ; preds = %109, %94
  %100 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %97, %94 ], [ %121, %109 ]
  %101 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %100 to i64
  br label %102

102:                                              ; preds = %99, %63
  %103 = phi i64 [ %101, %99 ], [ %65, %63 ]
  store i64 %103, i64* %64, align 8
  %104 = icmp eq i64 %70, 0
  br i1 %104, label %123, label %105

105:                                              ; preds = %102
  %106 = sub nsw i64 0, %71
  %107 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %66, i64 %106, i32 0
  %108 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 0, i32 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 %70, i1 false) #12
  br label %123

109:                                              ; preds = %94, %109
  %110 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %121, %109 ], [ %95, %94 ]
  %111 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %120, %109 ], [ %96, %94 ]
  %112 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %110, i64 0, i32 0
  %113 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %111, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 16, i1 false) #12
  %114 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %110, i64 1, i32 0
  %115 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %111, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #12
  %116 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %110, i64 2, i32 0
  %117 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %111, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 16, i1 false) #12
  %118 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %110, i64 3, i32 0
  %119 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %111, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 16, i1 false) #12
  %120 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %111, i64 4
  %121 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %110, i64 4
  %122 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %120, %13
  br i1 %122, label %109, label %99

123:                                              ; preds = %102, %105
  %124 = icmp ugt %"class.v8::internal::compiler::StateValueDescriptor"* %1, %3
  br i1 %124, label %130, label %125

125:                                              ; preds = %123
  %126 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %12, align 8
  %127 = icmp ugt %"class.v8::internal::compiler::StateValueDescriptor"* %126, %3
  %128 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %3, i64 %2
  %129 = select i1 %127, %"class.v8::internal::compiler::StateValueDescriptor"* %128, %"class.v8::internal::compiler::StateValueDescriptor"* %3
  br label %130

130:                                              ; preds = %123, %125
  %131 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %3, %123 ], [ %129, %125 ]
  %132 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %131, i64 0, i32 0
  %133 = add i64 %67, -1
  %134 = and i64 %67, 3
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %130, %136
  %137 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %141, %136 ], [ %1, %130 ]
  %138 = phi i64 [ %142, %136 ], [ %67, %130 ]
  %139 = phi i64 [ %143, %136 ], [ %134, %130 ]
  %140 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %137, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %132, i64 16, i1 false) #12
  %141 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %137, i64 1
  %142 = add i64 %138, -1
  %143 = add i64 %139, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %136, !llvm.loop !391

145:                                              ; preds = %136, %130
  %146 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %1, %130 ], [ %141, %136 ]
  %147 = phi i64 [ %67, %130 ], [ %142, %136 ]
  %148 = icmp ult i64 %133, 3
  br i1 %148, label %321, label %149

149:                                              ; preds = %145, %149
  %150 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %156, %149 ], [ %146, %145 ]
  %151 = phi i64 [ %157, %149 ], [ %147, %145 ]
  %152 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %150, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %132, i64 16, i1 false) #12
  %153 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %150, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %132, i64 16, i1 false) #12
  %154 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %150, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %132, i64 16, i1 false) #12
  %155 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %150, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %132, i64 16, i1 false) #12
  %156 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %150, i64 4
  %157 = add i64 %151, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %321, label %149

159:                                              ; preds = %8
  %160 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %12 to i64*
  %161 = bitcast %"class.std::__1::vector.1279"* %0 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %14, %162
  %164 = ashr exact i64 %163, 4
  %165 = add i64 %164, %2
  %166 = icmp ugt i64 %165, 134217727
  br i1 %166, label %167, label %169

167:                                              ; preds = %159
  %168 = bitcast %"class.std::__1::vector.1279"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %168) #13
  unreachable

169:                                              ; preds = %159
  %170 = sub i64 %11, %162
  %171 = ashr exact i64 %170, 4
  %172 = icmp ult i64 %171, 67108863
  br i1 %172, label %176, label %173

173:                                              ; preds = %169
  %174 = sub i64 %5, %162
  %175 = ashr exact i64 %174, 4
  br label %183

176:                                              ; preds = %169
  %177 = ashr exact i64 %170, 3
  %178 = icmp ult i64 %177, %165
  %179 = select i1 %178, i64 %165, i64 %177
  %180 = sub i64 %5, %162
  %181 = ashr exact i64 %180, 4
  %182 = icmp eq i64 %179, 0
  br i1 %182, label %202, label %183

183:                                              ; preds = %173, %176
  %184 = phi i64 [ %175, %173 ], [ %181, %176 ]
  %185 = phi i64 [ 134217727, %173 ], [ %179, %176 ]
  %186 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %187 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %186, align 8
  %188 = shl i64 %185, 4
  %189 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %187, i64 0, i32 2
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %187, i64 0, i32 3
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %192, %190
  %194 = icmp ugt i64 %188, %193
  br i1 %194, label %195, label %197, !prof !2

195:                                              ; preds = %183
  %196 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %187, i64 %188) #12
  br label %199

197:                                              ; preds = %183
  %198 = add i64 %190, %188
  store i64 %198, i64* %189, align 8
  br label %199

199:                                              ; preds = %197, %195
  %200 = phi i64 [ %196, %195 ], [ %190, %197 ]
  %201 = inttoptr i64 %200 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %202

202:                                              ; preds = %199, %176
  %203 = phi i64 [ %184, %199 ], [ %181, %176 ]
  %204 = phi i64 [ %185, %199 ], [ 0, %176 ]
  %205 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %201, %199 ], [ null, %176 ]
  %206 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %205, i64 %203
  %207 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %205, i64 %204
  %208 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %206, i64 %2
  %209 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %3, i64 0, i32 0
  %210 = shl nsw i64 %2, 4
  %211 = add i64 %210, -16
  %212 = lshr exact i64 %211, 4
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %223, label %216

216:                                              ; preds = %202, %216
  %217 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %220, %216 ], [ %206, %202 ]
  %218 = phi i64 [ %221, %216 ], [ %214, %202 ]
  %219 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %217, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %209, i64 16, i1 false) #12
  %220 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %217, i64 1
  %221 = add i64 %218, -1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %216, !llvm.loop !392

223:                                              ; preds = %216, %202
  %224 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %206, %202 ], [ %220, %216 ]
  %225 = icmp ult i64 %211, 48
  br i1 %225, label %234, label %226

226:                                              ; preds = %223, %226
  %227 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %232, %226 ], [ %224, %223 ]
  %228 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %227, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %209, i64 16, i1 false) #12
  %229 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %227, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %209, i64 16, i1 false) #12
  %230 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %227, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %209, i64 16, i1 false) #12
  %231 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %227, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* align 8 %209, i64 16, i1 false) #12
  %232 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %227, i64 4
  %233 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %208, %232
  br i1 %233, label %234, label %226

234:                                              ; preds = %226, %223
  %235 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %207 to i64
  %236 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %6, align 8
  %237 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %236, %1
  br i1 %237, label %276, label %238

238:                                              ; preds = %234
  %239 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %236 to i64
  %240 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 -1, i32 0
  %241 = ptrtoint i8* %240 to i64
  %242 = sub i64 %241, %239
  %243 = lshr i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %257, label %247

247:                                              ; preds = %238, %247
  %248 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %254, %247 ], [ %206, %238 ]
  %249 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %251, %247 ], [ %1, %238 ]
  %250 = phi i64 [ %255, %247 ], [ %245, %238 ]
  %251 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %249, i64 -1
  %252 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %248, i64 -1, i32 0
  %253 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %251, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #12
  %254 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %248, i64 -1
  %255 = add i64 %250, -1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %247, !llvm.loop !393

257:                                              ; preds = %247, %238
  %258 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %238 ], [ %254, %247 ]
  %259 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %206, %238 ], [ %254, %247 ]
  %260 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %1, %238 ], [ %251, %247 ]
  %261 = icmp ult i64 %242, 48
  br i1 %261, label %276, label %262

262:                                              ; preds = %257, %262
  %263 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %274, %262 ], [ %259, %257 ]
  %264 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %271, %262 ], [ %260, %257 ]
  %265 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %263, i64 -1, i32 0
  %266 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %264, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %266, i64 16, i1 false) #12
  %267 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %263, i64 -2, i32 0
  %268 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %264, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %268, i64 16, i1 false) #12
  %269 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %263, i64 -3, i32 0
  %270 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %264, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %270, i64 16, i1 false) #12
  %271 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %264, i64 -4
  %272 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %263, i64 -4, i32 0
  %273 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %271, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 16, i1 false) #12
  %274 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %263, i64 -4
  %275 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %271, %236
  br i1 %275, label %276, label %262

276:                                              ; preds = %257, %262, %234
  %277 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %206, %234 ], [ %258, %257 ], [ %274, %262 ]
  %278 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %12, align 8
  %279 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %278, %1
  br i1 %279, label %317, label %280

280:                                              ; preds = %276
  %281 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %278, i64 -1, i32 0
  %282 = ptrtoint i8* %281 to i64
  %283 = sub i64 %282, %5
  %284 = lshr i64 %283, 4
  %285 = add nuw nsw i64 %284, 1
  %286 = and i64 %285, 3
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %298, label %288

288:                                              ; preds = %280, %288
  %289 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %295, %288 ], [ %208, %280 ]
  %290 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %294, %288 ], [ %1, %280 ]
  %291 = phi i64 [ %296, %288 ], [ %286, %280 ]
  %292 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %289, i64 0, i32 0
  %293 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %290, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %293, i64 16, i1 false) #12
  %294 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %290, i64 1
  %295 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %289, i64 1
  %296 = add i64 %291, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %288, !llvm.loop !394

298:                                              ; preds = %288, %280
  %299 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %280 ], [ %295, %288 ]
  %300 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %208, %280 ], [ %295, %288 ]
  %301 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %1, %280 ], [ %294, %288 ]
  %302 = icmp ult i64 %283, 48
  br i1 %302, label %317, label %303

303:                                              ; preds = %298, %303
  %304 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %315, %303 ], [ %300, %298 ]
  %305 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %314, %303 ], [ %301, %298 ]
  %306 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %304, i64 0, i32 0
  %307 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %305, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* align 8 %307, i64 16, i1 false) #12
  %308 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %304, i64 1, i32 0
  %309 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %305, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 16, i1 false) #12
  %310 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %304, i64 2, i32 0
  %311 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %305, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 16, i1 false) #12
  %312 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %304, i64 3, i32 0
  %313 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %305, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %312, i8* align 8 %313, i64 16, i1 false) #12
  %314 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %305, i64 4
  %315 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %304, i64 4
  %316 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %314, %278
  br i1 %316, label %317, label %303

317:                                              ; preds = %298, %303, %276
  %318 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %208, %276 ], [ %299, %298 ], [ %315, %303 ]
  %319 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %277 to i64
  %320 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %318 to i64
  store i64 %319, i64* %161, align 8
  store i64 %320, i64* %160, align 8
  store i64 %235, i64* %10, align 8
  ret %"class.v8::internal::compiler::StateValueDescriptor"* %206

321:                                              ; preds = %145, %149, %58, %4
  ret %"class.v8::internal::compiler::StateValueDescriptor"* %1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::InstructionOperand"* @_ZNSt3__16vectorIN2v88internal8compiler18InstructionOperandENS2_13ZoneAllocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1241"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %2 to i8*
  %6 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %1 to i8*
  %7 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1 to i64
  %8 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %872

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %18, align 8
  %20 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %18 to i64*
  br i1 %23, label %345, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %200

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %27
  %31 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %30, %3
  br i1 %31, label %195, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 %33, i32 0
  %35 = ptrtoint i64* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 %41, i32 0
  %43 = ptrtoint i64* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %49
  %51 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %19, %50
  %52 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %55
  %57 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 %66
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %66, i32 0
  %70 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %68 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !395
  %72 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %68, i64 2
  %73 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !395
  %75 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !398, !noalias !395
  %76 = getelementptr i64, i64* %69, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !398, !noalias !395
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 %78
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %78, i32 0
  %81 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %79 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !395
  %83 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %79, i64 2
  %84 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !395
  %86 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !398, !noalias !395
  %87 = getelementptr i64, i64* %80, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !398, !noalias !395
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 %89
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %89, i32 0
  %92 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %90 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !395
  %94 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %90, i64 2
  %95 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !395
  %97 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !398, !noalias !395
  %98 = getelementptr i64, i64* %91, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !398, !noalias !395
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 %100
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %100, i32 0
  %103 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %101 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !395
  %105 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %101, i64 2
  %106 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !395
  %108 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !398, !noalias !395
  %109 = getelementptr i64, i64* %102, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !398, !noalias !395
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !400

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %30, i64 %118
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %118, i32 0
  %122 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %120 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !395
  %124 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %120, i64 2
  %125 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !395
  %127 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !398, !noalias !395
  %128 = getelementptr i64, i64* %121, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !398, !noalias !395
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !401

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %192, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %137 to i64
  %139 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 -1, i32 0
  %140 = ptrtoint i64* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 0, i32 0
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 0, i32 0
  %152 = load i64, i64* %150, align 8
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %148, i64 1
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !402

157:                                              ; preds = %146, %135
  %158 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %192, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %190, %162 ], [ %159, %157 ]
  %164 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %189, %162 ], [ %160, %157 ]
  %165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 0, i32 0
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 0, i32 0
  %167 = load i64, i64* %165, align 8
  store i64 %167, i64* %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 1, i32 0
  %169 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 1, i32 0
  %170 = load i64, i64* %168, align 8
  store i64 %170, i64* %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 2, i32 0
  %172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 2, i32 0
  %173 = load i64, i64* %171, align 8
  store i64 %173, i64* %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 3, i32 0
  %175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 3, i32 0
  %176 = load i64, i64* %174, align 8
  store i64 %176, i64* %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 4, i32 0
  %178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 4, i32 0
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 5, i32 0
  %181 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 5, i32 0
  %182 = load i64, i64* %180, align 8
  store i64 %182, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 6, i32 0
  %184 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 6, i32 0
  %185 = load i64, i64* %183, align 8
  store i64 %185, i64* %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 7, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 7, i32 0
  %188 = load i64, i64* %186, align 8
  store i64 %188, i64* %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %164, i64 8
  %190 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %163, i64 8
  %191 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %189, %3
  br i1 %191, label %192, label %162, !llvm.loop !403

192:                                              ; preds = %157, %162, %133
  %193 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %56, %133 ], [ %158, %157 ], [ %190, %162 ]
  %194 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %193 to i64
  br label %195

195:                                              ; preds = %192, %29
  %196 = phi i64 [ %20, %29 ], [ %194, %192 ]
  store i64 %196, i64* %24, align 8
  %197 = icmp sgt i64 %26, 0
  br i1 %197, label %198, label %872

198:                                              ; preds = %195
  %199 = inttoptr i64 %196 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %200

200:                                              ; preds = %198, %25
  %201 = phi i64 [ %196, %198 ], [ %20, %25 ]
  %202 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %199, %198 ], [ %19, %25 ]
  %203 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %30, %198 ], [ %3, %25 ]
  %204 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %12
  %205 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %204 to i64
  %206 = sub i64 %201, %205
  %207 = ashr exact i64 %206, 3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %207
  %209 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %208, %19
  br i1 %209, label %210, label %323

210:                                              ; preds = %200
  %211 = sub nsw i64 0, %207
  %212 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %211, i32 0
  %213 = bitcast i64* %212 to i8*
  %214 = xor i64 %7, -1
  %215 = getelementptr i8, i8* %213, i64 %214
  %216 = ptrtoint i8* %215 to i64
  %217 = lshr i64 %216, 3
  %218 = add nuw nsw i64 %217, 1
  %219 = icmp ult i64 %218, 4
  br i1 %219, label %220, label %223

220:                                              ; preds = %318, %223, %210
  %221 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %202, %223 ], [ %202, %210 ], [ %241, %318 ]
  %222 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %208, %223 ], [ %208, %210 ], [ %242, %318 ]
  br label %331

223:                                              ; preds = %210
  %224 = sub nsw i64 0, %207
  %225 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %19, i64 %224, i32 0
  %226 = bitcast i64* %225 to i8*
  %227 = xor i64 %7, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %231
  %233 = add nsw i64 %207, %230
  %234 = add nsw i64 %233, 1
  %235 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %234
  %236 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %202, %235
  %237 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %208, %232
  %238 = and i1 %236, %237
  br i1 %238, label %220, label %239

239:                                              ; preds = %223
  %240 = and i64 %218, 4611686018427387900
  %241 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %240
  %242 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %208, i64 %240
  %243 = add nsw i64 %240, -4
  %244 = lshr exact i64 %243, 2
  %245 = add nuw nsw i64 %244, 1
  %246 = and i64 %245, 3
  %247 = icmp ult i64 %243, 12
  br i1 %247, label %299, label %248

248:                                              ; preds = %239
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 0, %248 ], [ %296, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %297, %250 ]
  %253 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %208, i64 %251
  %254 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %251, i32 0
  %255 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %253 to <2 x i64>*
  %256 = load <2 x i64>, <2 x i64>* %255, align 8, !alias.scope !404
  %257 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %253, i64 2
  %258 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %257 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !alias.scope !404
  %260 = bitcast i64* %254 to <2 x i64>*
  store <2 x i64> %256, <2 x i64>* %260, align 8, !alias.scope !407, !noalias !404
  %261 = getelementptr i64, i64* %254, i64 2
  %262 = bitcast i64* %261 to <2 x i64>*
  store <2 x i64> %259, <2 x i64>* %262, align 8, !alias.scope !407, !noalias !404
  %263 = or i64 %251, 4
  %264 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %208, i64 %263
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %263, i32 0
  %266 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %264 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !404
  %268 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %264, i64 2
  %269 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !404
  %271 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %271, align 8, !alias.scope !407, !noalias !404
  %272 = getelementptr i64, i64* %265, i64 2
  %273 = bitcast i64* %272 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %273, align 8, !alias.scope !407, !noalias !404
  %274 = or i64 %251, 8
  %275 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %208, i64 %274
  %276 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %274, i32 0
  %277 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %275 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8, !alias.scope !404
  %279 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %275, i64 2
  %280 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !404
  %282 = bitcast i64* %276 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %282, align 8, !alias.scope !407, !noalias !404
  %283 = getelementptr i64, i64* %276, i64 2
  %284 = bitcast i64* %283 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %284, align 8, !alias.scope !407, !noalias !404
  %285 = or i64 %251, 12
  %286 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %208, i64 %285
  %287 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %285, i32 0
  %288 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %286 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !alias.scope !404
  %290 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %286, i64 2
  %291 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !404
  %293 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %293, align 8, !alias.scope !407, !noalias !404
  %294 = getelementptr i64, i64* %287, i64 2
  %295 = bitcast i64* %294 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %295, align 8, !alias.scope !407, !noalias !404
  %296 = add i64 %251, 16
  %297 = add i64 %252, -4
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %250, !llvm.loop !409

299:                                              ; preds = %250, %239
  %300 = phi i64 [ 0, %239 ], [ %296, %250 ]
  %301 = icmp eq i64 %246, 0
  br i1 %301, label %318, label %302

302:                                              ; preds = %299, %302
  %303 = phi i64 [ %315, %302 ], [ %300, %299 ]
  %304 = phi i64 [ %316, %302 ], [ %246, %299 ]
  %305 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %208, i64 %303
  %306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %303, i32 0
  %307 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %305 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !404
  %309 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %305, i64 2
  %310 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %309 to <2 x i64>*
  %311 = load <2 x i64>, <2 x i64>* %310, align 8, !alias.scope !404
  %312 = bitcast i64* %306 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %312, align 8, !alias.scope !407, !noalias !404
  %313 = getelementptr i64, i64* %306, i64 2
  %314 = bitcast i64* %313 to <2 x i64>*
  store <2 x i64> %311, <2 x i64>* %314, align 8, !alias.scope !407, !noalias !404
  %315 = add i64 %303, 4
  %316 = add i64 %304, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %302, !llvm.loop !410

318:                                              ; preds = %302, %299
  %319 = icmp eq i64 %218, %240
  br i1 %319, label %320, label %220

320:                                              ; preds = %331, %318
  %321 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %241, %318 ], [ %338, %331 ]
  %322 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %321 to i64
  br label %323

323:                                              ; preds = %320, %200
  %324 = phi i64 [ %322, %320 ], [ %201, %200 ]
  store i64 %324, i64* %24, align 8
  %325 = icmp eq i64 %206, 0
  br i1 %325, label %340, label %326

326:                                              ; preds = %323
  %327 = sub nsw i64 0, %207
  %328 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 %327
  %329 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %328 to i8*
  %330 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %329, i8* align 8 %330, i64 %206, i1 false) #12
  br label %340

331:                                              ; preds = %220, %331
  %332 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %338, %331 ], [ %221, %220 ]
  %333 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %337, %331 ], [ %222, %220 ]
  %334 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %333, i64 0, i32 0
  %335 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %332, i64 0, i32 0
  %336 = load i64, i64* %334, align 8
  store i64 %336, i64* %335, align 8
  %337 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %333, i64 1
  %338 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %332, i64 1
  %339 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %337, %19
  br i1 %339, label %331, label %320, !llvm.loop !411

340:                                              ; preds = %323, %326
  %341 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %203 to i64
  %342 = sub i64 %341, %8
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %872, label %344

344:                                              ; preds = %340
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %342, i1 false) #12
  br label %872

345:                                              ; preds = %14
  %346 = bitcast %"class.std::__1::vector.1241"* %0 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = sub i64 %20, %347
  %349 = ashr exact i64 %348, 3
  %350 = add nsw i64 %349, %12
  %351 = icmp ugt i64 %350, 268435455
  br i1 %351, label %352, label %354

352:                                              ; preds = %345
  %353 = bitcast %"class.std::__1::vector.1241"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %353) #13
  unreachable

354:                                              ; preds = %345
  %355 = sub i64 %17, %347
  %356 = ashr exact i64 %355, 3
  %357 = icmp ult i64 %356, 134217727
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = sub i64 %7, %347
  %360 = ashr exact i64 %359, 3
  br label %368

361:                                              ; preds = %354
  %362 = ashr exact i64 %355, 2
  %363 = icmp ult i64 %362, %350
  %364 = select i1 %363, i64 %350, i64 %362
  %365 = sub i64 %7, %347
  %366 = ashr exact i64 %365, 3
  %367 = icmp eq i64 %364, 0
  br i1 %367, label %387, label %368

368:                                              ; preds = %358, %361
  %369 = phi i64 [ %360, %358 ], [ %366, %361 ]
  %370 = phi i64 [ 268435455, %358 ], [ %364, %361 ]
  %371 = getelementptr inbounds %"class.std::__1::vector.1241", %"class.std::__1::vector.1241"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %372 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %371, align 8
  %373 = shl i64 %370, 3
  %374 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %372, i64 0, i32 2
  %375 = load i64, i64* %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %372, i64 0, i32 3
  %377 = load i64, i64* %376, align 8
  %378 = sub i64 %377, %375
  %379 = icmp ugt i64 %373, %378
  br i1 %379, label %380, label %382, !prof !2

380:                                              ; preds = %368
  %381 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %372, i64 %373) #12
  br label %384

382:                                              ; preds = %368
  %383 = add i64 %375, %373
  store i64 %383, i64* %374, align 8
  br label %384

384:                                              ; preds = %382, %380
  %385 = phi i64 [ %381, %380 ], [ %375, %382 ]
  %386 = inttoptr i64 %385 to %"class.v8::internal::compiler::InstructionOperand"*
  br label %387

387:                                              ; preds = %384, %361
  %388 = phi i64 [ %369, %384 ], [ %366, %361 ]
  %389 = phi i64 [ %370, %384 ], [ 0, %361 ]
  %390 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %386, %384 ], [ null, %361 ]
  %391 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %390, i64 %388
  %392 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %390, i64 %389
  %393 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %392 to i64
  %394 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %12
  %395 = add i64 %11, -8
  %396 = lshr i64 %395, 3
  %397 = add nuw nsw i64 %396, 1
  %398 = icmp ult i64 %397, 4
  br i1 %398, label %491, label %399

399:                                              ; preds = %387
  %400 = add i64 %11, -8
  %401 = lshr i64 %400, 3
  %402 = add nsw i64 %388, %401
  %403 = add nsw i64 %402, 1
  %404 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %390, i64 %403
  %405 = add nuw nsw i64 %401, 1
  %406 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %405
  %407 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %391, %406
  %408 = icmp ugt %"class.v8::internal::compiler::InstructionOperand"* %404, %2
  %409 = and i1 %407, %408
  br i1 %409, label %491, label %410

410:                                              ; preds = %399
  %411 = and i64 %397, 4611686018427387900
  %412 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %411
  %413 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %411
  %414 = add nsw i64 %411, -4
  %415 = lshr exact i64 %414, 2
  %416 = add nuw nsw i64 %415, 1
  %417 = and i64 %416, 3
  %418 = icmp ult i64 %414, 12
  br i1 %418, label %470, label %419

419:                                              ; preds = %410
  %420 = sub nsw i64 %416, %417
  br label %421

421:                                              ; preds = %421, %419
  %422 = phi i64 [ 0, %419 ], [ %467, %421 ]
  %423 = phi i64 [ %420, %419 ], [ %468, %421 ]
  %424 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %422
  %425 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %422, i32 0
  %426 = bitcast i64* %425 to <2 x i64>*
  %427 = load <2 x i64>, <2 x i64>* %426, align 8, !alias.scope !412
  %428 = getelementptr i64, i64* %425, i64 2
  %429 = bitcast i64* %428 to <2 x i64>*
  %430 = load <2 x i64>, <2 x i64>* %429, align 8, !alias.scope !412
  %431 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %424 to <2 x i64>*
  store <2 x i64> %427, <2 x i64>* %431, align 8, !alias.scope !415, !noalias !412
  %432 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %424, i64 2
  %433 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %432 to <2 x i64>*
  store <2 x i64> %430, <2 x i64>* %433, align 8, !alias.scope !415, !noalias !412
  %434 = or i64 %422, 4
  %435 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %434
  %436 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %434, i32 0
  %437 = bitcast i64* %436 to <2 x i64>*
  %438 = load <2 x i64>, <2 x i64>* %437, align 8, !alias.scope !412
  %439 = getelementptr i64, i64* %436, i64 2
  %440 = bitcast i64* %439 to <2 x i64>*
  %441 = load <2 x i64>, <2 x i64>* %440, align 8, !alias.scope !412
  %442 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %435 to <2 x i64>*
  store <2 x i64> %438, <2 x i64>* %442, align 8, !alias.scope !415, !noalias !412
  %443 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %435, i64 2
  %444 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %443 to <2 x i64>*
  store <2 x i64> %441, <2 x i64>* %444, align 8, !alias.scope !415, !noalias !412
  %445 = or i64 %422, 8
  %446 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %445
  %447 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %445, i32 0
  %448 = bitcast i64* %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !412
  %450 = getelementptr i64, i64* %447, i64 2
  %451 = bitcast i64* %450 to <2 x i64>*
  %452 = load <2 x i64>, <2 x i64>* %451, align 8, !alias.scope !412
  %453 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %446 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %453, align 8, !alias.scope !415, !noalias !412
  %454 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %446, i64 2
  %455 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %454 to <2 x i64>*
  store <2 x i64> %452, <2 x i64>* %455, align 8, !alias.scope !415, !noalias !412
  %456 = or i64 %422, 12
  %457 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %456
  %458 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %456, i32 0
  %459 = bitcast i64* %458 to <2 x i64>*
  %460 = load <2 x i64>, <2 x i64>* %459, align 8, !alias.scope !412
  %461 = getelementptr i64, i64* %458, i64 2
  %462 = bitcast i64* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 8, !alias.scope !412
  %464 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %457 to <2 x i64>*
  store <2 x i64> %460, <2 x i64>* %464, align 8, !alias.scope !415, !noalias !412
  %465 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %457, i64 2
  %466 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %465 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %466, align 8, !alias.scope !415, !noalias !412
  %467 = add i64 %422, 16
  %468 = add i64 %423, -4
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %421, !llvm.loop !417

470:                                              ; preds = %421, %410
  %471 = phi i64 [ 0, %410 ], [ %467, %421 ]
  %472 = icmp eq i64 %417, 0
  br i1 %472, label %489, label %473

473:                                              ; preds = %470, %473
  %474 = phi i64 [ %486, %473 ], [ %471, %470 ]
  %475 = phi i64 [ %487, %473 ], [ %417, %470 ]
  %476 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %474
  %477 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 %474, i32 0
  %478 = bitcast i64* %477 to <2 x i64>*
  %479 = load <2 x i64>, <2 x i64>* %478, align 8, !alias.scope !412
  %480 = getelementptr i64, i64* %477, i64 2
  %481 = bitcast i64* %480 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8, !alias.scope !412
  %483 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %476 to <2 x i64>*
  store <2 x i64> %479, <2 x i64>* %483, align 8, !alias.scope !415, !noalias !412
  %484 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %476, i64 2
  %485 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %484 to <2 x i64>*
  store <2 x i64> %482, <2 x i64>* %485, align 8, !alias.scope !415, !noalias !412
  %486 = add i64 %474, 4
  %487 = add i64 %475, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %473, !llvm.loop !418

489:                                              ; preds = %473, %470
  %490 = icmp eq i64 %397, %411
  br i1 %490, label %549, label %491

491:                                              ; preds = %489, %399, %387
  %492 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %391, %399 ], [ %391, %387 ], [ %412, %489 ]
  %493 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %2, %399 ], [ %2, %387 ], [ %413, %489 ]
  %494 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %492 to i64
  %495 = add nsw i64 %388, %12
  %496 = add nsw i64 %495, -1
  %497 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %390, i64 %496, i32 0
  %498 = ptrtoint i64* %497 to i64
  %499 = sub i64 %498, %494
  %500 = lshr i64 %499, 3
  %501 = add nuw nsw i64 %500, 1
  %502 = and i64 %501, 7
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %515, label %504

504:                                              ; preds = %491, %504
  %505 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %511, %504 ], [ %492, %491 ]
  %506 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %512, %504 ], [ %493, %491 ]
  %507 = phi i64 [ %513, %504 ], [ %502, %491 ]
  %508 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %506, i64 0, i32 0
  %509 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %505, i64 0, i32 0
  %510 = load i64, i64* %508, align 8
  store i64 %510, i64* %509, align 8
  %511 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %505, i64 1
  %512 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %506, i64 1
  %513 = add i64 %507, -1
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %504, !llvm.loop !419

515:                                              ; preds = %504, %491
  %516 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %492, %491 ], [ %511, %504 ]
  %517 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %493, %491 ], [ %512, %504 ]
  %518 = icmp ult i64 %499, 56
  br i1 %518, label %549, label %519

519:                                              ; preds = %515, %519
  %520 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %546, %519 ], [ %516, %515 ]
  %521 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %547, %519 ], [ %517, %515 ]
  %522 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 0, i32 0
  %523 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 0, i32 0
  %524 = load i64, i64* %522, align 8
  store i64 %524, i64* %523, align 8
  %525 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 1, i32 0
  %526 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 1, i32 0
  %527 = load i64, i64* %525, align 8
  store i64 %527, i64* %526, align 8
  %528 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 2, i32 0
  %529 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 2, i32 0
  %530 = load i64, i64* %528, align 8
  store i64 %530, i64* %529, align 8
  %531 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 3, i32 0
  %532 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 3, i32 0
  %533 = load i64, i64* %531, align 8
  store i64 %533, i64* %532, align 8
  %534 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 4, i32 0
  %535 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 4, i32 0
  %536 = load i64, i64* %534, align 8
  store i64 %536, i64* %535, align 8
  %537 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 5, i32 0
  %538 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 5, i32 0
  %539 = load i64, i64* %537, align 8
  store i64 %539, i64* %538, align 8
  %540 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 6, i32 0
  %541 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 6, i32 0
  %542 = load i64, i64* %540, align 8
  store i64 %542, i64* %541, align 8
  %543 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 7, i32 0
  %544 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 7, i32 0
  %545 = load i64, i64* %543, align 8
  store i64 %545, i64* %544, align 8
  %546 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 8
  %547 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %521, i64 8
  %548 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %394, %546
  br i1 %548, label %549, label %519, !llvm.loop !420

549:                                              ; preds = %515, %519, %489
  %550 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  %551 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %550 to i64
  %552 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %550, %1
  br i1 %552, label %705, label %553

553:                                              ; preds = %549
  %554 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 -1, i32 0
  %555 = ptrtoint i64* %554 to i64
  %556 = sub i64 %555, %551
  %557 = lshr i64 %556, 3
  %558 = add nuw nsw i64 %557, 1
  %559 = icmp ult i64 %558, 4
  br i1 %559, label %649, label %560

560:                                              ; preds = %553
  %561 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 -1, i32 0
  %562 = ptrtoint i64* %561 to i64
  %563 = sub i64 %562, %551
  %564 = lshr i64 %563, 3
  %565 = xor i64 %564, -1
  %566 = add nsw i64 %388, %565
  %567 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %390, i64 %566
  %568 = xor i64 %564, -1
  %569 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %568
  %570 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %567, %1
  %571 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %569, %391
  %572 = and i1 %570, %571
  br i1 %572, label %649, label %573

573:                                              ; preds = %560
  %574 = and i64 %558, 4611686018427387900
  %575 = sub nsw i64 0, %574
  %576 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %575
  %577 = sub nsw i64 0, %574
  %578 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %577
  %579 = add nsw i64 %574, -4
  %580 = lshr exact i64 %579, 2
  %581 = add nuw nsw i64 %580, 1
  %582 = and i64 %581, 1
  %583 = icmp eq i64 %579, 0
  br i1 %583, label %626, label %584

584:                                              ; preds = %573
  %585 = sub nuw nsw i64 %581, %582
  %586 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 -1
  %587 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 -1
  br label %588

588:                                              ; preds = %588, %584
  %589 = phi i64 [ 0, %584 ], [ %623, %588 ]
  %590 = phi i64 [ %585, %584 ], [ %624, %588 ]
  %591 = sub i64 0, %589
  %592 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %591
  %593 = sub i64 0, %589
  %594 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %586, i64 %593
  %595 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %594, i64 0, i32 0
  %596 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %592, i64 -1, i32 0
  %597 = getelementptr inbounds i64, i64* %595, i64 -1
  %598 = bitcast i64* %597 to <2 x i64>*
  %599 = load <2 x i64>, <2 x i64>* %598, align 8, !alias.scope !421
  %600 = getelementptr inbounds i64, i64* %595, i64 -3
  %601 = bitcast i64* %600 to <2 x i64>*
  %602 = load <2 x i64>, <2 x i64>* %601, align 8, !alias.scope !421
  %603 = getelementptr inbounds i64, i64* %596, i64 -1
  %604 = bitcast i64* %603 to <2 x i64>*
  store <2 x i64> %599, <2 x i64>* %604, align 8, !alias.scope !424, !noalias !421
  %605 = getelementptr inbounds i64, i64* %596, i64 -3
  %606 = bitcast i64* %605 to <2 x i64>*
  store <2 x i64> %602, <2 x i64>* %606, align 8, !alias.scope !424, !noalias !421
  %607 = sub nuw nsw i64 -4, %589
  %608 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %607
  %609 = sub nuw nsw i64 -4, %589
  %610 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %587, i64 %609
  %611 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %610, i64 0, i32 0
  %612 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %608, i64 -1, i32 0
  %613 = getelementptr inbounds i64, i64* %611, i64 -1
  %614 = bitcast i64* %613 to <2 x i64>*
  %615 = load <2 x i64>, <2 x i64>* %614, align 8, !alias.scope !421
  %616 = getelementptr inbounds i64, i64* %611, i64 -3
  %617 = bitcast i64* %616 to <2 x i64>*
  %618 = load <2 x i64>, <2 x i64>* %617, align 8, !alias.scope !421
  %619 = getelementptr inbounds i64, i64* %612, i64 -1
  %620 = bitcast i64* %619 to <2 x i64>*
  store <2 x i64> %615, <2 x i64>* %620, align 8, !alias.scope !424, !noalias !421
  %621 = getelementptr inbounds i64, i64* %612, i64 -3
  %622 = bitcast i64* %621 to <2 x i64>*
  store <2 x i64> %618, <2 x i64>* %622, align 8, !alias.scope !424, !noalias !421
  %623 = add i64 %589, 8
  %624 = add i64 %590, -2
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %626, label %588, !llvm.loop !426

626:                                              ; preds = %588, %573
  %627 = phi i64 [ 0, %573 ], [ %623, %588 ]
  %628 = icmp eq i64 %582, 0
  br i1 %628, label %647, label %629

629:                                              ; preds = %626
  %630 = sub i64 0, %627
  %631 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %391, i64 %630
  %632 = sub i64 0, %627
  %633 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 -1
  %634 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %633, i64 %632
  %635 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %634, i64 0, i32 0
  %636 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %631, i64 -1, i32 0
  %637 = getelementptr inbounds i64, i64* %635, i64 -1
  %638 = bitcast i64* %637 to <2 x i64>*
  %639 = load <2 x i64>, <2 x i64>* %638, align 8, !alias.scope !421
  %640 = getelementptr inbounds i64, i64* %635, i64 -3
  %641 = bitcast i64* %640 to <2 x i64>*
  %642 = load <2 x i64>, <2 x i64>* %641, align 8, !alias.scope !421
  %643 = getelementptr inbounds i64, i64* %636, i64 -1
  %644 = bitcast i64* %643 to <2 x i64>*
  store <2 x i64> %639, <2 x i64>* %644, align 8, !alias.scope !424, !noalias !421
  %645 = getelementptr inbounds i64, i64* %636, i64 -3
  %646 = bitcast i64* %645 to <2 x i64>*
  store <2 x i64> %642, <2 x i64>* %646, align 8, !alias.scope !424, !noalias !421
  br label %647

647:                                              ; preds = %626, %629
  %648 = icmp eq i64 %558, %574
  br i1 %648, label %705, label %649

649:                                              ; preds = %647, %560, %553
  %650 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %391, %560 ], [ %391, %553 ], [ %576, %647 ]
  %651 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1, %560 ], [ %1, %553 ], [ %578, %647 ]
  %652 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %651, i64 -1, i32 0
  %653 = ptrtoint i64* %652 to i64
  %654 = sub i64 %653, %551
  %655 = lshr i64 %654, 3
  %656 = add nuw nsw i64 %655, 1
  %657 = and i64 %656, 7
  %658 = icmp eq i64 %657, 0
  br i1 %658, label %670, label %659

659:                                              ; preds = %649, %659
  %660 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %667, %659 ], [ %650, %649 ]
  %661 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %663, %659 ], [ %651, %649 ]
  %662 = phi i64 [ %668, %659 ], [ %657, %649 ]
  %663 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %661, i64 -1
  %664 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %663, i64 0, i32 0
  %665 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %660, i64 -1, i32 0
  %666 = load i64, i64* %664, align 8
  store i64 %666, i64* %665, align 8
  %667 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %660, i64 -1
  %668 = add i64 %662, -1
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %670, label %659, !llvm.loop !427

670:                                              ; preds = %659, %649
  %671 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %649 ], [ %667, %659 ]
  %672 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %650, %649 ], [ %667, %659 ]
  %673 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %651, %649 ], [ %663, %659 ]
  %674 = icmp ult i64 %654, 56
  br i1 %674, label %705, label %675

675:                                              ; preds = %670, %675
  %676 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %703, %675 ], [ %672, %670 ]
  %677 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %699, %675 ], [ %673, %670 ]
  %678 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -1, i32 0
  %679 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -1, i32 0
  %680 = load i64, i64* %678, align 8
  store i64 %680, i64* %679, align 8
  %681 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -2, i32 0
  %682 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -2, i32 0
  %683 = load i64, i64* %681, align 8
  store i64 %683, i64* %682, align 8
  %684 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -3, i32 0
  %685 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -3, i32 0
  %686 = load i64, i64* %684, align 8
  store i64 %686, i64* %685, align 8
  %687 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -4, i32 0
  %688 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -4, i32 0
  %689 = load i64, i64* %687, align 8
  store i64 %689, i64* %688, align 8
  %690 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -5, i32 0
  %691 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -5, i32 0
  %692 = load i64, i64* %690, align 8
  store i64 %692, i64* %691, align 8
  %693 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -6, i32 0
  %694 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -6, i32 0
  %695 = load i64, i64* %693, align 8
  store i64 %695, i64* %694, align 8
  %696 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -7, i32 0
  %697 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -7, i32 0
  %698 = load i64, i64* %696, align 8
  store i64 %698, i64* %697, align 8
  %699 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %677, i64 -8
  %700 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %699, i64 0, i32 0
  %701 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -8, i32 0
  %702 = load i64, i64* %700, align 8
  store i64 %702, i64* %701, align 8
  %703 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %676, i64 -8
  %704 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %699, %550
  br i1 %704, label %705, label %675, !llvm.loop !428

705:                                              ; preds = %670, %675, %647, %549
  %706 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %391, %549 ], [ %576, %647 ], [ %671, %670 ], [ %703, %675 ]
  %707 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %18, align 8
  %708 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %707, %1
  br i1 %708, label %868, label %709

709:                                              ; preds = %705
  %710 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %707, i64 -1, i32 0
  %711 = ptrtoint i64* %710 to i64
  %712 = sub i64 %711, %7
  %713 = lshr i64 %712, 3
  %714 = add nuw nsw i64 %713, 1
  %715 = icmp ult i64 %714, 4
  br i1 %715, label %811, label %716

716:                                              ; preds = %709
  %717 = add nsw i64 %388, %12
  %718 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %707, i64 -1, i32 0
  %719 = ptrtoint i64* %718 to i64
  %720 = sub i64 %719, %7
  %721 = lshr i64 %720, 3
  %722 = add nsw i64 %717, %721
  %723 = add nsw i64 %722, 1
  %724 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %390, i64 %723
  %725 = add nuw nsw i64 %721, 1
  %726 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %725
  %727 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %394, %726
  %728 = icmp ugt %"class.v8::internal::compiler::InstructionOperand"* %724, %1
  %729 = and i1 %727, %728
  br i1 %729, label %811, label %730

730:                                              ; preds = %716
  %731 = and i64 %714, 4611686018427387900
  %732 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %394, i64 %731
  %733 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %731
  %734 = add nsw i64 %731, -4
  %735 = lshr exact i64 %734, 2
  %736 = add nuw nsw i64 %735, 1
  %737 = and i64 %736, 3
  %738 = icmp ult i64 %734, 12
  br i1 %738, label %790, label %739

739:                                              ; preds = %730
  %740 = sub nsw i64 %736, %737
  br label %741

741:                                              ; preds = %741, %739
  %742 = phi i64 [ 0, %739 ], [ %787, %741 ]
  %743 = phi i64 [ %740, %739 ], [ %788, %741 ]
  %744 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %394, i64 %742
  %745 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %742, i32 0
  %746 = bitcast i64* %745 to <2 x i64>*
  %747 = load <2 x i64>, <2 x i64>* %746, align 8, !alias.scope !429
  %748 = getelementptr i64, i64* %745, i64 2
  %749 = bitcast i64* %748 to <2 x i64>*
  %750 = load <2 x i64>, <2 x i64>* %749, align 8, !alias.scope !429
  %751 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %744 to <2 x i64>*
  store <2 x i64> %747, <2 x i64>* %751, align 8, !alias.scope !432, !noalias !429
  %752 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %744, i64 2
  %753 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %752 to <2 x i64>*
  store <2 x i64> %750, <2 x i64>* %753, align 8, !alias.scope !432, !noalias !429
  %754 = or i64 %742, 4
  %755 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %394, i64 %754
  %756 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %754, i32 0
  %757 = bitcast i64* %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !429
  %759 = getelementptr i64, i64* %756, i64 2
  %760 = bitcast i64* %759 to <2 x i64>*
  %761 = load <2 x i64>, <2 x i64>* %760, align 8, !alias.scope !429
  %762 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %755 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %762, align 8, !alias.scope !432, !noalias !429
  %763 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %755, i64 2
  %764 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %763 to <2 x i64>*
  store <2 x i64> %761, <2 x i64>* %764, align 8, !alias.scope !432, !noalias !429
  %765 = or i64 %742, 8
  %766 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %394, i64 %765
  %767 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %765, i32 0
  %768 = bitcast i64* %767 to <2 x i64>*
  %769 = load <2 x i64>, <2 x i64>* %768, align 8, !alias.scope !429
  %770 = getelementptr i64, i64* %767, i64 2
  %771 = bitcast i64* %770 to <2 x i64>*
  %772 = load <2 x i64>, <2 x i64>* %771, align 8, !alias.scope !429
  %773 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %766 to <2 x i64>*
  store <2 x i64> %769, <2 x i64>* %773, align 8, !alias.scope !432, !noalias !429
  %774 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %766, i64 2
  %775 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %774 to <2 x i64>*
  store <2 x i64> %772, <2 x i64>* %775, align 8, !alias.scope !432, !noalias !429
  %776 = or i64 %742, 12
  %777 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %394, i64 %776
  %778 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %776, i32 0
  %779 = bitcast i64* %778 to <2 x i64>*
  %780 = load <2 x i64>, <2 x i64>* %779, align 8, !alias.scope !429
  %781 = getelementptr i64, i64* %778, i64 2
  %782 = bitcast i64* %781 to <2 x i64>*
  %783 = load <2 x i64>, <2 x i64>* %782, align 8, !alias.scope !429
  %784 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %777 to <2 x i64>*
  store <2 x i64> %780, <2 x i64>* %784, align 8, !alias.scope !432, !noalias !429
  %785 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %777, i64 2
  %786 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %785 to <2 x i64>*
  store <2 x i64> %783, <2 x i64>* %786, align 8, !alias.scope !432, !noalias !429
  %787 = add i64 %742, 16
  %788 = add i64 %743, -4
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %741, !llvm.loop !434

790:                                              ; preds = %741, %730
  %791 = phi i64 [ 0, %730 ], [ %787, %741 ]
  %792 = icmp eq i64 %737, 0
  br i1 %792, label %809, label %793

793:                                              ; preds = %790, %793
  %794 = phi i64 [ %806, %793 ], [ %791, %790 ]
  %795 = phi i64 [ %807, %793 ], [ %737, %790 ]
  %796 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %394, i64 %794
  %797 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 %794, i32 0
  %798 = bitcast i64* %797 to <2 x i64>*
  %799 = load <2 x i64>, <2 x i64>* %798, align 8, !alias.scope !429
  %800 = getelementptr i64, i64* %797, i64 2
  %801 = bitcast i64* %800 to <2 x i64>*
  %802 = load <2 x i64>, <2 x i64>* %801, align 8, !alias.scope !429
  %803 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %796 to <2 x i64>*
  store <2 x i64> %799, <2 x i64>* %803, align 8, !alias.scope !432, !noalias !429
  %804 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %796, i64 2
  %805 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %804 to <2 x i64>*
  store <2 x i64> %802, <2 x i64>* %805, align 8, !alias.scope !432, !noalias !429
  %806 = add i64 %794, 4
  %807 = add i64 %795, -1
  %808 = icmp eq i64 %807, 0
  br i1 %808, label %809, label %793, !llvm.loop !435

809:                                              ; preds = %793, %790
  %810 = icmp eq i64 %714, %731
  br i1 %810, label %868, label %811

811:                                              ; preds = %809, %716, %709
  %812 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %394, %716 ], [ %394, %709 ], [ %732, %809 ]
  %813 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %1, %716 ], [ %1, %709 ], [ %733, %809 ]
  %814 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %813 to i64
  %815 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %707, i64 -1, i32 0
  %816 = ptrtoint i64* %815 to i64
  %817 = sub i64 %816, %814
  %818 = lshr i64 %817, 3
  %819 = add nuw nsw i64 %818, 1
  %820 = and i64 %819, 7
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %833, label %822

822:                                              ; preds = %811, %822
  %823 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %830, %822 ], [ %812, %811 ]
  %824 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %829, %822 ], [ %813, %811 ]
  %825 = phi i64 [ %831, %822 ], [ %820, %811 ]
  %826 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %824, i64 0, i32 0
  %827 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %823, i64 0, i32 0
  %828 = load i64, i64* %826, align 8
  store i64 %828, i64* %827, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %824, i64 1
  %830 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %823, i64 1
  %831 = add i64 %825, -1
  %832 = icmp eq i64 %831, 0
  br i1 %832, label %833, label %822, !llvm.loop !436

833:                                              ; preds = %822, %811
  %834 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %811 ], [ %830, %822 ]
  %835 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %812, %811 ], [ %830, %822 ]
  %836 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %813, %811 ], [ %829, %822 ]
  %837 = icmp ult i64 %817, 56
  br i1 %837, label %868, label %838

838:                                              ; preds = %833, %838
  %839 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %866, %838 ], [ %835, %833 ]
  %840 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %865, %838 ], [ %836, %833 ]
  %841 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 0, i32 0
  %842 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 0, i32 0
  %843 = load i64, i64* %841, align 8
  store i64 %843, i64* %842, align 8
  %844 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 1, i32 0
  %845 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 1, i32 0
  %846 = load i64, i64* %844, align 8
  store i64 %846, i64* %845, align 8
  %847 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 2, i32 0
  %848 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 2, i32 0
  %849 = load i64, i64* %847, align 8
  store i64 %849, i64* %848, align 8
  %850 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 3, i32 0
  %851 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 3, i32 0
  %852 = load i64, i64* %850, align 8
  store i64 %852, i64* %851, align 8
  %853 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 4, i32 0
  %854 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 4, i32 0
  %855 = load i64, i64* %853, align 8
  store i64 %855, i64* %854, align 8
  %856 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 5, i32 0
  %857 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 5, i32 0
  %858 = load i64, i64* %856, align 8
  store i64 %858, i64* %857, align 8
  %859 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 6, i32 0
  %860 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 6, i32 0
  %861 = load i64, i64* %859, align 8
  store i64 %861, i64* %860, align 8
  %862 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 7, i32 0
  %863 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 7, i32 0
  %864 = load i64, i64* %862, align 8
  store i64 %864, i64* %863, align 8
  %865 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %840, i64 8
  %866 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %839, i64 8
  %867 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %865, %707
  br i1 %867, label %868, label %838, !llvm.loop !437

868:                                              ; preds = %833, %838, %809, %705
  %869 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %394, %705 ], [ %732, %809 ], [ %834, %833 ], [ %866, %838 ]
  %870 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %706 to i64
  %871 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %869 to i64
  store i64 %870, i64* %346, align 8
  store i64 %871, i64* %24, align 8
  store i64 %393, i64* %16, align 8
  ret %"class.v8::internal::compiler::InstructionOperand"* %391

872:                                              ; preds = %195, %340, %344, %4
  ret %"class.v8::internal::compiler::InstructionOperand"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::StateValueDescriptor"* @_ZNSt3__16vectorIN2v88internal8compiler20StateValueDescriptorENS2_13ZoneAllocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1279"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %2 to i64
  %6 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 4
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %311

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %16, align 8
  %18 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %16 to i64*
  br i1 %21, label %142, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 4
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %76

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %2, i64 %25
  %29 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %28, %3
  br i1 %29, label %71, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %3, i64 %31, i32 0
  %33 = ptrtoint i8* %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 4
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %46, %39 ], [ %17, %30 ]
  %41 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %45, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %47, %39 ], [ %37, %30 ]
  %43 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %41, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false) #12
  %45 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %41, i64 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %40, i64 1
  %47 = add i64 %42, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %39, !llvm.loop !438

49:                                               ; preds = %39, %30
  %50 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %30 ], [ %46, %39 ]
  %51 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %17, %30 ], [ %46, %39 ]
  %52 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %28, %30 ], [ %45, %39 ]
  %53 = icmp ult i64 %34, 48
  br i1 %53, label %68, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %66, %54 ], [ %51, %49 ]
  %56 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %65, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %55, i64 0, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false) #12
  %59 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %55, i64 1, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #12
  %61 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %55, i64 2, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 16, i1 false) #12
  %63 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %55, i64 3, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false) #12
  %65 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %56, i64 4
  %66 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %55, i64 4
  %67 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %65, %3
  br i1 %67, label %68, label %54

68:                                               ; preds = %54, %49
  %69 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %50, %49 ], [ %66, %54 ]
  %70 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %69 to i64
  br label %71

71:                                               ; preds = %68, %27
  %72 = phi i64 [ %18, %27 ], [ %70, %68 ]
  store i64 %72, i64* %22, align 8
  %73 = icmp sgt i64 %24, 0
  br i1 %73, label %74, label %311

74:                                               ; preds = %71
  %75 = inttoptr i64 %72 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %76

76:                                               ; preds = %74, %23
  %77 = phi i64 [ %72, %74 ], [ %18, %23 ]
  %78 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %75, %74 ], [ %17, %23 ]
  %79 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %28, %74 ], [ %3, %23 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 %10
  %81 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %80 to i64
  %82 = sub i64 %77, %81
  %83 = ashr exact i64 %82, 4
  %84 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 %83
  %85 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %84, %17
  br i1 %85, label %86, label %114

86:                                               ; preds = %76
  %87 = sub nsw i64 0, %83
  %88 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %17, i64 %87, i32 0
  %89 = xor i64 %6, -1
  %90 = getelementptr i8, i8* %88, i64 %89
  %91 = ptrtoint i8* %90 to i64
  %92 = lshr i64 %91, 4
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %86, %96
  %97 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %103, %96 ], [ %78, %86 ]
  %98 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %102, %96 ], [ %84, %86 ]
  %99 = phi i64 [ %104, %96 ], [ %94, %86 ]
  %100 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %97, i64 0, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %98, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %98, i64 1
  %103 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %97, i64 1
  %104 = add i64 %99, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %96, !llvm.loop !439

106:                                              ; preds = %96, %86
  %107 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %78, %86 ], [ %103, %96 ]
  %108 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %84, %86 ], [ %102, %96 ]
  %109 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %86 ], [ %103, %96 ]
  %110 = icmp ult i8* %90, inttoptr (i64 48 to i8*)
  br i1 %110, label %111, label %121

111:                                              ; preds = %121, %106
  %112 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %109, %106 ], [ %133, %121 ]
  %113 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %112 to i64
  br label %114

114:                                              ; preds = %111, %76
  %115 = phi i64 [ %113, %111 ], [ %77, %76 ]
  store i64 %115, i64* %22, align 8
  %116 = icmp eq i64 %82, 0
  br i1 %116, label %135, label %117

117:                                              ; preds = %114
  %118 = sub nsw i64 0, %83
  %119 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %78, i64 %118, i32 0
  %120 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 0, i32 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 %82, i1 false) #12
  br label %135

121:                                              ; preds = %106, %121
  %122 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %133, %121 ], [ %107, %106 ]
  %123 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %132, %121 ], [ %108, %106 ]
  %124 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %122, i64 0, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %123, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #12
  %126 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %122, i64 1, i32 0
  %127 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %123, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #12
  %128 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %122, i64 2, i32 0
  %129 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %123, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #12
  %130 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %122, i64 3, i32 0
  %131 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %123, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #12
  %132 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %123, i64 4
  %133 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %122, i64 4
  %134 = icmp ult %"class.v8::internal::compiler::StateValueDescriptor"* %132, %17
  br i1 %134, label %121, label %111

135:                                              ; preds = %114, %117
  %136 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %79 to i64
  %137 = sub i64 %136, %5
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %311, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 0, i32 0
  %141 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %2, i64 0, i32 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 %137, i1 false) #12
  br label %311

142:                                              ; preds = %12
  %143 = bitcast %"class.std::__1::vector.1279"* %0 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %18, %144
  %146 = ashr exact i64 %145, 4
  %147 = add nsw i64 %146, %10
  %148 = icmp ugt i64 %147, 134217727
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.std::__1::vector.1279"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #13
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %15, %144
  %153 = ashr exact i64 %152, 4
  %154 = icmp ult i64 %153, 67108863
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = sub i64 %6, %144
  %157 = ashr exact i64 %156, 4
  br label %165

158:                                              ; preds = %151
  %159 = ashr exact i64 %152, 3
  %160 = icmp ult i64 %159, %147
  %161 = select i1 %160, i64 %147, i64 %159
  %162 = sub i64 %6, %144
  %163 = ashr exact i64 %162, 4
  %164 = icmp eq i64 %161, 0
  br i1 %164, label %184, label %165

165:                                              ; preds = %155, %158
  %166 = phi i64 [ %157, %155 ], [ %163, %158 ]
  %167 = phi i64 [ 134217727, %155 ], [ %161, %158 ]
  %168 = getelementptr inbounds %"class.std::__1::vector.1279", %"class.std::__1::vector.1279"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %169 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %168, align 8
  %170 = shl i64 %167, 4
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %169, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %169, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ugt i64 %170, %175
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %165
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %169, i64 %170) #12
  br label %181

179:                                              ; preds = %165
  %180 = add i64 %172, %170
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::StateValueDescriptor"*
  br label %184

184:                                              ; preds = %181, %158
  %185 = phi i64 [ %166, %181 ], [ %163, %158 ]
  %186 = phi i64 [ %167, %181 ], [ 0, %158 ]
  %187 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %183, %181 ], [ null, %158 ]
  %188 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %187, i64 %185
  %189 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %187, i64 %186
  %190 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %189 to i64
  %191 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %188, i64 %10
  %192 = add i64 %9, -16
  %193 = lshr i64 %192, 4
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %207, label %197

197:                                              ; preds = %184, %197
  %198 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %203, %197 ], [ %188, %184 ]
  %199 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %204, %197 ], [ %2, %184 ]
  %200 = phi i64 [ %205, %197 ], [ %195, %184 ]
  %201 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %198, i64 0, i32 0
  %202 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %199, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 16, i1 false) #12
  %203 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %198, i64 1
  %204 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %199, i64 1
  %205 = add i64 %200, -1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %197, !llvm.loop !440

207:                                              ; preds = %197, %184
  %208 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %188, %184 ], [ %203, %197 ]
  %209 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %2, %184 ], [ %204, %197 ]
  %210 = icmp ult i64 %192, 48
  br i1 %210, label %225, label %211

211:                                              ; preds = %207, %211
  %212 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %222, %211 ], [ %208, %207 ]
  %213 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %223, %211 ], [ %209, %207 ]
  %214 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %212, i64 0, i32 0
  %215 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %213, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %215, i64 16, i1 false) #12
  %216 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %212, i64 1, i32 0
  %217 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %213, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %217, i64 16, i1 false) #12
  %218 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %212, i64 2, i32 0
  %219 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %213, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 16, i1 false) #12
  %220 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %212, i64 3, i32 0
  %221 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %213, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 16, i1 false) #12
  %222 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %212, i64 4
  %223 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %213, i64 4
  %224 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %191, %222
  br i1 %224, label %225, label %211

225:                                              ; preds = %211, %207
  %226 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %7, align 8
  %227 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %226, %1
  br i1 %227, label %266, label %228

228:                                              ; preds = %225
  %229 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %226 to i64
  %230 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %1, i64 -1, i32 0
  %231 = ptrtoint i8* %230 to i64
  %232 = sub i64 %231, %229
  %233 = lshr i64 %232, 4
  %234 = add nuw nsw i64 %233, 1
  %235 = and i64 %234, 3
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %247, label %237

237:                                              ; preds = %228, %237
  %238 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %244, %237 ], [ %188, %228 ]
  %239 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %241, %237 ], [ %1, %228 ]
  %240 = phi i64 [ %245, %237 ], [ %235, %228 ]
  %241 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %239, i64 -1
  %242 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %238, i64 -1, i32 0
  %243 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %241, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 16, i1 false) #12
  %244 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %238, i64 -1
  %245 = add i64 %240, -1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %237, !llvm.loop !441

247:                                              ; preds = %237, %228
  %248 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %228 ], [ %244, %237 ]
  %249 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %188, %228 ], [ %244, %237 ]
  %250 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %1, %228 ], [ %241, %237 ]
  %251 = icmp ult i64 %232, 48
  br i1 %251, label %266, label %252

252:                                              ; preds = %247, %252
  %253 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %264, %252 ], [ %249, %247 ]
  %254 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %261, %252 ], [ %250, %247 ]
  %255 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %253, i64 -1, i32 0
  %256 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %254, i64 -1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %255, i8* align 8 %256, i64 16, i1 false) #12
  %257 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %253, i64 -2, i32 0
  %258 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %254, i64 -2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #12
  %259 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %253, i64 -3, i32 0
  %260 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %254, i64 -3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %259, i8* align 8 %260, i64 16, i1 false) #12
  %261 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %254, i64 -4
  %262 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %253, i64 -4, i32 0
  %263 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %261, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 16, i1 false) #12
  %264 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %253, i64 -4
  %265 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %261, %226
  br i1 %265, label %266, label %252

266:                                              ; preds = %247, %252, %225
  %267 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %188, %225 ], [ %248, %247 ], [ %264, %252 ]
  %268 = load %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"** %16, align 8
  %269 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %268, %1
  br i1 %269, label %307, label %270

270:                                              ; preds = %266
  %271 = getelementptr %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %268, i64 -1, i32 0
  %272 = ptrtoint i8* %271 to i64
  %273 = sub i64 %272, %6
  %274 = lshr i64 %273, 4
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 3
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %288, label %278

278:                                              ; preds = %270, %278
  %279 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %285, %278 ], [ %191, %270 ]
  %280 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %284, %278 ], [ %1, %270 ]
  %281 = phi i64 [ %286, %278 ], [ %276, %270 ]
  %282 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %279, i64 0, i32 0
  %283 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %280, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %282, i8* align 8 %283, i64 16, i1 false) #12
  %284 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %280, i64 1
  %285 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %279, i64 1
  %286 = add i64 %281, -1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %278, !llvm.loop !442

288:                                              ; preds = %278, %270
  %289 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ undef, %270 ], [ %285, %278 ]
  %290 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %191, %270 ], [ %285, %278 ]
  %291 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %1, %270 ], [ %284, %278 ]
  %292 = icmp ult i64 %273, 48
  br i1 %292, label %307, label %293

293:                                              ; preds = %288, %293
  %294 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %305, %293 ], [ %290, %288 ]
  %295 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %304, %293 ], [ %291, %288 ]
  %296 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %294, i64 0, i32 0
  %297 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %295, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %297, i64 16, i1 false) #12
  %298 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %294, i64 1, i32 0
  %299 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %295, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %298, i8* align 8 %299, i64 16, i1 false) #12
  %300 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %294, i64 2, i32 0
  %301 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %295, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 16, i1 false) #12
  %302 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %294, i64 3, i32 0
  %303 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %295, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %303, i64 16, i1 false) #12
  %304 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %295, i64 4
  %305 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %294, i64 4
  %306 = icmp eq %"class.v8::internal::compiler::StateValueDescriptor"* %304, %268
  br i1 %306, label %307, label %293

307:                                              ; preds = %288, %293, %266
  %308 = phi %"class.v8::internal::compiler::StateValueDescriptor"* [ %191, %266 ], [ %289, %288 ], [ %305, %293 ]
  %309 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %267 to i64
  %310 = ptrtoint %"class.v8::internal::compiler::StateValueDescriptor"* %308 to i64
  store i64 %309, i64* %143, align 8
  store i64 %310, i64* %22, align 8
  store i64 %190, i64* %14, align 8
  ret %"class.v8::internal::compiler::StateValueDescriptor"* %188

311:                                              ; preds = %71, %135, %139, %4
  ret %"class.v8::internal::compiler::StateValueDescriptor"* %1
}

declare void @_ZN2v88internal8compiler17StateValuesAccess8iteratorC1EPNS1_4NodeE(%"class.v8::internal::compiler::StateValuesAccess::iterator"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* @_ZN2v88internal4Zone3NewINS0_8compiler19InstructionSelector17CachedStateValuesEJRPS1_RPNS3_14StateValueListERmRPNS0_10ZoneVectorINS3_18InstructionOperandEEESB_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** dereferenceable(8), %"class.v8::internal::compiler::StateValueList"** dereferenceable(8), i64* dereferenceable(8), %"class.v8::internal::ZoneVector.1240"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 48
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %6
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 48) #12
  br label %17

15:                                               ; preds = %6
  %16 = add i64 %8, 48
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to i8*
  %20 = inttoptr i64 %18 to %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"*
  %21 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1, align 8
  %22 = load %"class.v8::internal::compiler::StateValueList"*, %"class.v8::internal::compiler::StateValueList"** %2, align 8
  %23 = load i64, i64* %3, align 8
  %24 = load %"class.v8::internal::ZoneVector.1240"*, %"class.v8::internal::ZoneVector.1240"** %4, align 8
  %25 = load i64, i64* %5, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %26, align 8
  %28 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %27, i64 %25
  %30 = getelementptr inbounds %"class.v8::internal::ZoneVector.1240", %"class.v8::internal::ZoneVector.1240"* %24, i64 0, i32 0, i32 0, i32 1
  %31 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %30, align 8
  %32 = ptrtoint %"class.v8::internal::Zone"* %21 to i64
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %34 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %33 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  store i64 %32, i64* %34, align 8
  %35 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %29 to i64
  %36 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %31 to i64
  %37 = sub i64 %36, %35
  %38 = ashr exact i64 %37, 3
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %231, label %40

40:                                               ; preds = %17
  %41 = icmp ugt i64 %38, 268435455
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = inttoptr i64 %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #13
  unreachable

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %46
  %50 = icmp ugt i64 %37, %49
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %44
  %52 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %21, i64 %37) #12
  br label %55

53:                                               ; preds = %44
  %54 = add i64 %46, %37
  store i64 %54, i64* %45, align 8
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %52, %51 ], [ %46, %53 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::InstructionOperand"*
  %58 = inttoptr i64 %56 to i8*
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::InstructionOperand"* %57, %"class.v8::internal::compiler::InstructionOperand"** %59, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %57, %"class.v8::internal::compiler::InstructionOperand"** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %38
  %62 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %61, %"class.v8::internal::compiler::InstructionOperand"** %62, align 8
  %63 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %59 to i64*
  %64 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %29, %31
  br i1 %64, label %229, label %65

65:                                               ; preds = %55
  %66 = xor i64 %25, -1
  %67 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %31, i64 %66, i32 0
  %68 = ptrtoint i64* %67 to i64
  %69 = sub i64 %68, %28
  %70 = lshr i64 %69, 3
  %71 = add nuw nsw i64 %70, 1
  %72 = icmp ult i64 %71, 4
  br i1 %72, label %169, label %73

73:                                               ; preds = %65
  %74 = xor i64 %25, -1
  %75 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %31, i64 %74, i32 0
  %76 = ptrtoint i64* %75 to i64
  %77 = sub i64 %76, %28
  %78 = lshr i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %79
  %81 = add i64 %25, %78
  %82 = add i64 %81, 1
  %83 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %27, i64 %82
  %84 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %83 to i8*
  %85 = icmp ult i8* %58, %84
  %86 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %29, %80
  %87 = and i1 %85, %86
  br i1 %87, label %169, label %88

88:                                               ; preds = %73
  %89 = and i64 %71, 4611686018427387900
  %90 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %89
  %91 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 %89
  %92 = add nsw i64 %89, -4
  %93 = lshr exact i64 %92, 2
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 3
  %96 = icmp ult i64 %92, 12
  br i1 %96, label %148, label %97

97:                                               ; preds = %88
  %98 = sub nsw i64 %94, %95
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %145, %99 ]
  %101 = phi i64 [ %98, %97 ], [ %146, %99 ]
  %102 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 %100
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %100, i32 0
  %104 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %102 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !443
  %106 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %102, i64 2
  %107 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !443
  %109 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %109, align 8, !alias.scope !446, !noalias !443
  %110 = getelementptr i64, i64* %103, i64 2
  %111 = bitcast i64* %110 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %111, align 8, !alias.scope !446, !noalias !443
  %112 = or i64 %100, 4
  %113 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 %112
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %112, i32 0
  %115 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %113 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 8, !alias.scope !443
  %117 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %113, i64 2
  %118 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !443
  %120 = bitcast i64* %114 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %120, align 8, !alias.scope !446, !noalias !443
  %121 = getelementptr i64, i64* %114, i64 2
  %122 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %122, align 8, !alias.scope !446, !noalias !443
  %123 = or i64 %100, 8
  %124 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 %123
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %123, i32 0
  %126 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %124 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !443
  %128 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %124, i64 2
  %129 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !443
  %131 = bitcast i64* %125 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !446, !noalias !443
  %132 = getelementptr i64, i64* %125, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !446, !noalias !443
  %134 = or i64 %100, 12
  %135 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 %134
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %134, i32 0
  %137 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %135 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !443
  %139 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %135, i64 2
  %140 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8, !alias.scope !443
  %142 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %142, align 8, !alias.scope !446, !noalias !443
  %143 = getelementptr i64, i64* %136, i64 2
  %144 = bitcast i64* %143 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %144, align 8, !alias.scope !446, !noalias !443
  %145 = add i64 %100, 16
  %146 = add i64 %101, -4
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %99, !llvm.loop !448

148:                                              ; preds = %99, %88
  %149 = phi i64 [ 0, %88 ], [ %145, %99 ]
  %150 = icmp eq i64 %95, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %164, %151 ], [ %149, %148 ]
  %153 = phi i64 [ %165, %151 ], [ %95, %148 ]
  %154 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 %152
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 %152, i32 0
  %156 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %154 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8, !alias.scope !443
  %158 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %154, i64 2
  %159 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !443
  %161 = bitcast i64* %155 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %161, align 8, !alias.scope !446, !noalias !443
  %162 = getelementptr i64, i64* %155, i64 2
  %163 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %163, align 8, !alias.scope !446, !noalias !443
  %164 = add i64 %152, 4
  %165 = add i64 %153, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !449

167:                                              ; preds = %151, %148
  %168 = icmp eq i64 %71, %89
  br i1 %168, label %226, label %169

169:                                              ; preds = %167, %73, %65
  %170 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %57, %73 ], [ %57, %65 ], [ %90, %167 ]
  %171 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %29, %73 ], [ %29, %65 ], [ %91, %167 ]
  %172 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %171 to i64
  %173 = getelementptr %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %31, i64 -1, i32 0
  %174 = ptrtoint i64* %173 to i64
  %175 = sub i64 %174, %172
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 7
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %169, %180
  %181 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %188, %180 ], [ %170, %169 ]
  %182 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %187, %180 ], [ %171, %169 ]
  %183 = phi i64 [ %189, %180 ], [ %178, %169 ]
  %184 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %182, i64 0, i32 0
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %181, i64 0, i32 0
  %186 = load i64, i64* %184, align 8
  store i64 %186, i64* %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %182, i64 1
  %188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %181, i64 1
  %189 = add i64 %183, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %180, !llvm.loop !450

191:                                              ; preds = %180, %169
  %192 = phi %"class.v8::internal::compiler::InstructionOperand"* [ undef, %169 ], [ %188, %180 ]
  %193 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %170, %169 ], [ %188, %180 ]
  %194 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %171, %169 ], [ %187, %180 ]
  %195 = icmp ult i64 %175, 56
  br i1 %195, label %226, label %196

196:                                              ; preds = %191, %196
  %197 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %224, %196 ], [ %193, %191 ]
  %198 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %223, %196 ], [ %194, %191 ]
  %199 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 0, i32 0
  %200 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 0, i32 0
  %201 = load i64, i64* %199, align 8
  store i64 %201, i64* %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 1, i32 0
  %203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 1, i32 0
  %204 = load i64, i64* %202, align 8
  store i64 %204, i64* %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 2, i32 0
  %206 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 2, i32 0
  %207 = load i64, i64* %205, align 8
  store i64 %207, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 3, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 3, i32 0
  %210 = load i64, i64* %208, align 8
  store i64 %210, i64* %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 4, i32 0
  %212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 4, i32 0
  %213 = load i64, i64* %211, align 8
  store i64 %213, i64* %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 5, i32 0
  %215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 5, i32 0
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 6, i32 0
  %218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 6, i32 0
  %219 = load i64, i64* %217, align 8
  store i64 %219, i64* %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 7, i32 0
  %221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 7, i32 0
  %222 = load i64, i64* %220, align 8
  store i64 %222, i64* %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %198, i64 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %197, i64 8
  %225 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %223, %31
  br i1 %225, label %226, label %196, !llvm.loop !451

226:                                              ; preds = %191, %196, %167
  %227 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %90, %167 ], [ %192, %191 ], [ %224, %196 ]
  %228 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %227 to i64
  br label %229

229:                                              ; preds = %226, %55
  %230 = phi i64 [ %56, %55 ], [ %228, %226 ]
  store i64 %230, i64* %63, align 8
  br label %231

231:                                              ; preds = %17, %229
  %232 = getelementptr inbounds %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::compiler::StateValueList"* %22, i64 0, i32 0, i32 0, i32 0, i32 1
  %233 = bitcast %"class.v8::internal::compiler::StateValueDescriptor"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.v8::internal::compiler::StateValueList"* %22 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = sub i64 %234, %236
  %238 = ashr exact i64 %237, 4
  %239 = sub i64 %238, %23
  %240 = inttoptr i64 %236 to %"class.v8::internal::compiler::StateValueDescriptor"*
  %241 = getelementptr inbounds %"class.v8::internal::compiler::StateValueDescriptor", %"class.v8::internal::compiler::StateValueDescriptor"* %240, i64 %23
  %242 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20, i64 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::compiler::StateValueDescriptor"* %241, %"class.v8::internal::compiler::StateValueDescriptor"** %242, align 8
  %243 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues", %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20, i64 0, i32 1, i32 1
  store i64 %239, i64* %243, align 8
  ret %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal8compiler19InstructionSequence12AddImmediateERKNS1_8ConstantE(%"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Constant"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %32 [
    i32 7, label %9
    i32 0, label %19
    i32 1, label %24
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %1, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = shl i64 %11, 32
  %14 = ashr exact i64 %13, 32
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %16, i64 %14, i32 0
  store i32 %12, i32* %17, align 4
  %18 = or i64 %13, 19
  br label %148

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %1, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = shl i64 %21, 32
  %23 = or i64 %22, 3
  br label %148

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %1, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 2147483648
  %28 = icmp ult i64 %27, 4294967296
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = shl i64 %26, 32
  %31 = or i64 %30, 11
  br label %148

32:                                               ; preds = %6, %24, %2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %0, i64 0, i32 6, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %35 = bitcast %"class.v8::internal::compiler::Constant"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.1224"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = inttoptr i64 %36 to %"class.v8::internal::compiler::Constant"*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::Constant"* %42, %40
  %44 = ptrtoint %"class.v8::internal::compiler::Constant"* %42 to i64
  br i1 %43, label %50, label %45

45:                                               ; preds = %32
  %46 = inttoptr i64 %36 to i8*
  %47 = bitcast %"class.v8::internal::compiler::Constant"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #12
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %40, i64 1
  %49 = ptrtoint %"class.v8::internal::compiler::Constant"* %48 to i64
  store i64 %49, i64* %35, align 8
  br label %145

50:                                               ; preds = %32
  %51 = ashr exact i64 %39, 4
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 134217727
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::vector.1224"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #13
  unreachable

56:                                               ; preds = %50
  %57 = bitcast %"class.v8::internal::compiler::Constant"** %41 to i64*
  %58 = sub i64 %44, %38
  %59 = ashr exact i64 %58, 4
  %60 = icmp ult i64 %59, 67108863
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = ashr exact i64 %58, 3
  %63 = icmp ult i64 %62, %52
  %64 = select i1 %63, i64 %52, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %84, label %66

66:                                               ; preds = %61, %56
  %67 = phi i64 [ %64, %61 ], [ 134217727, %56 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %69 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %68, align 8
  %70 = shl i64 %67, 4
  %71 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %69, i64 0, i32 2
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %69, i64 0, i32 3
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %74, %72
  %76 = icmp ugt i64 %70, %75
  br i1 %76, label %77, label %79, !prof !2

77:                                               ; preds = %66
  %78 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %69, i64 %70) #12
  br label %81

79:                                               ; preds = %66
  %80 = add i64 %72, %70
  store i64 %80, i64* %71, align 8
  br label %81

81:                                               ; preds = %79, %77
  %82 = phi i64 [ %78, %77 ], [ %72, %79 ]
  %83 = inttoptr i64 %82 to %"class.v8::internal::compiler::Constant"*
  br label %84

84:                                               ; preds = %81, %61
  %85 = phi i64 [ %67, %81 ], [ 0, %61 ]
  %86 = phi %"class.v8::internal::compiler::Constant"* [ %83, %81 ], [ null, %61 ]
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %86, i64 %51
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %86, i64 %85
  %89 = ptrtoint %"class.v8::internal::compiler::Constant"* %88 to i64
  %90 = bitcast %"class.v8::internal::compiler::Constant"* %87 to i8*
  %91 = bitcast %"class.v8::internal::compiler::Constant"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 16, i1 false) #12
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %87, i64 1
  %93 = ptrtoint %"class.v8::internal::compiler::Constant"* %92 to i64
  %94 = getelementptr inbounds %"class.std::__1::vector.1224", %"class.std::__1::vector.1224"* %33, i64 0, i32 0, i32 0
  %95 = load %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"** %94, align 8
  %96 = load %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"** %34, align 8
  %97 = icmp eq %"class.v8::internal::compiler::Constant"* %96, %95
  br i1 %97, label %142, label %98

98:                                               ; preds = %84
  %99 = ptrtoint %"class.v8::internal::compiler::Constant"* %95 to i64
  %100 = getelementptr %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %96, i64 -1, i32 0
  %101 = ptrtoint i32* %100 to i64
  %102 = sub i64 %101, %99
  %103 = lshr i64 %102, 4
  %104 = add nuw nsw i64 %103, 1
  %105 = and i64 %104, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %98, %107
  %108 = phi %"class.v8::internal::compiler::Constant"* [ %111, %107 ], [ %87, %98 ]
  %109 = phi %"class.v8::internal::compiler::Constant"* [ %112, %107 ], [ %96, %98 ]
  %110 = phi i64 [ %115, %107 ], [ %105, %98 ]
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %108, i64 -1
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %109, i64 -1
  %113 = bitcast %"class.v8::internal::compiler::Constant"* %111 to i8*
  %114 = bitcast %"class.v8::internal::compiler::Constant"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #12
  %115 = add i64 %110, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %107, !llvm.loop !452

117:                                              ; preds = %107, %98
  %118 = phi %"class.v8::internal::compiler::Constant"* [ undef, %98 ], [ %111, %107 ]
  %119 = phi %"class.v8::internal::compiler::Constant"* [ %87, %98 ], [ %111, %107 ]
  %120 = phi %"class.v8::internal::compiler::Constant"* [ %96, %98 ], [ %112, %107 ]
  %121 = icmp ult i64 %102, 48
  br i1 %121, label %142, label %122

122:                                              ; preds = %117, %122
  %123 = phi %"class.v8::internal::compiler::Constant"* [ %137, %122 ], [ %119, %117 ]
  %124 = phi %"class.v8::internal::compiler::Constant"* [ %138, %122 ], [ %120, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %123, i64 -1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %124, i64 -1
  %127 = bitcast %"class.v8::internal::compiler::Constant"* %125 to i8*
  %128 = bitcast %"class.v8::internal::compiler::Constant"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #12
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %123, i64 -2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %124, i64 -2
  %131 = bitcast %"class.v8::internal::compiler::Constant"* %129 to i8*
  %132 = bitcast %"class.v8::internal::compiler::Constant"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #12
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %123, i64 -3
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %124, i64 -3
  %135 = bitcast %"class.v8::internal::compiler::Constant"* %133 to i8*
  %136 = bitcast %"class.v8::internal::compiler::Constant"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #12
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %123, i64 -4
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %124, i64 -4
  %139 = bitcast %"class.v8::internal::compiler::Constant"* %137 to i8*
  %140 = bitcast %"class.v8::internal::compiler::Constant"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #12
  %141 = icmp eq %"class.v8::internal::compiler::Constant"* %138, %95
  br i1 %141, label %142, label %122

142:                                              ; preds = %117, %122, %84
  %143 = phi %"class.v8::internal::compiler::Constant"* [ %87, %84 ], [ %118, %117 ], [ %137, %122 ]
  %144 = ptrtoint %"class.v8::internal::compiler::Constant"* %143 to i64
  store i64 %144, i64* %37, align 8
  store i64 %93, i64* %35, align 8
  store i64 %89, i64* %57, align 8
  br label %145

145:                                              ; preds = %45, %142
  %146 = shl i64 %39, 28
  %147 = or i64 %146, 27
  br label %148

148:                                              ; preds = %145, %29, %19, %9
  %149 = phi i64 [ %18, %9 ], [ %23, %19 ], [ %31, %29 ], [ %147, %145 ]
  ret i64 %149
}

declare void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN2v88internal8compiler16OperandGenerator10ToConstantEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Constant", align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  switch i16 %6, label %98 [
    i16 22, label %7
    i16 23, label %11
    i16 24, label %18
    i16 25, label %27
    i16 32, label %35
    i16 33, label %35
    i16 26, label %42
    i16 28, label %42
    i16 27, label %49
    i16 436, label %56
    i16 30, label %63
    i16 31, label %69
    i16 222, label %75
    i16 61, label %81
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 12
  %9 = bitcast [4 x i8]* %8 to i32*
  %10 = load i32, i32* %9, align 4
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %2, i32 %10) #12
  br label %99

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 1
  %13 = bitcast %"class.v8::internal::compiler::Operator"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %14, i64* %17, align 8
  br label %99

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 12
  %20 = bitcast [4 x i8]* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 1
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %23, i64* %26, align 8
  br label %99

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 12
  %29 = bitcast [4 x i8]* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 2, i32* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  %34 = sext i32 %30 to i64
  store i64 %34, i64* %33, align 8
  br label %99

35:                                               ; preds = %1, %1
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 1
  %37 = bitcast %"class.v8::internal::compiler::Operator"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 1, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  call void @_ZN2v88internal8compiler8ConstantC1ENS1_26RelocatablePtrConstantInfoE(%"class.v8::internal::compiler::Constant"* nonnull %2, i64 %38, i64 %41) #12
  br label %99

42:                                               ; preds = %1, %1
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 1
  %44 = bitcast %"class.v8::internal::compiler::Operator"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 3, i32* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %45, i64* %48, align 8
  br label %99

49:                                               ; preds = %1
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 1
  %51 = bitcast %"class.v8::internal::compiler::Operator"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 4, i32* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %52, i64* %55, align 8
  br label %99

56:                                               ; preds = %1
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 1
  %58 = bitcast %"class.v8::internal::compiler::Operator"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 1, i32* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %61, align 4
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %59, i64* %62, align 8
  br label %99

63:                                               ; preds = %1
  %64 = tail call i64* @_ZN2v88internal8compiler14HeapConstantOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #12
  %65 = ptrtoint i64* %64 to i64
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 6, i32* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %65, i64* %68, align 8
  br label %99

69:                                               ; preds = %1
  %70 = tail call i64* @_ZN2v88internal8compiler14HeapConstantOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #12
  %71 = ptrtoint i64* %70 to i64
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 5, i32* %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %73, align 4
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %71, i64* %74, align 8
  br label %99

75:                                               ; preds = %1
  %76 = tail call %"class.v8::internal::StringConstantBase"* @_ZN2v88internal8compiler20StringConstantBaseOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #12
  %77 = ptrtoint %"class.v8::internal::StringConstantBase"* %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 8, i32* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %79, align 4
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 %77, i64* %80, align 8
  br label %99

81:                                               ; preds = %1
  %82 = tail call zeroext i8 @_ZN2v88internal8compiler25DeadValueRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #12
  switch i8 %82, label %97 [
    i8 1, label %83
    i8 4, label %83
    i8 9, label %83
    i8 7, label %83
    i8 8, label %83
    i8 11, label %83
    i8 10, label %83
    i8 5, label %84
    i8 13, label %88
    i8 12, label %93
  ]

83:                                               ; preds = %81, %81, %81, %81, %81, %81, %81
  call void @_ZN2v88internal8compiler8ConstantC1Ei(%"class.v8::internal::compiler::Constant"* nonnull %2, i32 0) #12
  br label %99

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 1, i32* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %86, align 4
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 0, i64* %87, align 8
  br label %99

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 3, i32* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  %92 = bitcast i64* %91 to double*
  store double 0.000000e+00, double* %92, align 8
  br label %99

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 0
  store i32 2, i32* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 1
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  store i64 0, i64* %96, align 8
  br label %99

97:                                               ; preds = %81
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

98:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

99:                                               ; preds = %93, %88, %84, %83, %75, %69, %63, %56, %49, %42, %35, %27, %18, %11, %7
  %100 = bitcast %"class.v8::internal::compiler::Constant"* %2 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = insertvalue { i64, i64 } undef, i64 %101, 0
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Constant", %"class.v8::internal::compiler::Constant"* %2, i64 0, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = insertvalue { i64, i64 } %102, i64 %104, 1
  ret { i64, i64 } %105
}

declare void @_ZN2v88internal8compiler8ConstantC1ENS1_26RelocatablePtrConstantInfoE(%"class.v8::internal::compiler::Constant"*, i64, i64) unnamed_addr #3

declare %"class.v8::internal::StringConstantBase"* @_ZN2v88internal8compiler20StringConstantBaseOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler19InstructionSequence17SetSourcePositionEPKNS1_11InstructionENS0_14SourcePositionE(%"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Instruction"*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"*, %class.anon.1640* dereferenceable(1), i64, %"struct.v8::internal::compiler::CaseInfo"*, i64) local_unnamed_addr #0 comdat {
  %7 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  switch i64 %3, label %21 [
    i64 0, label %184
    i64 1, label %184
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %1, i64 -1
  %10 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %11 to i32
  %15 = trunc i64 %13 to i32
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %184

17:                                               ; preds = %8
  %18 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18)
  %19 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 16, i1 false) #12
  %20 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %18, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  br label %184

21:                                               ; preds = %6
  %22 = icmp slt i64 %3, 129
  br i1 %22, label %23, label %57

23:                                               ; preds = %21
  %24 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %0, %1
  br i1 %24, label %184, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %0, i64 1
  %27 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %26, %1
  br i1 %27, label %184, label %28

28:                                               ; preds = %25, %46
  %29 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %51, %46 ], [ %26, %25 ]
  %30 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %29, %46 ], [ %0, %25 ]
  %31 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %30, i64 1, i32 2
  %34 = bitcast %"class.v8::internal::compiler::BasicBlock"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %29, %0
  br i1 %36, label %46, label %37

37:                                               ; preds = %28
  %38 = trunc i64 %32 to i32
  br label %39

39:                                               ; preds = %53, %37
  %40 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %29, %37 ], [ %41, %53 ]
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %40, i64 -1
  %42 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp slt i32 %38, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %53, %39, %28
  %47 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %0, %28 ], [ %40, %39 ], [ %0, %53 ]
  %48 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %47 to i64*
  store i64 %32, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %47, i64 0, i32 2
  %50 = bitcast %"class.v8::internal::compiler::BasicBlock"** %49 to i64*
  store i64 %35, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %29, i64 1
  %52 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %51, %1
  br i1 %52, label %184, label %28

53:                                               ; preds = %39
  %54 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %40 to i8*
  %55 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #12
  %56 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %41, %0
  br i1 %56, label %46, label %39

57:                                               ; preds = %21
  %58 = lshr i64 %3, 1
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %0, i64 %58
  %60 = icmp sgt i64 %3, %5
  br i1 %60, label %182, label %61

61:                                               ; preds = %57
  tail call void @_ZNSt3__118__stable_sort_moveIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"struct.v8::internal::compiler::CaseInfo"* %0, %"struct.v8::internal::compiler::CaseInfo"* %59, %class.anon.1640* dereferenceable(1) %2, i64 %58, %"struct.v8::internal::compiler::CaseInfo"* %4)
  %62 = sub nsw i64 %3, %58
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %58
  tail call void @_ZNSt3__118__stable_sort_moveIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"struct.v8::internal::compiler::CaseInfo"* %59, %"struct.v8::internal::compiler::CaseInfo"* %1, %class.anon.1640* dereferenceable(1) %2, i64 %62, %"struct.v8::internal::compiler::CaseInfo"* %63)
  %64 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %3
  br label %91

65:                                               ; preds = %157
  %66 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %158, %64
  br i1 %66, label %184, label %67

67:                                               ; preds = %65
  %68 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %158 to i64
  %69 = add i64 %3, -1
  %70 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %69, i32 0
  %71 = ptrtoint i32* %70 to i64
  %72 = sub i64 %71, %68
  %73 = lshr i64 %72, 4
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %67, %77
  %78 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %83, %77 ], [ %158, %67 ]
  %79 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %84, %77 ], [ %160, %67 ]
  %80 = phi i64 [ %85, %77 ], [ %75, %67 ]
  %81 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %79 to i8*
  %82 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #12
  %83 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %78, i64 1
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %79, i64 1
  %85 = add i64 %80, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %77, !llvm.loop !453

87:                                               ; preds = %77, %67
  %88 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %158, %67 ], [ %83, %77 ]
  %89 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %160, %67 ], [ %84, %77 ]
  %90 = icmp ult i64 %72, 48
  br i1 %90, label %184, label %162

91:                                               ; preds = %61, %157
  %92 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %159, %157 ], [ %4, %61 ]
  %93 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %158, %157 ], [ %63, %61 ]
  %94 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %160, %157 ], [ %0, %61 ]
  %95 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %93, %64
  br i1 %95, label %96, label %142

96:                                               ; preds = %91
  %97 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %92, %63
  br i1 %97, label %184, label %98

98:                                               ; preds = %96
  %99 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %92 to i64
  %100 = add nsw i64 %58, -1
  %101 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %100, i32 0
  %102 = ptrtoint i32* %101 to i64
  %103 = sub i64 %102, %99
  %104 = lshr i64 %103, 4
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 3
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %118, label %108

108:                                              ; preds = %98, %108
  %109 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %114, %108 ], [ %92, %98 ]
  %110 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %115, %108 ], [ %94, %98 ]
  %111 = phi i64 [ %116, %108 ], [ %106, %98 ]
  %112 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %110 to i8*
  %113 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 16, i1 false) #12
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %109, i64 1
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %110, i64 1
  %116 = add i64 %111, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %108, !llvm.loop !454

118:                                              ; preds = %108, %98
  %119 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %92, %98 ], [ %114, %108 ]
  %120 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %94, %98 ], [ %115, %108 ]
  %121 = icmp ult i64 %103, 48
  br i1 %121, label %184, label %122

122:                                              ; preds = %118, %122
  %123 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %139, %122 ], [ %119, %118 ]
  %124 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %140, %122 ], [ %120, %118 ]
  %125 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %124 to i8*
  %126 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #12
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %123, i64 1
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %124, i64 1
  %129 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %128 to i8*
  %130 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 16, i1 false) #12
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %123, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %124, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %132 to i8*
  %134 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #12
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %123, i64 3
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %124, i64 3
  %137 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %136 to i8*
  %138 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false) #12
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %123, i64 4
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %124, i64 4
  %141 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %139, %63
  br i1 %141, label %184, label %122

142:                                              ; preds = %91
  %143 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %93 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %92 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = trunc i64 %144 to i32
  %148 = trunc i64 %146 to i32
  %149 = icmp slt i32 %147, %148
  %150 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %94 to i8*
  br i1 %149, label %151, label %154

151:                                              ; preds = %142
  %152 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %152, i64 16, i1 false) #12
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %93, i64 1
  br label %157

154:                                              ; preds = %142
  %155 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %155, i64 16, i1 false) #12
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %92, i64 1
  br label %157

157:                                              ; preds = %154, %151
  %158 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %153, %151 ], [ %93, %154 ]
  %159 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %92, %151 ], [ %156, %154 ]
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %94, i64 1
  %161 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %159, %63
  br i1 %161, label %65, label %91

162:                                              ; preds = %87, %162
  %163 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %179, %162 ], [ %88, %87 ]
  %164 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %180, %162 ], [ %89, %87 ]
  %165 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %164 to i8*
  %166 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 16, i1 false) #12
  %167 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %163, i64 1
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %164, i64 1
  %169 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %168 to i8*
  %170 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #12
  %171 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %163, i64 2
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %164, i64 2
  %173 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %172 to i8*
  %174 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 16, i1 false) #12
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %163, i64 3
  %176 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %164, i64 3
  %177 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %176 to i8*
  %178 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #12
  %179 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %163, i64 4
  %180 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %164, i64 4
  %181 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %179, %64
  br i1 %181, label %184, label %162

182:                                              ; preds = %57
  tail call void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %0, %"struct.v8::internal::compiler::CaseInfo"* %59, %class.anon.1640* dereferenceable(1) %2, i64 %58, %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %5)
  %183 = sub nsw i64 %3, %58
  tail call void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %59, %"struct.v8::internal::compiler::CaseInfo"* %1, %class.anon.1640* dereferenceable(1) %2, i64 %183, %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %0, %"struct.v8::internal::compiler::CaseInfo"* %59, %"struct.v8::internal::compiler::CaseInfo"* %1, %class.anon.1640* dereferenceable(1) %2, i64 %58, i64 %183, %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %5)
  br label %184

184:                                              ; preds = %87, %162, %118, %122, %46, %96, %65, %25, %23, %182, %8, %17, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"*, %class.anon.1640* dereferenceable(1), i64, %"struct.v8::internal::compiler::CaseInfo"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %29 [
    i64 0, label %197
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %4 to i8*
  %8 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %197

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %1, i64 -1
  %11 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %12 to i32
  %16 = trunc i64 %14 to i32
  %17 = icmp slt i32 %15, %16
  %18 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %4 to i8*
  br i1 %17, label %19, label %24

19:                                               ; preds = %9
  %20 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 1
  %22 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %21 to i8*
  %23 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  br label %197

24:                                               ; preds = %9
  %25 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 1
  %27 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %26 to i8*
  %28 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false)
  br label %197

29:                                               ; preds = %5
  %30 = icmp slt i64 %3, 9
  br i1 %30, label %31, label %73

31:                                               ; preds = %29
  %32 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %0, %1
  br i1 %32, label %197, label %33

33:                                               ; preds = %31
  %34 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %4 to i8*
  %35 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false) #12
  %36 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %0, i64 1
  %37 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %36, %1
  br i1 %37, label %197, label %38

38:                                               ; preds = %33, %68
  %39 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %71, %68 ], [ %36, %33 ]
  %40 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %41, %68 ], [ %4, %33 ]
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %40, i64 1
  %42 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %43 to i32
  %47 = trunc i64 %45 to i32
  %48 = icmp slt i32 %46, %47
  %49 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %41 to i8*
  br i1 %48, label %50, label %68

50:                                               ; preds = %38
  %51 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %51, i64 16, i1 false) #12
  %52 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %40, %4
  br i1 %52, label %68, label %53

53:                                               ; preds = %50, %63
  %54 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %56, %63 ], [ %40, %50 ]
  %55 = load i64, i64* %42, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %54, i64 -1
  %57 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %55 to i32
  %60 = trunc i64 %58 to i32
  %61 = icmp slt i32 %59, %60
  %62 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %54 to i8*
  br i1 %61, label %63, label %66

63:                                               ; preds = %53
  %64 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %64, i64 16, i1 false) #12
  %65 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %56, %4
  br i1 %65, label %68, label %53

66:                                               ; preds = %53
  %67 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %54 to i8*
  br label %68

68:                                               ; preds = %66, %63, %38, %50
  %69 = phi i8* [ %34, %50 ], [ %49, %38 ], [ %67, %66 ], [ %34, %63 ]
  %70 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #12
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %39, i64 1
  %72 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %71, %1
  br i1 %72, label %197, label %38

73:                                               ; preds = %29
  %74 = lshr i64 %3, 1
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %0, i64 %74
  tail call void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %0, %"struct.v8::internal::compiler::CaseInfo"* %75, %class.anon.1640* dereferenceable(1) %2, i64 %74, %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %74)
  %76 = sub nsw i64 %3, %74
  %77 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %4, i64 %74
  tail call void @_ZNSt3__113__stable_sortIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %75, %"struct.v8::internal::compiler::CaseInfo"* %1, %class.anon.1640* dereferenceable(1) %2, i64 %76, %"struct.v8::internal::compiler::CaseInfo"* %77, i64 %76)
  %78 = icmp eq i64 %74, 0
  br i1 %78, label %79, label %126

79:                                               ; preds = %192, %73
  %80 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %75, %73 ], [ %193, %192 ]
  %81 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %4, %73 ], [ %195, %192 ]
  %82 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %80, %1
  br i1 %82, label %197, label %83

83:                                               ; preds = %79
  %84 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %80 to i64
  %85 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %1, i64 -1, i32 0
  %86 = ptrtoint i32* %85 to i64
  %87 = sub i64 %86, %84
  %88 = lshr i64 %87, 4
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 3
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %83, %92
  %93 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %99, %92 ], [ %81, %83 ]
  %94 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %98, %92 ], [ %80, %83 ]
  %95 = phi i64 [ %100, %92 ], [ %90, %83 ]
  %96 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %93 to i8*
  %97 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #12
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %94, i64 1
  %99 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %93, i64 1
  %100 = add i64 %95, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %92, !llvm.loop !455

102:                                              ; preds = %92, %83
  %103 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %81, %83 ], [ %99, %92 ]
  %104 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %80, %83 ], [ %98, %92 ]
  %105 = icmp ult i64 %87, 48
  br i1 %105, label %197, label %106

106:                                              ; preds = %102, %106
  %107 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %124, %106 ], [ %103, %102 ]
  %108 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %123, %106 ], [ %104, %102 ]
  %109 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %107 to i8*
  %110 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #12
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %108, i64 1
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %107, i64 1
  %113 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %112 to i8*
  %114 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #12
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %108, i64 2
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %107, i64 2
  %117 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %116 to i8*
  %118 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #12
  %119 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %108, i64 3
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %107, i64 3
  %121 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %120 to i8*
  %122 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #12
  %123 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %108, i64 4
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %107, i64 4
  %125 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %123, %1
  br i1 %125, label %197, label %106

126:                                              ; preds = %73, %192
  %127 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %195, %192 ], [ %4, %73 ]
  %128 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %194, %192 ], [ %0, %73 ]
  %129 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %193, %192 ], [ %75, %73 ]
  %130 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %129, %1
  br i1 %130, label %131, label %177

131:                                              ; preds = %126
  %132 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %128, %75
  br i1 %132, label %197, label %133

133:                                              ; preds = %131
  %134 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %128 to i64
  %135 = add nsw i64 %74, -1
  %136 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %0, i64 %135, i32 0
  %137 = ptrtoint i32* %136 to i64
  %138 = sub i64 %137, %134
  %139 = lshr i64 %138, 4
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 3
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %153, label %143

143:                                              ; preds = %133, %143
  %144 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %150, %143 ], [ %127, %133 ]
  %145 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %149, %143 ], [ %128, %133 ]
  %146 = phi i64 [ %151, %143 ], [ %141, %133 ]
  %147 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %144 to i8*
  %148 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #12
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %145, i64 1
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %143, !llvm.loop !456

153:                                              ; preds = %143, %133
  %154 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %127, %133 ], [ %150, %143 ]
  %155 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %128, %133 ], [ %149, %143 ]
  %156 = icmp ult i64 %138, 48
  br i1 %156, label %197, label %157

157:                                              ; preds = %153, %157
  %158 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %175, %157 ], [ %154, %153 ]
  %159 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %174, %157 ], [ %155, %153 ]
  %160 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %158 to i8*
  %161 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 16, i1 false) #12
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %159, i64 1
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 1
  %164 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %163 to i8*
  %165 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 16, i1 false) #12
  %166 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %159, i64 2
  %167 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 2
  %168 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %167 to i8*
  %169 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #12
  %170 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %159, i64 3
  %171 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 3
  %172 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %171 to i8*
  %173 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %170 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false) #12
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %159, i64 4
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 4
  %176 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %174, %75
  br i1 %176, label %197, label %157

177:                                              ; preds = %126
  %178 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %129 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %128 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = trunc i64 %179 to i32
  %183 = trunc i64 %181 to i32
  %184 = icmp slt i32 %182, %183
  %185 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %127 to i8*
  br i1 %184, label %186, label %189

186:                                              ; preds = %177
  %187 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %187, i64 16, i1 false) #12
  %188 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %129, i64 1
  br label %192

189:                                              ; preds = %177
  %190 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %190, i64 16, i1 false) #12
  %191 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %128, i64 1
  br label %192

192:                                              ; preds = %189, %186
  %193 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %188, %186 ], [ %129, %189 ]
  %194 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %128, %186 ], [ %191, %189 ]
  %195 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %127, i64 1
  %196 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %194, %75
  br i1 %196, label %79, label %126

197:                                              ; preds = %153, %157, %102, %106, %68, %131, %79, %33, %31, %19, %24, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"*, %"struct.v8::internal::compiler::CaseInfo"*, %class.anon.1640* dereferenceable(1), i64, i64, %"struct.v8::internal::compiler::CaseInfo"*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %6 to i64
  %10 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  %11 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  %12 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  %13 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  %14 = alloca %"struct.v8::internal::compiler::CaseInfo", align 8
  %15 = icmp eq i64 %5, 0
  br i1 %15, label %454, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %1 to i64
  %18 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %0 to i64
  %19 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %14 to i8*
  %20 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %13 to i8*
  %21 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %12 to i8*
  %22 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %11 to i8*
  br label %23

23:                                               ; preds = %16, %447
  %24 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %2, %16 ], [ %452, %447 ]
  %25 = phi i64 [ %4, %16 ], [ %451, %447 ]
  %26 = phi i64 [ %5, %16 ], [ %450, %447 ]
  %27 = phi i64 [ %17, %16 ], [ %449, %447 ]
  %28 = phi i64 [ %18, %16 ], [ %448, %447 ]
  %29 = icmp sgt i64 %25, %7
  %30 = icmp sgt i64 %26, %7
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = icmp eq i64 %25, 0
  br i1 %33, label %454, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  br label %239

38:                                               ; preds = %23
  %39 = inttoptr i64 %28 to %"struct.v8::internal::compiler::CaseInfo"*
  %40 = inttoptr i64 %27 to %"struct.v8::internal::compiler::CaseInfo"*
  %41 = icmp sgt i64 %25, %26
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %39, %40
  br i1 %43, label %454, label %44

44:                                               ; preds = %42
  %45 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %40, i64 -1, i32 0
  %46 = bitcast i32* %45 to i8*
  %47 = sub i64 0, %28
  %48 = getelementptr i8, i8* %46, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = lshr i64 %49, 4
  %51 = add nuw nsw i64 %50, 1
  %52 = and i64 %51, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %44, %54
  %55 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %61, %54 ], [ %6, %44 ]
  %56 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %60, %54 ], [ %39, %44 ]
  %57 = phi i64 [ %62, %54 ], [ %52, %44 ]
  %58 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %55 to i8*
  %59 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #12
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %56, i64 1
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %55, i64 1
  %62 = add i64 %57, -1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %54, !llvm.loop !457

64:                                               ; preds = %54, %44
  %65 = phi %"struct.v8::internal::compiler::CaseInfo"* [ undef, %44 ], [ %61, %54 ]
  %66 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %6, %44 ], [ %61, %54 ]
  %67 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %39, %44 ], [ %60, %54 ]
  %68 = icmp ult i8* %48, inttoptr (i64 48 to i8*)
  br i1 %68, label %96, label %132

69:                                               ; preds = %38
  %70 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %24, %40
  br i1 %70, label %454, label %71

71:                                               ; preds = %69
  %72 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %24, i64 -1, i32 0
  %73 = bitcast i32* %72 to i8*
  %74 = sub i64 0, %27
  %75 = getelementptr i8, i8* %73, i64 %74
  %76 = ptrtoint i8* %75 to i64
  %77 = lshr i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %71, %81
  %82 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %88, %81 ], [ %6, %71 ]
  %83 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %87, %81 ], [ %40, %71 ]
  %84 = phi i64 [ %89, %81 ], [ %79, %71 ]
  %85 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %82 to i8*
  %86 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #12
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %83, i64 1
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %82, i64 1
  %89 = add i64 %84, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %81, !llvm.loop !458

91:                                               ; preds = %81, %71
  %92 = phi %"struct.v8::internal::compiler::CaseInfo"* [ undef, %71 ], [ %88, %81 ]
  %93 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %6, %71 ], [ %88, %81 ]
  %94 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %40, %71 ], [ %87, %81 ]
  %95 = icmp ult i8* %75, inttoptr (i64 48 to i8*)
  br i1 %95, label %152, label %219

96:                                               ; preds = %132, %64
  %97 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %65, %64 ], [ %150, %132 ]
  %98 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %97, %6
  br i1 %98, label %454, label %99

99:                                               ; preds = %96, %127
  %100 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %129, %127 ], [ %6, %96 ]
  %101 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %130, %127 ], [ %39, %96 ]
  %102 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %128, %127 ], [ %40, %96 ]
  %103 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %102, %24
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %97 to i64
  %106 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %100 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %454, label %109

109:                                              ; preds = %104
  %110 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %101 to i8*
  %111 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %100 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 %107, i1 false) #12
  br label %454

112:                                              ; preds = %99
  %113 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %102 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %100 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = trunc i64 %114 to i32
  %118 = trunc i64 %116 to i32
  %119 = icmp slt i32 %117, %118
  %120 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %101 to i8*
  br i1 %119, label %121, label %124

121:                                              ; preds = %112
  %122 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %122, i64 16, i1 false) #12
  %123 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %102, i64 1
  br label %127

124:                                              ; preds = %112
  %125 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %125, i64 16, i1 false) #12
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %100, i64 1
  br label %127

127:                                              ; preds = %124, %121
  %128 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %123, %121 ], [ %102, %124 ]
  %129 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %100, %121 ], [ %126, %124 ]
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %101, i64 1
  %131 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %129, %97
  br i1 %131, label %454, label %99

132:                                              ; preds = %64, %132
  %133 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %150, %132 ], [ %66, %64 ]
  %134 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %149, %132 ], [ %67, %64 ]
  %135 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %133 to i8*
  %136 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #12
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %134, i64 1
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %133, i64 1
  %139 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %138 to i8*
  %140 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #12
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %134, i64 2
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %133, i64 2
  %143 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %142 to i8*
  %144 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #12
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %134, i64 3
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %133, i64 3
  %147 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %146 to i8*
  %148 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #12
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %134, i64 4
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %133, i64 4
  %151 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %149, %40
  br i1 %151, label %96, label %132

152:                                              ; preds = %219, %91
  %153 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %92, %91 ], [ %237, %219 ]
  %154 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %153, %6
  br i1 %154, label %454, label %155

155:                                              ; preds = %152, %202
  %156 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %212, %202 ], [ %24, %152 ]
  %157 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %216, %202 ], [ %153, %152 ]
  %158 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %215, %202 ], [ %40, %152 ]
  %159 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %158, %39
  br i1 %159, label %160, label %202

160:                                              ; preds = %155
  %161 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %157, i64 -1, i32 0
  %162 = ptrtoint i32* %161 to i64
  %163 = sub i64 %162, %9
  %164 = lshr i64 %163, 4
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 3
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %168
  %169 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %172, %168 ], [ %157, %160 ]
  %170 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %173, %168 ], [ %156, %160 ]
  %171 = phi i64 [ %176, %168 ], [ %166, %160 ]
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %169, i64 -1
  %173 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %170, i64 -1
  %174 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %173 to i8*
  %175 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 16, i1 false) #12
  %176 = add i64 %171, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %168, !llvm.loop !459

178:                                              ; preds = %168, %160
  %179 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %157, %160 ], [ %172, %168 ]
  %180 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %156, %160 ], [ %173, %168 ]
  %181 = icmp ult i64 %163, 48
  br i1 %181, label %454, label %182

182:                                              ; preds = %178, %182
  %183 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %197, %182 ], [ %179, %178 ]
  %184 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %198, %182 ], [ %180, %178 ]
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %183, i64 -1
  %186 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %184, i64 -1
  %187 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %186 to i8*
  %188 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 16, i1 false) #12
  %189 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %183, i64 -2
  %190 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %184, i64 -2
  %191 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %190 to i8*
  %192 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %189 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %192, i64 16, i1 false) #12
  %193 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %183, i64 -3
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %184, i64 -3
  %195 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %194 to i8*
  %196 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 16, i1 false) #12
  %197 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %183, i64 -4
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %184, i64 -4
  %199 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %198 to i8*
  %200 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %197 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 16, i1 false) #12
  %201 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %197, %6
  br i1 %201, label %454, label %182

202:                                              ; preds = %155
  %203 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %158, i64 -1
  %204 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %157, i64 -1
  %205 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %203 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = trunc i64 %206 to i32
  %210 = trunc i64 %208 to i32
  %211 = icmp slt i32 %209, %210
  %212 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %156, i64 -1
  %213 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %212 to i8*
  %214 = select i1 %211, %"struct.v8::internal::compiler::CaseInfo"* %203, %"struct.v8::internal::compiler::CaseInfo"* %204
  %215 = select i1 %211, %"struct.v8::internal::compiler::CaseInfo"* %203, %"struct.v8::internal::compiler::CaseInfo"* %158
  %216 = select i1 %211, %"struct.v8::internal::compiler::CaseInfo"* %157, %"struct.v8::internal::compiler::CaseInfo"* %204
  %217 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %214 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %217, i64 16, i1 false) #12
  %218 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %216, %6
  br i1 %218, label %454, label %155

219:                                              ; preds = %91, %219
  %220 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %237, %219 ], [ %93, %91 ]
  %221 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %236, %219 ], [ %94, %91 ]
  %222 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %220 to i8*
  %223 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 16, i1 false) #12
  %224 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 1
  %225 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %220, i64 1
  %226 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %225 to i8*
  %227 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 16, i1 false) #12
  %228 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 2
  %229 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %220, i64 2
  %230 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %229 to i8*
  %231 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %228 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 16, i1 false) #12
  %232 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 3
  %233 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %220, i64 3
  %234 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %233 to i8*
  %235 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 16, i1 false) #12
  %236 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %221, i64 4
  %237 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %220, i64 4
  %238 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %236, %24
  br i1 %238, label %152, label %219

239:                                              ; preds = %34, %246
  %240 = phi i64 [ %25, %34 ], [ %250, %246 ]
  %241 = phi i64 [ %28, %34 ], [ %249, %246 ]
  %242 = inttoptr i64 %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = trunc i64 %243 to i32
  %245 = icmp slt i32 %37, %244
  br i1 %245, label %252, label %246

246:                                              ; preds = %239
  %247 = inttoptr i64 %241 to %"struct.v8::internal::compiler::CaseInfo"*
  %248 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %247, i64 1
  %249 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %248 to i64
  %250 = add nsw i64 %240, -1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %454, label %239

252:                                              ; preds = %239
  %253 = inttoptr i64 %27 to %"struct.v8::internal::compiler::CaseInfo"*
  %254 = inttoptr i64 %241 to %"struct.v8::internal::compiler::CaseInfo"*
  %255 = icmp slt i64 %240, %26
  br i1 %255, label %256, label %287

256:                                              ; preds = %252
  %257 = sdiv i64 %26, 2
  %258 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %253, i64 %257
  %259 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %258 to i64
  %260 = sub i64 %27, %241
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %282, label %262

262:                                              ; preds = %256
  %263 = ashr exact i64 %260, 4
  %264 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %258 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %267, %262
  %268 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %254, %262 ], [ %280, %267 ]
  %269 = phi i64 [ %263, %262 ], [ %279, %267 ]
  %270 = lshr i64 %269, 1
  %271 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %268, i64 %270
  %272 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = trunc i64 %273 to i32
  %275 = icmp slt i32 %266, %274
  %276 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %271, i64 1
  %277 = xor i64 %270, -1
  %278 = add i64 %269, %277
  %279 = select i1 %275, i64 %270, i64 %278
  %280 = select i1 %275, %"struct.v8::internal::compiler::CaseInfo"* %268, %"struct.v8::internal::compiler::CaseInfo"* %276
  %281 = icmp eq i64 %279, 0
  br i1 %281, label %282, label %267

282:                                              ; preds = %267, %256
  %283 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %254, %256 ], [ %280, %267 ]
  %284 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %283 to i64
  %285 = sub i64 %284, %241
  %286 = ashr exact i64 %285, 4
  br label %325

287:                                              ; preds = %252
  %288 = icmp eq i64 %240, 1
  br i1 %288, label %289, label %293

289:                                              ; preds = %287
  %290 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %290)
  %291 = inttoptr i64 %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %290, i8* align 8 %291, i64 16, i1 false) #12
  %292 = inttoptr i64 %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %292, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* nonnull align 8 %290, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %290)
  br label %454

293:                                              ; preds = %287
  %294 = sdiv i64 %240, 2
  %295 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %254, i64 %294
  %296 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %295 to i64
  %297 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %24 to i64
  %298 = sub i64 %297, %27
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %320, label %300

300:                                              ; preds = %293
  %301 = ashr exact i64 %298, 4
  %302 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %295 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = trunc i64 %303 to i32
  br label %305

305:                                              ; preds = %305, %300
  %306 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %253, %300 ], [ %318, %305 ]
  %307 = phi i64 [ %301, %300 ], [ %317, %305 ]
  %308 = lshr i64 %307, 1
  %309 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %306, i64 %308
  %310 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = trunc i64 %311 to i32
  %313 = icmp slt i32 %312, %304
  %314 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %309, i64 1
  %315 = xor i64 %308, -1
  %316 = add i64 %307, %315
  %317 = select i1 %313, i64 %316, i64 %308
  %318 = select i1 %313, %"struct.v8::internal::compiler::CaseInfo"* %314, %"struct.v8::internal::compiler::CaseInfo"* %306
  %319 = icmp eq i64 %317, 0
  br i1 %319, label %320, label %305

320:                                              ; preds = %305, %293
  %321 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %253, %293 ], [ %318, %305 ]
  %322 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %321 to i64
  %323 = sub i64 %322, %27
  %324 = ashr exact i64 %323, 4
  br label %325

325:                                              ; preds = %320, %282
  %326 = phi i64 [ %284, %282 ], [ %296, %320 ]
  %327 = phi i64 [ %259, %282 ], [ %322, %320 ]
  %328 = phi i64 [ %257, %282 ], [ %324, %320 ]
  %329 = phi i64 [ %286, %282 ], [ %294, %320 ]
  %330 = sub nsw i64 %240, %329
  %331 = sub nsw i64 %26, %328
  %332 = inttoptr i64 %326 to %"struct.v8::internal::compiler::CaseInfo"*
  %333 = inttoptr i64 %327 to %"struct.v8::internal::compiler::CaseInfo"*
  %334 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %332, %253
  br i1 %334, label %439, label %335

335:                                              ; preds = %325
  %336 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %253, %333
  br i1 %336, label %439, label %337

337:                                              ; preds = %335
  %338 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %332, i64 1
  %339 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %338, %253
  br i1 %339, label %340, label %350

340:                                              ; preds = %337
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  %341 = inttoptr i64 %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %341, i64 16, i1 false) #12
  %342 = sub i64 %327, %27
  %343 = ashr exact i64 %342, 4
  %344 = icmp eq i64 %342, 0
  br i1 %344, label %347, label %345

345:                                              ; preds = %340
  %346 = inttoptr i64 %27 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %341, i8* align 8 %346, i64 %342, i1 false) #12
  br label %347

347:                                              ; preds = %345, %340
  %348 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %332, i64 %343
  %349 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* nonnull align 8 %22, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  br label %439

350:                                              ; preds = %337
  %351 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %253, i64 1
  %352 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %351, %333
  br i1 %352, label %353, label %370

353:                                              ; preds = %350
  %354 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %333, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %355 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %355, i64 16, i1 false) #12
  %356 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %354 to i64
  %357 = sub i64 %356, %326
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %361

359:                                              ; preds = %353
  %360 = inttoptr i64 %326 to i8*
  br label %367

361:                                              ; preds = %353
  %362 = ashr exact i64 %357, 4
  %363 = sub nsw i64 0, %362
  %364 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %333, i64 %363
  %365 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %364 to i8*
  %366 = inttoptr i64 %326 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 %357, i1 false) #12
  br label %367

367:                                              ; preds = %361, %359
  %368 = phi i8* [ %360, %359 ], [ %366, %361 ]
  %369 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %333, %359 ], [ %364, %361 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %368, i8* nonnull align 8 %21, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  br label %439

370:                                              ; preds = %350
  %371 = sub i64 %27, %326
  %372 = ashr exact i64 %371, 4
  %373 = sub i64 %327, %27
  %374 = ashr exact i64 %373, 4
  %375 = icmp eq i64 %372, %374
  br i1 %375, label %376, label %405

376:                                              ; preds = %370
  %377 = getelementptr %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %253, i64 -1
  %378 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %377 to i8*
  %379 = sub i64 0, %326
  %380 = getelementptr i8, i8* %378, i64 %379
  %381 = ptrtoint i8* %380 to i64
  %382 = and i64 %381, 16
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %389

384:                                              ; preds = %376
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %385 = inttoptr i64 %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %385, i64 16, i1 false) #12
  %386 = inttoptr i64 %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %386, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* nonnull align 8 %20, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  %387 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %332, i64 1
  %388 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %253, i64 1
  br label %389

389:                                              ; preds = %384, %376
  %390 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %388, %384 ], [ %253, %376 ]
  %391 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %387, %384 ], [ %332, %376 ]
  %392 = icmp ult i8* %380, inttoptr (i64 16 to i8*)
  br i1 %392, label %439, label %393

393:                                              ; preds = %389, %393
  %394 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %403, %393 ], [ %390, %389 ]
  %395 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %402, %393 ], [ %391, %389 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %396 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %395 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %396, i64 16, i1 false) #12
  %397 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %394 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %396, i8* align 8 %397, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %397, i8* nonnull align 8 %20, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  %398 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %395, i64 1
  %399 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %394, i64 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %400 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %400, i64 16, i1 false) #12
  %401 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %399 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %400, i8* align 8 %401, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* nonnull align 8 %20, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  %402 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %395, i64 2
  %403 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %394, i64 2
  %404 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %402, %253
  br i1 %404, label %439, label %393

405:                                              ; preds = %370, %405
  %406 = phi i64 [ %408, %405 ], [ %374, %370 ]
  %407 = phi i64 [ %406, %405 ], [ %372, %370 ]
  %408 = srem i64 %407, %406
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %405

410:                                              ; preds = %405
  %411 = icmp eq i64 %406, 0
  br i1 %411, label %414, label %412

412:                                              ; preds = %410
  %413 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %332, i64 %406
  br label %416

414:                                              ; preds = %436, %410
  %415 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %332, i64 %374
  br label %439

416:                                              ; preds = %436, %412
  %417 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %413, %412 ], [ %418, %436 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  %418 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %417, i64 -1
  %419 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %418 to i64
  %420 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %418 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %420, i64 16, i1 false) #12
  %421 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %418, i64 %372
  br label %422

422:                                              ; preds = %422, %416
  %423 = phi i64 [ %419, %416 ], [ %425, %422 ]
  %424 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %421, %416 ], [ %434, %422 ]
  %425 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %424 to i64
  %426 = inttoptr i64 %423 to i8*
  %427 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %424 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %426, i8* align 8 %427, i64 16, i1 false) #12
  %428 = sub i64 %327, %425
  %429 = ashr exact i64 %428, 4
  %430 = icmp slt i64 %372, %429
  %431 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %424, i64 %372
  %432 = sub nsw i64 %372, %429
  %433 = getelementptr inbounds %"struct.v8::internal::compiler::CaseInfo", %"struct.v8::internal::compiler::CaseInfo"* %332, i64 %432
  %434 = select i1 %430, %"struct.v8::internal::compiler::CaseInfo"* %431, %"struct.v8::internal::compiler::CaseInfo"* %433
  %435 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %434, %418
  br i1 %435, label %436, label %422

436:                                              ; preds = %422
  %437 = bitcast %"struct.v8::internal::compiler::CaseInfo"* %424 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %437, i8* nonnull align 8 %19, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  %438 = icmp eq %"struct.v8::internal::compiler::CaseInfo"* %418, %332
  br i1 %438, label %414, label %416

439:                                              ; preds = %389, %393, %414, %367, %347, %325, %335
  %440 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %332, %335 ], [ %333, %325 ], [ %348, %347 ], [ %369, %367 ], [ %415, %414 ], [ %253, %393 ], [ %253, %389 ]
  %441 = add nsw i64 %329, %328
  %442 = add nsw i64 %330, %331
  %443 = icmp slt i64 %441, %442
  br i1 %443, label %444, label %446

444:                                              ; preds = %439
  %445 = ptrtoint %"struct.v8::internal::compiler::CaseInfo"* %440 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %254, %"struct.v8::internal::compiler::CaseInfo"* %332, %"struct.v8::internal::compiler::CaseInfo"* %440, %class.anon.1640* dereferenceable(1) %3, i64 %329, i64 %328, %"struct.v8::internal::compiler::CaseInfo"* %6, i64 %7)
  br label %447

446:                                              ; preds = %439
  tail call void @_ZNSt3__115__inplace_mergeIRZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEvEUlNS3_8CaseInfoES5_E_NS_11__wrap_iterIPS5_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.v8::internal::compiler::CaseInfo"* %440, %"struct.v8::internal::compiler::CaseInfo"* %333, %"struct.v8::internal::compiler::CaseInfo"* %24, %class.anon.1640* dereferenceable(1) %3, i64 %330, i64 %331, %"struct.v8::internal::compiler::CaseInfo"* %6, i64 %7)
  br label %447

447:                                              ; preds = %444, %446
  %448 = phi i64 [ %445, %444 ], [ %241, %446 ]
  %449 = phi i64 [ %327, %444 ], [ %326, %446 ]
  %450 = phi i64 [ %331, %444 ], [ %328, %446 ]
  %451 = phi i64 [ %330, %444 ], [ %329, %446 ]
  %452 = phi %"struct.v8::internal::compiler::CaseInfo"* [ %24, %444 ], [ %440, %446 ]
  %453 = icmp eq i64 %450, 0
  br i1 %453, label %454, label %23

454:                                              ; preds = %447, %32, %246, %127, %202, %178, %182, %8, %289, %152, %109, %104, %96, %69, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !47
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !47
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !47
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare i64 @_ZNK2v88internal8compiler20FrameStateDescriptor12GetTotalSizeEv(%"class.v8::internal::compiler::FrameStateDescriptor"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal9LocalHeap8IsParkedEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #3

declare void @_ZN2v88internal9LocalHeap12ParkSlowPathENS1_11ThreadStateE(%"class.v8::internal::LocalHeap"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal9LocalHeap14UnparkSlowPathEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler28JSToWasmFrameStateDescriptorC1EPNS0_4ZoneENS1_14FrameStateTypeENS0_14BytecodeOffsetENS1_23OutputFrameStateCombineEmmmNS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPNS1_20FrameStateDescriptorEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::compiler::JSToWasmFrameStateDescriptor"*, %"class.v8::internal::Zone"*, i32, i32, i64, i64, i64, i64, i64, %"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::Signature.1670"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal8compiler20FrameStateDescriptorC1EPNS0_4ZoneENS1_14FrameStateTypeENS0_14BytecodeOffsetENS1_23OutputFrameStateCombineEmmmNS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPS2_(%"class.v8::internal::compiler::FrameStateDescriptor"*, %"class.v8::internal::Zone"*, i32, i32, i64, i64, i64, i64, i64, %"class.v8::internal::compiler::FrameStateDescriptor"*) unnamed_addr #3

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.1332"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.1677"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.1332", %"class.std::__1::vector.1332"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.1332", %"class.std::__1::vector.1332"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.1677"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.1332"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.1332", %"class.std::__1::vector.1332"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.1332", %"class.std::__1::vector.1332"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.1334"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.1332"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #13
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #12
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !47
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.1332"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !460
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #12
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #12
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1370"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1370"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1370"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1370"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %202, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #12
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1374"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"** %20, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !463

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %45, null
  br i1 %46, label %204, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1374"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1374"* %43, %"struct.std::__1::__hash_node_base.1374"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %82, null
  br i1 %83, label %204, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %146

86:                                               ; preds = %84, %135
  %87 = phi %"struct.std::__1::__hash_node_base.1374"* [ %139, %135 ], [ %82, %84 ]
  %88 = phi i64 [ %137, %135 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1374"* [ %136, %135 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1374"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %135, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %102, null
  br i1 %103, label %134, label %141

104:                                              ; preds = %141, %115
  %105 = phi %"struct.std::__1::__hash_node_base.1374"* [ %107, %115 ], [ %87, %141 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %107, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %107, i64 2
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, align 8
  %112 = bitcast %"struct.std::__1::__hash_node_base.1374"* %110 to %"class.v8::internal::compiler::Node"**
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = icmp eq %"class.v8::internal::compiler::Node"* %111, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %109
  %116 = load i32, i32* %144, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %107, i64 3
  %118 = bitcast %"struct.std::__1::__hash_node_base.1374"* %117 to i32*
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %116, %119
  br i1 %120, label %104, label %121

121:                                              ; preds = %115, %109, %104
  %122 = ptrtoint %"struct.std::__1::__hash_node_base.1374"* %107 to i64
  %123 = bitcast %"struct.std::__1::__hash_node_base.1374"* %105 to i64*
  %124 = bitcast %"struct.std::__1::__hash_node_base.1374"* %89 to i64*
  store i64 %122, i64* %124, align 8
  %125 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %125, i64 %97
  %127 = bitcast %"struct.std::__1::__hash_node_base.1374"** %126 to i64**
  %128 = load i64*, i64** %127, align 8
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %123, align 8
  %130 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %130, i64 %97
  %132 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %132, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"* %87, %"struct.std::__1::__hash_node_base.1374"** %133, align 8
  br label %135

134:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1374"* %89, %"struct.std::__1::__hash_node_base.1374"** %101, align 8
  br label %135

135:                                              ; preds = %134, %121, %96
  %136 = phi %"struct.std::__1::__hash_node_base.1374"* [ %87, %134 ], [ %89, %121 ], [ %87, %96 ]
  %137 = phi i64 [ %97, %134 ], [ %88, %121 ], [ %88, %96 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %139, null
  br i1 %140, label %204, label %86

141:                                              ; preds = %99
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %87, i64 2
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %87, i64 3
  %144 = bitcast %"struct.std::__1::__hash_node_base.1374"* %143 to i32*
  %145 = bitcast %"struct.std::__1::__hash_node_base.1374"* %142 to %"class.v8::internal::compiler::Node"**
  br label %104

146:                                              ; preds = %84, %196
  %147 = phi %"struct.std::__1::__hash_node_base.1374"* [ %200, %196 ], [ %82, %84 ]
  %148 = phi i64 [ %198, %196 ], [ %78, %84 ]
  %149 = phi %"struct.std::__1::__hash_node_base.1374"* [ %197, %196 ], [ %45, %84 ]
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %147, i64 1
  %151 = bitcast %"struct.std::__1::__hash_node_base.1374"* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, %85
  %154 = icmp eq i64 %153, %148
  br i1 %154, label %196, label %155

155:                                              ; preds = %146
  %156 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %156, i64 %153
  %158 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %157, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %147, i64 2
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %147, i64 3
  %163 = bitcast %"struct.std::__1::__hash_node_base.1374"* %162 to i32*
  %164 = bitcast %"struct.std::__1::__hash_node_base.1374"* %161 to %"class.v8::internal::compiler::Node"**
  br label %166

165:                                              ; preds = %155
  store %"struct.std::__1::__hash_node_base.1374"* %149, %"struct.std::__1::__hash_node_base.1374"** %157, align 8
  br label %196

166:                                              ; preds = %160, %177
  %167 = phi %"struct.std::__1::__hash_node_base.1374"* [ %169, %177 ], [ %147, %160 ]
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %167, i64 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %169, null
  br i1 %170, label %183, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %169, i64 2
  %173 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, align 8
  %174 = bitcast %"struct.std::__1::__hash_node_base.1374"* %172 to %"class.v8::internal::compiler::Node"**
  %175 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, align 8
  %176 = icmp eq %"class.v8::internal::compiler::Node"* %173, %175
  br i1 %176, label %177, label %183

177:                                              ; preds = %171
  %178 = load i32, i32* %163, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %169, i64 3
  %180 = bitcast %"struct.std::__1::__hash_node_base.1374"* %179 to i32*
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %178, %181
  br i1 %182, label %166, label %183

183:                                              ; preds = %171, %166, %177
  %184 = ptrtoint %"struct.std::__1::__hash_node_base.1374"* %169 to i64
  %185 = bitcast %"struct.std::__1::__hash_node_base.1374"* %167 to i64*
  %186 = bitcast %"struct.std::__1::__hash_node_base.1374"* %149 to i64*
  store i64 %184, i64* %186, align 8
  %187 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %187, i64 %153
  %189 = bitcast %"struct.std::__1::__hash_node_base.1374"** %188 to i64**
  %190 = load i64*, i64** %189, align 8
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %185, align 8
  %192 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %21, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %192, i64 %153
  %194 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %194, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"* %147, %"struct.std::__1::__hash_node_base.1374"** %195, align 8
  br label %196

196:                                              ; preds = %146, %183, %165
  %197 = phi %"struct.std::__1::__hash_node_base.1374"* [ %147, %165 ], [ %149, %183 ], [ %147, %146 ]
  %198 = phi i64 [ %153, %165 ], [ %148, %183 ], [ %148, %146 ]
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %197, i64 0, i32 0
  %200 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %199, align 8
  %201 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %200, null
  br i1 %201, label %204, label %146

202:                                              ; preds = %2
  %203 = bitcast %"class.std::__1::__hash_table.1370"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 16, i1 false)
  br label %204

204:                                              ; preds = %196, %135, %77, %42, %202
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

declare void @_ZN2v88internal8compiler20InstructionSchedulerC1EPNS0_4ZoneEPNS1_19InstructionSequenceE(%"class.v8::internal::compiler::InstructionScheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::InstructionSequence"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiN2v88internal13ZoneAllocatorIiEEE8__appendEmRKi(%"class.std::__1::vector.1194"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i32* %2 to i8*
  %5 = bitcast i32* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.1194", %"class.std::__1::vector.1194"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1194", %"class.std::__1::vector.1194"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i32*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i32, i32* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 2
  %22 = add i64 %21, -4
  %23 = lshr exact i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 8
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i32* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i32* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i32, i32* %16, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i32* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i32, i32* %2, align 4
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds i32, i32* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !464

44:                                               ; preds = %37, %26
  %45 = phi i32* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 28
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 2
  %49 = add i64 %48, -4
  %50 = lshr exact i64 %49, 2
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i32, i32* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i32* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 9223372036854775800
  %59 = getelementptr i32, i32* %16, i64 %58
  %60 = add nsw i64 %58, -8
  %61 = lshr exact i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i32, i32* %2, align 4, !alias.scope !465
  %68 = insertelement <4 x i32> undef, i32 %67, i32 0
  %69 = shufflevector <4 x i32> %68, <4 x i32> undef, <4 x i32> zeroinitializer
  %70 = insertelement <4 x i32> undef, i32 %67, i32 0
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> zeroinitializer
  %72 = load i32, i32* %2, align 4, !alias.scope !465
  %73 = insertelement <4 x i32> undef, i32 %72, i32 0
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> zeroinitializer
  %75 = insertelement <4 x i32> undef, i32 %72, i32 0
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i32, i32* %16, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %81, align 4, !alias.scope !468, !noalias !465
  %82 = getelementptr i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %83, align 4, !alias.scope !468, !noalias !465
  %84 = or i64 %78, 8
  %85 = getelementptr i32, i32* %16, i64 %84
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %86, align 4, !alias.scope !468, !noalias !465
  %87 = getelementptr i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %88, align 4, !alias.scope !468, !noalias !465
  %89 = add i64 %78, 16
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !470

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i32, i32* %16, i64 %93
  %97 = load i32, i32* %2, align 4, !alias.scope !465
  %98 = insertelement <4 x i32> undef, i32 %97, i32 0
  %99 = shufflevector <4 x i32> %98, <4 x i32> undef, <4 x i32> zeroinitializer
  %100 = insertelement <4 x i32> undef, i32 %97, i32 0
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> zeroinitializer
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %102, align 4, !alias.scope !468, !noalias !465
  %103 = getelementptr i32, i32* %96, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %104, align 4, !alias.scope !468, !noalias !465
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i32* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i32* [ %126, %109 ], [ %45, %44 ]
  %111 = load i32, i32* %2, align 4
  store i32 %111, i32* %110, align 4
  %112 = getelementptr inbounds i32, i32* %110, i64 1
  %113 = load i32, i32* %2, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds i32, i32* %110, i64 2
  %115 = load i32, i32* %2, align 4
  store i32 %115, i32* %114, align 4
  %116 = getelementptr inbounds i32, i32* %110, i64 3
  %117 = load i32, i32* %2, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %110, i64 4
  %119 = load i32, i32* %2, align 4
  store i32 %119, i32* %118, align 4
  %120 = getelementptr inbounds i32, i32* %110, i64 5
  %121 = load i32, i32* %2, align 4
  store i32 %121, i32* %120, align 4
  %122 = getelementptr inbounds i32, i32* %110, i64 6
  %123 = load i32, i32* %2, align 4
  store i32 %123, i32* %122, align 4
  %124 = getelementptr inbounds i32, i32* %110, i64 7
  %125 = load i32, i32* %2, align 4
  store i32 %125, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %110, i64 8
  %127 = icmp eq i32* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !471

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  ret void

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.1194"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 2
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 536870911
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.1194"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #13
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 2
  %142 = icmp ult i64 %141, 268435455
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 1
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %168, label %148

148:                                              ; preds = %139, %143
  %149 = phi i64 [ %146, %143 ], [ 536870911, %139 ]
  %150 = getelementptr inbounds %"class.std::__1::vector.1194", %"class.std::__1::vector.1194"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %151 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %150, align 8
  %152 = shl i64 %149, 2
  %153 = add i64 %152, 7
  %154 = and i64 %153, -8
  %155 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %151, i64 0, i32 2
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %151, i64 0, i32 3
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %158, %156
  %160 = icmp ugt i64 %154, %159
  br i1 %160, label %161, label %163, !prof !2

161:                                              ; preds = %148
  %162 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %151, i64 %154) #12
  br label %165

163:                                              ; preds = %148
  %164 = add i64 %154, %156
  store i64 %164, i64* %155, align 8
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi i64 [ %162, %161 ], [ %156, %163 ]
  %167 = inttoptr i64 %166 to i32*
  br label %168

168:                                              ; preds = %143, %165
  %169 = phi i64 [ %149, %165 ], [ 0, %143 ]
  %170 = phi i32* [ %167, %165 ], [ null, %143 ]
  %171 = getelementptr inbounds i32, i32* %170, i64 %134
  %172 = getelementptr inbounds i32, i32* %170, i64 %169
  %173 = getelementptr inbounds i32, i32* %171, i64 %1
  %174 = shl nsw i64 %1, 2
  %175 = add i64 %174, -4
  %176 = lshr exact i64 %175, 2
  %177 = add nuw nsw i64 %176, 1
  %178 = icmp ult i64 %177, 8
  br i1 %178, label %241, label %179

179:                                              ; preds = %168
  %180 = bitcast i32* %171 to i8*
  %181 = shl nsw i64 %1, 2
  %182 = add i64 %181, -4
  %183 = lshr exact i64 %182, 2
  %184 = add nsw i64 %134, %183
  %185 = add i64 %184, 1
  %186 = getelementptr i32, i32* %170, i64 %185
  %187 = getelementptr i8, i8* %4, i64 1
  %188 = icmp ugt i8* %187, %180
  %189 = icmp ugt i32* %186, %2
  %190 = and i1 %188, %189
  br i1 %190, label %241, label %191

191:                                              ; preds = %179
  %192 = and i64 %177, 9223372036854775800
  %193 = getelementptr i32, i32* %171, i64 %192
  %194 = add nsw i64 %192, -8
  %195 = lshr exact i64 %194, 3
  %196 = add nuw nsw i64 %195, 1
  %197 = and i64 %196, 1
  %198 = icmp eq i64 %194, 0
  br i1 %198, label %226, label %199

199:                                              ; preds = %191
  %200 = sub nuw nsw i64 %196, %197
  %201 = load i32, i32* %2, align 4, !alias.scope !472
  %202 = insertelement <4 x i32> undef, i32 %201, i32 0
  %203 = shufflevector <4 x i32> %202, <4 x i32> undef, <4 x i32> zeroinitializer
  %204 = insertelement <4 x i32> undef, i32 %201, i32 0
  %205 = shufflevector <4 x i32> %204, <4 x i32> undef, <4 x i32> zeroinitializer
  %206 = load i32, i32* %2, align 4, !alias.scope !472
  %207 = insertelement <4 x i32> undef, i32 %206, i32 0
  %208 = shufflevector <4 x i32> %207, <4 x i32> undef, <4 x i32> zeroinitializer
  %209 = insertelement <4 x i32> undef, i32 %206, i32 0
  %210 = shufflevector <4 x i32> %209, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %211

211:                                              ; preds = %211, %199
  %212 = phi i64 [ 0, %199 ], [ %223, %211 ]
  %213 = phi i64 [ %200, %199 ], [ %224, %211 ]
  %214 = getelementptr i32, i32* %171, i64 %212
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %203, <4 x i32>* %215, align 4, !alias.scope !475, !noalias !472
  %216 = getelementptr i32, i32* %214, i64 4
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %217, align 4, !alias.scope !475, !noalias !472
  %218 = or i64 %212, 8
  %219 = getelementptr i32, i32* %171, i64 %218
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %220, align 4, !alias.scope !475, !noalias !472
  %221 = getelementptr i32, i32* %219, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %210, <4 x i32>* %222, align 4, !alias.scope !475, !noalias !472
  %223 = add i64 %212, 16
  %224 = add i64 %213, -2
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %211, !llvm.loop !477

226:                                              ; preds = %211, %191
  %227 = phi i64 [ 0, %191 ], [ %223, %211 ]
  %228 = icmp eq i64 %197, 0
  br i1 %228, label %239, label %229

229:                                              ; preds = %226
  %230 = getelementptr i32, i32* %171, i64 %227
  %231 = load i32, i32* %2, align 4, !alias.scope !472
  %232 = insertelement <4 x i32> undef, i32 %231, i32 0
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> zeroinitializer
  %234 = insertelement <4 x i32> undef, i32 %231, i32 0
  %235 = shufflevector <4 x i32> %234, <4 x i32> undef, <4 x i32> zeroinitializer
  %236 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %236, align 4, !alias.scope !475, !noalias !472
  %237 = getelementptr i32, i32* %230, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !475, !noalias !472
  br label %239

239:                                              ; preds = %226, %229
  %240 = icmp eq i64 %177, %192
  br i1 %240, label %282, label %241

241:                                              ; preds = %239, %179, %168
  %242 = phi i32* [ %171, %179 ], [ %171, %168 ], [ %193, %239 ]
  %243 = ptrtoint i32* %242 to i64
  %244 = add i64 %134, %1
  %245 = add i64 %244, -1
  %246 = getelementptr i32, i32* %170, i64 %245
  %247 = ptrtoint i32* %246 to i64
  %248 = sub i64 %247, %243
  %249 = lshr i64 %248, 2
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 7
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %260, label %253

253:                                              ; preds = %241, %253
  %254 = phi i32* [ %257, %253 ], [ %242, %241 ]
  %255 = phi i64 [ %258, %253 ], [ %251, %241 ]
  %256 = load i32, i32* %2, align 4
  store i32 %256, i32* %254, align 4
  %257 = getelementptr inbounds i32, i32* %254, i64 1
  %258 = add i64 %255, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %253, !llvm.loop !478

260:                                              ; preds = %253, %241
  %261 = phi i32* [ %242, %241 ], [ %257, %253 ]
  %262 = icmp ult i64 %248, 28
  br i1 %262, label %282, label %263

263:                                              ; preds = %260, %263
  %264 = phi i32* [ %280, %263 ], [ %261, %260 ]
  %265 = load i32, i32* %2, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %264, i64 1
  %267 = load i32, i32* %2, align 4
  store i32 %267, i32* %266, align 4
  %268 = getelementptr inbounds i32, i32* %264, i64 2
  %269 = load i32, i32* %2, align 4
  store i32 %269, i32* %268, align 4
  %270 = getelementptr inbounds i32, i32* %264, i64 3
  %271 = load i32, i32* %2, align 4
  store i32 %271, i32* %270, align 4
  %272 = getelementptr inbounds i32, i32* %264, i64 4
  %273 = load i32, i32* %2, align 4
  store i32 %273, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %264, i64 5
  %275 = load i32, i32* %2, align 4
  store i32 %275, i32* %274, align 4
  %276 = getelementptr inbounds i32, i32* %264, i64 6
  %277 = load i32, i32* %2, align 4
  store i32 %277, i32* %276, align 4
  %278 = getelementptr inbounds i32, i32* %264, i64 7
  %279 = load i32, i32* %2, align 4
  store i32 %279, i32* %278, align 4
  %280 = getelementptr inbounds i32, i32* %264, i64 8
  %281 = icmp eq i32* %173, %280
  br i1 %281, label %282, label %263, !llvm.loop !479

282:                                              ; preds = %260, %263, %239
  %283 = ptrtoint i32* %172 to i64
  %284 = ptrtoint i32* %173 to i64
  %285 = getelementptr inbounds %"class.std::__1::vector.1194", %"class.std::__1::vector.1194"* %0, i64 0, i32 0, i32 0
  %286 = load i32*, i32** %285, align 8
  %287 = ptrtoint i32* %286 to i64
  %288 = load i32*, i32** %9, align 8
  %289 = icmp eq i32* %288, %286
  br i1 %289, label %441, label %290

290:                                              ; preds = %282
  %291 = getelementptr i32, i32* %288, i64 -1
  %292 = ptrtoint i32* %291 to i64
  %293 = sub i64 %292, %287
  %294 = lshr i64 %293, 2
  %295 = add nuw nsw i64 %294, 1
  %296 = icmp ult i64 %295, 8
  br i1 %296, label %389, label %297

297:                                              ; preds = %290
  %298 = getelementptr i32, i32* %288, i64 -1
  %299 = ptrtoint i32* %298 to i64
  %300 = sub i64 %299, %287
  %301 = lshr i64 %300, 2
  %302 = xor i64 %301, -1
  %303 = add nsw i64 %134, %302
  %304 = getelementptr i32, i32* %170, i64 %303
  %305 = xor i64 %301, -1
  %306 = getelementptr i32, i32* %288, i64 %305
  %307 = icmp ult i32* %304, %288
  %308 = icmp ult i32* %306, %171
  %309 = and i1 %307, %308
  br i1 %309, label %389, label %310

310:                                              ; preds = %297
  %311 = and i64 %295, 9223372036854775800
  %312 = sub nsw i64 0, %311
  %313 = getelementptr i32, i32* %171, i64 %312
  %314 = sub nsw i64 0, %311
  %315 = getelementptr i32, i32* %288, i64 %314
  %316 = add nsw i64 %311, -8
  %317 = lshr exact i64 %316, 3
  %318 = add nuw nsw i64 %317, 1
  %319 = and i64 %318, 1
  %320 = icmp eq i64 %316, 0
  br i1 %320, label %367, label %321

321:                                              ; preds = %310
  %322 = sub nuw nsw i64 %318, %319
  %323 = getelementptr i32, i32* %171, i64 -1
  %324 = getelementptr i32, i32* %288, i64 -1
  %325 = getelementptr i32, i32* %171, i64 -1
  %326 = getelementptr i32, i32* %288, i64 -1
  br label %327

327:                                              ; preds = %327, %321
  %328 = phi i64 [ 0, %321 ], [ %362, %327 ]
  %329 = phi i64 [ %322, %321 ], [ %363, %327 ]
  %330 = sub i64 0, %328
  %331 = sub i64 0, %328
  %332 = getelementptr inbounds i32, i32* %323, i64 %330
  %333 = getelementptr inbounds i32, i32* %324, i64 %331
  %334 = getelementptr inbounds i32, i32* %333, i64 -3
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4, !alias.scope !480
  %337 = getelementptr inbounds i32, i32* %333, i64 -4
  %338 = getelementptr inbounds i32, i32* %337, i64 -3
  %339 = bitcast i32* %338 to <4 x i32>*
  %340 = load <4 x i32>, <4 x i32>* %339, align 4, !alias.scope !480
  %341 = getelementptr inbounds i32, i32* %332, i64 -3
  %342 = bitcast i32* %341 to <4 x i32>*
  store <4 x i32> %336, <4 x i32>* %342, align 4, !alias.scope !483, !noalias !480
  %343 = getelementptr inbounds i32, i32* %332, i64 -4
  %344 = getelementptr inbounds i32, i32* %343, i64 -3
  %345 = bitcast i32* %344 to <4 x i32>*
  store <4 x i32> %340, <4 x i32>* %345, align 4, !alias.scope !483, !noalias !480
  %346 = sub nuw nsw i64 -8, %328
  %347 = sub nuw nsw i64 -8, %328
  %348 = getelementptr inbounds i32, i32* %325, i64 %346
  %349 = getelementptr inbounds i32, i32* %326, i64 %347
  %350 = getelementptr inbounds i32, i32* %349, i64 -3
  %351 = bitcast i32* %350 to <4 x i32>*
  %352 = load <4 x i32>, <4 x i32>* %351, align 4, !alias.scope !480
  %353 = getelementptr inbounds i32, i32* %349, i64 -4
  %354 = getelementptr inbounds i32, i32* %353, i64 -3
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4, !alias.scope !480
  %357 = getelementptr inbounds i32, i32* %348, i64 -3
  %358 = bitcast i32* %357 to <4 x i32>*
  store <4 x i32> %352, <4 x i32>* %358, align 4, !alias.scope !483, !noalias !480
  %359 = getelementptr inbounds i32, i32* %348, i64 -4
  %360 = getelementptr inbounds i32, i32* %359, i64 -3
  %361 = bitcast i32* %360 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %361, align 4, !alias.scope !483, !noalias !480
  %362 = add i64 %328, 16
  %363 = add i64 %329, -2
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %365, label %327, !llvm.loop !485

365:                                              ; preds = %327
  %366 = sub nuw nsw i64 -16, %328
  br label %367

367:                                              ; preds = %365, %310
  %368 = phi i64 [ 0, %310 ], [ %366, %365 ]
  %369 = icmp eq i64 %319, 0
  br i1 %369, label %387, label %370

370:                                              ; preds = %367
  %371 = getelementptr i32, i32* %171, i64 -1
  %372 = getelementptr i32, i32* %288, i64 -1
  %373 = getelementptr inbounds i32, i32* %371, i64 %368
  %374 = getelementptr inbounds i32, i32* %372, i64 %368
  %375 = getelementptr inbounds i32, i32* %374, i64 -3
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4, !alias.scope !480
  %378 = getelementptr inbounds i32, i32* %374, i64 -4
  %379 = getelementptr inbounds i32, i32* %378, i64 -3
  %380 = bitcast i32* %379 to <4 x i32>*
  %381 = load <4 x i32>, <4 x i32>* %380, align 4, !alias.scope !480
  %382 = getelementptr inbounds i32, i32* %373, i64 -3
  %383 = bitcast i32* %382 to <4 x i32>*
  store <4 x i32> %377, <4 x i32>* %383, align 4, !alias.scope !483, !noalias !480
  %384 = getelementptr inbounds i32, i32* %373, i64 -4
  %385 = getelementptr inbounds i32, i32* %384, i64 -3
  %386 = bitcast i32* %385 to <4 x i32>*
  store <4 x i32> %381, <4 x i32>* %386, align 4, !alias.scope !483, !noalias !480
  br label %387

387:                                              ; preds = %367, %370
  %388 = icmp eq i64 %295, %311
  br i1 %388, label %441, label %389

389:                                              ; preds = %387, %297, %290
  %390 = phi i32* [ %171, %297 ], [ %171, %290 ], [ %313, %387 ]
  %391 = phi i32* [ %288, %297 ], [ %288, %290 ], [ %315, %387 ]
  %392 = getelementptr i32, i32* %391, i64 -1
  %393 = ptrtoint i32* %392 to i64
  %394 = sub i64 %393, %287
  %395 = lshr i64 %394, 2
  %396 = add nuw nsw i64 %395, 1
  %397 = and i64 %396, 7
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %408, label %399

399:                                              ; preds = %389, %399
  %400 = phi i32* [ %403, %399 ], [ %390, %389 ]
  %401 = phi i32* [ %404, %399 ], [ %391, %389 ]
  %402 = phi i64 [ %406, %399 ], [ %397, %389 ]
  %403 = getelementptr inbounds i32, i32* %400, i64 -1
  %404 = getelementptr inbounds i32, i32* %401, i64 -1
  %405 = load i32, i32* %404, align 4
  store i32 %405, i32* %403, align 4
  %406 = add i64 %402, -1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %408, label %399, !llvm.loop !486

408:                                              ; preds = %399, %389
  %409 = phi i32* [ undef, %389 ], [ %403, %399 ]
  %410 = phi i32* [ %390, %389 ], [ %403, %399 ]
  %411 = phi i32* [ %391, %389 ], [ %404, %399 ]
  %412 = icmp ult i64 %394, 28
  br i1 %412, label %441, label %413

413:                                              ; preds = %408, %413
  %414 = phi i32* [ %437, %413 ], [ %410, %408 ]
  %415 = phi i32* [ %438, %413 ], [ %411, %408 ]
  %416 = getelementptr inbounds i32, i32* %414, i64 -1
  %417 = getelementptr inbounds i32, i32* %415, i64 -1
  %418 = load i32, i32* %417, align 4
  store i32 %418, i32* %416, align 4
  %419 = getelementptr inbounds i32, i32* %414, i64 -2
  %420 = getelementptr inbounds i32, i32* %415, i64 -2
  %421 = load i32, i32* %420, align 4
  store i32 %421, i32* %419, align 4
  %422 = getelementptr inbounds i32, i32* %414, i64 -3
  %423 = getelementptr inbounds i32, i32* %415, i64 -3
  %424 = load i32, i32* %423, align 4
  store i32 %424, i32* %422, align 4
  %425 = getelementptr inbounds i32, i32* %414, i64 -4
  %426 = getelementptr inbounds i32, i32* %415, i64 -4
  %427 = load i32, i32* %426, align 4
  store i32 %427, i32* %425, align 4
  %428 = getelementptr inbounds i32, i32* %414, i64 -5
  %429 = getelementptr inbounds i32, i32* %415, i64 -5
  %430 = load i32, i32* %429, align 4
  store i32 %430, i32* %428, align 4
  %431 = getelementptr inbounds i32, i32* %414, i64 -6
  %432 = getelementptr inbounds i32, i32* %415, i64 -6
  %433 = load i32, i32* %432, align 4
  store i32 %433, i32* %431, align 4
  %434 = getelementptr inbounds i32, i32* %414, i64 -7
  %435 = getelementptr inbounds i32, i32* %415, i64 -7
  %436 = load i32, i32* %435, align 4
  store i32 %436, i32* %434, align 4
  %437 = getelementptr inbounds i32, i32* %414, i64 -8
  %438 = getelementptr inbounds i32, i32* %415, i64 -8
  %439 = load i32, i32* %438, align 4
  store i32 %439, i32* %437, align 4
  %440 = icmp eq i32* %438, %286
  br i1 %440, label %441, label %413, !llvm.loop !487

441:                                              ; preds = %408, %413, %387, %282
  %442 = phi i32* [ %171, %282 ], [ %313, %387 ], [ %409, %408 ], [ %437, %413 ]
  %443 = ptrtoint i32* %442 to i64
  store i64 %443, i64* %131, align 8
  store i64 %284, i64* %10, align 8
  store i64 %283, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1374"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_(%"class.std::__1::__hash_table.1370"*, %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = bitcast %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %7) #12
  %9 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %5, i64 %8) #12
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %91, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #12, !range !3
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %9, %11
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %16, %19, %21
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %28, null
  br i1 %29, label %91, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %32, null
  br i1 %33, label %91, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  %36 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %1, i64 0, i32 0
  br i1 %15, label %37, label %66

37:                                               ; preds = %34, %62
  %38 = phi %"struct.std::__1::__hash_node_base.1374"* [ %64, %62 ], [ %32, %34 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %38, i64 1
  %40 = bitcast %"struct.std::__1::__hash_node_base.1374"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %9
  br i1 %42, label %50, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %41, %11
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %41, %11
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i64 [ %46, %45 ], [ %41, %43 ]
  %49 = icmp eq i64 %48, %24
  br i1 %49, label %62, label %91

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %38, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1374"* %51 to %"class.v8::internal::compiler::Node"**
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %55 = icmp eq %"class.v8::internal::compiler::Node"* %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %38, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base.1374"* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = load i32, i32* %3, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %91, label %62

62:                                               ; preds = %56, %50, %47
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %38, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %64, null
  br i1 %65, label %91, label %37

66:                                               ; preds = %34, %87
  %67 = phi %"struct.std::__1::__hash_node_base.1374"* [ %89, %87 ], [ %32, %34 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.1374"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %9
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = and i64 %70, %35
  %74 = icmp eq i64 %73, %24
  br i1 %74, label %87, label %91

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %67, i64 2
  %77 = bitcast %"struct.std::__1::__hash_node_base.1374"* %76 to %"class.v8::internal::compiler::Node"**
  %78 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, align 8
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %80 = icmp eq %"class.v8::internal::compiler::Node"* %78, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %67, i64 3
  %83 = bitcast %"struct.std::__1::__hash_node_base.1374"* %82 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = load i32, i32* %3, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %75, %72, %81
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %67, i64 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %89, null
  br i1 %90, label %91, label %66

91:                                               ; preds = %81, %87, %72, %56, %62, %47, %30, %2, %23
  %92 = phi %"struct.std::__1::__hash_node_base.1374"* [ null, %23 ], [ null, %2 ], [ null, %30 ], [ %38, %56 ], [ null, %62 ], [ null, %47 ], [ %67, %81 ], [ null, %87 ], [ null, %72 ]
  ret %"struct.std::__1::__hash_node_base.1374"* %92
}

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #3

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1374"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JRS6_S8_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1370"*, %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* dereferenceable(16), %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* dereferenceable(16), %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = bitcast %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %9) #12
  %11 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %7, i64 %10) #12
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %93, label %15

15:                                               ; preds = %4
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #12, !range !3
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ult i64 %11, %13
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %18, %21, %23
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %30, null
  br i1 %31, label %93, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %34, null
  br i1 %35, label %93, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput", %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %1, i64 0, i32 0
  br i1 %17, label %39, label %68

39:                                               ; preds = %36, %64
  %40 = phi %"struct.std::__1::__hash_node_base.1374"* [ %66, %64 ], [ %34, %36 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %40, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.1374"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %11
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = icmp ult i64 %43, %13
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %43, %13
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %48, %47 ], [ %43, %45 ]
  %51 = icmp eq i64 %50, %26
  br i1 %51, label %52, label %93

52:                                               ; preds = %49, %39
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %40, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.1374"* %53 to %"class.v8::internal::compiler::Node"**
  %55 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, align 8
  %56 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %57 = icmp eq %"class.v8::internal::compiler::Node"* %55, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %40, i64 3
  %60 = bitcast %"struct.std::__1::__hash_node_base.1374"* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* %5, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %198, label %64

64:                                               ; preds = %58, %52
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %40, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %66, null
  br i1 %67, label %93, label %39

68:                                               ; preds = %36, %89
  %69 = phi %"struct.std::__1::__hash_node_base.1374"* [ %91, %89 ], [ %34, %36 ]
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %69, i64 1
  %71 = bitcast %"struct.std::__1::__hash_node_base.1374"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %11
  %74 = and i64 %72, %37
  %75 = icmp eq i64 %74, %26
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %93

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %69, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.1374"* %78 to %"class.v8::internal::compiler::Node"**
  %80 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, align 8
  %81 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %82 = icmp eq %"class.v8::internal::compiler::Node"* %80, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %69, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base.1374"* %84 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = load i32, i32* %5, align 8
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %198, label %89

89:                                               ; preds = %83, %77
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %69, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %91, null
  br i1 %92, label %93, label %68

93:                                               ; preds = %68, %89, %49, %64, %32, %25, %4
  %94 = phi i64 [ %26, %25 ], [ undef, %4 ], [ %26, %32 ], [ %26, %64 ], [ %26, %49 ], [ %26, %89 ], [ %26, %68 ]
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %96 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %95, align 8, !noalias !488
  %97 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %96, i64 0, i32 2
  %98 = load i64, i64* %97, align 8, !noalias !488
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %96, i64 0, i32 3
  %100 = load i64, i64* %99, align 8, !noalias !488
  %101 = sub i64 %100, %98
  %102 = icmp ult i64 %101, 40
  br i1 %102, label %103, label %105, !prof !2

103:                                              ; preds = %93
  %104 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %96, i64 40) #12, !noalias !488
  br label %107

105:                                              ; preds = %93
  %106 = add i64 %98, 40
  store i64 %106, i64* %97, align 8, !noalias !488
  br label %107

107:                                              ; preds = %103, %105
  %108 = phi i64 [ %104, %103 ], [ %98, %105 ]
  %109 = inttoptr i64 %108 to %"struct.std::__1::__hash_node"*
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 2, i32 0
  %111 = bitcast %"struct.std::__1::pair.1540"* %110 to i8*
  %112 = bitcast %"struct.v8::internal::compiler::InstructionSelector::FrameStateInput"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #12, !noalias !488
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 2, i32 0, i32 1
  %114 = bitcast %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** %3 to i64*
  %115 = load i64, i64* %114, align 8, !noalias !488
  %116 = bitcast %"struct.v8::internal::compiler::InstructionSelector::CachedStateValues"** %113 to i64*
  store i64 %115, i64* %116, align 8, !noalias !488
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 1
  store i64 %11, i64* %117, align 8, !noalias !488
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"* null, %"struct.std::__1::__hash_node_base.1374"** %118, align 8, !noalias !488
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 2, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 1
  %122 = uitofp i64 %121 to float
  %123 = uitofp i64 %13 to float
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 3, i32 0, i32 0
  %125 = load float, float* %124, align 4
  %126 = fmul float %125, %123
  %127 = fcmp olt float %126, %122
  %128 = or i1 %14, %127
  br i1 %128, label %129, label %152

129:                                              ; preds = %107
  %130 = shl i64 %13, 1
  %131 = icmp ult i64 %13, 3
  %132 = tail call i64 @llvm.ctpop.i64(i64 %13) #12, !range !3
  %133 = icmp ugt i64 %132, 1
  %134 = or i1 %131, %133
  %135 = zext i1 %134 to i64
  %136 = or i64 %130, %135
  %137 = fdiv float %122, %125
  %138 = tail call float @llvm.ceil.f32(float %137) #12
  %139 = fptoui float %138 to i64
  %140 = icmp ult i64 %136, %139
  %141 = select i1 %140, i64 %139, i64 %136
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1370"* %0, i64 %141)
  %142 = load i64, i64* %12, align 8
  %143 = tail call i64 @llvm.ctpop.i64(i64 %142) #12, !range !3
  %144 = icmp ugt i64 %143, 1
  br i1 %144, label %148, label %145

145:                                              ; preds = %129
  %146 = add i64 %142, -1
  %147 = and i64 %146, %11
  br label %152

148:                                              ; preds = %129
  %149 = icmp ult i64 %11, %142
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %11, %142
  br label %152

152:                                              ; preds = %150, %148, %145, %107
  %153 = phi i64 [ %13, %107 ], [ %142, %145 ], [ %142, %148 ], [ %142, %150 ]
  %154 = phi i64 [ %94, %107 ], [ %147, %145 ], [ %11, %148 ], [ %151, %150 ]
  %155 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %155, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %156, i64 %154
  %158 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %157, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %158, null
  br i1 %159, label %160, label %188

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.std::__1::__hash_table.1370", %"class.std::__1::__hash_table.1370"* %0, i64 0, i32 1, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %161, i64 0, i32 0
  %163 = bitcast %"struct.std::__1::__hash_node_base.1374"* %161 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = inttoptr i64 %108 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"* %166, %"struct.std::__1::__hash_node_base.1374"** %162, align 8
  %167 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %155, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %167, i64 %154
  store %"struct.std::__1::__hash_node_base.1374"* %161, %"struct.std::__1::__hash_node_base.1374"** %168, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %118, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.1374"* %169, null
  br i1 %170, label %194, label %171

171:                                              ; preds = %160
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %169, i64 1
  %173 = bitcast %"struct.std::__1::__hash_node_base.1374"* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = tail call i64 @llvm.ctpop.i64(i64 %153) #12, !range !3
  %176 = icmp ugt i64 %175, 1
  br i1 %176, label %180, label %177

177:                                              ; preds = %171
  %178 = add i64 %153, -1
  %179 = and i64 %174, %178
  br label %184

180:                                              ; preds = %171
  %181 = icmp ult i64 %174, %153
  br i1 %181, label %184, label %182

182:                                              ; preds = %180
  %183 = urem i64 %174, %153
  br label %184

184:                                              ; preds = %177, %180, %182
  %185 = phi i64 [ %179, %177 ], [ %183, %182 ], [ %174, %180 ]
  %186 = load %"struct.std::__1::__hash_node_base.1374"**, %"struct.std::__1::__hash_node_base.1374"*** %155, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374"*, %"struct.std::__1::__hash_node_base.1374"** %186, i64 %185
  store %"struct.std::__1::__hash_node_base.1374"* %166, %"struct.std::__1::__hash_node_base.1374"** %187, align 8
  br label %194

188:                                              ; preds = %152
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1374", %"struct.std::__1::__hash_node_base.1374"* %158, i64 0, i32 0
  %190 = bitcast %"struct.std::__1::__hash_node_base.1374"* %158 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = inttoptr i64 %108 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1374"* %193, %"struct.std::__1::__hash_node_base.1374"** %189, align 8
  br label %194

194:                                              ; preds = %160, %184, %188
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 0
  %196 = load i64, i64* %119, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %119, align 8
  br label %198

198:                                              ; preds = %83, %58, %194
  %199 = phi i8 [ 1, %194 ], [ 0, %58 ], [ 0, %83 ]
  %200 = phi %"struct.std::__1::__hash_node_base.1374"* [ %195, %194 ], [ %40, %58 ], [ %69, %83 ]
  %201 = insertvalue { %"struct.std::__1::__hash_node_base.1374"*, i8 } undef, %"struct.std::__1::__hash_node_base.1374"* %200, 0
  %202 = insertvalue { %"struct.std::__1::__hash_node_base.1374"*, i8 } %201, i8 %199, 1
  ret { %"struct.std::__1::__hash_node_base.1374"*, i8 } %202
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler13PushParameterENS2_13ZoneAllocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1545"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.v8::internal::compiler::PushParameter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.v8::internal::compiler::PushParameter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %67, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.v8::internal::compiler::PushParameter"*
  %14 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %1, 4
  %18 = add i64 %17, -16
  %19 = lshr exact i64 %18, 4
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"struct.v8::internal::compiler::PushParameter"* [ %29, %23 ], [ %13, %16 ]
  %25 = phi i64 [ %30, %23 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %24, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %26, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %24, i64 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %27 to i64*
  store i64 4294967294, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %24, i64 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %23, !llvm.loop !491

32:                                               ; preds = %23, %16
  %33 = phi %"struct.v8::internal::compiler::PushParameter"* [ %13, %16 ], [ %29, %23 ]
  %34 = icmp ult i64 %18, 112
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %14 to i64
  br label %65

37:                                               ; preds = %32, %37
  %38 = phi %"struct.v8::internal::compiler::PushParameter"* [ %63, %37 ], [ %33, %32 ]
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %39, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 0, i32 1
  %41 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %40 to i64*
  store i64 4294967294, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 1, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %42, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 1, i32 1
  %44 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %43 to i64*
  store i64 4294967294, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 2, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %45, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 2, i32 1
  %47 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %46 to i64*
  store i64 4294967294, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 3, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %48, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 3, i32 1
  %50 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %49 to i64*
  store i64 4294967294, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 4, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %51, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 4, i32 1
  %53 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %52 to i64*
  store i64 4294967294, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 5, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %54, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 5, i32 1
  %56 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %55 to i64*
  store i64 4294967294, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 6, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %57, align 8
  %58 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 6, i32 1
  %59 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %58 to i64*
  store i64 4294967294, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 7, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %60, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 7, i32 1
  %62 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %61 to i64*
  store i64 4294967294, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %38, i64 8
  %64 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %63, %14
  br i1 %64, label %35, label %37

65:                                               ; preds = %12, %35
  %66 = phi i64 [ %36, %35 ], [ %8, %12 ]
  store i64 %66, i64* %7, align 8
  ret void

67:                                               ; preds = %2
  %68 = bitcast %"class.std::__1::vector.1545"* %0 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %8, %69
  %71 = ashr exact i64 %70, 4
  %72 = add i64 %71, %1
  %73 = icmp ugt i64 %72, 134217727
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.1545"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #13
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %5, %69
  %78 = ashr exact i64 %77, 4
  %79 = icmp ult i64 %78, 67108863
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 3
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %103, label %85

85:                                               ; preds = %76, %80
  %86 = phi i64 [ %83, %80 ], [ 134217727, %76 ]
  %87 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %88 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %87, align 8
  %89 = shl i64 %86, 4
  %90 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %88, i64 0, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %88, i64 0, i32 3
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %93, %91
  %95 = icmp ugt i64 %89, %94
  br i1 %95, label %96, label %98, !prof !2

96:                                               ; preds = %85
  %97 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %88, i64 %89) #12
  br label %100

98:                                               ; preds = %85
  %99 = add i64 %91, %89
  store i64 %99, i64* %90, align 8
  br label %100

100:                                              ; preds = %98, %96
  %101 = phi i64 [ %97, %96 ], [ %91, %98 ]
  %102 = inttoptr i64 %101 to %"struct.v8::internal::compiler::PushParameter"*
  br label %103

103:                                              ; preds = %80, %100
  %104 = phi i64 [ %86, %100 ], [ 0, %80 ]
  %105 = phi %"struct.v8::internal::compiler::PushParameter"* [ %102, %100 ], [ null, %80 ]
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %105, i64 %71
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %105, i64 %104
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %106, i64 %1
  %109 = shl nsw i64 %1, 4
  %110 = add i64 %109, -16
  %111 = lshr exact i64 %110, 4
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 7
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %103, %115
  %116 = phi %"struct.v8::internal::compiler::PushParameter"* [ %121, %115 ], [ %106, %103 ]
  %117 = phi i64 [ %122, %115 ], [ %113, %103 ]
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %116, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %118, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %116, i64 0, i32 1
  %120 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %119 to i64*
  store i64 4294967294, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %116, i64 1
  %122 = add i64 %117, -1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %115, !llvm.loop !492

124:                                              ; preds = %115, %103
  %125 = phi %"struct.v8::internal::compiler::PushParameter"* [ %106, %103 ], [ %121, %115 ]
  %126 = icmp ult i64 %110, 112
  br i1 %126, label %155, label %127

127:                                              ; preds = %124, %127
  %128 = phi %"struct.v8::internal::compiler::PushParameter"* [ %153, %127 ], [ %125, %124 ]
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %129, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 0, i32 1
  %131 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %130 to i64*
  store i64 4294967294, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 1, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %132, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 1, i32 1
  %134 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %133 to i64*
  store i64 4294967294, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 2, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 2, i32 1
  %137 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %136 to i64*
  store i64 4294967294, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 3, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 3, i32 1
  %140 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %139 to i64*
  store i64 4294967294, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 4, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %141, align 8
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 4, i32 1
  %143 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %142 to i64*
  store i64 4294967294, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 5, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %144, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 5, i32 1
  %146 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %145 to i64*
  store i64 4294967294, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 6, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %147, align 8
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 6, i32 1
  %149 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %148 to i64*
  store i64 4294967294, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 7, i32 0
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 7, i32 1
  %152 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %151 to i64*
  store i64 4294967294, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %128, i64 8
  %154 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %108, %153
  br i1 %154, label %155, label %127

155:                                              ; preds = %127, %124
  %156 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %107 to i64
  %157 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %108 to i64
  %158 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %0, i64 0, i32 0, i32 0
  %159 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %158, align 8
  %160 = load %"struct.v8::internal::compiler::PushParameter"*, %"struct.v8::internal::compiler::PushParameter"** %6, align 8
  %161 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %160, %159
  br i1 %161, label %206, label %162

162:                                              ; preds = %155
  %163 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %159 to i64
  %164 = getelementptr %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %160, i64 -1, i32 0
  %165 = ptrtoint %"class.v8::internal::compiler::Node"** %164 to i64
  %166 = sub i64 %165, %163
  %167 = lshr i64 %166, 4
  %168 = add nuw nsw i64 %167, 1
  %169 = and i64 %168, 3
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %181, label %171

171:                                              ; preds = %162, %171
  %172 = phi %"struct.v8::internal::compiler::PushParameter"* [ %175, %171 ], [ %106, %162 ]
  %173 = phi %"struct.v8::internal::compiler::PushParameter"* [ %176, %171 ], [ %160, %162 ]
  %174 = phi i64 [ %179, %171 ], [ %169, %162 ]
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %172, i64 -1
  %176 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %173, i64 -1
  %177 = bitcast %"struct.v8::internal::compiler::PushParameter"* %175 to i8*
  %178 = bitcast %"struct.v8::internal::compiler::PushParameter"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #12
  %179 = add i64 %174, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %171, !llvm.loop !493

181:                                              ; preds = %171, %162
  %182 = phi %"struct.v8::internal::compiler::PushParameter"* [ undef, %162 ], [ %175, %171 ]
  %183 = phi %"struct.v8::internal::compiler::PushParameter"* [ %106, %162 ], [ %175, %171 ]
  %184 = phi %"struct.v8::internal::compiler::PushParameter"* [ %160, %162 ], [ %176, %171 ]
  %185 = icmp ult i64 %166, 48
  br i1 %185, label %206, label %186

186:                                              ; preds = %181, %186
  %187 = phi %"struct.v8::internal::compiler::PushParameter"* [ %201, %186 ], [ %183, %181 ]
  %188 = phi %"struct.v8::internal::compiler::PushParameter"* [ %202, %186 ], [ %184, %181 ]
  %189 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %187, i64 -1
  %190 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %188, i64 -1
  %191 = bitcast %"struct.v8::internal::compiler::PushParameter"* %189 to i8*
  %192 = bitcast %"struct.v8::internal::compiler::PushParameter"* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %192, i64 16, i1 false) #12
  %193 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %187, i64 -2
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %188, i64 -2
  %195 = bitcast %"struct.v8::internal::compiler::PushParameter"* %193 to i8*
  %196 = bitcast %"struct.v8::internal::compiler::PushParameter"* %194 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 16, i1 false) #12
  %197 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %187, i64 -3
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %188, i64 -3
  %199 = bitcast %"struct.v8::internal::compiler::PushParameter"* %197 to i8*
  %200 = bitcast %"struct.v8::internal::compiler::PushParameter"* %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 16, i1 false) #12
  %201 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %187, i64 -4
  %202 = getelementptr inbounds %"struct.v8::internal::compiler::PushParameter", %"struct.v8::internal::compiler::PushParameter"* %188, i64 -4
  %203 = bitcast %"struct.v8::internal::compiler::PushParameter"* %201 to i8*
  %204 = bitcast %"struct.v8::internal::compiler::PushParameter"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 16, i1 false) #12
  %205 = icmp eq %"struct.v8::internal::compiler::PushParameter"* %202, %159
  br i1 %205, label %206, label %186

206:                                              ; preds = %181, %186, %155
  %207 = phi %"struct.v8::internal::compiler::PushParameter"* [ %106, %155 ], [ %182, %181 ], [ %201, %186 ]
  %208 = ptrtoint %"struct.v8::internal::compiler::PushParameter"* %207 to i64
  store i64 %208, i64* %68, align 8
  store i64 %157, i64* %7, align 8
  store i64 %156, i64* %4, align 8
  ret void
}

declare void @_ZN2v88internal8compiler14PhiInstructionC1EPNS0_4ZoneEim(%"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::Zone"*, i32, i64) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !12}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !10}
!45 = distinct !{!45, !12}
!46 = distinct !{!46, !10}
!47 = !{i8 0, i8 2}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN2v84base8ReversedINS_8internal8compiler10BasicBlockEEEDaRT_: argument 0"}
!50 = distinct !{!50, !"_ZN2v84base8ReversedINS_8internal8compiler10BasicBlockEEEDaRT_"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !12}
!58 = distinct !{!58, !10}
!59 = !{!"branch_weights", i32 2000, i32 1}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !12}
!67 = distinct !{!67, !10}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !12}
!75 = distinct !{!75, !10}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNSt3__16__treeINS_12__value_typeIjiEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIjiEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!78 = distinct !{!78, !"_ZNSt3__16__treeINS_12__value_typeIjiEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIjiEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !12}
!86 = distinct !{!86, !10}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !12}
!94 = distinct !{!94, !10}
!95 = distinct !{!95, !12}
!96 = !{!97}
!97 = distinct !{!97, !98}
!98 = distinct !{!98, !"LVerDomain"}
!99 = !{!100}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !12}
!103 = distinct !{!103, !10}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !12}
!111 = distinct !{!111, !10}
!112 = distinct !{!112, !12}
!113 = distinct !{!113, !12}
!114 = distinct !{!114, !12}
!115 = distinct !{!115, !12}
!116 = distinct !{!116, !12}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !12}
!124 = distinct !{!124, !10}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !10}
!131 = distinct !{!131, !12}
!132 = distinct !{!132, !10}
!133 = !{!134}
!134 = distinct !{!134, !135}
!135 = distinct !{!135, !"LVerDomain"}
!136 = !{!137}
!137 = distinct !{!137, !135}
!138 = distinct !{!138, !10}
!139 = distinct !{!139, !12}
!140 = distinct !{!140, !10}
!141 = !{!142}
!142 = distinct !{!142, !143}
!143 = distinct !{!143, !"LVerDomain"}
!144 = !{!145}
!145 = distinct !{!145, !143}
!146 = distinct !{!146, !10}
!147 = distinct !{!147, !12}
!148 = distinct !{!148, !10}
!149 = !{!150}
!150 = distinct !{!150, !151}
!151 = distinct !{!151, !"LVerDomain"}
!152 = !{!153}
!153 = distinct !{!153, !151}
!154 = distinct !{!154, !10}
!155 = distinct !{!155, !12}
!156 = distinct !{!156, !10}
!157 = !{!158}
!158 = distinct !{!158, !159}
!159 = distinct !{!159, !"LVerDomain"}
!160 = !{!161}
!161 = distinct !{!161, !159}
!162 = distinct !{!162, !10}
!163 = distinct !{!163, !12}
!164 = distinct !{!164, !10}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = distinct !{!170, !10}
!171 = distinct !{!171, !12}
!172 = distinct !{!172, !10}
!173 = !{!174}
!174 = distinct !{!174, !175}
!175 = distinct !{!175, !"LVerDomain"}
!176 = !{!177}
!177 = distinct !{!177, !175}
!178 = distinct !{!178, !10}
!179 = distinct !{!179, !12}
!180 = distinct !{!180, !10}
!181 = !{!182}
!182 = distinct !{!182, !183}
!183 = distinct !{!183, !"LVerDomain"}
!184 = !{!185}
!185 = distinct !{!185, !183}
!186 = distinct !{!186, !10}
!187 = distinct !{!187, !12}
!188 = distinct !{!188, !10}
!189 = distinct !{!189, !12}
!190 = !{!191}
!191 = distinct !{!191, !192}
!192 = distinct !{!192, !"LVerDomain"}
!193 = !{!194}
!194 = distinct !{!194, !192}
!195 = distinct !{!195, !10}
!196 = distinct !{!196, !12}
!197 = distinct !{!197, !10}
!198 = !{!199}
!199 = distinct !{!199, !200}
!200 = distinct !{!200, !"LVerDomain"}
!201 = !{!202}
!202 = distinct !{!202, !200}
!203 = distinct !{!203, !10}
!204 = distinct !{!204, !12}
!205 = distinct !{!205, !10}
!206 = !{!207}
!207 = distinct !{!207, !208}
!208 = distinct !{!208, !"LVerDomain"}
!209 = !{!210}
!210 = distinct !{!210, !208}
!211 = distinct !{!211, !10}
!212 = distinct !{!212, !12}
!213 = distinct !{!213, !10}
!214 = !{!215}
!215 = distinct !{!215, !216}
!216 = distinct !{!216, !"LVerDomain"}
!217 = !{!218}
!218 = distinct !{!218, !216}
!219 = distinct !{!219, !10}
!220 = distinct !{!220, !12}
!221 = distinct !{!221, !10}
!222 = !{!223}
!223 = distinct !{!223, !224}
!224 = distinct !{!224, !"LVerDomain"}
!225 = !{!226}
!226 = distinct !{!226, !224}
!227 = distinct !{!227, !10}
!228 = distinct !{!228, !12}
!229 = distinct !{!229, !10}
!230 = !{!231}
!231 = distinct !{!231, !232}
!232 = distinct !{!232, !"LVerDomain"}
!233 = !{!234}
!234 = distinct !{!234, !232}
!235 = distinct !{!235, !10}
!236 = distinct !{!236, !12}
!237 = distinct !{!237, !10}
!238 = !{!239}
!239 = distinct !{!239, !240}
!240 = distinct !{!240, !"LVerDomain"}
!241 = !{!242}
!242 = distinct !{!242, !240}
!243 = distinct !{!243, !10}
!244 = distinct !{!244, !12}
!245 = distinct !{!245, !10}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250}
!250 = distinct !{!250, !248}
!251 = distinct !{!251, !10}
!252 = distinct !{!252, !12}
!253 = distinct !{!253, !10}
!254 = !{!255}
!255 = distinct !{!255, !256}
!256 = distinct !{!256, !"LVerDomain"}
!257 = !{!258}
!258 = distinct !{!258, !256}
!259 = distinct !{!259, !10}
!260 = distinct !{!260, !12}
!261 = distinct !{!261, !10}
!262 = !{!263}
!263 = distinct !{!263, !264}
!264 = distinct !{!264, !"LVerDomain"}
!265 = !{!266}
!266 = distinct !{!266, !264}
!267 = distinct !{!267, !10}
!268 = distinct !{!268, !12}
!269 = distinct !{!269, !10}
!270 = distinct !{!270, !12}
!271 = !{!272}
!272 = distinct !{!272, !273, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE: argument 0"}
!273 = distinct !{!273, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE"}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE: argument 0"}
!276 = distinct !{!276, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE"}
!277 = !{!278}
!278 = distinct !{!278, !279, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_: argument 0"}
!279 = distinct !{!279, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_"}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_: argument 0"}
!282 = distinct !{!282, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_"}
!283 = !{!284}
!284 = distinct !{!284, !285, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_: argument 0"}
!285 = distinct !{!285, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_"}
!286 = !{!287}
!287 = distinct !{!287, !288, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_: argument 0"}
!288 = distinct !{!288, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_"}
!289 = !{!290}
!290 = distinct !{!290, !291, !"_ZN2v88internal8compiler17FlagsContinuation6ForSetENS1_14FlagsConditionEPNS1_4NodeE: argument 0"}
!291 = distinct !{!291, !"_ZN2v88internal8compiler17FlagsContinuation6ForSetENS1_14FlagsConditionEPNS1_4NodeE"}
!292 = !{!293}
!293 = distinct !{!293, !294}
!294 = distinct !{!294, !"LVerDomain"}
!295 = !{!296}
!296 = distinct !{!296, !294}
!297 = distinct !{!297, !10}
!298 = distinct !{!298, !12}
!299 = distinct !{!299, !10}
!300 = !{!301}
!301 = distinct !{!301, !302}
!302 = distinct !{!302, !"LVerDomain"}
!303 = !{!304}
!304 = distinct !{!304, !302}
!305 = distinct !{!305, !10}
!306 = distinct !{!306, !12}
!307 = distinct !{!307, !10}
!308 = !{!309}
!309 = distinct !{!309, !310}
!310 = distinct !{!310, !"LVerDomain"}
!311 = !{!312}
!312 = distinct !{!312, !310}
!313 = distinct !{!313, !10}
!314 = distinct !{!314, !12}
!315 = distinct !{!315, !10}
!316 = !{!317}
!317 = distinct !{!317, !318, !"_ZN2v88internal8compiler17FlagsContinuation18ForBranchAndPoisonENS1_14FlagsConditionEPNS1_10BasicBlockES5_: argument 0"}
!318 = distinct !{!318, !"_ZN2v88internal8compiler17FlagsContinuation18ForBranchAndPoisonENS1_14FlagsConditionEPNS1_10BasicBlockES5_"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"_ZN2v88internal8compiler17FlagsContinuation9ForBranchENS1_14FlagsConditionEPNS1_10BasicBlockES5_: argument 0"}
!321 = distinct !{!321, !"_ZN2v88internal8compiler17FlagsContinuation9ForBranchENS1_14FlagsConditionEPNS1_10BasicBlockES5_"}
!322 = !{!323}
!323 = distinct !{!323, !324}
!324 = distinct !{!324, !"LVerDomain"}
!325 = !{!326}
!326 = distinct !{!326, !324}
!327 = distinct !{!327, !10}
!328 = distinct !{!328, !12}
!329 = distinct !{!329, !10}
!330 = !{!331}
!331 = distinct !{!331, !332, !"_ZN2v88internal8compiler17FlagsContinuation22ForDeoptimizeAndPoisonENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi: argument 0"}
!332 = distinct !{!332, !"_ZN2v88internal8compiler17FlagsContinuation22ForDeoptimizeAndPoisonENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi"}
!333 = !{!334}
!334 = distinct !{!334, !335, !"_ZN2v88internal8compiler17FlagsContinuation13ForDeoptimizeENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi: argument 0"}
!335 = distinct !{!335, !"_ZN2v88internal8compiler17FlagsContinuation13ForDeoptimizeENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi"}
!336 = !{!337}
!337 = distinct !{!337, !338, !"_ZN2v88internal8compiler17FlagsContinuation22ForDeoptimizeAndPoisonENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi: argument 0"}
!338 = distinct !{!338, !"_ZN2v88internal8compiler17FlagsContinuation22ForDeoptimizeAndPoisonENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"_ZN2v88internal8compiler17FlagsContinuation13ForDeoptimizeENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi: argument 0"}
!341 = distinct !{!341, !"_ZN2v88internal8compiler17FlagsContinuation13ForDeoptimizeENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi"}
!342 = !{!343}
!343 = distinct !{!343, !344, !"_ZN2v88internal8compiler17FlagsContinuation22ForDeoptimizeAndPoisonENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi: argument 0"}
!344 = distinct !{!344, !"_ZN2v88internal8compiler17FlagsContinuation22ForDeoptimizeAndPoisonENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi"}
!345 = !{!346}
!346 = distinct !{!346, !347, !"_ZN2v88internal8compiler17FlagsContinuation13ForDeoptimizeENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi: argument 0"}
!347 = distinct !{!347, !"_ZN2v88internal8compiler17FlagsContinuation13ForDeoptimizeENS1_14FlagsConditionENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceEPNS1_4NodeEPNS1_18InstructionOperandEi"}
!348 = !{!349}
!349 = distinct !{!349, !350, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE: argument 0"}
!350 = distinct !{!350, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE: argument 0"}
!353 = distinct !{!353, !"_ZN2v88internal8compiler17FlagsContinuation7ForTrapENS1_14FlagsConditionENS1_6TrapIdEPNS1_4NodeE"}
!354 = !{!355}
!355 = distinct !{!355, !356, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_: argument 0"}
!356 = distinct !{!356, !"_ZN2v88internal8compiler17FlagsContinuation9ForSelectENS1_14FlagsConditionEPNS1_4NodeES5_S5_"}
!357 = !{!358}
!358 = distinct !{!358, !359, !"_ZN2v88internal8compiler17FlagsContinuation6ForSetENS1_14FlagsConditionEPNS1_4NodeE: argument 0"}
!359 = distinct !{!359, !"_ZN2v88internal8compiler17FlagsContinuation6ForSetENS1_14FlagsConditionEPNS1_4NodeE"}
!360 = distinct !{!360, !10}
!361 = distinct !{!361, !12}
!362 = distinct !{!362, !363, !10}
!363 = !{!"llvm.loop.unroll.runtime.disable"}
!364 = !{!365}
!365 = distinct !{!365, !366, !"_ZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEv: argument 0"}
!366 = distinct !{!366, !"_ZNK2v88internal8compiler10SwitchInfo18CasesSortedByValueEv"}
!367 = distinct !{!367, !12}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8ConstantEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE16__construct_nodeIJNS_4pairIiS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_: argument 0"}
!370 = distinct !{!370, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8ConstantEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE16__construct_nodeIJNS_4pairIiS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_"}
!371 = distinct !{!371, !12}
!372 = !{!373}
!373 = distinct !{!373, !374}
!374 = distinct !{!374, !"LVerDomain"}
!375 = !{!376}
!376 = distinct !{!376, !374}
!377 = distinct !{!377, !10}
!378 = distinct !{!378, !12}
!379 = distinct !{!379, !10}
!380 = distinct !{!380, !12}
!381 = !{!382}
!382 = distinct !{!382, !383}
!383 = distinct !{!383, !"LVerDomain"}
!384 = !{!385}
!385 = distinct !{!385, !383}
!386 = distinct !{!386, !10}
!387 = distinct !{!387, !12}
!388 = distinct !{!388, !10}
!389 = distinct !{!389, !12}
!390 = distinct !{!390, !12}
!391 = distinct !{!391, !12}
!392 = distinct !{!392, !12}
!393 = distinct !{!393, !12}
!394 = distinct !{!394, !12}
!395 = !{!396}
!396 = distinct !{!396, !397}
!397 = distinct !{!397, !"LVerDomain"}
!398 = !{!399}
!399 = distinct !{!399, !397}
!400 = distinct !{!400, !10}
!401 = distinct !{!401, !12}
!402 = distinct !{!402, !12}
!403 = distinct !{!403, !10}
!404 = !{!405}
!405 = distinct !{!405, !406}
!406 = distinct !{!406, !"LVerDomain"}
!407 = !{!408}
!408 = distinct !{!408, !406}
!409 = distinct !{!409, !10}
!410 = distinct !{!410, !12}
!411 = distinct !{!411, !10}
!412 = !{!413}
!413 = distinct !{!413, !414}
!414 = distinct !{!414, !"LVerDomain"}
!415 = !{!416}
!416 = distinct !{!416, !414}
!417 = distinct !{!417, !10}
!418 = distinct !{!418, !12}
!419 = distinct !{!419, !12}
!420 = distinct !{!420, !10}
!421 = !{!422}
!422 = distinct !{!422, !423}
!423 = distinct !{!423, !"LVerDomain"}
!424 = !{!425}
!425 = distinct !{!425, !423}
!426 = distinct !{!426, !10}
!427 = distinct !{!427, !12}
!428 = distinct !{!428, !10}
!429 = !{!430}
!430 = distinct !{!430, !431}
!431 = distinct !{!431, !"LVerDomain"}
!432 = !{!433}
!433 = distinct !{!433, !431}
!434 = distinct !{!434, !10}
!435 = distinct !{!435, !12}
!436 = distinct !{!436, !12}
!437 = distinct !{!437, !10}
!438 = distinct !{!438, !12}
!439 = distinct !{!439, !12}
!440 = distinct !{!440, !12}
!441 = distinct !{!441, !12}
!442 = distinct !{!442, !12}
!443 = !{!444}
!444 = distinct !{!444, !445}
!445 = distinct !{!445, !"LVerDomain"}
!446 = !{!447}
!447 = distinct !{!447, !445}
!448 = distinct !{!448, !10}
!449 = distinct !{!449, !12}
!450 = distinct !{!450, !12}
!451 = distinct !{!451, !10}
!452 = distinct !{!452, !12}
!453 = distinct !{!453, !12}
!454 = distinct !{!454, !12}
!455 = distinct !{!455, !12}
!456 = distinct !{!456, !12}
!457 = distinct !{!457, !12}
!458 = distinct !{!458, !12}
!459 = distinct !{!459, !12}
!460 = !{!461}
!461 = distinct !{!461, !462, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!462 = distinct !{!462, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!463 = distinct !{!463, !12}
!464 = distinct !{!464, !12}
!465 = !{!466}
!466 = distinct !{!466, !467}
!467 = distinct !{!467, !"LVerDomain"}
!468 = !{!469}
!469 = distinct !{!469, !467}
!470 = distinct !{!470, !10}
!471 = distinct !{!471, !10}
!472 = !{!473}
!473 = distinct !{!473, !474}
!474 = distinct !{!474, !"LVerDomain"}
!475 = !{!476}
!476 = distinct !{!476, !474}
!477 = distinct !{!477, !10}
!478 = distinct !{!478, !12}
!479 = distinct !{!479, !10}
!480 = !{!481}
!481 = distinct !{!481, !482}
!482 = distinct !{!482, !"LVerDomain"}
!483 = !{!484}
!484 = distinct !{!484, !482}
!485 = distinct !{!485, !10}
!486 = distinct !{!486, !12}
!487 = distinct !{!487, !10}
!488 = !{!489}
!489 = distinct !{!489, !490, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE21__construct_node_hashIRS6_JS8_EEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSG_ISO_EEEEEEmOT_DpOT0_: argument 0"}
!490 = distinct !{!490, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal8compiler19InstructionSelector15FrameStateInputEPNS5_17CachedStateValuesEEENS_22__unordered_map_hasherIS6_S9_NS6_4HashENS6_5EqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE21__construct_node_hashIRS6_JS8_EEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSG_ISO_EEEEEEmOT_DpOT0_"}
!491 = distinct !{!491, !12}
!492 = distinct !{!492, !12}
!493 = distinct !{!493, !12}
