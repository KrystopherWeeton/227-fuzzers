; ModuleID = '../../third_party/blink/renderer/core/html/parser/text_document_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/text_document_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::TextDocumentParser" = type <{ %"class.blink::HTMLDocumentParser", i8, [7 x i8] }>
%"class.blink::HTMLDocumentParser" = type { %"class.blink::ScriptableDocumentParser", %"class.blink::HTMLParserScriptRunnerHost", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HTMLParserOptions", %"class.blink::HTMLInputStream", %"class.blink::Member.29", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.56", %"class.blink::Member.63", %"class.blink::Member.65", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", %class.scoped_refptr.369, %"class.blink::Member.375", %"class.WTF::TextPosition", %"class.std::__1::unique_ptr.377", %"class.WTF::Deque.404", %"class.base::WeakPtr", %"class.blink::Member.416", %"class.blink::Member.418", %"class.WTF::Vector.149", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.426", %"class.blink::CompactHTMLToken"*, i32, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.blink::ThreadScheduler"* }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.23", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr" }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member", %"class.blink::HeapHashSet" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.485", %"class.WTF::Vector.485", i8, i32, %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.504", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.475", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.515", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.451", %"class.blink::Member.97", %"class.blink::Member.538", %"class.blink::Member.97", %"class.blink::Member.97", %"class.blink::Member.97", %"class.blink::UserActionElementSet", %"class.blink::Member.547", double, double, i64, i64, %"class.blink::HeapHashSet.549", %"class.blink::HeapHashSet.556", i16, i8, %"class.blink::Member.563", %"class.blink::Member.565", %"class.blink::Member.567", %"class.blink::Member.569", %"class.blink::TextLinkColors", %"class.blink::Member.571", i8, [7 x i8], %"class.blink::HeapHashMap.573", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.97", %"class.WTF::Vector.580", %"class.blink::Member.585", %"class.blink::Member.587", i8, %"class.blink::Member.97", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.589", %"class.blink::HeapVector.591", %"class.std::__1::unique_ptr.599", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.605", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.618", %"class.WTF::Vector.620", i8, i8, %"class.std::__1::unique_ptr.625", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.451", %"class.blink::HeapVector.631", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.639", i8, i32, %"class.blink::Member.641", %"class.blink::Member.643", %"class.blink::Member.645", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.647", %"class.WTF::HashMap.649", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", %"class.blink::Member.660", %"class.blink::Member", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.662", i8, i32, %"class.blink::Member.669", %"class.blink::Member.671", i32, %"class.blink::Member.673", %"class.blink::Member.675", %"class.blink::Member.677", %"class.std::__1::unique_ptr.679", i64, %"class.std::__1::unique_ptr.685", i32, i32, %"class.blink::Member.691", %"class.blink::Member.693", %"class.blink::Member.695", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.697", %"class.WTF::Vector.699", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.704", %"class.blink::Member.711", %"class.std::__1::unique_ptr.713", %"class.blink::Member.719", i8, i8, %"class.WTF::String", %"class.blink::Member.721", i8, [7 x i8], %"class.blink::HeapHashMap.723", %"class.blink::HeapObserverSet", %"class.blink::Member.737", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.739", i32, i8, i8, %"class.blink::WeakMember.741", %"class.blink::Member.742" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.79", %"class.blink::Member.79" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.79", %"class.blink::Member.81", %"class.blink::Member.79", %"class.blink::Member.79", %"class.blink::Member.83" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.75", %"class.blink::Member", %"class.blink::Member.81", %"class.blink::Member.439", %"class.blink::Member.439", %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.467", %"class.blink::HeapVector.469" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.445" }
%"class.WTF::HashTable.445" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.447" }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.97", i32, %"class.blink::HeapVector.451" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.464" }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::HeapHashMap.466"* }
%"class.blink::HeapHashMap.466" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.469" = type { %"class.WTF::Vector.472" }
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { %"class.blink::Member.475"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.478" }
%"class.blink::HeapHashMap.478" = type { %"class.WTF::HashMap.481" }
%"class.WTF::HashMap.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"struct.WTF::KeyValuePair.484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.484" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.489", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.489" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.370" }
%"struct.std::__1::atomic.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i32 }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1063", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1125", i32, i8, [3 x i8], %"class.blink::HeapVector.1127", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1146", %"class.blink::Member.1265", %"class.blink::Member.1267", i8, [7 x i8] }>
%"class.blink::Supplementable.1063" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1064" }
%"class.blink::HeapHashMap.1064" = type { %"class.WTF::HashMap.1067" }
%"class.WTF::HashMap.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"struct.WTF::KeyValuePair.1070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1070" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1079" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1071" }
%"class.blink::HeapObserverSet.1071" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1072" }
%"class.blink::HeapHashSet.1072" = type { %"class.WTF::HashSet.1075" }
%"class.WTF::HashSet.1075" = type { %"class.WTF::HashTable.1076" }
%"class.WTF::HashTable.1076" = type <{ %"class.blink::WeakMember.1078"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1078" = type opaque
%"class.blink::Supplementable.1079" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1080" }
%"class.blink::HeapHashMap.1080" = type { %"class.WTF::HashMap.1083" }
%"class.WTF::HashMap.1083" = type { %"class.WTF::HashTable.1084" }
%"class.WTF::HashTable.1084" = type <{ %"struct.WTF::KeyValuePair.1086"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1086" = type { i8*, %"class.blink::Member.1270" }
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1272" }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1087, %"class.std::__1::unique_ptr.1088", %"class.std::__1::unique_ptr.1088", %"class.std::__1::unique_ptr.1115", %"class.std::__1::unique_ptr.1115", %"class.blink::Member.494", i32, [4 x i8], %"class.WTF::HashSet.1121", i32, i32 }
%class.scoped_refptr.1087 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1061", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.877", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.882 }
%"class.WTF::RefCounted.1061" = type { %"class.base::RefCounted.1062" }
%"class.base::RefCounted.1062" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, %union.anon.881 }
%union.anon.881 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.882 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1091", %"class.std::__1::map.1102", %"class.std::__1::map.1111"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.877" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.855 }
%union.anon.855 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.1091" = type { %"class.std::__1::__tree.1092" }
%"class.std::__1::__tree.1092" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1093", %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { i64 }
%"class.std::__1::map.1102" = type { %"class.std::__1::__tree.1103" }
%"class.std::__1::__tree.1103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1104", %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.1111" = type opaque
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1127" = type { %"class.WTF::Vector.1130" }
%"class.WTF::Vector.1130" = type { %"class.WTF::VectorBuffer.1131" }
%"class.WTF::VectorBuffer.1131" = type { %"class.WTF::VectorBufferBase.1132" }
%"class.WTF::VectorBufferBase.1132" = type { %"class.blink::Member.1133"*, i32, i32 }
%"class.blink::Member.1133" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1139", i32, i32 }
%"class.blink::HeapHashMap.1139" = type { %"class.WTF::HashMap.1142" }
%"class.WTF::HashMap.1142" = type { %"class.WTF::HashTable.1143" }
%"class.WTF::HashTable.1143" = type <{ %"struct.WTF::KeyValuePair.1145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1145" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1149" }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1152" }
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %"class.mojo::StructPtr.1155"*, i32, i32 }
%"class.mojo::StructPtr.1155" = type { %"class.std::__1::unique_ptr.1156" }
%"class.std::__1::unique_ptr.1156" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1159", %"class.WTF::HashMap.1166", %"class.WTF::HashMap.1171", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1176", i8, %"class.WTF::Vector.869", i32, %"class.mojo::StructPtr.1177", %"class.WTF::Vector.869" }
%"class.mojo::StructPtr.1159" = type { %"class.std::__1::unique_ptr.1160" }
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1166" = type { %"class.WTF::HashTable.1167" }
%"class.WTF::HashTable.1167" = type <{ %"struct.WTF::KeyValuePair.1170"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1170" = type opaque
%"class.WTF::HashMap.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"struct.WTF::KeyValuePair.1175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1175" = type opaque
%"class.mojo::InlinedStructPtr.1176" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1177" = type { %"class.std::__1::unique_ptr.1178" }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.869", i8, i8, [6 x i8] }>
%"class.WTF::Vector.869" = type { %"class.WTF::VectorBuffer.870" }
%"class.WTF::VectorBuffer.870" = type { %"class.WTF::VectorBufferBase.871" }
%"class.WTF::VectorBufferBase.871" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1256" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1192", i32 }>
%"class.std::__1::unique_ptr.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1195", %"class.absl::optional.920", %"class.absl::optional.1196", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1209", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1231", %"class.std::__1::map.1242", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1251", i8, %class.scoped_refptr.1201, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1252" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1195" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.920" = type { %"class.absl::optional_internal::optional_data.921" }
%"class.absl::optional_internal::optional_data.921" = type { %"class.absl::optional_internal::optional_data_base.922" }
%"class.absl::optional_internal::optional_data_base.922" = type { %"class.absl::optional_internal::optional_data_dtor_base.923" }
%"class.absl::optional_internal::optional_data_dtor_base.923" = type { i8, %union.anon.924 }
%union.anon.924 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1196" = type { %"class.absl::optional_internal::optional_data.1197" }
%"class.absl::optional_internal::optional_data.1197" = type { %"class.absl::optional_internal::optional_data_base.1198" }
%"class.absl::optional_internal::optional_data_base.1198" = type { %"class.absl::optional_internal::optional_data_dtor_base.1199" }
%"class.absl::optional_internal::optional_data_dtor_base.1199" = type { i8, %union.anon.1200 }
%union.anon.1200 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1201, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1202" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1202" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.536 }
%class.scoped_refptr.536 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.410", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.410" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.411" }
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__atomic_base.413" }
%"struct.std::__1::__atomic_base.413" = type { %"struct.std::__1::__cxx_atomic_impl.414" }
%"struct.std::__1::__cxx_atomic_impl.414" = type { %"struct.std::__1::__cxx_atomic_base_impl.415" }
%"struct.std::__1::__cxx_atomic_base_impl.415" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1269", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1201, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1269" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1208 }
%class.scoped_refptr.1208 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1212", %class.scoped_refptr.1213 }
%"class.base::RepeatingCallback.1212" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1213 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1214", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1214" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1218", %"class.std::__1::unique_ptr.1224", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1230" }
%"class.std::__1::unique_ptr.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1230" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1231" = type { %"class.std::__1::__tree.1232" }
%"class.std::__1::__tree.1232" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1233", %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.1242" = type { %"class.std::__1::__tree.1243" }
%"class.std::__1::__tree.1243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1244", %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.base::OnceCallback.1251" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1201 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1252" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.757", %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::Member.762", %class.scoped_refptr.369, %class.scoped_refptr.369, %"class.blink::Member.764", %"class.blink::Member.766", %"class.blink::Member.772", %"class.blink::Member.776", %"class.blink::Member.824", %"class.blink::HeapHashMap.826", %"class.blink::HeapHashSet.833", %"class.blink::HeapHashSet.833", %"class.blink::HeapHashMap.1012", %"class.blink::HeapVector.1019", %"class.blink::Member.1027", %"class.blink::HeapTaskRunnerTimer.1029", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1031", %"class.WTF::Vector.1038", %"class.blink::HeapHashSet.1044", %"class.blink::HeapHashSet.1044", %"class.std::__1::unique_ptr.1050", %"class.base::WeakPtr.818", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1058", i8, i8, %"class.base::WeakPtrFactory.1060" }
%"class.blink::ThreadState::PrefinalizerRegistration.757" = type { i8 }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.770" }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.780", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.782", %"class.WTF::HashSet.787", i8, [3 x i8], i32, %"class.blink::HeapHashMap.791", %"class.std::__1::map", %"class.std::__1::map.806", %"class.std::__1::unique_ptr.815", %"class.blink::Member.766", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.822", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.782" = type { %"class.WTF::HashTable.783" }
%"class.WTF::HashTable.783" = type <{ %"struct.WTF::KeyValuePair.786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.786" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.787" = type { %"class.WTF::HashTable.788" }
%"class.WTF::HashTable.788" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.791" = type { %"class.WTF::HashMap.794" }
%"class.WTF::HashMap.794" = type { %"class.WTF::HashTable.795" }
%"class.WTF::HashTable.795" = type <{ %"struct.WTF::KeyValuePair.797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.797" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.798", %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.806" = type { %"class.std::__1::__tree.807" }
%"class.std::__1::__tree.807" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.808", %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.818", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.826" = type { %"class.WTF::HashMap.829" }
%"class.WTF::HashMap.829" = type { %"class.WTF::HashTable.830" }
%"class.WTF::HashTable.830" = type <{ %"struct.WTF::KeyValuePair.832"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.832" = type opaque
%"class.blink::HeapHashSet.833" = type { %"class.WTF::HashSet.836" }
%"class.WTF::HashSet.836" = type { %"class.WTF::HashTable.837" }
%"class.WTF::HashTable.837" = type <{ %"class.blink::WeakMember.839"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.843", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.874", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.976", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.992", %"class.blink::ResourceResponse", %class.scoped_refptr.994, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.843" = type { %"class.absl::optional_internal::optional_data.844" }
%"class.absl::optional_internal::optional_data.844" = type { %"class.absl::optional_internal::optional_data_base.845" }
%"class.absl::optional_internal::optional_data_base.845" = type { %"class.absl::optional_internal::optional_data_dtor_base.846" }
%"class.absl::optional_internal::optional_data_dtor_base.846" = type { i8, %union.anon.847 }
%union.anon.847 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.848", i8, %"class.absl::optional.859", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.848" = type { %"class.absl::optional_internal::optional_data.849" }
%"class.absl::optional_internal::optional_data.849" = type { %"class.absl::optional_internal::optional_data_base.850" }
%"class.absl::optional_internal::optional_data_base.850" = type { %"class.absl::optional_internal::optional_data_dtor_base.851" }
%"class.absl::optional_internal::optional_data_dtor_base.851" = type { i8, [7 x i8], %union.anon.852 }
%union.anon.852 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.859" = type { %"class.absl::optional_internal::optional_data.860" }
%"class.absl::optional_internal::optional_data.860" = type { %"class.absl::optional_internal::optional_data_base.861" }
%"class.absl::optional_internal::optional_data_base.861" = type { %"class.absl::optional_internal::optional_data_dtor_base.862" }
%"class.absl::optional_internal::optional_data_dtor_base.862" = type { i8, %union.anon.863 }
%union.anon.863 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.864", %"class.WTF::Vector.869" }
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { i32*, i32, i32 }
%"class.WTF::Vector.874" = type { %"class.WTF::VectorBuffer.875" }
%"class.WTF::VectorBuffer.875" = type { %"class.WTF::VectorBufferBase.876" }
%"class.WTF::VectorBufferBase.876" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type <{ %"class.blink::WeakMember.1287", i32, [4 x i8] }>
%"class.blink::WeakMember.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.976" = type { %"class.WTF::HashSet.979" }
%"class.WTF::HashSet.979" = type { %"class.WTF::HashTable.980" }
%"class.WTF::HashTable.980" = type <{ %"class.blink::WeakMember.982"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.982" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.983", i8, i8, %class.scoped_refptr.518, %class.scoped_refptr.988, %class.scoped_refptr.990 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.983" = type { %"class.WTF::HashTable.984" }
%"class.WTF::HashTable.984" = type <{ %"struct.std::__1::pair.987"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.987" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.518 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.519", i32, i32, %"class.blink::Persistent.521" }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.521" = type { %"class.blink::PersistentBase.522" }
%"class.blink::PersistentBase.522" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.360" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.525" }
%"class.blink::HeapHashMap.525" = type { %"class.WTF::HashMap.528" }
%"class.WTF::HashMap.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"struct.WTF::KeyValuePair.531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.531" = type { %"class.blink::WeakMember.532", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.360" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.166", i32, [4 x i8], %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.302", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.308", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.319", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.337", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.344", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.282", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i64 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::Worklist.248"* }
%"class.blink::Worklist.248" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::Worklist.255"* }
%"class.blink::Worklist.255" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { float }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.285", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.308" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.325" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.234"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.241"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.432" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.343 }
%class.scoped_refptr.343 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.344" = type { %"struct.std::__1::__atomic_base.345" }
%"struct.std::__1::__atomic_base.345" = type { %"struct.std::__1::__cxx_atomic_impl.346" }
%"struct.std::__1::__cxx_atomic_impl.346" = type { %"struct.std::__1::__cxx_atomic_base_impl.347" }
%"struct.std::__1::__cxx_atomic_base_impl.347" = type { i8 }
%class.scoped_refptr.988 = type { %"class.base::RefCountedData.989"* }
%"class.base::RefCountedData.989" = type opaque
%class.scoped_refptr.990 = type { %"class.base::RefCountedData.991"* }
%"class.base::RefCountedData.991" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.936" }
%"class.base::time_internal::TimeBase.936" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.882, %class.scoped_refptr.882, %class.scoped_refptr.882, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.888, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.900", %"class.absl::optional.905", %"class.absl::optional.915", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.925", %"class.absl::optional.915", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.915", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.925", %"class.absl::optional.930", i8, %class.scoped_refptr.935 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.883" }
%"class.WTF::HashMap.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"struct.WTF::KeyValuePair.887"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.887" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.888 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.889", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.898, i8, %"class.url::Origin" }
%"class.base::RefCounted.889" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.890" }
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%class.scoped_refptr.898 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.899", [4 x i8] }>
%"class.base::RefCountedThreadSafe.899" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.900" = type { %"class.absl::optional_internal::optional_data.901" }
%"class.absl::optional_internal::optional_data.901" = type { %"class.absl::optional_internal::optional_data_base.902" }
%"class.absl::optional_internal::optional_data_base.902" = type { %"class.absl::optional_internal::optional_data_dtor_base.903" }
%"class.absl::optional_internal::optional_data_dtor_base.903" = type { i8, %union.anon.904 }
%union.anon.904 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.905" = type { %"class.absl::optional_internal::optional_data.906" }
%"class.absl::optional_internal::optional_data.906" = type { %"class.absl::optional_internal::optional_data_base.907" }
%"class.absl::optional_internal::optional_data_base.907" = type { %"class.absl::optional_internal::optional_data_dtor_base.908" }
%"class.absl::optional_internal::optional_data_dtor_base.908" = type { i8, %union.anon.909 }
%union.anon.909 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.910", %"class.WTF::Vector.869", %"class.WTF::String" }
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { %class.scoped_refptr.882*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.920", %"class.absl::optional.920" }
%"class.absl::optional.915" = type { %"class.absl::optional_internal::optional_data.916" }
%"class.absl::optional_internal::optional_data.916" = type { %"class.absl::optional_internal::optional_data_base.917" }
%"class.absl::optional_internal::optional_data_base.917" = type { %"class.absl::optional_internal::optional_data_dtor_base.918" }
%"class.absl::optional_internal::optional_data_dtor_base.918" = type { i8, %union.anon.919 }
%union.anon.919 = type { %"class.WTF::String" }
%"class.absl::optional.925" = type { %"class.absl::optional_internal::optional_data.926" }
%"class.absl::optional_internal::optional_data.926" = type { %"class.absl::optional_internal::optional_data_base.927" }
%"class.absl::optional_internal::optional_data_base.927" = type { %"class.absl::optional_internal::optional_data_dtor_base.928" }
%"class.absl::optional_internal::optional_data_dtor_base.928" = type { i8, %union.anon.929 }
%union.anon.929 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.930" = type { %"class.absl::optional_internal::optional_data.931" }
%"class.absl::optional_internal::optional_data.931" = type { %"class.absl::optional_internal::optional_data_base.932" }
%"class.absl::optional_internal::optional_data_base.932" = type { %"class.absl::optional_internal::optional_data_dtor_base.933" }
%"class.absl::optional_internal::optional_data_dtor_base.933" = type { i8, %union.anon.934 }
%union.anon.934 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.935 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1279", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1279" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1280" }
%"class.std::__1::vector.1280" = type { %"class.std::__1::__vector_base.1281" }
%"class.std::__1::__vector_base.1281" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { i32* }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.937", %class.scoped_refptr.951, %class.scoped_refptr.952, %"struct.blink::CacheControlHeader", %"class.absl::optional.920", %"class.absl::optional.953", %"class.absl::optional.953", %"class.absl::optional.953", i64, %"class.blink::KURL", %"class.WTF::Vector.958", %"class.WTF::String", %"class.WTF::Vector.869", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.925", %"class.WTF::Vector.869", %"class.blink::KURL", %"class.absl::optional.963" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.937" = type { %"class.absl::optional_internal::optional_data.938" }
%"class.absl::optional_internal::optional_data.938" = type { %"class.absl::optional_internal::optional_data_base.939" }
%"class.absl::optional_internal::optional_data_base.939" = type { %"class.absl::optional_internal::optional_data_dtor_base.940" }
%"class.absl::optional_internal::optional_data_dtor_base.940" = type { i8, %union.anon.941 }
%union.anon.941 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.869", %"class.WTF::String", i64, i64, %"class.WTF::Vector.942", %"class.WTF::Vector.946" }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.947" }
%"class.WTF::VectorBuffer.947" = type { %"class.WTF::VectorBufferBase.948" }
%"class.WTF::VectorBufferBase.948" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.951 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.952 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.953" = type { %"class.absl::optional_internal::optional_data.954" }
%"class.absl::optional_internal::optional_data.954" = type { %"class.absl::optional_internal::optional_data_base.955" }
%"class.absl::optional_internal::optional_data_base.955" = type { %"class.absl::optional_internal::optional_data_dtor_base.956" }
%"class.absl::optional_internal::optional_data_dtor_base.956" = type { i8, %union.anon.957 }
%union.anon.957 = type { %"class.base::Time" }
%"class.WTF::Vector.958" = type { %"class.WTF::VectorBuffer.959" }
%"class.WTF::VectorBuffer.959" = type { %"class.WTF::VectorBufferBase.960" }
%"class.WTF::VectorBufferBase.960" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.963" = type { %"class.absl::optional_internal::optional_data.964" }
%"class.absl::optional_internal::optional_data.964" = type { %"class.absl::optional_internal::optional_data_base.965" }
%"class.absl::optional_internal::optional_data_base.965" = type { %"class.absl::optional_internal::optional_data_dtor_base.966" }
%"class.absl::optional_internal::optional_data_dtor_base.966" = type { i8, %union.anon.967 }
%union.anon.967 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.994 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.995", i64, %"class.WTF::Vector", %"class.WTF::Vector.997" }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.997" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999" }
%"class.WTF::VectorBufferBase.999" = type { %"class.std::__1::unique_ptr.1000"*, i32, i32 }
%"class.std::__1::unique_ptr.1000" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1003" }
%"class.std::__1::__tree.1003" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.blink::HeapHashMap.1012" = type { %"class.WTF::HashMap.1015" }
%"class.WTF::HashMap.1015" = type { %"class.WTF::HashTable.1016" }
%"class.WTF::HashTable.1016" = type <{ %"struct.WTF::KeyValuePair.1018"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1018" = type opaque
%"class.blink::HeapVector.1019" = type { %"class.WTF::Vector.1022" }
%"class.WTF::Vector.1022" = type { %"class.WTF::VectorBuffer.1023" }
%"class.WTF::VectorBuffer.1023" = type { %"class.WTF::VectorBufferBase.1024" }
%"class.WTF::VectorBufferBase.1024" = type { %"class.blink::Member.1025"*, i32, i32 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.840" }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1029" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1030", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.369, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1030" = type { %"class.blink::MemberBase.497" }
%"class.blink::HeapHashMap.1031" = type { %"class.WTF::HashMap.1034" }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type opaque
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %class.scoped_refptr.1041*, i32, i32 }
%class.scoped_refptr.1041 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1044" = type { %"class.WTF::HashSet.1047" }
%"class.WTF::HashSet.1047" = type { %"class.WTF::HashTable.1048" }
%"class.WTF::HashTable.1048" = type <{ %"class.blink::Member.992"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.WTF::HashSet.350"* }
%"class.WTF::HashSet.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.818" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.409 }
%class.scoped_refptr.409 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1056" }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1060" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::DocumentParser"* }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::KURL"* }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.514 }
%class.scoped_refptr.514 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.518 }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.540" }
%"class.blink::HeapHashMap.540" = type { %"class.WTF::HashMap.543" }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.549" = type { %"class.WTF::HashSet.552" }
%"class.WTF::HashSet.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"class.blink::WeakMember.555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.555" = type opaque
%"class.blink::HeapHashSet.556" = type { %"class.WTF::HashSet.559" }
%"class.WTF::HashSet.559" = type { %"class.WTF::HashTable.560" }
%"class.WTF::HashTable.560" = type <{ %"class.blink::WeakMember.562"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.562" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.573" = type { %"class.WTF::HashMap.576" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type opaque
%"class.WTF::Vector.580" = type { %"class.WTF::VectorBuffer.581" }
%"class.WTF::VectorBuffer.581" = type { %"class.WTF::VectorBufferBase.582" }
%"class.WTF::VectorBufferBase.582" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.99" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.103", %"class.blink::Member.105", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.103" = type { %"class.WTF::SingleThreadedBitField.104" }
%"class.WTF::SingleThreadedBitField.104" = type { i32 }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.108", %"class.WTF::AtomicString", %"class.WTF::Vector.110" }
%"class.WTF::RefCounted.108" = type { %"class.base::RefCounted.109" }
%"class.base::RefCounted.109" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.591" = type { %"class.WTF::Vector.594" }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { %"class.blink::Member.597"*, i32, i32 }
%"class.blink::Member.597" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.605" = type { %"class.WTF::HashSet.608" }
%"class.WTF::HashSet.608" = type { %"class.WTF::HashTable.609" }
%"class.WTF::HashTable.609" = type <{ %"class.blink::WeakMember.611"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.611" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.612", i32, [4 x i8] }>
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"struct.std::__1::pair.615"*, i32, i32 }
%"struct.std::__1::pair.615" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.451" = type { %"class.WTF::Vector.454" }
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"class.blink::Member.97"*, i32, i32 }
%"class.blink::HeapVector.631" = type { %"class.WTF::Vector.634" }
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.636" }
%"class.WTF::VectorBufferBase.636" = type { %"class.blink::Member.637"*, i32, i32 }
%"class.blink::Member.637" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"struct.WTF::KeyValuePair.653"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.653" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.537", { i64, i64 } }
%"class.blink::WeakMember.537" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashSet.662" = type { %"class.WTF::HashSet.665" }
%"class.WTF::HashSet.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ %"class.blink::Member.668"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.668" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.699" = type { %"class.WTF::VectorBuffer.700" }
%"class.WTF::VectorBuffer.700" = type { %"class.WTF::VectorBufferBase.701" }
%"class.WTF::VectorBufferBase.701" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.704" = type { %"class.WTF::HashMap.707" }
%"class.WTF::HashMap.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"struct.WTF::KeyValuePair.710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.710" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.723" = type { %"class.WTF::HashMap.726" }
%"class.WTF::HashMap.726" = type { %"class.WTF::HashTable.727" }
%"class.WTF::HashTable.727" = type <{ %"struct.WTF::KeyValuePair.729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.729" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.730" }
%"class.blink::HeapHashSet.730" = type { %"class.WTF::HashSet.733" }
%"class.WTF::HashSet.733" = type { %"class.WTF::HashTable.734" }
%"class.WTF::HashTable.734" = type <{ %"class.blink::WeakMember.736"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.736" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member", %"class.blink::HeapHashSet.746", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.753", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.746" = type { %"class.WTF::HashSet.749" }
%"class.WTF::HashSet.749" = type { %"class.WTF::HashTable.750" }
%"class.WTF::HashTable.750" = type <{ %"class.blink::Member.752"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.752" = type opaque
%"class.blink::HeapTaskRunnerTimer.753" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.754", { i64, i64 } }
%"class.blink::WeakMember.754" = type { %"class.blink::MemberBase.740" }
%"class.blink::WeakMember.741" = type { %"class.blink::MemberBase.80" }
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.7", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.14" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type opaque
%"class.blink::HTMLParserScriptRunnerHost" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.blink::HTMLInputStream" = type { %"class.blink::SegmentedString", %"class.blink::SegmentedString"* }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::HTMLParserReentryPermit"* }
%"class.blink::HTMLParserReentryPermit" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::HTMLToken"* }
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector.36", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr.42" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38", [1920 x i8] }
%"class.WTF::VectorBufferBase.38" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.39, %class.LiteralBuffer.39, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%class.LiteralBuffer.39 = type { i16*, i16*, i16*, [32 x i16] }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.45", %"class.WTF::Vector.45", i8, [7 x i8] }>
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { i16*, i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::HTMLTokenizer"* }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.39, %class.LiteralBuffer.59, %class.LiteralBuffer.59, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.59 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::HTMLParserScriptRunner"* }
%"class.blink::HTMLParserScriptRunner" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::HTMLTreeBuilder"* }
%"class.blink::HTMLTreeBuilder" = type <{ i8, [7 x i8], %"class.blink::HTMLTreeBuilder::FragmentParsingContext", %"class.blink::HTMLConstructionSite", i32, i32, %"class.WTF::Vector.139", %"class.WTF::StringBuilder", i8, i8, [6 x i8], %"class.blink::Member.144", %"class.blink::Member.97", %"class.WTF::TextPosition", %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::HTMLTreeBuilder::FragmentParsingContext" = type { %"class.blink::Member.69", %"class.blink::Member.71" }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::DocumentFragment"* }
%"class.blink::DocumentFragment" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::HTMLStackItem"* }
%"class.blink::HTMLStackItem" = type <{ %"class.blink::Member.75", %"class.WTF::AtomicString", %"class.WTF::Vector.87", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLConstructionSite" = type <{ %"class.blink::Member.29", %"class.blink::Member", %"class.blink::Member.75", %"class.blink::Member.71", %"class.blink::Member.93", %"class.blink::HTMLElementStack", %"class.blink::HTMLFormattingElementList", %"class.blink::HeapVector.121", %"class.blink::HTMLConstructionSite::PendingText", i32, i8, i8, i8, i8 }>
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::HTMLElementStack" = type <{ %"class.blink::Member.95", %"class.blink::Member.75", %"class.blink::Member.97", %"class.blink::Member.97", i32, [4 x i8] }>
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::HTMLElementStack::ElementRecord"* }
%"class.blink::HTMLElementStack::ElementRecord" = type { %"class.blink::Member.71", %"class.blink::Member.95" }
%"class.blink::HTMLFormattingElementList" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.117" }
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"class.blink::HTMLFormattingElementList::Entry"*, i32, i32 }
%"class.blink::HTMLFormattingElementList::Entry" = type { %"class.blink::Member.71" }
%"class.blink::HeapVector.121" = type { %"class.WTF::Vector.124" }
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126", [40 x i8] }
%"class.WTF::VectorBufferBase.126" = type { %"struct.blink::HTMLConstructionSiteTask"*, i32, i32 }
%"struct.blink::HTMLConstructionSiteTask" = type <{ i32, [4 x i8], %"class.blink::Member.75", %"class.blink::Member.79", %"class.blink::Member.79", i8, [7 x i8] }>
%"class.blink::HTMLConstructionSite::PendingText" = type <{ %"class.blink::Member.75", %"class.blink::Member.79", %"class.WTF::StringBuilder", i32, [4 x i8] }>
%"class.WTF::Vector.139" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { i32*, i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.129, i32, i8, i8, [2 x i8] }>
%union.anon.129 = type { %"class.WTF::Vector.130" }
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132", [16 x i8] }
%"class.WTF::VectorBufferBase.132" = type { i8*, i32, i32 }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::HTMLDocumentParser"* }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::HTMLPreloadScanner"* }
%"class.blink::HTMLPreloadScanner" = type { %"class.blink::TokenPreloadScanner", %"class.blink::SegmentedString", %"class.blink::HTMLToken", %"class.std::__1::unique_ptr.56" }
%"class.blink::TokenPreloadScanner" = type { %"class.blink::CSSPreloadScanner", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.161, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::TokenPreloadScanner::PictureData", i64, %"class.std::__1::unique_ptr.162", %"class.blink::Persistent", %"class.blink::ClientHintsPreferences", i32, i8, i8, %"class.WTF::Vector.361" }
%"class.blink::CSSPreloadScanner" = type { i32, [4 x i8], %"class.WTF::StringBuilder", %"class.WTF::StringBuilder", i32, %"class.WTF::Vector.149"*, %"class.blink::KURL"*, %"class.blink::PreloadRequest::ExclusionInfo"* }
%"class.blink::PreloadRequest::ExclusionInfo" = type { i32 (...)**, %"class.WTF::RefCounted.155", %"class.blink::KURL", %"class.WTF::HashSet.157", %"class.WTF::HashSet.157" }
%"class.WTF::RefCounted.155" = type { %"class.base::RefCounted.156" }
%"class.base::RefCounted.156" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashSet.157" = type { %"class.WTF::HashTable.158" }
%"class.WTF::HashTable.158" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.161 = type { %"class.blink::PreloadRequest::ExclusionInfo"* }
%"struct.blink::TokenPreloadScanner::PictureData" = type <{ %"class.WTF::String", float, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.blink::CachedDocumentParameters"* }
%"struct.blink::CachedDocumentParameters" = type { i8, [3 x i8], %"class.blink::Length", i8, i8, i32, i32, i32, %"class.blink::WeakPersistent", %"class.blink::WeakPersistent.348", %"class.WTF::HashSet.350" }
%"class.blink::Length" = type <{ %union.anon.165, i8, i8, i8, i8 }>
%union.anon.165 = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::LazyLoadImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::WeakPersistent.348" = type { %"class.blink::PersistentBase.349" }
%"class.blink::PersistentBase.349" = type { %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SubresourceRedirectOriginsPreloader" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.357" }
%"class.blink::PersistentBase.357" = type { %"class.blink::MediaValuesCached"*, %"class.blink::PersistentNodePtr.360" }
%"class.blink::MediaValuesCached" = type { %"class.blink::MediaValues", %"struct.blink::MediaValuesCached::MediaValuesCachedData" }
%"class.blink::MediaValues" = type { i32 (...)** }
%"struct.blink::MediaValuesCached::MediaValuesCachedData" = type <{ double, double, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [5 x i8], %"class.WTF::String", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"struct.blink::TokenPreloadScanner::Checkpoint"*, i32, i32 }
%"struct.blink::TokenPreloadScanner::Checkpoint" = type { %"class.blink::KURL", i8, i8, i64, %class.scoped_refptr.161 }
%class.scoped_refptr.369 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::HTMLParserScheduler"* }
%"class.blink::HTMLParserScheduler" = type opaque
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.blink::HTMLDocumentParser::TokenizedChunk"* }
%"struct.blink::HTMLDocumentParser::TokenizedChunk" = type { %"class.WTF::Vector.380", %"class.WTF::Vector.149", %"class.absl::optional", i32, %"class.WTF::Vector.396", i32, i32, i8, i32 }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.blink::CompactHTMLToken"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.390 }
%union.anon.390 = type { %"struct.blink::ViewportDescription" }
%"struct.blink::ViewportDescription" = type { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, float, float, i8, i8, i8, i8, %"class.absl::optional.391" }
%"class.absl::optional.391" = type { %"class.absl::optional_internal::optional_data.392" }
%"class.absl::optional_internal::optional_data.392" = type { %"class.absl::optional_internal::optional_data_base.393" }
%"class.absl::optional_internal::optional_data_base.393" = type { %"class.absl::optional_internal::optional_data_dtor_base.394" }
%"class.absl::optional_internal::optional_data_dtor_base.394" = type { i8, %union.anon.395 }
%union.anon.395 = type { i32 }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.398", [4 x i8] }>
%"class.WTF::VectorBufferBase.398" = type { i32*, i32, i32 }
%"class.WTF::Deque.404" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"class.std::__1::unique_ptr.377"*, i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::HTMLResourcePreloader"* }
%"class.blink::HTMLResourcePreloader" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::HTMLDocumentParserState"* }
%"class.blink::HTMLDocumentParserState" = type opaque
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.std::__1::unique_ptr.152"*, i32, i32 }
%"class.std::__1::unique_ptr.152" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::HTMLParserMetrics"* }
%"class.blink::HTMLParserMetrics" = type opaque
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.base::ElapsedTimer"* }
%"class.blink::CompactHTMLToken" = type { i8, %"class.WTF::String", %"class.WTF::Vector.383", %"class.WTF::TextPosition" }
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"struct.blink::CompactHTMLToken::Attribute"*, i32, i32 }
%"struct.blink::CompactHTMLToken::Attribute" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::HTMLDocument" = type opaque
%"class.blink::AtomicHTMLToken" = type { i32, %"class.WTF::AtomicString", %"class.WTF::String", %"class.std::__1::unique_ptr.42", i8, i8, %"class.WTF::Vector.87" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink15AtomicHTMLTokenD2Ev = comdat any

$_ZNK5blink14DocumentParser18NameInHeapSnapshotEv = comdat any

$_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv = comdat any

$_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv = comdat any

$_ZN5blink14DocumentParser18SetHasAppendedDataEv = comdat any

$_ZNK5blink25DecodedDataDocumentParser10WellFormedEv = comdat any

$_ZN5blink18HTMLDocumentParser11InputStreamEv = comdat any

$_ZNK5blink18HTMLDocumentParser17HasPreloadScannerEv = comdat any

$_ZThn80_N5blink18HTMLDocumentParser11InputStreamEv = comdat any

$_ZThn80_NK5blink18HTMLDocumentParser17HasPreloadScannerEv = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

@_ZTVN5blink18TextDocumentParserE = hidden unnamed_addr constant { [34 x i8*], [9 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::DocumentParser"*)* @_ZNK5blink14DocumentParser18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::TextDocumentParser"*)* @_ZN5blink18TextDocumentParserD2Ev to i8*), i8* bitcast (void (%"class.blink::TextDocumentParser"*)* @_ZN5blink18TextDocumentParserD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)* @_ZNK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::ScriptableDocumentParser"* (%"class.blink::ScriptableDocumentParser"*)* @_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser17HasInsertionPointEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)* @_ZN5blink18HTMLDocumentParser6insertERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::TextDocumentParser"*, i8*, i64)* @_ZN5blink18TextDocumentParser11AppendBytesEPKcm to i8*), i8* bitcast (i1 (%"class.blink::DecodedDataDocumentParser"*)* @_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.blink::TextResourceDecoder"*)* @_ZN5blink18HTMLDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (%"class.blink::TextResourceDecoder"* (%"class.blink::DecodedDataDocumentParser"*)* @_ZN5blink25DecodedDataDocumentParser7DecoderEv to i8*), i8* bitcast (void (%"class.blink::DocumentParser"*)* @_ZN5blink14DocumentParser18SetHasAppendedDataEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)* @_ZN5blink18HTMLDocumentParser6AppendERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser6FinishEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser11StopParsingEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser6DetachEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser24DocumentElementAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::DecodedDataDocumentParser"*)* @_ZNK5blink25DecodedDataDocumentParser10WellFormedEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser5FlushEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser17IsExecutingScriptEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser33ExecuteScriptsWaitingForResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser19IsWaitingForScriptsEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser37DidAddPendingParserBlockingStylesheetEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser42DidLoadAllPendingParserBlockingStylesheetsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser21IsParsingAtLineNumberEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser10LineNumberEv to i8*), i8* bitcast (i64 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser18NotifyScriptLoadedEv to i8*), i8* bitcast (%"class.blink::HTMLInputStream"* (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser11InputStreamEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser17HasPreloadScannerEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::TextDocumentParser"*)* @_ZThn80_N5blink18TextDocumentParserD1Ev to i8*), i8* bitcast (void (%"class.blink::TextDocumentParser"*)* @_ZThn80_N5blink18TextDocumentParserD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParser18NotifyScriptLoadedEv to i8*), i8* bitcast (%"class.blink::HTMLInputStream"* (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParser11InputStreamEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_NK5blink18HTMLDocumentParser17HasPreloadScannerEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv to i8*)] }, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [46 x i8] c"word-wrap: break-word; white-space: pre-wrap;\00", align 1
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Attribute]\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"DocumentParser\00", align 1

@_ZN5blink18TextDocumentParserC1ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyE = hidden unnamed_addr alias void (%"class.blink::TextDocumentParser"*, %"class.blink::HTMLDocument"*, i32), void (%"class.blink::TextDocumentParser"*, %"class.blink::HTMLDocument"*, i32)* @_ZN5blink18TextDocumentParserC2ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyE
@_ZN5blink18TextDocumentParserD1Ev = hidden unnamed_addr alias void (%"class.blink::TextDocumentParser"*), void (%"class.blink::TextDocumentParser"*)* @_ZN5blink18TextDocumentParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDocumentParserC2ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyE(%"class.blink::TextDocumentParser"*, %"class.blink::HTMLDocument"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink18HTMLDocumentParserC2ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"* %4, %"class.blink::HTMLDocument"* %1, i32 %2, i32 1) #8
  %5 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [9 x i8*] }, { [34 x i8*], [9 x i8*] }* @_ZTVN5blink18TextDocumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [9 x i8*] }, { [34 x i8*], [9 x i8*] }* @_ZTVN5blink18TextDocumentParserE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  ret void
}

declare void @_ZN5blink18HTMLDocumentParserC2ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocument"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDocumentParserD2Ev(%"class.blink::TextDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink18TextDocumentParserD1Ev(%"class.blink::TextDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast %"class.WTF::Vector.149"* %2 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDocumentParserD0Ev(%"class.blink::TextDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink18TextDocumentParserD0Ev(%"class.blink::TextDocumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast %"class.WTF::Vector.149"* %2 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDocumentParser11AppendBytesEPKcm(%"class.blink::TextDocumentParser"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZN5blink18TextDocumentParser20InsertFakePreElementEv(%"class.blink::TextDocumentParser"* %0)
  br label %14

14:                                               ; preds = %9, %13
  %15 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink18HTMLDocumentParser11AppendBytesEPKcm(%"class.blink::HTMLDocumentParser"* %15, i8* %1, i64 %2) #8
  br label %16

16:                                               ; preds = %3, %5, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDocumentParser20InsertFakePreElementEv(%"class.blink::TextDocumentParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.87", align 8
  %3 = alloca %"class.blink::Attribute", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.blink::AtomicHTMLToken", align 8
  %6 = bitcast %"class.WTF::Vector.87"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %2, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #8
  %10 = bitcast %"class.blink::Attribute"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %12 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %14, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %16 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %14, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777216
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #8
  br label %24

24:                                               ; preds = %22, %17, %1
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #8
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  call void @llvm.trap() #8
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %24, %29, %44
  %47 = load i32, i32* %9, align 4
  %48 = load i32, i32* %8, align 8
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %72, label %50, !prof !3

50:                                               ; preds = %46
  %51 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %7, align 8
  %52 = zext i32 %47 to i64
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %51, i64 %52, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %53, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %55 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %53, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 16777216
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %62) #8
  br label %63

63:                                               ; preds = %50, %56, %61
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %51, i64 %52, i32 1
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::AtomicString"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.WTF::AtomicString"* %64 to i64*
  store i64 %68, i64* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %70 = load i32, i32* %9, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %9, align 4
  br label %88

72:                                               ; preds = %46
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.87"* nonnull %2, %"class.blink::Attribute"* nonnull dereferenceable(16) %3) #8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #8
  br label %88

88:                                               ; preds = %63, %72, %84, %87
  %89 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %3, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %89) #8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #8
  br label %105

105:                                              ; preds = %88, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  %106 = bitcast %"class.blink::AtomicHTMLToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %106) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 56, i1 false)
  %107 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 0
  store i32 2, i32* %110, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %113, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i33
  %124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #8
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !3

129:                                              ; preds = %120
  call void @llvm.trap() #8
  unreachable

130:                                              ; preds = %120
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %121, align 4
  br label %132

132:                                              ; preds = %105, %115, %130
  %133 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 2, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 6
  %135 = bitcast %"class.WTF::StringImpl"** %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 18, i1 false) #8
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.87"* %134, %"class.WTF::Vector.87"* nonnull dereferenceable(16) %2) #8
  %136 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %137 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %136, align 8
  call void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %137, %"class.blink::AtomicHTMLToken"* nonnull %5) #8
  %138 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = icmp sgt i32 %139, 1
  br i1 %140, label %146, label %141

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 0
  %143 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %136, align 8
  %144 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %143, i64 0, i32 8
  store i8 0, i8* %144, align 8
  call void @_ZN5blink18HTMLDocumentParser29ForcePlaintextForTextDocumentEv(%"class.blink::HTMLDocumentParser"* %142) #8
  %145 = getelementptr inbounds %"class.blink::TextDocumentParser", %"class.blink::TextDocumentParser"* %0, i64 0, i32 1
  store i8 1, i8* %145, align 8
  br label %146

146:                                              ; preds = %132, %141
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %106) #8
  %147 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %7, align 8
  %148 = icmp eq %"class.blink::Attribute"* %147, null
  br i1 %148, label %183, label %149, !prof !4

149:                                              ; preds = %146
  %150 = bitcast %"class.blink::Attribute"* %147 to i8*
  %151 = load i32, i32* %9, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %181, label %153, !prof !3

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  %155 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %147, i64 %154
  br label %156

156:                                              ; preds = %174, %153
  %157 = phi %"class.blink::Attribute"* [ %176, %174 ], [ %147, %153 ]
  %158 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %157, i64 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #8
  br label %174

174:                                              ; preds = %173, %170, %156
  %175 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %157, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %175) #8
  %176 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %157, i64 1
  %177 = icmp eq %"class.blink::Attribute"* %176, %155
  br i1 %177, label %178, label %156

178:                                              ; preds = %174
  store i32 0, i32* %9, align 4
  %179 = bitcast %"class.WTF::Vector.87"* %2 to i8**
  %180 = load i8*, i8** %179, align 8
  br label %181

181:                                              ; preds = %178, %149
  %182 = phi i8* [ %180, %178 ], [ %150, %149 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %182) #8
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %7, align 8
  br label %183

183:                                              ; preds = %146, %181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

declare void @_ZN5blink18HTMLDocumentParser11AppendBytesEPKcm(%"class.blink::HTMLDocumentParser"*, i8*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser29ForcePlaintextForTextDocumentEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %3, align 8
  %5 = icmp eq %"class.blink::Attribute"* %4, null
  br i1 %5, label %41, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Attribute"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.blink::Attribute"* [ %34, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %33) #8
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %35 = icmp eq %"class.blink::Attribute"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.87"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #8
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %42, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %42, align 8
  %44 = icmp eq %"class.blink::DoctypeData"* %43, null
  br i1 %44, label %69, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = icmp eq i16* %47, null
  %49 = bitcast i16* %47 to i8*
  br i1 %48, label %56, label %50, !prof !4

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #8
  store i16* null, i16** %46, align 8
  br label %56

56:                                               ; preds = %55, %45
  %57 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = icmp eq i16* %58, null
  %60 = bitcast i16* %58 to i8*
  br i1 %59, label %67, label %61, !prof !4

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65, !prof !3

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #8
  br label %67

67:                                               ; preds = %66, %56
  %68 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 0
  tail call void @free(i8* %68) #8
  br label %69

69:                                               ; preds = %41, %67
  %70 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #8
  br label %103

103:                                              ; preds = %86, %99, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14DocumentParser18NameInHeapSnapshotEv(%"class.blink::DocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)
}

declare void @_ZNK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptableDocumentParser"* @_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv(%"class.blink::ScriptableDocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScriptableDocumentParser"* %0
}

declare zeroext i1 @_ZN5blink18HTMLDocumentParser17HasInsertionPointEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser6insertERKN3WTF6StringE(%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DecodedDataDocumentParser", %"class.blink::DecodedDataDocumentParser"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN5blink18HTMLDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"*, %"class.blink::TextResourceDecoder"*) unnamed_addr #1

declare %"class.blink::TextResourceDecoder"* @_ZN5blink25DecodedDataDocumentParser7DecoderEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14DocumentParser18SetHasAppendedDataEv(%"class.blink::DocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink18HTMLDocumentParser6AppendERKN3WTF6StringE(%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser6FinishEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser11StopParsingEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser6DetachEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser24DocumentElementAvailableEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25DecodedDataDocumentParser10WellFormedEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink18HTMLDocumentParser5FlushEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18HTMLDocumentParser17IsExecutingScriptEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser33ExecuteScriptsWaitingForResourcesEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18HTMLDocumentParser19IsWaitingForScriptsEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser37DidAddPendingParserBlockingStylesheetEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser42DidLoadAllPendingParserBlockingStylesheetsEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18HTMLDocumentParser21IsParsingAtLineNumberEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare i32 @_ZNK5blink18HTMLDocumentParser10LineNumberEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare i64 @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink18HTMLDocumentParser18NotifyScriptLoadedEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::HTMLInputStream"* @_ZN5blink18HTMLDocumentParser11InputStreamEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4
  ret %"class.blink::HTMLInputStream"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser17HasPreloadScannerEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLPreloadScanner"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare void @_ZN5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_NK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink18HTMLDocumentParser18NotifyScriptLoadedEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::HTMLInputStream"* @_ZThn80_N5blink18HTMLDocumentParser11InputStreamEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = getelementptr inbounds %"class.blink::Member.418", %"class.blink::Member.418"* %2, i64 12
  %4 = bitcast %"class.blink::Member.418"* %3 to %"class.blink::HTMLInputStream"*
  ret %"class.blink::HTMLInputStream"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn80_NK5blink18HTMLDocumentParser17HasPreloadScannerEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = getelementptr inbounds %"class.blink::Member.418", %"class.blink::Member.418"* %2, i64 29
  %4 = bitcast %"class.blink::Member.418"* %3 to %"class.blink::HTMLPreloadScanner"**
  %5 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLPreloadScanner"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Member.418"* %2 to %"class.blink::HTMLDocumentParser"*
  %9 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %8, i64 0, i32 25
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i1 [ false, %1 ], [ %11, %7 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #0 align 2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.87"*, %"class.WTF::Vector.87"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %9) #8
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #8
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.87"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"class.blink::Attribute"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::Attribute"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %68, label %28

28:                                               ; preds = %17, %64
  %29 = phi %"class.blink::Attribute"* [ %65, %64 ], [ %18, %17 ]
  %30 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777216
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %41) #8
  br label %42

42:                                               ; preds = %40, %35, %28
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #8
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #8
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 1
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %26
  br i1 %67, label %68, label %28

68:                                               ; preds = %64, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.87"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  %8 = icmp ugt %"class.blink::Attribute"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Attribute"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.87"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Attribute"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.87"* %0, i32 %22) #8
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Attribute"* %1 to i64
  %39 = ptrtoint %"class.blink::Attribute"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.87"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Attribute"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.87"* %0, i32 %50) #8
  %64 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Attribute"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Attribute"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Attribute"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 16777216
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %83) #8
  br label %84

84:                                               ; preds = %68, %77, %82
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 1
  %86 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::AtomicString"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::AtomicString"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = load i32, i32* %3, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.87"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.87"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %39, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Attribute"* [ %37, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Attribute"* [ %36, %28 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777216
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #8
  br label %28

28:                                               ; preds = %26, %21, %14
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::AtomicString"* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::AtomicString"* %29 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %35) #8
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 1
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %38 = icmp eq %"class.blink::Attribute"* %37, %10
  br i1 %38, label %39, label %14

39:                                               ; preds = %28, %4
  %40 = bitcast %"class.blink::Attribute"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #8
  br label %91

41:                                               ; preds = %2
  %42 = zext i32 %1 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %42) #8
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #8
  %45 = lshr i64 %43, 4
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %41
  %55 = bitcast %"class.blink::Attribute"* %48 to i8*
  br label %86

56:                                               ; preds = %41
  %57 = bitcast i8* %44 to %"class.blink::Attribute"*
  br label %58

58:                                               ; preds = %56, %72
  %59 = phi %"class.blink::Attribute"* [ %81, %72 ], [ %48, %56 ]
  %60 = phi %"class.blink::Attribute"* [ %80, %72 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777216
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #8
  br label %72

72:                                               ; preds = %70, %65, %58
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::AtomicString"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %79) #8
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 1
  %82 = icmp eq %"class.blink::Attribute"* %81, %52
  br i1 %82, label %83, label %58

83:                                               ; preds = %72
  %84 = bitcast %"class.WTF::Vector.87"* %0 to i8**
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %54, %83
  %87 = phi i8* [ %85, %83 ], [ %55, %54 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #8
  %88 = bitcast %"class.WTF::Vector.87"* %0 to i64*
  store atomic i64 %46, i64* %88 monotonic, align 8
  %89 = trunc i64 %45 to i32
  %90 = getelementptr inbounds %"class.WTF::Vector.87", %"class.WTF::Vector.87"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %89, i32* %90, align 8
  br label %91

91:                                               ; preds = %86, %39
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
