; ModuleID = '../../content/browser/appcache/appcache_backfillers.cc'
source_filename = "../../content/browser/appcache/appcache_backfillers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::AppCacheBackfillerVersion8" = type { %"class.sql::Database"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.sql::Statement" = type <{ %class.scoped_refptr.19, i8, i8, [6 x i8] }>
%class.scoped_refptr.19 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.22" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::AppCacheBackfillerVersion9" = type { %"class.sql::Database"* }

@_ZZN7content26AppCacheBackfillerVersion822GetManifestUrlForGroupElE4kSql = internal constant [61 x i8] c"SELECT manifest_url, group_id FROM Groups WHERE group_id = ?\00", align 16
@_ZZN7content26AppCacheBackfillerVersion822UpdateEntryPaddingSizeEllE4kSql = internal constant [58 x i8] c"UPDATE Entries SET padding_size = ? WHERE response_id = ?\00", align 16
@.str = private unnamed_addr constant [55 x i8] c"../../content/browser/appcache/appcache_backfillers.cc\00", align 1
@_ZZN7content26AppCacheBackfillerVersion822UpdateCachePaddingSizeEllE4kSql = internal constant [54 x i8] c"UPDATE Caches SET padding_size = ? WHERE cache_id = ?\00", align 16
@_ZZN7content26AppCacheBackfillerVersion932UpdateCacheManifestParserVersionEllE4kSql = internal constant [65 x i8] c"UPDATE Caches SET manifest_parser_version = ? WHERE cache_id = ?\00", align 16
@_ZZN7content26AppCacheBackfillerVersion924UpdateCacheManifestScopeElRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE4kSql = internal constant [56 x i8] c"UPDATE Caches SET manifest_scope = ? WHERE cache_id = ?\00", align 16
@_ZZN7content26AppCacheBackfillerVersion922GetManifestUrlForGroupElE4kSql = internal constant [61 x i8] c"SELECT manifest_url, group_id FROM Groups WHERE group_id = ?\00", align 16
@"_ZZN7content12_GLOBAL__N_112ForEachCacheIZNS_26AppCacheBackfillerVersion820BackfillPaddingSizesEvE3$_0EEbPN3sql8DatabaseERKT_E4kSql" = internal constant [38 x i8] c"SELECT cache_id, group_id FROM Caches\00", align 16
@"_ZZN7content26AppCacheBackfillerVersion812ForEachEntryIZZNS0_20BackfillPaddingSizesEvENK3$_0clEllEUlNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEElE_EEblRKT_E4kSql" = internal constant [66 x i8] c"SELECT url, response_id, cache_id FROM Entries WHERE cache_id = ?\00", align 16
@"_ZZN7content12_GLOBAL__N_112ForEachCacheIZNS_26AppCacheBackfillerVersion937BackfillManifestParserVersionAndScopeEvE3$_1EEbPN3sql8DatabaseERKT_E4kSql" = internal constant [38 x i8] c"SELECT cache_id, group_id FROM Caches\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26AppCacheBackfillerVersion820BackfillPaddingSizesEv(%"class.content::AppCacheBackfillerVersion8"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Statement", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.sql::Statement", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.absl::optional", align 8
  %14 = alloca %"class.sql::Statement", align 8
  %15 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion8", %"class.content::AppCacheBackfillerVersion8"* %0, i64 0, i32 0
  %16 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %17 = bitcast %"class.sql::Statement"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #5
  %18 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"_ZZN7content12_GLOBAL__N_112ForEachCacheIZNS_26AppCacheBackfillerVersion820BackfillPaddingSizesEvE3$_0EEbPN3sql8DatabaseERKT_E4kSql", i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %14, %"class.sql::Database::StatementRef"* %18) #5
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %21 = bitcast %"class.sql::Statement"* %10 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %class.GURL* %4 to i8*
  %34 = bitcast %class.GURL* %5 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %class.GURL* %6 to i8*
  %40 = bitcast %class.GURL* %7 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.sql::Statement"* %3 to i8*
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.sql::Statement"* %2 to i8*
  br label %53

53:                                               ; preds = %148, %1
  %54 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %14) #5
  br i1 %54, label %55, label %149

55:                                               ; preds = %53
  %56 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %14, i32 0) #5
  %57 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %14, i32 1) #5
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false) #5
  call void @_ZN7content26AppCacheBackfillerVersion822GetManifestUrlForGroupEl(%"class.absl::optional"* nonnull sret %13, %"class.content::AppCacheBackfillerVersion8"* %0, i64 %57) #5
  %58 = load i8, i8* %19, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #5
  br label %149

61:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false) #5
  %62 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %63 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %62, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @"_ZZN7content26AppCacheBackfillerVersion812ForEachEntryIZZNS0_20BackfillPaddingSizesEvENK3$_0clEllEUlNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEElE_EEblRKT_E4kSql", i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %10, %"class.sql::Database::StatementRef"* %63) #5
  %64 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %10, i32 0, i64 %56) #5
  %65 = load i8, i8* %48, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %50, align 8
  %68 = load i64, i64* %51, align 8
  br label %69

69:                                               ; preds = %135, %61
  %70 = phi i64 [ 0, %61 ], [ %120, %135 ]
  %71 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %10) #5
  br i1 %71, label %72, label %136

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #5
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %11, %"class.sql::Statement"* nonnull %10, i32 0) #5
  %73 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %10, i32 1) #5
  %74 = load i8, i8* %26, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %22, i64 24, i1 false) #5
  br label %80

77:                                               ; preds = %72
  %78 = load i8*, i8** %23, align 8
  %79 = load i64, i64* %24, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %78, i64 %79) #5
  br label %80

80:                                               ; preds = %77, %76
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #5
  %81 = load i8, i8* %30, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %20, i64 24, i1 false) #5
  br label %87

84:                                               ; preds = %80
  %85 = load i8*, i8** %31, align 8
  %86 = load i64, i64* %32, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %85, i64 %86) #5
  br label %87

87:                                               ; preds = %84, %83
  br i1 %66, label %89, label %88

88:                                               ; preds = %87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %49, i64 24, i1 false) #5
  br label %90

89:                                               ; preds = %87
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %67, i64 %68) #5
  br label %90

90:                                               ; preds = %89, %88
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %33) #5
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %34) #5
  %91 = load i8, i8* %36, align 1
  %92 = icmp slt i8 %91, 0
  %93 = load i8*, i8** %37, align 8
  %94 = select i1 %92, i8* %93, i8* %27
  %95 = load i64, i64* %38, align 8
  %96 = zext i8 %91 to i64
  %97 = select i1 %92, i64 %95, i64 %96
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* %94, i64 %97) #5
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %4, %class.GURL* nonnull %5) #5
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %39) #5
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %40) #5
  %98 = load i8, i8* %42, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i8*, i8** %43, align 8
  %101 = select i1 %99, i8* %100, i8* %28
  %102 = load i64, i64* %44, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* %101, i64 %104) #5
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %6, %class.GURL* nonnull %7) #5
  %105 = call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %4, %class.GURL* nonnull dereferenceable(120) %6) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %39) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %33) #5
  br i1 %105, label %108, label %106

106:                                              ; preds = %90
  %107 = call i64 @_ZN7storage28ComputeRandomResponsePaddingEv() #5
  br label %108

108:                                              ; preds = %106, %90
  %109 = phi i64 [ %107, %106 ], [ 0, %90 ]
  %110 = load i8, i8* %42, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %113) #6
  br label %114

114:                                              ; preds = %112, %108
  %115 = load i8, i8* %36, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %118) #6
  br label %119

119:                                              ; preds = %117, %114
  %120 = add nsw i64 %109, %70
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false) #5
  %121 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %122 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %121, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 99, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZZN7content26AppCacheBackfillerVersion822UpdateEntryPaddingSizeEllE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %122) #5
  %123 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %109) #5
  %124 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %73) #5
  %125 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #5
  %126 = load i8, i8* %30, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %119
  %129 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %129) #6
  br label %130

130:                                              ; preds = %128, %119
  %131 = load i8, i8* %26, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %134) #6
  br label %135

135:                                              ; preds = %133, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #5
  br i1 %125, label %69, label %136

136:                                              ; preds = %135, %69
  %137 = phi i64 [ %120, %135 ], [ %70, %69 ]
  %138 = phi i1 [ false, %135 ], [ true, %69 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #5
  br i1 %138, label %139, label %145

139:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false) #5
  %140 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %141 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %140, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 109, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @_ZZN7content26AppCacheBackfillerVersion822UpdateCachePaddingSizeEllE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %2, %"class.sql::Database::StatementRef"* %141) #5
  %142 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %2, i32 0, i64 %137) #5
  %143 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %2, i32 1, i64 %56) #5
  %144 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %2) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #5
  br label %145

145:                                              ; preds = %139, %136
  %146 = phi i1 [ %144, %139 ], [ false, %136 ]
  br i1 %66, label %147, label %148

147:                                              ; preds = %145
  call void @_ZdlPv(i8* %67) #6
  br label %148

148:                                              ; preds = %147, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #5
  br i1 %146, label %53, label %149

149:                                              ; preds = %53, %148, %60
  %150 = phi i1 [ false, %60 ], [ true, %53 ], [ false, %148 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #5
  ret i1 %150
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26AppCacheBackfillerVersion822GetManifestUrlForGroupEl(%"class.absl::optional"* noalias nocapture sret, %"class.content::AppCacheBackfillerVersion8"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion8", %"class.content::AppCacheBackfillerVersion8"* %1, i64 0, i32 0
  %8 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %10 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @_ZZN7content26AppCacheBackfillerVersion822GetManifestUrlForGroupElE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %10) #5
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %2) #5
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #5
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon.18* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #5
  br label %22

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #5
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %5, %"class.sql::Statement"* nonnull %4, i32 0) #5
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %18, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #5
  br label %22

22:                                               ; preds = %17, %13
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret void
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #2

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #2

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26AppCacheBackfillerVersion822UpdateEntryPaddingSizeEll(%"class.content::AppCacheBackfillerVersion8"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion8", %"class.content::AppCacheBackfillerVersion8"* %0, i64 0, i32 0
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 99, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZZN7content26AppCacheBackfillerVersion822UpdateEntryPaddingSizeEllE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #5
  %10 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %2) #5
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %1) #5
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret i1 %12
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26AppCacheBackfillerVersion822UpdateCachePaddingSizeEll(%"class.content::AppCacheBackfillerVersion8"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion8", %"class.content::AppCacheBackfillerVersion8"* %0, i64 0, i32 0
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 109, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @_ZZN7content26AppCacheBackfillerVersion822UpdateCachePaddingSizeEllE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #5
  %10 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %2) #5
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %1) #5
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26AppCacheBackfillerVersion937BackfillManifestParserVersionAndScopeEv(%"class.content::AppCacheBackfillerVersion9"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Statement", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion9", %"class.content::AppCacheBackfillerVersion9"* %0, i64 0, i32 0
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %9 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #5
  %10 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"_ZZN7content12_GLOBAL__N_112ForEachCacheIZNS_26AppCacheBackfillerVersion937BackfillManifestParserVersionAndScopeEvE3$_1EEbPN3sql8DatabaseERKT_E4kSql", i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %10) #5
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.sql::Statement"* %3 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds i8, i8* %13, i64 1
  %17 = bitcast %"class.sql::Statement"* %2 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %54, %1
  %24 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #5
  br i1 %24, label %25, label %55

25:                                               ; preds = %23
  %26 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %6, i32 0) #5
  %27 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %6, i32 1) #5
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #5
  call void @_ZN7content26AppCacheBackfillerVersion922GetManifestUrlForGroupEl(%"class.absl::optional"* nonnull sret %4, %"class.content::AppCacheBackfillerVersion9"* %0, i64 %27) #5
  %28 = load i8, i8* %11, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5
  br label %55

31:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #5
  %32 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %33 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %32, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZZN7content26AppCacheBackfillerVersion932UpdateCacheManifestParserVersionEllE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %33) #5
  %34 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 0) #5
  %35 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %26) #5
  %36 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  br i1 %36, label %37, label %48

37:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #5
  store i8 1, i8* %15, align 1
  store i8 47, i8* %13, align 8
  store i8 0, i8* %16, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #5
  %38 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %39 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %38, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 156, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @_ZZN7content26AppCacheBackfillerVersion924UpdateCacheManifestScopeElRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %2, %"class.sql::Database::StatementRef"* %39) #5
  %40 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %2, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #5
  %41 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %2, i32 1, i64 %26) #5
  %42 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %2) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #5
  %43 = load i8, i8* %15, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %46) #6
  br label %47

47:                                               ; preds = %45, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #5
  br label %48

48:                                               ; preds = %47, %31
  %49 = phi i1 [ false, %31 ], [ %42, %47 ]
  %50 = load i8, i8* %21, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %53) #6
  br label %54

54:                                               ; preds = %52, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5
  br i1 %49, label %23, label %55

55:                                               ; preds = %23, %54, %30
  %56 = phi i1 [ false, %30 ], [ true, %23 ], [ false, %54 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #5
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26AppCacheBackfillerVersion932UpdateCacheManifestParserVersionEll(%"class.content::AppCacheBackfillerVersion9"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion9", %"class.content::AppCacheBackfillerVersion9"* %0, i64 0, i32 0
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZZN7content26AppCacheBackfillerVersion932UpdateCacheManifestParserVersionEllE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #5
  %10 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %2) #5
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %1) #5
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26AppCacheBackfillerVersion924UpdateCacheManifestScopeElRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::AppCacheBackfillerVersion9"* nocapture readonly, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion9", %"class.content::AppCacheBackfillerVersion9"* %0, i64 0, i32 0
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 156, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @_ZZN7content26AppCacheBackfillerVersion924UpdateCacheManifestScopeElRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #5
  %10 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %2) #5
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %1) #5
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #5
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret i1 %12
}

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26AppCacheBackfillerVersion922GetManifestUrlForGroupEl(%"class.absl::optional"* noalias nocapture sret, %"class.content::AppCacheBackfillerVersion9"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.content::AppCacheBackfillerVersion9", %"class.content::AppCacheBackfillerVersion9"* %1, i64 0, i32 0
  %8 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %10 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @_ZZN7content26AppCacheBackfillerVersion922GetManifestUrlForGroupElE4kSql, i64 0, i64 0)) #5
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %10) #5
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %2) #5
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #5
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon.18* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #5
  br label %22

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #5
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %5, %"class.sql::Statement"* nonnull %4, i32 0) #5
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %18, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #5
  br label %22

22:                                               ; preds = %17, %13
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare i64 @_ZN7storage28ComputeRandomResponsePaddingEv() local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
