; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/x86/aom_asm_stubs.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/x86/aom_asm_stubs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_convolve8_horiz_sse2(i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = load i16, i16* %4, align 2
  %12 = getelementptr inbounds i16, i16* %4, i64 1
  %13 = load i16, i16* %12, align 2
  %14 = or i16 %13, %11
  %15 = getelementptr inbounds i16, i16* %4, i64 6
  %16 = load i16, i16* %15, align 2
  %17 = or i16 %14, %16
  %18 = getelementptr inbounds i16, i16* %4, i64 7
  %19 = load i16, i16* %18, align 2
  %20 = or i16 %17, %19
  %21 = icmp eq i16 %20, 0
  %22 = getelementptr inbounds i16, i16* %4, i64 2
  %23 = load i16, i16* %22, align 2
  br i1 %21, label %24, label %69

24:                                               ; preds = %10
  %25 = getelementptr inbounds i16, i16* %4, i64 5
  %26 = load i16, i16* %25, align 2
  %27 = or i16 %26, %23
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %69, label %29

29:                                               ; preds = %24
  %30 = icmp sgt i32 %8, 15
  br i1 %30, label %38, label %33

31:                                               ; preds = %38
  %32 = and i32 %8, 15
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i8* [ %2, %29 ], [ %43, %31 ]
  %35 = phi i32 [ %8, %29 ], [ %32, %31 ]
  %36 = phi i8* [ %0, %29 ], [ %42, %31 ]
  %37 = icmp sgt i32 %35, 7
  br i1 %37, label %53, label %48

38:                                               ; preds = %29, %38
  %39 = phi i8* [ %42, %38 ], [ %0, %29 ]
  %40 = phi i32 [ %44, %38 ], [ %8, %29 ]
  %41 = phi i8* [ %43, %38 ], [ %2, %29 ]
  tail call void @aom_filter_block1d16_h4_sse2(i8* %39, i64 %1, i8* %41, i64 %3, i32 %9, i16* %4) #2
  %42 = getelementptr inbounds i8, i8* %39, i64 16
  %43 = getelementptr inbounds i8, i8* %41, i64 16
  %44 = add nsw i32 %40, -16
  %45 = icmp sgt i32 %44, 15
  br i1 %45, label %38, label %31

46:                                               ; preds = %53
  %47 = and i32 %35, 7
  br label %48

48:                                               ; preds = %46, %33
  %49 = phi i8* [ %34, %33 ], [ %58, %46 ]
  %50 = phi i32 [ %35, %33 ], [ %47, %46 ]
  %51 = phi i8* [ %36, %33 ], [ %57, %46 ]
  %52 = icmp sgt i32 %50, 3
  br i1 %52, label %61, label %157

53:                                               ; preds = %33, %53
  %54 = phi i8* [ %57, %53 ], [ %36, %33 ]
  %55 = phi i32 [ %59, %53 ], [ %35, %33 ]
  %56 = phi i8* [ %58, %53 ], [ %34, %33 ]
  tail call void @aom_filter_block1d8_h4_sse2(i8* %54, i64 %1, i8* %56, i64 %3, i32 %9, i16* %4) #2
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = add nsw i32 %55, -8
  %60 = icmp sgt i32 %59, 7
  br i1 %60, label %53, label %46

61:                                               ; preds = %48, %61
  %62 = phi i8* [ %65, %61 ], [ %51, %48 ]
  %63 = phi i32 [ %67, %61 ], [ %50, %48 ]
  %64 = phi i8* [ %66, %61 ], [ %49, %48 ]
  tail call void @aom_filter_block1d4_h4_sse2(i8* %62, i64 %1, i8* %64, i64 %3, i32 %9, i16* %4) #2
  %65 = getelementptr inbounds i8, i8* %62, i64 4
  %66 = getelementptr inbounds i8, i8* %64, i64 4
  %67 = add nsw i32 %63, -4
  %68 = icmp sgt i32 %67, 3
  br i1 %68, label %61, label %155

69:                                               ; preds = %10, %24
  %70 = or i16 %23, %14
  %71 = icmp eq i16 %70, 0
  %72 = icmp sgt i32 %8, 15
  br i1 %71, label %74, label %73

73:                                               ; preds = %69
  br i1 %72, label %82, label %77

74:                                               ; preds = %69
  br i1 %72, label %120, label %115

75:                                               ; preds = %82
  %76 = and i32 %8, 15
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i8* [ %2, %73 ], [ %87, %75 ]
  %79 = phi i32 [ %8, %73 ], [ %76, %75 ]
  %80 = phi i8* [ %0, %73 ], [ %86, %75 ]
  %81 = icmp sgt i32 %79, 7
  br i1 %81, label %97, label %92

82:                                               ; preds = %73, %82
  %83 = phi i8* [ %86, %82 ], [ %0, %73 ]
  %84 = phi i32 [ %88, %82 ], [ %8, %73 ]
  %85 = phi i8* [ %87, %82 ], [ %2, %73 ]
  tail call void @aom_filter_block1d16_h8_sse2(i8* %83, i64 %1, i8* %85, i64 %3, i32 %9, i16* %4) #2
  %86 = getelementptr inbounds i8, i8* %83, i64 16
  %87 = getelementptr inbounds i8, i8* %85, i64 16
  %88 = add nsw i32 %84, -16
  %89 = icmp sgt i32 %88, 15
  br i1 %89, label %82, label %75

90:                                               ; preds = %97
  %91 = and i32 %79, 7
  br label %92

92:                                               ; preds = %90, %77
  %93 = phi i8* [ %78, %77 ], [ %102, %90 ]
  %94 = phi i32 [ %79, %77 ], [ %91, %90 ]
  %95 = phi i8* [ %80, %77 ], [ %101, %90 ]
  %96 = icmp sgt i32 %94, 3
  br i1 %96, label %105, label %157

97:                                               ; preds = %77, %97
  %98 = phi i8* [ %101, %97 ], [ %80, %77 ]
  %99 = phi i32 [ %103, %97 ], [ %79, %77 ]
  %100 = phi i8* [ %102, %97 ], [ %78, %77 ]
  tail call void @aom_filter_block1d8_h8_sse2(i8* %98, i64 %1, i8* %100, i64 %3, i32 %9, i16* %4) #2
  %101 = getelementptr inbounds i8, i8* %98, i64 8
  %102 = getelementptr inbounds i8, i8* %100, i64 8
  %103 = add nsw i32 %99, -8
  %104 = icmp sgt i32 %103, 7
  br i1 %104, label %97, label %90

105:                                              ; preds = %92, %105
  %106 = phi i8* [ %109, %105 ], [ %95, %92 ]
  %107 = phi i32 [ %111, %105 ], [ %94, %92 ]
  %108 = phi i8* [ %110, %105 ], [ %93, %92 ]
  tail call void @aom_filter_block1d4_h8_sse2(i8* %106, i64 %1, i8* %108, i64 %3, i32 %9, i16* %4) #2
  %109 = getelementptr inbounds i8, i8* %106, i64 4
  %110 = getelementptr inbounds i8, i8* %108, i64 4
  %111 = add nsw i32 %107, -4
  %112 = icmp sgt i32 %111, 3
  br i1 %112, label %105, label %153

113:                                              ; preds = %120
  %114 = and i32 %8, 15
  br label %115

115:                                              ; preds = %113, %74
  %116 = phi i8* [ %2, %74 ], [ %125, %113 ]
  %117 = phi i32 [ %8, %74 ], [ %114, %113 ]
  %118 = phi i8* [ %0, %74 ], [ %124, %113 ]
  %119 = icmp sgt i32 %117, 7
  br i1 %119, label %135, label %130

120:                                              ; preds = %74, %120
  %121 = phi i8* [ %124, %120 ], [ %0, %74 ]
  %122 = phi i32 [ %126, %120 ], [ %8, %74 ]
  %123 = phi i8* [ %125, %120 ], [ %2, %74 ]
  tail call void @aom_filter_block1d16_h2_sse2(i8* %121, i64 %1, i8* %123, i64 %3, i32 %9, i16* %4) #2
  %124 = getelementptr inbounds i8, i8* %121, i64 16
  %125 = getelementptr inbounds i8, i8* %123, i64 16
  %126 = add nsw i32 %122, -16
  %127 = icmp sgt i32 %126, 15
  br i1 %127, label %120, label %113

128:                                              ; preds = %135
  %129 = and i32 %117, 7
  br label %130

130:                                              ; preds = %128, %115
  %131 = phi i8* [ %116, %115 ], [ %140, %128 ]
  %132 = phi i32 [ %117, %115 ], [ %129, %128 ]
  %133 = phi i8* [ %118, %115 ], [ %139, %128 ]
  %134 = icmp sgt i32 %132, 3
  br i1 %134, label %143, label %157

135:                                              ; preds = %115, %135
  %136 = phi i8* [ %139, %135 ], [ %118, %115 ]
  %137 = phi i32 [ %141, %135 ], [ %117, %115 ]
  %138 = phi i8* [ %140, %135 ], [ %116, %115 ]
  tail call void @aom_filter_block1d8_h2_sse2(i8* %136, i64 %1, i8* %138, i64 %3, i32 %9, i16* %4) #2
  %139 = getelementptr inbounds i8, i8* %136, i64 8
  %140 = getelementptr inbounds i8, i8* %138, i64 8
  %141 = add nsw i32 %137, -8
  %142 = icmp sgt i32 %141, 7
  br i1 %142, label %135, label %128

143:                                              ; preds = %130, %143
  %144 = phi i8* [ %147, %143 ], [ %133, %130 ]
  %145 = phi i32 [ %149, %143 ], [ %132, %130 ]
  %146 = phi i8* [ %148, %143 ], [ %131, %130 ]
  tail call void @aom_filter_block1d4_h2_sse2(i8* %144, i64 %1, i8* %146, i64 %3, i32 %9, i16* %4) #2
  %147 = getelementptr inbounds i8, i8* %144, i64 4
  %148 = getelementptr inbounds i8, i8* %146, i64 4
  %149 = add nsw i32 %145, -4
  %150 = icmp sgt i32 %149, 3
  br i1 %150, label %143, label %151

151:                                              ; preds = %143
  %152 = and i32 %132, 3
  br label %157

153:                                              ; preds = %105
  %154 = and i32 %94, 3
  br label %157

155:                                              ; preds = %61
  %156 = and i32 %50, 3
  br label %157

157:                                              ; preds = %155, %153, %151, %48, %92, %130
  %158 = phi i8* [ %131, %130 ], [ %93, %92 ], [ %49, %48 ], [ %148, %151 ], [ %110, %153 ], [ %66, %155 ]
  %159 = phi i32 [ %132, %130 ], [ %94, %92 ], [ %50, %48 ], [ %152, %151 ], [ %154, %153 ], [ %156, %155 ]
  %160 = phi i8* [ %133, %130 ], [ %95, %92 ], [ %51, %48 ], [ %147, %151 ], [ %109, %153 ], [ %65, %155 ]
  %161 = icmp eq i32 %159, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %157
  tail call void @aom_convolve8_horiz_c(i8* %160, i64 %1, i8* %158, i64 %3, i16* %4, i32 %5, i16* %6, i32 %7, i32 %159, i32 %9) #2
  br label %163

163:                                              ; preds = %157, %162
  ret void
}

declare void @aom_filter_block1d16_h4_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d8_h4_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d4_h4_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d16_h8_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d8_h8_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d4_h8_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d16_h2_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d8_h2_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d4_h2_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_convolve8_horiz_c(i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_convolve8_vert_sse2(i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = load i16, i16* %6, align 2
  %12 = getelementptr inbounds i16, i16* %6, i64 1
  %13 = load i16, i16* %12, align 2
  %14 = or i16 %13, %11
  %15 = getelementptr inbounds i16, i16* %6, i64 6
  %16 = load i16, i16* %15, align 2
  %17 = or i16 %14, %16
  %18 = getelementptr inbounds i16, i16* %6, i64 7
  %19 = load i16, i16* %18, align 2
  %20 = or i16 %17, %19
  %21 = icmp eq i16 %20, 0
  %22 = getelementptr inbounds i16, i16* %6, i64 2
  %23 = load i16, i16* %22, align 2
  br i1 %21, label %24, label %78

24:                                               ; preds = %10
  %25 = getelementptr inbounds i16, i16* %6, i64 5
  %26 = load i16, i16* %25, align 2
  %27 = or i16 %26, %23
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %78, label %29

29:                                               ; preds = %24
  %30 = icmp sgt i32 %8, 15
  br i1 %30, label %31, label %35

31:                                               ; preds = %29
  %32 = mul i64 %1, -3
  br label %42

33:                                               ; preds = %42
  %34 = and i32 %8, 15
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i8* [ %2, %29 ], [ %48, %33 ]
  %37 = phi i32 [ %8, %29 ], [ %34, %33 ]
  %38 = phi i8* [ %0, %29 ], [ %47, %33 ]
  %39 = icmp sgt i32 %37, 7
  br i1 %39, label %40, label %53

40:                                               ; preds = %35
  %41 = mul i64 %1, -3
  br label %60

42:                                               ; preds = %31, %42
  %43 = phi i8* [ %0, %31 ], [ %47, %42 ]
  %44 = phi i32 [ %8, %31 ], [ %49, %42 ]
  %45 = phi i8* [ %2, %31 ], [ %48, %42 ]
  %46 = getelementptr inbounds i8, i8* %43, i64 %32
  tail call void @aom_filter_block1d16_v4_sse2(i8* %46, i64 %1, i8* %45, i64 %3, i32 %9, i16* %6) #2
  %47 = getelementptr inbounds i8, i8* %43, i64 16
  %48 = getelementptr inbounds i8, i8* %45, i64 16
  %49 = add nsw i32 %44, -16
  %50 = icmp sgt i32 %49, 15
  br i1 %50, label %42, label %33

51:                                               ; preds = %60
  %52 = and i32 %37, 7
  br label %53

53:                                               ; preds = %51, %35
  %54 = phi i8* [ %36, %35 ], [ %66, %51 ]
  %55 = phi i32 [ %37, %35 ], [ %52, %51 ]
  %56 = phi i8* [ %38, %35 ], [ %65, %51 ]
  %57 = icmp sgt i32 %55, 3
  br i1 %57, label %58, label %175

58:                                               ; preds = %53
  %59 = mul i64 %1, -3
  br label %69

60:                                               ; preds = %40, %60
  %61 = phi i8* [ %38, %40 ], [ %65, %60 ]
  %62 = phi i32 [ %37, %40 ], [ %67, %60 ]
  %63 = phi i8* [ %36, %40 ], [ %66, %60 ]
  %64 = getelementptr inbounds i8, i8* %61, i64 %41
  tail call void @aom_filter_block1d8_v4_sse2(i8* %64, i64 %1, i8* %63, i64 %3, i32 %9, i16* %6) #2
  %65 = getelementptr inbounds i8, i8* %61, i64 8
  %66 = getelementptr inbounds i8, i8* %63, i64 8
  %67 = add nsw i32 %62, -8
  %68 = icmp sgt i32 %67, 7
  br i1 %68, label %60, label %51

69:                                               ; preds = %58, %69
  %70 = phi i8* [ %56, %58 ], [ %74, %69 ]
  %71 = phi i32 [ %55, %58 ], [ %76, %69 ]
  %72 = phi i8* [ %54, %58 ], [ %75, %69 ]
  %73 = getelementptr inbounds i8, i8* %70, i64 %59
  tail call void @aom_filter_block1d4_v4_sse2(i8* %73, i64 %1, i8* %72, i64 %3, i32 %9, i16* %6) #2
  %74 = getelementptr inbounds i8, i8* %70, i64 4
  %75 = getelementptr inbounds i8, i8* %72, i64 4
  %76 = add nsw i32 %71, -4
  %77 = icmp sgt i32 %76, 3
  br i1 %77, label %69, label %173

78:                                               ; preds = %10, %24
  %79 = or i16 %23, %14
  %80 = icmp eq i16 %79, 0
  %81 = icmp sgt i32 %8, 15
  br i1 %80, label %85, label %82

82:                                               ; preds = %78
  br i1 %81, label %83, label %88

83:                                               ; preds = %82
  %84 = mul i64 %1, -3
  br label %95

85:                                               ; preds = %78
  br i1 %81, label %138, label %133

86:                                               ; preds = %95
  %87 = and i32 %8, 15
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi i8* [ %2, %82 ], [ %101, %86 ]
  %90 = phi i32 [ %8, %82 ], [ %87, %86 ]
  %91 = phi i8* [ %0, %82 ], [ %100, %86 ]
  %92 = icmp sgt i32 %90, 7
  br i1 %92, label %93, label %106

93:                                               ; preds = %88
  %94 = mul i64 %1, -3
  br label %113

95:                                               ; preds = %83, %95
  %96 = phi i8* [ %0, %83 ], [ %100, %95 ]
  %97 = phi i32 [ %8, %83 ], [ %102, %95 ]
  %98 = phi i8* [ %2, %83 ], [ %101, %95 ]
  %99 = getelementptr inbounds i8, i8* %96, i64 %84
  tail call void @aom_filter_block1d16_v8_sse2(i8* %99, i64 %1, i8* %98, i64 %3, i32 %9, i16* %6) #2
  %100 = getelementptr inbounds i8, i8* %96, i64 16
  %101 = getelementptr inbounds i8, i8* %98, i64 16
  %102 = add nsw i32 %97, -16
  %103 = icmp sgt i32 %102, 15
  br i1 %103, label %95, label %86

104:                                              ; preds = %113
  %105 = and i32 %90, 7
  br label %106

106:                                              ; preds = %104, %88
  %107 = phi i8* [ %89, %88 ], [ %119, %104 ]
  %108 = phi i32 [ %90, %88 ], [ %105, %104 ]
  %109 = phi i8* [ %91, %88 ], [ %118, %104 ]
  %110 = icmp sgt i32 %108, 3
  br i1 %110, label %111, label %175

111:                                              ; preds = %106
  %112 = mul i64 %1, -3
  br label %122

113:                                              ; preds = %93, %113
  %114 = phi i8* [ %91, %93 ], [ %118, %113 ]
  %115 = phi i32 [ %90, %93 ], [ %120, %113 ]
  %116 = phi i8* [ %89, %93 ], [ %119, %113 ]
  %117 = getelementptr inbounds i8, i8* %114, i64 %94
  tail call void @aom_filter_block1d8_v8_sse2(i8* %117, i64 %1, i8* %116, i64 %3, i32 %9, i16* %6) #2
  %118 = getelementptr inbounds i8, i8* %114, i64 8
  %119 = getelementptr inbounds i8, i8* %116, i64 8
  %120 = add nsw i32 %115, -8
  %121 = icmp sgt i32 %120, 7
  br i1 %121, label %113, label %104

122:                                              ; preds = %111, %122
  %123 = phi i8* [ %109, %111 ], [ %127, %122 ]
  %124 = phi i32 [ %108, %111 ], [ %129, %122 ]
  %125 = phi i8* [ %107, %111 ], [ %128, %122 ]
  %126 = getelementptr inbounds i8, i8* %123, i64 %112
  tail call void @aom_filter_block1d4_v8_sse2(i8* %126, i64 %1, i8* %125, i64 %3, i32 %9, i16* %6) #2
  %127 = getelementptr inbounds i8, i8* %123, i64 4
  %128 = getelementptr inbounds i8, i8* %125, i64 4
  %129 = add nsw i32 %124, -4
  %130 = icmp sgt i32 %129, 3
  br i1 %130, label %122, label %171

131:                                              ; preds = %138
  %132 = and i32 %8, 15
  br label %133

133:                                              ; preds = %131, %85
  %134 = phi i8* [ %2, %85 ], [ %143, %131 ]
  %135 = phi i32 [ %8, %85 ], [ %132, %131 ]
  %136 = phi i8* [ %0, %85 ], [ %142, %131 ]
  %137 = icmp sgt i32 %135, 7
  br i1 %137, label %153, label %148

138:                                              ; preds = %85, %138
  %139 = phi i8* [ %142, %138 ], [ %0, %85 ]
  %140 = phi i32 [ %144, %138 ], [ %8, %85 ]
  %141 = phi i8* [ %143, %138 ], [ %2, %85 ]
  tail call void @aom_filter_block1d16_v2_sse2(i8* %139, i64 %1, i8* %141, i64 %3, i32 %9, i16* %6) #2
  %142 = getelementptr inbounds i8, i8* %139, i64 16
  %143 = getelementptr inbounds i8, i8* %141, i64 16
  %144 = add nsw i32 %140, -16
  %145 = icmp sgt i32 %144, 15
  br i1 %145, label %138, label %131

146:                                              ; preds = %153
  %147 = and i32 %135, 7
  br label %148

148:                                              ; preds = %146, %133
  %149 = phi i8* [ %134, %133 ], [ %158, %146 ]
  %150 = phi i32 [ %135, %133 ], [ %147, %146 ]
  %151 = phi i8* [ %136, %133 ], [ %157, %146 ]
  %152 = icmp sgt i32 %150, 3
  br i1 %152, label %161, label %175

153:                                              ; preds = %133, %153
  %154 = phi i8* [ %157, %153 ], [ %136, %133 ]
  %155 = phi i32 [ %159, %153 ], [ %135, %133 ]
  %156 = phi i8* [ %158, %153 ], [ %134, %133 ]
  tail call void @aom_filter_block1d8_v2_sse2(i8* %154, i64 %1, i8* %156, i64 %3, i32 %9, i16* %6) #2
  %157 = getelementptr inbounds i8, i8* %154, i64 8
  %158 = getelementptr inbounds i8, i8* %156, i64 8
  %159 = add nsw i32 %155, -8
  %160 = icmp sgt i32 %159, 7
  br i1 %160, label %153, label %146

161:                                              ; preds = %148, %161
  %162 = phi i8* [ %165, %161 ], [ %151, %148 ]
  %163 = phi i32 [ %167, %161 ], [ %150, %148 ]
  %164 = phi i8* [ %166, %161 ], [ %149, %148 ]
  tail call void @aom_filter_block1d4_v2_sse2(i8* %162, i64 %1, i8* %164, i64 %3, i32 %9, i16* %6) #2
  %165 = getelementptr inbounds i8, i8* %162, i64 4
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = add nsw i32 %163, -4
  %168 = icmp sgt i32 %167, 3
  br i1 %168, label %161, label %169

169:                                              ; preds = %161
  %170 = and i32 %150, 3
  br label %175

171:                                              ; preds = %122
  %172 = and i32 %108, 3
  br label %175

173:                                              ; preds = %69
  %174 = and i32 %55, 3
  br label %175

175:                                              ; preds = %173, %171, %169, %53, %106, %148
  %176 = phi i8* [ %149, %148 ], [ %107, %106 ], [ %54, %53 ], [ %166, %169 ], [ %128, %171 ], [ %75, %173 ]
  %177 = phi i32 [ %150, %148 ], [ %108, %106 ], [ %55, %53 ], [ %170, %169 ], [ %172, %171 ], [ %174, %173 ]
  %178 = phi i8* [ %151, %148 ], [ %109, %106 ], [ %56, %53 ], [ %165, %169 ], [ %127, %171 ], [ %74, %173 ]
  %179 = icmp eq i32 %177, 0
  br i1 %179, label %181, label %180

180:                                              ; preds = %175
  tail call void @aom_convolve8_vert_c(i8* %178, i64 %1, i8* %176, i64 %3, i16* %4, i32 %5, i16* %6, i32 %7, i32 %177, i32 %9) #2
  br label %181

181:                                              ; preds = %175, %180
  ret void
}

declare void @aom_filter_block1d16_v4_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d8_v4_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d4_v4_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d16_v8_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d8_v8_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d4_v8_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d16_v2_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d8_v2_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_filter_block1d4_v2_sse2(i8*, i64, i8*, i64, i32, i16*) local_unnamed_addr #1

declare void @aom_convolve8_vert_c(i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
