; ModuleID = '../../v8/src/objects/source-text-module.cc'
source_filename = "../../v8/src/objects/source-text-module.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.544" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.142", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.22", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.22", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.22", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.22", i64, i64, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.32", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.164", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.22", i64, i8, %"struct.std::__1::atomic.22", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.168", %"class.std::__1::vector.168", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.477", %"class.std::__1::shared_ptr.483", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.506", %"class.std::__1::unique_ptr.532", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.538", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.551", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.333", i8, [7 x i8], %"class.std::__1::unordered_map.557", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.557", %"class.std::__1::unordered_map.607", %"class.std::__1::vector.635", i8, %"class.std::__1::unique_ptr.642", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.5", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.19", [4 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.648", %"class.std::__1::unique_ptr.669", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.679", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.818", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.831", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.841", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.852", %"struct.std::__1::atomic.155", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.927", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.970"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.982", i32, i8, i8, i32, i32, %"class.std::__1::vector.988", %"class.std::__1::vector.988", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.995", i64, %"class.std::__1::unordered_map.996", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.544", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.163", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1052", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1090", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1124", %"class.std::__1::vector.1128", %"class.std::__1::vector.1128", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.648" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.142", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.649", %"class.std::__1::unique_ptr.663" }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.652" }
%"class.std::__1::vector.652" = type { %"class.std::__1::__vector_base.653" }
%"class.std::__1::__vector_base.653" = type { %"class.std::__1::unique_ptr.654"*, %"class.std::__1::unique_ptr.654"*, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.std::__1::unique_ptr.654"* }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.672", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.672" = type { %"struct.std::__1::__atomic_base.673" }
%"struct.std::__1::__atomic_base.673" = type { %"struct.std::__1::__cxx_atomic_impl.674" }
%"struct.std::__1::__cxx_atomic_impl.674" = type { %"struct.std::__1::__cxx_atomic_base_impl.675" }
%"struct.std::__1::__cxx_atomic_base_impl.675" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.679" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.680", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.680" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.681", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"class.std::__1::unique_ptr.683"*, %"class.std::__1::unique_ptr.683"*, %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::unique_ptr.683" = type opaque
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.std::__1::unique_ptr.683"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.695", %"struct.std::__1::atomic.155", %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::set.731", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.731" = type { %"class.std::__1::__tree.732" }
%"class.std::__1::__tree.732" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.740" }
%"class.v8::internal::TaggedImpl.740" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.747", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.754", %"class.v8::internal::DetachableVector.753", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.754" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.484" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.487", %"class.std::__1::set.495" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.487" = type { %"class.std::__1::__tree.488" }
%"class.std::__1::__tree.488" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.755", %"class.std::__1::vector.761", %"class.std::__1::unique_ptr.768", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782", i64, %"class.std::__1::vector.788", %"class.std::__1::vector.796", %"class.std::__1::vector.804", i8, i8, i32 }
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.761" = type { %"class.std::__1::__vector_base.762" }
%"class.std::__1::__vector_base.762" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.763" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::GlobalHandles::NodeSpace.771"* }
%"class.v8::internal::GlobalHandles::NodeSpace.771" = type opaque
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.777" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"struct.std::__1::pair.790"*, %"struct.std::__1::pair.790"*, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::pair.790" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::pair.790"* }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"struct.std::__1::pair.798"*, %"struct.std::__1::pair.798"*, %"class.std::__1::__compressed_pair.799" }
%"struct.std::__1::pair.798" = type opaque
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.std::__1::pair.798"* }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.806" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.811", %"class.std::__1::vector.818" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i64**, i64**, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.825" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { i32*, i32*, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.831" = type { %"struct.std::__1::__atomic_base.832" }
%"struct.std::__1::__atomic_base.832" = type { %"struct.std::__1::__cxx_atomic_impl.833" }
%"struct.std::__1::__cxx_atomic_impl.833" = type { %"struct.std::__1::__cxx_atomic_base_impl.834" }
%"struct.std::__1::__cxx_atomic_base_impl.834" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.841" = type { %"struct.std::__1::__atomic_base.842" }
%"struct.std::__1::__atomic_base.842" = type { %"struct.std::__1::__cxx_atomic_impl.843" }
%"struct.std::__1::__cxx_atomic_impl.843" = type { %"struct.std::__1::__cxx_atomic_base_impl.844" }
%"struct.std::__1::__cxx_atomic_base_impl.844" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.848 }
%union.anon.848 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.852" = type { %"class.std::__1::__hash_table.853" }
%"class.std::__1::__hash_table.853" = type <{ %"class.std::__1::unique_ptr.854", %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.869", %"class.std::__1::__compressed_pair.872", [4 x i8] }>
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856", %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.std::__1::__hash_node_base.857"** }
%"struct.std::__1::__hash_node_base.857" = type { %"struct.std::__1::__hash_node_base.857"* }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.std::__1::__bucket_list_deallocator.859" }
%"class.std::__1::__bucket_list_deallocator.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"struct.std::__1::__hash_node_base.857" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__cxx_atomic_impl.157" }
%"struct.std::__1::__cxx_atomic_impl.157" = type { %"struct.std::__1::__cxx_atomic_base_impl.158" }
%"struct.std::__1::__cxx_atomic_base_impl.158" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.878", %"class.v8::internal::Handle.884", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.885", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.885" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.886", %"class.std::__1::vector.892", %"class.std::__1::unique_ptr.900", %"class.std::__1::unique_ptr.906", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.912", %"class.std::__1::vector.918", %"struct.std::__1::pair.926" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.892" = type { %"class.std::__1::__vector_base.893" }
%"class.std::__1::__vector_base.893" = type { %"class.std::__1::unique_ptr.894"*, %"class.std::__1::unique_ptr.894"*, %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::unique_ptr.894" = type opaque
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.std::__1::unique_ptr.894"* }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"struct.std::__1::pair.920"*, %"struct.std::__1::pair.920"*, %"class.std::__1::__compressed_pair.921" }
%"struct.std::__1::pair.920" = type opaque
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"struct.std::__1::pair.920"* }
%"struct.std::__1::pair.926" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.3"*, i16, i8*)*, i8* }
%"class.v8::Local.3" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.930", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.930" = type { %"class.std::__1::__hash_table.931" }
%"class.std::__1::__hash_table.931" = type <{ %"class.std::__1::unique_ptr.932", %"class.std::__1::__compressed_pair.942", %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.951", [4 x i8] }>
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934", %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"struct.std::__1::__hash_node_base.935"** }
%"struct.std::__1::__hash_node_base.935" = type { %"struct.std::__1::__hash_node_base.935"* }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.std::__1::__bucket_list_deallocator.937" }
%"class.std::__1::__bucket_list_deallocator.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.935" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"class.std::__1::__compressed_pair.960" }
%"struct.std::__1::pair.959" = type opaque
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::pair.959"** }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.v8::internal::Handle.972"*, %"class.v8::internal::Handle.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.v8::internal::Handle.972" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.v8::internal::Handle.972"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.978" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.978" = type { %"class.std::__1::__vector_base.979" }
%"class.std::__1::__vector_base.979" = type { %"struct.std::__1::pair.959"*, %"struct.std::__1::pair.959"*, %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::pair.959"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.836", i32, %"class.v8::Local.3" }
%"class.v8::Local.836" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.811", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.995" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.996" = type { %"class.std::__1::__hash_table.997" }
%"class.std::__1::__hash_table.997" = type <{ %"class.std::__1::unique_ptr.998", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1013", %"class.std::__1::__compressed_pair.1016", [4 x i8] }>
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000", %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"struct.std::__1::__hash_node_base.1001"** }
%"struct.std::__1::__hash_node_base.1001" = type { %"struct.std::__1::__hash_node_base.1001"* }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.std::__1::__bucket_list_deallocator.1003" }
%"class.std::__1::__bucket_list_deallocator.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.std::__1::__hash_node_base.1001" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.163" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1020", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1049", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1050", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1020" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1045, %union.anon.1047, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1045 = type { i64 }
%union.anon.1047 = type { i64 }
%"class.std::__1::weak_ptr.1049" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.22", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.163" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1050" = type { %"class.v8::PersistentBase.1051" }
%"class.v8::PersistentBase.1051" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1021", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1021" = type { %"class.std::__1::__hash_table.1022" }
%"class.std::__1::__hash_table.1022" = type <{ %"class.std::__1::unique_ptr.1023", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1041", [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025", %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::__hash_node_base.1026"** }
%"struct.std::__1::__hash_node_base.1026" = type { %"struct.std::__1::__hash_node_base.1026"* }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::__bucket_list_deallocator.1028" }
%"class.std::__1::__bucket_list_deallocator.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1026" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1081", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1057", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.477", %"class.std::__1::vector.1073", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1057" = type { %"struct.std::__1::__atomic_base.1058" }
%"struct.std::__1::__atomic_base.1058" = type { %"struct.std::__1::__cxx_atomic_impl.1059" }
%"struct.std::__1::__cxx_atomic_impl.1059" = type { %"struct.std::__1::__cxx_atomic_base_impl.1060" }
%"struct.std::__1::__cxx_atomic_base_impl.1060" = type { i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.811" }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1073" = type { %"class.std::__1::__vector_base.1074" }
%"class.std::__1::__vector_base.1074" = type { %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"*, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type opaque
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.22"*, %"class.std::__1::unique_ptr.100" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.41", %"class.std::__1::vector.41", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.43" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.48" }
%"class.std::__1::__hash_table.48" = type <{ %"class.std::__1::unique_ptr.49", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base.52"** }
%"struct.std::__1::__hash_node_base.52" = type { %"struct.std::__1::__hash_node_base.52"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__bucket_list_deallocator.54" }
%"class.std::__1::__bucket_list_deallocator.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base.52" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.27", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.89", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.22"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.27", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.71", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.77" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.93", i8, [7 x i8] }>
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { i64*, i64*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.22", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.837", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.837" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1098" }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1118", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::atomic.1124" = type { %"struct.std::__1::__atomic_base.1125" }
%"struct.std::__1::__atomic_base.1125" = type { %"struct.std::__1::__cxx_atomic_impl.1126" }
%"struct.std::__1::__cxx_atomic_impl.1126" = type { %"struct.std::__1::__cxx_atomic_base_impl.1127" }
%"struct.std::__1::__cxx_atomic_base_impl.1127" = type { %"class.std::__1::vector.1128"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.106" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.std::__1::pair.108"*, %"struct.std::__1::pair.108"*, %"class.std::__1::__compressed_pair.109" }
%"struct.std::__1::pair.108" = type { i32, i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::pair.108"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.22", i32, %"struct.std::__1::atomic.22", %"class.v8::base::Mutex", %"struct.std::__1::atomic.22" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.114" }
%"class.std::__1::unordered_map.114" = type { %"class.std::__1::__hash_table.115" }
%"class.std::__1::__hash_table.115" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.119"** }
%"struct.std::__1::__hash_node_base.119" = type { %"struct.std::__1::__hash_node_base.119"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator.121" }
%"class.std::__1::__bucket_list_deallocator.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.119" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.155", %"struct.std::__1::atomic.159", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.170" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.std::__1::vector.290", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.184", %"class.std::__1::vector.185", %"class.std::__1::vector.192", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.184" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.187" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.216", i8, i64 }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.232" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.184"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.232" = type { %"class.std::__1::__hash_table.233" }
%"class.std::__1::__hash_table.233" = type <{ %"class.std::__1::unique_ptr.234", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.252", [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base.237"** }
%"struct.std::__1::__hash_node_base.237" = type { %"struct.std::__1::__hash_node_base.237"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator.239" }
%"class.std::__1::__bucket_list_deallocator.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.237" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.259" }
%"class.std::__1::unordered_map.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.std::__1::pair.292"*, %"struct.std::__1::pair.292"*, %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::pair.292" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::pair.292"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.298", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.283"], [3 x %"class.std::__1::vector.283"], i8, %"struct.std::__1::atomic.155", [6 x i8], %"class.std::__1::vector.283", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.308"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.308" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.333", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.326"], %"class.std::__1::unique_ptr.298" }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.365", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.369", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.374" }
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.298", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.155", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.404", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.404" = type { %"class.std::__1::__hash_table.405" }
%"class.std::__1::__hash_table.405" = type <{ %"class.std::__1::unique_ptr.406", %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408", %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.409"** }
%"struct.std::__1::__hash_node_base.409" = type { %"struct.std::__1::__hash_node_base.409"* }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.std::__1::__bucket_list_deallocator.411" }
%"class.std::__1::__bucket_list_deallocator.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::__hash_node_base.409" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.440" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.483" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.502", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.484", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.502" = type { %"struct.std::__1::__atomic_base.503" }
%"struct.std::__1::__atomic_base.503" = type { %"struct.std::__1::__cxx_atomic_impl.504" }
%"struct.std::__1::__cxx_atomic_impl.504" = type { %"struct.std::__1::__cxx_atomic_base_impl.505" }
%"struct.std::__1::__cxx_atomic_base_impl.505" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.506" = type { %"class.std::__1::__hash_table.507" }
%"class.std::__1::__hash_table.507" = type <{ %"class.std::__1::unique_ptr.508", %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.526", [4 x i8] }>
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510", %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::__hash_node_base.511"** }
%"struct.std::__1::__hash_node_base.511" = type { %"struct.std::__1::__hash_node_base.511"* }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.std::__1::__bucket_list_deallocator.513" }
%"class.std::__1::__bucket_list_deallocator.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.511" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.544", %"class.std::__1::vector.544" }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.333" = type { %"class.std::__1::__hash_table.334" }
%"class.std::__1::__hash_table.334" = type <{ %"class.std::__1::unique_ptr.335", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.354", [4 x i8] }>
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::__hash_node_base.338"** }
%"struct.std::__1::__hash_node_base.338" = type { %"struct.std::__1::__hash_node_base.338"* }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::__bucket_list_deallocator.340" }
%"class.std::__1::__bucket_list_deallocator.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::__hash_node_base.338" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.557" = type { %"class.std::__1::__hash_table.558" }
%"class.std::__1::__hash_table.558" = type <{ %"class.std::__1::unique_ptr.559", %"class.std::__1::__compressed_pair.569", %"class.std::__1::__compressed_pair.574", %"class.std::__1::__compressed_pair.577", [4 x i8] }>
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561", %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node_base.562"** }
%"struct.std::__1::__hash_node_base.562" = type { %"struct.std::__1::__hash_node_base.562"* }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.std::__1::__bucket_list_deallocator.564" }
%"class.std::__1::__bucket_list_deallocator.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.562" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.607" = type { %"class.std::__1::__hash_table.608" }
%"class.std::__1::__hash_table.608" = type <{ %"class.std::__1::unique_ptr.609", %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base.612"** }
%"struct.std::__1::__hash_node_base.612" = type { %"struct.std::__1::__hash_node_base.612"* }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::__bucket_list_deallocator.614" }
%"class.std::__1::__bucket_list_deallocator.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.612" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.22", i64, %"struct.std::__1::atomic.22" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.144" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.544" = type { %"class.std::__1::__vector_base.545" }
%"class.std::__1::__vector_base.545" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::SourceTextModule" = type { %"class.v8::internal::TorqueGeneratedSourceTextModule" }
%"class.v8::internal::TorqueGeneratedSourceTextModule" = type { %"class.v8::internal::Module" }
%"class.v8::internal::Module" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1164", i32, i32, i32, %"class.v8::internal::Handle.1165" }
%"class.v8::internal::Handle.1164" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1165" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Module::ResolveSet" = type { %"class.std::__1::unordered_map.1143", %"class.v8::internal::Zone"* }
%"class.std::__1::unordered_map.1143" = type { %"class.std::__1::__hash_table.1144" }
%"class.std::__1::__hash_table.1144" = type <{ %"class.std::__1::unique_ptr.1145", %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1157", %"class.std::__1::__compressed_pair.1160", [4 x i8] }>
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147", %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"struct.std::__1::__hash_node_base.1148"** }
%"struct.std::__1::__hash_node_base.1148" = type { %"struct.std::__1::__hash_node_base.1148"* }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.std::__1::__bucket_list_deallocator.1150" }
%"class.std::__1::__bucket_list_deallocator.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154", %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.std::__1::__hash_node_base.1148" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.v8::internal::ZoneAllocator.1156" }
%"class.v8::internal::ZoneAllocator.1156" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::Handle.1136" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ObjectHashTable" = type { %"class.v8::internal::ObjectHashTableBase" }
%"class.v8::internal::ObjectHashTableBase" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"struct.std::__1::pair.1167" = type { %"class.v8::internal::Handle.1168", %"class.v8::internal::UnorderedStringSet"* }
%"class.v8::internal::Handle.1168" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::UnorderedStringSet" = type { %"class.std::__1::unordered_set.1169" }
%"class.std::__1::unordered_set.1169" = type { %"class.std::__1::__hash_table.1170" }
%"class.std::__1::__hash_table.1170" = type <{ %"class.std::__1::unique_ptr.1171", %"class.std::__1::__compressed_pair.1180", %"class.std::__1::__compressed_pair.1184", %"class.std::__1::__compressed_pair.1186", [4 x i8] }>
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173", %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"struct.std::__1::__hash_node_base.1174"** }
%"struct.std::__1::__hash_node_base.1174" = type { %"struct.std::__1::__hash_node_base.1174"* }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.std::__1::__bucket_list_deallocator.1176" }
%"class.std::__1::__bucket_list_deallocator.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.v8::internal::ZoneAllocator.1179" }
%"class.v8::internal::ZoneAllocator.1179" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181", %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.std::__1::__hash_node_base.1174" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.v8::internal::ZoneAllocator.1183" }
%"class.v8::internal::ZoneAllocator.1183" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef" = type { %"class.v8::internal::SourceTextModule" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::FixedArray" = type { i8 }
%"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef" = type { %"class.v8::internal::SourceTextModuleInfo" }
%"class.v8::internal::SourceTextModuleInfo" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::Handle.1139" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneForwardList" = type { %"class.std::__1::forward_list" }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200", %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::Handle.1135" }
%"class.v8::internal::Handle.1135" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.v8::internal::ZoneAllocator.1202" }
%"class.v8::internal::ZoneAllocator.1202" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Factory::JSFunctionBuilder" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1165", %"class.v8::internal::Handle.1196", %"class.v8::internal::MaybeHandle.1203", %"class.v8::internal::MaybeHandle.1204", i8, [7 x i8] }>
%"class.v8::internal::Handle.1196" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeHandle.1203" = type { i64* }
%"class.v8::internal::MaybeHandle.1204" = type { i64* }
%"class.v8::internal::UnorderedModuleSet" = type { %"class.std::__1::unordered_set.1205" }
%"class.std::__1::unordered_set.1205" = type { %"class.std::__1::__hash_table.1206" }
%"class.std::__1::__hash_table.1206" = type <{ %"class.std::__1::unique_ptr.1207", %"class.std::__1::__compressed_pair.1216", %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1222", [4 x i8] }>
%"class.std::__1::unique_ptr.1207" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209", %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"struct.std::__1::__hash_node_base.1210"** }
%"struct.std::__1::__hash_node_base.1210" = type { %"struct.std::__1::__hash_node_base.1210"* }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.std::__1::__bucket_list_deallocator.1212" }
%"class.std::__1::__bucket_list_deallocator.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::internal::ZoneAllocator.1215" }
%"class.v8::internal::ZoneAllocator.1215" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217", %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"struct.std::__1::__hash_node_base.1210" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.v8::internal::ZoneAllocator.1219" }
%"class.v8::internal::ZoneAllocator.1219" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::UnorderedStringMap" = type { %"class.std::__1::unordered_map.1228" }
%"class.std::__1::unordered_map.1228" = type { %"class.std::__1::__hash_table.1229" }
%"class.std::__1::__hash_table.1229" = type <{ %"class.std::__1::unique_ptr.1230", %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1243", %"class.std::__1::__compressed_pair.1246", [4 x i8] }>
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232", %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"struct.std::__1::__hash_node_base.1233"** }
%"struct.std::__1::__hash_node_base.1233" = type { %"struct.std::__1::__hash_node_base.1233"* }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"class.std::__1::__bucket_list_deallocator.1235" }
%"class.std::__1::__bucket_list_deallocator.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.v8::internal::ZoneAllocator.1238" }
%"class.v8::internal::ZoneAllocator.1238" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240", %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"struct.std::__1::__hash_node_base.1233" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.v8::internal::ZoneAllocator.1242" }
%"class.v8::internal::ZoneAllocator.1242" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef" = type { %"class.v8::internal::ObjectHashTable" }
%"struct.std::__1::pair.1254" = type { %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1141" }
%"class.v8::internal::Handle.1141" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::__hash_node.1314" = type { %"struct.std::__1::__hash_node_base.1233", i64, %"struct.std::__1::__hash_value_type.1313" }
%"struct.std::__1::__hash_value_type.1313" = type { %"struct.std::__1::pair.1255" }
%"struct.std::__1::pair.1255" = type { %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1139" }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set.1256" }
%"class.std::__1::set.1256" = type { %"class.std::__1::__tree.1257" }
%"class.std::__1::__tree.1257" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1258", %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"class.v8::internal::ZoneAllocator.1260" }
%"class.v8::internal::ZoneAllocator.1260" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.1263" }
%"class.std::__1::deque.1263" = type { %"class.std::__1::__deque_base.1264" }
%"class.std::__1::__deque_base.1264" = type { %"struct.std::__1::__split_buffer.1265", i64, %"class.std::__1::__compressed_pair.1270" }
%"struct.std::__1::__split_buffer.1265" = type { %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"**, %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267", %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"class.v8::internal::Handle.1135"** }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.1269", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1269" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.v8::internal::RecyclingZoneAllocator.1272" }
%"class.v8::internal::RecyclingZoneAllocator.1272" = type { %"class.v8::internal::ZoneAllocator.1273", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1273" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, i64 }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::Handle.1135" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::MaybeHandle.1198" = type { i64* }
%"class.v8::internal::FactoryBase" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1148", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1167" }
%"struct.std::__1::__hash_node.1323" = type { %"struct.std::__1::__hash_node_base.1174", i64, %"class.v8::internal::Handle.1136" }
%"struct.std::__1::__hash_node.1340" = type { %"struct.std::__1::__hash_node_base.1210", i64, %"class.v8::internal::Handle.1168" }
%"struct.std::__1::__split_buffer.1355" = type { %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"**, %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1267", %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZNK2v88internal16SourceTextModule4infoEv = comdat any

$_ZN2v88internal16SourceTextModule20AddAsyncParentModuleEPNS0_7IsolateENS0_6HandleIS1_EES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__112__deque_baseIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JNS_4pairIKS6_S8_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm = comdat any

$_ZNKSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JNS_4pairIS6_NS4_INS3_4CellEEEEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__15dequeIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"module->status() == kEvaluated\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"module->status() == kInstantiated || module->status() == kEvaluated\00", align 1
@__func__._ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE = private unnamed_addr constant [9 x i8] c"Evaluate\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"descendant->status() == kEvaluating\00", align 1
@__func__._ZN2v88internal16SourceTextModule29AsyncModuleExecutionFulfilledEPNS0_7IsolateENS0_6HandleIS1_EE = private unnamed_addr constant [30 x i8] c"AsyncModuleExecutionFulfilled\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"module->status() == kEvaluated || module->status() == kErrored\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"module->status() == kErrored\00", align 1
@.str.7 = private unnamed_addr constant [66 x i8] c"module->status() == kEvaluating || module->status() == kEvaluated\00", align 1
@_ZN2v88internal28FLAG_harmony_top_level_awaitE = external local_unnamed_addr global i8, align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"module->status() == kInstantiated\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"required_module->status() >= kEvaluating\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"required_module->status() != kErrored\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"required_module->status() >= kEvaluated\00", align 1
@.str.12 = private unnamed_addr constant [61 x i8] c"MaybeTransitionComponent(isolate, module, stack, kEvaluated)\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"status() >= kEvaluated\00", align 1
@.str.14 = private unnamed_addr constant [43 x i8] c"ordinal < kMaxModuleAsyncEvaluatingOrdinal\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal16SourceTextModule21GetSharedFunctionInfoEv(%"class.v8::internal::SourceTextModule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  switch i32 %7, label %41 [
    i32 0, label %8
    i32 1, label %8
    i32 2, label %12
    i32 3, label %22
    i32 4, label %22
    i32 5, label %22
    i32 6, label %37
  ]

8:                                                ; preds = %1, %1
  %9 = and i64 %3, -4294967296
  %10 = add i64 %3, 27
  %11 = inttoptr i64 %10 to i32*
  br label %42

12:                                               ; preds = %1
  %13 = and i64 %3, -4294967296
  %14 = add i64 %3, 27
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  br label %42

22:                                               ; preds = %1, %1, %1
  %23 = and i64 %3, -4294967296
  %24 = add i64 %3, 27
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 11
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  %34 = add i64 %33, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  br label %42

37:                                               ; preds = %1
  %38 = and i64 %3, -4294967296
  %39 = add i64 %3, 27
  %40 = inttoptr i64 %39 to i32*
  br label %42

41:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

42:                                               ; preds = %37, %22, %12, %8
  %43 = phi i32* [ %40, %37 ], [ %35, %22 ], [ %20, %12 ], [ %11, %8 ]
  %44 = phi i64 [ %38, %37 ], [ %23, %22 ], [ %13, %12 ], [ %9, %8 ]
  %45 = load i32, i32* %43, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %44, %46
  ret i64 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal16SourceTextModule9GetScriptEv(%"class.v8::internal::SourceTextModule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  switch i32 %7, label %41 [
    i32 0, label %8
    i32 1, label %8
    i32 2, label %12
    i32 3, label %22
    i32 4, label %22
    i32 5, label %22
    i32 6, label %37
  ]

8:                                                ; preds = %1, %1
  %9 = and i64 %3, -4294967296
  %10 = add i64 %3, 27
  %11 = inttoptr i64 %10 to i32*
  br label %42

12:                                               ; preds = %1
  %13 = and i64 %3, -4294967296
  %14 = add i64 %3, 27
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  br label %42

22:                                               ; preds = %1, %1, %1
  %23 = and i64 %3, -4294967296
  %24 = add i64 %3, 27
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 11
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  %34 = add i64 %33, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  br label %42

37:                                               ; preds = %1
  %38 = and i64 %3, -4294967296
  %39 = add i64 %3, 27
  %40 = inttoptr i64 %39 to i32*
  br label %42

41:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

42:                                               ; preds = %8, %12, %22, %37
  %43 = phi i32* [ %11, %8 ], [ %20, %12 ], [ %35, %22 ], [ %40, %37 ]
  %44 = phi i64 [ %9, %8 ], [ %13, %12 ], [ %23, %22 ], [ %38, %37 ]
  %45 = load i32, i32* %43, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %44, %46
  %48 = add i64 %47, 15
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 acquire, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %44, %51
  %53 = add i64 %52, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %44, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 100
  br i1 %61, label %62, label %68

62:                                               ; preds = %42
  %63 = add i64 %52, 11
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %44, %66
  br label %68

68:                                               ; preds = %42, %62
  %69 = phi i64 [ %67, %62 ], [ %52, %42 ]
  ret i64 %69
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal16SourceTextModule11ExportIndexEi(i32) local_unnamed_addr #3 align 2 {
  %2 = add nsw i32 %0, -1
  ret i32 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal16SourceTextModule11ImportIndexEi(i32) local_unnamed_addr #3 align 2 {
  %2 = xor i32 %0, -1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule20CreateIndirectExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEENS4_INS0_25SourceTextModuleInfoEntryEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %11) #11
  br label %30

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 %11, i64* %26, align 8
  br label %30

30:                                               ; preds = %15, %25
  %31 = phi i64* [ %16, %15 ], [ %26, %25 ]
  %32 = tail call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64* %31, i64* %2, i64* %3) #11
  %33 = load i64, i64* %1, align 8
  %34 = load i64, i64* %32, align 8
  %35 = add i64 %33, 3
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %34 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  %38 = and i64 %34, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %30
  %41 = and i64 %33, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = or i64 %41, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %50, i64 %33, i64 %35, i64 %34) #11
  br label %51

51:                                               ; preds = %47, %40, %30
  %52 = and i64 %34, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = and i64 %33, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 24
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %35, i64 %34) #11
  br label %66

66:                                               ; preds = %51, %58, %65
  ret void
}

declare i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64*, i64*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule12CreateExportEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %7 = tail call i64* @_ZN2v88internal7Factory7NewCellENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Factory"* %5, i64* %6) #11
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 31
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = load i64, i64* %7, align 8
  %16 = shl i32 %2, 2
  %17 = add i32 %16, -4
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 7
  %20 = add i64 %19, %14
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %15 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = and i64 %15, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %4
  %26 = and i64 %14, -262144
  %27 = or i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 262144
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %25
  %33 = or i64 %26, 16
  %34 = inttoptr i64 %33 to %"class.v8::internal::Heap"**
  %35 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %34, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %35, i64 %14, i64 %20, i64 %15) #11
  br label %36

36:                                               ; preds = %32, %25
  %37 = and i64 %15, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %36
  %44 = load i64, i64* %28, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %14, i64 %20, i64 %15) #11
  br label %48

48:                                               ; preds = %4, %36, %43, %47
  %49 = load i64, i64* %1, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, 3
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %48
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %55) #11
  br label %74

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %55, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = load i64, i64* %3, align 8
  %77 = add i64 %76, 3
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, 1
  br i1 %80, label %81, label %86

81:                                               ; preds = %74
  %82 = lshr i32 %79, 1
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %85 = zext i32 %82 to i64
  br label %122

86:                                               ; preds = %151, %74
  %87 = phi i64* [ %75, %74 ], [ %153, %151 ]
  %88 = load i64, i64* %1, align 8
  %89 = load i64, i64* %87, align 8
  %90 = add i64 %88, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = trunc i64 %89 to i32
  store atomic volatile i32 %92, i32* %91 monotonic, align 4
  %93 = and i64 %89, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %86
  %96 = and i64 %88, -262144
  %97 = or i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 262144
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %95
  %103 = or i64 %96, 16
  %104 = inttoptr i64 %103 to %"class.v8::internal::Heap"**
  %105 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %104, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %105, i64 %88, i64 %90, i64 %89) #11
  br label %106

106:                                              ; preds = %102, %95, %86
  %107 = and i64 %89, -262144
  %108 = or i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 24
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %106
  %114 = and i64 %88, -262144
  %115 = or i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = and i64 %117, 24
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %88, i64 %90, i64 %89) #11
  br label %121

121:                                              ; preds = %106, %113, %120
  ret void

122:                                              ; preds = %156, %81
  %123 = phi i64 [ %76, %81 ], [ %157, %156 ]
  %124 = phi i64 [ 0, %81 ], [ %154, %156 ]
  %125 = phi i64* [ %75, %81 ], [ %153, %156 ]
  %126 = and i64 %123, -4294967296
  %127 = trunc i64 %124 to i32
  %128 = shl i32 %127, 2
  %129 = sext i32 %128 to i64
  %130 = add nsw i64 %129, 7
  %131 = add i64 %130, %123
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %126, %134
  %136 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %137 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %122
  %139 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %136, i64 %135) #11
  br label %151

140:                                              ; preds = %122
  %141 = load i64*, i64** %83, align 8
  %142 = load i64*, i64** %84, align 8
  %143 = icmp eq i64* %141, %142
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %146

146:                                              ; preds = %144, %140
  %147 = phi i64* [ %145, %144 ], [ %141, %140 ]
  %148 = ptrtoint i64* %147 to i64
  %149 = add i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  store i64* %150, i64** %83, align 8
  store i64 %135, i64* %147, align 8
  br label %151

151:                                              ; preds = %138, %146
  %152 = phi i64* [ %139, %138 ], [ %147, %146 ]
  %153 = tail call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64* %125, i64* %152, i64* %7) #11
  %154 = add nuw nsw i64 %124, 1
  %155 = icmp ult i64 %154, %85
  br i1 %155, label %156, label %86

156:                                              ; preds = %151
  %157 = load i64, i64* %3, align 8
  br label %122
}

declare i64* @_ZN2v88internal7Factory7NewCellENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16SourceTextModule7GetCellEi(%"class.v8::internal::SourceTextModule"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32 %1) #11
  switch i32 %3, label %38 [
    i32 2, label %4
    i32 1, label %15
    i32 0, label %26
  ]

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 35
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = shl i32 %1, 2
  %14 = xor i32 %13, -4
  br label %27

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 31
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = shl i32 %1, 2
  %25 = add i32 %24, -4
  br label %27

26:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

27:                                               ; preds = %4, %15
  %28 = phi i32 [ %25, %15 ], [ %14, %4 ]
  %29 = phi i64 [ %23, %15 ], [ %12, %4 ]
  %30 = phi i64 [ %18, %15 ], [ %7, %4 ]
  %31 = sext i32 %28 to i64
  %32 = add nsw i64 %31, 7
  %33 = add i64 %32, %29
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %30, %36
  br label %38

38:                                               ; preds = %27, %2
  %39 = phi i64 [ 0, %2 ], [ %37, %27 ]
  ret i64 %39
}

declare i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule12LoadVariableEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = tail call i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32 %2) #11
  switch i32 %5, label %36 [
    i32 2, label %6
    i32 1, label %15
    i32 0, label %24
  ]

6:                                                ; preds = %3
  %7 = and i64 %4, -4294967296
  %8 = add i64 %4, 35
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = shl i32 %2, 2
  %14 = xor i32 %13, -4
  br label %25

15:                                               ; preds = %3
  %16 = and i64 %4, -4294967296
  %17 = add i64 %4, 31
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = shl i32 %2, 2
  %23 = add i32 %22, -4
  br label %25

24:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

25:                                               ; preds = %15, %6
  %26 = phi i32 [ %14, %6 ], [ %23, %15 ]
  %27 = phi i64 [ %12, %6 ], [ %21, %15 ]
  %28 = phi i64 [ %7, %6 ], [ %16, %15 ]
  %29 = sext i32 %26 to i64
  %30 = add nsw i64 %29, 7
  %31 = add i64 %30, %27
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %28, %34
  br label %36

36:                                               ; preds = %25, %3
  %37 = phi i64 [ 0, %3 ], [ %35, %25 ]
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %45 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %46 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %36
  %48 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %45, i64 %43) #11
  br label %62

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %53 = load i64*, i64** %52, align 8
  %54 = icmp eq i64* %51, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %57

57:                                               ; preds = %55, %49
  %58 = phi i64* [ %56, %55 ], [ %51, %49 ]
  %59 = ptrtoint i64* %58 to i64
  %60 = add i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  store i64* %61, i64** %50, align 8
  store i64 %43, i64* %58, align 8
  br label %62

62:                                               ; preds = %47, %57
  %63 = phi i64* [ %48, %47 ], [ %58, %57 ]
  ret i64* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule13StoreVariableENS0_6HandleIS1_EEiNS2_INS0_6ObjectEEE(i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = tail call i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32 %1) #11
  switch i32 %5, label %36 [
    i32 2, label %6
    i32 1, label %15
    i32 0, label %24
  ]

6:                                                ; preds = %3
  %7 = and i64 %4, -4294967296
  %8 = add i64 %4, 35
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = shl i32 %1, 2
  %14 = xor i32 %13, -4
  br label %25

15:                                               ; preds = %3
  %16 = and i64 %4, -4294967296
  %17 = add i64 %4, 31
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = shl i32 %1, 2
  %23 = add i32 %22, -4
  br label %25

24:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

25:                                               ; preds = %15, %6
  %26 = phi i32 [ %14, %6 ], [ %23, %15 ]
  %27 = phi i64 [ %12, %6 ], [ %21, %15 ]
  %28 = phi i64 [ %7, %6 ], [ %16, %15 ]
  %29 = sext i32 %26 to i64
  %30 = add nsw i64 %29, 7
  %31 = add i64 %30, %27
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %28, %34
  br label %36

36:                                               ; preds = %25, %3
  %37 = phi i64 [ 0, %3 ], [ %35, %25 ]
  %38 = load i64, i64* %2, align 8
  %39 = add i64 %37, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = trunc i64 %38 to i32
  store atomic volatile i32 %41, i32* %40 monotonic, align 4
  %42 = and i64 %38, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %36
  %45 = and i64 %37, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %44
  %52 = or i64 %45, 16
  %53 = inttoptr i64 %52 to %"class.v8::internal::Heap"**
  %54 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %53, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %54, i64 %37, i64 %39, i64 %38) #11
  br label %55

55:                                               ; preds = %51, %44
  %56 = and i64 %38, -262144
  %57 = or i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = load i64, i64* %47, align 8
  %64 = and i64 %63, 24
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %37, i64 %39, i64 %38) #11
  br label %67

67:                                               ; preds = %36, %55, %62, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, %"class.v8::internal::MessageLocation"* byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext, %"class.v8::internal::Module::ResolveSet"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::Handle.1136", align 8
  %9 = alloca %"class.v8::internal::ObjectHashTable", align 8
  %10 = alloca %"struct.std::__1::pair.1167", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::MessageLocation", align 8
  %13 = ptrtoint i64* %1 to i64
  %14 = getelementptr inbounds %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1136"* %8, i64 0, i32 0, i32 0
  store i64* %3, i64** %14, align 8
  %15 = bitcast %"class.v8::internal::ObjectHashTable"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = load i64, i64* %1, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %9, i64 0, i32 0
  %25 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"* nonnull %24, i64* %3) #11
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %7
  %30 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #11
  br label %44

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %29, %39
  %45 = phi i64* [ %30, %29 ], [ %40, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = and i64 %46, -4294967296
  %51 = add i64 %46, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = icmp eq i16 %58, 161
  br i1 %59, label %60, label %62

60:                                               ; preds = %49
  %61 = ptrtoint i64* %45 to i64
  br label %269

62:                                               ; preds = %44, %49
  %63 = bitcast %"struct.std::__1::pair.1167"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #11
  %64 = bitcast %"struct.std::__1::pair.1167"* %10 to i64*
  store i64 %13, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %10, i64 0, i32 1
  store %"class.v8::internal::UnorderedStringSet"* null, %"class.v8::internal::UnorderedStringSet"** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %6, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %10, i64 0, i32 0
  %68 = call { %"struct.std::__1::__hash_node_base.1148"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JNS_4pairIKS6_S8_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1144"* %66, %"class.v8::internal::Handle.1168"* nonnull dereferenceable(8) %67, %"struct.std::__1::pair.1167"* nonnull dereferenceable(16) %10) #11
  %69 = extractvalue { %"struct.std::__1::__hash_node_base.1148"*, i8 } %68, 0
  %70 = extractvalue { %"struct.std::__1::__hash_node_base.1148"*, i8 } %68, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #11
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %69, i64 3
  %72 = bitcast %"struct.std::__1::__hash_node_base.1148"* %71 to %"class.v8::internal::UnorderedStringSet"**
  %73 = icmp eq i8 %70, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %6, i64 0, i32 1
  %76 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %75, align 8
  %77 = ptrtoint %"class.v8::internal::Zone"* %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %76, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %76, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %81, %79
  %83 = icmp ult i64 %82, 56
  br i1 %83, label %84, label %86, !prof !2

84:                                               ; preds = %74
  %85 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %76, i64 56) #11
  br label %88

86:                                               ; preds = %74
  %87 = add i64 %79, 56
  store i64 %87, i64* %78, align 8
  br label %88

88:                                               ; preds = %84, %86
  %89 = phi i64 [ %85, %84 ], [ %79, %86 ]
  %90 = inttoptr i64 %89 to i8*
  %91 = inttoptr i64 %89 to %"class.v8::internal::UnorderedStringSet"*
  %92 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %93 = bitcast %"struct.std::__1::__compressed_pair_elem.1178"* %92 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #11
  store i64 %77, i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0, i32 0, i32 1, i32 1
  %96 = bitcast %"struct.std::__1::__compressed_pair_elem.1182"* %95 to i64*
  store i64 %77, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0, i32 0, i32 3
  %99 = bitcast %"class.std::__1::__compressed_pair.1186"* %98 to i32*
  store i32 1065353216, i32* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1170"* %100, i64 2) #11
  store %"class.v8::internal::UnorderedStringSet"* %91, %"class.v8::internal::UnorderedStringSet"** %72, align 8
  %101 = getelementptr inbounds %"class.v8::internal::UnorderedStringSet", %"class.v8::internal::UnorderedStringSet"* %91, i64 0, i32 0
  br label %116

102:                                              ; preds = %62
  %103 = bitcast %"struct.std::__1::__hash_node_base.1148"* %71 to %"class.std::__1::unordered_set.1169"**
  %104 = load %"class.std::__1::unordered_set.1169"*, %"class.std::__1::unordered_set.1169"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::unordered_set.1169", %"class.std::__1::unordered_set.1169"* %104, i64 0, i32 0
  %106 = call %"struct.std::__1::__hash_node_base.1174"* @_ZNKSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.1170"* %105, %"class.v8::internal::Handle.1136"* nonnull dereferenceable(8) %8) #11
  %107 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %106, null
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = load %"class.std::__1::unordered_set.1169"*, %"class.std::__1::unordered_set.1169"** %103, align 8
  br label %116

110:                                              ; preds = %102
  br i1 %5, label %111, label %269

111:                                              ; preds = %110
  %112 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %113 = load i64*, i64** %14, align 8
  %114 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %112, i32 44, i64* %113, i64* %2, i64* null) #11
  %115 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %114, %"class.v8::internal::MessageLocation"* nonnull %4) #11
  br label %269

116:                                              ; preds = %108, %88
  %117 = phi %"class.std::__1::unordered_set.1169"* [ %109, %108 ], [ %101, %88 ]
  %118 = getelementptr inbounds %"class.std::__1::unordered_set.1169", %"class.std::__1::unordered_set.1169"* %117, i64 0, i32 0
  %119 = call { %"struct.std::__1::__hash_node_base.1174"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1170"* %118, %"class.v8::internal::Handle.1136"* nonnull dereferenceable(8) %8, %"class.v8::internal::Handle.1136"* nonnull dereferenceable(8) %8) #11
  %120 = load i64, i64* %45, align 8
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %265, label %123

123:                                              ; preds = %116
  %124 = and i64 %120, -4294967296
  %125 = add i64 %120, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %124, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp eq i16 %132, 113
  br i1 %133, label %134, label %265

134:                                              ; preds = %123
  %135 = add i64 %120, 11
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %124, %138
  %140 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %141 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %134
  %143 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %140, i64 %139) #11
  br label %157

144:                                              ; preds = %134
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %148 = load i64*, i64** %147, align 8
  %149 = icmp eq i64* %146, %148
  br i1 %149, label %150, label %152

150:                                              ; preds = %144
  %151 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %152

152:                                              ; preds = %150, %144
  %153 = phi i64* [ %151, %150 ], [ %146, %144 ]
  %154 = ptrtoint i64* %153 to i64
  %155 = add i64 %154, 8
  %156 = inttoptr i64 %155 to i64*
  store i64* %156, i64** %145, align 8
  store i64 %139, i64* %153, align 8
  br label %157

157:                                              ; preds = %142, %152
  %158 = phi i64* [ %143, %142 ], [ %153, %152 ]
  %159 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #11
  %160 = load i64, i64* %1, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %11, i64 0, i32 0
  %163 = call i64 @_ZNK2v88internal16SourceTextModule9GetScriptEv(%"class.v8::internal::SourceTextModule"* nonnull %162)
  %164 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %165 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %157
  %167 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %164, i64 %163) #11
  br label %181

168:                                              ; preds = %157
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %172 = load i64*, i64** %171, align 8
  %173 = icmp eq i64* %170, %172
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %176

176:                                              ; preds = %174, %168
  %177 = phi i64* [ %175, %174 ], [ %170, %168 ]
  %178 = ptrtoint i64* %177 to i64
  %179 = add i64 %178, 8
  %180 = inttoptr i64 %179 to i64*
  store i64* %180, i64** %169, align 8
  store i64 %163, i64* %177, align 8
  br label %181

181:                                              ; preds = %166, %176
  %182 = phi i64* [ %167, %166 ], [ %177, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  %183 = bitcast %"class.v8::internal::MessageLocation"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %183) #11
  %184 = load i64, i64* %45, align 8
  %185 = add i64 %184, 23
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = ashr i32 %187, 1
  %189 = add i64 %184, 27
  %190 = inttoptr i64 %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = ashr i32 %191, 1
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %12, i64* %182, i32 %188, i32 %192) #11
  %193 = load i64, i64* %45, align 8
  %194 = add i64 %193, 15
  %195 = inttoptr i64 %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = ashr i32 %196, 1
  %198 = call i64* @_ZN2v88internal16SourceTextModule13ResolveImportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEEiNS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %158, i32 %197, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %12, i1 zeroext true, %"class.v8::internal::Module::ResolveSet"* %6)
  %199 = icmp eq i64* %198, null
  br i1 %199, label %263, label %200

200:                                              ; preds = %181
  %201 = ptrtoint i64* %198 to i64
  %202 = load i64, i64* %1, align 8
  %203 = and i64 %202, -4294967296
  %204 = add i64 %202, 3
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %203, %207
  %209 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %210 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %200
  %212 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %209, i64 %208) #11
  br label %226

213:                                              ; preds = %200
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %217 = load i64*, i64** %216, align 8
  %218 = icmp eq i64* %215, %217
  br i1 %218, label %219, label %221

219:                                              ; preds = %213
  %220 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %221

221:                                              ; preds = %219, %213
  %222 = phi i64* [ %220, %219 ], [ %215, %213 ]
  %223 = ptrtoint i64* %222 to i64
  %224 = add i64 %223, 8
  %225 = inttoptr i64 %224 to i64*
  store i64* %225, i64** %214, align 8
  store i64 %208, i64* %222, align 8
  br label %226

226:                                              ; preds = %211, %221
  %227 = phi i64* [ %212, %211 ], [ %222, %221 ]
  %228 = load i64*, i64** %14, align 8
  %229 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64* %227, i64* %228, i64* nonnull %198) #11
  %230 = load i64, i64* %1, align 8
  %231 = load i64, i64* %229, align 8
  %232 = add i64 %230, 3
  %233 = inttoptr i64 %232 to i32*
  %234 = trunc i64 %231 to i32
  store atomic volatile i32 %234, i32* %233 monotonic, align 4
  %235 = and i64 %231, 1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %226
  %238 = and i64 %230, -262144
  %239 = or i64 %238, 8
  %240 = inttoptr i64 %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = and i64 %241, 262144
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %248, label %244

244:                                              ; preds = %237
  %245 = or i64 %238, 16
  %246 = inttoptr i64 %245 to %"class.v8::internal::Heap"**
  %247 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %246, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %247, i64 %230, i64 %232, i64 %231) #11
  br label %248

248:                                              ; preds = %244, %237, %226
  %249 = and i64 %231, -262144
  %250 = or i64 %249, 8
  %251 = inttoptr i64 %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = and i64 %252, 24
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %263, label %255

255:                                              ; preds = %248
  %256 = and i64 %230, -262144
  %257 = or i64 %256, 8
  %258 = inttoptr i64 %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = and i64 %259, 24
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %255
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %232, i64 %231) #11
  br label %263

263:                                              ; preds = %262, %255, %248, %181
  %264 = phi i64 [ 0, %181 ], [ %201, %248 ], [ %201, %255 ], [ %201, %262 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %183) #11
  br label %269

265:                                              ; preds = %116, %123
  %266 = load i64*, i64** %14, align 8
  %267 = call i64* @_ZN2v88internal16SourceTextModule29ResolveExportUsingStarExportsEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %266, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %4, i1 zeroext %5, %"class.v8::internal::Module::ResolveSet"* %6)
  %268 = ptrtoint i64* %267 to i64
  br label %269

269:                                              ; preds = %111, %110, %265, %263, %60
  %270 = phi i64 [ %61, %60 ], [ %264, %263 ], [ %268, %265 ], [ 0, %110 ], [ 0, %111 ]
  %271 = inttoptr i64 %270 to i64*
  ret i64* %271
}

declare i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"*, i64*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule13ResolveImportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEEiNS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::MessageLocation"* nocapture readonly byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext, %"class.v8::internal::Module::ResolveSet"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, 39
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = shl i32 %3, 2
  %17 = sext i32 %16 to i64
  %18 = add nsw i64 %17, 7
  %19 = add i64 %15, %18
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %7
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %23) #11
  br label %42

29:                                               ; preds = %7
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %33 = load i64*, i64** %32, align 8
  %34 = icmp eq i64* %31, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = phi i64* [ %36, %35 ], [ %31, %29 ]
  %39 = ptrtoint i64* %38 to i64
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  store i64* %41, i64** %30, align 8
  store i64 %23, i64* %38, align 8
  br label %42

42:                                               ; preds = %27, %37
  %43 = phi i64* [ %28, %27 ], [ %38, %37 ]
  %44 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = load i64, i64* %1, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %8, i64 0, i32 0
  %48 = call i64 @_ZNK2v88internal16SourceTextModule4infoEv(%"class.v8::internal::SourceTextModule"* nonnull %47)
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, %18
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %49, %58
  %60 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %61 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %42
  %63 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %60, i64 %59) #11
  br label %77

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i64* [ %71, %70 ], [ %66, %64 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %65, align 8
  store i64 %59, i64* %73, align 8
  br label %77

77:                                               ; preds = %62, %72
  %78 = phi i64* [ %63, %62 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, -4294967296
  %81 = add i64 %79, 3
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %87 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %77
  %89 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %86, i64 %85) #11
  br label %103

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %94 = load i64*, i64** %93, align 8
  %95 = icmp eq i64* %92, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  %97 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %98

98:                                               ; preds = %96, %90
  %99 = phi i64* [ %97, %96 ], [ %92, %90 ]
  %100 = ptrtoint i64* %99 to i64
  %101 = add i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  store i64* %102, i64** %91, align 8
  store i64 %85, i64* %99, align 8
  br label %103

103:                                              ; preds = %88, %98
  %104 = phi i64* [ %89, %88 ], [ %99, %98 ]
  %105 = call i64* @_ZN2v88internal6Module13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS1_10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %43, i64* %104, i64* %2, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %4, i1 zeroext %5, %"class.v8::internal::Module::ResolveSet"* %6) #11
  ret i64* %105
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule29ResolveExportUsingStarExportsEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, %"class.v8::internal::MessageLocation"* byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext, %"class.v8::internal::Module::ResolveSet"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::MessageLocation", align 8
  %12 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = load i64, i64* %3, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 301
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = trunc i64 %13 to i32
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %264

22:                                               ; preds = %7
  %23 = and i64 %13, -4294967296
  %24 = add i64 %13, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp ult i16 %31, 32
  br i1 %32, label %33, label %45

33:                                               ; preds = %22
  %34 = and i64 %17, -4294967296
  %35 = add i64 %17, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp ult i16 %42, 32
  br i1 %43, label %44, label %45

44:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %47

45:                                               ; preds = %22, %33
  %46 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %15, i64 %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br i1 %46, label %264, label %47

47:                                               ; preds = %44, %45
  %48 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %49 = load i64, i64* %1, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %9, i64 0, i32 0
  %52 = call i64 @_ZNK2v88internal16SourceTextModule4infoEv(%"class.v8::internal::SourceTextModule"* nonnull %51)
  %53 = and i64 %52, -4294967296
  %54 = add i64 %52, 11
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %60 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %61 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %47
  %63 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %60, i64 %58) #11
  br label %77

64:                                               ; preds = %47
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i64* [ %71, %70 ], [ %66, %64 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %65, align 8
  store i64 %58, i64* %73, align 8
  br label %77

77:                                               ; preds = %62, %72
  %78 = phi i64* [ %63, %62 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 3
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 1
  br i1 %83, label %84, label %264

84:                                               ; preds = %77
  %85 = lshr i32 %82, 1
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %89 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %10 to i8*
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %10, i64 0, i32 0
  %92 = bitcast %"class.v8::internal::MessageLocation"* %11 to i8*
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %95 = zext i32 %85 to i64
  br label %96

96:                                               ; preds = %197, %84
  %97 = phi i64 [ %79, %84 ], [ %198, %197 ]
  %98 = phi i64 [ 0, %84 ], [ %195, %197 ]
  %99 = phi i64 [ 0, %84 ], [ %194, %197 ]
  %100 = and i64 %97, -4294967296
  %101 = trunc i64 %98 to i32
  %102 = shl i32 %101, 2
  %103 = sext i32 %102 to i64
  %104 = add nsw i64 %103, 7
  %105 = add i64 %104, %97
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %100, %108
  %110 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %111 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %96
  %113 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %110, i64 %109) #11
  %114 = load i64, i64* %113, align 8
  br label %126

115:                                              ; preds = %96
  %116 = load i64*, i64** %86, align 8
  %117 = load i64*, i64** %87, align 8
  %118 = icmp eq i64* %116, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %121

121:                                              ; preds = %119, %115
  %122 = phi i64* [ %120, %119 ], [ %116, %115 ]
  %123 = ptrtoint i64* %122 to i64
  %124 = add i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  store i64* %125, i64** %86, align 8
  store i64 %109, i64* %122, align 8
  br label %126

126:                                              ; preds = %112, %121
  %127 = phi i64 [ %114, %112 ], [ %109, %121 ]
  %128 = phi i64* [ %113, %112 ], [ %122, %121 ]
  %129 = add i64 %127, 3
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = load i64, i64* %88, align 8
  %133 = trunc i64 %132 to i32
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %135, label %193

135:                                              ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %136 = load i64, i64* %1, align 8
  store i64 %136, i64* %90, align 8
  %137 = call i64 @_ZNK2v88internal16SourceTextModule9GetScriptEv(%"class.v8::internal::SourceTextModule"* nonnull %91)
  %138 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %139 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %135
  %141 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %138, i64 %137) #11
  br label %153

142:                                              ; preds = %135
  %143 = load i64*, i64** %86, align 8
  %144 = load i64*, i64** %87, align 8
  %145 = icmp eq i64* %143, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %142
  %147 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %148

148:                                              ; preds = %146, %142
  %149 = phi i64* [ %147, %146 ], [ %143, %142 ]
  %150 = ptrtoint i64* %149 to i64
  %151 = add i64 %150, 8
  %152 = inttoptr i64 %151 to i64*
  store i64* %152, i64** %86, align 8
  store i64 %137, i64* %149, align 8
  br label %153

153:                                              ; preds = %140, %148
  %154 = phi i64* [ %141, %140 ], [ %149, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #11
  %155 = load i64, i64* %128, align 8
  %156 = add i64 %155, 23
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = ashr i32 %158, 1
  %160 = add i64 %155, 27
  %161 = inttoptr i64 %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = ashr i32 %162, 1
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %11, i64* %154, i32 %159, i32 %163) #11
  %164 = load i64, i64* %128, align 8
  %165 = add i64 %164, 15
  %166 = inttoptr i64 %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = ashr i32 %167, 1
  %169 = call i64* @_ZN2v88internal16SourceTextModule13ResolveImportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEEiNS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %3, i32 %168, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %11, i1 zeroext false, %"class.v8::internal::Module::ResolveSet"* %6)
  %170 = icmp eq i64* %169, null
  br i1 %170, label %185, label %171

171:                                              ; preds = %153
  %172 = ptrtoint i64* %169 to i64
  %173 = icmp eq i64 %99, 0
  %174 = select i1 %173, i64 %172, i64 %99
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = load i64, i64* %169, align 8
  %178 = trunc i64 %176 to i32
  %179 = trunc i64 %177 to i32
  %180 = icmp eq i32 %178, %179
  br i1 %180, label %191, label %181

181:                                              ; preds = %171
  %182 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %183 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %182, i32 234, i64* %2, i64* %3, i64* null) #11
  %184 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %183, %"class.v8::internal::MessageLocation"* nonnull %4) #11
  br label %199

185:                                              ; preds = %153
  %186 = load i64, i64* %93, align 8
  %187 = load i64, i64* %94, align 8
  %188 = trunc i64 %187 to i32
  %189 = trunc i64 %186 to i32
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %191, label %199

191:                                              ; preds = %185, %171
  %192 = phi i64 [ %174, %171 ], [ %99, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #11
  br label %193

193:                                              ; preds = %126, %191
  %194 = phi i64 [ %192, %191 ], [ %99, %126 ]
  %195 = add nuw nsw i64 %98, 1
  %196 = icmp ult i64 %195, %95
  br i1 %196, label %197, label %200

197:                                              ; preds = %193
  %198 = load i64, i64* %78, align 8
  br label %96

199:                                              ; preds = %185, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #11
  br label %269

200:                                              ; preds = %193
  %201 = inttoptr i64 %194 to i64*
  %202 = icmp eq i64 %194, 0
  br i1 %202, label %264, label %203

203:                                              ; preds = %200
  %204 = load i64, i64* %1, align 8
  %205 = and i64 %204, -4294967296
  %206 = add i64 %204, 3
  %207 = inttoptr i64 %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %205, %209
  %211 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %212 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %203
  %214 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %211, i64 %210) #11
  br label %228

215:                                              ; preds = %203
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %217 = load i64*, i64** %216, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %219 = load i64*, i64** %218, align 8
  %220 = icmp eq i64* %217, %219
  br i1 %220, label %221, label %223

221:                                              ; preds = %215
  %222 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %223

223:                                              ; preds = %221, %215
  %224 = phi i64* [ %222, %221 ], [ %217, %215 ]
  %225 = ptrtoint i64* %224 to i64
  %226 = add i64 %225, 8
  %227 = inttoptr i64 %226 to i64*
  store i64* %227, i64** %216, align 8
  store i64 %210, i64* %224, align 8
  br label %228

228:                                              ; preds = %213, %223
  %229 = phi i64* [ %214, %213 ], [ %224, %223 ]
  %230 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64* %229, i64* %3, i64* nonnull %201) #11
  %231 = load i64, i64* %1, align 8
  %232 = load i64, i64* %230, align 8
  %233 = add i64 %231, 3
  %234 = inttoptr i64 %233 to i32*
  %235 = trunc i64 %232 to i32
  store atomic volatile i32 %235, i32* %234 monotonic, align 4
  %236 = and i64 %232, 1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %249, label %238

238:                                              ; preds = %228
  %239 = and i64 %231, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 262144
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %249, label %245

245:                                              ; preds = %238
  %246 = or i64 %239, 16
  %247 = inttoptr i64 %246 to %"class.v8::internal::Heap"**
  %248 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %247, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %248, i64 %231, i64 %233, i64 %232) #11
  br label %249

249:                                              ; preds = %245, %238, %228
  %250 = and i64 %232, -262144
  %251 = or i64 %250, 8
  %252 = inttoptr i64 %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = and i64 %253, 24
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %269, label %256

256:                                              ; preds = %249
  %257 = and i64 %231, -262144
  %258 = or i64 %257, 8
  %259 = inttoptr i64 %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = and i64 %260, 24
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %269

263:                                              ; preds = %256
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %231, i64 %233, i64 %232) #11
  br label %269

264:                                              ; preds = %77, %200, %21, %45
  br i1 %5, label %265, label %269

265:                                              ; preds = %264
  %266 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %267 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %266, i32 345, i64* %2, i64* %3, i64* null) #11
  %268 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %267, %"class.v8::internal::MessageLocation"* nonnull %4) #11
  br label %269

269:                                              ; preds = %263, %256, %249, %199, %264, %265
  %270 = phi i64 [ 0, %265 ], [ 0, %264 ], [ %194, %263 ], [ %194, %256 ], [ %194, %249 ], [ 0, %199 ]
  %271 = inttoptr i64 %270 to i64*
  ret i64* %271
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal16SourceTextModule4infoEv(%"class.v8::internal::SourceTextModule"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.v8::internal::ScopeInfo", align 8
  %3 = bitcast %"class.v8::internal::ScopeInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  switch i32 %9, label %43 [
    i32 0, label %10
    i32 1, label %10
    i32 2, label %14
    i32 3, label %24
    i32 4, label %24
    i32 5, label %24
    i32 6, label %39
  ]

10:                                               ; preds = %1, %1
  %11 = and i64 %5, -4294967296
  %12 = add i64 %5, 27
  %13 = inttoptr i64 %12 to i32*
  br label %44

14:                                               ; preds = %1
  %15 = and i64 %5, -4294967296
  %16 = add i64 %5, 27
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  br label %44

24:                                               ; preds = %1, %1, %1
  %25 = and i64 %5, -4294967296
  %26 = add i64 %5, 27
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %25, %34
  %36 = add i64 %35, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  br label %44

39:                                               ; preds = %1
  %40 = and i64 %5, -4294967296
  %41 = add i64 %5, 27
  %42 = inttoptr i64 %41 to i32*
  br label %44

43:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

44:                                               ; preds = %10, %14, %24, %39
  %45 = phi i32* [ %13, %10 ], [ %22, %14 ], [ %37, %24 ], [ %42, %39 ]
  %46 = phi i64 [ %11, %10 ], [ %15, %14 ], [ %25, %24 ], [ %40, %39 ]
  %47 = load i32, i32* %45, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %46, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %46, %53
  %55 = and i64 %53, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %44
  %58 = add i64 %54, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %46, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp eq i16 %65, 178
  br i1 %66, label %88, label %67

67:                                               ; preds = %57, %44
  %68 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %69 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %68, i64 0, i32 0, i32 1
  %72 = load i8, i8* %71, align 8, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %68, i64 0, i32 1, i64 0
  br label %84

76:                                               ; preds = %70, %67
  %77 = and i64 %49, -262144
  %78 = or i64 %77, 16
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 16
  %81 = add i64 %80, -41416
  %82 = inttoptr i64 %81 to %"class.v8::internal::Isolate"*
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %82, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %84

84:                                               ; preds = %76, %74
  %85 = phi i64* [ %83, %76 ], [ %75, %74 ]
  %86 = getelementptr inbounds i64, i64* %85, i64 28
  %87 = load i64, i64* %86, align 8
  br label %88

88:                                               ; preds = %57, %84
  %89 = phi i64 [ %87, %84 ], [ %54, %57 ]
  %90 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %89, i64* %90, align 8
  %91 = call i64 @_ZNK2v88internal9ScopeInfo20ModuleDescriptorInfoEv(%"class.v8::internal::ScopeInfo"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i64 %91
}

declare i64* @_ZN2v88internal6Module13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS1_10ResolveSetE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, %"class.v8::internal::MessageLocation"* byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext, %"class.v8::internal::Module::ResolveSet"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16SourceTextModule18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"*, i64*, %"class.v8::Context"*, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*)*, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::Module"*)*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", align 8
  %10 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = load i64, i64* %1, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %6, i64 0, i32 0
  %14 = call i64 @_ZNK2v88internal16SourceTextModule4infoEv(%"class.v8::internal::SourceTextModule"* nonnull %13)
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %16 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %16, i64 %14) #11
  br label %33

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi i64* [ %27, %26 ], [ %22, %20 ]
  %30 = ptrtoint i64* %29 to i64
  %31 = add i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  store i64* %32, i64** %21, align 8
  store i64 %14, i64* %29, align 8
  br label %33

33:                                               ; preds = %18, %28
  %34 = phi i64* [ %19, %18 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, -4294967296
  %37 = add i64 %35, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %33
  %45 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %41) #11
  br label %59

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %41, i64* %55, align 8
  br label %59

59:                                               ; preds = %44, %54
  %60 = phi i64* [ %45, %44 ], [ %55, %54 ]
  %61 = load i64, i64* %1, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, 39
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %59
  %71 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %67) #11
  br label %85

72:                                               ; preds = %59
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %67, i64* %81, align 8
  br label %85

85:                                               ; preds = %70, %80
  %86 = phi i64* [ %71, %70 ], [ %81, %80 ]
  %87 = load i64, i64* %60, align 8
  %88 = add i64 %87, 3
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 1
  br i1 %91, label %92, label %229

92:                                               ; preds = %85
  %93 = lshr i32 %90, 1
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %96 = icmp eq %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*)* %3, null
  %97 = bitcast i64* %1 to %"class.v8::Module"*
  %98 = zext i32 %93 to i64
  br label %99

99:                                               ; preds = %227, %92
  %100 = phi i64 [ %87, %92 ], [ %228, %227 ]
  %101 = phi i64 [ 0, %92 ], [ %225, %227 ]
  %102 = and i64 %100, -4294967296
  %103 = trunc i64 %101 to i32
  %104 = shl i32 %103, 2
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %105, 7
  %107 = add i64 %100, %106
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %102, %110
  %112 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %113 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %112, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %99
  %115 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %112, i64 %111) #11
  %116 = load i64, i64* %115, align 8
  br label %128

117:                                              ; preds = %99
  %118 = load i64*, i64** %94, align 8
  %119 = load i64*, i64** %95, align 8
  %120 = icmp eq i64* %118, %119
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %123

123:                                              ; preds = %121, %117
  %124 = phi i64* [ %122, %121 ], [ %118, %117 ]
  %125 = ptrtoint i64* %124 to i64
  %126 = add i64 %125, 8
  %127 = inttoptr i64 %126 to i64*
  store i64* %127, i64** %94, align 8
  store i64 %111, i64* %124, align 8
  br label %128

128:                                              ; preds = %114, %123
  %129 = phi i64 [ %116, %114 ], [ %111, %123 ]
  %130 = phi i64* [ %115, %114 ], [ %124, %123 ]
  %131 = and i64 %129, -4294967296
  %132 = add i64 %129, 3
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %131, %135
  %137 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %138 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %128
  %140 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %137, i64 %136) #11
  br label %152

141:                                              ; preds = %128
  %142 = load i64*, i64** %94, align 8
  %143 = load i64*, i64** %95, align 8
  %144 = icmp eq i64* %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %147

147:                                              ; preds = %145, %141
  %148 = phi i64* [ %146, %145 ], [ %142, %141 ]
  %149 = ptrtoint i64* %148 to i64
  %150 = add i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  store i64* %151, i64** %94, align 8
  store i64 %136, i64* %148, align 8
  br label %152

152:                                              ; preds = %139, %147
  %153 = phi i64* [ %140, %139 ], [ %148, %147 ]
  br i1 %96, label %185, label %154

154:                                              ; preds = %152
  %155 = load i64, i64* %130, align 8
  %156 = and i64 %155, -4294967296
  %157 = add i64 %155, 7
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %156, %160
  %162 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %163 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %154
  %165 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %162, i64 %161) #11
  br label %177

166:                                              ; preds = %154
  %167 = load i64*, i64** %94, align 8
  %168 = load i64*, i64** %95, align 8
  %169 = icmp eq i64* %167, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  %171 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %172

172:                                              ; preds = %170, %166
  %173 = phi i64* [ %171, %170 ], [ %167, %166 ]
  %174 = ptrtoint i64* %173 to i64
  %175 = add i64 %174, 8
  %176 = inttoptr i64 %175 to i64*
  store i64* %176, i64** %94, align 8
  store i64 %161, i64* %173, align 8
  br label %177

177:                                              ; preds = %164, %172
  %178 = phi i64* [ %165, %164 ], [ %173, %172 ]
  %179 = bitcast i64* %153 to %"class.v8::String"*
  %180 = bitcast i64* %178 to %"class.v8::FixedArray"*
  %181 = call %"class.v8::Module"* %3(%"class.v8::Context"* %2, %"class.v8::String"* %179, %"class.v8::FixedArray"* %180, %"class.v8::Module"* %97) #11
  %182 = icmp eq %"class.v8::Module"* %181, null
  br i1 %182, label %183, label %191

183:                                              ; preds = %177
  %184 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %423

185:                                              ; preds = %152
  %186 = bitcast i64* %153 to %"class.v8::String"*
  %187 = call %"class.v8::Module"* %4(%"class.v8::Context"* %2, %"class.v8::String"* %186, %"class.v8::Module"* %97) #11
  %188 = icmp eq %"class.v8::Module"* %187, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  %190 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %423

191:                                              ; preds = %185, %177
  %192 = phi %"class.v8::Module"* [ %187, %185 ], [ %181, %177 ]
  %193 = bitcast %"class.v8::Module"* %192 to i64*
  %194 = load i64, i64* %86, align 8
  %195 = load i64, i64* %193, align 8
  %196 = add i64 %194, %106
  %197 = inttoptr i64 %196 to i32*
  %198 = trunc i64 %195 to i32
  store atomic volatile i32 %198, i32* %197 monotonic, align 4
  %199 = and i64 %195, 1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %224, label %201

201:                                              ; preds = %191
  %202 = and i64 %194, -262144
  %203 = or i64 %202, 8
  %204 = inttoptr i64 %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = and i64 %205, 262144
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %212, label %208

208:                                              ; preds = %201
  %209 = or i64 %202, 16
  %210 = inttoptr i64 %209 to %"class.v8::internal::Heap"**
  %211 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %210, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %211, i64 %194, i64 %196, i64 %195) #11
  br label %212

212:                                              ; preds = %208, %201
  %213 = and i64 %195, -262144
  %214 = or i64 %213, 8
  %215 = inttoptr i64 %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = and i64 %216, 24
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %224, label %219

219:                                              ; preds = %212
  %220 = load i64, i64* %204, align 8
  %221 = and i64 %220, 24
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %219
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %194, i64 %196, i64 %195) #11
  br label %224

224:                                              ; preds = %191, %212, %219, %223
  %225 = add nuw nsw i64 %101, 1
  %226 = icmp ult i64 %225, %98
  br i1 %226, label %227, label %229

227:                                              ; preds = %224
  %228 = load i64, i64* %60, align 8
  br label %99

229:                                              ; preds = %224, %85
  %230 = load i64, i64* %86, align 8
  %231 = add i64 %230, 3
  %232 = inttoptr i64 %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = icmp sgt i32 %233, 1
  br i1 %234, label %235, label %276

235:                                              ; preds = %229
  %236 = lshr i32 %233, 1
  %237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %238 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %239 = zext i32 %236 to i64
  br label %244

240:                                              ; preds = %272
  %241 = icmp ult i64 %275, %239
  br i1 %241, label %242, label %276

242:                                              ; preds = %240
  %243 = load i64, i64* %86, align 8
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i64 [ %230, %235 ], [ %243, %242 ]
  %246 = phi i64 [ 0, %235 ], [ %275, %242 ]
  %247 = and i64 %245, -4294967296
  %248 = trunc i64 %246 to i32
  %249 = shl i32 %248, 2
  %250 = sext i32 %249 to i64
  %251 = add nsw i64 %250, 7
  %252 = add i64 %251, %245
  %253 = inttoptr i64 %252 to i32*
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = zext i32 %254 to i64
  %256 = or i64 %247, %255
  %257 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %258 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %244
  %260 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %257, i64 %256) #11
  br label %272

261:                                              ; preds = %244
  %262 = load i64*, i64** %237, align 8
  %263 = load i64*, i64** %238, align 8
  %264 = icmp eq i64* %262, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %261
  %266 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %267

267:                                              ; preds = %265, %261
  %268 = phi i64* [ %266, %265 ], [ %262, %261 ]
  %269 = ptrtoint i64* %268 to i64
  %270 = add i64 %269, 8
  %271 = inttoptr i64 %270 to i64*
  store i64* %271, i64** %237, align 8
  store i64 %256, i64* %268, align 8
  br label %272

272:                                              ; preds = %259, %267
  %273 = phi i64* [ %260, %259 ], [ %268, %267 ]
  %274 = call zeroext i1 @_ZN2v88internal6Module18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"* %0, i64* %273, %"class.v8::Context"* %2, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*)* %3, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::Module"*)* %4) #11
  %275 = add nuw nsw i64 %246, 1
  br i1 %274, label %240, label %423

276:                                              ; preds = %240, %229
  %277 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277) #11
  %278 = load i64, i64* %34, align 8
  %279 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %7, i64 0, i32 0
  %281 = call i32 @_ZNK2v88internal20SourceTextModuleInfo18RegularExportCountEv(%"class.v8::internal::SourceTextModuleInfo"* nonnull %280) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277) #11
  %282 = icmp sgt i32 %281, 0
  br i1 %282, label %283, label %292

283:                                              ; preds = %276
  %284 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %8 to i8*
  %285 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %8, i64 0, i32 0
  %287 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %9 to i8*
  %288 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModuleInfo>::ObjectRef"* %9, i64 0, i32 0
  %290 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %291 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %331

292:                                              ; preds = %352, %276
  %293 = load i64, i64* %34, align 8
  %294 = and i64 %293, -4294967296
  %295 = add i64 %293, 11
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = zext i32 %297 to i64
  %299 = or i64 %294, %298
  %300 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %301 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %292
  %303 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %300, i64 %299) #11
  %304 = load i64, i64* %303, align 8
  br label %318

305:                                              ; preds = %292
  %306 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %307 = load i64*, i64** %306, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %309 = load i64*, i64** %308, align 8
  %310 = icmp eq i64* %307, %309
  br i1 %310, label %311, label %313

311:                                              ; preds = %305
  %312 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %313

313:                                              ; preds = %311, %305
  %314 = phi i64* [ %312, %311 ], [ %307, %305 ]
  %315 = ptrtoint i64* %314 to i64
  %316 = add i64 %315, 8
  %317 = inttoptr i64 %316 to i64*
  store i64* %317, i64** %306, align 8
  store i64 %299, i64* %314, align 8
  br label %318

318:                                              ; preds = %302, %313
  %319 = phi i64 [ %304, %302 ], [ %299, %313 ]
  %320 = phi i64* [ %303, %302 ], [ %314, %313 ]
  %321 = add i64 %319, 3
  %322 = inttoptr i64 %321 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = icmp sgt i32 %323, 1
  br i1 %324, label %325, label %423

325:                                              ; preds = %318
  %326 = lshr i32 %323, 1
  %327 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %328 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %329 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %330 = zext i32 %326 to i64
  br label %356

331:                                              ; preds = %352, %283
  %332 = phi i32 [ 0, %283 ], [ %354, %352 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #11
  %333 = load i64, i64* %34, align 8
  store i64 %333, i64* %285, align 8
  %334 = call i32 @_ZNK2v88internal20SourceTextModuleInfo22RegularExportCellIndexEi(%"class.v8::internal::SourceTextModuleInfo"* nonnull %286, i32 %332) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #11
  %335 = load i64, i64* %34, align 8
  store i64 %335, i64* %288, align 8
  %336 = call i64 @_ZNK2v88internal20SourceTextModuleInfo24RegularExportExportNamesEi(%"class.v8::internal::SourceTextModuleInfo"* nonnull %289, i32 %332) #11
  %337 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %338 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %337, null
  br i1 %338, label %341, label %339

339:                                              ; preds = %331
  %340 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %337, i64 %336) #11
  br label %352

341:                                              ; preds = %331
  %342 = load i64*, i64** %290, align 8
  %343 = load i64*, i64** %291, align 8
  %344 = icmp eq i64* %342, %343
  br i1 %344, label %345, label %347

345:                                              ; preds = %341
  %346 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %347

347:                                              ; preds = %345, %341
  %348 = phi i64* [ %346, %345 ], [ %342, %341 ]
  %349 = ptrtoint i64* %348 to i64
  %350 = add i64 %349, 8
  %351 = inttoptr i64 %350 to i64*
  store i64* %351, i64** %290, align 8
  store i64 %336, i64* %348, align 8
  br label %352

352:                                              ; preds = %339, %347
  %353 = phi i64* [ %340, %339 ], [ %348, %347 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #11
  call void @_ZN2v88internal16SourceTextModule12CreateExportEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %334, i64* %353)
  %354 = add nuw nsw i32 %332, 1
  %355 = icmp eq i32 %354, %281
  br i1 %355, label %292, label %331

356:                                              ; preds = %421, %325
  %357 = phi i64 [ %319, %325 ], [ %422, %421 ]
  %358 = phi i64 [ 0, %325 ], [ %419, %421 ]
  %359 = and i64 %357, -4294967296
  %360 = trunc i64 %358 to i32
  %361 = shl i32 %360, 2
  %362 = sext i32 %361 to i64
  %363 = add nsw i64 %362, 7
  %364 = add i64 %363, %357
  %365 = inttoptr i64 %364 to i32*
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = zext i32 %366 to i64
  %368 = or i64 %359, %367
  %369 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %370 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %369, null
  br i1 %370, label %374, label %371

371:                                              ; preds = %356
  %372 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %369, i64 %368) #11
  %373 = load i64, i64* %372, align 8
  br label %385

374:                                              ; preds = %356
  %375 = load i64*, i64** %327, align 8
  %376 = load i64*, i64** %328, align 8
  %377 = icmp eq i64* %375, %376
  br i1 %377, label %378, label %380

378:                                              ; preds = %374
  %379 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %380

380:                                              ; preds = %378, %374
  %381 = phi i64* [ %379, %378 ], [ %375, %374 ]
  %382 = ptrtoint i64* %381 to i64
  %383 = add i64 %382, 8
  %384 = inttoptr i64 %383 to i64*
  store i64* %384, i64** %327, align 8
  store i64 %368, i64* %381, align 8
  br label %385

385:                                              ; preds = %371, %380
  %386 = phi i64 [ %373, %371 ], [ %368, %380 ]
  %387 = phi i64* [ %372, %371 ], [ %381, %380 ]
  %388 = and i64 %386, -4294967296
  %389 = add i64 %386, 3
  %390 = inttoptr i64 %389 to i32*
  %391 = load i32, i32* %390, align 4
  %392 = zext i32 %391 to i64
  %393 = or i64 %388, %392
  %394 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %395 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %394, null
  br i1 %395, label %399, label %396

396:                                              ; preds = %385
  %397 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %394, i64 %393) #11
  %398 = load i64, i64* %397, align 8
  br label %410

399:                                              ; preds = %385
  %400 = load i64*, i64** %327, align 8
  %401 = load i64*, i64** %328, align 8
  %402 = icmp eq i64* %400, %401
  br i1 %402, label %403, label %405

403:                                              ; preds = %399
  %404 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %405

405:                                              ; preds = %403, %399
  %406 = phi i64* [ %404, %403 ], [ %400, %399 ]
  %407 = ptrtoint i64* %406 to i64
  %408 = add i64 %407, 8
  %409 = inttoptr i64 %408 to i64*
  store i64* %409, i64** %327, align 8
  store i64 %393, i64* %406, align 8
  br label %410

410:                                              ; preds = %396, %405
  %411 = phi i64 [ %398, %396 ], [ %393, %405 ]
  %412 = phi i64* [ %397, %396 ], [ %406, %405 ]
  %413 = load i64, i64* %329, align 8
  %414 = trunc i64 %411 to i32
  %415 = trunc i64 %413 to i32
  %416 = icmp eq i32 %414, %415
  br i1 %416, label %418, label %417

417:                                              ; preds = %410
  call void @_ZN2v88internal16SourceTextModule20CreateIndirectExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEENS4_INS0_25SourceTextModuleInfoEntryEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %412, i64* %387)
  br label %418

418:                                              ; preds = %410, %417
  %419 = add nuw nsw i64 %358, 1
  %420 = icmp ult i64 %419, %330
  br i1 %420, label %421, label %423

421:                                              ; preds = %418
  %422 = load i64, i64* %320, align 8
  br label %356

423:                                              ; preds = %272, %418, %318, %189, %183
  %424 = phi i1 [ false, %183 ], [ false, %189 ], [ true, %318 ], [ true, %418 ], [ false, %272 ]
  ret i1 %424
}

declare i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal6Module18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"*, i64*, %"class.v8::Context"*, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*)*, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::Module"*)*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal20SourceTextModuleInfo18RegularExportCountEv(%"class.v8::internal::SourceTextModuleInfo"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal20SourceTextModuleInfo22RegularExportCellIndexEi(%"class.v8::internal::SourceTextModuleInfo"*, i32) local_unnamed_addr #4

declare i64 @_ZNK2v88internal20SourceTextModuleInfo24RegularExportExportNamesEi(%"class.v8::internal::SourceTextModuleInfo"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16SourceTextModule21RunInitializationCodeEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 27
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %9) #11
  %15 = load i64, i64* %14, align 8
  br label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %9, i64* %25, align 8
  br label %29

29:                                               ; preds = %13, %24
  %30 = phi i64 [ %15, %13 ], [ %9, %24 ]
  %31 = phi i64* [ %14, %13 ], [ %25, %24 ]
  %32 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %34 = add i64 %30, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i64 %30, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 acquire, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %37, %43
  %45 = and i64 %43, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %29
  %48 = add i64 %44, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %37, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 178
  br i1 %56, label %78, label %57

57:                                               ; preds = %47, %29
  %58 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %59 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %58, i64 0, i32 0, i32 1
  %62 = load i8, i8* %61, align 8, !range !3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %58, i64 0, i32 1, i64 0
  br label %74

66:                                               ; preds = %60, %57
  %67 = and i64 %39, -262144
  %68 = or i64 %67, 16
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 16
  %71 = add i64 %70, -41416
  %72 = inttoptr i64 %71 to %"class.v8::internal::Isolate"*
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %72, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %74

74:                                               ; preds = %66, %64
  %75 = phi i64* [ %73, %66 ], [ %65, %64 ]
  %76 = getelementptr inbounds i64, i64* %75, i64 28
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %47, %74
  %79 = phi i64 [ %77, %74 ], [ %44, %47 ]
  %80 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %81 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %80, i64 %79) #11
  br label %97

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %88 = load i64*, i64** %87, align 8
  %89 = icmp eq i64* %86, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i64* [ %91, %90 ], [ %86, %84 ]
  %94 = ptrtoint i64* %93 to i64
  %95 = add i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  store i64* %96, i64** %85, align 8
  store i64 %79, i64* %93, align 8
  br label %97

97:                                               ; preds = %82, %92
  %98 = phi i64* [ %83, %82 ], [ %93, %92 ]
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, -4294967296
  %102 = add i64 %100, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %101, %105
  %107 = add i64 %106, 19
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %101, %110
  %112 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %113 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %97
  %115 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %112, i64 %111) #11
  br label %129

116:                                              ; preds = %97
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %118, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i64* [ %123, %122 ], [ %118, %116 ]
  %126 = ptrtoint i64* %125 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  store i64* %128, i64** %117, align 8
  store i64 %111, i64* %125, align 8
  br label %129

129:                                              ; preds = %114, %124
  %130 = phi i64* [ %115, %114 ], [ %125, %124 ]
  %131 = tail call i64* @_ZN2v88internal7Factory16NewModuleContextENS0_6HandleINS0_16SourceTextModuleEEENS2_INS0_13NativeContextEEENS2_INS0_9ScopeInfoEEE(%"class.v8::internal::Factory"* %32, i64* %1, i64* %130, i64* %98) #11
  %132 = load i64, i64* %31, align 8
  %133 = load i64, i64* %131, align 8
  %134 = add i64 %132, 15
  %135 = inttoptr i64 %134 to i32*
  %136 = trunc i64 %133 to i32
  store atomic volatile i32 %136, i32* %135 monotonic, align 4
  %137 = and i64 %133, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %129
  %140 = and i64 %132, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 262144
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %139
  %147 = or i64 %140, 16
  %148 = inttoptr i64 %147 to %"class.v8::internal::Heap"**
  %149 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %148, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %149, i64 %132, i64 %134, i64 %133) #11
  br label %150

150:                                              ; preds = %146, %139, %129
  %151 = and i64 %133, -262144
  %152 = or i64 %151, 8
  %153 = inttoptr i64 %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, 24
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %150
  %158 = and i64 %132, -262144
  %159 = or i64 %158, 8
  %160 = inttoptr i64 %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = and i64 %161, 24
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %157
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %132, i64 %134, i64 %133) #11
  br label %165

165:                                              ; preds = %150, %157, %164
  %166 = tail call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* %31, i64* %33, i32 0, %"class.v8::internal::Handle.1139"* null) #11
  %167 = icmp eq i64* %166, null
  br i1 %167, label %202, label %168

168:                                              ; preds = %165
  %169 = load i64, i64* %1, align 8
  %170 = load i64, i64* %166, align 8
  %171 = add i64 %169, 27
  %172 = inttoptr i64 %171 to i32*
  %173 = trunc i64 %170 to i32
  store atomic volatile i32 %173, i32* %172 monotonic, align 4
  %174 = and i64 %170, 1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %187, label %176

176:                                              ; preds = %168
  %177 = and i64 %169, -262144
  %178 = or i64 %177, 8
  %179 = inttoptr i64 %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = and i64 %180, 262144
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %176
  %184 = or i64 %177, 16
  %185 = inttoptr i64 %184 to %"class.v8::internal::Heap"**
  %186 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %185, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %186, i64 %169, i64 %171, i64 %170) #11
  br label %187

187:                                              ; preds = %183, %176, %168
  %188 = and i64 %170, -262144
  %189 = or i64 %188, 8
  %190 = inttoptr i64 %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 24
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %187
  %195 = and i64 %169, -262144
  %196 = or i64 %195, 8
  %197 = inttoptr i64 %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = and i64 %198, 24
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %194
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %169, i64 %171, i64 %170) #11
  br label %202

202:                                              ; preds = %201, %194, %187, %165
  %203 = phi i1 [ false, %165 ], [ true, %187 ], [ true, %194 ], [ true, %201 ]
  ret i1 %203
}

declare i64* @_ZN2v88internal7Factory16NewModuleContextENS0_6HandleINS0_16SourceTextModuleEEENS2_INS0_13NativeContextEEENS2_INS0_9ScopeInfoEEE(%"class.v8::internal::Factory"*, i64*, i64*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1139"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16SourceTextModule24MaybeTransitionComponentEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EENS0_6Module6StatusE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ZoneForwardList"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 59
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = add i64 %6, 55
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = xor i32 %12, %9
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %85

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::ZoneForwardList"* %2 to i64*
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %5 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = icmp eq i32 %3, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = icmp eq i32 %3, 5
  br label %38

24:                                               ; preds = %15, %31
  %25 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %16, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::__1::__forward_list_node"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %17, align 8
  %30 = call zeroext i1 @_ZN2v88internal16SourceTextModule21RunInitializationCodeEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %27)
  br i1 %30, label %31, label %85

31:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %32 = load i64, i64* %27, align 8
  store i64 %32, i64* %19, align 8
  call void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"* nonnull %20, i32 3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %33 = load i64, i64* %27, align 8
  %34 = load i64, i64* %1, align 8
  %35 = trunc i64 %33 to i32
  %36 = trunc i64 %34 to i32
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %85, label %24

38:                                               ; preds = %22, %78
  %39 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %16, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %39, i64 0, i32 1, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = bitcast %"struct.std::__1::__forward_list_node"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %17, align 8
  br i1 %23, label %44, label %78

44:                                               ; preds = %38
  %45 = load i64, i64* %41, align 8
  %46 = load i64, i64* %1, align 8
  %47 = add i64 %45, 47
  %48 = inttoptr i64 %47 to i32*
  %49 = trunc i64 %46 to i32
  store atomic volatile i32 %49, i32* %48 monotonic, align 4
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %44
  %53 = and i64 %45, -262144
  %54 = or i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 262144
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = or i64 %53, 16
  %61 = inttoptr i64 %60 to %"class.v8::internal::Heap"**
  %62 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %61, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %62, i64 %45, i64 %47, i64 %46) #11
  br label %63

63:                                               ; preds = %59, %52, %44
  %64 = and i64 %46, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %63
  %71 = and i64 %45, -262144
  %72 = or i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 24
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %70
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %45, i64 %47, i64 %46) #11
  br label %78

78:                                               ; preds = %38, %77, %70, %63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %79 = load i64, i64* %41, align 8
  store i64 %79, i64* %19, align 8
  call void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"* nonnull %20, i32 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %80 = load i64, i64* %41, align 8
  %81 = load i64, i64* %1, align 8
  %82 = trunc i64 %80 to i32
  %83 = trunc i64 %81 to i32
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %85, label %38

85:                                               ; preds = %78, %31, %24, %4
  %86 = phi i1 [ true, %4 ], [ true, %31 ], [ false, %24 ], [ true, %78 ]
  ret i1 %86
}

declare void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16SourceTextModule17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ZoneForwardList"*, i32*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Factory::JSFunctionBuilder", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::MessageLocation", align 8
  %12 = alloca %"class.v8::internal::Module::ResolveSet", align 8
  %13 = alloca %"class.v8::internal::MessageLocation", align 8
  %14 = alloca %"class.v8::internal::Module::ResolveSet", align 8
  %15 = ptrtoint i64* %1 to i64
  %16 = load i64, i64* %1, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 27
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %5
  %27 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %22) #11
  br label %41

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %22, i64* %37, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i64* [ %27, %26 ], [ %37, %36 ]
  %43 = bitcast %"class.v8::internal::Factory::JSFunctionBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 19
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %46, %55
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %41
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %56) #11
  br label %74

61:                                               ; preds = %41
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %56, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  call void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64* %42, i64* %75) #11
  %76 = call i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #11
  %77 = load i64, i64* %1, align 8
  %78 = load i64, i64* %76, align 8
  %79 = add i64 %77, 27
  %80 = inttoptr i64 %79 to i32*
  %81 = trunc i64 %78 to i32
  store atomic volatile i32 %81, i32* %80 monotonic, align 4
  %82 = and i64 %78, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %74
  %85 = and i64 %77, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 262144
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %84
  %92 = or i64 %85, 16
  %93 = inttoptr i64 %92 to %"class.v8::internal::Heap"**
  %94 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %93, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %94, i64 %77, i64 %79, i64 %78) #11
  br label %95

95:                                               ; preds = %91, %84, %74
  %96 = and i64 %78, -262144
  %97 = or i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %95
  %103 = and i64 %77, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %77, i64 %79, i64 %78) #11
  br label %110

110:                                              ; preds = %95, %102, %109
  %111 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11
  %112 = load i64, i64* %1, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"* nonnull %114, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11
  %115 = load i64, i64* %1, align 8
  %116 = load i32, i32* %3, align 4
  %117 = shl i32 %116, 1
  %118 = add i64 %115, 55
  %119 = inttoptr i64 %118 to i32*
  store atomic volatile i32 %117, i32* %119 monotonic, align 4
  %120 = load i64, i64* %1, align 8
  %121 = load i32, i32* %3, align 4
  %122 = shl i32 %121, 1
  %123 = add i64 %120, 59
  %124 = inttoptr i64 %123 to i32*
  store atomic volatile i32 %122, i32* %124 monotonic, align 4
  %125 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %126 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %126, i64 0, i32 2
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %126, i64 0, i32 3
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %130, %128
  %132 = icmp ult i64 %131, 16
  br i1 %132, label %133, label %135, !prof !2

133:                                              ; preds = %110
  %134 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %126, i64 16) #11
  br label %137

135:                                              ; preds = %110
  %136 = add i64 %128, 16
  store i64 %136, i64* %127, align 8
  br label %137

137:                                              ; preds = %133, %135
  %138 = phi i64 [ %134, %133 ], [ %128, %135 ]
  %139 = inttoptr i64 %138 to %"struct.std::__1::__forward_list_node"*
  %140 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %139, i64 0, i32 1
  %141 = bitcast %"class.v8::internal::Handle.1135"* %140 to i64*
  store i64 %15, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::ZoneForwardList"* %2 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = inttoptr i64 %138 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__forward_list_node"* %139, %"struct.std::__1::__forward_list_node"** %145, align 8
  %146 = load i32, i32* %3, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %3, align 4
  %148 = load i64, i64* %1, align 8
  %149 = and i64 %148, -4294967296
  %150 = add i64 %148, 39
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %149, %153
  %155 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %156 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %137
  %158 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %155, i64 %154) #11
  %159 = load i64, i64* %158, align 8
  br label %173

160:                                              ; preds = %137
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %162, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %168

168:                                              ; preds = %166, %160
  %169 = phi i64* [ %167, %166 ], [ %162, %160 ]
  %170 = ptrtoint i64* %169 to i64
  %171 = add i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  store i64* %172, i64** %161, align 8
  store i64 %154, i64* %169, align 8
  br label %173

173:                                              ; preds = %157, %168
  %174 = phi i64 [ %159, %157 ], [ %154, %168 ]
  %175 = phi i64* [ %158, %157 ], [ %169, %168 ]
  %176 = add i64 %174, 3
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %180, label %241

180:                                              ; preds = %173
  %181 = lshr i32 %178, 1
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %184 = zext i32 %181 to i64
  br label %185

185:                                              ; preds = %239, %180
  %186 = phi i64 [ %174, %180 ], [ %240, %239 ]
  %187 = phi i64 [ 0, %180 ], [ %237, %239 ]
  %188 = and i64 %186, -4294967296
  %189 = trunc i64 %187 to i32
  %190 = shl i32 %189, 2
  %191 = sext i32 %190 to i64
  %192 = add nsw i64 %191, 7
  %193 = add i64 %192, %186
  %194 = inttoptr i64 %193 to i32*
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %188, %196
  %198 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %199 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %198, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %185
  %201 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %198, i64 %197) #11
  br label %213

202:                                              ; preds = %185
  %203 = load i64*, i64** %182, align 8
  %204 = load i64*, i64** %183, align 8
  %205 = icmp eq i64* %203, %204
  br i1 %205, label %206, label %208

206:                                              ; preds = %202
  %207 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %208

208:                                              ; preds = %206, %202
  %209 = phi i64* [ %207, %206 ], [ %203, %202 ]
  %210 = ptrtoint i64* %209 to i64
  %211 = add i64 %210, 8
  %212 = inttoptr i64 %211 to i64*
  store i64* %212, i64** %182, align 8
  store i64 %197, i64* %209, align 8
  br label %213

213:                                              ; preds = %200, %208
  %214 = phi i64* [ %201, %200 ], [ %209, %208 ]
  %215 = call zeroext i1 @_ZN2v88internal6Module17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListINS4_INS0_16SourceTextModuleEEEEEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"* %0, i64* %214, %"class.v8::internal::ZoneForwardList"* %2, i32* %3, %"class.v8::internal::Zone"* %4) #11
  br i1 %215, label %216, label %803

216:                                              ; preds = %213
  %217 = load i64, i64* %214, align 8
  %218 = add i64 %217, 11
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, -2
  %222 = icmp eq i32 %221, 4
  br i1 %222, label %223, label %236

223:                                              ; preds = %216
  %224 = load i64, i64* %1, align 8
  %225 = add i64 %224, 59
  %226 = inttoptr i64 %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = ashr i32 %227, 1
  %229 = add i64 %217, 59
  %230 = inttoptr i64 %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = ashr i32 %231, 1
  %233 = icmp slt i32 %232, %228
  %234 = select i1 %233, i32 %232, i32 %228
  %235 = shl nsw i32 %234, 1
  store atomic volatile i32 %235, i32* %226 monotonic, align 4
  br label %236

236:                                              ; preds = %223, %216
  %237 = add nuw nsw i64 %187, 1
  %238 = icmp ult i64 %237, %184
  br i1 %238, label %239, label %241

239:                                              ; preds = %236
  %240 = load i64, i64* %175, align 8
  br label %185

241:                                              ; preds = %236, %173
  %242 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #11
  %243 = load i64, i64* %1, align 8
  %244 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %9, i64 0, i32 0
  %246 = call i64 @_ZNK2v88internal16SourceTextModule9GetScriptEv(%"class.v8::internal::SourceTextModule"* nonnull %245)
  %247 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %248 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %241
  %250 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %247, i64 %246) #11
  br label %264

251:                                              ; preds = %241
  %252 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %253 = load i64*, i64** %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %255 = load i64*, i64** %254, align 8
  %256 = icmp eq i64* %253, %255
  br i1 %256, label %257, label %259

257:                                              ; preds = %251
  %258 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %259

259:                                              ; preds = %257, %251
  %260 = phi i64* [ %258, %257 ], [ %253, %251 ]
  %261 = ptrtoint i64* %260 to i64
  %262 = add i64 %261, 8
  %263 = inttoptr i64 %262 to i64*
  store i64* %263, i64** %252, align 8
  store i64 %246, i64* %260, align 8
  br label %264

264:                                              ; preds = %249, %259
  %265 = phi i64* [ %250, %249 ], [ %260, %259 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #11
  %266 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #11
  %267 = load i64, i64* %1, align 8
  %268 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %10, i64 0, i32 0
  %270 = call i64 @_ZNK2v88internal16SourceTextModule4infoEv(%"class.v8::internal::SourceTextModule"* nonnull %269)
  %271 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %272 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %264
  %274 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %271, i64 %270) #11
  br label %288

275:                                              ; preds = %264
  %276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %277 = load i64*, i64** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %279 = load i64*, i64** %278, align 8
  %280 = icmp eq i64* %277, %279
  br i1 %280, label %281, label %283

281:                                              ; preds = %275
  %282 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %283

283:                                              ; preds = %281, %275
  %284 = phi i64* [ %282, %281 ], [ %277, %275 ]
  %285 = ptrtoint i64* %284 to i64
  %286 = add i64 %285, 8
  %287 = inttoptr i64 %286 to i64*
  store i64* %287, i64** %276, align 8
  store i64 %270, i64* %284, align 8
  br label %288

288:                                              ; preds = %273, %283
  %289 = phi i64* [ %274, %273 ], [ %284, %283 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #11
  %290 = load i64, i64* %289, align 8
  %291 = and i64 %290, -4294967296
  %292 = add i64 %290, 23
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = zext i32 %294 to i64
  %296 = or i64 %291, %295
  %297 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %298 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %297, null
  br i1 %298, label %302, label %299

299:                                              ; preds = %288
  %300 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %297, i64 %296) #11
  %301 = load i64, i64* %300, align 8
  br label %315

302:                                              ; preds = %288
  %303 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %304 = load i64*, i64** %303, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %306 = load i64*, i64** %305, align 8
  %307 = icmp eq i64* %304, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %302
  %309 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %310

310:                                              ; preds = %308, %302
  %311 = phi i64* [ %309, %308 ], [ %304, %302 ]
  %312 = ptrtoint i64* %311 to i64
  %313 = add i64 %312, 8
  %314 = inttoptr i64 %313 to i64*
  store i64* %314, i64** %303, align 8
  store i64 %296, i64* %311, align 8
  br label %315

315:                                              ; preds = %299, %310
  %316 = phi i64 [ %301, %299 ], [ %296, %310 ]
  %317 = phi i64* [ %300, %299 ], [ %311, %310 ]
  %318 = add i64 %316, 3
  %319 = inttoptr i64 %318 to i32*
  %320 = load i32, i32* %319, align 4
  %321 = icmp sgt i32 %320, 1
  br i1 %321, label %322, label %555

322:                                              ; preds = %315
  %323 = lshr i32 %320, 1
  %324 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %325 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %326 = bitcast %"class.v8::internal::MessageLocation"* %11 to i8*
  %327 = bitcast %"class.v8::internal::Module::ResolveSet"* %12 to i8*
  %328 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %329 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %330 = bitcast %"struct.std::__1::__compressed_pair_elem.1152"* %329 to i64*
  %331 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 1
  %333 = bitcast %"struct.std::__1::__compressed_pair_elem.1155"* %332 to i64*
  %334 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %335 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 3
  %336 = bitcast %"class.std::__1::__compressed_pair.1160"* %335 to i32*
  %337 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %339 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %339, i64 0, i32 0
  %341 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %12, i64 0, i32 1
  %342 = zext i32 %323 to i64
  %343 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %344 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  br label %349

345:                                              ; preds = %552
  %346 = icmp ult i64 %554, %342
  br i1 %346, label %347, label %555

347:                                              ; preds = %345
  %348 = load i64, i64* %317, align 8
  br label %349

349:                                              ; preds = %347, %322
  %350 = phi i64 [ %316, %322 ], [ %348, %347 ]
  %351 = phi i64 [ 0, %322 ], [ %554, %347 ]
  %352 = and i64 %350, -4294967296
  %353 = trunc i64 %351 to i32
  %354 = shl i32 %353, 2
  %355 = sext i32 %354 to i64
  %356 = add nsw i64 %355, 7
  %357 = add i64 %356, %350
  %358 = inttoptr i64 %357 to i32*
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = zext i32 %359 to i64
  %361 = or i64 %352, %360
  %362 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %363 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %362, null
  br i1 %363, label %367, label %364

364:                                              ; preds = %349
  %365 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %362, i64 %361) #11
  %366 = load i64, i64* %365, align 8
  br label %378

367:                                              ; preds = %349
  %368 = load i64*, i64** %324, align 8
  %369 = load i64*, i64** %325, align 8
  %370 = icmp eq i64* %368, %369
  br i1 %370, label %371, label %373

371:                                              ; preds = %367
  %372 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %373

373:                                              ; preds = %371, %367
  %374 = phi i64* [ %372, %371 ], [ %368, %367 ]
  %375 = ptrtoint i64* %374 to i64
  %376 = add i64 %375, 8
  %377 = inttoptr i64 %376 to i64*
  store i64* %377, i64** %324, align 8
  store i64 %361, i64* %374, align 8
  br label %378

378:                                              ; preds = %364, %373
  %379 = phi i64 [ %366, %364 ], [ %361, %373 ]
  %380 = phi i64* [ %365, %364 ], [ %374, %373 ]
  %381 = and i64 %379, -4294967296
  %382 = add i64 %379, 11
  %383 = inttoptr i64 %382 to i32*
  %384 = load i32, i32* %383, align 4
  %385 = zext i32 %384 to i64
  %386 = or i64 %381, %385
  %387 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %388 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %387, null
  br i1 %388, label %391, label %389

389:                                              ; preds = %378
  %390 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %387, i64 %386) #11
  br label %402

391:                                              ; preds = %378
  %392 = load i64*, i64** %324, align 8
  %393 = load i64*, i64** %325, align 8
  %394 = icmp eq i64* %392, %393
  br i1 %394, label %395, label %397

395:                                              ; preds = %391
  %396 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %397

397:                                              ; preds = %395, %391
  %398 = phi i64* [ %396, %395 ], [ %392, %391 ]
  %399 = ptrtoint i64* %398 to i64
  %400 = add i64 %399, 8
  %401 = inttoptr i64 %400 to i64*
  store i64* %401, i64** %324, align 8
  store i64 %386, i64* %398, align 8
  br label %402

402:                                              ; preds = %389, %397
  %403 = phi i64* [ %390, %389 ], [ %398, %397 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %326) #11
  %404 = load i64, i64* %380, align 8
  %405 = add i64 %404, 23
  %406 = inttoptr i64 %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = ashr i32 %407, 1
  %409 = add i64 %404, 27
  %410 = inttoptr i64 %409 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = ashr i32 %411, 1
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %11, i64* %265, i32 %408, i32 %412) #11
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %327) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %327, i8 0, i64 16, i1 false) #11
  store i64 %328, i64* %330, align 8
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %331, align 8
  store i64 %328, i64* %333, align 8
  store i64 0, i64* %334, align 8
  store i32 1065353216, i32* %336, align 8
  %413 = load i64, i64* %343, align 8
  %414 = load i64, i64* %344, align 8
  %415 = sub i64 %414, %413
  %416 = icmp ult i64 %415, 16
  br i1 %416, label %417, label %419, !prof !2

417:                                              ; preds = %402
  %418 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 16) #11
  br label %421

419:                                              ; preds = %402
  %420 = add i64 %413, 16
  store i64 %420, i64* %343, align 8
  br label %421

421:                                              ; preds = %419, %417
  %422 = phi i64 [ %418, %417 ], [ %413, %419 ]
  %423 = inttoptr i64 %422 to %"struct.std::__1::__hash_node_base.1148"**
  store %"struct.std::__1::__hash_node_base.1148"** %423, %"struct.std::__1::__hash_node_base.1148"*** %337, align 8
  store i64 2, i64* %338, align 8
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %423, align 8
  %424 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %337, align 8
  %425 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %424, i64 1
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %425, align 8
  %426 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %340, align 8
  %427 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %426, null
  br i1 %427, label %489, label %428

428:                                              ; preds = %421
  %429 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %426, i64 1
  %430 = bitcast %"struct.std::__1::__hash_node_base.1148"* %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = and i64 %431, 1
  %433 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %424, i64 %432
  store %"struct.std::__1::__hash_node_base.1148"* %339, %"struct.std::__1::__hash_node_base.1148"** %433, align 8
  %434 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %426, i64 0, i32 0
  %435 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %434, align 8
  %436 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %435, null
  br i1 %436, label %489, label %437

437:                                              ; preds = %428, %483
  %438 = phi %"struct.std::__1::__hash_node_base.1148"* [ %487, %483 ], [ %435, %428 ]
  %439 = phi i64 [ %485, %483 ], [ %432, %428 ]
  %440 = phi %"struct.std::__1::__hash_node_base.1148"* [ %484, %483 ], [ %426, %428 ]
  %441 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %438, i64 1
  %442 = bitcast %"struct.std::__1::__hash_node_base.1148"* %441 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = and i64 %443, 1
  %445 = icmp eq i64 %444, %439
  br i1 %445, label %483, label %446

446:                                              ; preds = %437
  %447 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %337, align 8
  %448 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %447, i64 %444
  %449 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %448, align 8
  %450 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %449, null
  br i1 %450, label %454, label %451

451:                                              ; preds = %446
  %452 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %438, i64 2
  %453 = bitcast %"struct.std::__1::__hash_node_base.1148"* %452 to i64**
  br label %455

454:                                              ; preds = %446
  store %"struct.std::__1::__hash_node_base.1148"* %440, %"struct.std::__1::__hash_node_base.1148"** %448, align 8
  br label %483

455:                                              ; preds = %460, %451
  %456 = phi %"struct.std::__1::__hash_node_base.1148"* [ %458, %460 ], [ %438, %451 ]
  %457 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %456, i64 0, i32 0
  %458 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %457, align 8
  %459 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %458, null
  br i1 %459, label %470, label %460

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %458, i64 2
  %462 = load i64*, i64** %453, align 8
  %463 = bitcast %"struct.std::__1::__hash_node_base.1148"* %461 to i64**
  %464 = load i64*, i64** %463, align 8
  %465 = load i64, i64* %462, align 8
  %466 = load i64, i64* %464, align 8
  %467 = trunc i64 %465 to i32
  %468 = trunc i64 %466 to i32
  %469 = icmp eq i32 %467, %468
  br i1 %469, label %455, label %470

470:                                              ; preds = %460, %455
  %471 = ptrtoint %"struct.std::__1::__hash_node_base.1148"* %458 to i64
  %472 = bitcast %"struct.std::__1::__hash_node_base.1148"* %456 to i64*
  %473 = bitcast %"struct.std::__1::__hash_node_base.1148"* %440 to i64*
  store i64 %471, i64* %473, align 8
  %474 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %337, align 8
  %475 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %474, i64 %444
  %476 = bitcast %"struct.std::__1::__hash_node_base.1148"** %475 to i64**
  %477 = load i64*, i64** %476, align 8
  %478 = load i64, i64* %477, align 8
  store i64 %478, i64* %472, align 8
  %479 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %337, align 8
  %480 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %479, i64 %444
  %481 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %480, align 8
  %482 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %481, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* %438, %"struct.std::__1::__hash_node_base.1148"** %482, align 8
  br label %483

483:                                              ; preds = %470, %454, %437
  %484 = phi %"struct.std::__1::__hash_node_base.1148"* [ %438, %454 ], [ %440, %470 ], [ %438, %437 ]
  %485 = phi i64 [ %444, %454 ], [ %439, %470 ], [ %439, %437 ]
  %486 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %484, i64 0, i32 0
  %487 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %486, align 8
  %488 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %487, null
  br i1 %488, label %489, label %437

489:                                              ; preds = %483, %421, %428
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %341, align 8
  %490 = load i64, i64* %380, align 8
  %491 = add i64 %490, 15
  %492 = inttoptr i64 %491 to i32*
  %493 = load i32, i32* %492, align 4
  %494 = ashr i32 %493, 1
  %495 = call i64* @_ZN2v88internal16SourceTextModule13ResolveImportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEEiNS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %403, i32 %494, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %11, i1 zeroext true, %"class.v8::internal::Module::ResolveSet"* nonnull %12)
  %496 = icmp eq i64* %495, null
  br i1 %496, label %543, label %497

497:                                              ; preds = %489
  %498 = load i64, i64* %1, align 8
  %499 = and i64 %498, -4294967296
  %500 = add i64 %498, 35
  %501 = inttoptr i64 %500 to i32*
  %502 = load i32, i32* %501, align 4
  %503 = zext i32 %502 to i64
  %504 = or i64 %499, %503
  %505 = load i64, i64* %380, align 8
  %506 = add i64 %505, 19
  %507 = inttoptr i64 %506 to i32*
  %508 = load i32, i32* %507, align 4
  %509 = lshr i32 %508, 1
  %510 = load i64, i64* %495, align 8
  %511 = shl i32 %509, 2
  %512 = xor i32 %511, -4
  %513 = sext i32 %512 to i64
  %514 = add i64 %504, 7
  %515 = add i64 %514, %513
  %516 = inttoptr i64 %515 to i32*
  %517 = trunc i64 %510 to i32
  store atomic volatile i32 %517, i32* %516 monotonic, align 4
  %518 = and i64 %510, 1
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %543, label %520

520:                                              ; preds = %497
  %521 = and i64 %504, -262144
  %522 = or i64 %521, 8
  %523 = inttoptr i64 %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = and i64 %524, 262144
  %526 = icmp eq i64 %525, 0
  br i1 %526, label %531, label %527

527:                                              ; preds = %520
  %528 = or i64 %521, 16
  %529 = inttoptr i64 %528 to %"class.v8::internal::Heap"**
  %530 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %529, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %530, i64 %504, i64 %515, i64 %510) #11
  br label %531

531:                                              ; preds = %527, %520
  %532 = and i64 %510, -262144
  %533 = or i64 %532, 8
  %534 = inttoptr i64 %533 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = and i64 %535, 24
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %543, label %538

538:                                              ; preds = %531
  %539 = load i64, i64* %523, align 8
  %540 = and i64 %539, 24
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %538
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %504, i64 %515, i64 %510) #11
  br label %543

543:                                              ; preds = %542, %538, %531, %497, %489
  %544 = phi i32 [ 1, %489 ], [ 0, %497 ], [ 0, %531 ], [ 0, %538 ], [ 0, %542 ]
  %545 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %331, align 8
  %546 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %545, null
  br i1 %546, label %552, label %547

547:                                              ; preds = %543, %547
  %548 = phi %"struct.std::__1::__hash_node_base.1148"* [ %550, %547 ], [ %545, %543 ]
  %549 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %548, i64 0, i32 0
  %550 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %549, align 8
  %551 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %550, null
  br i1 %551, label %552, label %547

552:                                              ; preds = %547, %543
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %327) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %326) #11
  %553 = icmp eq i32 %544, 0
  %554 = add nuw nsw i64 %351, 1
  br i1 %553, label %345, label %803

555:                                              ; preds = %345, %315
  %556 = load i64, i64* %289, align 8
  %557 = and i64 %556, -4294967296
  %558 = add i64 %556, 11
  %559 = inttoptr i64 %558 to i32*
  %560 = load atomic i32, i32* %559 monotonic, align 4
  %561 = zext i32 %560 to i64
  %562 = or i64 %557, %561
  %563 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %564 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %563, null
  br i1 %564, label %568, label %565

565:                                              ; preds = %555
  %566 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %563, i64 %562) #11
  %567 = load i64, i64* %566, align 8
  br label %581

568:                                              ; preds = %555
  %569 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %570 = load i64*, i64** %569, align 8
  %571 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %572 = load i64*, i64** %571, align 8
  %573 = icmp eq i64* %570, %572
  br i1 %573, label %574, label %576

574:                                              ; preds = %568
  %575 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %576

576:                                              ; preds = %574, %568
  %577 = phi i64* [ %575, %574 ], [ %570, %568 ]
  %578 = ptrtoint i64* %577 to i64
  %579 = add i64 %578, 8
  %580 = inttoptr i64 %579 to i64*
  store i64* %580, i64** %569, align 8
  store i64 %562, i64* %577, align 8
  br label %581

581:                                              ; preds = %565, %576
  %582 = phi i64 [ %567, %565 ], [ %562, %576 ]
  %583 = phi i64* [ %566, %565 ], [ %577, %576 ]
  %584 = add i64 %582, 3
  %585 = inttoptr i64 %584 to i32*
  %586 = load i32, i32* %585, align 4
  %587 = icmp sgt i32 %586, 1
  br i1 %587, label %588, label %775

588:                                              ; preds = %581
  %589 = lshr i32 %586, 1
  %590 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %591 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %592 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %593 = bitcast %"class.v8::internal::MessageLocation"* %13 to i8*
  %594 = bitcast %"class.v8::internal::Module::ResolveSet"* %14 to i8*
  %595 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %596 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %597 = bitcast %"struct.std::__1::__compressed_pair_elem.1152"* %596 to i64*
  %598 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %599 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 1, i32 1
  %600 = bitcast %"struct.std::__1::__compressed_pair_elem.1155"* %599 to i64*
  %601 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %602 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 3
  %603 = bitcast %"class.std::__1::__compressed_pair.1160"* %602 to i32*
  %604 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %606 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %607 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %606, i64 0, i32 0
  %608 = getelementptr inbounds %"class.v8::internal::Module::ResolveSet", %"class.v8::internal::Module::ResolveSet"* %14, i64 0, i32 1
  %609 = zext i32 %589 to i64
  %610 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %611 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  br label %612

612:                                              ; preds = %773, %588
  %613 = phi i64 [ %582, %588 ], [ %774, %773 ]
  %614 = phi i64 [ 0, %588 ], [ %771, %773 ]
  %615 = and i64 %613, -4294967296
  %616 = trunc i64 %614 to i32
  %617 = shl i32 %616, 2
  %618 = sext i32 %617 to i64
  %619 = add nsw i64 %618, 7
  %620 = add i64 %619, %613
  %621 = inttoptr i64 %620 to i32*
  %622 = load atomic i32, i32* %621 monotonic, align 4
  %623 = zext i32 %622 to i64
  %624 = or i64 %615, %623
  %625 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %626 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %625, null
  br i1 %626, label %630, label %627

627:                                              ; preds = %612
  %628 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %625, i64 %624) #11
  %629 = load i64, i64* %628, align 8
  br label %641

630:                                              ; preds = %612
  %631 = load i64*, i64** %590, align 8
  %632 = load i64*, i64** %591, align 8
  %633 = icmp eq i64* %631, %632
  br i1 %633, label %634, label %636

634:                                              ; preds = %630
  %635 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %636

636:                                              ; preds = %634, %630
  %637 = phi i64* [ %635, %634 ], [ %631, %630 ]
  %638 = ptrtoint i64* %637 to i64
  %639 = add i64 %638, 8
  %640 = inttoptr i64 %639 to i64*
  store i64* %640, i64** %590, align 8
  store i64 %624, i64* %637, align 8
  br label %641

641:                                              ; preds = %627, %636
  %642 = phi i64 [ %629, %627 ], [ %624, %636 ]
  %643 = phi i64* [ %628, %627 ], [ %637, %636 ]
  %644 = and i64 %642, -4294967296
  %645 = add i64 %642, 3
  %646 = inttoptr i64 %645 to i32*
  %647 = load i32, i32* %646, align 4
  %648 = zext i32 %647 to i64
  %649 = or i64 %644, %648
  %650 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %651 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %650, null
  br i1 %651, label %655, label %652

652:                                              ; preds = %641
  %653 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %650, i64 %649) #11
  %654 = load i64, i64* %653, align 8
  br label %666

655:                                              ; preds = %641
  %656 = load i64*, i64** %590, align 8
  %657 = load i64*, i64** %591, align 8
  %658 = icmp eq i64* %656, %657
  br i1 %658, label %659, label %661

659:                                              ; preds = %655
  %660 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %661

661:                                              ; preds = %659, %655
  %662 = phi i64* [ %660, %659 ], [ %656, %655 ]
  %663 = ptrtoint i64* %662 to i64
  %664 = add i64 %663, 8
  %665 = inttoptr i64 %664 to i64*
  store i64* %665, i64** %590, align 8
  store i64 %649, i64* %662, align 8
  br label %666

666:                                              ; preds = %652, %661
  %667 = phi i64 [ %654, %652 ], [ %649, %661 ]
  %668 = phi i64* [ %653, %652 ], [ %662, %661 ]
  %669 = load i64, i64* %592, align 8
  %670 = trunc i64 %667 to i32
  %671 = trunc i64 %669 to i32
  %672 = icmp eq i32 %670, %671
  br i1 %672, label %770, label %673

673:                                              ; preds = %666
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %593) #11
  %674 = load i64, i64* %643, align 8
  %675 = add i64 %674, 23
  %676 = inttoptr i64 %675 to i32*
  %677 = load i32, i32* %676, align 4
  %678 = ashr i32 %677, 1
  %679 = add i64 %674, 27
  %680 = inttoptr i64 %679 to i32*
  %681 = load i32, i32* %680, align 4
  %682 = ashr i32 %681, 1
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %13, i64* %265, i32 %678, i32 %682) #11
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %594) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %594, i8 0, i64 16, i1 false) #11
  store i64 %595, i64* %597, align 8
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %598, align 8
  store i64 %595, i64* %600, align 8
  store i64 0, i64* %601, align 8
  store i32 1065353216, i32* %603, align 8
  %683 = load i64, i64* %610, align 8
  %684 = load i64, i64* %611, align 8
  %685 = sub i64 %684, %683
  %686 = icmp ult i64 %685, 16
  br i1 %686, label %687, label %689, !prof !2

687:                                              ; preds = %673
  %688 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 16) #11
  br label %691

689:                                              ; preds = %673
  %690 = add i64 %683, 16
  store i64 %690, i64* %610, align 8
  br label %691

691:                                              ; preds = %689, %687
  %692 = phi i64 [ %688, %687 ], [ %683, %689 ]
  %693 = inttoptr i64 %692 to %"struct.std::__1::__hash_node_base.1148"**
  store %"struct.std::__1::__hash_node_base.1148"** %693, %"struct.std::__1::__hash_node_base.1148"*** %604, align 8
  store i64 2, i64* %605, align 8
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %693, align 8
  %694 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %604, align 8
  %695 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %694, i64 1
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %695, align 8
  %696 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %607, align 8
  %697 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %696, null
  br i1 %697, label %759, label %698

698:                                              ; preds = %691
  %699 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %696, i64 1
  %700 = bitcast %"struct.std::__1::__hash_node_base.1148"* %699 to i64*
  %701 = load i64, i64* %700, align 8
  %702 = and i64 %701, 1
  %703 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %694, i64 %702
  store %"struct.std::__1::__hash_node_base.1148"* %606, %"struct.std::__1::__hash_node_base.1148"** %703, align 8
  %704 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %696, i64 0, i32 0
  %705 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %704, align 8
  %706 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %705, null
  br i1 %706, label %759, label %707

707:                                              ; preds = %698, %753
  %708 = phi %"struct.std::__1::__hash_node_base.1148"* [ %757, %753 ], [ %705, %698 ]
  %709 = phi i64 [ %755, %753 ], [ %702, %698 ]
  %710 = phi %"struct.std::__1::__hash_node_base.1148"* [ %754, %753 ], [ %696, %698 ]
  %711 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %708, i64 1
  %712 = bitcast %"struct.std::__1::__hash_node_base.1148"* %711 to i64*
  %713 = load i64, i64* %712, align 8
  %714 = and i64 %713, 1
  %715 = icmp eq i64 %714, %709
  br i1 %715, label %753, label %716

716:                                              ; preds = %707
  %717 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %604, align 8
  %718 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %717, i64 %714
  %719 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %718, align 8
  %720 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %719, null
  br i1 %720, label %724, label %721

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %708, i64 2
  %723 = bitcast %"struct.std::__1::__hash_node_base.1148"* %722 to i64**
  br label %725

724:                                              ; preds = %716
  store %"struct.std::__1::__hash_node_base.1148"* %710, %"struct.std::__1::__hash_node_base.1148"** %718, align 8
  br label %753

725:                                              ; preds = %730, %721
  %726 = phi %"struct.std::__1::__hash_node_base.1148"* [ %728, %730 ], [ %708, %721 ]
  %727 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %726, i64 0, i32 0
  %728 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %727, align 8
  %729 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %728, null
  br i1 %729, label %740, label %730

730:                                              ; preds = %725
  %731 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %728, i64 2
  %732 = load i64*, i64** %723, align 8
  %733 = bitcast %"struct.std::__1::__hash_node_base.1148"* %731 to i64**
  %734 = load i64*, i64** %733, align 8
  %735 = load i64, i64* %732, align 8
  %736 = load i64, i64* %734, align 8
  %737 = trunc i64 %735 to i32
  %738 = trunc i64 %736 to i32
  %739 = icmp eq i32 %737, %738
  br i1 %739, label %725, label %740

740:                                              ; preds = %730, %725
  %741 = ptrtoint %"struct.std::__1::__hash_node_base.1148"* %728 to i64
  %742 = bitcast %"struct.std::__1::__hash_node_base.1148"* %726 to i64*
  %743 = bitcast %"struct.std::__1::__hash_node_base.1148"* %710 to i64*
  store i64 %741, i64* %743, align 8
  %744 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %604, align 8
  %745 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %744, i64 %714
  %746 = bitcast %"struct.std::__1::__hash_node_base.1148"** %745 to i64**
  %747 = load i64*, i64** %746, align 8
  %748 = load i64, i64* %747, align 8
  store i64 %748, i64* %742, align 8
  %749 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %604, align 8
  %750 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %749, i64 %714
  %751 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %750, align 8
  %752 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %751, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* %708, %"struct.std::__1::__hash_node_base.1148"** %752, align 8
  br label %753

753:                                              ; preds = %740, %724, %707
  %754 = phi %"struct.std::__1::__hash_node_base.1148"* [ %708, %724 ], [ %710, %740 ], [ %708, %707 ]
  %755 = phi i64 [ %714, %724 ], [ %709, %740 ], [ %709, %707 ]
  %756 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %754, i64 0, i32 0
  %757 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %756, align 8
  %758 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %757, null
  br i1 %758, label %759, label %707

759:                                              ; preds = %753, %691, %698
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %608, align 8
  %760 = call i64* @_ZN2v88internal16SourceTextModule13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* null, i64* %668, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %13, i1 zeroext true, %"class.v8::internal::Module::ResolveSet"* nonnull %14)
  %761 = icmp eq i64* %760, null
  %762 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %598, align 8
  %763 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %762, null
  br i1 %763, label %769, label %764

764:                                              ; preds = %759, %764
  %765 = phi %"struct.std::__1::__hash_node_base.1148"* [ %767, %764 ], [ %762, %759 ]
  %766 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %765, i64 0, i32 0
  %767 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %766, align 8
  %768 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %767, null
  br i1 %768, label %769, label %764

769:                                              ; preds = %764, %759
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %594) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %593) #11
  br i1 %761, label %803, label %770

770:                                              ; preds = %769, %666
  %771 = add nuw nsw i64 %614, 1
  %772 = icmp ult i64 %771, %609
  br i1 %772, label %773, label %775

773:                                              ; preds = %770
  %774 = load i64, i64* %583, align 8
  br label %612

775:                                              ; preds = %770, %581
  %776 = load i64, i64* %1, align 8
  %777 = add i64 %776, 59
  %778 = inttoptr i64 %777 to i32*
  %779 = load i32, i32* %778, align 4
  %780 = add i64 %776, 55
  %781 = inttoptr i64 %780 to i32*
  %782 = load i32, i32* %781, align 4
  %783 = xor i32 %782, %779
  %784 = icmp ult i32 %783, 2
  br i1 %784, label %785, label %803

785:                                              ; preds = %775
  %786 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %6 to i8*
  %787 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %788 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  br label %789

789:                                              ; preds = %796, %785
  %790 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %145, align 8
  %791 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %790, i64 0, i32 1, i32 0, i32 0
  %792 = load i64*, i64** %791, align 8
  %793 = bitcast %"struct.std::__1::__forward_list_node"* %790 to i64*
  %794 = load i64, i64* %793, align 8
  store i64 %794, i64* %142, align 8
  %795 = call zeroext i1 @_ZN2v88internal16SourceTextModule21RunInitializationCodeEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %792) #11
  br i1 %795, label %796, label %803

796:                                              ; preds = %789
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %786) #11
  %797 = load i64, i64* %792, align 8
  store i64 %797, i64* %787, align 8
  call void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"* nonnull %788, i32 3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %786) #11
  %798 = load i64, i64* %792, align 8
  %799 = load i64, i64* %1, align 8
  %800 = trunc i64 %798 to i32
  %801 = trunc i64 %799 to i32
  %802 = icmp eq i32 %800, %801
  br i1 %802, label %803, label %789

803:                                              ; preds = %213, %552, %769, %796, %789, %775
  %804 = phi i1 [ true, %775 ], [ false, %789 ], [ true, %796 ], [ false, %769 ], [ false, %552 ], [ false, %213 ]
  ret i1 %804
}

declare void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"*, %"class.v8::internal::Isolate"*, i64*, i64*) unnamed_addr #4

declare i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal6Module17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListINS4_INS0_16SourceTextModuleEEEEEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ZoneForwardList"*, i32*, %"class.v8::internal::Zone"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule16FetchStarExportsEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_4ZoneEPNS0_18UnorderedModuleSetE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::Zone"*, %"class.v8::internal::UnorderedModuleSet"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle.1168", align 8
  %6 = alloca %"class.v8::internal::UnorderedStringMap", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %11 = alloca %"struct.std::__1::pair.1254", align 8
  %12 = load i64, i64* %1, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, 15
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %13, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 191
  br i1 %27, label %452, label %28

28:                                               ; preds = %4
  %29 = bitcast %"class.v8::internal::Handle.1168"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1168", %"class.v8::internal::Handle.1168"* %5, i64 0, i32 0, i32 0
  store i64* %1, i64** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %3, i64 0, i32 0, i32 0
  %32 = call { %"struct.std::__1::__hash_node_base.1210"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1206"* %31, %"class.v8::internal::Handle.1168"* nonnull dereferenceable(8) %5, %"class.v8::internal::Handle.1168"* nonnull dereferenceable(8) %5) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.1210"*, i8 } %32, 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br i1 %35, label %452, label %36

36:                                               ; preds = %28
  %37 = load i64, i64* %1, align 8
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %45 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %46 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %36
  %48 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %45, i64 %43) #11
  br label %62

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %53 = load i64*, i64** %52, align 8
  %54 = icmp eq i64* %51, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %57

57:                                               ; preds = %55, %49
  %58 = phi i64* [ %56, %55 ], [ %51, %49 ]
  %59 = ptrtoint i64* %58 to i64
  %60 = add i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  store i64* %61, i64** %50, align 8
  store i64 %43, i64* %58, align 8
  br label %62

62:                                               ; preds = %47, %57
  %63 = phi i64* [ %48, %47 ], [ %58, %57 ]
  %64 = bitcast %"class.v8::internal::UnorderedStringMap"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %64) #11
  %65 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %66 = getelementptr inbounds %"class.v8::internal::UnorderedStringMap", %"class.v8::internal::UnorderedStringMap"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %67 = bitcast %"struct.std::__1::__compressed_pair_elem.1237"* %66 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #11
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::UnorderedStringMap", %"class.v8::internal::UnorderedStringMap"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::UnorderedStringMap", %"class.v8::internal::UnorderedStringMap"* %6, i64 0, i32 0, i32 0, i32 1, i32 1
  %70 = bitcast %"struct.std::__1::__compressed_pair_elem.1241"* %69 to i64*
  store i64 %65, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::UnorderedStringMap", %"class.v8::internal::UnorderedStringMap"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::UnorderedStringMap", %"class.v8::internal::UnorderedStringMap"* %6, i64 0, i32 0, i32 0, i32 3
  %73 = bitcast %"class.std::__1::__compressed_pair.1246"* %72 to i32*
  store i32 1065353216, i32* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::UnorderedStringMap", %"class.v8::internal::UnorderedStringMap"* %6, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1229"* nonnull %74, i64 2) #11
  %75 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = load i64, i64* %1, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %7, i64 0, i32 0
  %79 = call i64 @_ZNK2v88internal16SourceTextModule4infoEv(%"class.v8::internal::SourceTextModule"* nonnull %78)
  %80 = and i64 %79, -4294967296
  %81 = add i64 %79, 11
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %87 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %62
  %89 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %86, i64 %85) #11
  br label %103

90:                                               ; preds = %62
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %94 = load i64*, i64** %93, align 8
  %95 = icmp eq i64* %92, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  %97 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %98

98:                                               ; preds = %96, %90
  %99 = phi i64* [ %97, %96 ], [ %92, %90 ]
  %100 = ptrtoint i64* %99 to i64
  %101 = add i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  store i64* %102, i64** %91, align 8
  store i64 %85, i64* %99, align 8
  br label %103

103:                                              ; preds = %88, %98
  %104 = phi i64* [ %89, %88 ], [ %99, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %108, 1
  br i1 %109, label %110, label %132

110:                                              ; preds = %103
  %111 = lshr i32 %108, 1
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %116 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8 to i8*
  %117 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 301
  %120 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %9 to i8*
  %121 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %9, i64 0, i32 0, i32 0
  %123 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %10 to i8*
  %124 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %10, i64 0, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::pair.1254"* %11 to i8*
  %127 = getelementptr inbounds %"struct.std::__1::pair.1254", %"struct.std::__1::pair.1254"* %11, i64 0, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::__1::pair.1254", %"struct.std::__1::pair.1254"* %11, i64 0, i32 1, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.1254", %"struct.std::__1::pair.1254"* %11, i64 0, i32 0
  %130 = ptrtoint i64* %114 to i64
  %131 = zext i32 %111 to i64
  br label %138

132:                                              ; preds = %383, %103
  %133 = bitcast %"struct.std::__1::__hash_node_base.1233"** %68 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %388, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %432

138:                                              ; preds = %386, %110
  %139 = phi i64 [ %105, %110 ], [ %387, %386 ]
  %140 = phi i64 [ 0, %110 ], [ %384, %386 ]
  %141 = and i64 %139, -4294967296
  %142 = trunc i64 %140 to i32
  %143 = shl i32 %142, 2
  %144 = sext i32 %143 to i64
  %145 = add nsw i64 %144, 7
  %146 = add i64 %145, %139
  %147 = inttoptr i64 %146 to i32*
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %141, %149
  %151 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %152 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %138
  %154 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %151, i64 %150) #11
  %155 = load i64, i64* %154, align 8
  br label %167

156:                                              ; preds = %138
  %157 = load i64*, i64** %112, align 8
  %158 = load i64*, i64** %113, align 8
  %159 = icmp eq i64* %157, %158
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %162

162:                                              ; preds = %160, %156
  %163 = phi i64* [ %161, %160 ], [ %157, %156 ]
  %164 = ptrtoint i64* %163 to i64
  %165 = add i64 %164, 8
  %166 = inttoptr i64 %165 to i64*
  store i64* %166, i64** %112, align 8
  store i64 %150, i64* %163, align 8
  br label %167

167:                                              ; preds = %153, %162
  %168 = phi i64 [ %155, %153 ], [ %150, %162 ]
  %169 = add i64 %168, 3
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = load i64, i64* %114, align 8
  %173 = trunc i64 %172 to i32
  %174 = icmp eq i32 %171, %173
  br i1 %174, label %175, label %383

175:                                              ; preds = %167
  %176 = load i64, i64* %1, align 8
  %177 = and i64 %176, -4294967296
  %178 = add i64 %176, 39
  %179 = inttoptr i64 %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  %182 = or i64 %177, %181
  %183 = add i64 %168, 15
  %184 = inttoptr i64 %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = lshr i32 %185, 1
  %187 = shl i32 %186, 2
  %188 = sext i32 %187 to i64
  %189 = add i64 %182, 7
  %190 = add i64 %189, %188
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %177, %193
  %195 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %196 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %175
  %198 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %195, i64 %194) #11
  %199 = load i64, i64* %198, align 8
  br label %211

200:                                              ; preds = %175
  %201 = load i64*, i64** %112, align 8
  %202 = load i64*, i64** %113, align 8
  %203 = icmp eq i64* %201, %202
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %206

206:                                              ; preds = %204, %200
  %207 = phi i64* [ %205, %204 ], [ %201, %200 ]
  %208 = ptrtoint i64* %207 to i64
  %209 = add i64 %208, 8
  %210 = inttoptr i64 %209 to i64*
  store i64* %210, i64** %112, align 8
  store i64 %194, i64* %207, align 8
  br label %211

211:                                              ; preds = %197, %206
  %212 = phi i64 [ %199, %197 ], [ %194, %206 ]
  %213 = phi i64* [ %198, %197 ], [ %207, %206 ]
  %214 = and i64 %212, -4294967296
  %215 = add i64 %212, -1
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %214, %218
  %220 = add i64 %219, 7
  %221 = inttoptr i64 %220 to i16*
  %222 = load atomic i16, i16* %221 monotonic, align 2
  %223 = icmp eq i16 %222, 155
  br i1 %223, label %224, label %227

224:                                              ; preds = %211
  call void @_ZN2v88internal16SourceTextModule16FetchStarExportsEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_4ZoneEPNS0_18UnorderedModuleSetE(%"class.v8::internal::Isolate"* %0, i64* %213, %"class.v8::internal::Zone"* %2, %"class.v8::internal::UnorderedModuleSet"* %3)
  %225 = load i64, i64* %213, align 8
  %226 = and i64 %225, -4294967296
  br label %227

227:                                              ; preds = %224, %211
  %228 = phi i64 [ %226, %224 ], [ %214, %211 ]
  %229 = phi i64 [ %225, %224 ], [ %212, %211 ]
  %230 = add i64 %229, 3
  %231 = inttoptr i64 %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %228, %233
  %235 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %236 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %227
  %238 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %235, i64 %234) #11
  %239 = load i64, i64* %238, align 8
  br label %251

240:                                              ; preds = %227
  %241 = load i64*, i64** %112, align 8
  %242 = load i64*, i64** %113, align 8
  %243 = icmp eq i64* %241, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %240
  %245 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %246

246:                                              ; preds = %244, %240
  %247 = phi i64* [ %245, %244 ], [ %241, %240 ]
  %248 = ptrtoint i64* %247 to i64
  %249 = add i64 %248, 8
  %250 = inttoptr i64 %249 to i64*
  store i64* %250, i64** %112, align 8
  store i64 %234, i64* %247, align 8
  br label %251

251:                                              ; preds = %237, %246
  %252 = phi i64 [ %239, %237 ], [ %234, %246 ]
  %253 = phi i64* [ %238, %237 ], [ %247, %246 ]
  %254 = add i64 %252, 15
  %255 = inttoptr i64 %254 to i32*
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = ashr i32 %256, 1
  %258 = sext i32 %257 to i64
  %259 = icmp eq i32 %257, 0
  br i1 %259, label %383, label %260

260:                                              ; preds = %251, %381
  %261 = phi i64 [ %382, %381 ], [ %252, %251 ]
  %262 = phi i64 [ %379, %381 ], [ 0, %251 ]
  %263 = and i64 %261, -4294967296
  %264 = trunc i64 %262 to i32
  %265 = shl i32 %264, 3
  %266 = add i32 %265, 12
  %267 = sext i32 %266 to i64
  %268 = add nsw i64 %267, 7
  %269 = add i64 %268, %261
  %270 = inttoptr i64 %269 to i32*
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = zext i32 %271 to i64
  %273 = or i64 %263, %272
  %274 = load i64, i64* %114, align 8
  %275 = trunc i64 %274 to i32
  %276 = icmp eq i32 %271, %275
  br i1 %276, label %378, label %277

277:                                              ; preds = %260
  %278 = load i64, i64* %115, align 8
  %279 = trunc i64 %278 to i32
  %280 = icmp eq i32 %271, %279
  br i1 %280, label %378, label %281

281:                                              ; preds = %277
  %282 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %283 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %282, null
  br i1 %283, label %287, label %284

284:                                              ; preds = %281
  %285 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %282, i64 %273) #11
  %286 = load i64, i64* %285, align 8
  br label %298

287:                                              ; preds = %281
  %288 = load i64*, i64** %112, align 8
  %289 = load i64*, i64** %113, align 8
  %290 = icmp eq i64* %288, %289
  br i1 %290, label %291, label %293

291:                                              ; preds = %287
  %292 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %293

293:                                              ; preds = %291, %287
  %294 = phi i64* [ %292, %291 ], [ %288, %287 ]
  %295 = ptrtoint i64* %294 to i64
  %296 = add i64 %295, 8
  %297 = inttoptr i64 %296 to i64*
  store i64* %297, i64** %112, align 8
  store i64 %273, i64* %294, align 8
  br label %298

298:                                              ; preds = %284, %293
  %299 = phi i64 [ %286, %284 ], [ %273, %293 ]
  %300 = phi i64* [ %285, %284 ], [ %294, %293 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  store i64 %299, i64* %117, align 8
  %301 = load i64, i64* %119, align 8
  %302 = trunc i64 %301 to i32
  %303 = trunc i64 %299 to i32
  %304 = icmp eq i32 %302, %303
  br i1 %304, label %305, label %306

305:                                              ; preds = %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br label %378

306:                                              ; preds = %298
  %307 = and i64 %299, -4294967296
  %308 = add i64 %299, -1
  %309 = inttoptr i64 %308 to i32*
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = zext i32 %310 to i64
  %312 = or i64 %307, %311
  %313 = add i64 %312, 7
  %314 = inttoptr i64 %313 to i16*
  %315 = load atomic i16, i16* %314 monotonic, align 2
  %316 = icmp ult i16 %315, 32
  br i1 %316, label %317, label %329

317:                                              ; preds = %306
  %318 = and i64 %301, -4294967296
  %319 = add i64 %301, -1
  %320 = inttoptr i64 %319 to i32*
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = zext i32 %321 to i64
  %323 = or i64 %318, %322
  %324 = add i64 %323, 7
  %325 = inttoptr i64 %324 to i16*
  %326 = load atomic i16, i16* %325 monotonic, align 2
  %327 = icmp ult i16 %326, 32
  br i1 %327, label %328, label %329

328:                                              ; preds = %317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br label %331

329:                                              ; preds = %306, %317
  %330 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %118, i64 %301) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br i1 %330, label %378, label %331

331:                                              ; preds = %328, %329
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  %332 = load i64, i64* %63, align 8
  store i64 %332, i64* %121, align 8
  %333 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"* nonnull %122, i64* %300) #11
  %334 = load i64, i64* %115, align 8
  %335 = trunc i64 %333 to i32
  %336 = trunc i64 %334 to i32
  %337 = icmp eq i32 %335, %336
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  br i1 %337, label %338, label %378

338:                                              ; preds = %331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #11
  %339 = load i64, i64* %253, align 8
  store i64 %339, i64* %124, align 8
  %340 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"* nonnull %125, i64 %262) #11
  %341 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %342 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %341, null
  br i1 %342, label %345, label %343

343:                                              ; preds = %338
  %344 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %341, i64 %340) #11
  br label %356

345:                                              ; preds = %338
  %346 = load i64*, i64** %112, align 8
  %347 = load i64*, i64** %113, align 8
  %348 = icmp eq i64* %346, %347
  br i1 %348, label %349, label %351

349:                                              ; preds = %345
  %350 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %351

351:                                              ; preds = %349, %345
  %352 = phi i64* [ %350, %349 ], [ %346, %345 ]
  %353 = ptrtoint i64* %352 to i64
  %354 = add i64 %353, 8
  %355 = inttoptr i64 %354 to i64*
  store i64* %355, i64** %112, align 8
  store i64 %340, i64* %352, align 8
  br label %356

356:                                              ; preds = %343, %351
  %357 = phi i64* [ %344, %343 ], [ %352, %351 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #11
  store i64* %300, i64** %127, align 8
  store i64* %357, i64** %128, align 8
  %358 = call { %"struct.std::__1::__hash_node_base.1233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JNS_4pairIS6_NS4_INS3_4CellEEEEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1229"* nonnull %74, %"class.v8::internal::Handle.1136"* nonnull dereferenceable(8) %129, %"struct.std::__1::pair.1254"* nonnull dereferenceable(16) %11) #11
  %359 = extractvalue { %"struct.std::__1::__hash_node_base.1233"*, i8 } %358, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #11
  %360 = and i8 %359, 1
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %362, label %378

362:                                              ; preds = %356
  %363 = extractvalue { %"struct.std::__1::__hash_node_base.1233"*, i8 } %358, 0
  %364 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %363, i64 3
  %365 = bitcast %"struct.std::__1::__hash_node_base.1233"* %364 to i64**
  %366 = load i64*, i64** %365, align 8
  %367 = load i64, i64* %366, align 8
  %368 = load i64, i64* %357, align 8
  %369 = trunc i64 %367 to i32
  %370 = trunc i64 %368 to i32
  %371 = icmp eq i32 %369, %370
  br i1 %371, label %378, label %372

372:                                              ; preds = %362
  %373 = load i64, i64* %114, align 8
  %374 = trunc i64 %373 to i32
  %375 = icmp eq i32 %369, %374
  br i1 %375, label %378, label %376

376:                                              ; preds = %372
  %377 = bitcast %"struct.std::__1::__hash_node_base.1233"* %364 to i64*
  store i64 %130, i64* %377, align 8
  br label %378

378:                                              ; preds = %260, %277, %329, %331, %305, %376, %372, %362, %356
  %379 = add i64 %262, 1
  %380 = icmp eq i64 %379, %258
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = load i64, i64* %253, align 8
  br label %260

383:                                              ; preds = %378, %251, %167
  %384 = add nuw nsw i64 %140, 1
  %385 = icmp ult i64 %384, %131
  br i1 %385, label %386, label %132

386:                                              ; preds = %383
  %387 = load i64, i64* %104, align 8
  br label %138

388:                                              ; preds = %447, %132
  %389 = phi i64* [ %63, %132 ], [ %448, %447 ]
  %390 = load i64, i64* %1, align 8
  %391 = load i64, i64* %389, align 8
  %392 = add i64 %390, 3
  %393 = inttoptr i64 %392 to i32*
  %394 = trunc i64 %391 to i32
  store atomic volatile i32 %394, i32* %393 monotonic, align 4
  %395 = and i64 %391, 1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %408, label %397

397:                                              ; preds = %388
  %398 = and i64 %390, -262144
  %399 = or i64 %398, 8
  %400 = inttoptr i64 %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 262144
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %408, label %404

404:                                              ; preds = %397
  %405 = or i64 %398, 16
  %406 = inttoptr i64 %405 to %"class.v8::internal::Heap"**
  %407 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %406, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %407, i64 %390, i64 %392, i64 %391) #11
  br label %408

408:                                              ; preds = %404, %397, %388
  %409 = and i64 %391, -262144
  %410 = or i64 %409, 8
  %411 = inttoptr i64 %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = and i64 %412, 24
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %423, label %415

415:                                              ; preds = %408
  %416 = and i64 %390, -262144
  %417 = or i64 %416, 8
  %418 = inttoptr i64 %417 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = and i64 %419, 24
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %415
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %390, i64 %392, i64 %391) #11
  br label %423

423:                                              ; preds = %408, %415, %422
  %424 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %68, align 8
  %425 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %424, null
  br i1 %425, label %431, label %426

426:                                              ; preds = %423, %426
  %427 = phi %"struct.std::__1::__hash_node_base.1233"* [ %429, %426 ], [ %424, %423 ]
  %428 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %427, i64 0, i32 0
  %429 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %428, align 8
  %430 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %429, null
  br i1 %430, label %431, label %426

431:                                              ; preds = %426, %423
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %64) #11
  br label %452

432:                                              ; preds = %136, %447
  %433 = phi i64 [ %134, %136 ], [ %450, %447 ]
  %434 = phi i64* [ %63, %136 ], [ %448, %447 ]
  %435 = inttoptr i64 %433 to %"struct.std::__1::__hash_node.1314"*
  %436 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %435, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %437 = load i64*, i64** %436, align 8
  %438 = load i64, i64* %437, align 8
  %439 = load i64, i64* %137, align 8
  %440 = trunc i64 %438 to i32
  %441 = trunc i64 %439 to i32
  %442 = icmp eq i32 %440, %441
  br i1 %442, label %447, label %443

443:                                              ; preds = %432
  %444 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %445 = load i64*, i64** %444, align 8
  %446 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64* %434, i64* %445, i64* %437) #11
  br label %447

447:                                              ; preds = %432, %443
  %448 = phi i64* [ %434, %432 ], [ %446, %443 ]
  %449 = inttoptr i64 %433 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %388, label %432

452:                                              ; preds = %431, %28, %4
  ret void
}

declare i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule28GatherAsyncParentCompletionsEPNS0_7IsolateEPNS0_4ZoneENS0_6HandleIS1_EEPNS0_7ZoneSetIS7_NS1_29AsyncEvaluatingOrdinalCompareEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, i64*, %"class.v8::internal::ZoneSet"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::ZoneDeque", align 8
  %6 = alloca %"class.v8::internal::ZoneStack", align 8
  %7 = alloca %"class.v8::internal::Handle.1135", align 8
  %8 = ptrtoint i64* %2 to i64
  %9 = bitcast %"class.v8::internal::ZoneStack"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #11
  %10 = bitcast %"class.v8::internal::ZoneDeque"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #11
  %11 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #11
  %12 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.1268"* %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.1271"* %16 to i64*
  store i64 %11, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %20 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.1266"* %19 to i8*
  %22 = bitcast %"class.std::__1::__compressed_pair.1266"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #11
  %23 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::__compressed_pair.1270"* %25 to i8*
  %28 = bitcast %"class.std::__1::__compressed_pair.1270"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #11
  %29 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.1264"* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #11
  %31 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = bitcast %"class.v8::internal::Handle.1135"*** %31 to i64*
  %33 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::Handle.1135"*** %33 to i64*
  %35 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %53

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.1263"* nonnull %39) #11
  %40 = load i64, i64* %35, align 8
  %41 = load i64, i64* %23, align 8
  %42 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %33, align 8
  %43 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %31, align 8
  %44 = add i64 %41, %40
  %45 = icmp eq %"class.v8::internal::Handle.1135"** %43, %42
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = lshr i64 %44, 9
  %48 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %42, i64 %47
  %49 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %48, align 8
  %50 = and i64 %44, 511
  %51 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %49, i64 %50
  %52 = bitcast %"class.v8::internal::Handle.1135"* %51 to i64*
  br label %53

53:                                               ; preds = %4, %38, %46
  %54 = phi i64* [ %52, %46 ], [ null, %38 ], [ null, %4 ]
  store i64 %8, i64* %54, align 8
  %55 = load i64, i64* %35, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %35, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %316, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %59 to i64*
  %61 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %59 to %"class.v8::internal::Handle.1135"**
  %62 = bitcast %"class.v8::internal::Handle.1135"* %7 to i8*
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %7, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_node"**
  %69 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %3, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.v8::internal::Handle.1135"* %7 to i64*
  br label %72

72:                                               ; preds = %58, %134
  %73 = phi i64 [ %56, %58 ], [ %135, %134 ]
  %74 = load i64, i64* %23, align 8
  %75 = add i64 %73, -1
  %76 = add i64 %74, %75
  %77 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %33, align 8
  %78 = lshr i64 %76, 9
  %79 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %77, i64 %78
  %80 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %79, align 8
  %81 = and i64 %76, 511
  %82 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %80, i64 %81, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  store i64 %75, i64* %35, align 8
  %84 = load i64, i64* %32, align 8
  %85 = ptrtoint %"class.v8::internal::Handle.1135"** %77 to i64
  %86 = sub i64 %84, %85
  %87 = icmp eq i64 %86, 0
  %88 = shl i64 %86, 6
  %89 = add i64 %88, -1
  %90 = select i1 %87, i64 0, i64 %89
  %91 = sub i64 1, %73
  %92 = sub i64 %91, %74
  %93 = add i64 %92, %90
  %94 = icmp ult i64 %93, 1024
  %95 = inttoptr i64 %84 to %"class.v8::internal::Handle.1135"**
  br i1 %94, label %114, label %96

96:                                               ; preds = %72
  %97 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %95, i64 -1
  %98 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %97, align 8
  %99 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %59, align 8
  %100 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %99, i64 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp ugt i64 %103, 512
  br i1 %104, label %111, label %105

105:                                              ; preds = %101, %96
  %106 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %98, i64 1
  %107 = bitcast %"class.v8::internal::Handle.1135"* %106 to i64*
  store i64 512, i64* %107, align 8
  %108 = load i64, i64* %60, align 8
  %109 = bitcast %"class.v8::internal::Handle.1135"* %98 to i64*
  store i64 %108, i64* %109, align 8
  store %"class.v8::internal::Handle.1135"* %98, %"class.v8::internal::Handle.1135"** %61, align 8
  %110 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %31, align 8
  br label %111

111:                                              ; preds = %105, %101
  %112 = phi %"class.v8::internal::Handle.1135"** [ %95, %101 ], [ %110, %105 ]
  %113 = getelementptr %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %112, i64 -1
  store %"class.v8::internal::Handle.1135"** %113, %"class.v8::internal::Handle.1135"*** %31, align 8
  br label %114

114:                                              ; preds = %72, %111
  %115 = load i64, i64* %83, align 8
  %116 = and i64 %115, -4294967296
  %117 = add i64 %115, 51
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 3
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = icmp ult i32 %124, 2
  br i1 %125, label %134, label %126

126:                                              ; preds = %114
  %127 = add i64 %121, 7
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = icmp sgt i32 %129, 1
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = ashr i32 %129, 1
  %133 = sext i32 %132 to i64
  br label %137

134:                                              ; preds = %312, %114, %126
  %135 = load i64, i64* %35, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %316, label %72

137:                                              ; preds = %314, %131
  %138 = phi i64 [ %115, %131 ], [ %315, %314 ]
  %139 = phi i64 [ %133, %131 ], [ %140, %314 ]
  %140 = add nsw i64 %139, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %141 = and i64 %138, -4294967296
  %142 = add i64 %138, 51
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %141, %145
  %147 = trunc i64 %140 to i32
  %148 = shl i32 %147, 2
  %149 = add i32 %148, 4
  %150 = sext i32 %149 to i64
  %151 = add nsw i64 %150, 7
  %152 = add i64 %151, %146
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %141, %155
  %157 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %158 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %137
  %160 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %157, i64 %156) #11
  br label %172

161:                                              ; preds = %137
  %162 = load i64*, i64** %64, align 8
  %163 = load i64*, i64** %65, align 8
  %164 = icmp eq i64* %162, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %167

167:                                              ; preds = %165, %161
  %168 = phi i64* [ %166, %165 ], [ %162, %161 ]
  %169 = ptrtoint i64* %168 to i64
  %170 = add i64 %169, 8
  %171 = inttoptr i64 %170 to i64*
  store i64* %171, i64** %64, align 8
  store i64 %156, i64* %168, align 8
  br label %172

172:                                              ; preds = %159, %167
  %173 = phi i64* [ %160, %159 ], [ %168, %167 ]
  store i64* %173, i64** %66, align 8
  %174 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  %175 = icmp eq %"class.std::__1::__tree_node"* %174, null
  %176 = load i64, i64* %173, align 8
  br i1 %175, label %213, label %177

177:                                              ; preds = %172
  %178 = add i64 %176, 67
  %179 = inttoptr i64 %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = lshr i32 %180, 2
  br label %182

182:                                              ; preds = %182, %177
  %183 = phi %"class.std::__1::__tree_node"* [ %174, %177 ], [ %199, %182 ]
  %184 = phi %"class.std::__1::__tree_end_node"* [ %67, %177 ], [ %197, %182 ]
  %185 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %183, i64 0, i32 1, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = load i64, i64* %186, align 8
  %188 = add i64 %187, 67
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = lshr i32 %190, 2
  %192 = icmp ult i32 %191, %181
  %193 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %183, i64 0, i32 0, i32 1
  %194 = bitcast %"class.std::__1::__tree_node_base"** %193 to %"class.std::__1::__tree_node"**
  %195 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %183, i64 0, i32 0, i32 0
  %196 = bitcast %"class.std::__1::__tree_node"* %183 to %"class.std::__1::__tree_node"**
  %197 = select i1 %192, %"class.std::__1::__tree_end_node"* %184, %"class.std::__1::__tree_end_node"* %195
  %198 = select i1 %192, %"class.std::__1::__tree_node"** %194, %"class.std::__1::__tree_node"** %196
  %199 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node"* %199, null
  br i1 %200, label %201, label %182

201:                                              ; preds = %182
  %202 = icmp eq %"class.std::__1::__tree_end_node"* %197, %67
  br i1 %202, label %213, label %203

203:                                              ; preds = %201
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %197, i64 4
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to i64**
  %206 = load i64*, i64** %205, align 8
  %207 = load i64, i64* %206, align 8
  %208 = add i64 %207, 67
  %209 = inttoptr i64 %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = lshr i32 %210, 2
  %212 = icmp ult i32 %181, %211
  br i1 %212, label %213, label %312

213:                                              ; preds = %172, %203, %201
  %214 = add i64 %176, 11
  %215 = inttoptr i64 %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = ashr i32 %216, 1
  %218 = icmp sgt i32 %216, -1
  %219 = icmp ugt i32 %217, 4
  %220 = and i1 %218, %219
  br i1 %220, label %222, label %221, !prof !4

221:                                              ; preds = %213
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #10
  unreachable

222:                                              ; preds = %213
  %223 = and i64 %176, -4294967296
  %224 = add i64 %176, 47
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i64
  %228 = or i64 %223, %227
  %229 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %230 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %222
  %232 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %229, i64 %228) #11
  %233 = load i64, i64* %232, align 8
  br label %245

234:                                              ; preds = %222
  %235 = load i64*, i64** %64, align 8
  %236 = load i64*, i64** %65, align 8
  %237 = icmp eq i64* %235, %236
  br i1 %237, label %238, label %240

238:                                              ; preds = %234
  %239 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %240

240:                                              ; preds = %238, %234
  %241 = phi i64* [ %239, %238 ], [ %235, %234 ]
  %242 = ptrtoint i64* %241 to i64
  %243 = add i64 %242, 8
  %244 = inttoptr i64 %243 to i64*
  store i64* %244, i64** %64, align 8
  store i64 %228, i64* %241, align 8
  br label %245

245:                                              ; preds = %231, %240
  %246 = phi i64 [ %233, %231 ], [ %228, %240 ]
  %247 = add i64 %246, 11
  %248 = inttoptr i64 %247 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = and i32 %249, -2
  %251 = icmp eq i32 %250, 12
  br i1 %251, label %312, label %252

252:                                              ; preds = %245
  %253 = load i64*, i64** %66, align 8
  %254 = load i64, i64* %253, align 8
  %255 = add i64 %254, 63
  %256 = inttoptr i64 %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %257, -2
  %259 = and i32 %258, -2
  store atomic volatile i32 %259, i32* %256 monotonic, align 4
  %260 = load i64*, i64** %66, align 8
  %261 = load i64, i64* %260, align 8
  %262 = add i64 %261, 63
  %263 = inttoptr i64 %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 1
  br i1 %265, label %312, label %266

266:                                              ; preds = %252
  %267 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1257"* %69, %"class.v8::internal::Handle.1135"* nonnull dereferenceable(8) %7, %"class.v8::internal::Handle.1135"* nonnull dereferenceable(8) %7) #11
  %268 = load i64*, i64** %66, align 8
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %269, 67
  %271 = inttoptr i64 %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %312

275:                                              ; preds = %266
  %276 = load i64, i64* %32, align 8
  %277 = load i64, i64* %34, align 8
  %278 = sub i64 %276, %277
  %279 = icmp eq i64 %278, 0
  %280 = shl i64 %278, 6
  %281 = add i64 %280, -1
  %282 = select i1 %279, i64 0, i64 %281
  %283 = load i64, i64* %23, align 8
  %284 = load i64, i64* %35, align 8
  %285 = add i64 %284, %283
  %286 = icmp eq i64 %282, %285
  %287 = inttoptr i64 %277 to %"class.v8::internal::Handle.1135"**
  %288 = inttoptr i64 %276 to %"class.v8::internal::Handle.1135"**
  br i1 %286, label %289, label %295

289:                                              ; preds = %275
  call void @_ZNSt3__15dequeIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.1263"* nonnull %70) #11
  %290 = load i64, i64* %35, align 8
  %291 = load i64, i64* %23, align 8
  %292 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %33, align 8
  %293 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %31, align 8
  %294 = add i64 %291, %290
  br label %295

295:                                              ; preds = %289, %275
  %296 = phi i64 [ %294, %289 ], [ %285, %275 ]
  %297 = phi %"class.v8::internal::Handle.1135"** [ %293, %289 ], [ %288, %275 ]
  %298 = phi %"class.v8::internal::Handle.1135"** [ %292, %289 ], [ %287, %275 ]
  %299 = icmp eq %"class.v8::internal::Handle.1135"** %297, %298
  br i1 %299, label %307, label %300

300:                                              ; preds = %295
  %301 = lshr i64 %296, 9
  %302 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %298, i64 %301
  %303 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %302, align 8
  %304 = and i64 %296, 511
  %305 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %303, i64 %304
  %306 = bitcast %"class.v8::internal::Handle.1135"* %305 to i64*
  br label %307

307:                                              ; preds = %295, %300
  %308 = phi i64* [ %306, %300 ], [ null, %295 ]
  %309 = load i64, i64* %71, align 8
  store i64 %309, i64* %308, align 8
  %310 = load i64, i64* %35, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %35, align 8
  br label %312

312:                                              ; preds = %266, %245, %203, %252, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  %313 = icmp sgt i64 %140, 0
  br i1 %313, label %314, label %134

314:                                              ; preds = %312
  %315 = load i64, i64* %83, align 8
  br label %137

316:                                              ; preds = %134, %53
  %317 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.1264"* nonnull %317) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule18GetModuleNamespaceEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 39
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = shl i32 %2, 2
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %12, 7
  %14 = add i64 %13, %10
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %18) #11
  br label %37

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %32

32:                                               ; preds = %30, %24
  %33 = phi i64* [ %31, %30 ], [ %26, %24 ]
  %34 = ptrtoint i64* %33 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %25, align 8
  store i64 %18, i64* %33, align 8
  br label %37

37:                                               ; preds = %22, %32
  %38 = phi i64* [ %23, %22 ], [ %33, %32 ]
  %39 = tail call i64* @_ZN2v88internal6Module18GetModuleNamespaceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %38) #11
  ret i64* %39
}

declare i64* @_ZN2v88internal6Module18GetModuleNamespaceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule13GetImportMetaEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 43
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %9) #11
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint i64* %14 to i64
  br label %30

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 %9, i64* %26, align 8
  br label %30

30:                                               ; preds = %13, %25
  %31 = phi i64 [ %16, %13 ], [ %27, %25 ]
  %32 = phi i64 [ %15, %13 ], [ %9, %25 ]
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %32 to i32
  %36 = trunc i64 %34 to i32
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %76

38:                                               ; preds = %30
  %39 = tail call i64* @_ZN2v88internal7Isolate41RunHostInitializeImportMetaObjectCallbackENS0_6HandleINS0_16SourceTextModuleEEE(%"class.v8::internal::Isolate"* %0, i64* %1) #11
  %40 = icmp eq i64* %39, null
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = ptrtoint i64* %39 to i64
  %43 = load i64, i64* %1, align 8
  %44 = load i64, i64* %39, align 8
  %45 = add i64 %43, 43
  %46 = inttoptr i64 %45 to i32*
  %47 = trunc i64 %44 to i32
  store atomic volatile i32 %47, i32* %46 release, align 4
  %48 = and i64 %44, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %41
  %51 = and i64 %43, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 262144
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = or i64 %51, 16
  %59 = inttoptr i64 %58 to %"class.v8::internal::Heap"**
  %60 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %59, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %60, i64 %43, i64 %45, i64 %44) #11
  br label %61

61:                                               ; preds = %57, %50, %41
  %62 = and i64 %44, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %61
  %69 = and i64 %43, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %68
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %43, i64 %45, i64 %44) #11
  br label %76

76:                                               ; preds = %30, %61, %68, %75, %38
  %77 = phi i64 [ 0, %38 ], [ %31, %30 ], [ %42, %61 ], [ %42, %68 ], [ %42, %75 ]
  %78 = inttoptr i64 %77 to i64*
  ret i64* %78
}

declare i64* @_ZN2v88internal7Isolate41RunHostInitializeImportMetaObjectCallbackENS0_6HandleINS0_16SourceTextModuleEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule18EvaluateMaybeAsyncEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = tail call i64* @_ZN2v88internal7Factory12NewJSPromiseEv(%"class.v8::internal::Factory"* %3) #11
  %5 = load i64, i64* %1, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add i64 %5, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %6 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = and i64 %6, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = and i64 %5, -262144
  %14 = or i64 %13, 8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 262144
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = or i64 %13, 16
  %21 = inttoptr i64 %20 to %"class.v8::internal::Heap"**
  %22 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %21, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %22, i64 %5, i64 %7, i64 %6) #11
  br label %23

23:                                               ; preds = %19, %12, %2
  %24 = and i64 %6, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 24
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %23
  %31 = and i64 %5, -262144
  %32 = or i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 24
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %30
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %7, i64 %6) #11
  br label %38

38:                                               ; preds = %23, %30, %37
  %39 = tail call i64* @_ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %40 = icmp eq i64* %39, null
  br i1 %40, label %41, label %84

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %45 = ptrtoint %"class.v8::internal::Heap"* %44 to i64
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 33
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %43 to i32
  %51 = trunc i64 %49 to i32
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %102, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %42, align 8
  %56 = load i64, i64* %1, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 19
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %64 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %65 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %53
  %67 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %64, i64 %62) #11
  br label %81

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %62, i64* %77, align 8
  br label %81

81:                                               ; preds = %66, %76
  %82 = phi i64* [ %67, %66 ], [ %77, %76 ]
  %83 = tail call i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64* %4, i64* %82, i1 zeroext true) #11
  br label %102

84:                                               ; preds = %38
  %85 = load i64, i64* %1, align 8
  %86 = add i64 %85, 11
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, -2
  %90 = icmp eq i32 %89, 10
  br i1 %90, label %92, label %91, !prof !4

91:                                               ; preds = %84
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

92:                                               ; preds = %84
  %93 = add i64 %85, 67
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = icmp ugt i32 %95, 7
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %99 = tail call i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %4, i64* %98) #11
  %100 = icmp eq i64* %99, null
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %97
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

102:                                              ; preds = %81, %92, %97, %41
  %103 = phi i64* [ null, %41 ], [ %4, %97 ], [ %4, %92 ], [ %4, %81 ]
  ret i64* %103
}

declare i64* @_ZN2v88internal7Factory12NewJSPromiseEv(%"class.v8::internal::Factory"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Zone", align 8
  %4 = alloca %"class.v8::internal::ZoneForwardList", align 8
  %5 = alloca i32, align 4
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  switch i32 %10, label %11 [
    i32 3, label %12
    i32 5, label %12
  ], !prof !5

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0)) #10
  unreachable

12:                                               ; preds = %2, %2
  %13 = bitcast %"class.v8::internal::Zone"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %15 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %14, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %3, %"class.v8::internal::AccountingAllocator"* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__._ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE, i64 0, i64 0), i1 zeroext false) #11
  %16 = bitcast %"class.v8::internal::ZoneForwardList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %18 = bitcast %"class.v8::internal::ZoneForwardList"* %4 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.1201"* %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 0, i32* %5, align 4
  %22 = call i64* @_ZN2v88internal16SourceTextModule21InnerModuleEvaluationEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EEPj(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::ZoneForwardList"* nonnull %4, i32* nonnull %5)
  %23 = icmp eq i64* %22, null
  br i1 %23, label %24, label %43

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__forward_list_node"* %26, null
  br i1 %27, label %43, label %28

28:                                               ; preds = %24, %39
  %29 = phi %"struct.std::__1::__forward_list_node"* [ %41, %39 ], [ %26, %24 ]
  %30 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, -2
  %37 = icmp eq i32 %36, 8
  br i1 %37, label %39, label %38, !prof !4

38:                                               ; preds = %28
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #10
  unreachable

39:                                               ; preds = %28
  call void @_ZN2v88internal6Module32RecordErrorUsingPendingExceptionEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %31) #11
  %40 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %29, i64 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__forward_list_node"* %41, null
  br i1 %42, label %43, label %28

43:                                               ; preds = %39, %24, %12
  %44 = phi i64* [ %22, %12 ], [ null, %24 ], [ null, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  %45 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %46, %43
  %47 = phi %"struct.std::__1::__forward_list_node"** [ %45, %43 ], [ %50, %46 ]
  %48 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__forward_list_node"* %48, null
  %50 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %48, i64 0, i32 0, i32 0
  br i1 %49, label %51, label %46

51:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #11
  ret i64* %44
}

declare i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64*, i64*, i1 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #4

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule21InnerModuleEvaluationEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EEPj(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ZoneForwardList"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", align 8
  %6 = ptrtoint i64* %1 to i64
  %7 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #11
  br label %347

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %20 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %19) #11
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %347

23:                                               ; preds = %4, %18
  %24 = load i64, i64* %1, align 8
  %25 = add i64 %24, 11
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %40 [
    i32 5, label %29
    i32 4, label %29
    i32 6, label %32
    i32 3, label %41
  ], !prof !6

29:                                               ; preds = %23, %23
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %31 = ptrtoint i64* %30 to i64
  br label %347

32:                                               ; preds = %23
  %33 = and i64 %24, -4294967296
  %34 = add i64 %24, 19
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %38, %"class.v8::internal::MessageLocation"* null) #11
  br label %347

40:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #10
  unreachable

41:                                               ; preds = %23
  %42 = bitcast %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %24, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SourceTextModule>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"* nonnull %44, i32 4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %45 = load i64, i64* %1, align 8
  %46 = load i32, i32* %3, align 4
  %47 = shl i32 %46, 1
  %48 = add i64 %45, 55
  %49 = inttoptr i64 %48 to i32*
  store atomic volatile i32 %47, i32* %49 monotonic, align 4
  %50 = load i64, i64* %1, align 8
  %51 = load i32, i32* %3, align 4
  %52 = shl i32 %51, 1
  %53 = add i64 %50, 59
  %54 = inttoptr i64 %53 to i32*
  store atomic volatile i32 %52, i32* %54 monotonic, align 4
  %55 = call i64* @_ZN2v88internal9ArrayList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"* %0, i32 0) #11
  %56 = load i64, i64* %1, align 8
  %57 = load i64, i64* %55, align 8
  %58 = add i64 %56, 51
  %59 = inttoptr i64 %58 to i32*
  %60 = trunc i64 %57 to i32
  store atomic volatile i32 %60, i32* %59 monotonic, align 4
  %61 = and i64 %57, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %41
  %64 = and i64 %56, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 262144
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = or i64 %64, 16
  %72 = inttoptr i64 %71 to %"class.v8::internal::Heap"**
  %73 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %72, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %73, i64 %56, i64 %58, i64 %57) #11
  br label %74

74:                                               ; preds = %70, %63, %41
  %75 = and i64 %57, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %74
  %82 = and i64 %56, -262144
  %83 = or i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 24
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %56, i64 %58, i64 %57) #11
  br label %89

89:                                               ; preds = %74, %81, %88
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  %92 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %97, %95
  %99 = icmp ult i64 %98, 16
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %89
  %101 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %93, i64 16) #11
  br label %104

102:                                              ; preds = %89
  %103 = add i64 %95, 16
  store i64 %103, i64* %94, align 8
  br label %104

104:                                              ; preds = %100, %102
  %105 = phi i64 [ %101, %100 ], [ %95, %102 ]
  %106 = inttoptr i64 %105 to %"struct.std::__1::__forward_list_node"*
  %107 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %106, i64 0, i32 1
  %108 = bitcast %"class.v8::internal::Handle.1135"* %107 to i64*
  store i64 %6, i64* %108, align 8
  %109 = bitcast %"class.v8::internal::ZoneForwardList"* %2 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = inttoptr i64 %105 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__forward_list_node"* %106, %"struct.std::__1::__forward_list_node"** %112, align 8
  %113 = load i64, i64* %1, align 8
  %114 = and i64 %113, -4294967296
  %115 = add i64 %113, 39
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %114, %118
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %121 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %120, align 8
  %122 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %104
  %124 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %121, i64 %119) #11
  %125 = load i64, i64* %124, align 8
  br label %139

126:                                              ; preds = %104
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %128 = load i64*, i64** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i64* %128, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %126
  %133 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i64* [ %133, %132 ], [ %128, %126 ]
  %136 = ptrtoint i64* %135 to i64
  %137 = add i64 %136, 8
  %138 = inttoptr i64 %137 to i64*
  store i64* %138, i64** %127, align 8
  store i64 %119, i64* %135, align 8
  br label %139

139:                                              ; preds = %123, %134
  %140 = phi i64 [ %125, %123 ], [ %119, %134 ]
  %141 = phi i64* [ %124, %123 ], [ %135, %134 ]
  %142 = add i64 %140, 3
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, 1
  br i1 %145, label %146, label %305

146:                                              ; preds = %139
  %147 = lshr i32 %144, 1
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %150 = zext i32 %147 to i64
  br label %151

151:                                              ; preds = %303, %146
  %152 = phi i64 [ %140, %146 ], [ %304, %303 ]
  %153 = phi i64 [ 0, %146 ], [ %301, %303 ]
  %154 = and i64 %152, -4294967296
  %155 = trunc i64 %153 to i32
  %156 = shl i32 %155, 2
  %157 = sext i32 %156 to i64
  %158 = add nsw i64 %157, 7
  %159 = add i64 %158, %152
  %160 = inttoptr i64 %159 to i32*
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %154, %162
  %164 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %120, align 8
  %165 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %164, null
  br i1 %165, label %169, label %166

166:                                              ; preds = %151
  %167 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %164, i64 %163) #11
  %168 = load i64, i64* %167, align 8
  br label %180

169:                                              ; preds = %151
  %170 = load i64*, i64** %148, align 8
  %171 = load i64*, i64** %149, align 8
  %172 = icmp eq i64* %170, %171
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  %174 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %175

175:                                              ; preds = %173, %169
  %176 = phi i64* [ %174, %173 ], [ %170, %169 ]
  %177 = ptrtoint i64* %176 to i64
  %178 = add i64 %177, 8
  %179 = inttoptr i64 %178 to i64*
  store i64* %179, i64** %148, align 8
  store i64 %163, i64* %176, align 8
  br label %180

180:                                              ; preds = %166, %175
  %181 = phi i64 [ %168, %166 ], [ %163, %175 ]
  %182 = phi i64* [ %167, %166 ], [ %176, %175 ]
  %183 = and i64 %181, -4294967296
  %184 = add i64 %181, -1
  %185 = inttoptr i64 %184 to i32*
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = zext i32 %186 to i64
  %188 = or i64 %183, %187
  %189 = add i64 %188, 7
  %190 = inttoptr i64 %189 to i16*
  %191 = load atomic i16, i16* %190 monotonic, align 2
  %192 = icmp eq i16 %191, 155
  br i1 %192, label %193, label %297

193:                                              ; preds = %180
  %194 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %120, align 8
  %195 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %194, i64 %181) #11
  br label %209

198:                                              ; preds = %193
  %199 = load i64*, i64** %148, align 8
  %200 = load i64*, i64** %149, align 8
  %201 = icmp eq i64* %199, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  %203 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %204

204:                                              ; preds = %202, %198
  %205 = phi i64* [ %203, %202 ], [ %199, %198 ]
  %206 = ptrtoint i64* %205 to i64
  %207 = add i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  store i64* %208, i64** %148, align 8
  store i64 %181, i64* %205, align 8
  br label %209

209:                                              ; preds = %196, %204
  %210 = phi i64* [ %197, %196 ], [ %205, %204 ]
  %211 = call i64* @_ZN2v88internal16SourceTextModule21InnerModuleEvaluationEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EEPj(%"class.v8::internal::Isolate"* %0, i64* %210, %"class.v8::internal::ZoneForwardList"* %2, i32* %3)
  %212 = icmp eq i64* %211, null
  br i1 %212, label %347, label %213

213:                                              ; preds = %209
  %214 = load i64, i64* %210, align 8
  %215 = add i64 %214, 11
  %216 = inttoptr i64 %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = ashr i32 %217, 1
  %219 = icmp sgt i32 %217, -1
  %220 = icmp ugt i32 %218, 3
  %221 = and i1 %219, %220
  br i1 %221, label %223, label %222, !prof !4

222:                                              ; preds = %213
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0)) #10
  unreachable

223:                                              ; preds = %213
  switch i32 %218, label %239 [
    i32 6, label %224
    i32 4, label %225
  ], !prof !7

224:                                              ; preds = %223
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #10
  unreachable

225:                                              ; preds = %223
  %226 = load i64, i64* %1, align 8
  %227 = add i64 %226, 59
  %228 = inttoptr i64 %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = ashr i32 %229, 1
  %231 = add i64 %214, 59
  %232 = inttoptr i64 %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = ashr i32 %233, 1
  %235 = icmp slt i32 %234, %230
  %236 = select i1 %235, i32 %234, i32 %230
  %237 = shl nsw i32 %236, 1
  store atomic volatile i32 %237, i32* %228 monotonic, align 4
  %238 = load i64, i64* %210, align 8
  br label %283

239:                                              ; preds = %223
  %240 = and i64 %214, -4294967296
  %241 = add i64 %214, 47
  %242 = inttoptr i64 %241 to i32*
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %240, %244
  %246 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %120, align 8
  %247 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %246, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %239
  %249 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %246, i64 %245) #11
  %250 = load i64, i64* %249, align 8
  br label %262

251:                                              ; preds = %239
  %252 = load i64*, i64** %148, align 8
  %253 = load i64*, i64** %149, align 8
  %254 = icmp eq i64* %252, %253
  br i1 %254, label %255, label %257

255:                                              ; preds = %251
  %256 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %257

257:                                              ; preds = %255, %251
  %258 = phi i64* [ %256, %255 ], [ %252, %251 ]
  %259 = ptrtoint i64* %258 to i64
  %260 = add i64 %259, 8
  %261 = inttoptr i64 %260 to i64*
  store i64* %261, i64** %148, align 8
  store i64 %245, i64* %258, align 8
  br label %262

262:                                              ; preds = %248, %257
  %263 = phi i64 [ %250, %248 ], [ %245, %257 ]
  %264 = phi i64* [ %249, %248 ], [ %258, %257 ]
  %265 = add i64 %263, 11
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = ashr i32 %267, 1
  %269 = icmp sgt i32 %267, -1
  %270 = icmp ugt i32 %268, 4
  %271 = and i1 %269, %270
  br i1 %271, label %273, label %272, !prof !4

272:                                              ; preds = %262
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0)) #10
  unreachable

273:                                              ; preds = %262
  %274 = icmp eq i32 %268, 6
  br i1 %274, label %275, label %283

275:                                              ; preds = %273
  %276 = and i64 %263, -4294967296
  %277 = add i64 %263, 19
  %278 = inttoptr i64 %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = zext i32 %279 to i64
  %281 = or i64 %276, %280
  %282 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %281, %"class.v8::internal::MessageLocation"* null) #11
  br label %347

283:                                              ; preds = %273, %225
  %284 = phi i64 [ %238, %225 ], [ %263, %273 ]
  %285 = phi i64* [ %210, %225 ], [ %264, %273 ]
  %286 = add i64 %284, 67
  %287 = inttoptr i64 %286 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = icmp ugt i32 %288, 7
  br i1 %289, label %290, label %300

290:                                              ; preds = %283
  %291 = load i64, i64* %1, align 8
  %292 = add i64 %291, 63
  %293 = inttoptr i64 %292 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = add i32 %294, 2
  %296 = and i32 %295, -2
  store atomic volatile i32 %296, i32* %293 monotonic, align 4
  call void @_ZN2v88internal16SourceTextModule20AddAsyncParentModuleEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %285, i64* %1)
  br label %300

297:                                              ; preds = %180
  %298 = call i64* @_ZN2v88internal6Module8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %182) #11
  %299 = icmp eq i64* %298, null
  br i1 %299, label %347, label %300

300:                                              ; preds = %283, %290, %297
  %301 = add nuw nsw i64 %153, 1
  %302 = icmp ult i64 %301, %150
  br i1 %302, label %303, label %305

303:                                              ; preds = %300
  %304 = load i64, i64* %141, align 8
  br label %151

305:                                              ; preds = %300, %139
  %306 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %307 = ptrtoint i64* %306 to i64
  %308 = load i64, i64* %1, align 8
  %309 = add i64 %308, 63
  %310 = inttoptr i64 %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = icmp sgt i32 %311, 1
  br i1 %312, label %319, label %313

313:                                              ; preds = %305
  %314 = add i64 %308, 67
  %315 = inttoptr i64 %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %338, label %319

319:                                              ; preds = %313, %305
  %320 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 130
  %321 = load i32, i32* %320, align 4
  %322 = add i32 %321, 1
  store i32 %322, i32* %320, align 4
  %323 = icmp ult i32 %321, 1073741823
  br i1 %323, label %325, label %324, !prof !4

324:                                              ; preds = %319
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14, i64 0, i64 0)) #10
  unreachable

325:                                              ; preds = %319
  %326 = add i64 %308, 67
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = and i32 %328, 2
  %330 = shl i32 %321, 2
  %331 = or i32 %329, %330
  store atomic volatile i32 %331, i32* %327 monotonic, align 4
  %332 = load i64, i64* %1, align 8
  %333 = add i64 %332, 63
  %334 = inttoptr i64 %333 to i32*
  %335 = load i32, i32* %334, align 4
  %336 = icmp sgt i32 %335, 1
  br i1 %336, label %343, label %337

337:                                              ; preds = %325
  call void @_ZN2v88internal16SourceTextModule18ExecuteAsyncModuleEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br label %343

338:                                              ; preds = %313
  %339 = call i64* @_ZN2v88internal16SourceTextModule13ExecuteModuleEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %340 = icmp eq i64* %339, null
  br i1 %340, label %347, label %341

341:                                              ; preds = %338
  %342 = ptrtoint i64* %339 to i64
  br label %343

343:                                              ; preds = %341, %325, %337
  %344 = phi i64 [ %307, %325 ], [ %307, %337 ], [ %342, %341 ]
  %345 = call zeroext i1 @_ZN2v88internal16SourceTextModule24MaybeTransitionComponentEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EENS0_6Module6StatusE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::ZoneForwardList"* %2, i32 5)
  br i1 %345, label %347, label %346, !prof !4

346:                                              ; preds = %343
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.12, i64 0, i64 0)) #10
  unreachable

347:                                              ; preds = %209, %297, %343, %275, %338, %21, %16, %32, %29
  %348 = phi i64 [ 0, %16 ], [ 0, %21 ], [ %31, %29 ], [ 0, %32 ], [ 0, %275 ], [ 0, %338 ], [ %344, %343 ], [ 0, %297 ], [ 0, %209 ]
  %349 = inttoptr i64 %348 to i64*
  ret i64* %349
}

declare void @_ZN2v88internal6Module32RecordErrorUsingPendingExceptionEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule29AsyncModuleExecutionFulfilledEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Zone", align 8
  %4 = alloca %"class.v8::internal::ZoneSet", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, -2
  %10 = icmp eq i32 %9, 10
  br i1 %10, label %12, label %11, !prof !4

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

12:                                               ; preds = %2
  %13 = add i64 %5, 67
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 2
  %17 = add nuw nsw i32 %16, 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 130
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %12
  store i32 2, i32* %18, align 4
  %22 = load i64, i64* %1, align 8
  %23 = add i64 %22, 67
  %24 = inttoptr i64 %23 to i32*
  br label %25

25:                                               ; preds = %12, %21
  %26 = phi i32* [ %14, %12 ], [ %24, %21 ]
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 2
  %29 = or i32 %28, 4
  store atomic volatile i32 %29, i32* %26 monotonic, align 4
  %30 = load i64, i64* %1, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %34, %39
  br i1 %40, label %65, label %41

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %43 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %42, align 8
  %44 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %43, i64 %36) #11
  br label %60

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i64* [ %54, %53 ], [ %49, %47 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %48, align 8
  store i64 %36, i64* %56, align 8
  br label %60

60:                                               ; preds = %45, %55
  %61 = phi i64* [ %46, %45 ], [ %56, %55 ]
  %62 = tail call i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %61, i64* %37) #11
  %63 = icmp eq i64* %62, null
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %60
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

65:                                               ; preds = %60, %25
  %66 = bitcast %"class.v8::internal::Zone"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %68 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %67, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %3, %"class.v8::internal::AccountingAllocator"* %68, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__._ZN2v88internal16SourceTextModule29AsyncModuleExecutionFulfilledEPNS0_7IsolateENS0_6HandleIS1_EE, i64 0, i64 0), i1 zeroext false) #11
  %69 = bitcast %"class.v8::internal::ZoneSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  %70 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %71 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 1
  %73 = bitcast %"struct.std::__1::__compressed_pair_elem.1259"* %72 to i64*
  %74 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::__compressed_pair.1258"* %74 to i64*
  store i64 0, i64* %75, align 8
  store i64 %70, i64* %73, align 8
  %76 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %71, align 8
  call void @_ZN2v88internal16SourceTextModule28GatherAsyncParentCompletionsEPNS0_7IsolateEPNS0_4ZoneENS0_6HandleIS1_EEPNS0_7ZoneSetIS7_NS1_29AsyncEvaluatingOrdinalCompareEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* nonnull %3, i64* %1, %"class.v8::internal::ZoneSet"* nonnull %4)
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %78, %77
  br i1 %79, label %86, label %80

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %90

86:                                               ; preds = %204, %65
  %87 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::__tree_end_node"* %77 to %"class.std::__1::__tree_node"**
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %88, align 8
  call void @_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1257"* nonnull %87, %"class.std::__1::__tree_node"* %89) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #11
  ret void

90:                                               ; preds = %80, %204
  %91 = phi %"class.std::__1::__tree_end_node"* [ %78, %80 ], [ %205, %204 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 4
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to i64**
  %94 = load i64*, i64** %93, align 8
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 67
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp ugt i32 %98, 7
  br i1 %99, label %100, label %176

100:                                              ; preds = %90
  %101 = and i32 %98, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  call void @_ZN2v88internal16SourceTextModule18ExecuteAsyncModuleEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %94)
  br label %176

104:                                              ; preds = %100
  %105 = call i64* @_ZN2v88internal16SourceTextModule13ExecuteModuleEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %94)
  %106 = icmp eq i64* %105, null
  br i1 %106, label %107, label %127

107:                                              ; preds = %104
  %108 = load i64, i64* %84, align 8
  %109 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %81, align 8
  %110 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %109, i64 %108) #11
  br label %124

113:                                              ; preds = %107
  %114 = load i64*, i64** %82, align 8
  %115 = load i64*, i64** %83, align 8
  %116 = icmp eq i64* %114, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %119

119:                                              ; preds = %117, %113
  %120 = phi i64* [ %118, %117 ], [ %114, %113 ]
  %121 = ptrtoint i64* %120 to i64
  %122 = add i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  store i64* %123, i64** %82, align 8
  store i64 %108, i64* %120, align 8
  br label %124

124:                                              ; preds = %111, %119
  %125 = phi i64* [ %112, %111 ], [ %120, %119 ]
  %126 = load i64, i64* %85, align 8
  store i64 %126, i64* %84, align 8
  call void @_ZN2v88internal16SourceTextModule28AsyncModuleExecutionRejectedEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %94, i64* %125)
  br label %176

127:                                              ; preds = %104
  %128 = load i64, i64* %94, align 8
  %129 = add i64 %128, 67
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = lshr i32 %131, 2
  %133 = add nuw nsw i32 %132, 1
  %134 = load i32, i32* %18, align 4
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %136, label %140

136:                                              ; preds = %127
  store i32 2, i32* %18, align 4
  %137 = load i64, i64* %94, align 8
  %138 = add i64 %137, 67
  %139 = inttoptr i64 %138 to i32*
  br label %140

140:                                              ; preds = %127, %136
  %141 = phi i32* [ %130, %127 ], [ %139, %136 ]
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 2
  %144 = or i32 %143, 4
  store atomic volatile i32 %144, i32* %141 monotonic, align 4
  %145 = load i64, i64* %94, align 8
  %146 = and i64 %145, -4294967296
  %147 = add i64 %145, 23
  %148 = inttoptr i64 %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %146, %150
  %152 = load i64, i64* %37, align 8
  %153 = trunc i64 %152 to i32
  %154 = icmp eq i32 %149, %153
  br i1 %154, label %176, label %155

155:                                              ; preds = %140
  %156 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %81, align 8
  %157 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %156, i64 %151) #11
  br label %171

160:                                              ; preds = %155
  %161 = load i64*, i64** %82, align 8
  %162 = load i64*, i64** %83, align 8
  %163 = icmp eq i64* %161, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  %165 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %166

166:                                              ; preds = %164, %160
  %167 = phi i64* [ %165, %164 ], [ %161, %160 ]
  %168 = ptrtoint i64* %167 to i64
  %169 = add i64 %168, 8
  %170 = inttoptr i64 %169 to i64*
  store i64* %170, i64** %82, align 8
  store i64 %151, i64* %167, align 8
  br label %171

171:                                              ; preds = %158, %166
  %172 = phi i64* [ %159, %158 ], [ %167, %166 ]
  %173 = call i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %172, i64* %37) #11
  %174 = icmp eq i64* %173, null
  br i1 %174, label %175, label %176, !prof !2

175:                                              ; preds = %171
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

176:                                              ; preds = %124, %140, %171, %90, %103
  %177 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 1, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node_base"* %178, null
  br i1 %179, label %180, label %188

180:                                              ; preds = %176
  %181 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::__tree_node_base"*
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 2
  %183 = bitcast %"class.std::__1::__tree_end_node"* %182 to %"class.std::__1::__tree_end_node"**
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %181
  br i1 %187, label %204, label %195

188:                                              ; preds = %176, %188
  %189 = phi %"class.std::__1::__tree_node_base"* [ %191, %188 ], [ %178, %176 ]
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %188

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  br label %204

195:                                              ; preds = %180, %195
  %196 = phi %"class.std::__1::__tree_end_node"** [ %199, %195 ], [ %183, %180 ]
  %197 = bitcast %"class.std::__1::__tree_end_node"** %196 to %"class.std::__1::__tree_node_base"**
  %198 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %198, i64 0, i32 2
  %200 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 0, i32 0
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, %198
  br i1 %203, label %204, label %195

204:                                              ; preds = %195, %180, %193
  %205 = phi %"class.std::__1::__tree_end_node"* [ %194, %193 ], [ %184, %180 ], [ %200, %195 ]
  %206 = icmp eq %"class.std::__1::__tree_end_node"* %205, %77
  br i1 %206, label %86, label %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule18ExecuteAsyncModuleEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.v8::internal::Handle.1139"], align 16
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = and i32 %8, -2
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 130
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %13, align 4
  %16 = icmp ult i32 %14, 1073741823
  br i1 %16, label %18, label %17, !prof !4

17:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14, i64 0, i64 0)) #10
  unreachable

18:                                               ; preds = %12
  %19 = add i64 %4, 67
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 2
  %23 = shl i32 %14, 2
  %24 = or i32 %22, %23
  store atomic volatile i32 %24, i32* %20 monotonic, align 4
  %25 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %26 = tail call i64* @_ZN2v88internal7Factory12NewJSPromiseEv(%"class.v8::internal::Factory"* %25) #11
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, -4294967296
  %30 = add i64 %28, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = add i64 %34, 19
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %29, %38
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %41 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %42 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %18
  %44 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %41, i64 %39) #11
  %45 = load i64, i64* %44, align 8
  br label %59

46:                                               ; preds = %18
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %39, i64* %55, align 8
  br label %59

59:                                               ; preds = %43, %54
  %60 = phi i64 [ %45, %43 ], [ %39, %54 ]
  %61 = and i64 %60, -4294967296
  %62 = add i64 %60, 231
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %68 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %59
  %70 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %67, i64 %66) #11
  br label %84

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %73, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i64* [ %78, %77 ], [ %73, %71 ]
  %81 = ptrtoint i64* %80 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  store i64* %83, i64** %72, align 8
  store i64 %66, i64* %80, align 8
  br label %84

84:                                               ; preds = %69, %79
  %85 = phi i64* [ %70, %69 ], [ %80, %79 ]
  %86 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 0, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #12
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %97

88:                                               ; preds = %84
  %89 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #11
  %90 = bitcast %"class.v8::Platform"* %89 to void (%"class.v8::Platform"*)***
  %91 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %91, i64 3
  %93 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %92, align 8
  tail call void %93(%"class.v8::Platform"* %89) #11
  %94 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 0, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #12
  %95 = icmp eq i8* %94, null
  br i1 %95, label %96, label %97

96:                                               ; preds = %88
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #10
  unreachable

97:                                               ; preds = %88, %84
  %98 = phi i8* [ %86, %84 ], [ %94, %88 ]
  %99 = bitcast i8* %98 to %"class.v8::internal::Handle.1139"*
  %100 = tail call i64* @_ZN2v88internal7Factory18NewJSBoundFunctionENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6ObjectEEENS0_6VectorIS6_EE(%"class.v8::internal::Factory"* %25, i64* %85, i64* %1, %"class.v8::internal::Handle.1139"* %99, i64 0) #11
  %101 = icmp eq i64* %100, null
  br i1 %101, label %102, label %103, !prof !2

102:                                              ; preds = %97
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

103:                                              ; preds = %97
  %104 = load i64, i64* %27, align 8
  %105 = and i64 %104, -4294967296
  %106 = add i64 %104, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %105, %109
  %111 = add i64 %110, 19
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %105, %114
  %116 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %117 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %103
  %119 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %116, i64 %115) #11
  %120 = load i64, i64* %119, align 8
  br label %134

121:                                              ; preds = %103
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %125 = load i64*, i64** %124, align 8
  %126 = icmp eq i64* %123, %125
  br i1 %126, label %127, label %129

127:                                              ; preds = %121
  %128 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %129

129:                                              ; preds = %127, %121
  %130 = phi i64* [ %128, %127 ], [ %123, %121 ]
  %131 = ptrtoint i64* %130 to i64
  %132 = add i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  store i64* %133, i64** %122, align 8
  store i64 %115, i64* %130, align 8
  br label %134

134:                                              ; preds = %118, %129
  %135 = phi i64 [ %120, %118 ], [ %115, %129 ]
  %136 = and i64 %135, -4294967296
  %137 = add i64 %135, 235
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %136, %140
  %142 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %143 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %142, i64 %141) #11
  br label %159

146:                                              ; preds = %134
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %148 = load i64*, i64** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %148, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %146
  %153 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %154

154:                                              ; preds = %152, %146
  %155 = phi i64* [ %153, %152 ], [ %148, %146 ]
  %156 = ptrtoint i64* %155 to i64
  %157 = add i64 %156, 8
  %158 = inttoptr i64 %157 to i64*
  store i64* %158, i64** %147, align 8
  store i64 %141, i64* %155, align 8
  br label %159

159:                                              ; preds = %144, %154
  %160 = phi i64* [ %145, %144 ], [ %155, %154 ]
  %161 = tail call i64* @_ZN2v88internal7Factory18NewJSBoundFunctionENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6ObjectEEENS0_6VectorIS6_EE(%"class.v8::internal::Factory"* %25, i64* %160, i64* %1, %"class.v8::internal::Handle.1139"* %99, i64 0) #11
  %162 = icmp eq i64* %161, null
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %159
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

164:                                              ; preds = %159
  %165 = bitcast [2 x %"class.v8::internal::Handle.1139"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #11
  %166 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1139"], [2 x %"class.v8::internal::Handle.1139"]* %3, i64 0, i64 0
  %167 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1139"], [2 x %"class.v8::internal::Handle.1139"]* %3, i64 0, i64 0, i32 0, i32 0
  store i64* %100, i64** %167, align 16
  %168 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1139"], [2 x %"class.v8::internal::Handle.1139"]* %3, i64 0, i64 1, i32 0, i32 0
  store i64* %161, i64** %168, align 8
  %169 = load i64, i64* %27, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 19
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %170, %179
  %181 = add i64 %180, 63
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %170, %184
  %186 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %187 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %164
  %189 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %186, i64 %185) #11
  br label %203

190:                                              ; preds = %164
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %192 = load i64*, i64** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %194 = load i64*, i64** %193, align 8
  %195 = icmp eq i64* %192, %194
  br i1 %195, label %196, label %198

196:                                              ; preds = %190
  %197 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %198

198:                                              ; preds = %196, %190
  %199 = phi i64* [ %197, %196 ], [ %192, %190 ]
  %200 = ptrtoint i64* %199 to i64
  %201 = add i64 %200, 8
  %202 = inttoptr i64 %201 to i64*
  store i64* %202, i64** %191, align 8
  store i64 %185, i64* %199, align 8
  br label %203

203:                                              ; preds = %188, %198
  %204 = phi i64* [ %189, %188 ], [ %199, %198 ]
  %205 = call i64* @_ZN2v88internal9Execution11CallBuiltinEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEEiPS8_(%"class.v8::internal::Isolate"* %0, i64* %204, i64* %26, i32 2, %"class.v8::internal::Handle.1139"* nonnull %166) #11
  %206 = icmp eq i64* %205, null
  br i1 %206, label %207, label %208, !prof !2

207:                                              ; preds = %203
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

208:                                              ; preds = %203
  %209 = call i64* @_ZN2v88internal16SourceTextModule23InnerExecuteAsyncModuleEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_9JSPromiseEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %26)
  %210 = icmp eq i64* %209, null
  br i1 %210, label %211, label %212, !prof !2

211:                                              ; preds = %208
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #10
  unreachable

212:                                              ; preds = %208
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #11
  call void @_ZdaPv(i8* nonnull %98) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule13ExecuteModuleEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 27
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %9) #11
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi i64* [ %22, %21 ], [ %17, %15 ]
  %25 = ptrtoint i64* %24 to i64
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %26 to i64*
  store i64* %27, i64** %16, align 8
  store i64 %9, i64* %24, align 8
  br label %28

28:                                               ; preds = %13, %23
  %29 = phi i64* [ %14, %13 ], [ %24, %23 ]
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, -4294967296
  %33 = add i64 %31, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = add i64 %37, 19
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %32, %41
  %43 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %44 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %28
  %46 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %43, i64 %42) #11
  %47 = load i64, i64* %46, align 8
  br label %61

48:                                               ; preds = %28
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %42, i64* %57, align 8
  br label %61

61:                                               ; preds = %45, %56
  %62 = phi i64 [ %47, %45 ], [ %42, %56 ]
  %63 = and i64 %62, -4294967296
  %64 = add i64 %62, 31
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %70 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %61
  %72 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %69, i64 %68) #11
  br label %86

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %75, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %73
  %80 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %81

81:                                               ; preds = %79, %73
  %82 = phi i64* [ %80, %79 ], [ %75, %73 ]
  %83 = ptrtoint i64* %82 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  store i64* %85, i64** %74, align 8
  store i64 %68, i64* %82, align 8
  br label %86

86:                                               ; preds = %71, %81
  %87 = phi i64* [ %72, %71 ], [ %82, %81 ]
  %88 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !3
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = tail call i64* @_ZN2v88internal9Execution7TryCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_NS1_15MessageHandlingEPNS0_11MaybeHandleIS5_EEb(%"class.v8::internal::Isolate"* %0, i64* %87, i64* %29, i32 0, %"class.v8::internal::Handle.1139"* null, i32 1, %"class.v8::internal::MaybeHandle.1198"* null, i1 zeroext false) #11
  %92 = icmp eq i64* %91, null
  br i1 %92, label %122, label %96

93:                                               ; preds = %86
  %94 = tail call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* %87, i64* %29, i32 0, %"class.v8::internal::Handle.1139"* null) #11
  %95 = icmp eq i64* %94, null
  br i1 %95, label %122, label %96

96:                                               ; preds = %93, %90
  %97 = phi i64* [ %91, %90 ], [ %94, %93 ]
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, -4294967296
  %100 = add i64 %98, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %106 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %96
  %108 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %105, i64 %104) #11
  br label %122

109:                                              ; preds = %96
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %104, i64* %118, align 8
  br label %122

122:                                              ; preds = %117, %107, %93, %90
  %123 = phi i64* [ null, %90 ], [ null, %93 ], [ %108, %107 ], [ %118, %117 ]
  ret i64* %123
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule28AsyncModuleExecutionRejectedEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = add nsw i32 %8, -5
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

12:                                               ; preds = %3
  %13 = add i64 %4, 67
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, 7
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = icmp eq i32 %8, 6
  br i1 %18, label %122, label %19, !prof !4

19:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #10
  unreachable

20:                                               ; preds = %12
  tail call void @_ZN2v88internal6Module11RecordErrorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2) #11
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 67
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 2
  %26 = add nuw nsw i32 %25, 1
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 130
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  store i32 2, i32* %27, align 4
  %31 = load i64, i64* %1, align 8
  %32 = add i64 %31, 67
  %33 = inttoptr i64 %32 to i32*
  br label %34

34:                                               ; preds = %20, %30
  %35 = phi i32* [ %23, %20 ], [ %33, %30 ]
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 2
  %38 = or i32 %37, 4
  store atomic volatile i32 %38, i32* %35 monotonic, align 4
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %42

42:                                               ; preds = %100, %34
  %43 = phi i64 [ %102, %100 ], [ 0, %34 ]
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 51
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = add i64 %50, 3
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp ult i32 %53, 2
  br i1 %54, label %60, label %55

55:                                               ; preds = %42
  %56 = add i64 %50, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = ashr i32 %58, 1
  br label %60

60:                                               ; preds = %42, %55
  %61 = phi i32 [ %59, %55 ], [ 0, %42 ]
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %43, %62
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = add i64 %44, 23
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %45, %68
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %67, %72
  br i1 %73, label %122, label %103

74:                                               ; preds = %60
  %75 = trunc i64 %43 to i32
  %76 = shl i32 %75, 2
  %77 = add i32 %76, 4
  %78 = sext i32 %77 to i64
  %79 = add i64 %50, 7
  %80 = add i64 %79, %78
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %45, %83
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %39, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %84) #11
  br label %100

89:                                               ; preds = %74
  %90 = load i64*, i64** %40, align 8
  %91 = load i64*, i64** %41, align 8
  %92 = icmp eq i64* %90, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %95

95:                                               ; preds = %93, %89
  %96 = phi i64* [ %94, %93 ], [ %90, %89 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = add i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  store i64* %99, i64** %40, align 8
  store i64 %84, i64* %96, align 8
  br label %100

100:                                              ; preds = %87, %95
  %101 = phi i64* [ %88, %87 ], [ %96, %95 ]
  tail call void @_ZN2v88internal16SourceTextModule28AsyncModuleExecutionRejectedEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %101, i64* %2)
  %102 = add nuw nsw i64 %43, 1
  br label %42

103:                                              ; preds = %64
  %104 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %39, align 8
  %105 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %104, i64 %69) #11
  br label %119

108:                                              ; preds = %103
  %109 = load i64*, i64** %40, align 8
  %110 = load i64*, i64** %41, align 8
  %111 = icmp eq i64* %109, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %114

114:                                              ; preds = %112, %108
  %115 = phi i64* [ %113, %112 ], [ %109, %108 ]
  %116 = ptrtoint i64* %115 to i64
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %117 to i64*
  store i64* %118, i64** %40, align 8
  store i64 %69, i64* %115, align 8
  br label %119

119:                                              ; preds = %106, %114
  %120 = phi i64* [ %107, %106 ], [ %115, %114 ]
  %121 = tail call i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64* %120, i64* %2, i1 zeroext true) #11
  br label %122

122:                                              ; preds = %17, %64, %119
  ret void
}

declare void @_ZN2v88internal6Module11RecordErrorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory18NewJSBoundFunctionENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6ObjectEEENS0_6VectorIS6_EE(%"class.v8::internal::Factory"*, i64*, i64*, %"class.v8::internal::Handle.1139"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Execution11CallBuiltinEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEEiPS8_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1139"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16SourceTextModule23InnerExecuteAsyncModuleEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_9JSPromiseEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 27
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #11
  %16 = load i64, i64* %15, align 8
  br label %30

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 %10, i64* %26, align 8
  br label %30

30:                                               ; preds = %14, %25
  %31 = phi i64 [ %16, %14 ], [ %10, %25 ]
  %32 = phi i64* [ %15, %14 ], [ %26, %25 ]
  %33 = load i64, i64* %2, align 8
  %34 = add i64 %31, 39
  %35 = inttoptr i64 %34 to i32*
  %36 = trunc i64 %33 to i32
  store atomic volatile i32 %36, i32* %35 monotonic, align 4
  %37 = and i64 %33, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %50, label %39

39:                                               ; preds = %30
  %40 = and i64 %31, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 262144
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = or i64 %40, 16
  %48 = inttoptr i64 %47 to %"class.v8::internal::Heap"**
  %49 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %48, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %49, i64 %31, i64 %34, i64 %33) #11
  br label %50

50:                                               ; preds = %46, %39, %30
  %51 = and i64 %33, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 24
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %50
  %58 = and i64 %31, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %34, i64 %33) #11
  br label %65

65:                                               ; preds = %50, %57, %64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = add i64 %73, 19
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %68, %77
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %65
  %82 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %78) #11
  %83 = load i64, i64* %82, align 8
  br label %97

84:                                               ; preds = %65
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %88 = load i64*, i64** %87, align 8
  %89 = icmp eq i64* %86, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i64* [ %91, %90 ], [ %86, %84 ]
  %94 = ptrtoint i64* %93 to i64
  %95 = add i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  store i64* %96, i64** %85, align 8
  store i64 %78, i64* %93, align 8
  br label %97

97:                                               ; preds = %81, %92
  %98 = phi i64 [ %83, %81 ], [ %78, %92 ]
  %99 = and i64 %98, -4294967296
  %100 = add i64 %98, 35
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %106 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %97
  %108 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %105, i64 %104) #11
  br label %122

109:                                              ; preds = %97
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %104, i64* %118, align 8
  br label %122

122:                                              ; preds = %107, %117
  %123 = phi i64* [ %108, %107 ], [ %118, %117 ]
  %124 = tail call i64* @_ZN2v88internal9Execution7TryCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_NS1_15MessageHandlingEPNS0_11MaybeHandleIS5_EEb(%"class.v8::internal::Isolate"* %0, i64* %123, i64* %32, i32 0, %"class.v8::internal::Handle.1139"* null, i32 1, %"class.v8::internal::MaybeHandle.1198"* null, i1 zeroext false) #11
  ret i64* %124
}

declare i64* @_ZN2v88internal9Execution7TryCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_NS1_15MessageHandlingEPNS0_11MaybeHandleIS5_EEb(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1139"*, i32, %"class.v8::internal::MaybeHandle.1198"*, i1 zeroext) local_unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9ArrayList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16SourceTextModule20AddAsyncParentModuleEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 51
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #11
  br label %29

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = tail call i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %30, i64* %2) #11
  %32 = load i64, i64* %1, align 8
  %33 = load i64, i64* %31, align 8
  %34 = add i64 %32, 51
  %35 = inttoptr i64 %34 to i32*
  %36 = trunc i64 %33 to i32
  store atomic volatile i32 %36, i32* %35 monotonic, align 4
  %37 = and i64 %33, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %50, label %39

39:                                               ; preds = %29
  %40 = and i64 %32, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 262144
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = or i64 %40, 16
  %48 = inttoptr i64 %47 to %"class.v8::internal::Heap"**
  %49 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %48, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %49, i64 %32, i64 %34, i64 %33) #11
  br label %50

50:                                               ; preds = %46, %39, %29
  %51 = and i64 %33, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 24
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %50
  %58 = and i64 %32, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %32, i64 %34, i64 %33) #11
  br label %65

65:                                               ; preds = %50, %57, %64
  ret void
}

declare i64* @_ZN2v88internal6Module8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SourceTextModule5ResetEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 31
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = ashr i32 %13, 1
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %14, i8 zeroext 0) #11
  %16 = load i64, i64* %1, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 35
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 3
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 1
  %27 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %26, i8 zeroext 0) #11
  %28 = load i64, i64* %1, align 8
  %29 = and i64 %28, -4294967296
  %30 = add i64 %28, 39
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = add i64 %34, 3
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %37, 1
  %39 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %38, i8 zeroext 0) #11
  %40 = load i64, i64* %1, align 8
  %41 = add i64 %40, 11
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, -2
  %45 = icmp eq i32 %44, 4
  br i1 %45, label %46, label %86

46:                                               ; preds = %2
  %47 = and i64 %40, -4294967296
  %48 = add i64 %40, 27
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 11
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %47, %56
  store atomic volatile i32 %55, i32* %49 monotonic, align 4
  %58 = and i64 %56, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %71, label %60

60:                                               ; preds = %46
  %61 = and i64 %40, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 262144
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = or i64 %61, 16
  %69 = inttoptr i64 %68 to %"class.v8::internal::Heap"**
  %70 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %69, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %70, i64 %40, i64 %48, i64 %57) #11
  br label %71

71:                                               ; preds = %67, %60, %46
  %72 = and i64 %57, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %71
  %79 = and i64 %40, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 24
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %78
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %40, i64 %48, i64 %57) #11
  br label %86

86:                                               ; preds = %85, %78, %71, %2
  %87 = load i64, i64* %1, align 8
  %88 = load i64, i64* %15, align 8
  %89 = add i64 %87, 31
  %90 = inttoptr i64 %89 to i32*
  %91 = trunc i64 %88 to i32
  store atomic volatile i32 %91, i32* %90 monotonic, align 4
  %92 = and i64 %88, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %86
  %95 = and i64 %87, -262144
  %96 = or i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 262144
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %94
  %102 = or i64 %95, 16
  %103 = inttoptr i64 %102 to %"class.v8::internal::Heap"**
  %104 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %103, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %104, i64 %87, i64 %89, i64 %88) #11
  br label %105

105:                                              ; preds = %101, %94, %86
  %106 = and i64 %88, -262144
  %107 = or i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 24
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %105
  %113 = and i64 %87, -262144
  %114 = or i64 %113, 8
  %115 = inttoptr i64 %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 24
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %87, i64 %89, i64 %88) #11
  br label %120

120:                                              ; preds = %105, %112, %119
  %121 = load i64, i64* %1, align 8
  %122 = load i64, i64* %27, align 8
  %123 = add i64 %121, 35
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %122 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  %126 = and i64 %122, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %120
  %129 = and i64 %121, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 262144
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %128
  %136 = or i64 %129, 16
  %137 = inttoptr i64 %136 to %"class.v8::internal::Heap"**
  %138 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %137, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %138, i64 %121, i64 %123, i64 %122) #11
  br label %139

139:                                              ; preds = %135, %128, %120
  %140 = and i64 %122, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 24
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %154, label %146

146:                                              ; preds = %139
  %147 = and i64 %121, -262144
  %148 = or i64 %147, 8
  %149 = inttoptr i64 %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, 24
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %146
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %123, i64 %122) #11
  br label %154

154:                                              ; preds = %139, %146, %153
  %155 = load i64, i64* %1, align 8
  %156 = load i64, i64* %39, align 8
  %157 = add i64 %155, 39
  %158 = inttoptr i64 %157 to i32*
  %159 = trunc i64 %156 to i32
  store atomic volatile i32 %159, i32* %158 monotonic, align 4
  %160 = and i64 %156, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %173, label %162

162:                                              ; preds = %154
  %163 = and i64 %155, -262144
  %164 = or i64 %163, 8
  %165 = inttoptr i64 %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 262144
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %173, label %169

169:                                              ; preds = %162
  %170 = or i64 %163, 16
  %171 = inttoptr i64 %170 to %"class.v8::internal::Heap"**
  %172 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %171, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %172, i64 %155, i64 %157, i64 %156) #11
  br label %173

173:                                              ; preds = %169, %162, %154
  %174 = and i64 %156, -262144
  %175 = or i64 %174, 8
  %176 = inttoptr i64 %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, 24
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %173
  %181 = and i64 %155, -262144
  %182 = or i64 %181, 8
  %183 = inttoptr i64 %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %184, 24
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %180
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %155, i64 %157, i64 %156) #11
  br label %188

188:                                              ; preds = %173, %180, %187
  %189 = load i64, i64* %1, align 8
  %190 = add i64 %189, 55
  %191 = inttoptr i64 %190 to i32*
  store atomic volatile i32 -2, i32* %191 monotonic, align 4
  %192 = load i64, i64* %1, align 8
  %193 = add i64 %192, 59
  %194 = inttoptr i64 %193 to i32*
  store atomic volatile i32 -2, i32* %194 monotonic, align 4
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #4

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #4

declare i64 @_ZNK2v88internal9ScopeInfo20ModuleDescriptorInfoEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1144"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1144"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1144"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1144"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %194, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #11
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1148"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"** %20, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !10

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %45, null
  br i1 %46, label %196, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1148"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1148"* %43, %"struct.std::__1::__hash_node_base.1148"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %82, null
  br i1 %83, label %196, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %142

86:                                               ; preds = %84, %133
  %87 = phi %"struct.std::__1::__hash_node_base.1148"* [ %137, %133 ], [ %82, %84 ]
  %88 = phi i64 [ %135, %133 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1148"* [ %134, %133 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1148"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %133, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %102, null
  br i1 %103, label %132, label %139

104:                                              ; preds = %139, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1148"* [ %107, %109 ], [ %87, %139 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %107, i64 2
  %111 = load i64*, i64** %141, align 8
  %112 = bitcast %"struct.std::__1::__hash_node_base.1148"* %110 to i64**
  %113 = load i64*, i64** %112, align 8
  %114 = load i64, i64* %111, align 8
  %115 = load i64, i64* %113, align 8
  %116 = trunc i64 %114 to i32
  %117 = trunc i64 %115 to i32
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %104, label %119

119:                                              ; preds = %109, %104
  %120 = ptrtoint %"struct.std::__1::__hash_node_base.1148"* %107 to i64
  %121 = bitcast %"struct.std::__1::__hash_node_base.1148"* %105 to i64*
  %122 = bitcast %"struct.std::__1::__hash_node_base.1148"* %89 to i64*
  store i64 %120, i64* %122, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %123, i64 %97
  %125 = bitcast %"struct.std::__1::__hash_node_base.1148"** %124 to i64**
  %126 = load i64*, i64** %125, align 8
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  %128 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %128, i64 %97
  %130 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %130, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* %87, %"struct.std::__1::__hash_node_base.1148"** %131, align 8
  br label %133

132:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1148"* %89, %"struct.std::__1::__hash_node_base.1148"** %101, align 8
  br label %133

133:                                              ; preds = %132, %119, %96
  %134 = phi %"struct.std::__1::__hash_node_base.1148"* [ %87, %132 ], [ %89, %119 ], [ %87, %96 ]
  %135 = phi i64 [ %97, %132 ], [ %88, %119 ], [ %88, %96 ]
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %134, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %137, null
  br i1 %138, label %196, label %86

139:                                              ; preds = %99
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %87, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base.1148"* %140 to i64**
  br label %104

142:                                              ; preds = %84, %188
  %143 = phi %"struct.std::__1::__hash_node_base.1148"* [ %192, %188 ], [ %82, %84 ]
  %144 = phi i64 [ %190, %188 ], [ %78, %84 ]
  %145 = phi %"struct.std::__1::__hash_node_base.1148"* [ %189, %188 ], [ %45, %84 ]
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base.1148"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, %85
  %150 = icmp eq i64 %149, %144
  br i1 %150, label %188, label %151

151:                                              ; preds = %142
  %152 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %152, i64 %149
  %154 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %143, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1148"* %157 to i64**
  br label %160

159:                                              ; preds = %151
  store %"struct.std::__1::__hash_node_base.1148"* %145, %"struct.std::__1::__hash_node_base.1148"** %153, align 8
  br label %188

160:                                              ; preds = %156, %165
  %161 = phi %"struct.std::__1::__hash_node_base.1148"* [ %163, %165 ], [ %143, %156 ]
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %161, i64 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %162, align 8
  %164 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %163, i64 2
  %167 = load i64*, i64** %158, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.1148"* %166 to i64**
  %169 = load i64*, i64** %168, align 8
  %170 = load i64, i64* %167, align 8
  %171 = load i64, i64* %169, align 8
  %172 = trunc i64 %170 to i32
  %173 = trunc i64 %171 to i32
  %174 = icmp eq i32 %172, %173
  br i1 %174, label %160, label %175

175:                                              ; preds = %160, %165
  %176 = ptrtoint %"struct.std::__1::__hash_node_base.1148"* %163 to i64
  %177 = bitcast %"struct.std::__1::__hash_node_base.1148"* %161 to i64*
  %178 = bitcast %"struct.std::__1::__hash_node_base.1148"* %145 to i64*
  store i64 %176, i64* %178, align 8
  %179 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %179, i64 %149
  %181 = bitcast %"struct.std::__1::__hash_node_base.1148"** %180 to i64**
  %182 = load i64*, i64** %181, align 8
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %177, align 8
  %184 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %21, align 8
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %184, i64 %149
  %186 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %185, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %186, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* %143, %"struct.std::__1::__hash_node_base.1148"** %187, align 8
  br label %188

188:                                              ; preds = %142, %175, %159
  %189 = phi %"struct.std::__1::__hash_node_base.1148"* [ %143, %159 ], [ %145, %175 ], [ %143, %142 ]
  %190 = phi i64 [ %149, %159 ], [ %144, %175 ], [ %144, %142 ]
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %189, i64 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %192, null
  br i1 %193, label %196, label %142

194:                                              ; preds = %2
  %195 = bitcast %"class.std::__1::__hash_table.1144"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 16, i1 false)
  br label %196

196:                                              ; preds = %188, %133, %77, %42, %194
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1229"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1229"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1229"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1229"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %266, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = shl i64 %1, 3
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ugt i64 %8, %13
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %5
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 %8) #11
  br label %19

17:                                               ; preds = %5
  %18 = add i64 %10, %8
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to %"struct.std::__1::__hash_node_base.1233"**
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"** %21, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %23, align 8
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %21, align 8
  %24 = icmp eq i64 %1, 1
  br i1 %24, label %43, label %25

25:                                               ; preds = %19
  %26 = add i64 %1, -1
  %27 = add i64 %1, -2
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub i64 %26, %28
  br label %48

32:                                               ; preds = %48, %25
  %33 = phi i64 [ 1, %25 ], [ %62, %48 ]
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %28, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !12

43:                                               ; preds = %32, %35, %19
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %46, null
  br i1 %47, label %268, label %65

48:                                               ; preds = %48, %30
  %49 = phi i64 [ 1, %30 ], [ %62, %48 ]
  %50 = phi i64 [ %31, %30 ], [ %63, %48 ]
  %51 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %52, align 8
  %53 = add nuw nsw i64 %49, 1
  %54 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %54, i64 %53
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %55, align 8
  %56 = add nuw nsw i64 %49, 2
  %57 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %58, align 8
  %59 = add nuw i64 %49, 3
  %60 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %60, i64 %59
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %61, align 8
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %32, label %48

65:                                               ; preds = %43
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %46, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base.1233"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %70 = icmp ugt i64 %69, 1
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = add i64 %1, -1
  %73 = and i64 %68, %72
  br label %78

74:                                               ; preds = %65
  %75 = icmp ult i64 %68, %1
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = urem i64 %68, %1
  br label %78

78:                                               ; preds = %71, %74, %76
  %79 = phi i64 [ %73, %71 ], [ %77, %76 ], [ %68, %74 ]
  %80 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %80, i64 %79
  store %"struct.std::__1::__hash_node_base.1233"* %44, %"struct.std::__1::__hash_node_base.1233"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %46, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %83, null
  br i1 %84, label %268, label %85

85:                                               ; preds = %78
  %86 = add i64 %1, -1
  %87 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3 to i8*
  %88 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3, i64 0, i32 0
  br i1 %70, label %90, label %180

90:                                               ; preds = %85, %167
  %91 = phi %"struct.std::__1::__hash_node_base.1233"* [ %171, %167 ], [ %83, %85 ]
  %92 = phi i64 [ %169, %167 ], [ %79, %85 ]
  %93 = phi %"struct.std::__1::__hash_node_base.1233"* [ %168, %167 ], [ %46, %85 ]
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %91, i64 1
  %95 = bitcast %"struct.std::__1::__hash_node_base.1233"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = icmp ult i64 %96, %1
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = urem i64 %96, %1
  br label %100

100:                                              ; preds = %98, %90
  %101 = phi i64 [ %99, %98 ], [ %96, %90 ]
  %102 = icmp eq i64 %101, %92
  br i1 %102, label %167, label %103

103:                                              ; preds = %100
  %104 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %104, i64 %101
  %106 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %106, null
  br i1 %107, label %166, label %173

108:                                              ; preds = %177, %147
  %109 = phi %"struct.std::__1::__hash_node_base.1233"* [ %175, %177 ], [ %150, %147 ]
  %110 = phi %"struct.std::__1::__hash_node_base.1233"** [ %174, %177 ], [ %149, %147 ]
  %111 = phi %"struct.std::__1::__hash_node_base.1233"* [ %91, %177 ], [ %148, %147 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %109, i64 2
  %113 = load i64*, i64** %179, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1233"* %112 to i64**
  %115 = load i64*, i64** %114, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %116 = load i64, i64* %113, align 8
  store i64 %116, i64* %88, align 8
  %117 = load i64, i64* %115, align 8
  %118 = trunc i64 %117 to i32
  %119 = trunc i64 %116 to i32
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %146, label %121

121:                                              ; preds = %108
  %122 = and i64 %116, -4294967296
  %123 = add i64 %116, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %122, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp ult i16 %130, 32
  br i1 %131, label %132, label %143

132:                                              ; preds = %121
  %133 = and i64 %117, -4294967296
  %134 = add i64 %117, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp ult i16 %141, 32
  br i1 %142, label %145, label %143

143:                                              ; preds = %132, %121
  %144 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %89, i64 %117) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br i1 %144, label %147, label %152

145:                                              ; preds = %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %152

146:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %147

147:                                              ; preds = %146, %143
  %148 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %110, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %148, i64 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %150, null
  br i1 %151, label %152, label %108

152:                                              ; preds = %147, %143, %173, %145
  %153 = phi %"struct.std::__1::__hash_node_base.1233"* [ %111, %145 ], [ %91, %173 ], [ %111, %143 ], [ %148, %147 ]
  %154 = bitcast %"struct.std::__1::__hash_node_base.1233"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.1233"* %93 to i64*
  store i64 %155, i64* %156, align 8
  %157 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %157, i64 %101
  %159 = bitcast %"struct.std::__1::__hash_node_base.1233"** %158 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %154, align 8
  %162 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %162, i64 %101
  %164 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %164, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"* %91, %"struct.std::__1::__hash_node_base.1233"** %165, align 8
  br label %167

166:                                              ; preds = %103
  store %"struct.std::__1::__hash_node_base.1233"* %93, %"struct.std::__1::__hash_node_base.1233"** %105, align 8
  br label %167

167:                                              ; preds = %166, %152, %100
  %168 = phi %"struct.std::__1::__hash_node_base.1233"* [ %91, %166 ], [ %93, %152 ], [ %91, %100 ]
  %169 = phi i64 [ %101, %166 ], [ %92, %152 ], [ %92, %100 ]
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %168, i64 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %171, null
  br i1 %172, label %268, label %90

173:                                              ; preds = %103
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %91, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %175, null
  br i1 %176, label %152, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %91, i64 2
  %179 = bitcast %"struct.std::__1::__hash_node_base.1233"* %178 to i64**
  br label %108

180:                                              ; preds = %85, %260
  %181 = phi %"struct.std::__1::__hash_node_base.1233"* [ %264, %260 ], [ %83, %85 ]
  %182 = phi i64 [ %262, %260 ], [ %79, %85 ]
  %183 = phi %"struct.std::__1::__hash_node_base.1233"* [ %261, %260 ], [ %46, %85 ]
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %181, i64 1
  %185 = bitcast %"struct.std::__1::__hash_node_base.1233"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, %86
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %260, label %189

189:                                              ; preds = %180
  %190 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %190, i64 %187
  %192 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %192, null
  br i1 %193, label %201, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %181, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %196, null
  br i1 %197, label %246, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %181, i64 2
  %200 = bitcast %"struct.std::__1::__hash_node_base.1233"* %199 to i64**
  br label %202

201:                                              ; preds = %189
  store %"struct.std::__1::__hash_node_base.1233"* %183, %"struct.std::__1::__hash_node_base.1233"** %191, align 8
  br label %260

202:                                              ; preds = %198, %241
  %203 = phi %"struct.std::__1::__hash_node_base.1233"* [ %196, %198 ], [ %244, %241 ]
  %204 = phi %"struct.std::__1::__hash_node_base.1233"** [ %195, %198 ], [ %243, %241 ]
  %205 = phi %"struct.std::__1::__hash_node_base.1233"* [ %181, %198 ], [ %242, %241 ]
  %206 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %203, i64 2
  %207 = load i64*, i64** %200, align 8
  %208 = bitcast %"struct.std::__1::__hash_node_base.1233"* %206 to i64**
  %209 = load i64*, i64** %208, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %210 = load i64, i64* %207, align 8
  store i64 %210, i64* %88, align 8
  %211 = load i64, i64* %209, align 8
  %212 = trunc i64 %211 to i32
  %213 = trunc i64 %210 to i32
  %214 = icmp eq i32 %212, %213
  br i1 %214, label %215, label %216

215:                                              ; preds = %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %241

216:                                              ; preds = %202
  %217 = and i64 %210, -4294967296
  %218 = add i64 %210, -1
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %217, %221
  %223 = add i64 %222, 7
  %224 = inttoptr i64 %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = icmp ult i16 %225, 32
  br i1 %226, label %227, label %239

227:                                              ; preds = %216
  %228 = and i64 %211, -4294967296
  %229 = add i64 %211, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %228, %232
  %234 = add i64 %233, 7
  %235 = inttoptr i64 %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = icmp ult i16 %236, 32
  br i1 %237, label %238, label %239

238:                                              ; preds = %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %246

239:                                              ; preds = %216, %227
  %240 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %89, i64 %211) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br i1 %240, label %241, label %246

241:                                              ; preds = %215, %239
  %242 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %204, align 8
  %243 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %242, i64 0, i32 0
  %244 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %243, align 8
  %245 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %244, null
  br i1 %245, label %246, label %202

246:                                              ; preds = %239, %241, %194, %238
  %247 = phi %"struct.std::__1::__hash_node_base.1233"* [ %205, %238 ], [ %181, %194 ], [ %205, %239 ], [ %242, %241 ]
  %248 = bitcast %"struct.std::__1::__hash_node_base.1233"* %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"struct.std::__1::__hash_node_base.1233"* %183 to i64*
  store i64 %249, i64* %250, align 8
  %251 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %252 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %251, i64 %187
  %253 = bitcast %"struct.std::__1::__hash_node_base.1233"** %252 to i64**
  %254 = load i64*, i64** %253, align 8
  %255 = load i64, i64* %254, align 8
  store i64 %255, i64* %248, align 8
  %256 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %22, align 8
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %256, i64 %187
  %258 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %257, align 8
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %258, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"* %181, %"struct.std::__1::__hash_node_base.1233"** %259, align 8
  br label %260

260:                                              ; preds = %180, %246, %201
  %261 = phi %"struct.std::__1::__hash_node_base.1233"* [ %181, %201 ], [ %183, %246 ], [ %181, %180 ]
  %262 = phi i64 [ %187, %201 ], [ %182, %246 ], [ %182, %180 ]
  %263 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %261, i64 0, i32 0
  %264 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %263, align 8
  %265 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %264, null
  br i1 %265, label %268, label %180

266:                                              ; preds = %2
  %267 = bitcast %"class.std::__1::__hash_table.1229"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 16, i1 false)
  br label %268

268:                                              ; preds = %260, %167, %78, %43, %266
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.1264"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::Handle.1135"** %9, %3
  %11 = ptrtoint %"class.v8::internal::Handle.1135"** %9 to i64
  %12 = ptrtoint %"class.v8::internal::Handle.1135"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %3, i64 %22
  %24 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %24, i64 %25
  %27 = icmp eq %"class.v8::internal::Handle.1135"* %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::Handle.1135"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %35 to %"class.v8::internal::Handle.1135"**
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::Handle.1135"* [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::Handle.1135"** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %40, i64 1
  %43 = ptrtoint %"class.v8::internal::Handle.1135"* %42 to i64
  %44 = bitcast %"class.v8::internal::Handle.1135"** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %41, i64 1
  %50 = bitcast %"class.v8::internal::Handle.1135"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::Handle.1135"** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::Handle.1135"*
  %56 = icmp eq %"class.v8::internal::Handle.1135"* %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::Handle.1135"** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::Handle.1135"** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::Handle.1135"** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %63, i64 1
  %71 = bitcast %"class.v8::internal::Handle.1135"* %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::Handle.1135"* %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::Handle.1135"* %63, %"class.v8::internal::Handle.1135"** %37, align 8
  %74 = bitcast %"class.v8::internal::Handle.1135"* %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*
  %75 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::Handle.1135"**
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::Handle.1135"** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::Handle.1135"** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::Handle.1135"** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %82, i64 1
  store %"class.v8::internal::Handle.1135"** %84, %"class.v8::internal::Handle.1135"*** %2, align 8
  %85 = ptrtoint %"class.v8::internal::Handle.1135"** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::Handle.1135"** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::Handle.1135"** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::Handle.1135"** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::Handle.1135"** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::Handle.1135"** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %101 to %"class.v8::internal::Handle.1135"**
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::Handle.1135"** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %111, i64 1
  %119 = bitcast %"class.v8::internal::Handle.1135"* %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::Handle.1135"* %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::Handle.1135"* %111, %"class.v8::internal::Handle.1135"** %103, align 8
  %122 = bitcast %"class.v8::internal::Handle.1135"* %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::Handle.1135"** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::Handle.1135"** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %133, i64 1
  %141 = bitcast %"class.v8::internal::Handle.1135"* %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::Handle.1135"* %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::Handle.1135"* %133, %"class.v8::internal::Handle.1135"** %103, align 8
  %144 = bitcast %"class.v8::internal::Handle.1135"* %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %132, i64 1
  %148 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %2, align 8
  %152 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::Handle.1135"** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::Handle.1135"** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::Handle.1135"** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::Handle.1135"** %155 to i64
  %159 = getelementptr %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::Handle.1135"** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %154, i64 %163
  store %"class.v8::internal::Handle.1135"** %164, %"class.v8::internal::Handle.1135"*** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %166, align 8
  %168 = icmp eq %"class.v8::internal::Handle.1135"** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::Handle.1135"** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::Handle.1135"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.1264", %"class.std::__1::__deque_base.1264"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %167, i64 1
  %187 = bitcast %"class.v8::internal::Handle.1135"** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::Handle.1135"** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %178 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %167, %"class.v8::internal::Handle.1135"*** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %148, i64 1
  %199 = bitcast %"class.v8::internal::Handle.1135"* %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::Handle.1135"* %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::Handle.1135"* %148, %"class.v8::internal::Handle.1135"** %103, align 8
  %202 = bitcast %"class.v8::internal::Handle.1135"* %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %132, i64 2
  %206 = icmp eq %"class.v8::internal::Handle.1135"** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1257"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1257"* %0, %"class.std::__1::__tree_node"* %7) #11
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1148"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JNS_4pairIKS6_S8_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1144"*, %"class.v8::internal::Handle.1168"* dereferenceable(8), %"struct.std::__1::pair.1167"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Handle.1168", %"class.v8::internal::Handle.1168"* %1, i64 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %79, label %15

15:                                               ; preds = %3
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #11, !range !9
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %18, %21, %23
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %30, null
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = add i64 %13, -1
  %34 = trunc i64 %6 to i32
  br i1 %17, label %35, label %59

35:                                               ; preds = %32, %52
  %36 = phi %"struct.std::__1::__hash_node_base.1148"* [ %38, %52 ], [ %30, %32 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %38, null
  br i1 %39, label %79, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %38, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.1148"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %11
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = icmp ult i64 %43, %13
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %43, %13
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %48, %47 ], [ %43, %45 ]
  %51 = icmp eq i64 %50, %26
  br i1 %51, label %52, label %79

52:                                               ; preds = %49, %40
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %38, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.1148"* %53 to i64**
  %55 = load i64*, i64** %54, align 8
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %57, %34
  br i1 %58, label %180, label %35

59:                                               ; preds = %32, %72
  %60 = phi %"struct.std::__1::__hash_node_base.1148"* [ %62, %72 ], [ %30, %32 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %60, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %62, null
  br i1 %63, label %79, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %62, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1148"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %11
  %69 = and i64 %67, %33
  %70 = icmp eq i64 %69, %26
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %79

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %62, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.1148"* %73 to i64**
  %75 = load i64*, i64** %74, align 8
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %77, %34
  br i1 %78, label %180, label %59

79:                                               ; preds = %64, %59, %49, %35, %25, %3
  %80 = phi i64 [ %26, %25 ], [ undef, %3 ], [ %26, %35 ], [ %26, %49 ], [ %26, %59 ], [ %26, %64 ]
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %82 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %81, align 8, !noalias !13
  %83 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %82, i64 0, i32 2
  %84 = load i64, i64* %83, align 8, !noalias !13
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %82, i64 0, i32 3
  %86 = load i64, i64* %85, align 8, !noalias !13
  %87 = sub i64 %86, %84
  %88 = icmp ult i64 %87, 32
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %79
  %90 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %82, i64 32) #11, !noalias !13
  br label %93

91:                                               ; preds = %79
  %92 = add i64 %84, 32
  store i64 %92, i64* %83, align 8, !noalias !13
  br label %93

93:                                               ; preds = %89, %91
  %94 = phi i64 [ %90, %89 ], [ %84, %91 ]
  %95 = inttoptr i64 %94 to %"struct.std::__1::__hash_node"*
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %95, i64 0, i32 2, i32 0
  %97 = bitcast %"struct.std::__1::pair.1167"* %96 to i8*
  %98 = bitcast %"struct.std::__1::pair.1167"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 16, i1 false) #11, !noalias !13
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %95, i64 0, i32 1
  store i64 %11, i64* %99, align 8, !noalias !13
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %95, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* null, %"struct.std::__1::__hash_node_base.1148"** %100, align 8, !noalias !13
  %101 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 2, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  %104 = uitofp i64 %103 to float
  %105 = uitofp i64 %13 to float
  %106 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 3, i32 0, i32 0
  %107 = load float, float* %106, align 4
  %108 = fmul float %107, %105
  %109 = fcmp olt float %108, %104
  %110 = or i1 %14, %109
  br i1 %110, label %111, label %134

111:                                              ; preds = %93
  %112 = shl i64 %13, 1
  %113 = icmp ult i64 %13, 3
  %114 = tail call i64 @llvm.ctpop.i64(i64 %13) #11, !range !9
  %115 = icmp ugt i64 %114, 1
  %116 = or i1 %113, %115
  %117 = zext i1 %116 to i64
  %118 = or i64 %112, %117
  %119 = fdiv float %104, %107
  %120 = tail call float @llvm.ceil.f32(float %119) #11
  %121 = fptoui float %120 to i64
  %122 = icmp ult i64 %118, %121
  %123 = select i1 %122, i64 %121, i64 %118
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1144"* %0, i64 %123)
  %124 = load i64, i64* %12, align 8
  %125 = tail call i64 @llvm.ctpop.i64(i64 %124) #11, !range !9
  %126 = icmp ugt i64 %125, 1
  br i1 %126, label %130, label %127

127:                                              ; preds = %111
  %128 = add i64 %124, -1
  %129 = and i64 %128, %11
  br label %134

130:                                              ; preds = %111
  %131 = icmp ugt i64 %124, %11
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = urem i64 %11, %124
  br label %134

134:                                              ; preds = %132, %130, %127, %93
  %135 = phi i64 [ %13, %93 ], [ %124, %127 ], [ %124, %130 ], [ %124, %132 ]
  %136 = phi i64 [ %80, %93 ], [ %129, %127 ], [ %11, %130 ], [ %133, %132 ]
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %138, i64 %136
  %140 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %140, null
  br i1 %141, label %142, label %170

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.std::__1::__hash_table.1144", %"class.std::__1::__hash_table.1144"* %0, i64 0, i32 1, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %143, i64 0, i32 0
  %145 = bitcast %"struct.std::__1::__hash_node_base.1148"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = inttoptr i64 %94 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %95, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* %148, %"struct.std::__1::__hash_node_base.1148"** %144, align 8
  %149 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %137, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %149, i64 %136
  store %"struct.std::__1::__hash_node_base.1148"* %143, %"struct.std::__1::__hash_node_base.1148"** %150, align 8
  %151 = load %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %100, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.1148"* %151, null
  br i1 %152, label %176, label %153

153:                                              ; preds = %142
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %151, i64 1
  %155 = bitcast %"struct.std::__1::__hash_node_base.1148"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = tail call i64 @llvm.ctpop.i64(i64 %135) #11, !range !9
  %158 = icmp ugt i64 %157, 1
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = add i64 %135, -1
  %161 = and i64 %156, %160
  br label %166

162:                                              ; preds = %153
  %163 = icmp ult i64 %156, %135
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = urem i64 %156, %135
  br label %166

166:                                              ; preds = %159, %162, %164
  %167 = phi i64 [ %161, %159 ], [ %165, %164 ], [ %156, %162 ]
  %168 = load %"struct.std::__1::__hash_node_base.1148"**, %"struct.std::__1::__hash_node_base.1148"*** %137, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148"*, %"struct.std::__1::__hash_node_base.1148"** %168, i64 %167
  store %"struct.std::__1::__hash_node_base.1148"* %148, %"struct.std::__1::__hash_node_base.1148"** %169, align 8
  br label %176

170:                                              ; preds = %134
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1148", %"struct.std::__1::__hash_node_base.1148"* %140, i64 0, i32 0
  %172 = bitcast %"struct.std::__1::__hash_node_base.1148"* %140 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = inttoptr i64 %94 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %95, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1148"* %175, %"struct.std::__1::__hash_node_base.1148"** %171, align 8
  br label %176

176:                                              ; preds = %142, %166, %170
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %95, i64 0, i32 0
  %178 = load i64, i64* %101, align 8
  %179 = add i64 %178, 1
  store i64 %179, i64* %101, align 8
  br label %180

180:                                              ; preds = %72, %52, %176
  %181 = phi i8 [ 1, %176 ], [ 0, %52 ], [ 0, %72 ]
  %182 = phi %"struct.std::__1::__hash_node_base.1148"* [ %177, %176 ], [ %38, %52 ], [ %62, %72 ]
  %183 = insertvalue { %"struct.std::__1::__hash_node_base.1148"*, i8 } undef, %"struct.std::__1::__hash_node_base.1148"* %182, 0
  %184 = insertvalue { %"struct.std::__1::__hash_node_base.1148"*, i8 } %183, i8 %181, 1
  ret { %"struct.std::__1::__hash_node_base.1148"*, i8 } %184
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1170"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1170"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1170"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1170"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %266, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = shl i64 %1, 3
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ugt i64 %8, %13
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %5
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 %8) #11
  br label %19

17:                                               ; preds = %5
  %18 = add i64 %10, %8
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to %"struct.std::__1::__hash_node_base.1174"**
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"** %21, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %23, align 8
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %21, align 8
  %24 = icmp eq i64 %1, 1
  br i1 %24, label %43, label %25

25:                                               ; preds = %19
  %26 = add i64 %1, -1
  %27 = add i64 %1, -2
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub i64 %26, %28
  br label %48

32:                                               ; preds = %48, %25
  %33 = phi i64 [ 1, %25 ], [ %62, %48 ]
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %28, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !16

43:                                               ; preds = %32, %35, %19
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %46, null
  br i1 %47, label %268, label %65

48:                                               ; preds = %48, %30
  %49 = phi i64 [ 1, %30 ], [ %62, %48 ]
  %50 = phi i64 [ %31, %30 ], [ %63, %48 ]
  %51 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %52, align 8
  %53 = add nuw nsw i64 %49, 1
  %54 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %54, i64 %53
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %55, align 8
  %56 = add nuw nsw i64 %49, 2
  %57 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %58, align 8
  %59 = add nuw i64 %49, 3
  %60 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %60, i64 %59
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %61, align 8
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %32, label %48

65:                                               ; preds = %43
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %46, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base.1174"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %70 = icmp ugt i64 %69, 1
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = add i64 %1, -1
  %73 = and i64 %68, %72
  br label %78

74:                                               ; preds = %65
  %75 = icmp ult i64 %68, %1
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = urem i64 %68, %1
  br label %78

78:                                               ; preds = %71, %74, %76
  %79 = phi i64 [ %73, %71 ], [ %77, %76 ], [ %68, %74 ]
  %80 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %80, i64 %79
  store %"struct.std::__1::__hash_node_base.1174"* %44, %"struct.std::__1::__hash_node_base.1174"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %46, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %83, null
  br i1 %84, label %268, label %85

85:                                               ; preds = %78
  %86 = add i64 %1, -1
  %87 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3 to i8*
  %88 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3, i64 0, i32 0
  br i1 %70, label %90, label %180

90:                                               ; preds = %85, %167
  %91 = phi %"struct.std::__1::__hash_node_base.1174"* [ %171, %167 ], [ %83, %85 ]
  %92 = phi i64 [ %168, %167 ], [ %79, %85 ]
  %93 = phi %"struct.std::__1::__hash_node_base.1174"* [ %169, %167 ], [ %46, %85 ]
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %91, i64 1
  %95 = bitcast %"struct.std::__1::__hash_node_base.1174"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = icmp ult i64 %96, %1
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = urem i64 %96, %1
  br label %100

100:                                              ; preds = %98, %90
  %101 = phi i64 [ %99, %98 ], [ %96, %90 ]
  %102 = icmp eq i64 %101, %92
  br i1 %102, label %167, label %103

103:                                              ; preds = %100
  %104 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %104, i64 %101
  %106 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %106, null
  br i1 %107, label %166, label %173

108:                                              ; preds = %177, %147
  %109 = phi %"struct.std::__1::__hash_node_base.1174"* [ %175, %177 ], [ %150, %147 ]
  %110 = phi %"struct.std::__1::__hash_node_base.1174"** [ %174, %177 ], [ %149, %147 ]
  %111 = phi %"struct.std::__1::__hash_node_base.1174"* [ %91, %177 ], [ %148, %147 ]
  %112 = load i64*, i64** %179, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %109, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.1174"* %113 to i64**
  %115 = load i64*, i64** %114, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %116 = load i64, i64* %112, align 8
  store i64 %116, i64* %88, align 8
  %117 = load i64, i64* %115, align 8
  %118 = trunc i64 %117 to i32
  %119 = trunc i64 %116 to i32
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %146, label %121

121:                                              ; preds = %108
  %122 = and i64 %116, -4294967296
  %123 = add i64 %116, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %122, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp ult i16 %130, 32
  br i1 %131, label %132, label %143

132:                                              ; preds = %121
  %133 = and i64 %117, -4294967296
  %134 = add i64 %117, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp ult i16 %141, 32
  br i1 %142, label %145, label %143

143:                                              ; preds = %132, %121
  %144 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %89, i64 %117) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br i1 %144, label %147, label %152

145:                                              ; preds = %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %152

146:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %147

147:                                              ; preds = %146, %143
  %148 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %110, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %148, i64 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %150, null
  br i1 %151, label %152, label %108

152:                                              ; preds = %147, %143, %173, %145
  %153 = phi %"struct.std::__1::__hash_node_base.1174"* [ %111, %145 ], [ %91, %173 ], [ %111, %143 ], [ %148, %147 ]
  %154 = bitcast %"struct.std::__1::__hash_node_base.1174"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.1174"* %93 to i64*
  store i64 %155, i64* %156, align 8
  %157 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %157, i64 %101
  %159 = bitcast %"struct.std::__1::__hash_node_base.1174"** %158 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %154, align 8
  %162 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %162, i64 %101
  %164 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %164, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"* %91, %"struct.std::__1::__hash_node_base.1174"** %165, align 8
  br label %167

166:                                              ; preds = %103
  store %"struct.std::__1::__hash_node_base.1174"* %93, %"struct.std::__1::__hash_node_base.1174"** %105, align 8
  br label %167

167:                                              ; preds = %166, %152, %100
  %168 = phi i64 [ %101, %166 ], [ %92, %152 ], [ %92, %100 ]
  %169 = phi %"struct.std::__1::__hash_node_base.1174"* [ %91, %166 ], [ %93, %152 ], [ %91, %100 ]
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %169, i64 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %171, null
  br i1 %172, label %268, label %90

173:                                              ; preds = %103
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %91, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %175, null
  br i1 %176, label %152, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %91, i64 2
  %179 = bitcast %"struct.std::__1::__hash_node_base.1174"* %178 to i64**
  br label %108

180:                                              ; preds = %85, %260
  %181 = phi %"struct.std::__1::__hash_node_base.1174"* [ %264, %260 ], [ %83, %85 ]
  %182 = phi i64 [ %261, %260 ], [ %79, %85 ]
  %183 = phi %"struct.std::__1::__hash_node_base.1174"* [ %262, %260 ], [ %46, %85 ]
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %181, i64 1
  %185 = bitcast %"struct.std::__1::__hash_node_base.1174"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, %86
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %260, label %189

189:                                              ; preds = %180
  %190 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %190, i64 %187
  %192 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %192, null
  br i1 %193, label %201, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %181, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %196, null
  br i1 %197, label %246, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %181, i64 2
  %200 = bitcast %"struct.std::__1::__hash_node_base.1174"* %199 to i64**
  br label %202

201:                                              ; preds = %189
  store %"struct.std::__1::__hash_node_base.1174"* %183, %"struct.std::__1::__hash_node_base.1174"** %191, align 8
  br label %260

202:                                              ; preds = %198, %241
  %203 = phi %"struct.std::__1::__hash_node_base.1174"* [ %196, %198 ], [ %244, %241 ]
  %204 = phi %"struct.std::__1::__hash_node_base.1174"** [ %195, %198 ], [ %243, %241 ]
  %205 = phi %"struct.std::__1::__hash_node_base.1174"* [ %181, %198 ], [ %242, %241 ]
  %206 = load i64*, i64** %200, align 8
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %203, i64 2
  %208 = bitcast %"struct.std::__1::__hash_node_base.1174"* %207 to i64**
  %209 = load i64*, i64** %208, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %210 = load i64, i64* %206, align 8
  store i64 %210, i64* %88, align 8
  %211 = load i64, i64* %209, align 8
  %212 = trunc i64 %211 to i32
  %213 = trunc i64 %210 to i32
  %214 = icmp eq i32 %212, %213
  br i1 %214, label %215, label %216

215:                                              ; preds = %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %241

216:                                              ; preds = %202
  %217 = and i64 %210, -4294967296
  %218 = add i64 %210, -1
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %217, %221
  %223 = add i64 %222, 7
  %224 = inttoptr i64 %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = icmp ult i16 %225, 32
  br i1 %226, label %227, label %239

227:                                              ; preds = %216
  %228 = and i64 %211, -4294967296
  %229 = add i64 %211, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %228, %232
  %234 = add i64 %233, 7
  %235 = inttoptr i64 %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = icmp ult i16 %236, 32
  br i1 %237, label %238, label %239

238:                                              ; preds = %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %246

239:                                              ; preds = %216, %227
  %240 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %89, i64 %211) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br i1 %240, label %241, label %246

241:                                              ; preds = %215, %239
  %242 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %204, align 8
  %243 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %242, i64 0, i32 0
  %244 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %243, align 8
  %245 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %244, null
  br i1 %245, label %246, label %202

246:                                              ; preds = %239, %241, %194, %238
  %247 = phi %"struct.std::__1::__hash_node_base.1174"* [ %205, %238 ], [ %181, %194 ], [ %205, %239 ], [ %242, %241 ]
  %248 = bitcast %"struct.std::__1::__hash_node_base.1174"* %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"struct.std::__1::__hash_node_base.1174"* %183 to i64*
  store i64 %249, i64* %250, align 8
  %251 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %252 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %251, i64 %187
  %253 = bitcast %"struct.std::__1::__hash_node_base.1174"** %252 to i64**
  %254 = load i64*, i64** %253, align 8
  %255 = load i64, i64* %254, align 8
  store i64 %255, i64* %248, align 8
  %256 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %22, align 8
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %256, i64 %187
  %258 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %257, align 8
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %258, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"* %181, %"struct.std::__1::__hash_node_base.1174"** %259, align 8
  br label %260

260:                                              ; preds = %180, %246, %201
  %261 = phi i64 [ %187, %201 ], [ %182, %246 ], [ %182, %180 ]
  %262 = phi %"struct.std::__1::__hash_node_base.1174"* [ %181, %201 ], [ %183, %246 ], [ %181, %180 ]
  %263 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %262, i64 0, i32 0
  %264 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %263, align 8
  %265 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %264, null
  br i1 %265, label %268, label %180

266:                                              ; preds = %2
  %267 = bitcast %"class.std::__1::__hash_table.1170"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 16, i1 false)
  br label %268

268:                                              ; preds = %260, %167, %78, %43, %266
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1174"* @_ZNKSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.1170"*, %"class.v8::internal::Handle.1136"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1136"* %1, i64 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = lshr i32 %10, 2
  br label %19

15:                                               ; preds = %2
  %16 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %7, i64* %17, align 8
  %18 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi i32 [ %14, %13 ], [ %18, %15 ]
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %153, label %25

25:                                               ; preds = %19
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #11, !range !9
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, 4294967295
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ugt i64 %23, %21
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %40, null
  br i1 %41, label %153, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %44, null
  br i1 %45, label %153, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  br i1 %27, label %51, label %103

51:                                               ; preds = %46, %99
  %52 = phi %"struct.std::__1::__hash_node_base.1174"* [ %101, %99 ], [ %44, %46 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %52, i64 1
  %54 = bitcast %"struct.std::__1::__hash_node_base.1174"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %21
  br i1 %56, label %64, label %57

57:                                               ; preds = %51
  %58 = icmp ult i64 %55, %23
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %55, %23
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi i64 [ %60, %59 ], [ %55, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %99, label %153

64:                                               ; preds = %51
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %52, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1174"* %65 to i64**
  %67 = load i64*, i64** %66, align 8
  %68 = load i64*, i64** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %49, align 8
  %70 = load i64, i64* %68, align 8
  %71 = trunc i64 %70 to i32
  %72 = trunc i64 %69 to i32
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %122, label %74

74:                                               ; preds = %64
  %75 = and i64 %69, -4294967296
  %76 = add i64 %69, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 32
  br i1 %84, label %85, label %96

85:                                               ; preds = %74
  %86 = and i64 %70, -4294967296
  %87 = add i64 %70, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = icmp ult i16 %94, 32
  br i1 %95, label %98, label %96

96:                                               ; preds = %85, %74
  %97 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %50, i64 %70) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br i1 %97, label %153, label %99

98:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %99

99:                                               ; preds = %98, %96, %61
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %52, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %101, null
  br i1 %102, label %153, label %51

103:                                              ; preds = %46, %149
  %104 = phi %"struct.std::__1::__hash_node_base.1174"* [ %151, %149 ], [ %44, %46 ]
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %104, i64 1
  %106 = bitcast %"struct.std::__1::__hash_node_base.1174"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %21
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = and i64 %107, %47
  %111 = icmp eq i64 %110, %36
  br i1 %111, label %149, label %153

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %104, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.1174"* %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64*, i64** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %49, align 8
  %118 = load i64, i64* %116, align 8
  %119 = trunc i64 %118 to i32
  %120 = trunc i64 %117 to i32
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %112, %64
  %123 = phi %"struct.std::__1::__hash_node_base.1174"* [ %52, %64 ], [ %104, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %153

124:                                              ; preds = %112
  %125 = and i64 %117, -4294967296
  %126 = add i64 %117, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %125, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp ult i16 %133, 32
  br i1 %134, label %135, label %147

135:                                              ; preds = %124
  %136 = and i64 %118, -4294967296
  %137 = add i64 %118, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %136, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i16*
  %144 = load atomic i16, i16* %143 monotonic, align 2
  %145 = icmp ult i16 %144, 32
  br i1 %145, label %146, label %147

146:                                              ; preds = %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %149

147:                                              ; preds = %124, %135
  %148 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %50, i64 %118) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br i1 %148, label %153, label %149

149:                                              ; preds = %146, %109, %147
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %104, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %151, null
  br i1 %152, label %153, label %103

153:                                              ; preds = %147, %149, %109, %96, %99, %61, %42, %19, %35, %122
  %154 = phi %"struct.std::__1::__hash_node_base.1174"* [ %123, %122 ], [ null, %35 ], [ null, %19 ], [ null, %42 ], [ %52, %96 ], [ null, %99 ], [ null, %61 ], [ %104, %147 ], [ null, %149 ], [ null, %109 ]
  ret %"struct.std::__1::__hash_node_base.1174"* %154
}

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1174"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1170"*, %"class.v8::internal::Handle.1136"* dereferenceable(8), %"class.v8::internal::Handle.1136"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1136"* %1, i64 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = lshr i32 %11, 2
  br label %20

16:                                               ; preds = %3
  %17 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %18, align 8
  %19 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %20

20:                                               ; preds = %14, %16
  %21 = phi i32 [ %15, %14 ], [ %19, %16 ]
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %154, label %26

26:                                               ; preds = %20
  %27 = call i64 @llvm.ctpop.i64(i64 %24) #11, !range !9
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, 4294967295
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ugt i64 %24, %22
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %29, %32, %34
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %41, null
  br i1 %42, label %154, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %45, null
  br i1 %46, label %154, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  %49 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  br i1 %28, label %52, label %104

52:                                               ; preds = %47, %100
  %53 = phi %"struct.std::__1::__hash_node_base.1174"* [ %102, %100 ], [ %45, %47 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.1174"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %22
  br i1 %57, label %65, label %58

58:                                               ; preds = %52
  %59 = icmp ult i64 %56, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %56, %24
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %61, %60 ], [ %56, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %65, label %154

65:                                               ; preds = %62, %52
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %53, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.1174"* %66 to i64**
  %68 = load i64*, i64** %67, align 8
  %69 = load i64*, i64** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %50, align 8
  %71 = load i64, i64* %69, align 8
  %72 = trunc i64 %71 to i32
  %73 = trunc i64 %70 to i32
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %123, label %75

75:                                               ; preds = %65
  %76 = and i64 %70, -4294967296
  %77 = add i64 %70, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = icmp ult i16 %84, 32
  br i1 %85, label %86, label %97

86:                                               ; preds = %75
  %87 = and i64 %71, -4294967296
  %88 = add i64 %71, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp ult i16 %95, 32
  br i1 %96, label %99, label %97

97:                                               ; preds = %86, %75
  %98 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %51, i64 %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br i1 %98, label %256, label %100

99:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %100

100:                                              ; preds = %99, %97
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %53, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %102, null
  br i1 %103, label %154, label %52

104:                                              ; preds = %47, %149
  %105 = phi %"struct.std::__1::__hash_node_base.1174"* [ %151, %149 ], [ %45, %47 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %105, i64 1
  %107 = bitcast %"struct.std::__1::__hash_node_base.1174"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, %22
  %110 = and i64 %108, %48
  %111 = icmp eq i64 %110, %37
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %154

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %105, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base.1174"* %114 to i64**
  %116 = load i64*, i64** %115, align 8
  %117 = load i64*, i64** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %118 = load i64, i64* %116, align 8
  store i64 %118, i64* %50, align 8
  %119 = load i64, i64* %117, align 8
  %120 = trunc i64 %119 to i32
  %121 = trunc i64 %118 to i32
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %113, %65
  %124 = phi %"struct.std::__1::__hash_node_base.1174"* [ %53, %65 ], [ %105, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %256

125:                                              ; preds = %113
  %126 = and i64 %118, -4294967296
  %127 = add i64 %118, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %126, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp ult i16 %134, 32
  br i1 %135, label %136, label %147

136:                                              ; preds = %125
  %137 = and i64 %119, -4294967296
  %138 = add i64 %119, -1
  %139 = inttoptr i64 %138 to i32*
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %137, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = icmp ult i16 %145, 32
  br i1 %146, label %153, label %147

147:                                              ; preds = %136, %125
  %148 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %51, i64 %119) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br i1 %148, label %256, label %149

149:                                              ; preds = %147, %153
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %105, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %151, null
  br i1 %152, label %154, label %104

153:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %149

154:                                              ; preds = %104, %149, %62, %100, %43, %36, %20
  %155 = phi i64 [ %37, %36 ], [ undef, %20 ], [ %37, %43 ], [ %37, %100 ], [ %37, %62 ], [ %37, %149 ], [ %37, %104 ]
  %156 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %157 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %156, align 8, !noalias !17
  %158 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %157, i64 0, i32 2
  %159 = load i64, i64* %158, align 8, !noalias !17
  %160 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %157, i64 0, i32 3
  %161 = load i64, i64* %160, align 8, !noalias !17
  %162 = sub i64 %161, %159
  %163 = icmp ult i64 %162, 24
  br i1 %163, label %164, label %166, !prof !2

164:                                              ; preds = %154
  %165 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %157, i64 24) #11, !noalias !17
  br label %168

166:                                              ; preds = %154
  %167 = add i64 %159, 24
  store i64 %167, i64* %158, align 8, !noalias !17
  br label %168

168:                                              ; preds = %164, %166
  %169 = phi i64 [ %165, %164 ], [ %159, %166 ]
  %170 = inttoptr i64 %169 to %"struct.std::__1::__hash_node.1323"*
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node.1323", %"struct.std::__1::__hash_node.1323"* %170, i64 0, i32 2
  %172 = bitcast %"class.v8::internal::Handle.1136"* %2 to i64*
  %173 = bitcast %"class.v8::internal::Handle.1136"* %171 to i64*
  %174 = load i64, i64* %172, align 8, !noalias !17
  store i64 %174, i64* %173, align 8, !noalias !17
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node.1323", %"struct.std::__1::__hash_node.1323"* %170, i64 0, i32 1
  store i64 %22, i64* %175, align 8, !noalias !17
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node.1323", %"struct.std::__1::__hash_node.1323"* %170, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"* null, %"struct.std::__1::__hash_node_base.1174"** %176, align 8, !noalias !17
  %177 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 2, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = add i64 %178, 1
  %180 = uitofp i64 %179 to float
  %181 = uitofp i64 %24 to float
  %182 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 3, i32 0, i32 0
  %183 = load float, float* %182, align 4
  %184 = fmul float %183, %181
  %185 = fcmp olt float %184, %180
  %186 = or i1 %25, %185
  br i1 %186, label %187, label %210

187:                                              ; preds = %168
  %188 = shl i64 %24, 1
  %189 = icmp ult i64 %24, 3
  %190 = call i64 @llvm.ctpop.i64(i64 %24) #11, !range !9
  %191 = icmp ugt i64 %190, 1
  %192 = or i1 %189, %191
  %193 = zext i1 %192 to i64
  %194 = or i64 %188, %193
  %195 = fdiv float %180, %183
  %196 = call float @llvm.ceil.f32(float %195) #11
  %197 = fptoui float %196 to i64
  %198 = icmp ult i64 %194, %197
  %199 = select i1 %198, i64 %197, i64 %194
  call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1170"* %0, i64 %199)
  %200 = load i64, i64* %23, align 8
  %201 = call i64 @llvm.ctpop.i64(i64 %200) #11, !range !9
  %202 = icmp ugt i64 %201, 1
  br i1 %202, label %206, label %203

203:                                              ; preds = %187
  %204 = add i64 %200, 4294967295
  %205 = and i64 %204, %22
  br label %210

206:                                              ; preds = %187
  %207 = icmp ugt i64 %200, %22
  br i1 %207, label %210, label %208

208:                                              ; preds = %206
  %209 = urem i64 %22, %200
  br label %210

210:                                              ; preds = %208, %206, %203, %168
  %211 = phi i64 [ %155, %168 ], [ %205, %203 ], [ %209, %208 ], [ %22, %206 ]
  %212 = phi i64 [ %24, %168 ], [ %200, %203 ], [ %200, %208 ], [ %200, %206 ]
  %213 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %214 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %213, align 8
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %214, i64 %211
  %216 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %215, align 8
  %217 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %216, null
  br i1 %217, label %218, label %246

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.std::__1::__hash_table.1170", %"class.std::__1::__hash_table.1170"* %0, i64 0, i32 1, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %219, i64 0, i32 0
  %221 = bitcast %"struct.std::__1::__hash_node_base.1174"* %219 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = inttoptr i64 %169 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node.1323", %"struct.std::__1::__hash_node.1323"* %170, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"* %224, %"struct.std::__1::__hash_node_base.1174"** %220, align 8
  %225 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %213, align 8
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %225, i64 %211
  store %"struct.std::__1::__hash_node_base.1174"* %219, %"struct.std::__1::__hash_node_base.1174"** %226, align 8
  %227 = load %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %176, align 8
  %228 = icmp eq %"struct.std::__1::__hash_node_base.1174"* %227, null
  br i1 %228, label %252, label %229

229:                                              ; preds = %218
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %227, i64 1
  %231 = bitcast %"struct.std::__1::__hash_node_base.1174"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = call i64 @llvm.ctpop.i64(i64 %212) #11, !range !9
  %234 = icmp ugt i64 %233, 1
  br i1 %234, label %238, label %235

235:                                              ; preds = %229
  %236 = add i64 %212, -1
  %237 = and i64 %232, %236
  br label %242

238:                                              ; preds = %229
  %239 = icmp ult i64 %232, %212
  br i1 %239, label %242, label %240

240:                                              ; preds = %238
  %241 = urem i64 %232, %212
  br label %242

242:                                              ; preds = %235, %238, %240
  %243 = phi i64 [ %237, %235 ], [ %241, %240 ], [ %232, %238 ]
  %244 = load %"struct.std::__1::__hash_node_base.1174"**, %"struct.std::__1::__hash_node_base.1174"*** %213, align 8
  %245 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174"*, %"struct.std::__1::__hash_node_base.1174"** %244, i64 %243
  store %"struct.std::__1::__hash_node_base.1174"* %224, %"struct.std::__1::__hash_node_base.1174"** %245, align 8
  br label %252

246:                                              ; preds = %210
  %247 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1174", %"struct.std::__1::__hash_node_base.1174"* %216, i64 0, i32 0
  %248 = bitcast %"struct.std::__1::__hash_node_base.1174"* %216 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = inttoptr i64 %169 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node.1323", %"struct.std::__1::__hash_node.1323"* %170, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1174"* %251, %"struct.std::__1::__hash_node_base.1174"** %247, align 8
  br label %252

252:                                              ; preds = %218, %242, %246
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node.1323", %"struct.std::__1::__hash_node.1323"* %170, i64 0, i32 0
  %254 = load i64, i64* %177, align 8
  %255 = add i64 %254, 1
  store i64 %255, i64* %177, align 8
  br label %256

256:                                              ; preds = %147, %97, %123, %252
  %257 = phi i8 [ 1, %252 ], [ 0, %123 ], [ 0, %97 ], [ 0, %147 ]
  %258 = phi %"struct.std::__1::__hash_node_base.1174"* [ %253, %252 ], [ %124, %123 ], [ %53, %97 ], [ %105, %147 ]
  %259 = insertvalue { %"struct.std::__1::__hash_node_base.1174"*, i8 } undef, %"struct.std::__1::__hash_node_base.1174"* %258, 0
  %260 = insertvalue { %"struct.std::__1::__hash_node_base.1174"*, i8 } %259, i8 %257, 1
  ret { %"struct.std::__1::__hash_node_base.1174"*, i8 } %260
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1210"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1206"*, %"class.v8::internal::Handle.1168"* dereferenceable(8), %"class.v8::internal::Handle.1168"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Handle.1168", %"class.v8::internal::Handle.1168"* %1, i64 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %79, label %15

15:                                               ; preds = %3
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #11, !range !9
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %18, %21, %23
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %30, null
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = add i64 %13, -1
  %34 = trunc i64 %6 to i32
  br i1 %17, label %35, label %59

35:                                               ; preds = %32, %52
  %36 = phi %"struct.std::__1::__hash_node_base.1210"* [ %38, %52 ], [ %30, %32 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %38, null
  br i1 %39, label %79, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %38, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.1210"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %11
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = icmp ult i64 %43, %13
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %43, %13
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %48, %47 ], [ %43, %45 ]
  %51 = icmp eq i64 %50, %26
  br i1 %51, label %52, label %79

52:                                               ; preds = %49, %40
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %38, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.1210"* %53 to i64**
  %55 = load i64*, i64** %54, align 8
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %57, %34
  br i1 %58, label %181, label %35

59:                                               ; preds = %32, %72
  %60 = phi %"struct.std::__1::__hash_node_base.1210"* [ %62, %72 ], [ %30, %32 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %60, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %62, null
  br i1 %63, label %79, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %62, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1210"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %11
  %69 = and i64 %67, %33
  %70 = icmp eq i64 %69, %26
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %79

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %62, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.1210"* %73 to i64**
  %75 = load i64*, i64** %74, align 8
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %77, %34
  br i1 %78, label %181, label %59

79:                                               ; preds = %64, %59, %49, %35, %25, %3
  %80 = phi i64 [ %26, %25 ], [ undef, %3 ], [ %26, %35 ], [ %26, %49 ], [ %26, %59 ], [ %26, %64 ]
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %82 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %81, align 8, !noalias !20
  %83 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %82, i64 0, i32 2
  %84 = load i64, i64* %83, align 8, !noalias !20
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %82, i64 0, i32 3
  %86 = load i64, i64* %85, align 8, !noalias !20
  %87 = sub i64 %86, %84
  %88 = icmp ult i64 %87, 24
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %79
  %90 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %82, i64 24) #11, !noalias !20
  br label %93

91:                                               ; preds = %79
  %92 = add i64 %84, 24
  store i64 %92, i64* %83, align 8, !noalias !20
  br label %93

93:                                               ; preds = %89, %91
  %94 = phi i64 [ %90, %89 ], [ %84, %91 ]
  %95 = inttoptr i64 %94 to %"struct.std::__1::__hash_node.1340"*
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node.1340", %"struct.std::__1::__hash_node.1340"* %95, i64 0, i32 2
  %97 = bitcast %"class.v8::internal::Handle.1168"* %2 to i64*
  %98 = bitcast %"class.v8::internal::Handle.1168"* %96 to i64*
  %99 = load i64, i64* %97, align 8, !noalias !20
  store i64 %99, i64* %98, align 8, !noalias !20
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node.1340", %"struct.std::__1::__hash_node.1340"* %95, i64 0, i32 1
  store i64 %11, i64* %100, align 8, !noalias !20
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node.1340", %"struct.std::__1::__hash_node.1340"* %95, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %101, align 8, !noalias !20
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 1
  %105 = uitofp i64 %104 to float
  %106 = uitofp i64 %13 to float
  %107 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 3, i32 0, i32 0
  %108 = load float, float* %107, align 4
  %109 = fmul float %108, %106
  %110 = fcmp olt float %109, %105
  %111 = or i1 %14, %110
  br i1 %111, label %112, label %135

112:                                              ; preds = %93
  %113 = shl i64 %13, 1
  %114 = icmp ult i64 %13, 3
  %115 = tail call i64 @llvm.ctpop.i64(i64 %13) #11, !range !9
  %116 = icmp ugt i64 %115, 1
  %117 = or i1 %114, %116
  %118 = zext i1 %117 to i64
  %119 = or i64 %113, %118
  %120 = fdiv float %105, %108
  %121 = tail call float @llvm.ceil.f32(float %120) #11
  %122 = fptoui float %121 to i64
  %123 = icmp ult i64 %119, %122
  %124 = select i1 %123, i64 %122, i64 %119
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1206"* %0, i64 %124)
  %125 = load i64, i64* %12, align 8
  %126 = tail call i64 @llvm.ctpop.i64(i64 %125) #11, !range !9
  %127 = icmp ugt i64 %126, 1
  br i1 %127, label %131, label %128

128:                                              ; preds = %112
  %129 = add i64 %125, -1
  %130 = and i64 %129, %11
  br label %135

131:                                              ; preds = %112
  %132 = icmp ugt i64 %125, %11
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %11, %125
  br label %135

135:                                              ; preds = %133, %131, %128, %93
  %136 = phi i64 [ %80, %93 ], [ %130, %128 ], [ %134, %133 ], [ %11, %131 ]
  %137 = phi i64 [ %13, %93 ], [ %125, %128 ], [ %125, %133 ], [ %125, %131 ]
  %138 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %139, i64 %136
  %141 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %141, null
  br i1 %142, label %143, label %171

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 1, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %144, i64 0, i32 0
  %146 = bitcast %"struct.std::__1::__hash_node_base.1210"* %144 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = inttoptr i64 %94 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node.1340", %"struct.std::__1::__hash_node.1340"* %95, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1210"* %149, %"struct.std::__1::__hash_node_base.1210"** %145, align 8
  %150 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %138, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %150, i64 %136
  store %"struct.std::__1::__hash_node_base.1210"* %144, %"struct.std::__1::__hash_node_base.1210"** %151, align 8
  %152 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %101, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %152, null
  br i1 %153, label %177, label %154

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %152, i64 1
  %156 = bitcast %"struct.std::__1::__hash_node_base.1210"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = tail call i64 @llvm.ctpop.i64(i64 %137) #11, !range !9
  %159 = icmp ugt i64 %158, 1
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = add i64 %137, -1
  %162 = and i64 %157, %161
  br label %167

163:                                              ; preds = %154
  %164 = icmp ult i64 %157, %137
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = urem i64 %157, %137
  br label %167

167:                                              ; preds = %160, %163, %165
  %168 = phi i64 [ %162, %160 ], [ %166, %165 ], [ %157, %163 ]
  %169 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %138, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %169, i64 %168
  store %"struct.std::__1::__hash_node_base.1210"* %149, %"struct.std::__1::__hash_node_base.1210"** %170, align 8
  br label %177

171:                                              ; preds = %135
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %141, i64 0, i32 0
  %173 = bitcast %"struct.std::__1::__hash_node_base.1210"* %141 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = inttoptr i64 %94 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node.1340", %"struct.std::__1::__hash_node.1340"* %95, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1210"* %176, %"struct.std::__1::__hash_node_base.1210"** %172, align 8
  br label %177

177:                                              ; preds = %143, %167, %171
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node.1340", %"struct.std::__1::__hash_node.1340"* %95, i64 0, i32 0
  %179 = load i64, i64* %102, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %102, align 8
  br label %181

181:                                              ; preds = %72, %52, %177
  %182 = phi i8 [ 1, %177 ], [ 0, %52 ], [ 0, %72 ]
  %183 = phi %"struct.std::__1::__hash_node_base.1210"* [ %178, %177 ], [ %38, %52 ], [ %62, %72 ]
  %184 = insertvalue { %"struct.std::__1::__hash_node_base.1210"*, i8 } undef, %"struct.std::__1::__hash_node_base.1210"* %183, 0
  %185 = insertvalue { %"struct.std::__1::__hash_node_base.1210"*, i8 } %184, i8 %182, 1
  ret { %"struct.std::__1::__hash_node_base.1210"*, i8 } %185
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1206"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1206"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1206"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1206"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %194, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #11
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1210"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1210"** %20, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !23

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1206", %"class.std::__1::__hash_table.1206"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %45, null
  br i1 %46, label %196, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1210"* null, %"struct.std::__1::__hash_node_base.1210"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1210"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1210"* %43, %"struct.std::__1::__hash_node_base.1210"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %82, null
  br i1 %83, label %196, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %142

86:                                               ; preds = %84, %133
  %87 = phi %"struct.std::__1::__hash_node_base.1210"* [ %137, %133 ], [ %82, %84 ]
  %88 = phi i64 [ %134, %133 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1210"* [ %135, %133 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1210"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %133, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %102, null
  br i1 %103, label %132, label %139

104:                                              ; preds = %139, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1210"* [ %107, %109 ], [ %87, %139 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %104
  %110 = load i64*, i64** %141, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %107, i64 2
  %112 = bitcast %"struct.std::__1::__hash_node_base.1210"* %111 to i64**
  %113 = load i64*, i64** %112, align 8
  %114 = load i64, i64* %110, align 8
  %115 = load i64, i64* %113, align 8
  %116 = trunc i64 %114 to i32
  %117 = trunc i64 %115 to i32
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %104, label %119

119:                                              ; preds = %109, %104
  %120 = ptrtoint %"struct.std::__1::__hash_node_base.1210"* %107 to i64
  %121 = bitcast %"struct.std::__1::__hash_node_base.1210"* %105 to i64*
  %122 = bitcast %"struct.std::__1::__hash_node_base.1210"* %89 to i64*
  store i64 %120, i64* %122, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %123, i64 %97
  %125 = bitcast %"struct.std::__1::__hash_node_base.1210"** %124 to i64**
  %126 = load i64*, i64** %125, align 8
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  %128 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %128, i64 %97
  %130 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %130, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1210"* %87, %"struct.std::__1::__hash_node_base.1210"** %131, align 8
  br label %133

132:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1210"* %89, %"struct.std::__1::__hash_node_base.1210"** %101, align 8
  br label %133

133:                                              ; preds = %132, %119, %96
  %134 = phi i64 [ %97, %132 ], [ %88, %119 ], [ %88, %96 ]
  %135 = phi %"struct.std::__1::__hash_node_base.1210"* [ %87, %132 ], [ %89, %119 ], [ %87, %96 ]
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %135, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %137, null
  br i1 %138, label %196, label %86

139:                                              ; preds = %99
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %87, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base.1210"* %140 to i64**
  br label %104

142:                                              ; preds = %84, %188
  %143 = phi %"struct.std::__1::__hash_node_base.1210"* [ %192, %188 ], [ %82, %84 ]
  %144 = phi i64 [ %189, %188 ], [ %78, %84 ]
  %145 = phi %"struct.std::__1::__hash_node_base.1210"* [ %190, %188 ], [ %45, %84 ]
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base.1210"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, %85
  %150 = icmp eq i64 %149, %144
  br i1 %150, label %188, label %151

151:                                              ; preds = %142
  %152 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %152, i64 %149
  %154 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %143, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1210"* %157 to i64**
  br label %160

159:                                              ; preds = %151
  store %"struct.std::__1::__hash_node_base.1210"* %145, %"struct.std::__1::__hash_node_base.1210"** %153, align 8
  br label %188

160:                                              ; preds = %156, %165
  %161 = phi %"struct.std::__1::__hash_node_base.1210"* [ %163, %165 ], [ %143, %156 ]
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %161, i64 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %162, align 8
  %164 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %160
  %166 = load i64*, i64** %158, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %163, i64 2
  %168 = bitcast %"struct.std::__1::__hash_node_base.1210"* %167 to i64**
  %169 = load i64*, i64** %168, align 8
  %170 = load i64, i64* %166, align 8
  %171 = load i64, i64* %169, align 8
  %172 = trunc i64 %170 to i32
  %173 = trunc i64 %171 to i32
  %174 = icmp eq i32 %172, %173
  br i1 %174, label %160, label %175

175:                                              ; preds = %160, %165
  %176 = ptrtoint %"struct.std::__1::__hash_node_base.1210"* %163 to i64
  %177 = bitcast %"struct.std::__1::__hash_node_base.1210"* %161 to i64*
  %178 = bitcast %"struct.std::__1::__hash_node_base.1210"* %145 to i64*
  store i64 %176, i64* %178, align 8
  %179 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %179, i64 %149
  %181 = bitcast %"struct.std::__1::__hash_node_base.1210"** %180 to i64**
  %182 = load i64*, i64** %181, align 8
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %177, align 8
  %184 = load %"struct.std::__1::__hash_node_base.1210"**, %"struct.std::__1::__hash_node_base.1210"*** %21, align 8
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %184, i64 %149
  %186 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %185, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %186, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1210"* %143, %"struct.std::__1::__hash_node_base.1210"** %187, align 8
  br label %188

188:                                              ; preds = %142, %175, %159
  %189 = phi i64 [ %149, %159 ], [ %144, %175 ], [ %144, %142 ]
  %190 = phi %"struct.std::__1::__hash_node_base.1210"* [ %143, %159 ], [ %145, %175 ], [ %143, %142 ]
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1210", %"struct.std::__1::__hash_node_base.1210"* %190, i64 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.1210"*, %"struct.std::__1::__hash_node_base.1210"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.1210"* %192, null
  br i1 %193, label %196, label %142

194:                                              ; preds = %2
  %195 = bitcast %"class.std::__1::__hash_table.1206"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 16, i1 false)
  br label %196

196:                                              ; preds = %188, %133, %77, %42, %194
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1233"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE25__emplace_unique_key_argsIS6_JNS_4pairIS6_NS4_INS3_4CellEEEEEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1229"*, %"class.v8::internal::Handle.1136"* dereferenceable(8), %"struct.std::__1::pair.1254"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1136"* %1, i64 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = lshr i32 %11, 2
  br label %20

16:                                               ; preds = %3
  %17 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %18, align 8
  %19 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %20

20:                                               ; preds = %14, %16
  %21 = phi i32 [ %15, %14 ], [ %19, %16 ]
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %154, label %26

26:                                               ; preds = %20
  %27 = call i64 @llvm.ctpop.i64(i64 %24) #11, !range !9
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, 4294967295
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ugt i64 %24, %22
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %29, %32, %34
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %41, null
  br i1 %42, label %154, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %45, null
  br i1 %46, label %154, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  %49 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  br i1 %28, label %52, label %104

52:                                               ; preds = %47, %100
  %53 = phi %"struct.std::__1::__hash_node_base.1233"* [ %102, %100 ], [ %45, %47 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.1233"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %22
  br i1 %57, label %65, label %58

58:                                               ; preds = %52
  %59 = icmp ult i64 %56, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %56, %24
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %61, %60 ], [ %56, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %65, label %154

65:                                               ; preds = %62, %52
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %53, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.1233"* %66 to i64**
  %68 = load i64*, i64** %67, align 8
  %69 = load i64*, i64** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %50, align 8
  %71 = load i64, i64* %69, align 8
  %72 = trunc i64 %71 to i32
  %73 = trunc i64 %70 to i32
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %123, label %75

75:                                               ; preds = %65
  %76 = and i64 %70, -4294967296
  %77 = add i64 %70, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = icmp ult i16 %84, 32
  br i1 %85, label %86, label %97

86:                                               ; preds = %75
  %87 = and i64 %71, -4294967296
  %88 = add i64 %71, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp ult i16 %95, 32
  br i1 %96, label %99, label %97

97:                                               ; preds = %86, %75
  %98 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %51, i64 %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br i1 %98, label %261, label %100

99:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %100

100:                                              ; preds = %99, %97
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %53, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %102, null
  br i1 %103, label %154, label %52

104:                                              ; preds = %47, %149
  %105 = phi %"struct.std::__1::__hash_node_base.1233"* [ %151, %149 ], [ %45, %47 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %105, i64 1
  %107 = bitcast %"struct.std::__1::__hash_node_base.1233"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, %22
  %110 = and i64 %108, %48
  %111 = icmp eq i64 %110, %37
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %154

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %105, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base.1233"* %114 to i64**
  %116 = load i64*, i64** %115, align 8
  %117 = load i64*, i64** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %118 = load i64, i64* %116, align 8
  store i64 %118, i64* %50, align 8
  %119 = load i64, i64* %117, align 8
  %120 = trunc i64 %119 to i32
  %121 = trunc i64 %118 to i32
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %113, %65
  %124 = phi %"struct.std::__1::__hash_node_base.1233"* [ %53, %65 ], [ %105, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %261

125:                                              ; preds = %113
  %126 = and i64 %118, -4294967296
  %127 = add i64 %118, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %126, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp ult i16 %134, 32
  br i1 %135, label %136, label %147

136:                                              ; preds = %125
  %137 = and i64 %119, -4294967296
  %138 = add i64 %119, -1
  %139 = inttoptr i64 %138 to i32*
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %137, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = icmp ult i16 %145, 32
  br i1 %146, label %153, label %147

147:                                              ; preds = %136, %125
  %148 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %51, i64 %119) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br i1 %148, label %261, label %149

149:                                              ; preds = %147, %153
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %105, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %151, null
  br i1 %152, label %154, label %104

153:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %149

154:                                              ; preds = %104, %149, %62, %100, %43, %36, %20
  %155 = phi i64 [ %37, %36 ], [ undef, %20 ], [ %37, %43 ], [ %37, %100 ], [ %37, %62 ], [ %37, %149 ], [ %37, %104 ]
  %156 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %157 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %156, align 8, !noalias !24
  %158 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %157, i64 0, i32 2
  %159 = load i64, i64* %158, align 8, !noalias !24
  %160 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %157, i64 0, i32 3
  %161 = load i64, i64* %160, align 8, !noalias !24
  %162 = sub i64 %161, %159
  %163 = icmp ult i64 %162, 32
  br i1 %163, label %164, label %166, !prof !2

164:                                              ; preds = %154
  %165 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %157, i64 32) #11, !noalias !24
  br label %168

166:                                              ; preds = %154
  %167 = add i64 %159, 32
  store i64 %167, i64* %158, align 8, !noalias !24
  br label %168

168:                                              ; preds = %164, %166
  %169 = phi i64 [ %165, %164 ], [ %159, %166 ]
  %170 = inttoptr i64 %169 to %"struct.std::__1::__hash_node.1314"*
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 2, i32 0
  %172 = bitcast %"struct.std::__1::pair.1254"* %2 to i64*
  %173 = bitcast %"struct.std::__1::pair.1255"* %171 to i64*
  %174 = load i64, i64* %172, align 8, !noalias !24
  store i64 %174, i64* %173, align 8, !noalias !24
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 2, i32 0, i32 1
  %176 = getelementptr inbounds %"struct.std::__1::pair.1254", %"struct.std::__1::pair.1254"* %2, i64 0, i32 1, i32 0, i32 0
  %177 = bitcast i64** %176 to i64*
  %178 = load i64, i64* %177, align 8, !noalias !24
  %179 = bitcast %"class.v8::internal::Handle.1139"* %175 to i64*
  store i64 %178, i64* %179, align 8, !noalias !24
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 1
  store i64 %22, i64* %180, align 8, !noalias !24
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"* null, %"struct.std::__1::__hash_node_base.1233"** %181, align 8, !noalias !24
  %182 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 2, i32 0, i32 0
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 1
  %185 = uitofp i64 %184 to float
  %186 = uitofp i64 %24 to float
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 3, i32 0, i32 0
  %188 = load float, float* %187, align 4
  %189 = fmul float %188, %186
  %190 = fcmp olt float %189, %185
  %191 = or i1 %25, %190
  br i1 %191, label %192, label %215

192:                                              ; preds = %168
  %193 = shl i64 %24, 1
  %194 = icmp ult i64 %24, 3
  %195 = call i64 @llvm.ctpop.i64(i64 %24) #11, !range !9
  %196 = icmp ugt i64 %195, 1
  %197 = or i1 %194, %196
  %198 = zext i1 %197 to i64
  %199 = or i64 %193, %198
  %200 = fdiv float %185, %188
  %201 = call float @llvm.ceil.f32(float %200) #11
  %202 = fptoui float %201 to i64
  %203 = icmp ult i64 %199, %202
  %204 = select i1 %203, i64 %202, i64 %199
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table.1229"* %0, i64 %204)
  %205 = load i64, i64* %23, align 8
  %206 = call i64 @llvm.ctpop.i64(i64 %205) #11, !range !9
  %207 = icmp ugt i64 %206, 1
  br i1 %207, label %211, label %208

208:                                              ; preds = %192
  %209 = add i64 %205, 4294967295
  %210 = and i64 %209, %22
  br label %215

211:                                              ; preds = %192
  %212 = icmp ugt i64 %205, %22
  br i1 %212, label %215, label %213

213:                                              ; preds = %211
  %214 = urem i64 %22, %205
  br label %215

215:                                              ; preds = %213, %211, %208, %168
  %216 = phi i64 [ %24, %168 ], [ %205, %208 ], [ %205, %211 ], [ %205, %213 ]
  %217 = phi i64 [ %155, %168 ], [ %210, %208 ], [ %22, %211 ], [ %214, %213 ]
  %218 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %219 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %218, align 8
  %220 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %219, i64 %217
  %221 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %220, align 8
  %222 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %221, null
  br i1 %222, label %223, label %251

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.std::__1::__hash_table.1229", %"class.std::__1::__hash_table.1229"* %0, i64 0, i32 1, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %224, i64 0, i32 0
  %226 = bitcast %"struct.std::__1::__hash_node_base.1233"* %224 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = inttoptr i64 %169 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"* %229, %"struct.std::__1::__hash_node_base.1233"** %225, align 8
  %230 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %218, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %230, i64 %217
  store %"struct.std::__1::__hash_node_base.1233"* %224, %"struct.std::__1::__hash_node_base.1233"** %231, align 8
  %232 = load %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %181, align 8
  %233 = icmp eq %"struct.std::__1::__hash_node_base.1233"* %232, null
  br i1 %233, label %257, label %234

234:                                              ; preds = %223
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %232, i64 1
  %236 = bitcast %"struct.std::__1::__hash_node_base.1233"* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = call i64 @llvm.ctpop.i64(i64 %216) #11, !range !9
  %239 = icmp ugt i64 %238, 1
  br i1 %239, label %243, label %240

240:                                              ; preds = %234
  %241 = add i64 %216, -1
  %242 = and i64 %237, %241
  br label %247

243:                                              ; preds = %234
  %244 = icmp ult i64 %237, %216
  br i1 %244, label %247, label %245

245:                                              ; preds = %243
  %246 = urem i64 %237, %216
  br label %247

247:                                              ; preds = %240, %243, %245
  %248 = phi i64 [ %242, %240 ], [ %246, %245 ], [ %237, %243 ]
  %249 = load %"struct.std::__1::__hash_node_base.1233"**, %"struct.std::__1::__hash_node_base.1233"*** %218, align 8
  %250 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233"*, %"struct.std::__1::__hash_node_base.1233"** %249, i64 %248
  store %"struct.std::__1::__hash_node_base.1233"* %229, %"struct.std::__1::__hash_node_base.1233"** %250, align 8
  br label %257

251:                                              ; preds = %215
  %252 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1233", %"struct.std::__1::__hash_node_base.1233"* %221, i64 0, i32 0
  %253 = bitcast %"struct.std::__1::__hash_node_base.1233"* %221 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = inttoptr i64 %169 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1233"* %256, %"struct.std::__1::__hash_node_base.1233"** %252, align 8
  br label %257

257:                                              ; preds = %223, %247, %251
  %258 = getelementptr inbounds %"struct.std::__1::__hash_node.1314", %"struct.std::__1::__hash_node.1314"* %170, i64 0, i32 0
  %259 = load i64, i64* %182, align 8
  %260 = add i64 %259, 1
  store i64 %260, i64* %182, align 8
  br label %261

261:                                              ; preds = %147, %97, %123, %257
  %262 = phi i8 [ 1, %257 ], [ 0, %123 ], [ 0, %97 ], [ 0, %147 ]
  %263 = phi %"struct.std::__1::__hash_node_base.1233"* [ %258, %257 ], [ %124, %123 ], [ %53, %97 ], [ %105, %147 ]
  %264 = insertvalue { %"struct.std::__1::__hash_node_base.1233"*, i8 } undef, %"struct.std::__1::__hash_node_base.1233"* %263, 0
  %265 = insertvalue { %"struct.std::__1::__hash_node_base.1233"*, i8 } %264, i8 %262, 1
  ret { %"struct.std::__1::__hash_node_base.1233"*, i8 } %265
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.1263"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::Handle.1135"*, align 8
  %3 = alloca %"class.v8::internal::Handle.1135"*, align 8
  %4 = alloca %"class.v8::internal::Handle.1135"*, align 8
  %5 = alloca %"class.v8::internal::Handle.1135"*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.1355", align 16
  %7 = alloca %"class.v8::internal::Handle.1135"*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::Handle.1135"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %16, align 8
  %18 = bitcast %"class.v8::internal::Handle.1135"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::Handle.1135"** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %17, i64 1
  store %"class.v8::internal::Handle.1135"** %21, %"class.v8::internal::Handle.1135"*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.1265"* %15, %"class.v8::internal::Handle.1135"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::Handle.1135"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::Handle.1135"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::Handle.1135"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.1263"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::Handle.1135"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %45 to %"class.v8::internal::Handle.1135"*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1272", %"class.v8::internal::RecyclingZoneAllocator.1272"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #11
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::Handle.1135"*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::Handle.1135"* [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::Handle.1135"* %73, %"class.v8::internal::Handle.1135"** %3, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1265"* %23, %"class.v8::internal::Handle.1135"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::Handle.1135"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %77 to %"class.v8::internal::Handle.1135"*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1272", %"class.v8::internal::RecyclingZoneAllocator.1272"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #11
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::Handle.1135"*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::Handle.1135"* [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::Handle.1135"* %105, %"class.v8::internal::Handle.1135"** %4, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.1265"* %23, %"class.v8::internal::Handle.1135"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %106 = bitcast %"class.v8::internal::Handle.1135"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  %107 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %27, align 8
  %108 = bitcast %"class.v8::internal::Handle.1135"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::Handle.1135"** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %107, i64 1
  store %"class.v8::internal::Handle.1135"** %111, %"class.v8::internal::Handle.1135"*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.1265"* %23, %"class.v8::internal::Handle.1135"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.1355"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #11
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::Handle.1135"** null, %"class.v8::internal::Handle.1135"*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %121 to %"class.v8::internal::Handle.1135"**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #11
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::Handle.1135"**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::Handle.1135"** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %6, i64 0, i32 0
  store %"class.v8::internal::Handle.1135"** %150, %"class.v8::internal::Handle.1135"*** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %6, i64 0, i32 2
  store %"class.v8::internal::Handle.1135"** %152, %"class.v8::internal::Handle.1135"*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %6, i64 0, i32 1
  store %"class.v8::internal::Handle.1135"** %152, %"class.v8::internal::Handle.1135"*** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %150, i64 %116
  store %"class.v8::internal::Handle.1135"** %155, %"class.v8::internal::Handle.1135"*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.1263", %"class.std::__1::deque.1263"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %157 to %"class.v8::internal::Handle.1135"*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> >::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1272", %"class.v8::internal::RecyclingZoneAllocator.1272"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #11
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::Handle.1135"*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::Handle.1135"* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::Handle.1135"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #11
  store %"class.v8::internal::Handle.1135"* %185, %"class.v8::internal::Handle.1135"** %7, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1355"* nonnull %6, %"class.v8::internal::Handle.1135"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #11
  %187 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %24, align 8
  %188 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %27, align 8
  %189 = icmp eq %"class.v8::internal::Handle.1135"** %187, %188
  %190 = ptrtoint %"class.v8::internal::Handle.1135"** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::Handle.1135"** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::Handle.1135"** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.1355"* %6 to i64*
  %199 = bitcast %"class.v8::internal::Handle.1135"*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.1355"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.1263"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::Handle.1135"*** %153 to i64*
  %204 = bitcast %"class.v8::internal::Handle.1135"*** %118 to i64*
  %205 = bitcast %"class.v8::internal::Handle.1135"*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::Handle.1135"*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::Handle.1135"**
  %210 = icmp eq %"class.v8::internal::Handle.1135"** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::Handle.1135"**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::Handle.1135"** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %209, i64 %217
  store %"class.v8::internal::Handle.1135"** %218, %"class.v8::internal::Handle.1135"*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %211, i64 1
  %236 = bitcast %"class.v8::internal::Handle.1135"** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %227 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %211, %"class.v8::internal::Handle.1135"*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #11
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::Handle.1135"** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1355"* nonnull %6, %"class.v8::internal::Handle.1135"** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %27, align 8
  %246 = icmp eq %"class.v8::internal::Handle.1135"** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.1265"*, %"class.v8::internal::Handle.1135"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Handle.1135"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Handle.1135"** %6 to i64
  %9 = ptrtoint %"class.v8::internal::Handle.1135"** %4 to i64
  %10 = bitcast %"class.v8::internal::Handle.1135"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %14, align 8
  %16 = icmp ugt %"class.v8::internal::Handle.1135"** %13, %15
  %17 = ptrtoint %"class.v8::internal::Handle.1135"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::Handle.1135"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::Handle.1135"** %24 to i8*
  %30 = bitcast %"class.v8::internal::Handle.1135"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::Handle.1135"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %24, i64 %26
  store %"class.v8::internal::Handle.1135"** %34, %"class.v8::internal::Handle.1135"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %33, i64 %23
  store %"class.v8::internal::Handle.1135"** %35, %"class.v8::internal::Handle.1135"*** %12, align 8
  %36 = bitcast %"class.v8::internal::Handle.1135"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::Handle.1135"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1265"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46 to %"class.v8::internal::Handle.1135"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #11
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::Handle.1135"**
  %75 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  %76 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::Handle.1135"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::Handle.1135"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::Handle.1135"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::Handle.1135"** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::Handle.1135"** %86 to i64
  %88 = ptrtoint %"class.v8::internal::Handle.1135"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::Handle.1135"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::Handle.1135"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::Handle.1135"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::Handle.1135"** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !27

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::Handle.1135"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::Handle.1135"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::Handle.1135"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::Handle.1135"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::Handle.1135"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::Handle.1135"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 1
  %128 = bitcast %"class.v8::internal::Handle.1135"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::Handle.1135"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 2
  %133 = bitcast %"class.v8::internal::Handle.1135"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::Handle.1135"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 3
  %138 = bitcast %"class.v8::internal::Handle.1135"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::Handle.1135"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 4
  %143 = bitcast %"class.v8::internal::Handle.1135"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::Handle.1135"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 5
  %148 = bitcast %"class.v8::internal::Handle.1135"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::Handle.1135"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 6
  %153 = bitcast %"class.v8::internal::Handle.1135"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::Handle.1135"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 7
  %158 = bitcast %"class.v8::internal::Handle.1135"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::Handle.1135"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::Handle.1135"** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 8
  %164 = icmp eq %"class.v8::internal::Handle.1135"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::Handle.1135"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::Handle.1135"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::Handle.1135"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %172, i64 1
  %188 = bitcast %"class.v8::internal::Handle.1135"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %172, %"class.v8::internal::Handle.1135"*** %192, align 8
  %193 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::Handle.1135"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %199, i64 1
  store %"class.v8::internal::Handle.1135"** %200, %"class.v8::internal::Handle.1135"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1265"*, %"class.v8::internal::Handle.1135"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Handle.1135"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Handle.1135"** %6 to i64
  %9 = ptrtoint %"class.v8::internal::Handle.1135"** %4 to i64
  %10 = bitcast %"class.v8::internal::Handle.1135"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %14, align 8
  %16 = icmp ugt %"class.v8::internal::Handle.1135"** %13, %15
  %17 = ptrtoint %"class.v8::internal::Handle.1135"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::Handle.1135"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::Handle.1135"** %24 to i8*
  %30 = bitcast %"class.v8::internal::Handle.1135"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::Handle.1135"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %24, i64 %26
  store %"class.v8::internal::Handle.1135"** %34, %"class.v8::internal::Handle.1135"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %33, i64 %23
  store %"class.v8::internal::Handle.1135"** %35, %"class.v8::internal::Handle.1135"*** %12, align 8
  %36 = bitcast %"class.v8::internal::Handle.1135"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::Handle.1135"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1265"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46 to %"class.v8::internal::Handle.1135"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #11
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::Handle.1135"**
  %75 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  %76 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::Handle.1135"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::Handle.1135"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::Handle.1135"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::Handle.1135"** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::Handle.1135"** %86 to i64
  %88 = ptrtoint %"class.v8::internal::Handle.1135"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::Handle.1135"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::Handle.1135"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::Handle.1135"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::Handle.1135"** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !28

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::Handle.1135"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::Handle.1135"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::Handle.1135"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::Handle.1135"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::Handle.1135"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::Handle.1135"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 1
  %128 = bitcast %"class.v8::internal::Handle.1135"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::Handle.1135"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 2
  %133 = bitcast %"class.v8::internal::Handle.1135"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::Handle.1135"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 3
  %138 = bitcast %"class.v8::internal::Handle.1135"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::Handle.1135"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 4
  %143 = bitcast %"class.v8::internal::Handle.1135"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::Handle.1135"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 5
  %148 = bitcast %"class.v8::internal::Handle.1135"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::Handle.1135"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 6
  %153 = bitcast %"class.v8::internal::Handle.1135"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::Handle.1135"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 7
  %158 = bitcast %"class.v8::internal::Handle.1135"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::Handle.1135"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::Handle.1135"** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %122, i64 8
  %164 = icmp eq %"class.v8::internal::Handle.1135"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::Handle.1135"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::Handle.1135"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::Handle.1135"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %172, i64 1
  %188 = bitcast %"class.v8::internal::Handle.1135"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %45 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %172, %"class.v8::internal::Handle.1135"*** %192, align 8
  %193 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::Handle.1135"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %199, i64 1
  store %"class.v8::internal::Handle.1135"** %200, %"class.v8::internal::Handle.1135"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.1265"*, %"class.v8::internal::Handle.1135"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Handle.1135"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Handle.1135"** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::Handle.1135"** %11, %13
  %15 = bitcast %"class.v8::internal::Handle.1135"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::Handle.1135"** %13 to i64
  %17 = ptrtoint %"class.v8::internal::Handle.1135"** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::Handle.1135"** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::Handle.1135"** %30 to i8*
  %32 = bitcast %"class.v8::internal::Handle.1135"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::Handle.1135"** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::Handle.1135"** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::Handle.1135"** %36, %"class.v8::internal::Handle.1135"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %35, i64 %22
  store %"class.v8::internal::Handle.1135"** %37, %"class.v8::internal::Handle.1135"*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1265"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %47 to %"class.v8::internal::Handle.1135"**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::Handle.1135"*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.1265", %"struct.std::__1::__split_buffer.1265"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #11
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::Handle.1135"**
  %76 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %77 = bitcast %"class.v8::internal::Handle.1135"*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::Handle.1135"** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::Handle.1135"** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::Handle.1135"** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::Handle.1135"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::Handle.1135"** %87 to i64
  %89 = ptrtoint %"class.v8::internal::Handle.1135"** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::Handle.1135"** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::Handle.1135"** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::Handle.1135"** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::Handle.1135"** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !29

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::Handle.1135"** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::Handle.1135"** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::Handle.1135"** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::Handle.1135"** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::Handle.1135"** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::Handle.1135"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 1
  %129 = bitcast %"class.v8::internal::Handle.1135"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::Handle.1135"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 2
  %134 = bitcast %"class.v8::internal::Handle.1135"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::Handle.1135"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 3
  %139 = bitcast %"class.v8::internal::Handle.1135"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::Handle.1135"** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 4
  %144 = bitcast %"class.v8::internal::Handle.1135"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::Handle.1135"** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 5
  %149 = bitcast %"class.v8::internal::Handle.1135"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::Handle.1135"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 6
  %154 = bitcast %"class.v8::internal::Handle.1135"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::Handle.1135"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 7
  %159 = bitcast %"class.v8::internal::Handle.1135"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::Handle.1135"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::Handle.1135"** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %123, i64 8
  %165 = icmp eq %"class.v8::internal::Handle.1135"** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::Handle.1135"** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::Handle.1135"**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %173, i64 1
  %188 = bitcast %"class.v8::internal::Handle.1135"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %46 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %173, %"class.v8::internal::Handle.1135"*** %192, align 8
  %193 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::Handle.1135"** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %195, i64 -1
  %197 = bitcast %"class.v8::internal::Handle.1135"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::Handle.1135"** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %200, i64 -1
  store %"class.v8::internal::Handle.1135"** %201, %"class.v8::internal::Handle.1135"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1355"*, %"class.v8::internal::Handle.1135"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Handle.1135"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Handle.1135"** %6 to i64
  %9 = bitcast %"class.v8::internal::Handle.1135"** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::Handle.1135"** %12, %14
  %16 = ptrtoint %"class.v8::internal::Handle.1135"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::Handle.1135"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::Handle.1135"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::Handle.1135"** %23 to i8*
  %30 = bitcast %"class.v8::internal::Handle.1135"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::Handle.1135"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %23, i64 %26
  store %"class.v8::internal::Handle.1135"** %34, %"class.v8::internal::Handle.1135"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %33, i64 %22
  store %"class.v8::internal::Handle.1135"** %35, %"class.v8::internal::Handle.1135"*** %11, align 8
  %36 = bitcast %"class.v8::internal::Handle.1135"** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::Handle.1135"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1355"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %48 to %"class.v8::internal::Handle.1135"**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #11
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::Handle.1135"**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::Handle.1135"** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::Handle.1135"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::Handle.1135"** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::Handle.1135"** %81 to i64
  %83 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %11, align 8
  %84 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::Handle.1135"** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::Handle.1135"** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::Handle.1135"** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::Handle.1135"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::Handle.1135"** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !30

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::Handle.1135"** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::Handle.1135"** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::Handle.1135"** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::Handle.1135"** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::Handle.1135"** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::Handle.1135"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 1
  %126 = bitcast %"class.v8::internal::Handle.1135"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::Handle.1135"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 2
  %131 = bitcast %"class.v8::internal::Handle.1135"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::Handle.1135"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 3
  %136 = bitcast %"class.v8::internal::Handle.1135"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::Handle.1135"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 4
  %141 = bitcast %"class.v8::internal::Handle.1135"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::Handle.1135"** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 5
  %146 = bitcast %"class.v8::internal::Handle.1135"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::Handle.1135"** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 6
  %151 = bitcast %"class.v8::internal::Handle.1135"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::Handle.1135"** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 7
  %156 = bitcast %"class.v8::internal::Handle.1135"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::Handle.1135"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::Handle.1135"** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %120, i64 8
  %162 = icmp eq %"class.v8::internal::Handle.1135"** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::Handle.1135"** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::Handle.1135"*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::Handle.1135"**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %170, i64 1
  %186 = bitcast %"class.v8::internal::Handle.1135"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %47 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %170, %"class.v8::internal::Handle.1135"*** %190, align 8
  %191 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::Handle.1135"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %197, i64 1
  store %"class.v8::internal::Handle.1135"** %198, %"class.v8::internal::Handle.1135"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal6HandleINS2_16SourceTextModuleEEERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1355"*, %"class.v8::internal::Handle.1135"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Handle.1135"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Handle.1135"** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::Handle.1135"** %11, %13
  %15 = bitcast %"class.v8::internal::Handle.1135"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::Handle.1135"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::Handle.1135"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::Handle.1135"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::Handle.1135"** %30 to i8*
  %32 = bitcast %"class.v8::internal::Handle.1135"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::Handle.1135"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::Handle.1135"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::Handle.1135"** %36, %"class.v8::internal::Handle.1135"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %35, i64 %22
  store %"class.v8::internal::Handle.1135"** %37, %"class.v8::internal::Handle.1135"*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1355"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1355", %"struct.std::__1::__split_buffer.1355"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %49 to %"class.v8::internal::Handle.1135"**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #11
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::Handle.1135"**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::Handle.1135"** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::Handle.1135"** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::Handle.1135"** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::Handle.1135"** %82 to i64
  %84 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %85 = bitcast %"class.v8::internal::Handle.1135"*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::Handle.1135"** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::Handle.1135"** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::Handle.1135"** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::Handle.1135"** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::Handle.1135"** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !31

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::Handle.1135"** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::Handle.1135"** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::Handle.1135"** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::Handle.1135"** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::Handle.1135"** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::Handle.1135"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 1
  %127 = bitcast %"class.v8::internal::Handle.1135"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::Handle.1135"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 2
  %132 = bitcast %"class.v8::internal::Handle.1135"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::Handle.1135"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 3
  %137 = bitcast %"class.v8::internal::Handle.1135"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::Handle.1135"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 4
  %142 = bitcast %"class.v8::internal::Handle.1135"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::Handle.1135"** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 5
  %147 = bitcast %"class.v8::internal::Handle.1135"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::Handle.1135"** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 6
  %152 = bitcast %"class.v8::internal::Handle.1135"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::Handle.1135"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 7
  %157 = bitcast %"class.v8::internal::Handle.1135"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::Handle.1135"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::Handle.1135"** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %121, i64 8
  %163 = icmp eq %"class.v8::internal::Handle.1135"** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::Handle.1135"** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::Handle.1135"*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::Handle.1135"**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %171, i64 1
  %186 = bitcast %"class.v8::internal::Handle.1135"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::Handle<v8::internal::SourceTextModule> *>::FreeBlock"** %48 to %"class.v8::internal::Handle.1135"***
  store %"class.v8::internal::Handle.1135"** %171, %"class.v8::internal::Handle.1135"*** %190, align 8
  %191 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::Handle.1135"** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::Handle.1135"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::Handle.1135"** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::Handle.1135"**, %"class.v8::internal::Handle.1135"*** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %198, i64 -1
  store %"class.v8::internal::Handle.1135"** %199, %"class.v8::internal::Handle.1135"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1257"*, %"class.v8::internal::Handle.1135"* dereferenceable(8), %"class.v8::internal::Handle.1135"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1257", %"class.std::__1::__tree.1257"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.1257", %"class.std::__1::__tree.1257"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %1, i64 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 67
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 2
  br label %17

17:                                               ; preds = %44, %8
  %18 = phi %"class.std::__1::__tree_node_base"** [ %46, %44 ], [ %9, %8 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %47, %44 ], [ %6, %8 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 67
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = lshr i32 %25, 2
  %27 = icmp ult i32 %16, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %50

34:                                               ; preds = %17
  %35 = icmp ult i32 %26, %16
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %50

44:                                               ; preds = %36, %28
  %45 = phi %"class.std::__1::__tree_node_base"* [ %30, %28 ], [ %38, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %29, %28 ], [ %37, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"* %45 to %"class.std::__1::__tree_node"*
  br label %17

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %50

50:                                               ; preds = %32, %40, %42, %48
  %51 = phi %"class.std::__1::__tree_end_node"* [ %4, %48 ], [ %33, %32 ], [ %41, %40 ], [ %43, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %29, %32 ], [ %37, %40 ], [ %18, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node"**
  %54 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node"* %54, null
  br i1 %55, label %56, label %95

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::__tree.1257", %"class.std::__1::__tree.1257"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8, !noalias !32
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8, !noalias !32
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8, !noalias !32
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 40
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 40) #11, !noalias !32
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 40
  store i64 %68, i64* %59, align 8, !noalias !32
  br label %69

69:                                               ; preds = %65, %67
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.std::__1::__tree_node"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1
  %73 = bitcast %"class.v8::internal::Handle.1135"* %2 to i64*
  %74 = bitcast %"class.v8::internal::Handle.1135"* %72 to i64*
  %75 = load i64, i64* %73, align 8, !noalias !32
  store i64 %75, i64* %74, align 8, !noalias !32
  %76 = inttoptr i64 %70 to %"class.std::__1::__tree_node_base"*
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  %78 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %77, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %52, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree.1257", %"class.std::__1::__tree.1257"* %0, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %69
  %85 = ptrtoint %"class.std::__1::__tree_node_base"* %82 to i64
  %86 = bitcast %"class.std::__1::__tree.1257"* %0 to i64*
  store i64 %85, i64* %86, align 8
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  br label %88

88:                                               ; preds = %69, %84
  %89 = phi %"class.std::__1::__tree_node_base"* [ %76, %69 ], [ %87, %84 ]
  %90 = getelementptr inbounds %"class.std::__1::__tree.1257", %"class.std::__1::__tree.1257"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %89) #11
  %92 = getelementptr inbounds %"class.std::__1::__tree.1257", %"class.std::__1::__tree.1257"* %0, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %88, %50
  %96 = phi i8 [ 1, %88 ], [ 0, %50 ]
  %97 = phi %"class.std::__1::__tree_node"* [ %71, %88 ], [ %54, %50 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  %99 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %98, 0
  %100 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %99, i8 %96, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!6 = !{!"branch_weights", i32 1, i32 2001, i32 2001, i32 2001, i32 2000}
!7 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!8 = !{!"branch_weights", i32 4001, i32 1}
!9 = !{i64 0, i64 65}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE21__construct_node_hashINS_4pairIKS6_S8_EEJEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6ModuleEEEPNS3_18UnorderedStringSetEEENS_22__unordered_map_hasherIS6_S9_NS3_16ModuleHandleHashENS3_17ModuleHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE21__construct_node_hashINS_4pairIKS6_S8_EEJEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !11}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6StringEEENS2_16StringHandleHashENS2_17StringHandleEqualENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISF_EEEEEEmOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__112__hash_tableIN2v88internal6HandleINS2_6ModuleEEENS2_16ModuleHandleHashENS2_17ModuleHandleEqualENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISF_EEEEEEmOT_DpOT0_"}
!23 = distinct !{!23, !11}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE21__construct_node_hashINS_4pairIS6_NS4_INS3_4CellEEEEEJEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSG_ISR_EEEEEEmOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal6HandleINS3_6StringEEENS4_INS3_6ObjectEEEEENS_22__unordered_map_hasherIS6_S9_NS3_16StringHandleHashENS3_17StringHandleEqualELb1EEENS_21__unordered_map_equalIS6_S9_SC_SB_Lb1EEENS3_13ZoneAllocatorIS9_EEE21__construct_node_hashINS_4pairIS6_NS4_INS3_4CellEEEEEJEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSG_ISR_EEEEEEmOT_DpOT0_"}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !11}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !11}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__16__treeIN2v88internal6HandleINS2_16SourceTextModuleEEENS4_29AsyncEvaluatingOrdinalCompareENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
