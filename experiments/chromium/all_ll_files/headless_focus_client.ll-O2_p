; ModuleID = '../../headless/lib/browser/headless_focus_client.cc'
source_filename = "../../headless/lib/browser/headless_focus_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::HeadlessFocusClient" = type { %"class.aura::client::FocusClient", %"class.aura::WindowObserver", %"class.aura::Window"*, %class.ScopedObserver, %"class.base::ObserverList.86" }
%"class.aura::client::FocusClient" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.41", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::vector.60", i32, i32, i32, [4 x i8], %"class.base::ObserverList.67", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.79", %"class.base::WeakPtr.85" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.10", %"class.std::__1::vector.17", %"class.ui::EventHandler"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.12" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.32" }
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.67" = type <{ %"class.std::__1::vector.68", %"class.base::LinkedList.76", i64, i32, [4 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.76" = type { %"class.base::LinkNode.77" }
%"class.base::LinkNode.77" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.85" = type { %"class.base::internal::WeakPtrBase" }
%class.ScopedObserver = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.41" }
%"class.base::ObserverList.86" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.87", i64, i32, [4 x i8] }>
%"class.base::LinkedList.87" = type { %"class.base::LinkNode.88" }
%"class.base::LinkNode.88" = type { %"class.base::internal::LinkNodeBase" }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.88", %"class.base::ObserverList.86"* }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura6client11FocusClientD2Ev = comdat any

$_ZN4aura6client11FocusClientD0Ev = comdat any

$_ZTVN4aura6client11FocusClientE = comdat any

@_ZTVN8headless19HeadlessFocusClientE = hidden unnamed_addr constant { [10 x i8*], [30 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::HeadlessFocusClient"*)* @_ZN8headless19HeadlessFocusClientD2Ev to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*)* @_ZN8headless19HeadlessFocusClientD0Ev to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*, %"class.aura::client::FocusChangeObserver"*)* @_ZN8headless19HeadlessFocusClient11AddObserverEPN4aura6client19FocusChangeObserverE to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*, %"class.aura::client::FocusChangeObserver"*)* @_ZN8headless19HeadlessFocusClient14RemoveObserverEPN4aura6client19FocusChangeObserverE to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)* @_ZN8headless19HeadlessFocusClient11FocusWindowEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)* @_ZN8headless19HeadlessFocusClient28ResetFocusWithinActiveWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.headless::HeadlessFocusClient"*)* @_ZN8headless19HeadlessFocusClient16GetFocusedWindowEv to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)* @_ZN8headless19HeadlessFocusClient18OnWindowDestroyingEPN4aura6WindowE to i8*)], [30 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.headless::HeadlessFocusClient"*)* @_ZThn8_N8headless19HeadlessFocusClientD1Ev to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*)* @_ZThn8_N8headless19HeadlessFocusClientD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)* @_ZThn8_N8headless19HeadlessFocusClient18OnWindowDestroyingEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@_ZTVN4aura6client11FocusClientE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::client::FocusClient"*)* @_ZN4aura6client11FocusClientD2Ev to i8*), i8* bitcast (void (%"class.aura::client::FocusClient"*)* @_ZN4aura6client11FocusClientD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN8headless19HeadlessFocusClientC1Ev = hidden unnamed_addr alias void (%"class.headless::HeadlessFocusClient"*), void (%"class.headless::HeadlessFocusClient"*)* @_ZN8headless19HeadlessFocusClientC2Ev
@_ZN8headless19HeadlessFocusClientD1Ev = hidden unnamed_addr alias void (%"class.headless::HeadlessFocusClient"*), void (%"class.headless::HeadlessFocusClient"*)* @_ZN8headless19HeadlessFocusClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClientC2Ev(%"class.headless::HeadlessFocusClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4aura6client11FocusClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 1
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %3) #10
  %4 = bitcast %"class.headless::HeadlessFocusClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [30 x i8*] }, { [10 x i8*], [30 x i8*] }* @_ZTVN8headless19HeadlessFocusClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [30 x i8*] }, { [10 x i8*], [30 x i8*] }* @_ZTVN8headless19HeadlessFocusClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 2
  store %"class.aura::Window"* null, %"class.aura::Window"** %5, align 8
  %6 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 0
  store %"class.aura::WindowObserver"* %3, %"class.aura::WindowObserver"** %6, align 8
  %7 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1
  %8 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector.41"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %8, %"class.base::internal::LinkNodeBase"* %8, %"class.base::internal::LinkNodeBase"* %8) #10
  %10 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %11, align 8
  ret void
}

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClientD2Ev(%"class.headless::HeadlessFocusClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 1
  %3 = bitcast %"class.headless::HeadlessFocusClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [30 x i8*] }, { [10 x i8*], [30 x i8*] }* @_ZTVN8headless19HeadlessFocusClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [30 x i8*] }, { [10 x i8*], [30 x i8*] }* @_ZTVN8headless19HeadlessFocusClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to %"class.base::LinkNode.88"**
  %6 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 1, i32 0
  %7 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %5, align 8
  %8 = icmp eq %"class.base::LinkNode.88"* %7, %6
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"class.base::LinkNode.88"* [ %19, %18 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.base::LinkNode.88", %"class.base::LinkNode.88"* %10, i64 1
  %12 = bitcast %"class.base::LinkNode.88"* %11 to %"class.base::ObserverList.86"**
  %13 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %12, align 8
  %14 = icmp eq %"class.base::ObserverList.86"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %12, align 8
  %16 = getelementptr inbounds %"class.base::LinkNode.88", %"class.base::LinkNode.88"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %16) #10
  %17 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %5, align 8
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi %"class.base::LinkNode.88"* [ %10, %9 ], [ %17, %15 ]
  %20 = icmp eq %"class.base::LinkNode.88"* %19, %6
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8
  %24 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %23 to i64
  %27 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %33 = bitcast %"class.aura::Window"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.41"* %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  br i1 %37, label %53, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 0
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ %36, %38 ], [ %49, %40 ]
  %42 = phi i64 [ 0, %38 ], [ %47, %40 ]
  %43 = inttoptr i64 %41 to %"class.aura::Window"**
  %44 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %43, i64 %42
  %45 = load %"class.aura::Window"*, %"class.aura::Window"** %44, align 8
  %46 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %39, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %45, %"class.aura::WindowObserver"* %46) #10
  %47 = add nuw i64 %42, 1
  %48 = load i64, i64* %33, align 8
  %49 = load i64, i64* %35, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %47, %51
  br i1 %52, label %40, label %53

53:                                               ; preds = %40, %30
  %54 = phi i64 [ %34, %30 ], [ %49, %40 ]
  store i64 %54, i64* %33, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  store i64 %54, i64* %33, align 8
  %57 = inttoptr i64 %54 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %53, %56
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless19HeadlessFocusClientD1Ev(%"class.headless::HeadlessFocusClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 -1, i32 4, i32 3
  %3 = bitcast i32* %2 to %"class.headless::HeadlessFocusClient"*
  tail call void @_ZN8headless19HeadlessFocusClientD2Ev(%"class.headless::HeadlessFocusClient"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClientD0Ev(%"class.headless::HeadlessFocusClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8headless19HeadlessFocusClientD2Ev(%"class.headless::HeadlessFocusClient"* %0) #10
  %2 = bitcast %"class.headless::HeadlessFocusClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless19HeadlessFocusClientD0Ev(%"class.headless::HeadlessFocusClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 -1, i32 4, i32 3
  %3 = bitcast i32* %2 to %"class.headless::HeadlessFocusClient"*
  tail call void @_ZN8headless19HeadlessFocusClientD2Ev(%"class.headless::HeadlessFocusClient"* %3) #10
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClient11AddObserverEPN4aura6client19FocusChangeObserverE(%"class.headless::HeadlessFocusClient"*, %"class.aura::client::FocusChangeObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4
  %4 = icmp eq %"class.aura::client::FocusChangeObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.aura::client::FocusChangeObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.aura::client::FocusChangeObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.86"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.86"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #12
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #12
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #11
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #10
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClient14RemoveObserverEPN4aura6client19FocusChangeObserverE(%"class.headless::HeadlessFocusClient"*, %"class.aura::client::FocusChangeObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.aura::client::FocusChangeObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.88"**
  %32 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.88"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClient11FocusWindowEPN4aura6WindowE(%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = icmp ne %"class.aura::Window"* %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK4aura6Window8CanFocusEv(%"class.aura::Window"* nonnull %1) #10
  br i1 %7, label %8, label %467

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 2
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %14 = load %"class.aura::Window"**, %"class.aura::Window"*** %13, align 8
  %15 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %16 = load %"class.aura::Window"**, %"class.aura::Window"*** %15, align 8
  %17 = icmp eq %"class.aura::Window"** %14, %16
  %18 = ptrtoint %"class.aura::Window"** %16 to i64
  br i1 %17, label %26, label %19

19:                                               ; preds = %12, %23
  %20 = phi %"class.aura::Window"** [ %24, %23 ], [ %14, %12 ]
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp eq %"class.aura::Window"* %21, %10
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 1
  %25 = icmp eq %"class.aura::Window"** %24, %16
  br i1 %25, label %26, label %19

26:                                               ; preds = %23, %19, %12
  %27 = phi %"class.aura::Window"** [ %14, %12 ], [ %20, %19 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %27, i64 1
  %29 = ptrtoint %"class.aura::Window"** %28 to i64
  %30 = sub i64 %18, %29
  %31 = ashr exact i64 %30, 3
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.aura::Window"** %27 to i8*
  %35 = bitcast %"class.aura::Window"** %28 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %30, i1 false) #10
  br label %36

36:                                               ; preds = %26, %33
  %37 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %27, i64 %31
  store %"class.aura::Window"** %37, %"class.aura::Window"*** %15, align 8
  %38 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 0
  %39 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %38, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %10, %"class.aura::WindowObserver"* %39) #10
  %40 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  br label %41

41:                                               ; preds = %8, %36
  %42 = phi %"class.aura::Window"* [ null, %8 ], [ %40, %36 ]
  store %"class.aura::Window"* %1, %"class.aura::Window"** %9, align 8
  br i1 %5, label %43, label %117

43:                                               ; preds = %41
  %44 = ptrtoint %"class.aura::Window"* %1 to i64
  %45 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1
  %46 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"class.aura::Window"**, %"class.aura::Window"*** %46, align 8
  %48 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 2, i32 0, i32 0
  %49 = load %"class.aura::Window"**, %"class.aura::Window"*** %48, align 8
  %50 = icmp eq %"class.aura::Window"** %47, %49
  %51 = ptrtoint %"class.aura::Window"** %49 to i64
  br i1 %50, label %57, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.aura::Window"** %47 to i64*
  store i64 %44, i64* %53, align 8
  %54 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 1
  %55 = ptrtoint %"class.aura::Window"** %54 to i64
  %56 = bitcast %"class.aura::Window"*** %46 to i64*
  store i64 %55, i64* %56, align 8
  br label %114

57:                                               ; preds = %43
  %58 = ptrtoint %"class.aura::Window"** %47 to i64
  %59 = bitcast %"class.aura::Window"*** %46 to i64*
  %60 = bitcast %"class.std::__1::vector.41"* %45 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %58, %61
  %63 = ashr exact i64 %62, 3
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 2305843009213693951
  br i1 %65, label %66, label %68

66:                                               ; preds = %57
  %67 = bitcast %"class.std::__1::vector.41"* %45 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #12
  unreachable

68:                                               ; preds = %57
  %69 = bitcast %"class.aura::Window"*** %48 to i64*
  %70 = sub i64 %51, %61
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 1152921504606846975
  br i1 %72, label %73, label %81

73:                                               ; preds = %68
  %74 = ashr exact i64 %70, 2
  %75 = icmp ult i64 %74, %64
  %76 = select i1 %75, i64 %64, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = icmp ugt i64 %76, 2305843009213693951
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  tail call void @abort() #12
  unreachable

81:                                               ; preds = %78, %68
  %82 = phi i64 [ %76, %78 ], [ 2305843009213693951, %68 ]
  %83 = shl i64 %82, 3
  %84 = tail call i8* @_Znwm(i64 %83) #11
  %85 = bitcast i8* %84 to %"class.aura::Window"**
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64 [ %82, %81 ], [ 0, %73 ]
  %88 = phi %"class.aura::Window"** [ %85, %81 ], [ null, %73 ]
  %89 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %88, i64 %63
  %90 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %88, i64 %87
  %91 = ptrtoint %"class.aura::Window"** %90 to i64
  %92 = bitcast %"class.aura::Window"** %89 to i64*
  store i64 %44, i64* %92, align 8
  %93 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 1
  %94 = ptrtoint %"class.aura::Window"** %93 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %45, i64 0, i32 0, i32 0
  %96 = load %"class.aura::Window"**, %"class.aura::Window"*** %95, align 8
  %97 = load i64, i64* %59, align 8
  %98 = ptrtoint %"class.aura::Window"** %96 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 3
  %101 = sub nsw i64 0, %100
  %102 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 %101
  %103 = ptrtoint %"class.aura::Window"** %102 to i64
  %104 = icmp sgt i64 %99, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %86
  %106 = bitcast %"class.aura::Window"** %102 to i8*
  %107 = bitcast %"class.aura::Window"** %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 %99, i1 false) #10
  %108 = load %"class.aura::Window"**, %"class.aura::Window"*** %95, align 8
  br label %109

109:                                              ; preds = %105, %86
  %110 = phi %"class.aura::Window"** [ %96, %86 ], [ %108, %105 ]
  store i64 %103, i64* %60, align 8
  store i64 %94, i64* %59, align 8
  store i64 %91, i64* %69, align 8
  %111 = icmp eq %"class.aura::Window"** %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.aura::Window"** %110 to i8*
  tail call void @_ZdlPv(i8* %113) #11
  br label %114

114:                                              ; preds = %52, %109, %112
  %115 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 3, i32 0
  %116 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %115, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %1, %"class.aura::WindowObserver"* %116) #10
  br label %117

117:                                              ; preds = %114, %41
  %118 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4
  %119 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #10
  %120 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %122 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %123 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %118, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 40, i1 false)
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8, !noalias !2
  %126 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8, !noalias !2
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  %129 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %129) #10
  br i1 %128, label %130, label %132

130:                                              ; preds = %117
  %131 = bitcast %"class.base::ObserverList.86"** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %172

132:                                              ; preds = %117
  store %"class.base::ObserverList.86"* %118, %"class.base::ObserverList.86"** %120, align 8
  %133 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %129, %"class.base::internal::LinkNodeBase"* %133) #10
  store i64 0, i64* %121, align 8
  %134 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 4, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %132
  %138 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %126 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.base::ObserverList.86"* %118 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %139, %141
  %143 = ashr exact i64 %142, 3
  br label %144

144:                                              ; preds = %137, %132
  %145 = phi i64 [ %143, %137 ], [ -1, %132 ]
  store i64 %145, i64* %122, align 8
  %146 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %120, align 8
  %147 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %146, i64 0, i32 0, i32 0, i32 1
  %148 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.base::ObserverList.86"* %146 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = ashr exact i64 %152, 3
  %154 = icmp ult i64 %153, %145
  %155 = select i1 %154, i64 %153, i64 %145
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %172, label %157

157:                                              ; preds = %144
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %146, i64 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %163, label %172

163:                                              ; preds = %157, %167
  %164 = phi i64 [ %165, %167 ], [ 0, %157 ]
  %165 = add nuw i64 %164, 1
  store i64 %165, i64* %121, align 8
  %166 = icmp ult i64 %165, %155
  br i1 %166, label %167, label %172

167:                                              ; preds = %163
  %168 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %159, align 8
  %169 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 %165, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = icmp eq i8* %170, null
  br i1 %171, label %163, label %172

172:                                              ; preds = %167, %163, %157, %144, %130
  %173 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %173) #10
  %174 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %175 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %176 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %177 = getelementptr inbounds %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.base::ObserverList<aura::client::FocusChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %177) #10
  %179 = bitcast %"class.base::ObserverList.86"** %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 24, i1 false) #10, !alias.scope !5
  %180 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %120, align 8
  br label %181

181:                                              ; preds = %423, %172
  %182 = phi %"class.base::ObserverList.86"* [ %180, %172 ], [ %421, %423 ]
  %183 = icmp eq %"class.base::ObserverList.86"* %182, null
  br i1 %183, label %199, label %184

184:                                              ; preds = %181
  %185 = load i64, i64* %121, align 8
  %186 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %182, i64 0, i32 0, i32 0, i32 1
  %187 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.base::ObserverList.86"* %182 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %188, %190
  %192 = ashr exact i64 %191, 3
  %193 = load i64, i64* %122, align 8
  %194 = icmp ult i64 %192, %193
  %195 = select i1 %194, i64 %192, i64 %193
  %196 = icmp eq i64 %185, %195
  br i1 %196, label %199, label %197

197:                                              ; preds = %184
  %198 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %174, align 8
  br label %215

199:                                              ; preds = %184, %181
  %200 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %174, align 8
  %201 = icmp eq %"class.base::ObserverList.86"* %200, null
  br i1 %201, label %315, label %202

202:                                              ; preds = %199
  %203 = load i64, i64* %175, align 8
  %204 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %200, i64 0, i32 0, i32 0, i32 1
  %205 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.base::ObserverList.86"* %200 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = sub i64 %206, %208
  %210 = ashr exact i64 %209, 3
  %211 = load i64, i64* %176, align 8
  %212 = icmp ult i64 %210, %211
  %213 = select i1 %212, i64 %210, i64 %211
  %214 = icmp eq i64 %203, %213
  br i1 %214, label %224, label %215

215:                                              ; preds = %202, %197
  %216 = phi %"class.base::ObserverList.86"* [ %198, %197 ], [ %200, %202 ]
  %217 = icmp eq %"class.base::ObserverList.86"* %182, %216
  %218 = load i64, i64* %121, align 8
  %219 = load i64, i64* %175, align 8
  %220 = icmp eq i64 %218, %219
  %221 = and i1 %217, %220
  br i1 %221, label %222, label %411

222:                                              ; preds = %215
  %223 = icmp eq %"class.base::ObserverList.86"* %182, null
  br i1 %223, label %315, label %224

224:                                              ; preds = %202, %222
  %225 = phi %"class.base::ObserverList.86"* [ %182, %222 ], [ %200, %202 ]
  %226 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %225, i64 0, i32 1
  %227 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %225, i64 0, i32 1, i32 0, i32 0, i32 1
  %228 = bitcast %"class.base::internal::LinkNodeBase"** %227 to %"class.base::LinkNode.88"**
  %229 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %228, align 8
  %230 = bitcast %"class.base::LinkedList.87"* %226 to %"class.base::LinkNode.88"**
  %231 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %230, align 8
  %232 = icmp eq %"class.base::LinkNode.88"* %229, %231
  br i1 %232, label %233, label %311

233:                                              ; preds = %224
  %234 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %225, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  %236 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %225, i64 0, i32 0, i32 0, i32 1
  %237 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %236, align 8
  %238 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %237
  br i1 %238, label %247, label %239

239:                                              ; preds = %233, %244
  %240 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %245, %244 ], [ %235, %233 ]
  %241 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = icmp eq i8* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 1
  %246 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %245, %237
  br i1 %246, label %311, label %239

247:                                              ; preds = %239, %233
  %248 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %233 ], [ %240, %239 ]
  %249 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %248 to i64
  %250 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %248, %237
  br i1 %250, label %311, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 1
  %253 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %252, %237
  br i1 %253, label %306, label %254

254:                                              ; preds = %251
  %255 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 -2, i32 0
  %256 = ptrtoint i8** %255 to i64
  %257 = sub i64 %256, %249
  %258 = lshr i64 %257, 3
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %280, label %262

262:                                              ; preds = %254, %275
  %263 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %277, %275 ], [ %252, %254 ]
  %264 = phi i64 [ %276, %275 ], [ %249, %254 ]
  %265 = phi i64 [ %278, %275 ], [ %260, %254 ]
  %266 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = icmp eq i8* %267, null
  br i1 %268, label %275, label %269

269:                                              ; preds = %262
  %270 = ptrtoint i8* %267 to i64
  %271 = inttoptr i64 %264 to %"class.base::internal::UncheckedObserverAdapter"*
  %272 = inttoptr i64 %264 to i64*
  store i64 %270, i64* %272, align 8
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 1
  %274 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %273 to i64
  br label %275

275:                                              ; preds = %269, %262
  %276 = phi i64 [ %264, %262 ], [ %274, %269 ]
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 1
  %278 = add i64 %265, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %262, !llvm.loop !8

280:                                              ; preds = %275, %254
  %281 = phi i64 [ undef, %254 ], [ %276, %275 ]
  %282 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %252, %254 ], [ %277, %275 ]
  %283 = phi i64 [ %249, %254 ], [ %276, %275 ]
  %284 = icmp ult i64 %257, 24
  br i1 %284, label %302, label %285

285:                                              ; preds = %280, %528
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %530, %528 ], [ %282, %280 ]
  %287 = phi i64 [ %529, %528 ], [ %283, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 0, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = icmp eq i8* %289, null
  br i1 %290, label %297, label %291

291:                                              ; preds = %285
  %292 = ptrtoint i8* %289 to i64
  %293 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %294 = inttoptr i64 %287 to i64*
  store i64 %292, i64* %294, align 8
  %295 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %293, i64 1
  %296 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %295 to i64
  br label %297

297:                                              ; preds = %291, %285
  %298 = phi i64 [ %287, %285 ], [ %296, %291 ]
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 1, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %506, label %500

302:                                              ; preds = %528, %280
  %303 = phi i64 [ %281, %280 ], [ %529, %528 ]
  %304 = inttoptr i64 %303 to %"class.base::internal::UncheckedObserverAdapter"*
  %305 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %236, align 8
  br label %306

306:                                              ; preds = %302, %251
  %307 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %237, %251 ], [ %305, %302 ]
  %308 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %251 ], [ %304, %302 ]
  %309 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %308, %307
  br i1 %309, label %311, label %310

310:                                              ; preds = %306
  store %"class.base::internal::UncheckedObserverAdapter"* %308, %"class.base::internal::UncheckedObserverAdapter"** %236, align 8
  br label %311

311:                                              ; preds = %244, %310, %306, %247, %224
  %312 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %174, align 8
  %313 = icmp eq %"class.base::ObserverList.86"* %312, null
  br i1 %313, label %315, label %314

314:                                              ; preds = %311
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %174, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %177) #10
  br label %315

315:                                              ; preds = %199, %222, %311, %314
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %173) #10
  %316 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %120, align 8
  %317 = icmp eq %"class.base::ObserverList.86"* %316, null
  br i1 %317, label %408, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %316, i64 0, i32 1
  %320 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %316, i64 0, i32 1, i32 0, i32 0, i32 1
  %321 = bitcast %"class.base::internal::LinkNodeBase"** %320 to %"class.base::LinkNode.88"**
  %322 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %321, align 8
  %323 = bitcast %"class.base::LinkedList.87"* %319 to %"class.base::LinkNode.88"**
  %324 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %323, align 8
  %325 = icmp eq %"class.base::LinkNode.88"* %322, %324
  br i1 %325, label %326, label %404

326:                                              ; preds = %318
  %327 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %316, i64 0, i32 0, i32 0, i32 0
  %328 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %327, align 8
  %329 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %316, i64 0, i32 0, i32 0, i32 1
  %330 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %331 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %328, %330
  br i1 %331, label %340, label %332

332:                                              ; preds = %326, %337
  %333 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %338, %337 ], [ %328, %326 ]
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 0, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %340, label %337

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 1
  %339 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %338, %330
  br i1 %339, label %404, label %332

340:                                              ; preds = %332, %326
  %341 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %328, %326 ], [ %333, %332 ]
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  %343 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %341, %330
  br i1 %343, label %404, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 1
  %346 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %345, %330
  br i1 %346, label %399, label %347

347:                                              ; preds = %344
  %348 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %330, i64 -2, i32 0
  %349 = ptrtoint i8** %348 to i64
  %350 = sub i64 %349, %342
  %351 = lshr i64 %350, 3
  %352 = add nuw nsw i64 %351, 1
  %353 = and i64 %352, 3
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %373, label %355

355:                                              ; preds = %347, %368
  %356 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %370, %368 ], [ %345, %347 ]
  %357 = phi i64 [ %369, %368 ], [ %342, %347 ]
  %358 = phi i64 [ %371, %368 ], [ %353, %347 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 0, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %355
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %357 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %357 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %355
  %369 = phi i64 [ %357, %355 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %371 = add i64 %358, -1
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %373, label %355, !llvm.loop !10

373:                                              ; preds = %368, %347
  %374 = phi i64 [ undef, %347 ], [ %369, %368 ]
  %375 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %345, %347 ], [ %370, %368 ]
  %376 = phi i64 [ %342, %347 ], [ %369, %368 ]
  %377 = icmp ult i64 %350, 24
  br i1 %377, label %395, label %378

378:                                              ; preds = %373, %496
  %379 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %498, %496 ], [ %375, %373 ]
  %380 = phi i64 [ %497, %496 ], [ %376, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 0, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = icmp eq i8* %382, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %378
  %385 = ptrtoint i8* %382 to i64
  %386 = inttoptr i64 %380 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = inttoptr i64 %380 to i64*
  store i64 %385, i64* %387, align 8
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 1
  %389 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %388 to i64
  br label %390

390:                                              ; preds = %384, %378
  %391 = phi i64 [ %380, %378 ], [ %389, %384 ]
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 1, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp eq i8* %393, null
  br i1 %394, label %474, label %468

395:                                              ; preds = %496, %373
  %396 = phi i64 [ %374, %373 ], [ %497, %496 ]
  %397 = inttoptr i64 %396 to %"class.base::internal::UncheckedObserverAdapter"*
  %398 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  br label %399

399:                                              ; preds = %395, %344
  %400 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %330, %344 ], [ %398, %395 ]
  %401 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %341, %344 ], [ %397, %395 ]
  %402 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %401, %400
  br i1 %402, label %404, label %403

403:                                              ; preds = %399
  store %"class.base::internal::UncheckedObserverAdapter"* %401, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  br label %404

404:                                              ; preds = %337, %403, %399, %340, %318
  %405 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %120, align 8
  %406 = icmp eq %"class.base::ObserverList.86"* %405, null
  br i1 %406, label %408, label %407

407:                                              ; preds = %404
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %120, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %129) #10
  br label %408

408:                                              ; preds = %315, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #10
  %409 = call %"class.aura::client::FocusChangeObserver"* @_ZN4aura6client22GetFocusChangeObserverEPNS_6WindowE(%"class.aura::Window"* %42) #10
  %410 = icmp eq %"class.aura::client::FocusChangeObserver"* %409, null
  br i1 %410, label %458, label %453

411:                                              ; preds = %215
  %412 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %182, i64 0, i32 0, i32 0, i32 0
  %413 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %412, align 8
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %413, i64 %218
  %415 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %414 to %"class.aura::client::FocusChangeObserver"**
  %416 = load %"class.aura::client::FocusChangeObserver"*, %"class.aura::client::FocusChangeObserver"** %415, align 8
  %417 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %418 = bitcast %"class.aura::client::FocusChangeObserver"* %416 to void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %419 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %418, align 8
  %420 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %419, align 8
  call void %420(%"class.aura::client::FocusChangeObserver"* %416, %"class.aura::Window"* %417, %"class.aura::Window"* %42) #10
  %421 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %120, align 8
  %422 = icmp eq %"class.base::ObserverList.86"* %421, null
  br i1 %422, label %423, label %424

423:                                              ; preds = %448, %444, %411, %424, %438
  br label %181

424:                                              ; preds = %411
  %425 = load i64, i64* %121, align 8
  %426 = add i64 %425, 1
  store i64 %426, i64* %121, align 8
  %427 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %421, i64 0, i32 0, i32 0, i32 1
  %428 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.base::ObserverList.86"* %421 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = sub i64 %429, %431
  %433 = ashr exact i64 %432, 3
  %434 = load i64, i64* %122, align 8
  %435 = icmp ult i64 %433, %434
  %436 = select i1 %435, i64 %433, i64 %434
  %437 = icmp ult i64 %426, %436
  br i1 %437, label %438, label %423

438:                                              ; preds = %424
  %439 = inttoptr i64 %431 to %"class.base::internal::UncheckedObserverAdapter"*
  %440 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %421, i64 0, i32 0, i32 0, i32 0
  %441 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %439, i64 %426, i32 0
  %442 = load i8*, i8** %441, align 8
  %443 = icmp eq i8* %442, null
  br i1 %443, label %444, label %423

444:                                              ; preds = %438, %448
  %445 = phi i64 [ %446, %448 ], [ %426, %438 ]
  %446 = add nuw i64 %445, 1
  store i64 %446, i64* %121, align 8
  %447 = icmp ult i64 %446, %436
  br i1 %447, label %448, label %423

448:                                              ; preds = %444
  %449 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %440, align 8
  %450 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %449, i64 %446, i32 0
  %451 = load i8*, i8** %450, align 8
  %452 = icmp eq i8* %451, null
  br i1 %452, label %444, label %423

453:                                              ; preds = %408
  %454 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %455 = bitcast %"class.aura::client::FocusChangeObserver"* %409 to void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %456 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %455, align 8
  %457 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %456, align 8
  call void %457(%"class.aura::client::FocusChangeObserver"* nonnull %409, %"class.aura::Window"* %454, %"class.aura::Window"* %42) #10
  br label %458

458:                                              ; preds = %408, %453
  %459 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %460 = call %"class.aura::client::FocusChangeObserver"* @_ZN4aura6client22GetFocusChangeObserverEPNS_6WindowE(%"class.aura::Window"* %459) #10
  %461 = icmp eq %"class.aura::client::FocusChangeObserver"* %460, null
  br i1 %461, label %467, label %462

462:                                              ; preds = %458
  %463 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %464 = bitcast %"class.aura::client::FocusChangeObserver"* %460 to void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %465 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %464, align 8
  %466 = load void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::FocusChangeObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %465, align 8
  call void %466(%"class.aura::client::FocusChangeObserver"* nonnull %460, %"class.aura::Window"* %463, %"class.aura::Window"* %42) #10
  br label %467

467:                                              ; preds = %462, %458, %6
  ret void

468:                                              ; preds = %390
  %469 = ptrtoint i8* %393 to i64
  %470 = inttoptr i64 %391 to %"class.base::internal::UncheckedObserverAdapter"*
  %471 = inttoptr i64 %391 to i64*
  store i64 %469, i64* %471, align 8
  %472 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %470, i64 1
  %473 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %472 to i64
  br label %474

474:                                              ; preds = %468, %390
  %475 = phi i64 [ %391, %390 ], [ %473, %468 ]
  %476 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 2, i32 0
  %477 = load i8*, i8** %476, align 8
  %478 = icmp eq i8* %477, null
  br i1 %478, label %485, label %479

479:                                              ; preds = %474
  %480 = ptrtoint i8* %477 to i64
  %481 = inttoptr i64 %475 to %"class.base::internal::UncheckedObserverAdapter"*
  %482 = inttoptr i64 %475 to i64*
  store i64 %480, i64* %482, align 8
  %483 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %481, i64 1
  %484 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %483 to i64
  br label %485

485:                                              ; preds = %479, %474
  %486 = phi i64 [ %475, %474 ], [ %484, %479 ]
  %487 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 3, i32 0
  %488 = load i8*, i8** %487, align 8
  %489 = icmp eq i8* %488, null
  br i1 %489, label %496, label %490

490:                                              ; preds = %485
  %491 = ptrtoint i8* %488 to i64
  %492 = inttoptr i64 %486 to %"class.base::internal::UncheckedObserverAdapter"*
  %493 = inttoptr i64 %486 to i64*
  store i64 %491, i64* %493, align 8
  %494 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %492, i64 1
  %495 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %494 to i64
  br label %496

496:                                              ; preds = %490, %485
  %497 = phi i64 [ %486, %485 ], [ %495, %490 ]
  %498 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 4
  %499 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %498, %330
  br i1 %499, label %395, label %378

500:                                              ; preds = %297
  %501 = ptrtoint i8* %300 to i64
  %502 = inttoptr i64 %298 to %"class.base::internal::UncheckedObserverAdapter"*
  %503 = inttoptr i64 %298 to i64*
  store i64 %501, i64* %503, align 8
  %504 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %502, i64 1
  %505 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %504 to i64
  br label %506

506:                                              ; preds = %500, %297
  %507 = phi i64 [ %298, %297 ], [ %505, %500 ]
  %508 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 2, i32 0
  %509 = load i8*, i8** %508, align 8
  %510 = icmp eq i8* %509, null
  br i1 %510, label %517, label %511

511:                                              ; preds = %506
  %512 = ptrtoint i8* %509 to i64
  %513 = inttoptr i64 %507 to %"class.base::internal::UncheckedObserverAdapter"*
  %514 = inttoptr i64 %507 to i64*
  store i64 %512, i64* %514, align 8
  %515 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %513, i64 1
  %516 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %515 to i64
  br label %517

517:                                              ; preds = %511, %506
  %518 = phi i64 [ %507, %506 ], [ %516, %511 ]
  %519 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 3, i32 0
  %520 = load i8*, i8** %519, align 8
  %521 = icmp eq i8* %520, null
  br i1 %521, label %528, label %522

522:                                              ; preds = %517
  %523 = ptrtoint i8* %520 to i64
  %524 = inttoptr i64 %518 to %"class.base::internal::UncheckedObserverAdapter"*
  %525 = inttoptr i64 %518 to i64*
  store i64 %523, i64* %525, align 8
  %526 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %524, i64 1
  %527 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %526 to i64
  br label %528

528:                                              ; preds = %522, %517
  %529 = phi i64 [ %518, %517 ], [ %527, %522 ]
  %530 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 4
  %531 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %530, %237
  br i1 %531, label %302, label %285
}

declare zeroext i1 @_ZNK4aura6Window8CanFocusEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.aura::client::FocusChangeObserver"* @_ZN4aura6client22GetFocusChangeObserverEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClient28ResetFocusWithinActiveWindowEPN4aura6WindowE(%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 2
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %4) #10
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.headless::HeadlessFocusClient"* %0 to void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)***
  %8 = load void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)**, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)** %8, i64 4
  %10 = load void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)** %9, align 8
  tail call void %10(%"class.headless::HeadlessFocusClient"* %0, %"class.aura::Window"* %1) #10
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

declare zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZN8headless19HeadlessFocusClient16GetFocusedWindowEv(%"class.headless::HeadlessFocusClient"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 0, i32 2
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  ret %"class.aura::Window"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessFocusClient18OnWindowDestroyingEPN4aura6WindowE(%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.headless::HeadlessFocusClient"* %0 to void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)***
  %4 = load void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)**, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)** %4, i64 4
  %6 = load void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)** %5, align 8
  tail call void %6(%"class.headless::HeadlessFocusClient"* %0, %"class.aura::Window"* null) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless19HeadlessFocusClient18OnWindowDestroyingEPN4aura6WindowE(%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessFocusClient", %"class.headless::HeadlessFocusClient"* %0, i64 -1, i32 4, i32 3
  %4 = bitcast i32* %3 to %"class.headless::HeadlessFocusClient"*
  %5 = bitcast i32* %3 to void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)***
  %6 = load void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)**, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)** %6, i64 4
  %8 = load void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)*, void (%"class.headless::HeadlessFocusClient"*, %"class.aura::Window"*)** %7, align 8
  tail call void %8(%"class.headless::HeadlessFocusClient"* %4, %"class.aura::Window"* null) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura6client11FocusClientD2Ev(%"class.aura::client::FocusClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura6client11FocusClientD0Ev(%"class.aura::client::FocusClient"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN4aura6client19FocusChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
