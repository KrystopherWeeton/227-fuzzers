; ModuleID = '../../components/password_manager/core/browser/password_form_filling.cc'
source_filename = "../../components/password_manager/core/browser/password_form_filling.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.34" }
%"class.util::IdType.34" = type { %"class.base::StrongAlias.35" }
%"class.base::StrongAlias.35" = type { i32 }
%"class.std::__1::basic_string.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.33" }
%"class.base::StrongAlias.33" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%union.anon.32 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.std::__1::basic_string.10"*, %"class.std::__1::basic_string.10"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::basic_string.10"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*, %"class.std::__1::__compressed_pair.143" }
%"struct.autofill::PasswordAndMetadata" = type <{ %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.autofill::PasswordAndMetadata"* }
%"class.password_manager::PasswordManagerClient" = type { i32 (...)** }
%"class.password_manager::PasswordManagerDriver" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.password_manager::PasswordForm"**, %"struct.password_manager::PasswordForm"**, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.password_manager::PasswordForm"** }
%"struct.password_manager::PasswordForm" = type { i32, %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::FieldRendererId", i8, i8, %"class.std::__1::basic_string.10", %"class.std::__1::vector", %"class.std::__1::vector", i8, %"class.std::__1::basic_string.10", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.10", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.10", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i32, i32, [4 x i8], %"struct.autofill::FormData", i32, %"class.std::__1::basic_string.10", %class.GURL, %"class.url::Origin", i8, i8, i8, i8, i32, i8, i8, i32, %"class.std::__1::vector.75" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::vector.24", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.36", %"class.std::__1::vector.47", i32, [4 x i8], %"class.std::__1::vector.54", %"class.std::__1::vector.68", i8, [7 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.std::__1::pair.26"*, %"struct.std::__1::pair.26"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair.26" = type <{ %"class.std::__1::basic_string.10", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair.26"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.42" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { %"class.autofill::internal::TokenType.38" }
%"class.autofill::internal::TokenType.38" = type { %"class.base::StrongAlias.39" }
%"class.base::StrongAlias.39" = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.absl::variant"* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i32*, i32*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i32* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.63" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", %"class.std::__1::vector.56", %"class.std::__1::vector.56" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.autofill::FieldRendererId"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.autofill::GaiaIdHash"*, %"class.autofill::GaiaIdHash"*, %"class.std::__1::__compressed_pair.77" }
%"class.autofill::GaiaIdHash" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.autofill::GaiaIdHash"* }
%"class.password_manager::PasswordFormMetricsRecorder" = type <{ %"class.base::RefCounted", [4 x i8], %"class.base::Clock"*, i8, i8, [2 x i8], %"class.absl::optional.89", i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8], i64, %"class.ukm::builders::PasswordForm", %class.PrefService*, %"class.std::__1::map", %"class.absl::optional.116", %"class.absl::optional.116", i8, i8, i8, i8, %"class.absl::optional.121", %"class.absl::optional.126", %"class.absl::optional.131", i8, i8, [2 x i8], %"class.absl::optional.136", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::Clock" = type { i32 (...)** }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { i32 }
%"class.ukm::builders::PasswordForm" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.97" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.std::__1::pair.99"*, %"struct.std::__1::pair.99"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair.99" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair.99"* }
%class.PrefService = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { i64 }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { i32 }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { i32 }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { i32 }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { i32 }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { i32 }
%"class.password_manager::FacetURI" = type { i8, %"class.std::__1::basic_string", %"struct.url::Parsed" }
%"struct.autofill::PasswordFormFillData" = type <{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string.10", %class.GURL, %class.GURL, %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData", i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.141", i8, [7 x i8] }>
%"struct.autofill::ParsingResult" = type { %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId" }
%"struct.base::UserMetricsAction" = type { i8* }
%"class.password_manager::PasswordFeatureManager" = type { i32 (...)** }
%"class.autofill::LogManager" = type opaque
%"class.password_manager::BrowserSavePasswordProgressLogger" = type { %"class.autofill::SavePasswordProgressLogger", %"class.autofill::LogManager"* }
%"class.autofill::SavePasswordProgressLogger" = type { i32 (...)** }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.160", [4 x i8] }>
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.14 }
%struct.anon.14 = type { %"struct.std::__1::__padding.15", i8 }
%"struct.std::__1::__padding.15" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZN16password_manager12_GLOBAL__N_146kSuppressAccountStoragePromosForBlockedWebsiteE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 0 }, align 8
@_ZN16password_manager12_GLOBAL__N_158kSuppressAccountStoragePromosWhenCredentialServiceDisabledE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i32 0, i32 0), i32 1 }, align 8
@.str = private unnamed_addr constant [27 x i8] c"PasswordManager_Autofilled\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"SuppressAccountStoragePromosForBlockedWebsite\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"SuppressAccountStoragePromosWhenCredentialServiceDisabled\00", align 1
@_ZN16password_manager8features20kFillOnAccountSelectE = external global %"struct.base::Feature", align 8
@__const._ZN16password_manager12_GLOBAL__N_18AutofillEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS6_NS8_9allocatorISA_EEEESF_S7_b.fill_data = private unnamed_addr constant <{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string.10", { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" }, i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.141", i8, [7 x i8] }> <{ %"class.autofill::FormRendererId" { %"class.util::IdType.34" { %"class.base::StrongAlias.35" { i32 -1431655766 } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" } { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %class.GURL* inttoptr (i64 -6148914691236517206 to %class.GURL*) } } } }, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" } { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %class.GURL* inttoptr (i64 -6148914691236517206 to %class.GURL*) } } } }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" } { %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.autofill::internal::TokenType" { %"class.base::StrongAlias.33" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } }, %"class.autofill::FieldRendererId" { %"class.util::IdType" { %"class.base::StrongAlias" { i32 -1431655766 } } }, %"class.autofill::FormRendererId" { %"class.util::IdType.34" { %"class.base::StrongAlias.35" { i32 -1431655766 } } }, { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.32 } } } } { { { { i8, [7 x i8], %union.anon.32 } } } { { { i8, [7 x i8], %union.anon.32 } } { { i8, [7 x i8], %union.anon.32 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.32 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i64 -6148914691236517206, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } }, i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } } }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" } { %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.autofill::internal::TokenType" { %"class.base::StrongAlias.33" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } }, %"class.autofill::FieldRendererId" { %"class.util::IdType" { %"class.base::StrongAlias" { i32 -1431655766 } } }, %"class.autofill::FormRendererId" { %"class.util::IdType.34" { %"class.base::StrongAlias.35" { i32 -1431655766 } } }, { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.32 } } } } { { { { i8, [7 x i8], %union.anon.32 } } } { { { i8, [7 x i8], %union.anon.32 } } { { i8, [7 x i8], %union.anon.32 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.32 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i64 -6148914691236517206, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.13 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } }, i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::basic_string.10"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string.10"*) } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.141" { %"class.std::__1::__vector_base.142" { %"struct.autofill::PasswordAndMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.autofill::PasswordAndMetadata"*), %"struct.autofill::PasswordAndMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.autofill::PasswordAndMetadata"*), %"class.std::__1::__compressed_pair.143" { %"struct.std::__1::__compressed_pair_elem.144" { %"struct.autofill::PasswordAndMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.autofill::PasswordAndMetadata"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.4 = private unnamed_addr constant [60 x i8] c"PasswordManager.FillSuggestionsIncludeAndroidAppCredentials\00", align 1
@_ZZN16password_manager12_GLOBAL__N_18AutofillEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS6_NS8_9allocatorISA_EEEESF_S7_bE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16password_manager29SendFillInformationToRendererEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS5_NS7_9allocatorIS9_EEEESE_S9_bPNS_27PasswordFormMetricsRecorderE(%"class.password_manager::PasswordManagerClient"*, %"class.password_manager::PasswordManagerDriver"*, %"struct.password_manager::PasswordForm"* dereferenceable(1744), %"class.std::__1::vector.82"* dereferenceable(24), %"class.std::__1::vector.82"* dereferenceable(24), %"struct.password_manager::PasswordForm"*, i1 zeroext, %"class.password_manager::PasswordFormMetricsRecorder"*) local_unnamed_addr #0 {
  %9 = alloca %"class.password_manager::FacetURI", align 8
  %10 = alloca %"class.password_manager::FacetURI", align 8
  %11 = alloca %"class.password_manager::FacetURI", align 8
  %12 = alloca %"struct.autofill::PasswordFormFillData", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %"struct.autofill::ParsingResult", align 4
  %15 = alloca %"struct.base::UserMetricsAction", align 8
  %16 = tail call zeroext i1 @_ZN8autofill31IsShowAutofillSignaturesEnabledEv() #9
  br i1 %16, label %17, label %35

17:                                               ; preds = %8
  %18 = bitcast %"struct.autofill::ParsingResult"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 9, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.autofill::ParsingResult", %"struct.autofill::ParsingResult"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %19, align 8
  store i32 %21, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 17, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.autofill::ParsingResult", %"struct.autofill::ParsingResult"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i32, i32* %22, align 8
  store i32 %24, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 21, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.autofill::ParsingResult", %"struct.autofill::ParsingResult"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load i32, i32* %25, align 8
  store i32 %27, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 23, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.autofill::ParsingResult", %"struct.autofill::ParsingResult"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load i32, i32* %28, align 8
  store i32 %30, i32* %29, align 4
  %31 = bitcast %"class.password_manager::PasswordManagerDriver"* %1 to void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)***
  %32 = load void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)**, void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)*, void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)** %32, i64 21
  %34 = load void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)*, void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::ParsingResult"*)** %33, align 8
  call void %34(%"class.password_manager::PasswordManagerDriver"* %1, %"struct.autofill::ParsingResult"* nonnull dereferenceable(16) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  br label %35

35:                                               ; preds = %17, %8
  %36 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %3, i64 0, i32 0, i32 0
  %37 = load %"struct.password_manager::PasswordForm"**, %"struct.password_manager::PasswordForm"*** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %3, i64 0, i32 0, i32 1
  %39 = load %"struct.password_manager::PasswordForm"**, %"struct.password_manager::PasswordForm"*** %38, align 8
  %40 = icmp eq %"struct.password_manager::PasswordForm"** %37, %39
  br i1 %40, label %41, label %83

41:                                               ; preds = %35
  br i1 %6, label %42, label %44

42:                                               ; preds = %41
  %43 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN16password_manager12_GLOBAL__N_146kSuppressAccountStoragePromosForBlockedWebsiteE) #9
  br label %44

44:                                               ; preds = %42, %41
  %45 = phi i1 [ false, %41 ], [ %43, %42 ]
  %46 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN16password_manager12_GLOBAL__N_158kSuppressAccountStoragePromosWhenCredentialServiceDisabledE) #9
  br i1 %46, label %47, label %55

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 2
  %49 = bitcast %"class.password_manager::PasswordManagerClient"* %0 to i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)***
  %50 = load i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)**, i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)*, i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)** %50, i64 2
  %52 = load i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)*, i1 (%"class.password_manager::PasswordManagerClient"*, %class.GURL*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.password_manager::PasswordManagerClient"* %0, %class.GURL* dereferenceable(120) %48) #9
  %54 = xor i1 %53, true
  br label %55

55:                                               ; preds = %47, %44
  %56 = phi i1 [ false, %44 ], [ %54, %47 ]
  %57 = or i1 %45, %56
  br i1 %57, label %77, label %58

58:                                               ; preds = %55
  %59 = call %"class.password_manager::PasswordFeatureManager"* @_ZN16password_manager21PasswordManagerClient25GetPasswordFeatureManagerEv(%"class.password_manager::PasswordManagerClient"* %0) #9
  %60 = bitcast %"class.password_manager::PasswordFeatureManager"* %59 to i1 (%"class.password_manager::PasswordFeatureManager"*)***
  %61 = load i1 (%"class.password_manager::PasswordFeatureManager"*)**, i1 (%"class.password_manager::PasswordFeatureManager"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.password_manager::PasswordFeatureManager"*)*, i1 (%"class.password_manager::PasswordFeatureManager"*)** %61, i64 4
  %63 = load i1 (%"class.password_manager::PasswordFeatureManager"*)*, i1 (%"class.password_manager::PasswordFeatureManager"*)** %62, align 8
  %64 = call zeroext i1 %63(%"class.password_manager::PasswordFeatureManager"* %59) #9
  br i1 %64, label %77, label %65

65:                                               ; preds = %58
  %66 = call %"class.password_manager::PasswordFeatureManager"* @_ZN16password_manager21PasswordManagerClient25GetPasswordFeatureManagerEv(%"class.password_manager::PasswordManagerClient"* %0) #9
  %67 = bitcast %"class.password_manager::PasswordManagerClient"* %0 to %class.GURL* (%"class.password_manager::PasswordManagerClient"*)***
  %68 = load %class.GURL* (%"class.password_manager::PasswordManagerClient"*)**, %class.GURL* (%"class.password_manager::PasswordManagerClient"*)*** %67, align 8
  %69 = getelementptr inbounds %class.GURL* (%"class.password_manager::PasswordManagerClient"*)*, %class.GURL* (%"class.password_manager::PasswordManagerClient"*)** %68, i64 42
  %70 = load %class.GURL* (%"class.password_manager::PasswordManagerClient"*)*, %class.GURL* (%"class.password_manager::PasswordManagerClient"*)** %69, align 8
  %71 = call dereferenceable(120) %class.GURL* %70(%"class.password_manager::PasswordManagerClient"* %0) #9
  %72 = bitcast %"class.password_manager::PasswordFeatureManager"* %66 to i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)***
  %73 = load i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)**, i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)*** %72, align 8
  %74 = getelementptr inbounds i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)*, i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)** %73, i64 5
  %75 = load i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)*, i1 (%"class.password_manager::PasswordFeatureManager"*, %class.GURL*)** %74, align 8
  %76 = call zeroext i1 %75(%"class.password_manager::PasswordFeatureManager"* %66, %class.GURL* dereferenceable(120) %71) #9
  br label %77

77:                                               ; preds = %55, %58, %65
  %78 = phi i1 [ false, %55 ], [ true, %58 ], [ %76, %65 ]
  %79 = bitcast %"class.password_manager::PasswordManagerDriver"* %1 to void (%"class.password_manager::PasswordManagerDriver"*, i1)***
  %80 = load void (%"class.password_manager::PasswordManagerDriver"*, i1)**, void (%"class.password_manager::PasswordManagerDriver"*, i1)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.password_manager::PasswordManagerDriver"*, i1)*, void (%"class.password_manager::PasswordManagerDriver"*, i1)** %80, i64 4
  %82 = load void (%"class.password_manager::PasswordManagerDriver"*, i1)*, void (%"class.password_manager::PasswordManagerDriver"*, i1)** %81, align 8
  call void %82(%"class.password_manager::PasswordManagerDriver"* %1, i1 zeroext %78) #9
  call void @_ZN16password_manager27PasswordFormMetricsRecorder15RecordFillEventENS0_20ManagerAutofillEventE(%"class.password_manager::PasswordFormMetricsRecorder"* %7, i32 0) #9
  br label %240

83:                                               ; preds = %35
  %84 = call zeroext i1 @_ZNK16password_manager12PasswordForm18HasPasswordElementEv(%"struct.password_manager::PasswordForm"* %2) #9
  br i1 %84, label %88, label %85

85:                                               ; preds = %83
  %86 = call zeroext i1 @_ZNK16password_manager12PasswordForm16IsSingleUsernameEv(%"struct.password_manager::PasswordForm"* %2) #9
  %87 = xor i1 %86, true
  br label %88

88:                                               ; preds = %85, %83
  %89 = phi i1 [ false, %83 ], [ %87, %85 ]
  %90 = bitcast %"class.password_manager::PasswordManagerClient"* %0 to i1 (%"class.password_manager::PasswordManagerClient"*)***
  %91 = load i1 (%"class.password_manager::PasswordManagerClient"*)**, i1 (%"class.password_manager::PasswordManagerClient"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.password_manager::PasswordManagerClient"*)*, i1 (%"class.password_manager::PasswordManagerClient"*)** %91, i64 11
  %93 = load i1 (%"class.password_manager::PasswordManagerClient"*)*, i1 (%"class.password_manager::PasswordManagerClient"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.password_manager::PasswordManagerClient"* %0) #9
  br i1 %94, label %135, label %95

95:                                               ; preds = %88
  %96 = load i1 (%"class.password_manager::PasswordManagerClient"*)**, i1 (%"class.password_manager::PasswordManagerClient"*)*** %90, align 8
  %97 = getelementptr inbounds i1 (%"class.password_manager::PasswordManagerClient"*)*, i1 (%"class.password_manager::PasswordManagerClient"*)** %96, i64 35
  %98 = load i1 (%"class.password_manager::PasswordManagerClient"*)*, i1 (%"class.password_manager::PasswordManagerClient"*)** %97, align 8
  %99 = call zeroext i1 %98(%"class.password_manager::PasswordManagerClient"* %0) #9
  br i1 %99, label %135, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %5, i64 0, i32 40
  %102 = load i8, i8* %101, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %5, i64 0, i32 1
  %106 = call zeroext i1 @_ZN16password_manager22IsValidAndroidFacetURIERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %105) #9
  br i1 %106, label %107, label %135

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %5, i64 0, i32 39
  %109 = load i8, i8* %108, align 2, !range !2
  %110 = icmp ne i8 %109, 0
  %111 = or i1 %89, %110
  %112 = select i1 %110, i32 2, i32 3
  br i1 %111, label %135, label %113

113:                                              ; preds = %107
  %114 = call zeroext i1 @_ZNK16password_manager12PasswordForm18HasUsernameElementEv(%"struct.password_manager::PasswordForm"* %2) #9
  br i1 %114, label %115, label %125

115:                                              ; preds = %113
  %116 = call zeroext i1 @_ZNK16password_manager12PasswordForm24HasNonEmptyPasswordValueEv(%"struct.password_manager::PasswordForm"* %2) #9
  br i1 %116, label %117, label %125

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 10
  %119 = load i8, i8* %118, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 11
  %123 = load i8, i8* %122, align 1, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %135, label %125

125:                                              ; preds = %121, %117, %115, %113
  %126 = load i1 (%"class.password_manager::PasswordManagerClient"*)**, i1 (%"class.password_manager::PasswordManagerClient"*)*** %90, align 8
  %127 = getelementptr inbounds i1 (%"class.password_manager::PasswordManagerClient"*)*, i1 (%"class.password_manager::PasswordManagerClient"*)** %126, i64 41
  %128 = load i1 (%"class.password_manager::PasswordManagerClient"*)*, i1 (%"class.password_manager::PasswordManagerClient"*)** %127, align 8
  %129 = call zeroext i1 %128(%"class.password_manager::PasswordManagerClient"* %0) #9
  br i1 %129, label %130, label %135

130:                                              ; preds = %125
  %131 = call zeroext i1 @_ZN8autofill20IsTouchToFillEnabledEv() #9
  br i1 %131, label %135, label %132

132:                                              ; preds = %130
  %133 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN16password_manager8features20kFillOnAccountSelectE) #9
  %134 = select i1 %133, i32 6, i32 0
  br label %135

135:                                              ; preds = %132, %107, %130, %125, %121, %104, %95, %88
  %136 = phi i32 [ 7, %88 ], [ 1, %95 ], [ 9, %104 ], [ %112, %107 ], [ 8, %121 ], [ 4, %125 ], [ 5, %130 ], [ %134, %132 ]
  br i1 %89, label %138, label %137

137:                                              ; preds = %135
  call void @_ZN16password_manager27PasswordFormMetricsRecorder32RecordFirstWaitForUsernameReasonENS0_21WaitForUsernameReasonE(%"class.password_manager::PasswordFormMetricsRecorder"* %7, i32 %136) #9
  br label %138

138:                                              ; preds = %137, %135
  %139 = icmp ne i32 %136, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %138
  call void @_ZN16password_manager27PasswordFormMetricsRecorder16SetManagerActionENS0_13ManagerActionE(%"class.password_manager::PasswordFormMetricsRecorder"* %7, i32 0) #9
  call void @_ZN16password_manager27PasswordFormMetricsRecorder15RecordFillEventENS0_20ManagerAutofillEventE(%"class.password_manager::PasswordFormMetricsRecorder"* %7, i32 1) #9
  br label %144

141:                                              ; preds = %138
  call void @_ZN16password_manager27PasswordFormMetricsRecorder16SetManagerActionENS0_13ManagerActionE(%"class.password_manager::PasswordFormMetricsRecorder"* %7, i32 1) #9
  call void @_ZN16password_manager27PasswordFormMetricsRecorder15RecordFillEventENS0_20ManagerAutofillEventE(%"class.password_manager::PasswordFormMetricsRecorder"* %7, i32 2) #9
  %142 = bitcast %"struct.base::UserMetricsAction"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #9
  %143 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8** %143, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  br label %144

144:                                              ; preds = %141, %140
  %145 = call zeroext i1 @_ZN21password_manager_util15IsLoggingActiveEPKN16password_manager21PasswordManagerClientE(%"class.password_manager::PasswordManagerClient"* %0) #9
  br i1 %145, label %146, label %155

146:                                              ; preds = %144
  %147 = bitcast %"class.password_manager::PasswordManagerClient"* %0 to %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)***
  %148 = load %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)**, %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)*** %147, align 8
  %149 = getelementptr inbounds %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)*, %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)** %148, i64 45
  %150 = load %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)*, %"class.autofill::LogManager"* (%"class.password_manager::PasswordManagerClient"*)** %149, align 8
  %151 = call %"class.autofill::LogManager"* %150(%"class.password_manager::PasswordManagerClient"* %0) #9
  %152 = call i8* @_Znwm(i64 16) #10
  %153 = bitcast i8* %152 to %"class.password_manager::BrowserSavePasswordProgressLogger"*
  call void @_ZN16password_manager33BrowserSavePasswordProgressLoggerC1EPKN8autofill10LogManagerE(%"class.password_manager::BrowserSavePasswordProgressLogger"* nonnull %153, %"class.autofill::LogManager"* %151) #9
  %154 = bitcast i8* %152 to %"class.autofill::SavePasswordProgressLogger"*
  call void @_ZN8autofill26SavePasswordProgressLogger10LogMessageENS0_8StringIDE(%"class.autofill::SavePasswordProgressLogger"* nonnull %154, i32 58) #9
  br label %155

155:                                              ; preds = %146, %144
  %156 = phi %"class.password_manager::BrowserSavePasswordProgressLogger"* [ %153, %146 ], [ null, %144 ]
  %157 = bitcast %"struct.autofill::PasswordFormFillData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1512, i8* nonnull %157) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %157, i8* align 8 bitcast (<{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string.10", { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" }, i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.141", i8, [7 x i8] }>* @__const._ZN16password_manager12_GLOBAL__N_18AutofillEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS6_NS8_9allocatorISA_EEEESF_S7_b.fill_data to i8*), i64 1512, i1 false) #9
  call void @_ZN16password_manager26CreatePasswordFormFillDataERKNS_12PasswordFormERKNSt3__16vectorIPS1_NS3_9allocatorIS5_EEEES2_b(%"struct.autofill::PasswordFormFillData"* nonnull sret %12, %"struct.password_manager::PasswordForm"* dereferenceable(1744) %2, %"class.std::__1::vector.82"* dereferenceable(24) %3, %"struct.password_manager::PasswordForm"* dereferenceable(1744) %5, i1 zeroext %139) #9
  %158 = icmp eq %"class.password_manager::BrowserSavePasswordProgressLogger"* %156, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.password_manager::BrowserSavePasswordProgressLogger", %"class.password_manager::BrowserSavePasswordProgressLogger"* %156, i64 0, i32 0
  call void @_ZN8autofill26SavePasswordProgressLogger10LogBooleanENS0_8StringIDEb(%"class.autofill::SavePasswordProgressLogger"* %160, i32 59, i1 zeroext %139) #9
  br label %161

161:                                              ; preds = %159, %155
  %162 = load atomic i64, i64* @_ZZN16password_manager12_GLOBAL__N_18AutofillEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS6_NS8_9allocatorISA_EEEESF_S7_bE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %163 = inttoptr i64 %162 to %"class.base::HistogramBase"*
  %164 = icmp eq i64 %162, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %161
  %166 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0), i32 1) #9
  %167 = ptrtoint %"class.base::HistogramBase"* %166 to i64
  store atomic i64 %167, i64* @_ZZN16password_manager12_GLOBAL__N_18AutofillEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS6_NS8_9allocatorISA_EEEESF_S7_bE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %168

168:                                              ; preds = %165, %161
  %169 = phi %"class.base::HistogramBase"* [ %163, %161 ], [ %166, %165 ]
  %170 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %12, i64 0, i32 12, i32 0, i32 0
  %171 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %170, align 8
  %172 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %12, i64 0, i32 12, i32 0, i32 1
  %173 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %172, align 8
  %174 = icmp eq %"struct.autofill::PasswordAndMetadata"* %171, %173
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %10, i64 0, i32 0
  %177 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %10, i64 0, i32 2
  %178 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %10, i64 0, i32 1
  %179 = bitcast %"class.std::__1::basic_string"* %178 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %184

182:                                              ; preds = %192
  %183 = icmp eq %"struct.autofill::PasswordAndMetadata"* %193, %173
  br i1 %183, label %194, label %184

184:                                              ; preds = %182, %175
  %185 = phi %"struct.autofill::PasswordAndMetadata"* [ %171, %175 ], [ %193, %182 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %176) #9
  %186 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %185, i64 0, i32 2
  call void @_ZN16password_manager8FacetURI26FromPotentiallyInvalidSpecERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::FacetURI"* nonnull sret %10, %"class.std::__1::basic_string"* dereferenceable(24) %186) #9
  %187 = call zeroext i1 @_ZNK16password_manager8FacetURI22IsValidAndroidFacetURIEv(%"class.password_manager::FacetURI"* nonnull %10) #9
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %177) #9
  %188 = load i8, i8* %180, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %184
  %191 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %191) #10
  br label %192

192:                                              ; preds = %190, %184
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %176) #9
  %193 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %185, i64 1
  br i1 %187, label %208, label %182

194:                                              ; preds = %182, %168
  %195 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %195) #9
  %196 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %12, i64 0, i32 9
  call void @_ZN16password_manager8FacetURI26FromPotentiallyInvalidSpecERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::FacetURI"* nonnull sret %9, %"class.std::__1::basic_string"* dereferenceable(24) %196) #9
  %197 = call zeroext i1 @_ZNK16password_manager8FacetURI22IsValidAndroidFacetURIEv(%"class.password_manager::FacetURI"* nonnull %9) #9
  %198 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %9, i64 0, i32 2
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %198) #9
  %199 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %9, i64 0, i32 1
  %200 = bitcast %"class.std::__1::basic_string"* %199 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %194
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #10
  br label %207

207:                                              ; preds = %204, %194
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %195) #9
  br label %208

208:                                              ; preds = %192, %207
  %209 = phi i1 [ %197, %207 ], [ true, %192 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %169, i1 zeroext %209) #9
  %210 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %210) #9
  %211 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %12, i64 0, i32 9
  call void @_ZN16password_manager8FacetURI26FromPotentiallyInvalidSpecERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::FacetURI"* nonnull sret %11, %"class.std::__1::basic_string"* dereferenceable(24) %211) #9
  %212 = call zeroext i1 @_ZNK16password_manager8FacetURI22IsValidAndroidFacetURIEv(%"class.password_manager::FacetURI"* nonnull %11) #9
  %213 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %11, i64 0, i32 2
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %213) #9
  %214 = getelementptr inbounds %"class.password_manager::FacetURI", %"class.password_manager::FacetURI"* %11, i64 0, i32 1
  %215 = bitcast %"class.std::__1::basic_string"* %214 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %208
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %214, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  call void @_ZdlPv(i8* %221) #10
  br label %222

222:                                              ; preds = %219, %208
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %210) #9
  call void @_ZN16password_manager12metrics_util35LogFilledCredentialIsFromAndroidAppEb(i1 zeroext %212) #9
  %223 = bitcast %"class.password_manager::PasswordManagerDriver"* %1 to void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)***
  %224 = load void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)**, void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)*** %223, align 8
  %225 = getelementptr inbounds void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)*, void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)** %224, i64 3
  %226 = load void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)*, void (%"class.password_manager::PasswordManagerDriver"*, %"struct.autofill::PasswordFormFillData"*)** %225, align 8
  call void %226(%"class.password_manager::PasswordManagerDriver"* %1, %"struct.autofill::PasswordFormFillData"* nonnull dereferenceable(1512) %12) #9
  %227 = bitcast %"class.url::Origin"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %227) #9
  %228 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %2, i64 0, i32 2
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %13, %class.GURL* dereferenceable(120) %228) #9
  %229 = bitcast %"class.password_manager::PasswordManagerClient"* %0 to void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)***
  %230 = load void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)**, void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)*, void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)** %230, i64 22
  %232 = load void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)*, void (%"class.password_manager::PasswordManagerClient"*, %"class.std::__1::vector.82"*, %"class.url::Origin"*, %"class.std::__1::vector.82"*)** %231, align 8
  call void %232(%"class.password_manager::PasswordManagerClient"* %0, %"class.std::__1::vector.82"* dereferenceable(24) %3, %"class.url::Origin"* nonnull dereferenceable(80) %13, %"class.std::__1::vector.82"* %4) #9
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %227) #9
  call void @_ZN8autofill20PasswordFormFillDataD1Ev(%"struct.autofill::PasswordFormFillData"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 1512, i8* nonnull %157) #9
  br i1 %158, label %238, label %233

233:                                              ; preds = %222
  %234 = bitcast %"class.password_manager::BrowserSavePasswordProgressLogger"* %156 to void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)***
  %235 = load void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)**, void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)*, void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)** %235, i64 1
  %237 = load void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)*, void (%"class.password_manager::BrowserSavePasswordProgressLogger"*)** %236, align 8
  call void %237(%"class.password_manager::BrowserSavePasswordProgressLogger"* nonnull %156) #9
  br label %238

238:                                              ; preds = %222, %233
  %239 = select i1 %139, i32 2, i32 1
  br label %240

240:                                              ; preds = %238, %77
  %241 = phi i32 [ 0, %77 ], [ %239, %238 ]
  ret i32 %241
}

declare zeroext i1 @_ZN8autofill31IsShowAutofillSignaturesEnabledEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.password_manager::PasswordFeatureManager"* @_ZN16password_manager21PasswordManagerClient25GetPasswordFeatureManagerEv(%"class.password_manager::PasswordManagerClient"*) local_unnamed_addr #1

declare void @_ZN16password_manager27PasswordFormMetricsRecorder15RecordFillEventENS0_20ManagerAutofillEventE(%"class.password_manager::PasswordFormMetricsRecorder"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK16password_manager12PasswordForm18HasPasswordElementEv(%"struct.password_manager::PasswordForm"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK16password_manager12PasswordForm16IsSingleUsernameEv(%"struct.password_manager::PasswordForm"*) local_unnamed_addr #1

declare zeroext i1 @_ZN16password_manager22IsValidAndroidFacetURIERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK16password_manager12PasswordForm18HasUsernameElementEv(%"struct.password_manager::PasswordForm"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK16password_manager12PasswordForm24HasNonEmptyPasswordValueEv(%"struct.password_manager::PasswordForm"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8autofill20IsTouchToFillEnabledEv() local_unnamed_addr #1

declare void @_ZN16password_manager27PasswordFormMetricsRecorder32RecordFirstWaitForUsernameReasonENS0_21WaitForUsernameReasonE(%"class.password_manager::PasswordFormMetricsRecorder"*, i32) local_unnamed_addr #1

declare void @_ZN16password_manager27PasswordFormMetricsRecorder16SetManagerActionENS0_13ManagerActionE(%"class.password_manager::PasswordFormMetricsRecorder"*, i32) local_unnamed_addr #1

declare void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager26CreatePasswordFormFillDataERKNS_12PasswordFormERKNSt3__16vectorIPS1_NS3_9allocatorIS5_EEEES2_b(%"struct.autofill::PasswordFormFillData"* noalias sret, %"struct.password_manager::PasswordForm"* dereferenceable(1744), %"class.std::__1::vector.82"* nocapture readonly dereferenceable(24), %"struct.password_manager::PasswordForm"* dereferenceable(1744), i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.autofill::PasswordAndMetadata", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = zext i1 %4 to i8
  %10 = bitcast %"struct.autofill::PasswordFormFillData"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 bitcast (<{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string.10", { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" }, { %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.32 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string.10", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector.56", %"class.std::__1::vector.56" }, i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.141", i8, [7 x i8] }>* @__const._ZN16password_manager12_GLOBAL__N_18AutofillEPNS_21PasswordManagerClientEPNS_21PasswordManagerDriverERKNS_12PasswordFormERKNSt3__16vectorIPS6_NS8_9allocatorISA_EEEESF_S7_b.fill_data to i8*), i64 1512, i1 false)
  tail call void @_ZN8autofill20PasswordFormFillDataC1Ev(%"struct.autofill::PasswordFormFillData"* %0) #9
  %11 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 32, i32 13, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 32, i32 2
  %15 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* %15, %"class.std::__1::basic_string.10"* dereferenceable(24) %14)
  %17 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  %19 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %18, %class.GURL* dereferenceable(120) %17) #9
  %20 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  %22 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %21, %class.GURL* dereferenceable(120) %20) #9
  %23 = tail call zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"* %3) #9
  %24 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  %25 = zext i1 %23 to i8
  store i8 %25, i8* %24, align 8
  %26 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 13
  store i8 %9, i8* %26, align 8
  %27 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 32, i32 12
  %28 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5, i32 11
  %29 = bitcast %"class.autofill::internal::TokenType"* %28 to i8*
  %30 = bitcast %"class.autofill::internal::TokenType"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6, i32 11
  %32 = bitcast %"class.autofill::internal::TokenType"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %30, i64 16, i1 false)
  %33 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 12
  %34 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5, i32 4
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* %34, %"class.std::__1::basic_string.10"* dereferenceable(24) %33)
  %36 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 18
  %37 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6, i32 4
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* %37, %"class.std::__1::basic_string.10"* dereferenceable(24) %36)
  %39 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 42
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %77

42:                                               ; preds = %5
  %43 = tail call zeroext i1 @_ZNK16password_manager12PasswordForm18HasPasswordElementEv(%"struct.password_manager::PasswordForm"* %1) #9
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = tail call zeroext i1 @_ZNK16password_manager12PasswordForm16IsSingleUsernameEv(%"struct.password_manager::PasswordForm"* %1) #9
  br i1 %45, label %46, label %77

46:                                               ; preds = %44, %42
  %47 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 8
  %48 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5, i32 0
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* %48, %"class.std::__1::basic_string.10"* dereferenceable(24) %47)
  %50 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5, i32 12, i32 0, i32 0, i32 0
  %52 = load i32, i32* %50, align 4
  store i32 %52, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 11
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  store i8 %54, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 16
  %57 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6, i32 0
  %58 = tail call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* %57, %"class.std::__1::basic_string.10"* dereferenceable(24) %56)
  %59 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 17, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6, i32 12, i32 0, i32 0, i32 0
  %61 = load i32, i32* %59, align 4
  store i32 %61, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6, i32 5
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %46
  %68 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 8, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  br label %73

71:                                               ; preds = %46
  store i8 8, i8* %64, align 1
  %72 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  br label %73

73:                                               ; preds = %67, %71
  %74 = phi i8* [ %70, %67 ], [ %72, %71 ]
  %75 = bitcast i8* %74 to i64*
  store i64 7237970109966541168, i64* %75, align 1
  %76 = getelementptr inbounds i8, i8* %74, i64 8
  store i8 0, i8* %76, align 1
  br label %77

77:                                               ; preds = %73, %5, %44
  %78 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 39
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 40
  %81 = load i8, i8* %80, align 1
  %82 = or i8 %81, %79
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %120, label %84

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #9
  %86 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 5
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !3
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8, !noalias !3
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = icmp eq i64 %94, 0
  %96 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 1
  %97 = select i1 %95, %"class.std::__1::basic_string"* %96, %"class.std::__1::basic_string"* %86
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1, !noalias !3
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %84
  %103 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* align 8 %103, i64 24, i1 false) #9
  br label %109

104:                                              ; preds = %84
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8, !noalias !3
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %106, i64 %108) #9
  br label %109

109:                                              ; preds = %102, %104
  %110 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %111 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %115, %109
  %119 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %85, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #9
  br label %120

120:                                              ; preds = %77, %118
  %121 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %2, i64 0, i32 0, i32 0
  %122 = load %"struct.password_manager::PasswordForm"**, %"struct.password_manager::PasswordForm"*** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %2, i64 0, i32 0, i32 1
  %124 = load %"struct.password_manager::PasswordForm"**, %"struct.password_manager::PasswordForm"*** %123, align 8
  %125 = icmp eq %"struct.password_manager::PasswordForm"** %122, %124
  br i1 %125, label %158, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.std::__1::basic_string.10"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %127, i64 0, i32 1, i32 1
  %129 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.std::__1::basic_string.10"* %33 to i16*
  %132 = bitcast %"class.std::__1::basic_string.10"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %132, i64 0, i32 1, i32 1
  %134 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::basic_string.10"* %36 to i16*
  %137 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %138 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %137, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 1
  %140 = bitcast %"struct.autofill::PasswordAndMetadata"* %7 to i8*
  %141 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %7, i64 0, i32 0
  %142 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %7, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %7, i64 0, i32 3
  %144 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %145 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %7, i64 0, i32 2
  %146 = bitcast %"class.std::__1::basic_string"* %145 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  %150 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %151 = bitcast %"struct.autofill::PasswordAndMetadata"** %139 to i64*
  %152 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %153 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %159

158:                                              ; preds = %421, %120
  ret void

159:                                              ; preds = %126, %421
  %160 = phi %"struct.password_manager::PasswordForm"** [ %122, %126 ], [ %422, %421 ]
  %161 = load %"struct.password_manager::PasswordForm"*, %"struct.password_manager::PasswordForm"** %160, align 8
  %162 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 12
  %163 = bitcast %"class.std::__1::basic_string.10"* %162 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %163, i64 0, i32 1, i32 1
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = zext i8 %165 to i64
  %170 = select i1 %166, i64 %168, i64 %169
  %171 = load i8, i8* %128, align 1
  %172 = icmp slt i8 %171, 0
  %173 = load i64, i64* %129, align 8
  %174 = zext i8 %171 to i64
  %175 = select i1 %172, i64 %173, i64 %174
  %176 = icmp eq i64 %170, %175
  br i1 %176, label %177, label %255

177:                                              ; preds = %159
  %178 = icmp eq i64 %170, 0
  br i1 %178, label %198, label %179

179:                                              ; preds = %177
  %180 = load i16*, i16** %130, align 8
  %181 = select i1 %172, i16* %180, i16* %131
  %182 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i16*, i16** %182, align 8
  %184 = bitcast %"class.std::__1::basic_string.10"* %162 to i16*
  %185 = select i1 %166, i16* %183, i16* %184
  br label %186

186:                                              ; preds = %193, %179
  %187 = phi i64 [ %194, %193 ], [ %170, %179 ]
  %188 = phi i16* [ %196, %193 ], [ %181, %179 ]
  %189 = phi i16* [ %195, %193 ], [ %185, %179 ]
  %190 = load i16, i16* %189, align 2
  %191 = load i16, i16* %188, align 2
  %192 = icmp eq i16 %191, %190
  br i1 %192, label %193, label %255

193:                                              ; preds = %186
  %194 = add i64 %187, -1
  %195 = getelementptr inbounds i16, i16* %189, i64 1
  %196 = getelementptr inbounds i16, i16* %188, i64 1
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %186

198:                                              ; preds = %193, %177
  %199 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 18
  %200 = bitcast %"class.std::__1::basic_string.10"* %199 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %200, i64 0, i32 1, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  %204 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = zext i8 %202 to i64
  %207 = select i1 %203, i64 %205, i64 %206
  %208 = load i8, i8* %133, align 1
  %209 = icmp slt i8 %208, 0
  %210 = load i64, i64* %134, align 8
  %211 = zext i8 %208 to i64
  %212 = select i1 %209, i64 %210, i64 %211
  %213 = icmp eq i64 %207, %212
  br i1 %213, label %214, label %255

214:                                              ; preds = %198
  %215 = icmp eq i64 %207, 0
  br i1 %215, label %235, label %216

216:                                              ; preds = %214
  %217 = load i16*, i16** %135, align 8
  %218 = select i1 %209, i16* %217, i16* %136
  %219 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i16*, i16** %219, align 8
  %221 = bitcast %"class.std::__1::basic_string.10"* %199 to i16*
  %222 = select i1 %203, i16* %220, i16* %221
  br label %223

223:                                              ; preds = %230, %216
  %224 = phi i64 [ %231, %230 ], [ %207, %216 ]
  %225 = phi i16* [ %233, %230 ], [ %218, %216 ]
  %226 = phi i16* [ %232, %230 ], [ %222, %216 ]
  %227 = load i16, i16* %226, align 2
  %228 = load i16, i16* %225, align 2
  %229 = icmp eq i16 %228, %227
  br i1 %229, label %230, label %255

230:                                              ; preds = %223
  %231 = add i64 %224, -1
  %232 = getelementptr inbounds i16, i16* %226, i64 1
  %233 = getelementptr inbounds i16, i16* %225, i64 1
  %234 = icmp eq i64 %231, 0
  br i1 %234, label %235, label %223

235:                                              ; preds = %230, %214
  %236 = load i8, i8* %24, align 1, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %421

238:                                              ; preds = %235
  %239 = call zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"* %161) #9
  br i1 %239, label %240, label %421

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 39
  %242 = load i8, i8* %241, align 2, !range !2
  %243 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 40
  %244 = load i8, i8* %243, align 1
  %245 = or i8 %244, %242
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %421

247:                                              ; preds = %240
  %248 = call zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"* %161) #9
  %249 = zext i1 %248 to i8
  store i8 %249, i8* %24, align 1
  %250 = load i8, i8* %154, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %247
  %253 = load i8*, i8** %156, align 8
  store i8 0, i8* %253, align 1
  store i64 0, i64* %157, align 8
  br label %421

254:                                              ; preds = %247
  store i8 0, i8* %155, align 1
  store i8 0, i8* %154, align 1
  br label %421

255:                                              ; preds = %186, %223, %198, %159
  %256 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %138, align 8
  %257 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %139, align 8
  %258 = icmp eq %"struct.autofill::PasswordAndMetadata"* %256, %257
  br i1 %258, label %340, label %259

259:                                              ; preds = %255
  %260 = icmp eq i64 %170, 0
  %261 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = bitcast %"class.std::__1::basic_string.10"* %162 to i16*
  %263 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 18
  %264 = bitcast %"class.std::__1::basic_string.10"* %263 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %264, i64 0, i32 1, i32 1
  %266 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %267 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = bitcast %"class.std::__1::basic_string.10"* %263 to i16*
  %269 = load i16*, i16** %261, align 8
  %270 = select i1 %166, i16* %269, i16* %262
  %271 = load i8, i8* %265, align 1
  %272 = icmp slt i8 %271, 0
  %273 = load i64, i64* %266, align 8
  %274 = zext i8 %271 to i64
  %275 = select i1 %272, i64 %273, i64 %274
  %276 = icmp eq i64 %275, 0
  %277 = load i16*, i16** %267, align 8
  %278 = select i1 %272, i16* %277, i16* %268
  br label %279

279:                                              ; preds = %337, %259
  %280 = phi %"struct.autofill::PasswordAndMetadata"* [ %256, %259 ], [ %338, %337 ]
  %281 = bitcast %"struct.autofill::PasswordAndMetadata"* %280 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %281, i64 0, i32 1, i32 1
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  %285 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = zext i8 %283 to i64
  %288 = select i1 %284, i64 %286, i64 %287
  %289 = icmp eq i64 %170, %288
  br i1 %289, label %290, label %337

290:                                              ; preds = %279
  br i1 %260, label %308, label %291

291:                                              ; preds = %290
  %292 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load i16*, i16** %292, align 8
  %294 = bitcast %"struct.autofill::PasswordAndMetadata"* %280 to i16*
  %295 = select i1 %284, i16* %293, i16* %294
  br label %296

296:                                              ; preds = %303, %291
  %297 = phi i64 [ %304, %303 ], [ %170, %291 ]
  %298 = phi i16* [ %306, %303 ], [ %295, %291 ]
  %299 = phi i16* [ %305, %303 ], [ %270, %291 ]
  %300 = load i16, i16* %299, align 2
  %301 = load i16, i16* %298, align 2
  %302 = icmp eq i16 %301, %300
  br i1 %302, label %303, label %337

303:                                              ; preds = %296
  %304 = add i64 %297, -1
  %305 = getelementptr inbounds i16, i16* %299, i64 1
  %306 = getelementptr inbounds i16, i16* %298, i64 1
  %307 = icmp eq i64 %304, 0
  br i1 %307, label %308, label %296

308:                                              ; preds = %303, %290
  %309 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %280, i64 0, i32 1
  %310 = bitcast %"class.std::__1::basic_string.10"* %309 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %311 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %310, i64 0, i32 1, i32 1
  %312 = load i8, i8* %311, align 1
  %313 = icmp slt i8 %312, 0
  %314 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %280, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %315 = load i64, i64* %314, align 8
  %316 = zext i8 %312 to i64
  %317 = select i1 %313, i64 %315, i64 %316
  %318 = icmp eq i64 %275, %317
  br i1 %318, label %319, label %337

319:                                              ; preds = %308
  br i1 %276, label %340, label %320

320:                                              ; preds = %319
  %321 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load i16*, i16** %321, align 8
  %323 = bitcast %"class.std::__1::basic_string.10"* %309 to i16*
  %324 = select i1 %313, i16* %322, i16* %323
  br label %325

325:                                              ; preds = %332, %320
  %326 = phi i64 [ %333, %332 ], [ %275, %320 ]
  %327 = phi i16* [ %335, %332 ], [ %324, %320 ]
  %328 = phi i16* [ %334, %332 ], [ %278, %320 ]
  %329 = load i16, i16* %328, align 2
  %330 = load i16, i16* %327, align 2
  %331 = icmp eq i16 %330, %329
  br i1 %331, label %332, label %337

332:                                              ; preds = %325
  %333 = add i64 %326, -1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = getelementptr inbounds i16, i16* %327, i64 1
  %336 = icmp eq i64 %333, 0
  br i1 %336, label %340, label %325

337:                                              ; preds = %296, %325, %308, %279
  %338 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %280, i64 1
  %339 = icmp eq %"struct.autofill::PasswordAndMetadata"* %338, %257
  br i1 %339, label %370, label %279

340:                                              ; preds = %319, %332, %255
  %341 = phi %"struct.autofill::PasswordAndMetadata"* [ %256, %255 ], [ %280, %332 ], [ %280, %319 ]
  %342 = icmp eq %"struct.autofill::PasswordAndMetadata"* %341, %257
  br i1 %342, label %370, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %341, i64 0, i32 2
  %345 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %341, i64 0, i32 3
  %346 = load i8, i8* %345, align 1, !range !2
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %348, label %421

348:                                              ; preds = %343
  %349 = call zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"* %161) #9
  br i1 %349, label %350, label %421

350:                                              ; preds = %348
  %351 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 39
  %352 = load i8, i8* %351, align 2, !range !2
  %353 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 40
  %354 = load i8, i8* %353, align 1
  %355 = or i8 %354, %352
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %357, label %421

357:                                              ; preds = %350
  %358 = call zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"* %161) #9
  %359 = zext i1 %358 to i8
  store i8 %359, i8* %345, align 1
  %360 = bitcast %"class.std::__1::basic_string"* %344 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %368

364:                                              ; preds = %357
  %365 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %344, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  store i8 0, i8* %366, align 1
  %367 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %367, align 8
  br label %421

368:                                              ; preds = %357
  %369 = bitcast %"class.std::__1::basic_string"* %344 to i8*
  store i8 0, i8* %369, align 1
  store i8 0, i8* %361, align 1
  br label %421

370:                                              ; preds = %337, %340
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %140) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 80, i1 false)
  call void @_ZN8autofill19PasswordAndMetadataC1Ev(%"struct.autofill::PasswordAndMetadata"* nonnull %7) #9
  %371 = call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* nonnull %141, %"class.std::__1::basic_string.10"* dereferenceable(24) %162)
  %372 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 18
  %373 = call dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"* %142, %"class.std::__1::basic_string.10"* dereferenceable(24) %372)
  %374 = call zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"* %161) #9
  %375 = zext i1 %374 to i8
  store i8 %375, i8* %143, align 8
  %376 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 39
  %377 = load i8, i8* %376, align 2, !range !2
  %378 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 40
  %379 = load i8, i8* %378, align 1
  %380 = or i8 %379, %377
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %412, label %382

382:                                              ; preds = %370
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #9
  %383 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 5
  %384 = bitcast %"class.std::__1::basic_string"* %383 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  %386 = load i8, i8* %385, align 1, !noalias !6
  %387 = icmp slt i8 %386, 0
  %388 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %389 = load i64, i64* %388, align 8, !noalias !6
  %390 = zext i8 %386 to i64
  %391 = select i1 %387, i64 %389, i64 %390
  %392 = icmp eq i64 %391, 0
  %393 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %161, i64 0, i32 1
  %394 = select i1 %392, %"class.std::__1::basic_string"* %393, %"class.std::__1::basic_string"* %383
  %395 = bitcast %"class.std::__1::basic_string"* %394 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  %397 = load i8, i8* %396, align 1, !noalias !6
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %401, label %399

399:                                              ; preds = %382
  %400 = bitcast %"class.std::__1::basic_string"* %394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %144, i8* align 8 %400, i64 24, i1 false) #9
  br label %406

401:                                              ; preds = %382
  %402 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8, !noalias !6
  %404 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %405 = load i64, i64* %404, align 8, !noalias !6
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %403, i64 %405) #9
  br label %406

406:                                              ; preds = %399, %401
  %407 = load i8, i8* %147, align 1
  %408 = icmp slt i8 %407, 0
  br i1 %408, label %409, label %411

409:                                              ; preds = %406
  %410 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %410) #10
  br label %411

411:                                              ; preds = %409, %406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %144, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #9
  br label %412

412:                                              ; preds = %370, %411
  %413 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %139, align 8
  %414 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %150, align 8
  %415 = icmp ult %"struct.autofill::PasswordAndMetadata"* %413, %414
  br i1 %415, label %416, label %419

416:                                              ; preds = %412
  call void @_ZN8autofill19PasswordAndMetadataC1EOS0_(%"struct.autofill::PasswordAndMetadata"* %413, %"struct.autofill::PasswordAndMetadata"* nonnull dereferenceable(80) %7) #9
  %417 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %413, i64 1
  %418 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %417 to i64
  store i64 %418, i64* %151, align 8
  br label %420

419:                                              ; preds = %412
  call void @_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.141"* %137, %"struct.autofill::PasswordAndMetadata"* nonnull dereferenceable(80) %7) #9
  br label %420

420:                                              ; preds = %416, %419
  call void @_ZN8autofill19PasswordAndMetadataD1Ev(%"struct.autofill::PasswordAndMetadata"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %140) #9
  br label %421

421:                                              ; preds = %368, %364, %350, %348, %343, %254, %252, %240, %238, %235, %420
  %422 = getelementptr inbounds %"struct.password_manager::PasswordForm"*, %"struct.password_manager::PasswordForm"** %160, i64 1
  %423 = icmp eq %"struct.password_manager::PasswordForm"** %422, %124
  br i1 %423, label %158, label %159
}

declare void @_ZN8autofill20PasswordFormFillDataC1Ev(%"struct.autofill::PasswordFormFillData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.10"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.10"*, %"class.std::__1::basic_string.10"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.10"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.10"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.10"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.10"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.10"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.10"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.10"*
  %35 = icmp ugt %"class.std::__1::basic_string.10"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !9
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !9
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !12, !noalias !9
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !12, !noalias !9
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !9
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !9
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !12, !noalias !9
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !12, !noalias !9
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !9
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !9
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !12, !noalias !9
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !12, !noalias !9
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !9
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !9
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !12, !noalias !9
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !12, !noalias !9
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !14

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !9
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !9
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !12, !noalias !9
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !12, !noalias !9
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !16

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !18

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !19

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.10"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !20
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !20
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !23, !noalias !20
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !23, !noalias !20
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !20
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !20
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !23, !noalias !20
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !23, !noalias !20
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !20
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !20
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !23, !noalias !20
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !23, !noalias !20
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !20
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !20
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !23, !noalias !20
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !23, !noalias !20
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !25

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !20
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !20
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !23, !noalias !20
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !23, !noalias !20
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !26

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !27

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !28

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.10"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.10"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !29
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !29
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !32, !noalias !29
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !32, !noalias !29
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !29
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !29
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !32, !noalias !29
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !32, !noalias !29
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !29
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !29
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !32, !noalias !29
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !32, !noalias !29
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !29
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !29
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !32, !noalias !29
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !32, !noalias !29
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !34

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !29
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !29
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !32, !noalias !29
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !32, !noalias !29
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !35

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !36

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !37

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.10"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.10"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i1 @_ZNK16password_manager12PasswordForm19IsUsingAccountStoreEv(%"struct.password_manager::PasswordForm"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8autofill19PasswordAndMetadataC1Ev(%"struct.autofill::PasswordAndMetadata"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8autofill19PasswordAndMetadataD1Ev(%"struct.autofill::PasswordAndMetadata"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8autofill20PasswordFormFillDataD1Ev(%"struct.autofill::PasswordFormFillData"*) unnamed_addr #3

declare zeroext i1 @_ZN21password_manager_util15IsLoggingActiveEPKN16password_manager21PasswordManagerClientE(%"class.password_manager::PasswordManagerClient"*) local_unnamed_addr #1

declare void @_ZN8autofill26SavePasswordProgressLogger10LogMessageENS0_8StringIDE(%"class.autofill::SavePasswordProgressLogger"*, i32) local_unnamed_addr #1

declare void @_ZN8autofill26SavePasswordProgressLogger10LogBooleanENS0_8StringIDEb(%"class.autofill::SavePasswordProgressLogger"*, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN16password_manager12metrics_util35LogFilledCredentialIsFromAndroidAppEb(i1 zeroext) local_unnamed_addr #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN16password_manager33BrowserSavePasswordProgressLoggerC1EPKN8autofill10LogManagerE(%"class.password_manager::BrowserSavePasswordProgressLogger"*, %"class.autofill::LogManager"*) unnamed_addr #1

declare void @_ZN16password_manager8FacetURI26FromPotentiallyInvalidSpecERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::FacetURI"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK16password_manager8FacetURI22IsValidAndroidFacetURIEv(%"class.password_manager::FacetURI"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.10"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.10"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.10"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.10"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !38
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !38
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !41, !noalias !38
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !41, !noalias !38
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !38
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !38
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !41, !noalias !38
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !41, !noalias !38
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !38
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !38
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !41, !noalias !38
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !41, !noalias !38
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !38
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !38
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !41, !noalias !38
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !41, !noalias !38
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !43

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !38
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !38
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !41, !noalias !38
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !41, !noalias !38
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !44

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !45

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !46

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !47

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !48

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !49

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !51
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !51
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !54, !noalias !51
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !54, !noalias !51
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !51
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !51
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !54, !noalias !51
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !54, !noalias !51
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !51
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !51
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !54, !noalias !51
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !54, !noalias !51
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !51
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !51
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !54, !noalias !51
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !54, !noalias !51
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !56

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !51
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !51
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !54, !noalias !51
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !54, !noalias !51
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !57

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !58

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !59

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.10"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.141"*, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.autofill::PasswordAndMetadata"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.141"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 230584300921369395
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.141"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.autofill::PasswordAndMetadata"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 80
  %20 = icmp ult i64 %19, 115292150460684697
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 230584300921369395, %14 ]
  %28 = mul i64 %27, 80
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.autofill::PasswordAndMetadata"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.autofill::PasswordAndMetadata"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %33, i64 %32
  %36 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %35 to i64
  tail call void @_ZN8autofill19PasswordAndMetadataC1EOS0_(%"struct.autofill::PasswordAndMetadata"* %34, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80) %1) #9
  %37 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %34, i64 1
  %38 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %39, align 8
  %41 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %3, align 8
  %42 = icmp eq %"struct.autofill::PasswordAndMetadata"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.autofill::PasswordAndMetadata"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.autofill::PasswordAndMetadata"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %47, i64 -1
  tail call void @_ZN8autofill19PasswordAndMetadataC1EOS0_(%"struct.autofill::PasswordAndMetadata"* %48, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80) %49) #9
  %50 = icmp eq %"struct.autofill::PasswordAndMetadata"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.autofill::PasswordAndMetadata"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.autofill::PasswordAndMetadata"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.autofill::PasswordAndMetadata"*
  %60 = icmp eq %"struct.autofill::PasswordAndMetadata"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.autofill::PasswordAndMetadata"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %62, i64 -1
  tail call void @_ZN8autofill19PasswordAndMetadataD1Ev(%"struct.autofill::PasswordAndMetadata"* %63) #9
  %64 = icmp eq %"struct.autofill::PasswordAndMetadata"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN8autofill19PasswordAndMetadataC1EOS0_(%"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN16password_manager12_GLOBAL__N_117GetPreferredRealmERKNS_12PasswordFormE: argument 0"}
!5 = distinct !{!5, !"_ZN16password_manager12_GLOBAL__N_117GetPreferredRealmERKNS_12PasswordFormE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN16password_manager12_GLOBAL__N_117GetPreferredRealmERKNS_12PasswordFormE: argument 0"}
!8 = distinct !{!8, !"_ZN16password_manager12_GLOBAL__N_117GetPreferredRealmERKNS_12PasswordFormE"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !15}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !15}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !17}
!28 = distinct !{!28, !15}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !15}
!35 = distinct !{!35, !17}
!36 = distinct !{!36, !17}
!37 = distinct !{!37, !15}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !15}
!44 = distinct !{!44, !17}
!45 = distinct !{!45, !17}
!46 = distinct !{!46, !15}
!47 = distinct !{!47, !15}
!48 = distinct !{!48, !17}
!49 = distinct !{!49, !50, !15}
!50 = !{!"llvm.loop.unroll.runtime.disable"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !15}
!57 = distinct !{!57, !17}
!58 = distinct !{!58, !17}
!59 = distinct !{!59, !15}
