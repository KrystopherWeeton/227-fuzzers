; ModuleID = '../../third_party/blink/renderer/core/animation/svg_transform_list_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/svg_transform_list_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.68", i32, [4 x i8], %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.206", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.252", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.186", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i64 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist.157"* }
%"class.blink::Worklist.157" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.104" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.180", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { i64 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { float }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.189", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.198" }
%"class.WTF::Vector.198" = type { %"class.WTF::VectorBuffer.199" }
%"class.WTF::VectorBuffer.199" = type { %"class.WTF::VectorBufferBase.200" }
%"class.WTF::VectorBufferBase.200" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215" }
%"class.WTF::VectorBufferBase.215" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.228" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.122"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.129"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.136"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.143"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.231" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.251 }
%class.scoped_refptr.251 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__cxx_atomic_impl.254" }
%"struct.std::__1::__cxx_atomic_impl.254" = type { %"struct.std::__1::__cxx_atomic_base_impl.255" }
%"struct.std::__1::__cxx_atomic_base_impl.255" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGTransformListInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.blink::SVGInterpolationType" = type { %"class.blink::InterpolationType" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr.3 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.3 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.4", [4 x i8] }>
%"class.WTF::RefCounted.4" = type { %"class.base::RefCounted.5" }
%"class.base::RefCounted.5" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.6"*, i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { i32*, i32, i32 }
%"class.blink::SVGListPropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.9" }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGListablePropertyBase"* }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::SVGListPropertyBase"* }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.blink::SVGTransform" = type { %"class.blink::SVGListablePropertyBase", i32, float, %"class.blink::FloatPoint", %"class.blink::AffineTransform" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector.17" }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.33, i32, [4 x i8] }>
%class.scoped_refptr.33 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.34" }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i32 }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::(anonymous namespace)::SVGTransformListChecker"* }
%"class.blink::(anonymous namespace)::SVGTransformListChecker" = type { %"class.blink::InterpolationType::ConversionChecker", %"struct.blink::InterpolationValue" }
%"class.blink::SVGTransformNonInterpolableValue" = type { %"class.blink::NonInterpolableValue.base", %"class.WTF::Vector.25" }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.4" }>
%"class.blink::SVGTransformList" = type { %"class.blink::SVGListPropertyHelper" }
%"class.blink::SVGListPropertyHelper" = type { %"class.blink::SVGListPropertyBase" }
%"class.blink::InterpolableNumber" = type { %"class.blink::InterpolableValue", double }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.52 }
%union.anon.52 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %class.scoped_refptr.3 }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink33SVGTransformListInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink32SVGTransformNonInterpolableValueD2Ev = comdat any

$_ZN5blink32SVGTransformNonInterpolableValueD0Ev = comdat any

$_ZNK5blink32SVGTransformNonInterpolableValue7GetTypeEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16SVGTransformTypeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZTVN5blink32SVGTransformNonInterpolableValueE = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

@_ZN5blink32SVGTransformNonInterpolableValue12static_type_E = hidden global i8* bitcast (i8** @_ZN5blink32SVGTransformNonInterpolableValue12static_type_E to i8*), align 8
@_ZTVN5blink33SVGTransformListInterpolationTypeE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGTransformListInterpolationType"*)* @_ZN5blink33SVGTransformListInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::SVGTransformListInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)* @_ZNK5blink33SVGTransformListInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::SVGTransformListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink33SVGTransformListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::SVGInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20SVGInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::SVGTransformListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink33SVGTransformListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::SVGInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20SVGInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::SVGTransformListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)* @_ZNK5blink33SVGTransformListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::SVGTransformListInterpolationType"*, %"class.blink::SVGPropertyBase"*)* @_ZNK5blink33SVGTransformListInterpolationType20MaybeConvertSVGValueERKNS_15SVGPropertyBaseE to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGTransformListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZNK5blink33SVGTransformListInterpolationType15AppliedSVGValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@_ZTVN5blink18InterpolableNumberE = external unnamed_addr constant { [20 x i8*] }, align 8
@_ZTVN5blink32SVGTransformNonInterpolableValueE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGTransformNonInterpolableValue"*)* @_ZN5blink32SVGTransformNonInterpolableValueD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGTransformNonInterpolableValue"*)* @_ZN5blink32SVGTransformNonInterpolableValueD0Ev to i8*), i8* bitcast (i8* (%"class.blink::SVGTransformNonInterpolableValue"*)* @_ZNK5blink32SVGTransformNonInterpolableValue7GetTypeEv to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16SVGTransformTypeEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGTransformType]\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZTVN5blink12_GLOBAL__N_123SVGTransformListCheckerE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)* @_ZN5blink12_GLOBAL__N_123SVGTransformListCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)* @_ZN5blink12_GLOBAL__N_123SVGTransformListCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink12_GLOBAL__N_123SVGTransformListChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33SVGTransformListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::SVGTransformListInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16), %"class.WTF::Vector"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33SVGTransformListInterpolationType20MaybeConvertSVGValueERKNS_15SVGPropertyBaseE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::SVGTransformListInterpolationType"* nocapture readnone, %"class.blink::SVGPropertyBase"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::Vector.25", align 8
  %5 = alloca i32, align 4
  %6 = bitcast %"class.blink::SVGPropertyBase"* %2 to i32 (%"class.blink::SVGPropertyBase"*)***
  %7 = load i32 (%"class.blink::SVGPropertyBase"*)**, i32 (%"class.blink::SVGPropertyBase"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::SVGPropertyBase"*)*, i32 (%"class.blink::SVGPropertyBase"*)** %7, i64 7
  %9 = load i32 (%"class.blink::SVGPropertyBase"*)*, i32 (%"class.blink::SVGPropertyBase"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::SVGPropertyBase"* %2) #10
  %11 = icmp ne i32 %10, 20
  %12 = icmp eq %"class.blink::SVGPropertyBase"* %2, null
  %13 = or i1 %12, %11
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  br label %334

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::SVGPropertyBase"* %2 to %"class.blink::SVGListPropertyBase"*
  %18 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call noalias i8* @malloc(i64 24) #10
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 8
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %16
  %28 = zext i32 %19 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %28) #10
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast i8* %22 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = lshr i64 %29, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %25, align 8
  %35 = shl nuw nsw i64 %28, 3
  br label %36

36:                                               ; preds = %16, %27
  %37 = phi i64 [ %35, %27 ], [ 0, %16 ]
  %38 = phi i8* [ %30, %27 ], [ null, %16 ]
  %39 = getelementptr inbounds i8, i8* %20, i64 20
  %40 = bitcast i8* %39 to i32*
  store i32 %19, i32* %40, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 %37, i1 false) #10
  %41 = ptrtoint i8* %20 to i64
  %42 = bitcast %"class.WTF::Vector.25"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %4, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %4, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #10
  %46 = load i32, i32* %18, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %36
  %49 = bitcast %"class.WTF::Vector.25"* %4 to i64*
  br label %297

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %2, i64 1
  %52 = bitcast %"class.blink::SVGPropertyBase"* %51 to %"class.WTF::Vector.9"*
  %53 = bitcast i32* %5 to i8*
  %54 = bitcast i8* %22 to %"class.WTF::Vector.17"*
  br label %55

55:                                               ; preds = %50, %288
  %56 = phi i32 [ 0, %50 ], [ %289, %288 ]
  %57 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.9"* %52, i32 %56) #10
  %58 = bitcast %"class.blink::Member"* %57 to %"class.blink::SVGTransform"**
  %59 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #10
  %60 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %5, align 4
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %316, label %63

63:                                               ; preds = %55
  %64 = call %"class.blink::SVGTransform"* @_ZNK5blink12SVGTransform5CloneEv(%"class.blink::SVGTransform"* %59) #10
  %65 = load i32, i32* %5, align 4
  switch i32 %65, label %264 [
    i32 2, label %66
    i32 3, label %119
    i32 4, label %172
    i32 5, label %246
    i32 6, label %255
  ]

66:                                               ; preds = %63
  %67 = call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %64) #10
  %68 = call noalias i8* @malloc(i64 24) #10
  %69 = bitcast i8* %68 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 8
  %71 = getelementptr inbounds i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to i32*
  %73 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 16) #10
  %74 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %73, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %75 = ptrtoint i8* %74 to i64
  %76 = bitcast i8* %70 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = lshr i64 %73, 3
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %72, align 8
  %79 = getelementptr inbounds i8, i8* %68, i64 20
  %80 = bitcast i8* %79 to i32*
  store i32 2, i32* %80, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #10
  %81 = extractelement <2 x float> %67, i32 0
  %82 = call noalias i8* @malloc(i64 16) #10
  %83 = fpext float %81 to double
  %84 = bitcast i8* %82 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds i8, i8* %82, i64 8
  %86 = bitcast i8* %85 to double*
  store double %83, double* %86, align 8
  %87 = ptrtoint i8* %82 to i64
  %88 = bitcast i8* %70 to %"class.WTF::Vector.17"*
  %89 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %88, i32 0) #10
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %90, align 8
  %92 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %87, i64* %92, align 8
  %93 = icmp eq %"class.blink::InterpolableValue"* %91, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %66
  %95 = bitcast %"class.blink::InterpolableValue"* %91 to void (%"class.blink::InterpolableValue"*)***
  %96 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %96, i64 1
  %98 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %97, align 8
  call void %98(%"class.blink::InterpolableValue"* nonnull %91) #10
  br label %99

99:                                               ; preds = %94, %66
  %100 = extractelement <2 x float> %67, i32 1
  %101 = call noalias i8* @malloc(i64 16) #10
  %102 = fpext float %100 to double
  %103 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %104 = getelementptr inbounds i8, i8* %101, i64 8
  %105 = bitcast i8* %104 to double*
  store double %102, double* %105, align 8
  %106 = ptrtoint i8* %101 to i64
  %107 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %88, i32 1) #10
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  store i64 %106, i64* %110, align 8
  %111 = icmp eq %"class.blink::InterpolableValue"* %109, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.blink::InterpolableValue"* %109 to void (%"class.blink::InterpolableValue"*)***
  %114 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %114, i64 1
  %116 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %115, align 8
  call void %116(%"class.blink::InterpolableValue"* nonnull %109) #10
  br label %117

117:                                              ; preds = %112, %99
  %118 = ptrtoint i8* %68 to i64
  br label %264

119:                                              ; preds = %63
  %120 = call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %64) #10
  %121 = call noalias i8* @malloc(i64 24) #10
  %122 = bitcast i8* %121 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds i8, i8* %121, i64 8
  %124 = getelementptr inbounds i8, i8* %121, i64 16
  %125 = bitcast i8* %124 to i32*
  %126 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 16) #10
  %127 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %126, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %128 = ptrtoint i8* %127 to i64
  %129 = bitcast i8* %123 to i64*
  store atomic i64 %128, i64* %129 monotonic, align 8
  %130 = lshr i64 %126, 3
  %131 = trunc i64 %130 to i32
  store i32 %131, i32* %125, align 8
  %132 = getelementptr inbounds i8, i8* %121, i64 20
  %133 = bitcast i8* %132 to i32*
  store i32 2, i32* %133, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 16, i1 false) #10
  %134 = extractelement <2 x float> %120, i32 0
  %135 = call noalias i8* @malloc(i64 16) #10
  %136 = fpext float %134 to double
  %137 = bitcast i8* %135 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %138 = getelementptr inbounds i8, i8* %135, i64 8
  %139 = bitcast i8* %138 to double*
  store double %136, double* %139, align 8
  %140 = ptrtoint i8* %135 to i64
  %141 = bitcast i8* %123 to %"class.WTF::Vector.17"*
  %142 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %141, i32 0) #10
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %143, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  store i64 %140, i64* %145, align 8
  %146 = icmp eq %"class.blink::InterpolableValue"* %144, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %119
  %148 = bitcast %"class.blink::InterpolableValue"* %144 to void (%"class.blink::InterpolableValue"*)***
  %149 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %149, i64 1
  %151 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %150, align 8
  call void %151(%"class.blink::InterpolableValue"* nonnull %144) #10
  br label %152

152:                                              ; preds = %147, %119
  %153 = extractelement <2 x float> %120, i32 1
  %154 = call noalias i8* @malloc(i64 16) #10
  %155 = fpext float %153 to double
  %156 = bitcast i8* %154 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds i8, i8* %154, i64 8
  %158 = bitcast i8* %157 to double*
  store double %155, double* %158, align 8
  %159 = ptrtoint i8* %154 to i64
  %160 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %141, i32 1) #10
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %161, align 8
  %163 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %159, i64* %163, align 8
  %164 = icmp eq %"class.blink::InterpolableValue"* %162, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %152
  %166 = bitcast %"class.blink::InterpolableValue"* %162 to void (%"class.blink::InterpolableValue"*)***
  %167 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %167, i64 1
  %169 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %168, align 8
  call void %169(%"class.blink::InterpolableValue"* nonnull %162) #10
  br label %170

170:                                              ; preds = %165, %152
  %171 = ptrtoint i8* %121 to i64
  br label %264

172:                                              ; preds = %63
  %173 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %64, i64 0, i32 3
  %174 = bitcast %"class.blink::FloatPoint"* %173 to <2 x float>*
  %175 = load <2 x float>, <2 x float>* %174, align 8
  %176 = call noalias i8* @malloc(i64 24) #10
  %177 = bitcast i8* %176 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8
  %178 = getelementptr inbounds i8, i8* %176, i64 8
  %179 = getelementptr inbounds i8, i8* %176, i64 16
  %180 = bitcast i8* %179 to i32*
  %181 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 24) #10
  %182 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %181, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %183 = ptrtoint i8* %182 to i64
  %184 = bitcast i8* %178 to i64*
  store atomic i64 %183, i64* %184 monotonic, align 8
  %185 = lshr i64 %181, 3
  %186 = trunc i64 %185 to i32
  store i32 %186, i32* %180, align 8
  %187 = getelementptr inbounds i8, i8* %176, i64 20
  %188 = bitcast i8* %187 to i32*
  store i32 3, i32* %188, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 24, i1 false) #10
  %189 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %64, i64 0, i32 2
  %190 = load float, float* %189, align 4
  %191 = call noalias i8* @malloc(i64 16) #10
  %192 = fpext float %190 to double
  %193 = bitcast i8* %191 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds i8, i8* %191, i64 8
  %195 = bitcast i8* %194 to double*
  store double %192, double* %195, align 8
  %196 = ptrtoint i8* %191 to i64
  %197 = bitcast i8* %178 to %"class.WTF::Vector.17"*
  %198 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %197, i32 0) #10
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %199, align 8
  %201 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  store i64 %196, i64* %201, align 8
  %202 = icmp eq %"class.blink::InterpolableValue"* %200, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %172
  %204 = bitcast %"class.blink::InterpolableValue"* %200 to void (%"class.blink::InterpolableValue"*)***
  %205 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %205, i64 1
  %207 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %206, align 8
  call void %207(%"class.blink::InterpolableValue"* nonnull %200) #10
  br label %208

208:                                              ; preds = %203, %172
  %209 = extractelement <2 x float> %175, i32 0
  %210 = call noalias i8* @malloc(i64 16) #10
  %211 = fpext float %209 to double
  %212 = bitcast i8* %210 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %213 = getelementptr inbounds i8, i8* %210, i64 8
  %214 = bitcast i8* %213 to double*
  store double %211, double* %214, align 8
  %215 = ptrtoint i8* %210 to i64
  %216 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %197, i32 1) #10
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %216, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %217, align 8
  %219 = bitcast %"class.std::__1::unique_ptr"* %216 to i64*
  store i64 %215, i64* %219, align 8
  %220 = icmp eq %"class.blink::InterpolableValue"* %218, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %208
  %222 = bitcast %"class.blink::InterpolableValue"* %218 to void (%"class.blink::InterpolableValue"*)***
  %223 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %223, i64 1
  %225 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %224, align 8
  call void %225(%"class.blink::InterpolableValue"* nonnull %218) #10
  br label %226

226:                                              ; preds = %221, %208
  %227 = extractelement <2 x float> %175, i32 1
  %228 = call noalias i8* @malloc(i64 16) #10
  %229 = fpext float %227 to double
  %230 = bitcast i8* %228 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %231 = getelementptr inbounds i8, i8* %228, i64 8
  %232 = bitcast i8* %231 to double*
  store double %229, double* %232, align 8
  %233 = ptrtoint i8* %228 to i64
  %234 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %197, i32 2) #10
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %235, align 8
  %237 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  store i64 %233, i64* %237, align 8
  %238 = icmp eq %"class.blink::InterpolableValue"* %236, null
  br i1 %238, label %244, label %239

239:                                              ; preds = %226
  %240 = bitcast %"class.blink::InterpolableValue"* %236 to void (%"class.blink::InterpolableValue"*)***
  %241 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %241, i64 1
  %243 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %242, align 8
  call void %243(%"class.blink::InterpolableValue"* nonnull %236) #10
  br label %244

244:                                              ; preds = %239, %226
  %245 = ptrtoint i8* %176 to i64
  br label %264

246:                                              ; preds = %63
  %247 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %64, i64 0, i32 2
  %248 = load float, float* %247, align 4
  %249 = call noalias i8* @malloc(i64 16) #10
  %250 = fpext float %248 to double
  %251 = bitcast i8* %249 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %251, align 8
  %252 = getelementptr inbounds i8, i8* %249, i64 8
  %253 = bitcast i8* %252 to double*
  store double %250, double* %253, align 8
  %254 = ptrtoint i8* %249 to i64
  br label %264

255:                                              ; preds = %63
  %256 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %64, i64 0, i32 2
  %257 = load float, float* %256, align 4
  %258 = call noalias i8* @malloc(i64 16) #10
  %259 = fpext float %257 to double
  %260 = bitcast i8* %258 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %260, align 8
  %261 = getelementptr inbounds i8, i8* %258, i64 8
  %262 = bitcast i8* %261 to double*
  store double %259, double* %262, align 8
  %263 = ptrtoint i8* %258 to i64
  br label %264

264:                                              ; preds = %63, %117, %170, %244, %246, %255
  %265 = phi i64 [ %263, %255 ], [ %254, %246 ], [ %245, %244 ], [ %171, %170 ], [ %118, %117 ], [ 0, %63 ]
  %266 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %54, i32 %56) #10
  %267 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %266, i64 0, i32 0, i32 0, i32 0
  %268 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %267, align 8
  %269 = bitcast %"class.std::__1::unique_ptr"* %266 to i64*
  store i64 %265, i64* %269, align 8
  %270 = icmp eq %"class.blink::InterpolableValue"* %268, null
  br i1 %270, label %276, label %271

271:                                              ; preds = %264
  %272 = bitcast %"class.blink::InterpolableValue"* %268 to void (%"class.blink::InterpolableValue"*)***
  %273 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %272, align 8
  %274 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %273, i64 1
  %275 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %274, align 8
  call void %275(%"class.blink::InterpolableValue"* nonnull %268) #10
  br label %276

276:                                              ; preds = %264, %271
  %277 = load i32, i32* %45, align 4
  %278 = load i32, i32* %44, align 8
  %279 = icmp eq i32 %277, %278
  br i1 %279, label %287, label %280, !prof !2

280:                                              ; preds = %276
  %281 = load i32*, i32** %43, align 8
  %282 = zext i32 %277 to i64
  %283 = getelementptr inbounds i32, i32* %281, i64 %282
  %284 = load i32, i32* %5, align 4
  store i32 %284, i32* %283, align 4
  %285 = load i32, i32* %45, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %45, align 4
  br label %288

287:                                              ; preds = %276
  call void @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.25"* nonnull %4, i32* nonnull dereferenceable(4) %5) #10
  br label %288

288:                                              ; preds = %280, %287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #10
  %289 = add nuw i32 %56, 1
  %290 = load i32, i32* %18, align 4
  %291 = icmp ult i32 %289, %290
  br i1 %291, label %55, label %292

292:                                              ; preds = %288
  %293 = bitcast %"class.WTF::Vector.25"* %4 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = load i32, i32* %44, align 8
  %296 = load i32, i32* %45, align 4
  br label %297

297:                                              ; preds = %48, %292
  %298 = phi i64* [ %49, %48 ], [ %293, %292 ]
  %299 = phi i32 [ 0, %48 ], [ %296, %292 ]
  %300 = phi i32 [ 0, %48 ], [ %295, %292 ]
  %301 = phi i64 [ 0, %48 ], [ %294, %292 ]
  %302 = call noalias i8* @malloc(i64 32) #10
  %303 = getelementptr inbounds i8, i8* %302, i64 8
  %304 = bitcast i8* %303 to i32*
  store i32 1, i32* %304, align 4
  %305 = bitcast i8* %302 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32SVGTransformNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %305, align 8
  %306 = getelementptr inbounds i8, i8* %302, i64 16
  %307 = bitcast i8* %306 to i64*
  store i64 0, i64* %307, align 8
  store atomic i64 0, i64* %298 monotonic, align 8
  store atomic i64 %301, i64* %307 monotonic, align 8
  %308 = getelementptr inbounds i8, i8* %302, i64 24
  %309 = bitcast i8* %308 to i32*
  store i32 %300, i32* %309, align 4
  %310 = getelementptr inbounds i8, i8* %302, i64 28
  %311 = bitcast i8* %310 to i32*
  store i32 %299, i32* %311, align 4
  %312 = ptrtoint i8* %302 to i64
  %313 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %41, i64* %313, align 8
  %314 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %315 = bitcast %class.scoped_refptr.3* %314 to i64*
  store i64 %312, i64* %315, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #10
  br label %334

316:                                              ; preds = %55
  %317 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %317, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #10
  %318 = bitcast i8* %20 to %"class.blink::InterpolableList"*
  %319 = load i32*, i32** %43, align 8
  %320 = bitcast i32* %319 to i8*
  %321 = icmp eq i32* %319, null
  br i1 %321, label %327, label %322, !prof !3

322:                                              ; preds = %316
  %323 = load i32, i32* %45, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %326, label %325, !prof !2

325:                                              ; preds = %322
  store i32 0, i32* %45, align 4
  br label %326

326:                                              ; preds = %325, %322
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %320) #10
  store i32* null, i32** %43, align 8
  br label %327

327:                                              ; preds = %316, %326
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #10
  %328 = icmp eq i8* %20, null
  br i1 %328, label %334, label %329

329:                                              ; preds = %327
  %330 = bitcast i8* %20 to void (%"class.blink::InterpolableList"*)***
  %331 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %331, i64 1
  %333 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %332, align 8
  call void %333(%"class.blink::InterpolableList"* nonnull %318) #10
  br label %334

334:                                              ; preds = %297, %329, %327, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::SVGTransform"* @_ZNK5blink12SVGTransform5CloneEv(%"class.blink::SVGTransform"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33SVGTransformListInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::SVGTransformListInterpolationType"* nocapture readnone, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* nocapture readonly dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::Vector.25", align 8
  %8 = alloca %"class.WTF::Vector.17", align 8
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca %"class.std::__1::unique_ptr.39", align 8
  %11 = alloca %"struct.blink::InterpolationValue", align 8
  %12 = bitcast %"class.WTF::Vector.25"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %7, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #10
  %16 = bitcast %"class.WTF::Vector.17"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %8, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %2, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %119

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %66, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1, i32 0
  %29 = bitcast %"class.blink::NonInterpolableValue"** %28 to %"class.blink::SVGTransformNonInterpolableValue"**
  %30 = load %"class.blink::SVGTransformNonInterpolableValue"*, %"class.blink::SVGTransformNonInterpolableValue"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %30, i64 0, i32 1, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  call void @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.25"* nonnull %7, i32* %32, i32 %34) #10
  %35 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %37 = bitcast %"class.blink::InterpolableValue"* %36 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %38 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %38, i64 16
  %40 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %39, align 8
  %41 = call %"class.blink::InterpolableValue"* %40(%"class.blink::InterpolableValue"* %36) #10
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::InterpolableValue"* %41, %"class.blink::InterpolableValue"** %42, align 8
  %43 = load i32, i32* %19, align 4
  %44 = load i32, i32* %18, align 8
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %54, label %46, !prof !2

46:                                               ; preds = %27
  %47 = ptrtoint %"class.blink::InterpolableValue"* %41 to i64
  %48 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %49 = zext i32 %43 to i64
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %49
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %42, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %47, i64* %51, align 8
  %52 = load i32, i32* %19, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %19, align 4
  br label %55

54:                                               ; preds = %27
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.17"* nonnull %8, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %9) #10
  br label %55

55:                                               ; preds = %46, %54
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %42, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %42, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #10
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  %64 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8, !noalias !4
  %65 = bitcast %"class.blink::InterpolableValue"* %64 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  br label %66

66:                                               ; preds = %23, %63
  %67 = phi %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** [ null, %23 ], [ %65, %63 ]
  %68 = phi %"class.blink::InterpolableValue"* [ null, %23 ], [ %64, %63 ]
  %69 = bitcast %"class.std::__1::unique_ptr.39"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  %70 = call noalias i8* @malloc(i64 32) #10
  %71 = bitcast i8* %70 to i32 (...)***
  %72 = getelementptr inbounds i8, i8* %70, i64 8
  %73 = bitcast i8* %72 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %73, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123SVGTransformListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %74 = getelementptr inbounds i8, i8* %70, i64 16
  %75 = icmp eq %"class.blink::InterpolableValue"* %68, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %66
  %77 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %67, align 8, !noalias !4
  %78 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %77, i64 16
  %79 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %78, align 8, !noalias !4
  %80 = call %"class.blink::InterpolableValue"* %79(%"class.blink::InterpolableValue"* nonnull %68) #10, !noalias !4
  %81 = ptrtoint %"class.blink::InterpolableValue"* %80 to i64
  br label %82

82:                                               ; preds = %76, %66
  %83 = phi i64 [ %81, %76 ], [ 0, %66 ]
  %84 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1, i32 0
  %85 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %84, align 8, !noalias !4
  %86 = icmp eq %"class.blink::NonInterpolableValue"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %85, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %88) #10, !noalias !4
  br label %89

89:                                               ; preds = %82, %87
  %90 = ptrtoint %"class.blink::NonInterpolableValue"* %85 to i64
  %91 = bitcast i8* %74 to i64*
  store i64 %83, i64* %91, align 8, !alias.scope !4
  %92 = getelementptr inbounds i8, i8* %70, i64 24
  %93 = bitcast i8* %92 to i64*
  store i64 %90, i64* %93, align 8, !alias.scope !4
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %10, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr.39"* %10 to i8**
  store i8* %70, i8** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %110, label %101, !prof !2

101:                                              ; preds = %89
  %102 = ptrtoint i8* %70 to i64
  %103 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %103, align 8
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %104, i64 %105
  %107 = bitcast %"class.std::__1::unique_ptr.6"* %106 to i64*
  store i64 %102, i64* %107, align 8
  %108 = load i32, i32* %96, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %96, align 4
  store %"class.blink::(anonymous namespace)::SVGTransformListChecker"* null, %"class.blink::(anonymous namespace)::SVGTransformListChecker"** %94, align 8
  br label %118

110:                                              ; preds = %89
  call fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_123SVGTransformListCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector"* %5, %"class.std::__1::unique_ptr.39"* nonnull dereferenceable(8) %10) #10
  %111 = load %"class.blink::(anonymous namespace)::SVGTransformListChecker"*, %"class.blink::(anonymous namespace)::SVGTransformListChecker"** %94, align 8
  store %"class.blink::(anonymous namespace)::SVGTransformListChecker"* null, %"class.blink::(anonymous namespace)::SVGTransformListChecker"** %94, align 8
  %112 = icmp eq %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = bitcast %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %111 to void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)***
  %115 = load void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)**, void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)*, void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)** %115, i64 1
  %117 = load void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)*, void (%"class.blink::(anonymous namespace)::SVGTransformListChecker"*)** %116, align 8
  call void %117(%"class.blink::(anonymous namespace)::SVGTransformListChecker"* nonnull %111) #10
  br label %118

118:                                              ; preds = %101, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  br label %119

119:                                              ; preds = %6, %118
  %120 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %2 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %121 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %120, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %121, i64 2
  %123 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %122, align 8
  %124 = call zeroext i1 %123(%"class.blink::Keyframe::PropertySpecificKeyframe"* %2) #10
  br i1 %124, label %214, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %3, i64 1, i32 1
  %127 = bitcast %"class.blink::InterpolationTypesMap"** %126 to %"class.blink::SVGPropertyBase"**
  %128 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %2, i64 1
  %130 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %129 to %"class.WTF::String"*
  %131 = bitcast %"class.blink::SVGPropertyBase"* %128 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)***
  %132 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*** %131, align 8
  %133 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)** %132, i64 2
  %134 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)** %133, align 8
  %135 = call %"class.blink::SVGPropertyBase"* %134(%"class.blink::SVGPropertyBase"* %128, %"class.WTF::String"* dereferenceable(8) %130) #10
  %136 = bitcast %"struct.blink::InterpolationValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #10
  %137 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %11, i64 0, i32 1, i32 0
  %139 = bitcast %"struct.blink::InterpolationValue"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink33SVGTransformListInterpolationType20MaybeConvertSVGValueERKNS_15SVGPropertyBaseE(%"struct.blink::InterpolationValue"* nonnull sret %11, %"class.blink::SVGTransformListInterpolationType"* undef, %"class.blink::SVGPropertyBase"* dereferenceable(8) %135)
  %140 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %137, align 8
  %141 = icmp eq %"class.blink::InterpolableValue"* %140, null
  br i1 %141, label %142, label %168

142:                                              ; preds = %125
  %143 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #10
  %144 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %138, align 8
  %145 = icmp eq %"class.blink::NonInterpolableValue"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %144, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %147, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %148) #10
  %149 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %147, i64 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %147, i64 -2
  %154 = bitcast %"class.base::RefCounted.5"* %153 to %"class.blink::NonInterpolableValue"*
  %155 = bitcast %"class.base::RefCounted.5"* %153 to void (%"class.blink::NonInterpolableValue"*)***
  %156 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %156, i64 1
  %158 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %157, align 8
  call void %158(%"class.blink::NonInterpolableValue"* nonnull %154) #10
  br label %159

159:                                              ; preds = %152, %146, %142
  %160 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %137, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %137, align 8
  %161 = icmp eq %"class.blink::InterpolableValue"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = bitcast %"class.blink::InterpolableValue"* %160 to void (%"class.blink::InterpolableValue"*)***
  %164 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %164, i64 1
  %166 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %165, align 8
  call void %166(%"class.blink::InterpolableValue"* nonnull %160) #10
  br label %167

167:                                              ; preds = %159, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #10
  br label %300

168:                                              ; preds = %125
  %169 = bitcast %"class.blink::NonInterpolableValue"** %138 to %"class.blink::SVGTransformNonInterpolableValue"**
  %170 = load %"class.blink::SVGTransformNonInterpolableValue"*, %"class.blink::SVGTransformNonInterpolableValue"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %170, i64 0, i32 1, i32 0, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  %173 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %170, i64 0, i32 1, i32 0, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  call void @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.25"* nonnull %7, i32* %172, i32 %174) #10
  %175 = load i32, i32* %19, align 4
  %176 = load i32, i32* %18, align 8
  %177 = icmp eq i32 %175, %176
  br i1 %177, label %187, label %178, !prof !2

178:                                              ; preds = %168
  %179 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %180 = zext i32 %175 to i64
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %179, i64 %180
  %182 = bitcast %"struct.blink::InterpolationValue"* %11 to i64*
  %183 = load i64, i64* %182, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %137, align 8
  %184 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  store i64 %183, i64* %184, align 8
  %185 = load i32, i32* %19, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %19, align 4
  br label %189

187:                                              ; preds = %168
  %188 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %11, i64 0, i32 0
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.17"* nonnull %8, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %188) #10
  br label %189

189:                                              ; preds = %178, %187
  %190 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %138, align 8
  %191 = icmp eq %"class.blink::NonInterpolableValue"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %190, i64 0, i32 1, i32 0
  %194 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %193, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %194) #10
  %195 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %193, i64 0, i32 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %205

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %193, i64 -2
  %200 = bitcast %"class.base::RefCounted.5"* %199 to %"class.blink::NonInterpolableValue"*
  %201 = bitcast %"class.base::RefCounted.5"* %199 to void (%"class.blink::NonInterpolableValue"*)***
  %202 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %202, i64 1
  %204 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %203, align 8
  call void %204(%"class.blink::NonInterpolableValue"* nonnull %200) #10
  br label %205

205:                                              ; preds = %198, %192, %189
  %206 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %137, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %137, align 8
  %207 = icmp eq %"class.blink::InterpolableValue"* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %205
  %209 = bitcast %"class.blink::InterpolableValue"* %206 to void (%"class.blink::InterpolableValue"*)***
  %210 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %210, i64 1
  %212 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %211, align 8
  call void %212(%"class.blink::InterpolableValue"* nonnull %206) #10
  br label %213

213:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #10
  br label %214

214:                                              ; preds = %213, %119
  %215 = load i32, i32* %15, align 4
  %216 = call noalias i8* @malloc(i64 24) #10
  %217 = bitcast i8* %216 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  %218 = getelementptr inbounds i8, i8* %216, i64 8
  %219 = bitcast i8* %218 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %219, align 8
  %220 = getelementptr inbounds i8, i8* %216, i64 16
  %221 = bitcast i8* %220 to i32*
  store i32 0, i32* %221, align 8
  %222 = icmp eq i32 %215, 0
  br i1 %222, label %232, label %223

223:                                              ; preds = %214
  %224 = zext i32 %215 to i64
  %225 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %224) #10
  %226 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %225, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %227 = ptrtoint i8* %226 to i64
  %228 = bitcast i8* %218 to i64*
  store atomic i64 %227, i64* %228 monotonic, align 8
  %229 = lshr i64 %225, 3
  %230 = trunc i64 %229 to i32
  store i32 %230, i32* %221, align 8
  %231 = shl nuw nsw i64 %224, 3
  br label %232

232:                                              ; preds = %214, %223
  %233 = phi i64 [ %231, %223 ], [ 0, %214 ]
  %234 = phi i8* [ %226, %223 ], [ null, %214 ]
  %235 = getelementptr inbounds i8, i8* %216, i64 20
  %236 = bitcast i8* %235 to i32*
  store i32 %215, i32* %236, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 %233, i1 false) #10
  %237 = ptrtoint i8* %216 to i64
  %238 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %239 = load i32, i32* %19, align 4
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %238, i64 %240
  %242 = icmp eq i32 %239, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %232
  %244 = bitcast i8* %218 to %"class.WTF::Vector.17"*
  br label %264

245:                                              ; preds = %274, %232
  %246 = call noalias i8* @malloc(i64 32) #10
  %247 = getelementptr inbounds i8, i8* %246, i64 8
  %248 = bitcast i8* %247 to i32*
  store i32 1, i32* %248, align 4
  %249 = bitcast i8* %246 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32SVGTransformNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %249, align 8
  %250 = getelementptr inbounds i8, i8* %246, i64 16
  %251 = bitcast i8* %250 to i64*
  store i64 0, i64* %251, align 8
  %252 = bitcast %"class.WTF::Vector.25"* %7 to i64*
  %253 = load i64, i64* %252, align 8
  store atomic i64 0, i64* %252 monotonic, align 8
  store atomic i64 %253, i64* %251 monotonic, align 8
  %254 = getelementptr inbounds i8, i8* %246, i64 24
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %14, align 8
  store i32 %256, i32* %255, align 4
  store i32 0, i32* %14, align 8
  %257 = getelementptr inbounds i8, i8* %246, i64 28
  %258 = bitcast i8* %257 to i32*
  %259 = load i32, i32* %15, align 4
  store i32 %259, i32* %258, align 4
  store i32 0, i32* %15, align 4
  %260 = ptrtoint i8* %246 to i64
  %261 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %237, i64* %261, align 8
  %262 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %263 = bitcast %class.scoped_refptr.3* %262 to i64*
  store i64 %260, i64* %263, align 8
  br label %300

264:                                              ; preds = %243, %274
  %265 = phi %"class.std::__1::unique_ptr"* [ %238, %243 ], [ %276, %274 ]
  %266 = phi i32 [ 0, %243 ], [ %275, %274 ]
  %267 = bitcast %"class.std::__1::unique_ptr"* %265 to %"class.blink::InterpolableList"**
  %268 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %268, i64 0, i32 1, i32 0, i32 0, i32 2
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %274, label %272

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %268, i64 0, i32 1
  br label %278

274:                                              ; preds = %295, %264
  %275 = phi i32 [ %266, %264 ], [ %296, %295 ]
  %276 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %265, i64 1
  %277 = icmp eq %"class.std::__1::unique_ptr"* %276, %241
  br i1 %277, label %245, label %264

278:                                              ; preds = %272, %295
  %279 = phi i32 [ 0, %272 ], [ %297, %295 ]
  %280 = phi i32 [ %266, %272 ], [ %296, %295 ]
  %281 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %273, i32 %279) #10
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 0, i32 0, i32 0, i32 0
  %283 = bitcast %"class.std::__1::unique_ptr"* %281 to i64*
  %284 = load i64, i64* %283, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %282, align 8
  %285 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %244, i32 %280) #10
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %285, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %286, align 8
  %288 = bitcast %"class.std::__1::unique_ptr"* %285 to i64*
  store i64 %284, i64* %288, align 8
  %289 = icmp eq %"class.blink::InterpolableValue"* %287, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %278
  %291 = bitcast %"class.blink::InterpolableValue"* %287 to void (%"class.blink::InterpolableValue"*)***
  %292 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %291, align 8
  %293 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %292, i64 1
  %294 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %293, align 8
  call void %294(%"class.blink::InterpolableValue"* nonnull %287) #10
  br label %295

295:                                              ; preds = %278, %290
  %296 = add i32 %280, 1
  %297 = add nuw i32 %279, 1
  %298 = load i32, i32* %269, align 4
  %299 = icmp ult i32 %297, %298
  br i1 %299, label %278, label %274

300:                                              ; preds = %167, %245
  %301 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %302 = icmp eq %"class.std::__1::unique_ptr"* %301, null
  br i1 %302, label %328, label %303, !prof !3

303:                                              ; preds = %300
  %304 = bitcast %"class.std::__1::unique_ptr"* %301 to i8*
  %305 = load i32, i32* %19, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %326, label %307, !prof !2

307:                                              ; preds = %303
  %308 = zext i32 %305 to i64
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %301, i64 %308
  br label %310

310:                                              ; preds = %320, %307
  %311 = phi %"class.std::__1::unique_ptr"* [ %321, %320 ], [ %301, %307 ]
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %312, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %312, align 8
  %314 = icmp eq %"class.blink::InterpolableValue"* %313, null
  br i1 %314, label %320, label %315

315:                                              ; preds = %310
  %316 = bitcast %"class.blink::InterpolableValue"* %313 to void (%"class.blink::InterpolableValue"*)***
  %317 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %317, i64 1
  %319 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %318, align 8
  call void %319(%"class.blink::InterpolableValue"* nonnull %313) #10
  br label %320

320:                                              ; preds = %315, %310
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %311, i64 1
  %322 = icmp eq %"class.std::__1::unique_ptr"* %321, %309
  br i1 %322, label %323, label %310

323:                                              ; preds = %320
  store i32 0, i32* %19, align 4
  %324 = bitcast %"class.WTF::Vector.17"* %8 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %326

326:                                              ; preds = %323, %303
  %327 = phi i8* [ %325, %323 ], [ %304, %303 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %327) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %17, align 8
  br label %328

328:                                              ; preds = %300, %326
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  %329 = load i32*, i32** %13, align 8
  %330 = icmp eq i32* %329, null
  %331 = bitcast i32* %329 to i8*
  br i1 %330, label %337, label %332, !prof !3

332:                                              ; preds = %328
  %333 = load i32, i32* %15, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %336, label %335, !prof !2

335:                                              ; preds = %332
  store i32 0, i32* %15, align 4
  br label %336

336:                                              ; preds = %335, %332
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %331) #10
  store i32* null, i32** %13, align 8
  br label %337

337:                                              ; preds = %328, %336
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink33SVGTransformListInterpolationType15AppliedSVGValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueE(%"class.blink::SVGTransformListInterpolationType"* nocapture readnone, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #10
  %5 = bitcast i8* %4 to %"class.blink::SVGTransformList"*
  tail call void @_ZN5blink16SVGTransformListC1Ev(%"class.blink::SVGTransformList"* %5) #10
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableList"*
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 1
  %12 = bitcast %"class.blink::NonInterpolableValue"* %11 to %"class.WTF::Vector.25"*
  %13 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %18 = bitcast %"class.blink::InterpolableValue"* %17 to %"class.WTF::Vector.17"*
  %19 = bitcast i8* %4 to %"class.blink::SVGListPropertyBase"*
  br label %22

20:                                               ; preds = %120, %3
  %21 = bitcast i8* %4 to %"class.blink::SVGPropertyBase"*
  ret %"class.blink::SVGPropertyBase"* %21

22:                                               ; preds = %16, %120
  %23 = phi i32 [ 0, %16 ], [ %123, %120 ]
  %24 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %18, i32 %23) #10
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %25, align 8
  %27 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"* %12, i32 %23)
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %120 [
    i32 2, label %29
    i32 3, label %50
    i32 4, label %71
    i32 5, label %98
    i32 6, label %109
  ]

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #10
  %31 = bitcast i8* %30 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %31, i32 2, i32 0) #10
  %32 = getelementptr inbounds i8, i8* %30, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %26, i64 1
  %37 = bitcast %"class.blink::InterpolableValue"* %36 to %"class.WTF::Vector.17"*
  %38 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %37, i32 0) #10
  %39 = bitcast %"class.std::__1::unique_ptr"* %38 to %"class.blink::InterpolableNumber"**
  %40 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %40, i64 0, i32 1
  %42 = load double, double* %41, align 8
  %43 = fptrunc double %42 to float
  %44 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %37, i32 1) #10
  %45 = bitcast %"class.std::__1::unique_ptr"* %44 to %"class.blink::InterpolableNumber"**
  %46 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %46, i64 0, i32 1
  %48 = load double, double* %47, align 8
  %49 = fptrunc double %48 to float
  tail call void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"* %31, float %43, float %49) #10
  br label %120

50:                                               ; preds = %22
  %51 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #10
  %52 = bitcast i8* %51 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %52, i32 3, i32 0) #10
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  %57 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %26, i64 1
  %58 = bitcast %"class.blink::InterpolableValue"* %57 to %"class.WTF::Vector.17"*
  %59 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %58, i32 0) #10
  %60 = bitcast %"class.std::__1::unique_ptr"* %59 to %"class.blink::InterpolableNumber"**
  %61 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %61, i64 0, i32 1
  %63 = load double, double* %62, align 8
  %64 = fptrunc double %63 to float
  %65 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %58, i32 1) #10
  %66 = bitcast %"class.std::__1::unique_ptr"* %65 to %"class.blink::InterpolableNumber"**
  %67 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %67, i64 0, i32 1
  %69 = load double, double* %68, align 8
  %70 = fptrunc double %69 to float
  tail call void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"* %52, float %64, float %70) #10
  br label %120

71:                                               ; preds = %22
  %72 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #10
  %73 = bitcast i8* %72 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %73, i32 4, i32 0) #10
  %74 = getelementptr inbounds i8, i8* %72, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  %78 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %26, i64 1
  %79 = bitcast %"class.blink::InterpolableValue"* %78 to %"class.WTF::Vector.17"*
  %80 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %79, i32 0) #10
  %81 = bitcast %"class.std::__1::unique_ptr"* %80 to %"class.blink::InterpolableNumber"**
  %82 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %82, i64 0, i32 1
  %84 = load double, double* %83, align 8
  %85 = fptrunc double %84 to float
  %86 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %79, i32 1) #10
  %87 = bitcast %"class.std::__1::unique_ptr"* %86 to %"class.blink::InterpolableNumber"**
  %88 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %88, i64 0, i32 1
  %90 = load double, double* %89, align 8
  %91 = fptrunc double %90 to float
  %92 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %79, i32 2) #10
  %93 = bitcast %"class.std::__1::unique_ptr"* %92 to %"class.blink::InterpolableNumber"**
  %94 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %94, i64 0, i32 1
  %96 = load double, double* %95, align 8
  %97 = fptrunc double %96 to float
  tail call void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"* %73, float %85, float %91, float %97) #10
  br label %120

98:                                               ; preds = %22
  %99 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #10
  %100 = bitcast i8* %99 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %100, i32 5, i32 0) #10
  %101 = getelementptr inbounds i8, i8* %99, i64 -4
  %102 = bitcast i8* %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = or i16 %103, 1
  store atomic i16 %104, i16* %102 release, align 2
  %105 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %26, i64 1
  %106 = bitcast %"class.blink::InterpolableValue"* %105 to double*
  %107 = load double, double* %106, align 8
  %108 = fptrunc double %107 to float
  tail call void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"* %100, float %108) #10
  br label %120

109:                                              ; preds = %22
  %110 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #10
  %111 = bitcast i8* %110 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %111, i32 6, i32 0) #10
  %112 = getelementptr inbounds i8, i8* %110, i64 -4
  %113 = bitcast i8* %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = or i16 %114, 1
  store atomic i16 %115, i16* %113 release, align 2
  %116 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %26, i64 1
  %117 = bitcast %"class.blink::InterpolableValue"* %116 to double*
  %118 = load double, double* %117, align 8
  %119 = fptrunc double %118 to float
  tail call void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"* %111, float %119) #10
  br label %120

120:                                              ; preds = %22, %29, %50, %71, %98, %109
  %121 = phi %"class.blink::SVGTransform"* [ %111, %109 ], [ %100, %98 ], [ %73, %71 ], [ %52, %50 ], [ %31, %29 ], [ null, %22 ]
  %122 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %121, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %19, %"class.blink::SVGListablePropertyBase"* %122) #10
  %123 = add nuw i32 %23, 1
  %124 = load i32, i32* %13, align 4
  %125 = icmp ult i32 %123, %124
  br i1 %125, label %22, label %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33SVGTransformListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias nocapture sret, %"class.blink::SVGTransformListInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %6 = bitcast %"class.blink::NonInterpolableValue"** %5 to %"class.blink::SVGTransformNonInterpolableValue"**
  %7 = load %"class.blink::SVGTransformNonInterpolableValue"*, %"class.blink::SVGTransformNonInterpolableValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %7, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %10 = bitcast %"class.blink::NonInterpolableValue"** %9 to %"class.blink::SVGTransformNonInterpolableValue"**
  %11 = load %"class.blink::SVGTransformNonInterpolableValue"*, %"class.blink::SVGTransformNonInterpolableValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %11, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %29

18:                                               ; preds = %4
  %19 = icmp eq i32 %14, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.WTF::Vector.25"* %8 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.25"* %12 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %14 to i64
  %26 = shl nuw nsw i64 %25, 2
  %27 = tail call i32 @bcmp(i8* %22, i8* %24, i64 %26) #10
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %20, %4
  %30 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #10
  br label %42

31:                                               ; preds = %20, %18
  %32 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %32, align 8
  %35 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"struct.blink::InterpolationValue"* %3 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %35, align 8
  %38 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %38, align 8
  %39 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %34, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %41 = bitcast %"class.std::__1::unique_ptr"* %40 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %41, align 8
  br label %42

42:                                               ; preds = %31, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33SVGTransformListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::SVGTransformListInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::SVGTransformListInterpolationType", %"class.blink::SVGTransformListInterpolationType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* %1, %"class.blink::InterpolationType"* dereferenceable(32) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %3) #10
  ret void
}

declare void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33SVGTransformListInterpolationTypeD0Ev(%"class.blink::SVGTransformListInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformListInterpolationType", %"class.blink::SVGTransformListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGTransformListInterpolationType", %"class.blink::SVGTransformListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::SVGTransformListInterpolationType"* %0 to i8*
  tail call void @free(i8* %20) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector"* dereferenceable(16) %6) #10
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector"* dereferenceable(16) %6) #10
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #10
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #10
  %45 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.5"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.5"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #10
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #10
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #10
  %70 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.5"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.5"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #10
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #10
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

declare void @_ZNK5blink20SVGInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::SVGInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #3

declare void @_ZNK5blink20SVGInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::SVGInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SVGTransformNonInterpolableValueD2Ev(%"class.blink::SVGTransformNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32SVGTransformNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store i32* null, i32** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SVGTransformNonInterpolableValueD0Ev(%"class.blink::SVGTransformNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink32SVGTransformNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  br label %13

13:                                               ; preds = %1, %12
  %14 = bitcast %"class.blink::SVGTransformNonInterpolableValue"* %0 to i8*
  tail call void @free(i8* %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink32SVGTransformNonInterpolableValue7GetTypeEv(%"class.blink::SVGTransformNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink32SVGTransformNonInterpolableValue12static_type_E, align 8
  ret i8* %2
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"*, float, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"*, float, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"*, float, float, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"*, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.3* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #10
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #10
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.9"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.25"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.25"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.25"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ugt i32* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %5, i64 %10
  %12 = icmp ugt i32* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16SVGTransformTypeEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16SVGTransformTypeEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load i32*, i32** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i32* %37 to i8*
  br i1 %40, label %42, label %49, !prof !3

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.25"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i32* %2 to i64
  %55 = ptrtoint i32* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !3

68:                                               ; preds = %53
  %69 = icmp eq i32* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16SVGTransformTypeEEEmm(i64 %70) #10
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16SVGTransformTypeEEEPKcv, i64 0, i64 0)) #10
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i32*, i32** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i32* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i32* %77 to i8*
  br i1 %80, label %82, label %88, !prof !3

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #10
  %86 = bitcast %"class.WTF::Vector.25"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #10
  %90 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i32*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i32* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i32, i32* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i32* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i32* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16SVGTransformTypeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.25"*, i32*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call i32* @_ZN3WTF6VectorIN5blink16SVGTransformTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.25"* %0, i32 %9, i32* %1) #10
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi i32* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %34 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = icmp ne i32* %38, null
  %40 = icmp ne i32* %18, null
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %47, !prof !3

42:                                               ; preds = %33
  %43 = zext i32 %2 to i64
  %44 = bitcast i32* %38 to i8*
  %45 = bitcast i32* %18 to i8*
  %46 = shl nuw nsw i64 %43, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* nonnull align 4 %45, i64 %46, i1 false) #10
  br label %47

47:                                               ; preds = %33, %42
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.17"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123SVGTransformListCheckerD2Ev(%"class.blink::(anonymous namespace)::SVGTransformListChecker"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123SVGTransformListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %9 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.5"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted.5"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #10
  br label %19

19:                                               ; preds = %12, %6, %1
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %20, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %20, align 8
  %22 = icmp eq %"class.blink::InterpolableValue"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::InterpolableValue"* %21 to void (%"class.blink::InterpolableValue"*)***
  %25 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %25, i64 1
  %27 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %26, align 8
  tail call void %27(%"class.blink::InterpolableValue"* nonnull %21) #10
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123SVGTransformListCheckerD0Ev(%"class.blink::(anonymous namespace)::SVGTransformListChecker"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123SVGTransformListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %9 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.5", %"class.base::RefCounted.5"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.5"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted.5"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #10
  br label %19

19:                                               ; preds = %12, %6, %1
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %20, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %20, align 8
  %22 = icmp eq %"class.blink::InterpolableValue"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::InterpolableValue"* %21 to void (%"class.blink::InterpolableValue"*)***
  %25 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %25, i64 1
  %27 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %26, align 8
  tail call void %27(%"class.blink::InterpolableValue"* nonnull %21) #10
  br label %28

28:                                               ; preds = %19, %23
  %29 = bitcast %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0 to i8*
  tail call void @free(i8* %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_123SVGTransformListChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::(anonymous namespace)::SVGTransformListChecker"* nocapture readonly, %"class.blink::InterpolationEnvironment"* nocapture readnone dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = icmp eq %"class.blink::InterpolableValue"* %5, null
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = icmp ne %"class.blink::InterpolableValue"* %8, null
  br i1 %6, label %10, label %12

10:                                               ; preds = %3
  %11 = xor i1 %9, true
  ret i1 %11

12:                                               ; preds = %3
  br i1 %9, label %13, label %44

13:                                               ; preds = %12
  %14 = bitcast %"class.blink::InterpolableValue"* %8 to i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %15 = load i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %15, i64 11
  %17 = load i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::InterpolableValue"* nonnull %8, %"class.blink::InterpolableValue"* nonnull dereferenceable(8) %5) #10
  br i1 %18, label %19, label %44

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGTransformListChecker", %"class.blink::(anonymous namespace)::SVGTransformListChecker"* %0, i64 0, i32 1, i32 1, i32 0
  %21 = bitcast %"class.blink::NonInterpolableValue"** %20 to %"class.blink::SVGTransformNonInterpolableValue"**
  %22 = load %"class.blink::SVGTransformNonInterpolableValue"*, %"class.blink::SVGTransformNonInterpolableValue"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %22, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %25 = bitcast %"class.blink::NonInterpolableValue"** %24 to %"class.blink::SVGTransformNonInterpolableValue"**
  %26 = load %"class.blink::SVGTransformNonInterpolableValue"*, %"class.blink::SVGTransformNonInterpolableValue"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %26, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::SVGTransformNonInterpolableValue", %"class.blink::SVGTransformNonInterpolableValue"* %26, i64 0, i32 1, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %44

33:                                               ; preds = %19
  %34 = icmp eq i32 %29, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.WTF::Vector.25"* %23 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.WTF::Vector.25"* %27 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = zext i32 %29 to i64
  %41 = shl nuw nsw i64 %40, 2
  %42 = tail call i32 @bcmp(i8* %37, i8* %39, i64 %41) #10
  %43 = icmp eq i32 %42, 0
  br label %44

44:                                               ; preds = %35, %33, %19, %13, %12
  %45 = phi i1 [ false, %12 ], [ false, %13 ], [ %43, %35 ], [ false, %19 ], [ true, %33 ]
  ret i1 %45
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_12_GLOBAL__N_123SVGTransformListCheckerENS6_ISD_EEEEEEvOT_(%"class.WTF::Vector"* nocapture, %"class.std::__1::unique_ptr.39"* nocapture dereferenceable(8)) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.6"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.6"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.6"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.6"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.6"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.39"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::(anonymous namespace)::SVGTransformListChecker"* null, %"class.blink::(anonymous namespace)::SVGTransformListChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.6"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN5blink16SVGTransformListC1Ev(%"class.blink::SVGTransformList"*) unnamed_addr #3

declare void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"*, %"class.blink::SVGListablePropertyBase"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink18InterpolationValue5CloneEv"}
