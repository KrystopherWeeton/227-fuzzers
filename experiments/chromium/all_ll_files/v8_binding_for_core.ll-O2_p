; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/v8_binding_for_core.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/v8_binding_for_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.225" }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.220" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::PropertyDescriptor" = type { %"struct.v8::PropertyDescriptor::PrivateData"* }
%"struct.v8::PropertyDescriptor::PrivateData" = type opaque
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.177", %"class.blink::HeapHashMap.186", %"class.std::__1::unique_ptr.196", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.208", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.211" }
%"class.blink::HeapHashMap.177" = type { %"class.WTF::HashMap.180" }
%"class.WTF::HashMap.180" = type { %"class.WTF::HashTable.181" }
%"class.WTF::HashTable.181" = type <{ %"struct.WTF::KeyValuePair.183"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.183" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.193" }
%"class.blink::TraceWrapperV8Reference.193" = type { %"class.v8::TracedReference.194" }
%"class.v8::TracedReference.194" = type { %"class.v8::BasicTracedReference.195" }
%"class.v8::BasicTracedReference.195" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.199" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.208" = type { %"class.v8::Persistent.209" }
%"class.v8::Persistent.209" = type { %"class.v8::PersistentBase.210" }
%"class.v8::PersistentBase.210" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.211" = type { %"class.WTF::HashMap.214" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.217" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.218" }
%"class.blink::Persistent.218" = type { %"class.blink::PersistentBase.219" }
%"class.blink::PersistentBase.219" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.232" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.WTF::StringImpl"* }
%"class.blink::TraceWrapperV8Reference.232" = type { %"class.v8::TracedReference.233" }
%"class.v8::TracedReference.233" = type { %"class.v8::BasicTracedReference.234" }
%"class.v8::BasicTracedReference.234" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend.3229" = type { %"class.WTF::StringAppend.3230", i8* }
%"class.WTF::StringAppend.3230" = type { i8*, %"class.WTF::String" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.WTF::StringAppend.3228" = type { %"class.WTF::StringAppend.3229", %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.3228", i8* }
%"class.blink::XPathNSResolver" = type { %"class.blink::ScriptWrappable" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.3400", %"class.WTF::HashMap.3400", %"class.WTF::HashMap.3405", %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3448", %"class.blink::Persistent.218", i8, i8, i8, %"class.WTF::Vector.1085", %"class.std::__1::unique_ptr.3459", %"class.blink::Persistent.3465", %"class.blink::Persistent.3469", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.3382", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.3388", %"class.std::__1::unique_ptr.3394", i32, i32 }
%"class.std::__1::unique_ptr.3382" = type { %"class.std::__1::__compressed_pair.3383" }
%"class.std::__1::__compressed_pair.3383" = type { %"struct.std::__1::__compressed_pair_elem.3384" }
%"struct.std::__1::__compressed_pair_elem.3384" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.3388" = type { %"class.std::__1::__compressed_pair.3389" }
%"class.std::__1::__compressed_pair.3389" = type { %"struct.std::__1::__compressed_pair_elem.3390" }
%"struct.std::__1::__compressed_pair_elem.3390" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.3394" = type { %"class.std::__1::__compressed_pair.3395" }
%"class.std::__1::__compressed_pair.3395" = type { %"struct.std::__1::__compressed_pair_elem.3396" }
%"struct.std::__1::__compressed_pair_elem.3396" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.3400" = type { %"class.WTF::HashTable.3401" }
%"class.WTF::HashTable.3401" = type <{ %"struct.WTF::KeyValuePair.3404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3404" = type opaque
%"class.WTF::HashMap.3405" = type { %"class.WTF::HashTable.3406" }
%"class.WTF::HashTable.3406" = type <{ %"struct.WTF::KeyValuePair.3409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3409" = type opaque
%"class.std::__1::unique_ptr.3410" = type { %"class.std::__1::__compressed_pair.3411" }
%"class.std::__1::__compressed_pair.3411" = type { %"struct.std::__1::__compressed_pair_elem.3412" }
%"struct.std::__1::__compressed_pair_elem.3412" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.3418", %class.scoped_refptr.231 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.3413", i8* }
%"class.WTF::HashMap.3413" = type { %"class.WTF::HashTable.3414" }
%"class.WTF::HashTable.3414" = type <{ %"struct.WTF::KeyValuePair.3417"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3417" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.3418" = type { %"class.v8::PersistentValueMapBase.3419" }
%"class.v8::PersistentValueMapBase.3419" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.3420", i8* }
%"class.WTF::HashMap.3420" = type { %"class.WTF::HashTable.3421" }
%"class.WTF::HashTable.3421" = type <{ %"struct.WTF::KeyValuePair.3424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3424" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.3425", %"class.WTF::String", %"class.std::__1::unique_ptr.3427" }
%"class.WTF::RefCounted.3425" = type { %"class.base::RefCounted.3426" }
%"class.base::RefCounted.3426" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3427" = type { %"class.std::__1::__compressed_pair.3428" }
%"class.std::__1::__compressed_pair.3428" = type { %"struct.std::__1::__compressed_pair_elem.3429" }
%"struct.std::__1::__compressed_pair_elem.3429" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.3430", %"class.std::__1::unique_ptr.3436", %"class.WTF::Vector.3348", i8, i32 }
%"class.std::__1::unique_ptr.3430" = type { %"class.std::__1::__compressed_pair.3431" }
%"class.std::__1::__compressed_pair.3431" = type { %"struct.std::__1::__compressed_pair_elem.3432" }
%"struct.std::__1::__compressed_pair_elem.3432" = type { %"class.WTF::Vector.3356"* }
%"class.WTF::Vector.3356" = type { %"class.WTF::VectorBuffer.3357" }
%"class.WTF::VectorBuffer.3357" = type { %"class.WTF::VectorBufferBase.3350" }
%"class.WTF::VectorBufferBase.3350" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.3436" = type { %"class.std::__1::__compressed_pair.3437" }
%"class.std::__1::__compressed_pair.3437" = type { %"struct.std::__1::__compressed_pair_elem.3438" }
%"struct.std::__1::__compressed_pair_elem.3438" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.3348" = type { %"class.WTF::VectorBuffer.3349" }
%"class.WTF::VectorBuffer.3349" = type { %"class.WTF::VectorBufferBase.3350", [32 x i8] }
%"class.std::__1::unique_ptr.3448" = type { %"class.std::__1::__compressed_pair.3449" }
%"class.std::__1::__compressed_pair.3449" = type { %"struct.std::__1::__compressed_pair_elem.3450" }
%"struct.std::__1::__compressed_pair_elem.3450" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.208", %"class.WTF::HashMap.3451" }
%"class.WTF::HashMap.3451" = type { %"class.WTF::HashTable.3452" }
%"class.WTF::HashTable.3452" = type <{ %"struct.WTF::KeyValuePair.3455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3455" = type opaque
%"class.WTF::Vector.1085" = type { %"class.WTF::VectorBuffer.1086" }
%"class.WTF::VectorBuffer.1086" = type { %"class.WTF::VectorBufferBase.1087" }
%"class.WTF::VectorBufferBase.1087" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.318 }
%class.scoped_refptr.318 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.319", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.319" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.287" }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i32 }
%"class.std::__1::unique_ptr.3459" = type { %"class.std::__1::__compressed_pair.3460" }
%"class.std::__1::__compressed_pair.3460" = type { %"struct.std::__1::__compressed_pair_elem.3461" }
%"struct.std::__1::__compressed_pair_elem.3461" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.3465" = type { %"class.blink::PersistentBase.3466" }
%"class.blink::PersistentBase.3466" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.3469" = type { %"class.blink::PersistentBase.3470" }
%"class.blink::PersistentBase.3470" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.3473", i64 }
%"class.blink::HeapVector.3473" = type { %"class.WTF::Vector.3476" }
%"class.WTF::Vector.3476" = type { %"class.WTF::VectorBuffer.3477" }
%"class.WTF::VectorBuffer.3477" = type { %"class.WTF::VectorBufferBase.3478" }
%"class.WTF::VectorBufferBase.3478" = type { %"struct.std::__1::pair.3479"*, i32, i32 }
%"struct.std::__1::pair.3479" = type { %"class.blink::UntracedMember", %"class.blink::Member.3481" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.3480" }
%"class.blink::MemberBase.3480" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.3481" = type { %"class.blink::MemberBase.3482" }
%"class.blink::MemberBase.3482" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::V8CustomXPathNSResolver" = type { %"class.blink::XPathNSResolver", %"class.blink::Member.238", %"class.v8::Local" }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ScriptState"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.260", %"class.blink::Member.262", %"class.blink::Member.277", %"class.blink::Member.279", i8, %"class.WTF::Vector.281" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.253" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.244" }
%"class.WTF::Vector.244" = type { %"class.WTF::VectorBuffer.245" }
%"class.WTF::VectorBuffer.245" = type { %"class.WTF::VectorBufferBase.246", [32 x i8] }
%"class.WTF::VectorBufferBase.246" = type { %"struct.std::__1::pair.247"*, i32, i32 }
%"struct.std::__1::pair.247" = type { %"class.WTF::AtomicString", %"class.blink::Member.248" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::HeapVector.250"* }
%"class.blink::HeapVector.250" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.WTF::Vector.256"* }
%"class.WTF::Vector.256" = type opaque
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", i8, i32, i8, i32, %"class.blink::Member.475", %"class.blink::Member.262", %"class.blink::FrameLifecycle", %"class.blink::Member.260", %"class.blink::Member.260", %"class.blink::Member.260", %"class.blink::Member.260", %"class.blink::Member.260", %"class.blink::Member.260", %"class.blink::Member.479", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.489", i8, %"class.base::UnguessableToken", %"class.absl::optional.491", %"class.absl::optional.496", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.260", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.514", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.528", %"class.blink::FrameLoader", %"class.blink::Member.555", %"class.blink::Member.557", %"class.blink::Member.588", %"class.blink::Member.590", %"class.blink::Member.592", %"class.blink::Member.594", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.596", %class.scoped_refptr.816, %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.829", %"class.blink::Member.831", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.835", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.856", %"class.std::__1::unique_ptr.857", %"class.absl::optional.496", i32, [4 x i8], %"class.std::__1::unique_ptr.863", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.871", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.876", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.881", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.884", %"class.blink::Member.886", %"class.blink::Member.888", %"class.blink::Member.890", %"class.mojo::StructPtr", %"class.blink::Member.900", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.902", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.507" }
%"class.blink::HeapHashMap.507" = type { %"class.WTF::HashMap.510" }
%"class.WTF::HashMap.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.517", %"class.base::WeakPtrFactory.522" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type opaque
%"class.base::WeakPtrFactory.522" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.312", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.312" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.313" }
%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.526" }
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1419" }
%"class.blink::WeakMember.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1100" }
%"class.blink::HeapHashSet.1100" = type { %"class.WTF::HashSet.1103" }
%"class.WTF::HashSet.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"class.blink::WeakMember.1106"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1106" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.411", %"class.base::RepeatingCallback.3249", i64, %"class.std::__1::map.3250", i8*, i64, %"class.base::WeakPtrFactory.3259" }
%"class.base::RepeatingCallback.411" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.3249" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3250" = type { %"class.std::__1::__tree.3251" }
%"class.std::__1::__tree.3251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3252", %"class.std::__1::__compressed_pair.3256" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3252" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3256" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::WeakPtrFactory.3259" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.528" = type { %"class.WTF::HashSet.531" }
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"class.blink::WeakMember.534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.534" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.479", %"class.blink::Member.535", %"class.blink::Member.537", %"class.std::__1::unique_ptr.539", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.551" }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2225", %"class.blink::Member.2300", %"class.std::__1::unique_ptr.2633", %"class.std::__1::unique_ptr.1213", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2787, %"class.WTF::AtomicString", i32, %"class.absl::optional.2686", %class.scoped_refptr.1123, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2651", i8, %"class.absl::optional.2658", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.479", %"class.blink::Member.2788", %"class.blink::Member.1457", %"class.blink::Member.2799", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2801", %class.scoped_refptr.1115, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2814", %"class.std::__1::unique_ptr.2663", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2816", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2262, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2314, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2821", %"class.blink::Member.2836", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2849", %"class.WTF::Vector.1245", i8, i8, i8, %"class.blink::WebVector.2776", %"class.blink::WebVector.2776", %"class.mojo::Remote.2854" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2225" = type { %"class.WTF::VectorBuffer.2226" }
%"class.WTF::VectorBuffer.2226" = type { %"class.WTF::VectorBufferBase.2227" }
%"class.WTF::VectorBufferBase.2227" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2300" = type { %"class.blink::MemberBase.2301" }
%"class.blink::MemberBase.2301" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2633" = type { %"class.std::__1::__compressed_pair.2634" }
%"class.std::__1::__compressed_pair.2634" = type { %"struct.std::__1::__compressed_pair_elem.2635" }
%"struct.std::__1::__compressed_pair_elem.2635" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2637", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2651", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2658", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2663", %"class.base::UnguessableToken", %"class.blink::WebVector.2669", %"class.base::TickClock"*, %"class.blink::WebVector.2678", %"class.absl::optional.2686", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2691", %"class.blink::WebVector", i8, %"class.blink::WebVector.2710", i8, %"class.std::__1::unique_ptr.2718", %"class.blink::WebVector.2776", %"class.blink::WebVector.2776" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.231 }
%"class.blink::WebVector.2637" = type { %"class.std::__1::vector.2638" }
%"class.std::__1::vector.2638" = type { %"class.std::__1::__vector_base.2639" }
%"class.std::__1::__vector_base.2639" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2646" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2646" = type { %"struct.std::__1::__compressed_pair_elem.2647" }
%"struct.std::__1::__compressed_pair_elem.2647" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2640", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2640" = type { %"class.std::__1::__compressed_pair.2641" }
%"class.std::__1::__compressed_pair.2641" = type { %"struct.std::__1::__compressed_pair_elem.2642" }
%"struct.std::__1::__compressed_pair_elem.2642" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2657", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2657" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2636" }
%"class.blink::WebPrivatePtr.2636" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2669" = type { %"class.std::__1::vector.2670" }
%"class.std::__1::vector.2670" = type { %"class.std::__1::__vector_base.2671" }
%"class.std::__1::__vector_base.2671" = type { %"class.std::__1::unique_ptr.2672"*, %"class.std::__1::unique_ptr.2672"*, %"class.std::__1::__compressed_pair.2673" }
%"class.std::__1::unique_ptr.2672" = type opaque
%"class.std::__1::__compressed_pair.2673" = type { %"struct.std::__1::__compressed_pair_elem.2674" }
%"struct.std::__1::__compressed_pair_elem.2674" = type { %"class.std::__1::unique_ptr.2672"* }
%"class.blink::WebVector.2678" = type { %"class.std::__1::vector.2679" }
%"class.std::__1::vector.2679" = type { %"class.std::__1::__vector_base.2680" }
%"class.std::__1::__vector_base.2680" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2681" }
%"class.std::__1::__compressed_pair.2681" = type { %"struct.std::__1::__compressed_pair_elem.2682" }
%"struct.std::__1::__compressed_pair_elem.2682" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2691" = type { %"class.absl::optional_internal::optional_data.2692" }
%"class.absl::optional_internal::optional_data.2692" = type { %"class.absl::optional_internal::optional_data_base.2693" }
%"class.absl::optional_internal::optional_data_base.2693" = type { %"class.absl::optional_internal::optional_data_dtor_base.2694" }
%"class.absl::optional_internal::optional_data_dtor_base.2694" = type { i8, [7 x i8], %union.anon.2695 }
%union.anon.2695 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.840" }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2710" = type { %"class.std::__1::vector.2711" }
%"class.std::__1::vector.2711" = type { %"class.std::__1::__vector_base.2712" }
%"class.std::__1::__vector_base.2712" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2713" }
%"class.std::__1::__compressed_pair.2713" = type { %"struct.std::__1::__compressed_pair_elem.2714" }
%"struct.std::__1::__compressed_pair_elem.2714" = type { i32* }
%"class.std::__1::unique_ptr.2718" = type { %"class.std::__1::__compressed_pair.2719" }
%"class.std::__1::__compressed_pair.2719" = type { %"struct.std::__1::__compressed_pair_elem.2720" }
%"struct.std::__1::__compressed_pair_elem.2720" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2721" }
%"class.blink::WebVector.2721" = type { %"class.std::__1::vector.2722" }
%"class.std::__1::vector.2722" = type { %"class.std::__1::__vector_base.2723" }
%"class.std::__1::__vector_base.2723" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2768" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2724", %"class.blink::WebVector.2732", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2763", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2724" = type { %"class.std::__1::vector.2725" }
%"class.std::__1::vector.2725" = type { %"class.std::__1::__vector_base.2726" }
%"class.std::__1::__vector_base.2726" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2727" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2727" = type { %"struct.std::__1::__compressed_pair_elem.2728" }
%"struct.std::__1::__compressed_pair_elem.2728" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2732" = type { %"class.std::__1::vector.2733" }
%"class.std::__1::vector.2733" = type { %"class.std::__1::__vector_base.2734" }
%"class.std::__1::__vector_base.2734" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2758" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2735", %"class.blink::WebVector", %"class.blink::WebVector.2743", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2735" = type { %"class.std::__1::vector.2736" }
%"class.std::__1::vector.2736" = type { %"class.std::__1::__vector_base.2737" }
%"class.std::__1::__vector_base.2737" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2738" }
%"class.std::__1::__compressed_pair.2738" = type { %"struct.std::__1::__compressed_pair_elem.2739" }
%"struct.std::__1::__compressed_pair_elem.2739" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2743" = type { %"class.std::__1::vector.2744" }
%"class.std::__1::vector.2744" = type { %"class.std::__1::__vector_base.2745" }
%"class.std::__1::__vector_base.2745" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2753" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2746" }
%"class.blink::WebVector.2746" = type { %"class.std::__1::vector.2747" }
%"class.std::__1::vector.2747" = type { %"class.std::__1::__vector_base.2748" }
%"class.std::__1::__vector_base.2748" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2749" }
%"class.std::__1::__compressed_pair.2749" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { i8* }
%"class.std::__1::__compressed_pair.2753" = type { %"struct.std::__1::__compressed_pair_elem.2754" }
%"struct.std::__1::__compressed_pair_elem.2754" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2758" = type { %"struct.std::__1::__compressed_pair_elem.2759" }
%"struct.std::__1::__compressed_pair_elem.2759" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2763" = type { %"class.absl::optional_internal::optional_data.2764" }
%"class.absl::optional_internal::optional_data.2764" = type { %"class.absl::optional_internal::optional_data_base.2765" }
%"class.absl::optional_internal::optional_data_base.2765" = type { %"class.absl::optional_internal::optional_data_dtor_base.2766" }
%"class.absl::optional_internal::optional_data_dtor_base.2766" = type { i8, [7 x i8], %union.anon.2767 }
%union.anon.2767 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2768" = type { %"struct.std::__1::__compressed_pair_elem.2769" }
%"struct.std::__1::__compressed_pair_elem.2769" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.424 }
%class.scoped_refptr.424 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1216", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1216" = type { %"class.std::__1::unique_ptr.1217" }
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1220" }
%"class.WTF::Vector.1220" = type { %"class.WTF::VectorBuffer.1221" }
%"class.WTF::VectorBuffer.1221" = type { %"class.WTF::VectorBufferBase.1222" }
%"class.WTF::VectorBufferBase.1222" = type { %"class.mojo::StructPtr.1223"*, i32, i32 }
%"class.mojo::StructPtr.1223" = type { %"class.std::__1::unique_ptr.1224" }
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1227", %"class.WTF::HashMap.1234", %"class.WTF::HashMap.1239", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1244", i8, %"class.WTF::Vector.1245", i32, %"class.mojo::StructPtr.1250", %"class.WTF::Vector.1245" }
%"class.mojo::StructPtr.1227" = type { %"class.std::__1::unique_ptr.1228" }
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1234" = type { %"class.WTF::HashTable.1235" }
%"class.WTF::HashTable.1235" = type <{ %"struct.WTF::KeyValuePair.1238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1238" = type opaque
%"class.WTF::HashMap.1239" = type { %"class.WTF::HashTable.1240" }
%"class.WTF::HashTable.1240" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.mojo::InlinedStructPtr.1244" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1250" = type { %"class.std::__1::unique_ptr.1251" }
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1245", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1265" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.408", i32 }>
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.411", %"class.base::OnceCallback.412", %"class.absl::optional.413", %"class.absl::optional.418", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.425", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.433", %"class.std::__1::map.444", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.453", i8, %class.scoped_refptr.292, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.454" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.412" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.413" = type { %"class.absl::optional_internal::optional_data.414" }
%"class.absl::optional_internal::optional_data.414" = type { %"class.absl::optional_internal::optional_data_base.415" }
%"class.absl::optional_internal::optional_data_base.415" = type { %"class.absl::optional_internal::optional_data_dtor_base.416" }
%"class.absl::optional_internal::optional_data_dtor_base.416" = type { i8, %union.anon.417 }
%union.anon.417 = type { %"class.base::TimeDelta" }
%"class.absl::optional.418" = type { %"class.absl::optional_internal::optional_data.419" }
%"class.absl::optional_internal::optional_data.419" = type { %"class.absl::optional_internal::optional_data_base.420" }
%"class.absl::optional_internal::optional_data_base.420" = type { %"class.absl::optional_internal::optional_data_dtor_base.421" }
%"class.absl::optional_internal::optional_data_dtor_base.421" = type { i8, %union.anon.422 }
%union.anon.422 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.292, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.423" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.423" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.367 }
%class.scoped_refptr.367 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.466", [4 x i8], %"class.base::RepeatingCallback.411", %class.scoped_refptr.292, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.225", [4 x i8] }>
%"class.base::RefCountedThreadSafe.466" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.428", %class.scoped_refptr.429 }
%"class.base::RepeatingCallback.428" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.429 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.433" = type { %"class.std::__1::__tree.434" }
%"class.std::__1::__tree.434" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.435", %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.444" = type { %"class.std::__1::__tree.445" }
%"class.std::__1::__tree.445" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.446", %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::OnceCallback.453" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.292 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.293" }>
%"class.base::RefCountedThreadSafe.293" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.454" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1265" = type { %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2787 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2686" = type { %"class.absl::optional_internal::optional_data.2687" }
%"class.absl::optional_internal::optional_data.2687" = type { %"class.absl::optional_internal::optional_data_base.2688" }
%"class.absl::optional_internal::optional_data_base.2688" = type { %"class.absl::optional_internal::optional_data_dtor_base.2689" }
%"class.absl::optional_internal::optional_data_dtor_base.2689" = type { i8, %union.anon.2690 }
%union.anon.2690 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.1123 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1116", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1118", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1123 }
%"class.WTF::RefCounted.1116" = type { %"class.base::RefCounted.1117" }
%"class.base::RefCounted.1117" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1118" = type { %"class.absl::optional_internal::optional_data.1119" }
%"class.absl::optional_internal::optional_data.1119" = type { %"class.absl::optional_internal::optional_data_base.1120" }
%"class.absl::optional_internal::optional_data_base.1120" = type { %"class.absl::optional_internal::optional_data_dtor_base.1121" }
%"class.absl::optional_internal::optional_data_dtor_base.1121" = type { i8, %union.anon.1122 }
%union.anon.1122 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2651" = type { %"class.std::__1::__compressed_pair.2652" }
%"class.std::__1::__compressed_pair.2652" = type { %"struct.std::__1::__compressed_pair_elem.2653" }
%"struct.std::__1::__compressed_pair_elem.2653" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2658" = type { %"class.absl::optional_internal::optional_data.2659" }
%"class.absl::optional_internal::optional_data.2659" = type { %"class.absl::optional_internal::optional_data_base.2660" }
%"class.absl::optional_internal::optional_data_base.2660" = type { %"class.absl::optional_internal::optional_data_dtor_base.2661" }
%"class.absl::optional_internal::optional_data_dtor_base.2661" = type { i8, %union.anon.2662 }
%union.anon.2662 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2696", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2696" = type { %"class.std::__1::__vector_base.2697" }
%"class.std::__1::__vector_base.2697" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2705" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2698", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2698" = type { %"class.std::__1::__vector_base.2699" }
%"class.std::__1::__vector_base.2699" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2700" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1118" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2705" = type { %"struct.std::__1::__compressed_pair_elem.2706" }
%"struct.std::__1::__compressed_pair_elem.2706" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.1245", %"class.blink::Member.2792", %"class.absl::optional.2794", i64, i64, i32, %class.scoped_refptr.1320, %class.scoped_refptr.2787, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1320 }
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2794" = type { %"class.absl::optional_internal::optional_data.2795" }
%"class.absl::optional_internal::optional_data.2795" = type { %"class.absl::optional_internal::optional_data_base.2796" }
%"class.absl::optional_internal::optional_data_base.2796" = type { %"class.absl::optional_internal::optional_data_dtor_base.2797" }
%"class.absl::optional_internal::optional_data_dtor_base.2797" = type { i8, %union.anon.2798 }
%union.anon.2798 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.1320 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1322", i64, %"class.WTF::Vector.1326", %"class.WTF::Vector.1331", %"class.WTF::Vector.1337", %"class.WTF::Vector.1355", %class.scoped_refptr.1115, %"class.WTF::HashMap.1361", %"class.WTF::Vector.1366", %"class.WTF::Vector.1326", %"class.WTF::Vector.1372", %"class.WTF::HashMap.1377", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1321" }
%"class.base::RefCountedThreadSafe.1321" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333", [8 x i8] }
%"class.WTF::VectorBufferBase.1333" = type { %class.scoped_refptr.1334*, i32, i32 }
%class.scoped_refptr.1334 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1337" = type { %"class.WTF::VectorBuffer.1338" }
%"class.WTF::VectorBuffer.1338" = type { %"class.WTF::VectorBufferBase.1339" }
%"class.WTF::VectorBufferBase.1339" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1341", %"class.std::__1::unique_ptr.1347" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1340 }
%class.scoped_refptr.1340 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1355" = type { %"class.WTF::VectorBuffer.1356" }
%"class.WTF::VectorBuffer.1356" = type { %"class.WTF::VectorBufferBase.1357" }
%"class.WTF::VectorBufferBase.1357" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1358", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1358" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"struct.WTF::KeyValuePair.1365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1365" = type opaque
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.mojo::ScopedHandleBase.1369"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1369" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1326" = type { %"class.WTF::VectorBuffer.1327" }
%"class.WTF::VectorBuffer.1327" = type { %"class.WTF::VectorBufferBase.1328", [16 x i8] }
%"class.WTF::VectorBufferBase.1328" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1372" = type { %"class.WTF::VectorBuffer.1373" }
%"class.WTF::VectorBuffer.1373" = type { %"class.WTF::VectorBufferBase.1374" }
%"class.WTF::VectorBufferBase.1374" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.1377" = type { %"class.WTF::HashTable.1378" }
%"class.WTF::HashTable.1378" = type <{ %"struct.WTF::KeyValuePair.1381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1381" = type { i8**, %"class.std::__1::unique_ptr.3237" }
%"class.std::__1::unique_ptr.3237" = type { %"class.std::__1::__compressed_pair.3238" }
%"class.std::__1::__compressed_pair.3238" = type { %"struct.std::__1::__compressed_pair_elem.3239" }
%"struct.std::__1::__compressed_pair_elem.3239" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2799" = type { %"class.blink::MemberBase.2800" }
%"class.blink::MemberBase.2800" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2208", %class.scoped_refptr.2218, %class.scoped_refptr.2219, %"struct.blink::CacheControlHeader", %"class.absl::optional.413", %"class.absl::optional.2220", %"class.absl::optional.2220", %"class.absl::optional.2220", i64, %"class.blink::KURL", %"class.WTF::Vector.2225", %"class.WTF::String", %"class.WTF::Vector.1245", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.496", %"class.WTF::Vector.1245", %"class.blink::KURL", %"class.absl::optional.2230" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2160" }
%"class.WTF::HashMap.2160" = type { %"class.WTF::HashTable.2161" }
%"class.WTF::HashTable.2161" = type <{ %"struct.WTF::KeyValuePair.2164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2164" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2206", i8 }
%"struct.std::__1::array.2206" = type { [16 x i8] }
%"class.absl::optional.2208" = type { %"class.absl::optional_internal::optional_data.2209" }
%"class.absl::optional_internal::optional_data.2209" = type { %"class.absl::optional_internal::optional_data_base.2210" }
%"class.absl::optional_internal::optional_data_base.2210" = type { %"class.absl::optional_internal::optional_data_dtor_base.2211" }
%"class.absl::optional_internal::optional_data_dtor_base.2211" = type { i8, %union.anon.2212 }
%union.anon.2212 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1245", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1670", %"class.WTF::Vector.2213" }
%"class.WTF::Vector.1670" = type { %"class.WTF::VectorBuffer.1671" }
%"class.WTF::VectorBuffer.1671" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.2213" = type { %"class.WTF::VectorBuffer.2214" }
%"class.WTF::VectorBuffer.2214" = type { %"class.WTF::VectorBufferBase.2215" }
%"class.WTF::VectorBufferBase.2215" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2218 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2219 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.413", %"class.absl::optional.413" }
%"class.absl::optional.2220" = type { %"class.absl::optional_internal::optional_data.2221" }
%"class.absl::optional_internal::optional_data.2221" = type { %"class.absl::optional_internal::optional_data_base.2222" }
%"class.absl::optional_internal::optional_data_base.2222" = type { %"class.absl::optional_internal::optional_data_dtor_base.2223" }
%"class.absl::optional_internal::optional_data_dtor_base.2223" = type { i8, %union.anon.2224 }
%union.anon.2224 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2207" }
%"class.base::time_internal::TimeBase.2207" = type { i64 }
%"class.absl::optional.2230" = type { %"class.absl::optional_internal::optional_data.2231" }
%"class.absl::optional_internal::optional_data.2231" = type { %"class.absl::optional_internal::optional_data_base.2232" }
%"class.absl::optional_internal::optional_data_base.2232" = type { %"class.absl::optional_internal::optional_data_dtor_base.2233" }
%"class.absl::optional_internal::optional_data_dtor_base.2233" = type { i8, %union.anon.2234 }
%union.anon.2234 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2801" = type { %"class.mojo::internal::InterfacePtrState.2802" }
%"class.mojo::internal::InterfacePtrState.2802" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2803" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.286, %"class.std::__1::unique_ptr.408", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.292, i32 }>
%class.scoped_refptr.286 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.292, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.370", %"class.absl::optional.375", %"class.absl::optional.331", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.399", i8, [7 x i8], %class.scoped_refptr.292, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.292, %"class.std::__1::unique_ptr.320", %"class.absl::optional", %"struct.std::__1::atomic.170", i8, i8, i8, i8, i32, i32, %"class.absl::optional.331", %"class.std::__1::unique_ptr.336", i8, i64, %class.scoped_refptr.366, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.369" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.292, i8, %"class.mojo::ScopedHandleBase.323", %class.scoped_refptr.324, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.325" }
%"class.mojo::ScopedHandleBase.323" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.324 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.325" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.329 }
%union.anon.329 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.330", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.330" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.339", i8, i64, %class.scoped_refptr.340, %class.scoped_refptr.362 }
%"class.base::RepeatingCallback.339" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.340 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.341", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.351", i8, [7 x i8] }>
%"class.base::RefCounted.341" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.351" = type { %"class.std::__1::__tree.352" }
%"class.std::__1::__tree.352" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%class.scoped_refptr.362 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.366 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.369" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.370" = type { %"class.absl::optional_internal::optional_data.371" }
%"class.absl::optional_internal::optional_data.371" = type { %"class.absl::optional_internal::optional_data_base.372" }
%"class.absl::optional_internal::optional_data_base.372" = type { %"class.absl::optional_internal::optional_data_dtor_base.373" }
%"class.absl::optional_internal::optional_data_dtor_base.373" = type { i8, %union.anon.374 }
%union.anon.374 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.375" = type { %"class.absl::optional_internal::optional_data.376" }
%"class.absl::optional_internal::optional_data.376" = type { %"class.absl::optional_internal::optional_data_base.377" }
%"class.absl::optional_internal::optional_data_base.377" = type { %"class.absl::optional_internal::optional_data_dtor_base.378" }
%"class.absl::optional_internal::optional_data_dtor_base.378" = type { i8, [7 x i8], %union.anon.379 }
%union.anon.379 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, %union.anon.335 }
%union.anon.335 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.384 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.384 = type { %"class.std::__1::map.387" }
%"class.std::__1::map.387" = type { %"class.std::__1::__tree.388" }
%"class.std::__1::__tree.388" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.398"*, i64 }
%"class.std::__1::unique_ptr.398" = type opaque
%"class.std::__1::map.399" = type { %"class.std::__1::__tree.400" }
%"class.std::__1::__tree.400" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::unique_ptr.2803" = type { %"class.std::__1::__compressed_pair.2804" }
%"class.std::__1::__compressed_pair.2804" = type { %"struct.std::__1::__compressed_pair_elem.2805" }
%"struct.std::__1::__compressed_pair_elem.2805" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.1115 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.413", %"class.absl::optional.413", %"class.absl::optional.413", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2809", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.537" }
%"class.WTF::Vector.2809" = type { %"class.WTF::VectorBuffer.2810" }
%"class.WTF::VectorBuffer.2810" = type { %"class.WTF::VectorBufferBase.2811" }
%"class.WTF::VectorBufferBase.2811" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2814" = type { %"class.blink::MemberBase.2815" }
%"class.blink::MemberBase.2815" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2663" = type { %"class.std::__1::__compressed_pair.2664" }
%"class.std::__1::__compressed_pair.2664" = type { %"struct.std::__1::__compressed_pair_elem.2665" }
%"struct.std::__1::__compressed_pair_elem.2665" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.1154" }
%"class.base::flat_map.1154" = type { %"class.base::internal::flat_tree.1155" }
%"class.base::internal::flat_tree.1155" = type { %"class.std::__1::vector.1156" }
%"class.std::__1::vector.1156" = type { %"class.std::__1::__vector_base.1157" }
%"class.std::__1::__vector_base.1157" = type { %"struct.std::__1::pair.1158"*, %"struct.std::__1::pair.1158"*, %"class.std::__1::__compressed_pair.1159" }
%"struct.std::__1::pair.1158" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.std::__1::pair.1158"* }
%"class.WTF::Vector.2816" = type { %"class.WTF::VectorBuffer.2817" }
%"class.WTF::VectorBuffer.2817" = type { %"class.WTF::VectorBufferBase.2818" }
%"class.WTF::VectorBufferBase.2818" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2262 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2263", i64, %"class.WTF::Vector.2265", %"class.WTF::Vector.2270" }
%"class.WTF::RefCounted.2263" = type { %"class.base::RefCounted.2264" }
%"class.base::RefCounted.2264" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2265" = type { %"class.WTF::VectorBuffer.2266" }
%"class.WTF::VectorBuffer.2266" = type { %"class.WTF::VectorBufferBase.2267" }
%"class.WTF::VectorBufferBase.2267" = type { i8*, i32, i32 }
%"class.WTF::Vector.2270" = type { %"class.WTF::VectorBuffer.2271" }
%"class.WTF::VectorBuffer.2271" = type { %"class.WTF::VectorBufferBase.2272" }
%"class.WTF::VectorBufferBase.2272" = type { %"class.std::__1::unique_ptr.2273"*, i32, i32 }
%"class.std::__1::unique_ptr.2273" = type opaque
%class.scoped_refptr.2314 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2825", %"class.std::__1::unique_ptr.2830", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2825" = type { %"class.WTF::HashTable.2826" }
%"class.WTF::HashTable.2826" = type <{ %"struct.WTF::KeyValuePair.2829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2829" = type { %"class.WTF::Vector.3348", %class.scoped_refptr.3353 }
%class.scoped_refptr.3353 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3354", %"class.WTF::Vector.3356", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3354" = type { %"class.base::RefCounted.3355" }
%"class.base::RefCounted.3355" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3360", i64, %"class.absl::optional.3365" }
%"class.std::__1::unique_ptr.3360" = type { %"class.std::__1::__compressed_pair.3361" }
%"class.std::__1::__compressed_pair.3361" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"class.absl::optional.3365" = type { %"class.absl::optional_internal::optional_data.3366" }
%"class.absl::optional_internal::optional_data.3366" = type { %"class.absl::optional_internal::optional_data_base.3367" }
%"class.absl::optional_internal::optional_data_base.3367" = type { %"class.absl::optional_internal::optional_data_dtor_base.3368" }
%"class.absl::optional_internal::optional_data_dtor_base.3368" = type { i8, %union.anon.3369 }
%union.anon.3369 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3370", %"class.std::__1::unique_ptr.3371" }
%"class.mojo::ScopedHandleBase.3370" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3371" = type { %"class.std::__1::__compressed_pair.3372" }
%"class.std::__1::__compressed_pair.3372" = type { %"struct.std::__1::__compressed_pair_elem.3373" }
%"struct.std::__1::__compressed_pair_elem.3373" = type { i8* }
%"class.std::__1::unique_ptr.2830" = type { %"class.std::__1::__compressed_pair.2831" }
%"class.std::__1::__compressed_pair.2831" = type { %"struct.std::__1::__compressed_pair_elem.2832" }
%"struct.std::__1::__compressed_pair_elem.2832" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2836" = type { %"class.blink::MemberBase.2837" }
%"class.blink::MemberBase.2837" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.542" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2842" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2838", %"class.std::__1::bitset.2838", %"class.std::__1::bitset.2840" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2838" = type { %"class.std::__1::__bitset.2839" }
%"class.std::__1::__bitset.2839" = type { [11 x i64] }
%"class.std::__1::bitset.2840" = type { %"class.std::__1::__bitset.2841" }
%"class.std::__1::__bitset.2841" = type { [2 x i64] }
%"class.blink::HeapHashSet.2842" = type { %"class.WTF::HashSet.2845" }
%"class.WTF::HashSet.2845" = type { %"class.WTF::HashTable.2846" }
%"class.WTF::HashTable.2846" = type <{ %"class.blink::Member.2848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2848" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2849" = type { %"class.WTF::VectorBuffer.2850" }
%"class.WTF::VectorBuffer.2850" = type { %"class.WTF::VectorBufferBase.2851" }
%"class.WTF::VectorBufferBase.2851" = type { i32*, i32, i32 }
%"class.WTF::Vector.1245" = type { %"class.WTF::VectorBuffer.1246" }
%"class.WTF::VectorBuffer.1246" = type { %"class.WTF::VectorBufferBase.1247" }
%"class.WTF::VectorBufferBase.1247" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.2776" = type { %"class.std::__1::vector.2777" }
%"class.std::__1::vector.2777" = type { %"class.std::__1::__vector_base.2778" }
%"class.std::__1::__vector_base.2778" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2779" }
%"class.std::__1::__compressed_pair.2779" = type { %"struct.std::__1::__compressed_pair_elem.2780" }
%"struct.std::__1::__compressed_pair_elem.2780" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2854" = type { %"class.mojo::internal::InterfacePtrState.2855" }
%"class.mojo::internal::InterfacePtrState.2855" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2856" }
%"class.std::__1::unique_ptr.2856" = type { %"class.std::__1::__compressed_pair.2857" }
%"class.std::__1::__compressed_pair.2857" = type { %"struct.std::__1::__compressed_pair_elem.2858" }
%"struct.std::__1::__compressed_pair_elem.2858" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2352", %"class.blink::Member.479", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2357", i8, i32, %"class.blink::Color", %"class.absl::optional.2359", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2364", %"class.blink::Member.2366", %"class.blink::Member.2366", %"class.std::__1::unique_ptr.2369", i32, [4 x i8], %"class.WTF::HashSet.2372", %"class.blink::Member.2379", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2381", %"class.blink::HeapHashSet.2388", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2396", i8, %"class.blink::Member.2402", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2414", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2428", i8, %"class.std::__1::unique_ptr.2434", %"class.std::__1::unique_ptr.2551", %"class.WTF::Vector.2557", i32, %class.scoped_refptr.2562, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2563", %"class.blink::Member.2565", %"class.blink::Member.2567", %"class.blink::HeapHashSet.2569", %"class.blink::HeapHashSet.2576", %"class.std::__1::unique_ptr.2583", %"class.std::__1::unique_ptr.2589", %"class.WTF::Vector.1085" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2352" = type { %"class.WTF::HashTable.2353" }
%"class.WTF::HashTable.2353" = type <{ %class.scoped_refptr.2356*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2356 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2357" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2358", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1479, %"class.base::WeakPtrFactory.1480" }
%class.scoped_refptr.1479 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1480" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2358" = type { %"class.blink::MemberBase.556" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2359" = type { %"class.absl::optional_internal::optional_data.2360" }
%"class.absl::optional_internal::optional_data.2360" = type { %"class.absl::optional_internal::optional_data_base.2361" }
%"class.absl::optional_internal::optional_data_base.2361" = type { %"class.absl::optional_internal::optional_data_dtor_base.2362" }
%"class.absl::optional_internal::optional_data_dtor_base.2362" = type { i8, %union.anon.2363 }
%union.anon.2363 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::HeapHashSet.2368"* }
%"class.blink::HeapHashSet.2368" = type opaque
%"class.std::__1::unique_ptr.2369" = type { %"class.std::__1::__compressed_pair.2370" }
%"class.std::__1::__compressed_pair.2370" = type { %"struct.std::__1::__compressed_pair_elem.2371" }
%"struct.std::__1::__compressed_pair_elem.2371" = type { %"class.WTF::HashSet.2372"* }
%"class.WTF::HashSet.2372" = type { %"class.WTF::HashTable.2373" }
%"class.WTF::HashTable.2373" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2379" = type { %"class.blink::MemberBase.2380" }
%"class.blink::MemberBase.2380" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2381" = type { %"class.WTF::HashSet.2384" }
%"class.WTF::HashSet.2384" = type { %"class.WTF::HashTable.2385" }
%"class.WTF::HashTable.2385" = type <{ %"class.blink::Member.2387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2387" = type opaque
%"class.blink::HeapHashSet.2388" = type { %"class.WTF::HashSet.2391" }
%"class.WTF::HashSet.2391" = type { %"class.WTF::HashTable.2392" }
%"class.WTF::HashTable.2392" = type <{ %"class.blink::Member.2394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2618", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2629", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.557" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2620", %"class.blink::Member.2621", %"class.blink::Member.2623", %"class.blink::Member.2625", %"class.blink::Member.2627", %"class.WTF::Vector.1085", i16, %class.scoped_refptr.1479 }
%"class.blink::ThreadState::PrefinalizerRegistration.2620" = type { i8 }
%"class.blink::Member.2621" = type { %"class.blink::MemberBase.2622" }
%"class.blink::MemberBase.2622" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2623" = type { %"class.blink::MemberBase.2624" }
%"class.blink::MemberBase.2624" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2629" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2630", { i64, i64 } }
%"class.blink::WeakMember.2630" = type { %"class.blink::MemberBase.2395" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2396" = type { %"class.std::__1::__compressed_pair.2397" }
%"class.std::__1::__compressed_pair.2397" = type { %"struct.std::__1::__compressed_pair_elem.2398" }
%"struct.std::__1::__compressed_pair_elem.2398" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2406", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2406" = type { %"class.WTF::HashTable.2407" }
%"class.WTF::HashTable.2407" = type <{ %"struct.WTF::KeyValuePair.2409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2409" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2410", i32, i32 }
%"class.WTF::Vector.2410" = type { %"class.WTF::VectorBuffer.2411" }
%"class.WTF::VectorBuffer.2411" = type { %"class.WTF::VectorBufferBase.2412" }
%"class.WTF::VectorBufferBase.2412" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2414" = type { %"class.WTF::LinkedHashSet.2417" }
%"class.WTF::LinkedHashSet.2417" = type { %"class.WTF::HashMap.2418", %"class.WTF::VectorBackedLinkedList.2422" }
%"class.WTF::HashMap.2418" = type { %"class.WTF::HashTable.2419" }
%"class.WTF::HashTable.2419" = type <{ %"struct.WTF::KeyValuePair.2421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2421" = type opaque
%"class.WTF::VectorBackedLinkedList.2422" = type { %"class.WTF::Vector.2423", i32, i32 }
%"class.WTF::Vector.2423" = type { %"class.WTF::VectorBuffer.2424" }
%"class.WTF::VectorBuffer.2424" = type { %"class.WTF::VectorBufferBase.2425" }
%"class.WTF::VectorBufferBase.2425" = type { %"class.WTF::VectorBackedLinkedListNode.2426"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2426" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2428" = type { %"class.std::__1::__compressed_pair.2429" }
%"class.std::__1::__compressed_pair.2429" = type { %"struct.std::__1::__compressed_pair_elem.2430" }
%"struct.std::__1::__compressed_pair_elem.2430" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2434" = type { %"class.std::__1::__compressed_pair.2435" }
%"class.std::__1::__compressed_pair.2435" = type { %"struct.std::__1::__compressed_pair_elem.2436" }
%"struct.std::__1::__compressed_pair_elem.2436" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2437, %class.scoped_refptr.2437, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2528", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2533", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2437 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2438", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2445" }
%"class.WTF::RefCounted.2438" = type { %"class.base::RefCounted.2439" }
%"class.base::RefCounted.2439" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2440", i32, [4 x i8] }>
%"class.WTF::Vector.2440" = type { %"class.WTF::VectorBuffer.2441" }
%"class.WTF::VectorBuffer.2441" = type { %"class.WTF::VectorBufferBase.2442" }
%"class.WTF::VectorBufferBase.2442" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2445" = type { %"class.WTF::VectorBuffer.2446" }
%"class.WTF::VectorBuffer.2446" = type { %"class.WTF::VectorBufferBase.2447" }
%"class.WTF::VectorBufferBase.2447" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2451", %"class.std::__1::unique_ptr.2500", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2448, %class.scoped_refptr.2449, %class.scoped_refptr.2450 }
%class.scoped_refptr.2448 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2464", i8, i8, %class.scoped_refptr.2448, i32, i32 }
%"class.WTF::RefCounted.2464" = type { %"class.base::RefCounted.2465" }
%"class.base::RefCounted.2465" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2449 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2613" }
%"class.blink::PaintPropertyNode.2613" = type { %"class.WTF::RefCounted.2614", i8, i8, %class.scoped_refptr.2449, i32, i32 }
%"class.WTF::RefCounted.2614" = type { %"class.base::RefCounted.2615" }
%"class.base::RefCounted.2615" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2450 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2610" }
%"class.blink::PaintPropertyNode.2610" = type { %"class.WTF::RefCounted.2611", i8, i8, %class.scoped_refptr.2450, i32, i32 }
%"class.WTF::RefCounted.2611" = type { %"class.base::RefCounted.2612" }
%"class.base::RefCounted.2612" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2451" = type { %"class.std::__1::__compressed_pair.2452" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.2453" }
%"struct.std::__1::__compressed_pair_elem.2453" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2454", %"class.WTF::Vector.2459", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2454" = type { %"class.WTF::VectorBuffer.2455" }
%"class.WTF::VectorBuffer.2455" = type { %"class.WTF::VectorBufferBase.2456" }
%"class.WTF::VectorBufferBase.2456" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2459" = type { %"class.WTF::VectorBuffer.2460" }
%"class.WTF::VectorBuffer.2460" = type { %"class.WTF::VectorBufferBase.2461" }
%"class.WTF::VectorBufferBase.2461" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2479" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2472, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2473", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2466" }
%"class.std::__1::unique_ptr.2466" = type { %"class.std::__1::__compressed_pair.2467" }
%"class.std::__1::__compressed_pair.2467" = type { %"struct.std::__1::__compressed_pair_elem.2468" }
%"struct.std::__1::__compressed_pair_elem.2468" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2472 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2595", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2595" = type { %"class.WTF::RefCounted.2596", i8, i8, %class.scoped_refptr.2472, i32, i32 }
%"class.WTF::RefCounted.2596" = type { %"class.base::RefCounted.2597" }
%"class.base::RefCounted.2597" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2598" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2598" = type { %"class.absl::optional_internal::optional_data.2599" }
%"class.absl::optional_internal::optional_data.2599" = type { %"class.absl::optional_internal::optional_data_base.2600" }
%"class.absl::optional_internal::optional_data_base.2600" = type { %"class.absl::optional_internal::optional_data_dtor_base.2601" }
%"class.absl::optional_internal::optional_data_dtor_base.2601" = type { i8, %union.anon.2602 }
%union.anon.2602 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2603", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2603" = type { %"class.std::__1::__vector_base.2604" }
%"class.std::__1::__vector_base.2604" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2605" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2605" = type { %"struct.std::__1::__compressed_pair_elem.2606" }
%"struct.std::__1::__compressed_pair_elem.2606" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2473" = type { %"class.std::__1::__compressed_pair.2474" }
%"class.std::__1::__compressed_pair.2474" = type { %"struct.std::__1::__compressed_pair_elem.2475" }
%"struct.std::__1::__compressed_pair_elem.2475" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2479" = type { %"class.std::__1::__compressed_pair.2480" }
%"class.std::__1::__compressed_pair.2480" = type { %"struct.std::__1::__compressed_pair_elem.2481" }
%"struct.std::__1::__compressed_pair_elem.2481" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2482", %"class.std::__1::unique_ptr.2488", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2482" = type { %"class.std::__1::__compressed_pair.2483" }
%"class.std::__1::__compressed_pair.2483" = type { %"struct.std::__1::__compressed_pair_elem.2484" }
%"struct.std::__1::__compressed_pair_elem.2484" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2488" = type { %"class.std::__1::__compressed_pair.2489" }
%"class.std::__1::__compressed_pair.2489" = type { %"struct.std::__1::__compressed_pair_elem.2490" }
%"struct.std::__1::__compressed_pair_elem.2490" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2500" = type { %"class.std::__1::__compressed_pair.2501" }
%"class.std::__1::__compressed_pair.2501" = type { %"struct.std::__1::__compressed_pair_elem.2502" }
%"struct.std::__1::__compressed_pair_elem.2502" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2503", %"class.absl::optional.2503" }
%"class.absl::optional.2503" = type { %"class.absl::optional_internal::optional_data.2504" }
%"class.absl::optional_internal::optional_data.2504" = type { %"class.absl::optional_internal::optional_data_base.2505" }
%"class.absl::optional_internal::optional_data_base.2505" = type { %"class.absl::optional_internal::optional_data_dtor_base.2506" }
%"class.absl::optional_internal::optional_data_dtor_base.2506" = type { i8, [3 x i8], %union.anon.2507 }
%union.anon.2507 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2445"*, %"class.absl::optional.2513", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2513" = type { %"class.absl::optional_internal::optional_data.2514" }
%"class.absl::optional_internal::optional_data.2514" = type { %"class.absl::optional_internal::optional_data_base.2515" }
%"class.absl::optional_internal::optional_data_base.2515" = type { %"class.absl::optional_internal::optional_data_dtor_base.2516" }
%"class.absl::optional_internal::optional_data_dtor_base.2516" = type { i8, %union.anon.2517 }
%union.anon.2517 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2518", %"class.WTF::Vector.2523" }
%"class.WTF::Vector.2518" = type { %"class.WTF::VectorBuffer.2519" }
%"class.WTF::VectorBuffer.2519" = type { %"class.WTF::VectorBufferBase.2520", [128 x i8] }
%"class.WTF::VectorBufferBase.2520" = type { i32*, i32, i32 }
%"class.WTF::Vector.2523" = type { %"class.WTF::VectorBuffer.2524" }
%"class.WTF::VectorBuffer.2524" = type { %"class.WTF::VectorBufferBase.2525", [128 x i8] }
%"class.WTF::VectorBufferBase.2525" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2528" = type { %"class.WTF::VectorBuffer.2529" }
%"class.WTF::VectorBuffer.2529" = type { %"class.WTF::VectorBufferBase.2530" }
%"class.WTF::VectorBufferBase.2530" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2533" = type { %"class.WTF::HashTable.2534" }
%"class.WTF::HashTable.2534" = type <{ %"struct.WTF::KeyValuePair.2537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2537" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2538", %"class.WTF::Vector.2543" }
%"class.WTF::HashMap.2538" = type { %"class.WTF::HashTable.2539" }
%"class.WTF::HashTable.2539" = type <{ %"struct.WTF::KeyValuePair.2542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2542" = type opaque
%"class.WTF::Vector.2543" = type { %"class.WTF::VectorBuffer.2544" }
%"class.WTF::VectorBuffer.2544" = type { %"class.WTF::VectorBufferBase.2545" }
%"class.WTF::VectorBufferBase.2545" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2551" = type { %"class.std::__1::__compressed_pair.2552" }
%"class.std::__1::__compressed_pair.2552" = type { %"struct.std::__1::__compressed_pair_elem.2553" }
%"struct.std::__1::__compressed_pair_elem.2553" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2557" = type { %"class.WTF::VectorBuffer.2558" }
%"class.WTF::VectorBuffer.2558" = type { %"class.WTF::VectorBufferBase.2559" }
%"class.WTF::VectorBufferBase.2559" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2562 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2565" = type { %"class.blink::MemberBase.2566" }
%"class.blink::MemberBase.2566" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2567" = type { %"class.blink::MemberBase.2568" }
%"class.blink::MemberBase.2568" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2569" = type { %"class.WTF::HashSet.2572" }
%"class.WTF::HashSet.2572" = type { %"class.WTF::HashTable.2573" }
%"class.WTF::HashTable.2573" = type <{ %"class.blink::WeakMember.2575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2575" = type opaque
%"class.blink::HeapHashSet.2576" = type { %"class.WTF::HashSet.2579" }
%"class.WTF::HashSet.2579" = type { %"class.WTF::HashTable.2580" }
%"class.WTF::HashTable.2580" = type <{ %"class.blink::WeakMember.2582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2582" = type opaque
%"class.std::__1::unique_ptr.2583" = type { %"class.std::__1::__compressed_pair.2584" }
%"class.std::__1::__compressed_pair.2584" = type { %"struct.std::__1::__compressed_pair_elem.2585" }
%"struct.std::__1::__compressed_pair_elem.2585" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2589" = type { %"class.std::__1::__compressed_pair.2590" }
%"class.std::__1::__compressed_pair.2590" = type { %"struct.std::__1::__compressed_pair_elem.2591" }
%"struct.std::__1::__compressed_pair_elem.2591" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2220", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.570" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.559", %"class.blink::Member.559" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.559", %"class.blink::Member.561", %"class.blink::Member.559", %"class.blink::Member.559", %"class.blink::Member.563" }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.979", %"class.blink::Member.981", %"class.blink::Member.561", %"class.blink::Member.983", %"class.blink::Member.983", %"class.blink::Member.1005", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1014", %"class.blink::HeapVector.1016" }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1077", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1085", %"class.WTF::Vector.1085", i8, i32, %"class.blink::Member.1090", %"class.blink::Member.1167", %"class.blink::Member.1455", %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::Member.1461", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1463", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1469", %"class.blink::Member.1471", %"class.blink::Member.1022", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1473", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.998", %"class.blink::Member.557", %"class.blink::Member.1430", %"class.blink::Member.557", %"class.blink::Member.557", %"class.blink::Member.557", %"class.blink::UserActionElementSet", %"class.blink::Member.1489", double, double, i64, i64, %"class.blink::HeapHashSet.1491", %"class.blink::HeapHashSet.1498", i16, i8, %"class.blink::Member.1505", %"class.blink::Member.1507", %"class.blink::Member.1843", %"class.blink::Member.1845", %"class.blink::TextLinkColors", %"class.blink::Member.1847", i8, [7 x i8], %"class.blink::HeapHashMap.1849", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.557", %"class.WTF::Vector.1856", %"class.blink::Member.1861", %"class.blink::Member.1863", i8, %"class.blink::Member.557", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1865", %"class.blink::HeapVector.1867", %"class.std::__1::unique_ptr.1875", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1881", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1894", %"class.WTF::Vector.1896", i8, i8, %"class.std::__1::unique_ptr.1901", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.998", %"class.blink::HeapVector.1907", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1915", i8, i32, %"class.blink::Member.1917", %"class.blink::Member.1919", %"class.blink::Member.1921", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1923", %"class.WTF::HashMap.1925", %"class.blink::Member.1930", %"class.blink::Member.1932", %"class.blink::Member.1934", %"class.blink::Member.1936", %"class.blink::Member.981", %"class.blink::Member.981", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1938", i8, i32, %"class.blink::Member.1945", %"class.blink::Member.1947", i32, %"class.blink::Member.1949", %"class.blink::Member.1951", %"class.blink::Member.1953", %"class.std::__1::unique_ptr.1955", i64, %"class.std::__1::unique_ptr.1961", i32, i32, %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1973", %"class.WTF::Vector.1441", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1975", %"class.blink::Member.1982", %"class.std::__1::unique_ptr.1984", %"class.blink::Member.1990", i8, i8, %"class.WTF::String", %"class.blink::Member.1992", i8, [7 x i8], %"class.blink::HeapHashMap.1994", %"class.blink::HeapObserverSet.2001", %"class.blink::Member.2009", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2011", i32, i8, i8, %"class.blink::WeakMember.2013", %"class.blink::Member.2014" }
%"class.blink::Supplementable.1077" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1078" }
%"class.blink::HeapHashMap.1078" = type { %"class.WTF::HashMap.1081" }
%"class.WTF::HashMap.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1288", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1296", %"class.blink::Member.981", %"class.blink::Member.1298", i8, %"class.blink::Member.1300", %"class.blink::Member.1302", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1306", %"class.blink::Member.1308", %"class.blink::Member.1310", %"class.blink::Member.1312", %"class.blink::Member.1316", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1245", %"class.blink::Member.1318", %class.scoped_refptr.1320, %"class.blink::HeapHashSet.1382", %"class.blink::Member.1389", %"class.blink::HeapHashMap.1402", %"class.std::__1::unique_ptr.1409", %"class.blink::Member.1415", %"class.blink::Member.1434", %"class.blink::Member.1436", %"class.blink::Member.1438", %"class.WTF::Vector.1441", %"class.util::TokenType.284", %"class.WTF::HashSet.1446", %"class.WTF::Deque.1450" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1092", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1173", i32, i8, [3 x i8], %"class.blink::HeapVector.1193", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1213", %"class.blink::Member.1274", %"class.blink::Member.1276", i8 }>
%"class.blink::Supplementable.1092" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1093" }
%"class.blink::HeapHashMap.1093" = type { %"class.WTF::HashMap.1096" }
%"class.WTF::HashMap.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"struct.WTF::KeyValuePair.1099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1099" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1107" }
%"class.blink::Supplementable.1107" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1108" }
%"class.blink::HeapHashMap.1108" = type { %"class.WTF::HashMap.1111" }
%"class.WTF::HashMap.1111" = type { %"class.WTF::HashTable.1112" }
%"class.WTF::HashTable.1112" = type <{ %"struct.WTF::KeyValuePair.1114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1114" = type { i8*, %"class.blink::Member.3243" }
%"class.blink::Member.3243" = type { %"class.blink::MemberBase.3244" }
%"class.blink::MemberBase.3244" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3245" }
%"class.blink::Member.3245" = type { %"class.blink::MemberBase.3246" }
%"class.blink::MemberBase.3246" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1115, %"class.std::__1::unique_ptr.1124", %"class.std::__1::unique_ptr.1124", %"class.std::__1::unique_ptr.1151", %"class.std::__1::unique_ptr.1151", %"class.blink::Member.1167", i32, [4 x i8], %"class.WTF::HashSet.1169", i32, i32 }
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1127", %"class.std::__1::map.1138", %"class.std::__1::map.1147"* }
%"class.std::__1::map.1127" = type { %"class.std::__1::__tree.1128" }
%"class.std::__1::__tree.1128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1129", %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.1138" = type { %"class.std::__1::__tree.1139" }
%"class.std::__1::__tree.1139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1140", %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.1147" = type opaque
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.1154" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.WTF::HashSet.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type <{ i32 (...)**, %class.scoped_refptr.1177, %"class.base::UnguessableToken", i8, [7 x i8] }>
%class.scoped_refptr.1177 = type { %"class.blink::scheduler::EventLoop"* }
%"class.blink::scheduler::EventLoop" = type { %"class.WTF::RefCounted.1178", %"class.v8::Isolate"*, i8, %"class.WTF::Deque.1180", %"class.std::__1::unique_ptr.1183", %"class.WTF::HashSet.1189" }
%"class.WTF::RefCounted.1178" = type { %"class.base::RefCounted.1179" }
%"class.base::RefCounted.1179" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Deque.1180" = type { %"class.WTF::Deque<base::OnceCallback<void ()>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<base::OnceCallback<void ()>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1086" }
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.v8::MicrotaskQueue"* }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.WTF::HashSet.1189" = type { %"class.WTF::HashTable.1190" }
%"class.WTF::HashTable.1190" = type <{ %"class.blink::FrameOrWorkerScheduler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.1193" = type { %"class.WTF::Vector.1196" }
%"class.WTF::Vector.1196" = type { %"class.WTF::VectorBuffer.1197" }
%"class.WTF::VectorBuffer.1197" = type { %"class.WTF::VectorBufferBase.1198" }
%"class.WTF::VectorBufferBase.1198" = type { %"class.blink::Member.1199"*, i32, i32 }
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1206", i32, i32 }
%"class.blink::HeapHashMap.1206" = type { %"class.WTF::HashMap.1209" }
%"class.WTF::HashMap.1209" = type { %"class.WTF::HashTable.1210" }
%"class.WTF::HashTable.1210" = type <{ %"struct.WTF::KeyValuePair.1212"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1212" = type opaque
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1204", i8, [7 x i8], %"class.WTF::Vector.1220", %"class.blink::HeapVector.1280", i8, [7 x i8], %"class.WTF::HashSet.1169", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type opaque
%"class.blink::Supplementable.1288" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1289" }
%"class.blink::HeapHashMap.1289" = type { %"class.WTF::HashMap.1292" }
%"class.WTF::HashMap.1292" = type { %"class.WTF::HashTable.1293" }
%"class.WTF::HashTable.1293" = type <{ %"struct.WTF::KeyValuePair.1295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1295" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type { %"class.blink::Member.1090", %"class.blink::Member.2348" }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::LocalWindowProxyManager"* }
%"class.blink::LocalWindowProxyManager" = type { %"class.blink::WindowProxyManagerImplHelper" }
%"class.blink::WindowProxyManagerImplHelper" = type { %"class.blink::WindowProxyManager" }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member.260", i32, %"class.blink::Member.266", %"class.blink::HeapHashMap.270" }
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.260", %class.scoped_refptr, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%"class.blink::HeapHashMap.270" = type { %"class.WTF::HashMap.273" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%"class.blink::HeapHashSet.1382" = type { %"class.WTF::HashSet.1385" }
%"class.WTF::HashSet.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"class.blink::WeakMember.1388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1388" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1396", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::Member.1400", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1391" }
%"class.absl::optional.1391" = type { %"class.absl::optional_internal::optional_data.1392" }
%"class.absl::optional_internal::optional_data.1392" = type { %"class.absl::optional_internal::optional_data_base.1393" }
%"class.absl::optional_internal::optional_data_base.1393" = type { %"class.absl::optional_internal::optional_data_dtor_base.1394" }
%"class.absl::optional_internal::optional_data_dtor_base.1394" = type { i8, %union.anon.1395 }
%union.anon.1395 = type { i64 }
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::Event"* }
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1402" = type { %"class.WTF::HashMap.1405" }
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1408" = type opaque
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.479", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1430", %"class.blink::Member.1432", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1421", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1423", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1423" = type { %"class.WTF::HashMap.1426" }
%"class.WTF::HashMap.1426" = type { %"class.WTF::HashTable.1427" }
%"class.WTF::HashTable.1427" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.559", i32, i32 }
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1090", %"class.blink::Member.2342", %"class.blink::Member.2344" }
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1090", %"class.blink::HeapMojoRemote.2337" }
%"class.blink::HeapMojoRemote.2337" = type { %"class.blink::Member.2338" }
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::HeapHashMap.1440"* }
%"class.blink::HeapHashMap.1440" = type opaque
%"class.util::TokenType.284" = type { %"class.base::StrongAlias.285" }
%"class.base::StrongAlias.285" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1446" = type { %"class.WTF::HashTable.1447" }
%"class.WTF::HashTable.1447" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1450" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { i64*, i32, i32 }
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1092", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1173", i32, i8, [3 x i8], %"class.blink::HeapVector.1193", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1213", %"class.blink::Member.1274", %"class.blink::Member.1276", i8, [7 x i8] }>
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.2046", %"class.blink::Member.2047", %"class.blink::Member.2049", %"class.blink::Member.2053", %class.scoped_refptr.1479, %class.scoped_refptr.1479, %"class.blink::Member.2055", %"class.blink::Member.2057", %"class.blink::Member.2063", %"class.blink::Member.2067", %"class.blink::Member.2118", %"class.blink::HeapHashMap.2120", %"class.blink::HeapHashSet.2127", %"class.blink::HeapHashSet.2127", %"class.blink::HeapHashMap.2285", %"class.blink::HeapVector.2292", %"class.blink::Member.2300", %"class.blink::HeapTaskRunnerTimer.2302", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2304", %"class.WTF::Vector.2311", %"class.blink::HeapHashSet.2317", %"class.blink::HeapHashSet.2317", %"class.std::__1::unique_ptr.2323", %"class.base::WeakPtr.2112", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.2329", %"class.blink::Member.2332", i8, i8, %"class.base::WeakPtrFactory.2334" }
%"class.blink::ThreadState::PrefinalizerRegistration.2046" = type { i8 }
%"class.blink::Member.2047" = type { %"class.blink::MemberBase.2048" }
%"class.blink::MemberBase.2048" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.2049" = type { %"class.blink::MemberBase.2050" }
%"class.blink::MemberBase.2050" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.2053" = type { %"class.blink::MemberBase.2054" }
%"class.blink::MemberBase.2054" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.2057" = type { %"class.blink::MemberBase.2058" }
%"class.blink::MemberBase.2058" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.2061" }
%"class.blink::Member.2061" = type { %"class.blink::MemberBase.2062" }
%"class.blink::MemberBase.2062" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.2063" = type { %"class.blink::MemberBase.2064" }
%"class.blink::MemberBase.2064" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.2071", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.2073", %"class.WTF::HashSet.2078", i8, [3 x i8], i32, %"class.blink::HeapHashMap.2082", %"class.std::__1::map.2089", %"class.std::__1::map.2100", %"class.std::__1::unique_ptr.2109", %"class.blink::Member.2057", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.2116", %"class.mojo::InlinedStructPtr.896", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.2071" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.2073" = type { %"class.WTF::HashTable.2074" }
%"class.WTF::HashTable.2074" = type <{ %"struct.WTF::KeyValuePair.2077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2077" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.2078" = type { %"class.WTF::HashTable.2079" }
%"class.WTF::HashTable.2079" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.2082" = type { %"class.WTF::HashMap.2085" }
%"class.WTF::HashMap.2085" = type { %"class.WTF::HashTable.2086" }
%"class.WTF::HashTable.2086" = type <{ %"struct.WTF::KeyValuePair.2088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2088" = type opaque
%"class.std::__1::map.2089" = type { %"class.std::__1::__tree.2090" }
%"class.std::__1::__tree.2090" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2091", %"class.std::__1::__compressed_pair.2095" }
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.2095" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.2100" = type { %"class.std::__1::__tree.2101" }
%"class.std::__1::__tree.2101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2102", %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2102" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::unique_ptr.2109" = type { %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.2111" }
%"struct.std::__1::__compressed_pair_elem.2111" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.2112", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.blink::Member.2116" = type { %"class.blink::MemberBase.2117" }
%"class.blink::MemberBase.2117" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.896" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2118" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.2120" = type { %"class.WTF::HashMap.2123" }
%"class.WTF::HashMap.2123" = type { %"class.WTF::HashTable.2124" }
%"class.WTF::HashTable.2124" = type <{ %"struct.WTF::KeyValuePair.2126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2126" = type opaque
%"class.blink::HeapHashSet.2127" = type { %"class.WTF::HashSet.2130" }
%"class.WTF::HashSet.2130" = type { %"class.WTF::HashTable.2131" }
%"class.WTF::HashTable.2131" = type <{ %"class.blink::WeakMember.2133"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2137", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2157", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2243", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2260", %"class.blink::ResourceResponse", %class.scoped_refptr.2262, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2137" = type { %"class.absl::optional_internal::optional_data.2138" }
%"class.absl::optional_internal::optional_data.2138" = type { %"class.absl::optional_internal::optional_data_base.2139" }
%"class.absl::optional_internal::optional_data_base.2139" = type { %"class.absl::optional_internal::optional_data_dtor_base.2140" }
%"class.absl::optional_internal::optional_data_dtor_base.2140" = type { i8, %union.anon.2141 }
%union.anon.2141 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2142", i8, %"class.absl::optional.2147", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2142" = type { %"class.absl::optional_internal::optional_data.2143" }
%"class.absl::optional_internal::optional_data.2143" = type { %"class.absl::optional_internal::optional_data_base.2144" }
%"class.absl::optional_internal::optional_data_base.2144" = type { %"class.absl::optional_internal::optional_data_dtor_base.2145" }
%"class.absl::optional_internal::optional_data_dtor_base.2145" = type { i8, [7 x i8], %union.anon.2146 }
%union.anon.2146 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2147" = type { %"class.absl::optional_internal::optional_data.2148" }
%"class.absl::optional_internal::optional_data.2148" = type { %"class.absl::optional_internal::optional_data_base.2149" }
%"class.absl::optional_internal::optional_data_base.2149" = type { %"class.absl::optional_internal::optional_data_dtor_base.2150" }
%"class.absl::optional_internal::optional_data_dtor_base.2150" = type { i8, %union.anon.2151 }
%union.anon.2151 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2152", %"class.WTF::Vector.1245" }
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { i32*, i32, i32 }
%"class.WTF::Vector.2157" = type { %"class.WTF::VectorBuffer.2158" }
%"class.WTF::VectorBuffer.2158" = type { %"class.WTF::VectorBufferBase.2159" }
%"class.WTF::VectorBufferBase.2159" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2239" }
%"class.WTF::HashMap.2239" = type { %"class.WTF::HashTable.2240" }
%"class.WTF::HashTable.2240" = type <{ %"struct.WTF::KeyValuePair.2242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2242" = type <{ %"class.blink::WeakMember.3334", i32, [4 x i8] }>
%"class.blink::WeakMember.3334" = type { %"class.blink::MemberBase.3335" }
%"class.blink::MemberBase.3335" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.3336", [7 x i8], %"class.blink::Member.2298", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.3336" = type { i8 }
%"class.blink::Member.2298" = type { %"class.blink::MemberBase.2134" }
%"class.blink::HeapHashSet.2243" = type { %"class.WTF::HashSet.2246" }
%"class.WTF::HashSet.2246" = type { %"class.WTF::HashTable.2247" }
%"class.WTF::HashTable.2247" = type <{ %"class.blink::WeakMember.2249"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2249" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2250", %"class.WTF::String", %"class.WTF::HashSet.2251", i8, i8, %class.scoped_refptr.1476, %class.scoped_refptr.2256, %class.scoped_refptr.2258 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.2250" = type { i8 }
%"class.WTF::HashSet.2251" = type { %"class.WTF::HashTable.2252" }
%"class.WTF::HashTable.2252" = type <{ %"struct.std::__1::pair.2255"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2255" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1476 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.2256 = type { %"class.base::RefCountedData.2257"* }
%"class.base::RefCountedData.2257" = type opaque
%class.scoped_refptr.2258 = type { %"class.base::RefCountedData.2259"* }
%"class.base::RefCountedData.2259" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.1123, %class.scoped_refptr.1123, %class.scoped_refptr.1123, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2165, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2178", %"class.absl::optional.2183", %"class.absl::optional.2193", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.496", %"class.absl::optional.2193", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2193", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.496", %"class.absl::optional.2198", i8, %class.scoped_refptr.2204 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.2165 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2166", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.2167", %class.scoped_refptr.2176, i8, %"class.url::Origin" }
%"class.base::RefCounted.2166" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.2167" = type { %"class.std::__1::vector.2168" }
%"class.std::__1::vector.2168" = type { %"class.std::__1::__vector_base.2169" }
%"class.std::__1::__vector_base.2169" = type { %"class.std::__1::unique_ptr.2170"*, %"class.std::__1::unique_ptr.2170"*, %"class.std::__1::__compressed_pair.2171" }
%"class.std::__1::unique_ptr.2170" = type { %"class.std::__1::__compressed_pair.3320" }
%"class.std::__1::__compressed_pair.3320" = type { %"struct.std::__1::__compressed_pair_elem.3321" }
%"struct.std::__1::__compressed_pair_elem.3321" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2171" = type { %"struct.std::__1::__compressed_pair_elem.2172" }
%"struct.std::__1::__compressed_pair_elem.2172" = type { %"class.std::__1::unique_ptr.2170"* }
%class.scoped_refptr.2176 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2177", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2177" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2178" = type { %"class.absl::optional_internal::optional_data.2179" }
%"class.absl::optional_internal::optional_data.2179" = type { %"class.absl::optional_internal::optional_data_base.2180" }
%"class.absl::optional_internal::optional_data_base.2180" = type { %"class.absl::optional_internal::optional_data_dtor_base.2181" }
%"class.absl::optional_internal::optional_data_dtor_base.2181" = type { i8, %union.anon.2182 }
%union.anon.2182 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2183" = type { %"class.absl::optional_internal::optional_data.2184" }
%"class.absl::optional_internal::optional_data.2184" = type { %"class.absl::optional_internal::optional_data_base.2185" }
%"class.absl::optional_internal::optional_data_base.2185" = type { %"class.absl::optional_internal::optional_data_dtor_base.2186" }
%"class.absl::optional_internal::optional_data_dtor_base.2186" = type { i8, %union.anon.2187 }
%union.anon.2187 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2188", %"class.WTF::Vector.1245", %"class.WTF::String" }
%"class.WTF::Vector.2188" = type { %"class.WTF::VectorBuffer.2189" }
%"class.WTF::VectorBuffer.2189" = type { %"class.WTF::VectorBufferBase.2190" }
%"class.WTF::VectorBufferBase.2190" = type { %class.scoped_refptr.1123*, i32, i32 }
%"class.absl::optional.2193" = type { %"class.absl::optional_internal::optional_data.2194" }
%"class.absl::optional_internal::optional_data.2194" = type { %"class.absl::optional_internal::optional_data_base.2195" }
%"class.absl::optional_internal::optional_data_base.2195" = type { %"class.absl::optional_internal::optional_data_dtor_base.2196" }
%"class.absl::optional_internal::optional_data_dtor_base.2196" = type { i8, %union.anon.2197 }
%union.anon.2197 = type { %"class.WTF::String" }
%"class.absl::optional.2198" = type { %"class.absl::optional_internal::optional_data.2199" }
%"class.absl::optional_internal::optional_data.2199" = type { %"class.absl::optional_internal::optional_data_base.2200" }
%"class.absl::optional_internal::optional_data_base.2200" = type { %"class.absl::optional_internal::optional_data_dtor_base.2201" }
%"class.absl::optional_internal::optional_data_dtor_base.2201" = type { i8, %union.anon.2202 }
%union.anon.2202 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2203" }
%"class.mojo::PendingRemote.2203" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2204 = type { %"class.base::RefCountedData.2205"* }
%"class.base::RefCountedData.2205" = type { %"class.base::RefCountedThreadSafe.3325", %"class.base::internal::flat_tree.3326" }
%"class.base::RefCountedThreadSafe.3325" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3326" = type { %"class.std::__1::vector.3327" }
%"class.std::__1::vector.3327" = type { %"class.std::__1::__vector_base.3328" }
%"class.std::__1::__vector_base.3328" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3329" }
%"class.std::__1::__compressed_pair.3329" = type { %"struct.std::__1::__compressed_pair_elem.3330" }
%"struct.std::__1::__compressed_pair_elem.3330" = type { i32* }
%"class.blink::Member.2260" = type { %"class.blink::MemberBase.2261" }
%"class.blink::MemberBase.2261" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2276" }
%"class.std::__1::__tree.2276" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2277", %"class.std::__1::__compressed_pair.2281" }
%"class.std::__1::__compressed_pair.2277" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.2281" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.blink::HeapHashMap.2285" = type { %"class.WTF::HashMap.2288" }
%"class.WTF::HashMap.2288" = type { %"class.WTF::HashTable.2289" }
%"class.WTF::HashTable.2289" = type <{ %"struct.WTF::KeyValuePair.2291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2291" = type opaque
%"class.blink::HeapVector.2292" = type { %"class.WTF::Vector.2295" }
%"class.WTF::Vector.2295" = type { %"class.WTF::VectorBuffer.2296" }
%"class.WTF::VectorBuffer.2296" = type { %"class.WTF::VectorBufferBase.2297" }
%"class.WTF::VectorBufferBase.2297" = type { %"class.blink::Member.2298"*, i32, i32 }
%"class.blink::HeapTaskRunnerTimer.2302" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2303", { i64, i64 } }
%"class.blink::WeakMember.2303" = type { %"class.blink::MemberBase.1456" }
%"class.blink::HeapHashMap.2304" = type { %"class.WTF::HashMap.2307" }
%"class.WTF::HashMap.2307" = type { %"class.WTF::HashTable.2308" }
%"class.WTF::HashTable.2308" = type <{ %"struct.WTF::KeyValuePair.2310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2310" = type opaque
%"class.WTF::Vector.2311" = type { %"class.WTF::VectorBuffer.2312" }
%"class.WTF::VectorBuffer.2312" = type { %"class.WTF::VectorBufferBase.2313" }
%"class.WTF::VectorBufferBase.2313" = type { %class.scoped_refptr.2314*, i32, i32 }
%"class.blink::HeapHashSet.2317" = type { %"class.WTF::HashSet.2320" }
%"class.WTF::HashSet.2320" = type { %"class.WTF::HashTable.2321" }
%"class.WTF::HashTable.2321" = type <{ %"class.blink::Member.2260"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2323" = type { %"class.std::__1::__compressed_pair.2324" }
%"class.std::__1::__compressed_pair.2324" = type { %"struct.std::__1::__compressed_pair_elem.2325" }
%"struct.std::__1::__compressed_pair_elem.2325" = type { %"class.WTF::HashSet.551"* }
%"class.base::WeakPtr.2112" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.2329" = type { %"class.blink::Member.2330" }
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2334" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1024", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1026, %"class.WTF::Vector.1045", %"class.WTF::Vector.1045", %"class.blink::Member.559", %"class.blink::Member.1050", %"class.blink::HeapHashSet.1054", %"class.blink::Member.981", %"class.WTF::HashSet.1061", %"class.WTF::TextPosition", %"class.blink::Member.1065", %"class.blink::HeapVector.1067", %"class.blink::Member.1074" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1026 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.1027", %"class.WTF::Vector.1029" }
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1029" = type { %"class.WTF::VectorBuffer.1030" }
%"class.WTF::VectorBuffer.1030" = type { %"class.WTF::VectorBufferBase.1031" }
%"class.WTF::VectorBufferBase.1031" = type { %"class.std::__1::unique_ptr.1032"*, i32, i32 }
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.1035", %"class.WTF::String" }
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037" }
%"class.WTF::VectorBufferBase.1037" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1052" }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1054" = type { %"class.WTF::HashSet.1057" }
%"class.WTF::HashSet.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ %"class.blink::WeakMember.1060"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1060" = type { %"class.blink::MemberBase.562" }
%"class.WTF::HashSet.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1026, %"class.blink::Member.1022", %"class.blink::Member.1050" }
%"class.blink::HeapVector.1067" = type { %"class.WTF::Vector.1070" }
%"class.WTF::Vector.1070" = type { %"class.WTF::VectorBuffer.1071" }
%"class.WTF::VectorBuffer.1071" = type { %"class.WTF::VectorBufferBase.1072" }
%"class.WTF::VectorBufferBase.1072" = type { %"class.blink::Member.1050"*, i32, i32 }
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.WTF::Vector.1473" = type { %"class.WTF::VectorBuffer.1474" }
%"class.WTF::VectorBuffer.1474" = type { %"class.WTF::VectorBufferBase.1475" }
%"class.WTF::VectorBufferBase.1475" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1476 }
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.981", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.559", %"class.blink::Member.559", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1482" }
%"class.blink::HeapHashMap.1482" = type { %"class.WTF::HashMap.1485" }
%"class.WTF::HashMap.1485" = type { %"class.WTF::HashTable.1486" }
%"class.WTF::HashTable.1486" = type <{ %"struct.WTF::KeyValuePair.1488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1488" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1491" = type { %"class.WTF::HashSet.1494" }
%"class.WTF::HashSet.1494" = type { %"class.WTF::HashTable.1495" }
%"class.WTF::HashTable.1495" = type <{ %"class.blink::WeakMember.1497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1497" = type opaque
%"class.blink::HeapHashSet.1498" = type { %"class.WTF::HashSet.1501" }
%"class.WTF::HashSet.1501" = type { %"class.WTF::HashTable.1502" }
%"class.WTF::HashTable.1502" = type <{ %"class.blink::WeakMember.1504"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1504" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.981", i32, i32, i32, %"class.blink::Member.1022", %"class.blink::Member.1511", %"class.blink::Member.1542", %"class.blink::HeapHashMap.1544", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1551", %"class.blink::HeapHashSet.1551", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1557", %"class.blink::Member.1571", %"class.blink::Member.1601", %"class.blink::Member.1603", %"class.blink::Member.1609", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1775", %"class.blink::Member.1781", %"class.blink::HeapHashMap.1783", %"class.blink::HeapHashMap.1790", %"class.std::__1::unique_ptr.1797", i32, %"class.blink::HeapVector.1803", %"class.blink::HeapVector.1803", %"class.blink::HeapVector.1523", %"class.blink::HeapHashSet.1811", %"class.blink::HeapHashMap.1818", %"class.blink::Member.1825", %"class.blink::HeapHashMap.1827", %class.scoped_refptr.1834, %class.scoped_refptr.1835, %"class.blink::Member.1739", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1836", %"class.blink::Member.557" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.561", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1515", %"class.blink::HeapVector.1523", i8 }>
%"class.blink::HeapVector.1515" = type { %"class.WTF::Vector.1518" }
%"class.WTF::Vector.1518" = type { %"class.WTF::VectorBuffer.1519" }
%"class.WTF::VectorBuffer.1519" = type { %"class.WTF::VectorBufferBase.1520" }
%"class.WTF::VectorBufferBase.1520" = type { %"class.blink::Member.1521"*, i32, i32 }
%"class.blink::Member.1521" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet.1531" }
%"class.blink::HeapListHashSet.1531" = type { %"class.WTF::ListHashSet.base.1541", [7 x i8] }
%"class.WTF::ListHashSet.base.1541" = type <{ %"class.WTF::HashTable.1536", %"class.blink::Member.1538", %"class.blink::Member.1538", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1536" = type <{ %"class.blink::Member.1538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::HeapListHashSetNode.1540"* }
%"class.blink::HeapListHashSetNode.1540" = type { %"class.blink::Member.559", %"class.blink::Member.1538", %"class.blink::Member.1538" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1544" = type { %"class.WTF::HashMap.1547" }
%"class.WTF::HashMap.1547" = type { %"class.WTF::HashTable.1548" }
%"class.WTF::HashTable.1548" = type <{ %"struct.WTF::KeyValuePair.1550"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1550" = type opaque
%"class.blink::HeapHashSet.1551" = type { %"class.WTF::HashSet.1554" }
%"class.WTF::HashSet.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"class.blink::Member.561"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1561", %"class.blink::Member.1563" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1567", %"class.blink::Member.1569" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.2029", %"class.blink::Member.1563", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.2029" = type { %"class.WTF::Vector.2032" }
%"class.WTF::Vector.2032" = type { %"class.WTF::VectorBuffer.2033" }
%"class.WTF::VectorBuffer.2033" = type { %"class.WTF::VectorBufferBase.2034" }
%"class.WTF::VectorBufferBase.2034" = type { %"class.blink::Member.1569"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.2036, i32, %"class.absl::optional.2037", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.287" }>
%class.sk_sp.2036 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.2037" = type { %"class.absl::optional_internal::optional_data.2038" }
%"class.absl::optional_internal::optional_data.2038" = type { %"class.absl::optional_internal::optional_data_base.2039" }
%"class.absl::optional_internal::optional_data_base.2039" = type { %"class.absl::optional_internal::optional_data_dtor_base.2040" }
%"class.absl::optional_internal::optional_data_dtor_base.2040" = type { i8, %union.anon.2041 }
%union.anon.2041 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.981", %class.scoped_refptr.1582, %"class.blink::SelectorFilter", %"class.blink::Member.1542", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1575" }
%"class.blink::HeapHashMap.1575" = type { %"class.WTF::HashMap.1578" }
%"class.WTF::HashMap.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"struct.WTF::KeyValuePair.1581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1581" = type opaque
%class.scoped_refptr.1582 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1583", %"class.std::__1::unique_ptr.1595" }
%"class.blink::HeapVector.1583" = type { %"class.WTF::Vector.1586" }
%"class.WTF::Vector.1586" = type { %"class.WTF::VectorBuffer.1587" }
%"class.WTF::VectorBuffer.1587" = type { %"class.WTF::VectorBufferBase.1588" }
%"class.WTF::VectorBufferBase.1588" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.557", %"class.WTF::Vector.1589" }
%"class.WTF::Vector.1589" = type { %"class.WTF::VectorBuffer.1590" }
%"class.WTF::VectorBuffer.1590" = type { %"class.WTF::VectorBufferBase.1591", [16 x i8] }
%"class.WTF::VectorBufferBase.1591" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1595" = type { %"class.std::__1::__compressed_pair.1596" }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1607", i8, [7 x i8] }>
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1631", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1613", %"class.WTF::HashMap.1613", %"class.WTF::HashMap.1613", %"class.WTF::HashMap.1618", %class.scoped_refptr.1623, %class.scoped_refptr.1630, %class.scoped_refptr.1629, %"class.WTF::Vector.1045", %"class.WTF::Vector.1045", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1613" = type { %"class.WTF::HashTable.1614" }
%"class.WTF::HashTable.1614" = type <{ %"struct.WTF::KeyValuePair.1617"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1617" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3308 }
%class.scoped_refptr.3308 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1624", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1626", %"union.blink::InvalidationSet::Backing.1627", %"union.blink::InvalidationSet::Backing.1628", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1624" = type { %"class.base::RefCounted.1625" }
%"class.base::RefCounted.1625" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1626" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1627" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1628" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1618" = type { %"class.WTF::HashTable.1619" }
%"class.WTF::HashTable.1619" = type <{ %"struct.WTF::KeyValuePair.1622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1622" = type opaque
%class.scoped_refptr.1623 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1629, %class.scoped_refptr.1629 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1624", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1626", %"union.blink::InvalidationSet::Backing.1627", %"union.blink::InvalidationSet::Backing.1628", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1630 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1629 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1635", %"class.blink::HeapHashMap.1635", %"class.blink::HeapHashMap.1635", %"class.blink::HeapHashMap.1635", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::HeapVector.1642", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1682", %"class.blink::HeapVector.1690", %"class.blink::HeapVector.1698", %"class.blink::HeapVector.1715", %"class.blink::HeapVector.1723", %"class.blink::HeapVector.1731", %"class.blink::HeapVector.1744", %"class.WTF::Vector.1751", i32, %"class.blink::Member.1757" }
%"class.blink::HeapHashMap.1635" = type { %"class.WTF::HashMap.1638" }
%"class.WTF::HashMap.1638" = type { %"class.WTF::HashTable.1639" }
%"class.WTF::HashTable.1639" = type <{ %"struct.WTF::KeyValuePair.1641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1641" = type { %"class.WTF::AtomicString", %"class.blink::Member.3318" }
%"class.blink::Member.3318" = type { %"class.blink::MemberBase.3319" }
%"class.blink::MemberBase.3319" = type { %"class.blink::HeapVector.1642"* }
%"class.blink::HeapVector.1642" = type { %"class.WTF::Vector.1645" }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"class.blink::Member.1648"*, i32, i32 }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1652", i64, [4 x i32] }
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.576", %"class.blink::Member.1677" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1682" = type { %"class.WTF::Vector.1685" }
%"class.WTF::Vector.1685" = type { %"class.WTF::VectorBuffer.1686" }
%"class.WTF::VectorBuffer.1686" = type { %"class.WTF::VectorBufferBase.1687" }
%"class.WTF::VectorBufferBase.1687" = type { %"class.blink::Member.1688"*, i32, i32 }
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.3314" }
%"class.blink::MemberBase.3314" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.576", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1690" = type { %"class.WTF::Vector.1693" }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::Member.1696"*, i32, i32 }
%"class.blink::Member.1696" = type { %"class.blink::MemberBase.3315" }
%"class.blink::MemberBase.3315" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.576" }
%"class.blink::HeapVector.1698" = type { %"class.WTF::Vector.1701" }
%"class.WTF::Vector.1701" = type { %"class.WTF::VectorBuffer.1702" }
%"class.WTF::VectorBuffer.1702" = type { %"class.WTF::VectorBufferBase.1703" }
%"class.WTF::VectorBufferBase.1703" = type { %"class.blink::Member.1704"*, i32, i32 }
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1706", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1706" = type { %"class.WTF::Vector.1709" }
%"class.WTF::Vector.1709" = type { %"class.WTF::VectorBuffer.1710" }
%"class.WTF::VectorBuffer.1710" = type { %"class.WTF::VectorBufferBase.1711" }
%"class.WTF::VectorBufferBase.1711" = type { %"class.blink::Member.1712"*, i32, i32 }
%"class.blink::Member.1712" = type opaque
%"class.blink::HeapVector.1715" = type { %"class.WTF::Vector.1718" }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.blink::Member.1721"*, i32, i32 }
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.3316" }
%"class.blink::MemberBase.3316" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.576" }
%"class.blink::HeapVector.1723" = type { %"class.WTF::Vector.1726" }
%"class.WTF::Vector.1726" = type { %"class.WTF::VectorBuffer.1727" }
%"class.WTF::VectorBuffer.1727" = type { %"class.WTF::VectorBufferBase.1728" }
%"class.WTF::VectorBufferBase.1728" = type { %"class.blink::Member.1729"*, i32, i32 }
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.3317" }
%"class.blink::MemberBase.3317" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", i32, [4 x i8] }>
%"class.blink::HeapVector.1731" = type { %"class.WTF::Vector.1734" }
%"class.WTF::Vector.1734" = type { %"class.WTF::VectorBuffer.1735" }
%"class.WTF::VectorBuffer.1735" = type { %"class.WTF::VectorBufferBase.1736" }
%"class.WTF::VectorBufferBase.1736" = type { %"class.blink::Member.1737"*, i32, i32 }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739", %"class.blink::Member.1739" }
%"class.blink::HeapVector.1744" = type { %"class.WTF::Vector.1747" }
%"class.WTF::Vector.1747" = type { %"class.WTF::VectorBuffer.1748" }
%"class.WTF::VectorBuffer.1748" = type { %"class.WTF::VectorBufferBase.1749" }
%"class.WTF::VectorBufferBase.1749" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1652", i32, i32 }
%"class.WTF::Vector.1751" = type { %"class.WTF::VectorBuffer.1752" }
%"class.WTF::VectorBuffer.1752" = type { %"class.WTF::VectorBufferBase.1753" }
%"class.WTF::VectorBufferBase.1753" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1754, i8, [7 x i8] }>
%class.scoped_refptr.1754 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1761", %"class.blink::HeapHashMap.1761", %"class.blink::HeapHashMap.1761", %"class.blink::HeapHashMap.1761" }
%"class.blink::HeapHashMap.1761" = type { %"class.WTF::HashMap.1764" }
%"class.WTF::HashMap.1764" = type { %"class.WTF::HashTable.1765" }
%"class.WTF::HashTable.1765" = type <{ %"struct.WTF::KeyValuePair.1767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1767" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1768" }
%"class.blink::HeapHashMap.1768" = type { %"class.WTF::HashMap.1771" }
%"class.WTF::HashMap.1771" = type { %"class.WTF::HashTable.1772" }
%"class.WTF::HashTable.1772" = type <{ %"struct.WTF::KeyValuePair.1774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1774" = type { %"class.blink::Member.979", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3309", %"class.WTF::Vector.3309" }
%"class.WTF::Vector.3309" = type { %"class.WTF::VectorBuffer.3310" }
%"class.WTF::VectorBuffer.3310" = type { %"class.WTF::VectorBufferBase.3311" }
%"class.WTF::VectorBufferBase.3311" = type { %class.scoped_refptr.3308*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.559", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1775" = type { %"class.WTF::HashSet.1778" }
%"class.WTF::HashSet.1778" = type { %"class.WTF::HashTable.1779" }
%"class.WTF::HashTable.1779" = type <{ %"class.blink::Member.557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1783" = type { %"class.WTF::HashMap.1786" }
%"class.WTF::HashMap.1786" = type { %"class.WTF::HashTable.1787" }
%"class.WTF::HashTable.1787" = type <{ %"struct.WTF::KeyValuePair.1789"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1789" = type opaque
%"class.blink::HeapHashMap.1790" = type { %"class.WTF::HashMap.1793" }
%"class.WTF::HashMap.1793" = type { %"class.WTF::HashTable.1794" }
%"class.WTF::HashTable.1794" = type <{ %"struct.WTF::KeyValuePair.1796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1796" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1803" = type { %"class.WTF::Vector.1806" }
%"class.WTF::Vector.1806" = type { %"class.WTF::VectorBuffer.1807" }
%"class.WTF::VectorBuffer.1807" = type { %"class.WTF::VectorBufferBase.1808" }
%"class.WTF::VectorBufferBase.1808" = type { %"struct.std::__1::pair.1809"*, i32, i32 }
%"struct.std::__1::pair.1809" = type opaque
%"class.blink::HeapVector.1523" = type { %"class.WTF::Vector.1526" }
%"class.WTF::Vector.1526" = type { %"class.WTF::VectorBuffer.1527" }
%"class.WTF::VectorBuffer.1527" = type { %"class.WTF::VectorBufferBase.1528" }
%"class.WTF::VectorBufferBase.1528" = type { %"struct.std::__1::pair.1529"*, i32, i32 }
%"struct.std::__1::pair.1529" = type opaque
%"class.blink::HeapHashSet.1811" = type { %"class.WTF::HashSet.1814" }
%"class.WTF::HashSet.1814" = type { %"class.WTF::HashTable.1815" }
%"class.WTF::HashTable.1815" = type <{ %"class.blink::WeakMember.1817"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1817" = type { %"class.blink::MemberBase.1023" }
%"class.blink::HeapHashMap.1818" = type { %"class.WTF::HashMap.1821" }
%"class.WTF::HashMap.1821" = type { %"class.WTF::HashTable.1822" }
%"class.WTF::HashTable.1822" = type <{ %"struct.WTF::KeyValuePair.1824"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1824" = type { %"class.WTF::AtomicString", %"class.blink::Member.1704" }
%"class.blink::Member.1825" = type { %"class.blink::MemberBase.1826" }
%"class.blink::MemberBase.1826" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1827" = type { %"class.WTF::HashMap.1830" }
%"class.WTF::HashMap.1830" = type { %"class.WTF::HashTable.1831" }
%"class.WTF::HashTable.1831" = type <{ %"struct.WTF::KeyValuePair.1833"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1833" = type opaque
%class.scoped_refptr.1834 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1835 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1836" = type { %"class.WTF::HashSet.1839" }
%"class.WTF::HashSet.1839" = type { %"class.WTF::HashTable.1840" }
%"class.WTF::HashTable.1840" = type <{ %"class.blink::Member.1842"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1842" = type opaque
%"class.blink::Member.1843" = type { %"class.blink::MemberBase.1844" }
%"class.blink::MemberBase.1844" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.561", %"class.blink::HeapVector.1016" }
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1849" = type { %"class.WTF::HashMap.1852" }
%"class.WTF::HashMap.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %"struct.WTF::KeyValuePair.1855"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1855" = type opaque
%"class.WTF::Vector.1856" = type { %"class.WTF::VectorBuffer.1857" }
%"class.WTF::VectorBuffer.1857" = type { %"class.WTF::VectorBufferBase.1858" }
%"class.WTF::VectorBufferBase.1858" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1867" = type { %"class.WTF::Vector.1870" }
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"class.blink::Member.1873"*, i32, i32 }
%"class.blink::Member.1873" = type opaque
%"class.std::__1::unique_ptr.1875" = type { %"class.std::__1::__compressed_pair.1876" }
%"class.std::__1::__compressed_pair.1876" = type { %"struct.std::__1::__compressed_pair_elem.1877" }
%"struct.std::__1::__compressed_pair_elem.1877" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1881" = type { %"class.WTF::HashSet.1884" }
%"class.WTF::HashSet.1884" = type { %"class.WTF::HashTable.1885" }
%"class.WTF::HashTable.1885" = type <{ %"class.blink::WeakMember.1887"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1887" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1888", i32, [4 x i8] }>
%"class.WTF::Vector.1888" = type { %"class.WTF::VectorBuffer.1889" }
%"class.WTF::VectorBuffer.1889" = type { %"class.WTF::VectorBufferBase.1890" }
%"class.WTF::VectorBufferBase.1890" = type { %"struct.std::__1::pair.1891"*, i32, i32 }
%"struct.std::__1::pair.1891" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1896" = type { %"class.WTF::VectorBuffer.1897" }
%"class.WTF::VectorBuffer.1897" = type { %"class.WTF::VectorBufferBase.1898" }
%"class.WTF::VectorBufferBase.1898" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1901" = type { %"class.std::__1::__compressed_pair.1902" }
%"class.std::__1::__compressed_pair.1902" = type { %"struct.std::__1::__compressed_pair_elem.1903" }
%"struct.std::__1::__compressed_pair_elem.1903" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.998" = type { %"class.WTF::Vector.1001" }
%"class.WTF::Vector.1001" = type { %"class.WTF::VectorBuffer.1002" }
%"class.WTF::VectorBuffer.1002" = type { %"class.WTF::VectorBufferBase.1003" }
%"class.WTF::VectorBufferBase.1003" = type { %"class.blink::Member.557"*, i32, i32 }
%"class.blink::HeapVector.1907" = type { %"class.WTF::Vector.1910" }
%"class.WTF::Vector.1910" = type { %"class.WTF::VectorBuffer.1911" }
%"class.WTF::VectorBuffer.1911" = type { %"class.WTF::VectorBufferBase.1912" }
%"class.WTF::VectorBufferBase.1912" = type { %"class.blink::Member.1913"*, i32, i32 }
%"class.blink::Member.1913" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.981" }
%"class.blink::Member.1915" = type { %"class.blink::MemberBase.1916" }
%"class.blink::MemberBase.1916" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1925" = type { %"class.WTF::HashTable.1926" }
%"class.WTF::HashTable.1926" = type <{ %"struct.WTF::KeyValuePair.1929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1929" = type opaque
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1481", { i64, i64 } }
%"class.blink::WeakMember.1481" = type { %"class.blink::MemberBase.982" }
%"class.blink::HeapHashSet.1938" = type { %"class.WTF::HashSet.1941" }
%"class.WTF::HashSet.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %"class.blink::Member.1944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1944" = type opaque
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1955" = type { %"class.std::__1::__compressed_pair.1956" }
%"class.std::__1::__compressed_pair.1956" = type { %"struct.std::__1::__compressed_pair_elem.1957" }
%"struct.std::__1::__compressed_pair_elem.1957" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1961" = type { %"class.std::__1::__compressed_pair.1962" }
%"class.std::__1::__compressed_pair.1962" = type { %"struct.std::__1::__compressed_pair_elem.1963" }
%"struct.std::__1::__compressed_pair_elem.1963" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1441" = type { %"class.WTF::VectorBuffer.1442" }
%"class.WTF::VectorBuffer.1442" = type { %"class.WTF::VectorBufferBase.1443" }
%"class.WTF::VectorBufferBase.1443" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1975" = type { %"class.WTF::HashMap.1978" }
%"class.WTF::HashMap.1978" = type { %"class.WTF::HashTable.1979" }
%"class.WTF::HashTable.1979" = type <{ %"struct.WTF::KeyValuePair.1981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1981" = type opaque
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1984" = type { %"class.std::__1::__compressed_pair.1985" }
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"struct.std::__1::__compressed_pair_elem.1986" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1992" = type { %"class.blink::MemberBase.1993" }
%"class.blink::MemberBase.1993" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1994" = type { %"class.WTF::HashMap.1997" }
%"class.WTF::HashMap.1997" = type { %"class.WTF::HashTable.1998" }
%"class.WTF::HashTable.1998" = type <{ %"struct.WTF::KeyValuePair.2000"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2000" = type opaque
%"class.blink::HeapObserverSet.2001" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2002" }
%"class.blink::HeapHashSet.2002" = type { %"class.WTF::HashSet.2005" }
%"class.WTF::HashSet.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"class.blink::WeakMember.2008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2008" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.981", %"class.blink::HeapHashSet.2018", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2025", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2018" = type { %"class.WTF::HashSet.2021" }
%"class.WTF::HashSet.2021" = type { %"class.WTF::HashTable.2022" }
%"class.WTF::HashTable.2022" = type <{ %"class.blink::Member.2024"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2024" = type opaque
%"class.blink::HeapTaskRunnerTimer.2025" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2026", { i64, i64 } }
%"class.blink::WeakMember.2026" = type { %"class.blink::MemberBase.2012" }
%"class.blink::WeakMember.2013" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::Node"* }
%"class.blink::Member.2014" = type { %"class.blink::MemberBase.2015" }
%"class.blink::MemberBase.2015" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.987" }
%"class.blink::HeapHashMap.987" = type { %"class.WTF::HashMap.990" }
%"class.WTF::HashMap.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %"struct.WTF::KeyValuePair.993"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.993" = type { %"class.WTF::AtomicString", %"class.blink::Member.994" }
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.557", i32, %"class.blink::HeapVector.998" }
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1011" }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::HeapHashMap.1013"* }
%"class.blink::HeapHashMap.1013" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1016" = type { %"class.WTF::Vector.1019" }
%"class.WTF::Vector.1019" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { %"class.blink::Member.1022"*, i32, i32 }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.567 }
%class.scoped_refptr.567 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.568", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.568" = type { %"class.base::RefCounted.569" }
%"class.base::RefCounted.569" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.574", %"class.blink::Member.576", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.574" = type { %"class.WTF::SingleThreadedBitField.575" }
%"class.WTF::SingleThreadedBitField.575" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.580 }
%class.scoped_refptr.580 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.581", %"class.WTF::AtomicString", %"class.WTF::Vector.583" }
%"class.WTF::RefCounted.581" = type { %"class.base::RefCounted.582" }
%"class.base::RefCounted.582" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585", [32 x i8] }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.607", %"class.blink::HeapListHashSet.618", %"class.blink::HeapListHashSet.629", %"class.blink::HeapListHashSet.640", %"class.blink::HeapListHashSet.651", %"class.blink::HeapListHashSet.662", %"class.blink::HeapListHashSet.673", %"class.blink::HeapListHashSet.684", %"class.blink::HeapListHashSet.695", %"class.blink::HeapListHashSet.706", %"class.blink::HeapListHashSet.717", %"class.blink::HeapListHashSet.728", %"class.blink::HeapListHashSet.739", %"class.blink::HeapListHashSet.750", %"class.blink::HeapListHashSet.761", %"class.blink::HeapListHashSet.772", %"class.blink::HeapListHashSet.783", %"class.blink::HeapListHashSet.794", %"class.blink::HeapListHashSet.805" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.603", %"class.blink::Member.605", %"class.blink::Member.605", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.603" = type <{ %"class.blink::Member.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.819", %"class.blink::Member.605", %"class.blink::Member.605" }
%"class.blink::HeapListHashSet.607" = type { %"class.WTF::ListHashSet.base.617", [7 x i8] }
%"class.WTF::ListHashSet.base.617" = type <{ %"class.WTF::HashTable.612", %"class.blink::Member.614", %"class.blink::Member.614", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.612" = type <{ %"class.blink::Member.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::HeapListHashSetNode.616"* }
%"class.blink::HeapListHashSetNode.616" = type { %"class.blink::Member.975", %"class.blink::Member.614", %"class.blink::Member.614" }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.618" = type { %"class.WTF::ListHashSet.base.628", [7 x i8] }
%"class.WTF::ListHashSet.base.628" = type <{ %"class.WTF::HashTable.623", %"class.blink::Member.625", %"class.blink::Member.625", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.623" = type <{ %"class.blink::Member.625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::HeapListHashSetNode.627"* }
%"class.blink::HeapListHashSetNode.627" = type { %"class.blink::Member.971", %"class.blink::Member.625", %"class.blink::Member.625" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.629" = type { %"class.WTF::ListHashSet.base.639", [7 x i8] }
%"class.WTF::ListHashSet.base.639" = type <{ %"class.WTF::HashTable.634", %"class.blink::Member.636", %"class.blink::Member.636", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.634" = type <{ %"class.blink::Member.636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::HeapListHashSetNode.638"* }
%"class.blink::HeapListHashSetNode.638" = type { %"class.blink::Member.967", %"class.blink::Member.636", %"class.blink::Member.636" }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.640" = type { %"class.WTF::ListHashSet.base.650", [7 x i8] }
%"class.WTF::ListHashSet.base.650" = type <{ %"class.WTF::HashTable.645", %"class.blink::Member.647", %"class.blink::Member.647", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.645" = type <{ %"class.blink::Member.647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::HeapListHashSetNode.649"* }
%"class.blink::HeapListHashSetNode.649" = type { %"class.blink::Member.963", %"class.blink::Member.647", %"class.blink::Member.647" }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.651" = type { %"class.WTF::ListHashSet.base.661", [7 x i8] }
%"class.WTF::ListHashSet.base.661" = type <{ %"class.WTF::HashTable.656", %"class.blink::Member.658", %"class.blink::Member.658", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.656" = type <{ %"class.blink::Member.658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::HeapListHashSetNode.660"* }
%"class.blink::HeapListHashSetNode.660" = type { %"class.blink::Member.959", %"class.blink::Member.658", %"class.blink::Member.658" }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.662" = type { %"class.WTF::ListHashSet.base.672", [7 x i8] }
%"class.WTF::ListHashSet.base.672" = type <{ %"class.WTF::HashTable.667", %"class.blink::Member.669", %"class.blink::Member.669", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.667" = type <{ %"class.blink::Member.669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::HeapListHashSetNode.671"* }
%"class.blink::HeapListHashSetNode.671" = type { %"class.blink::Member.955", %"class.blink::Member.669", %"class.blink::Member.669" }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.673" = type { %"class.WTF::ListHashSet.base.683", [7 x i8] }
%"class.WTF::ListHashSet.base.683" = type <{ %"class.WTF::HashTable.678", %"class.blink::Member.680", %"class.blink::Member.680", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.678" = type <{ %"class.blink::Member.680"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::HeapListHashSetNode.682"* }
%"class.blink::HeapListHashSetNode.682" = type { %"class.blink::Member.951", %"class.blink::Member.680", %"class.blink::Member.680" }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.684" = type { %"class.WTF::ListHashSet.base.694", [7 x i8] }
%"class.WTF::ListHashSet.base.694" = type <{ %"class.WTF::HashTable.689", %"class.blink::Member.691", %"class.blink::Member.691", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.689" = type <{ %"class.blink::Member.691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::HeapListHashSetNode.693"* }
%"class.blink::HeapListHashSetNode.693" = type { %"class.blink::Member.947", %"class.blink::Member.691", %"class.blink::Member.691" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.695" = type { %"class.WTF::ListHashSet.base.705", [7 x i8] }
%"class.WTF::ListHashSet.base.705" = type <{ %"class.WTF::HashTable.700", %"class.blink::Member.702", %"class.blink::Member.702", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.700" = type <{ %"class.blink::Member.702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::HeapListHashSetNode.704"* }
%"class.blink::HeapListHashSetNode.704" = type { %"class.blink::Member.943", %"class.blink::Member.702", %"class.blink::Member.702" }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.706" = type { %"class.WTF::ListHashSet.base.716", [7 x i8] }
%"class.WTF::ListHashSet.base.716" = type <{ %"class.WTF::HashTable.711", %"class.blink::Member.713", %"class.blink::Member.713", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.711" = type <{ %"class.blink::Member.713"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::HeapListHashSetNode.715"* }
%"class.blink::HeapListHashSetNode.715" = type { %"class.blink::Member.823", %"class.blink::Member.713", %"class.blink::Member.713" }
%"class.blink::HeapListHashSet.717" = type { %"class.WTF::ListHashSet.base.727", [7 x i8] }
%"class.WTF::ListHashSet.base.727" = type <{ %"class.WTF::HashTable.722", %"class.blink::Member.724", %"class.blink::Member.724", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.722" = type <{ %"class.blink::Member.724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::HeapListHashSetNode.726"* }
%"class.blink::HeapListHashSetNode.726" = type { %"class.blink::Member.937", %"class.blink::Member.724", %"class.blink::Member.724" }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.728" = type { %"class.WTF::ListHashSet.base.738", [7 x i8] }
%"class.WTF::ListHashSet.base.738" = type <{ %"class.WTF::HashTable.733", %"class.blink::Member.735", %"class.blink::Member.735", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.733" = type <{ %"class.blink::Member.735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::HeapListHashSetNode.737"* }
%"class.blink::HeapListHashSetNode.737" = type { %"class.blink::Member.933", %"class.blink::Member.735", %"class.blink::Member.735" }
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.739" = type { %"class.WTF::ListHashSet.base.749", [7 x i8] }
%"class.WTF::ListHashSet.base.749" = type <{ %"class.WTF::HashTable.744", %"class.blink::Member.746", %"class.blink::Member.746", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.744" = type <{ %"class.blink::Member.746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::HeapListHashSetNode.748"* }
%"class.blink::HeapListHashSetNode.748" = type { %"class.blink::Member.929", %"class.blink::Member.746", %"class.blink::Member.746" }
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.750" = type { %"class.WTF::ListHashSet.base.760", [7 x i8] }
%"class.WTF::ListHashSet.base.760" = type <{ %"class.WTF::HashTable.755", %"class.blink::Member.757", %"class.blink::Member.757", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.755" = type <{ %"class.blink::Member.757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::HeapListHashSetNode.759"* }
%"class.blink::HeapListHashSetNode.759" = type { %"class.blink::Member.925", %"class.blink::Member.757", %"class.blink::Member.757" }
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.761" = type { %"class.WTF::ListHashSet.base.771", [7 x i8] }
%"class.WTF::ListHashSet.base.771" = type <{ %"class.WTF::HashTable.766", %"class.blink::Member.768", %"class.blink::Member.768", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.766" = type <{ %"class.blink::Member.768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::HeapListHashSetNode.770"* }
%"class.blink::HeapListHashSetNode.770" = type { %"class.blink::Member.921", %"class.blink::Member.768", %"class.blink::Member.768" }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.772" = type { %"class.WTF::ListHashSet.base.782", [7 x i8] }
%"class.WTF::ListHashSet.base.782" = type <{ %"class.WTF::HashTable.777", %"class.blink::Member.779", %"class.blink::Member.779", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.777" = type <{ %"class.blink::Member.779"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::HeapListHashSetNode.781"* }
%"class.blink::HeapListHashSetNode.781" = type { %"class.blink::Member.917", %"class.blink::Member.779", %"class.blink::Member.779" }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.783" = type { %"class.WTF::ListHashSet.base.793", [7 x i8] }
%"class.WTF::ListHashSet.base.793" = type <{ %"class.WTF::HashTable.788", %"class.blink::Member.790", %"class.blink::Member.790", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.788" = type <{ %"class.blink::Member.790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::HeapListHashSetNode.792"* }
%"class.blink::HeapListHashSetNode.792" = type { %"class.blink::Member.913", %"class.blink::Member.790", %"class.blink::Member.790" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.794" = type { %"class.WTF::ListHashSet.base.804", [7 x i8] }
%"class.WTF::ListHashSet.base.804" = type <{ %"class.WTF::HashTable.799", %"class.blink::Member.801", %"class.blink::Member.801", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.799" = type <{ %"class.blink::Member.801"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::HeapListHashSetNode.803"* }
%"class.blink::HeapListHashSetNode.803" = type { %"class.blink::Member.825", %"class.blink::Member.801", %"class.blink::Member.801" }
%"class.blink::HeapListHashSet.805" = type { %"class.WTF::ListHashSet.base.815", [7 x i8] }
%"class.WTF::ListHashSet.base.815" = type <{ %"class.WTF::HashTable.810", %"class.blink::Member.812", %"class.blink::Member.812", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.810" = type <{ %"class.blink::Member.812"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::HeapListHashSetNode.814"* }
%"class.blink::HeapListHashSetNode.814" = type { %"class.blink::Member.817", %"class.blink::Member.812", %"class.blink::Member.812" }
%class.scoped_refptr.816 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.833" }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3262" }
%"class.mojo::Remote.3262" = type { %"class.mojo::internal::InterfacePtrState.3263" }
%"class.mojo::internal::InterfacePtrState.3263" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3264" }
%"class.std::__1::unique_ptr.3264" = type { %"class.std::__1::__compressed_pair.3265" }
%"class.std::__1::__compressed_pair.3265" = type { %"struct.std::__1::__compressed_pair_elem.3266" }
%"struct.std::__1::__compressed_pair_elem.3266" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.838, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.838 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.839", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.847, i8, [7 x i8] }>
%class.scoped_refptr.847 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.848", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.848" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.849" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.856" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.869" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3272" }
%"class.mojo::AssociatedRemote.3272" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3273" }
%"class.mojo::internal::AssociatedInterfacePtrState.3273" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3274" }
%"class.std::__1::unique_ptr.3274" = type { %"class.std::__1::__compressed_pair.3275" }
%"class.std::__1::__compressed_pair.3275" = type { %"struct.std::__1::__compressed_pair_elem.3276" }
%"struct.std::__1::__compressed_pair_elem.3276" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.871" = type { %"class.blink::Member.872" }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3282" }
%"class.mojo::AssociatedRemote.3282" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3283" }
%"class.mojo::internal::AssociatedInterfacePtrState.3283" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3284" }
%"class.std::__1::unique_ptr.3284" = type { %"class.std::__1::__compressed_pair.3285" }
%"class.std::__1::__compressed_pair.3285" = type { %"struct.std::__1::__compressed_pair_elem.3286" }
%"struct.std::__1::__compressed_pair_elem.3286" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.874" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3292", %"class.blink::Member.479", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3292" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3293" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.408" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3293" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.876" = type { %"class.blink::Member.877" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3296", %"class.blink::Member.479", %"class.mojo::AssociatedReceiver.3297" }
%"class.blink::ThreadState::PrefinalizerRegistration.3296" = type { i8 }
%"class.mojo::AssociatedReceiver.3297" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3298" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3298" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.879" }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3301", %"class.blink::Member.479", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3301" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.286, %"class.std::__1::unique_ptr.408", %"class.base::WeakPtrFactory.3302" }
%"class.base::WeakPtrFactory.3302" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.881" = type { %"class.blink::Member.882" }
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3305", %"class.blink::Member.479", %"class.mojo::AssociatedReceiver.3306" }
%"class.blink::ThreadState::PrefinalizerRegistration.3305" = type { i8 }
%"class.mojo::AssociatedReceiver.3306" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3307" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3307" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::HeapHashMap.892"* }
%"class.blink::HeapHashMap.892" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.893" }
%"class.std::__1::unique_ptr.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.896" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.902" = type { %"class.absl::optional_internal::optional_data.903" }
%"class.absl::optional_internal::optional_data.903" = type { %"class.absl::optional_internal::optional_data_base.904" }
%"class.absl::optional_internal::optional_data_base.904" = type { %"class.absl::optional_internal::optional_data_dtor_base.905" }
%"class.absl::optional_internal::optional_data_dtor_base.905" = type { i8, %union.anon.906 }
%union.anon.906 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.260", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.481" }
%"class.std::__1::vector.481" = type { %"class.std::__1::__vector_base.482" }
%"class.std::__1::__vector_base.482" = type { %"struct.std::__1::pair.483"*, %"struct.std::__1::pair.483"*, %"class.std::__1::__compressed_pair.484" }
%"struct.std::__1::pair.483" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.std::__1::pair.483"* }
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.491" = type { %"class.absl::optional_internal::optional_data.492" }
%"class.absl::optional_internal::optional_data.492" = type { %"class.absl::optional_internal::optional_data_base.493" }
%"class.absl::optional_internal::optional_data_base.493" = type { %"class.absl::optional_internal::optional_data_dtor_base.494" }
%"class.absl::optional_internal::optional_data_dtor_base.494" = type { i8, %union.anon.495 }
%union.anon.495 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.496" = type { %"class.absl::optional_internal::optional_data.497" }
%"class.absl::optional_internal::optional_data.497" = type { %"class.absl::optional_internal::optional_data_base.498" }
%"class.absl::optional_internal::optional_data_base.498" = type { %"class.absl::optional_internal::optional_data_dtor_base.499" }
%"class.absl::optional_internal::optional_data_dtor_base.499" = type { i8, %union.anon.500 }
%union.anon.500 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.501 }
%class.scoped_refptr.501 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"class.blink::WeakMember.506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.506" = type opaque
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.284", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.458" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::optional.2862" = type { %"class.absl::optional_internal::optional_data.2863" }
%"class.absl::optional_internal::optional_data.2863" = type { %"class.absl::optional_internal::optional_data_base.2864" }
%"class.absl::optional_internal::optional_data_base.2864" = type { %"class.absl::optional_internal::optional_data_dtor_base.2865" }
%"class.absl::optional_internal::optional_data_dtor_base.2865" = type { i8, %union.anon.2866 }
%union.anon.2866 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.2913", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.2928", %"class.blink::Member.2946", %"class.blink::Member.2948", %"class.blink::Member.2959", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.2961", i32, %"class.blink::Member.2968", %"class.std::__1::unique_ptr.1961", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.2989", %"class.absl::optional.2993", i32, %"class.std::__1::unique_ptr.1955", %"class.std::__1::unique_ptr.2999", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.2882", %"class.blink::Member.1455", %"class.blink::HeapHashSet.2888", %class.scoped_refptr.2894, %"class.blink::Member.2799", %"class.blink::Member.2896", i32, %"class.WTF::Vector.1220", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.1312" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.2867" }
%"class.blink::PersistentBase.2867" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.2870" }
%"class.blink::Supplementable.2870" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2871" }
%"class.blink::HeapHashMap.2871" = type { %"class.WTF::HashMap.2874" }
%"class.WTF::HashMap.2874" = type { %"class.WTF::HashTable.2875" }
%"class.WTF::HashTable.2875" = type <{ %"struct.WTF::KeyValuePair.2877"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2877" = type { i8*, %"class.blink::Member.3337" }
%"class.blink::Member.3337" = type { %"class.blink::MemberBase.3338" }
%"class.blink::MemberBase.3338" = type { %"class.blink::Supplement.3339"* }
%"class.blink::Supplement.3339" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3340" }
%"class.blink::Member.3340" = type { %"class.blink::MemberBase.3341" }
%"class.blink::MemberBase.3341" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.2878" }
%"struct.std::__1::atomic.2878" = type { %"struct.std::__1::__atomic_base.2879" }
%"struct.std::__1::__atomic_base.2879" = type { %"struct.std::__1::__cxx_atomic_impl.2880" }
%"struct.std::__1::__cxx_atomic_impl.2880" = type { %"struct.std::__1::__cxx_atomic_base_impl.2881" }
%"struct.std::__1::__cxx_atomic_base_impl.2881" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2882" = type { %"class.std::__1::__compressed_pair.2883" }
%"class.std::__1::__compressed_pair.2883" = type { %"struct.std::__1::__compressed_pair_elem.2884" }
%"struct.std::__1::__compressed_pair_elem.2884" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.2888" = type { %"class.WTF::HashSet.2891" }
%"class.WTF::HashSet.2891" = type { %"class.WTF::HashTable.2892" }
%"class.WTF::HashTable.2892" = type <{ %"class.blink::WeakMember.2303"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2894 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.2895", [4 x i8] }>
%"class.base::RefCounted.2895" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.2896" = type { %"class.blink::MemberBase.2897" }
%"class.blink::MemberBase.2897" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type { i32 (...)**, %"class.blink::Member.2900", %"class.v8::Isolate"*, %"class.blink::Member.238", %class.scoped_refptr, %"class.WTF::String", i8, i8, %class.scoped_refptr.2902 }
%"class.blink::Member.2900" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::WorkerOrWorkletGlobalScope"* }
%class.scoped_refptr.2902 = type { %"class.blink::RejectedPromises"* }
%"class.blink::RejectedPromises" = type { %"class.WTF::RefCounted.2903", %"class.WTF::Vector.2905", %"class.WTF::Vector.2905" }
%"class.WTF::RefCounted.2903" = type { %"class.base::RefCounted.2904" }
%"class.base::RefCounted.2904" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2905" = type { %"class.WTF::VectorBuffer.2906" }
%"class.WTF::VectorBuffer.2906" = type { %"class.WTF::VectorBufferBase.2907" }
%"class.WTF::VectorBufferBase.2907" = type { %"class.std::__1::unique_ptr.2908"*, i32, i32 }
%"class.std::__1::unique_ptr.2908" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2911", i32, [4 x i8] }>
%"class.std::__1::bitset.2911" = type { %"class.std::__1::__bitset.2912" }
%"class.std::__1::__bitset.2912" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable.2913" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2914" }
%"class.blink::HeapHashMap.2914" = type { %"class.WTF::HashMap.2917" }
%"class.WTF::HashMap.2917" = type { %"class.WTF::HashTable.2918" }
%"class.WTF::HashTable.2918" = type <{ %"struct.WTF::KeyValuePair.2920"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2920" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2921", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2921" = type { %"class.std::__1::__vector_base.2922" }
%"class.std::__1::__vector_base.2922" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2923" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2923" = type { %"struct.std::__1::__compressed_pair_elem.2924" }
%"struct.std::__1::__compressed_pair_elem.2924" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.2928" = type { %"class.std::__1::__compressed_pair.2929" }
%"class.std::__1::__compressed_pair.2929" = type { %"struct.std::__1::__compressed_pair_elem.2930" }
%"struct.std::__1::__compressed_pair_elem.2930" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2931", %"class.WTF::HashMap.2931", %"class.WTF::HashMap.2931", %"class.WTF::HashMap.2931", %"class.WTF::HashMap.2931", %"class.WTF::HashMap.2931", %"class.WTF::HashMap.2931", %"class.std::__1::unique_ptr.2936" }
%"class.WTF::HashMap.2931" = type { %"class.WTF::HashTable.2932" }
%"class.WTF::HashTable.2932" = type <{ %"struct.WTF::KeyValuePair.2935"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2935" = type opaque
%"class.std::__1::unique_ptr.2936" = type { %"class.std::__1::__compressed_pair.2937" }
%"class.std::__1::__compressed_pair.2937" = type { %"struct.std::__1::__compressed_pair_elem.2938" }
%"struct.std::__1::__compressed_pair_elem.2938" = type { %"class.WTF::Vector.2939"* }
%"class.WTF::Vector.2939" = type opaque
%"class.blink::Member.2946" = type { %"class.blink::MemberBase.2947" }
%"class.blink::MemberBase.2947" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.2948" = type { %"class.blink::MemberBase.2949" }
%"class.blink::MemberBase.2949" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.2951" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2950", %"class.WTF::Vector.1245", i8 }>
%"class.blink::WeakMember.2950" = type { %"class.blink::MemberBase.1168" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2950" }
%"class.blink::Supplementable.2951" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2952" }
%"class.blink::HeapHashMap.2952" = type { %"class.WTF::HashMap.2955" }
%"class.WTF::HashMap.2955" = type { %"class.WTF::HashTable.2956" }
%"class.WTF::HashTable.2956" = type <{ %"struct.WTF::KeyValuePair.2958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2958" = type { i8*, %"class.blink::Member.3343" }
%"class.blink::Member.3343" = type { %"class.blink::MemberBase.3344" }
%"class.blink::MemberBase.3344" = type { %"class.blink::Supplement.3345"* }
%"class.blink::Supplement.3345" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3346" }
%"class.blink::Member.3346" = type { %"class.blink::MemberBase.3347" }
%"class.blink::MemberBase.3347" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.2959" = type { %"class.blink::MemberBase.2960" }
%"class.blink::MemberBase.2960" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.2961" = type { %"class.WTF::HashMap.2964" }
%"class.WTF::HashMap.2964" = type { %"class.WTF::HashTable.2965" }
%"class.WTF::HashTable.2965" = type <{ %"struct.WTF::KeyValuePair.2967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2967" = type opaque
%"class.blink::Member.2968" = type { %"class.blink::MemberBase.2969" }
%"class.blink::MemberBase.2969" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2970", %"class.std::__1::map.2978" }
%"class.mojo::Remote.2970" = type { %"class.mojo::internal::InterfacePtrState.2971" }
%"class.mojo::internal::InterfacePtrState.2971" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2972" }
%"class.std::__1::unique_ptr.2972" = type { %"class.std::__1::__compressed_pair.2973" }
%"class.std::__1::__compressed_pair.2973" = type { %"struct.std::__1::__compressed_pair_elem.2974" }
%"struct.std::__1::__compressed_pair_elem.2974" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2978" = type { %"class.std::__1::__tree.2979" }
%"class.std::__1::__tree.2979" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2980", %"class.std::__1::__compressed_pair.2984" }
%"class.std::__1::__compressed_pair.2980" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"class.std::__1::__compressed_pair.2984" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.blink::Member.2989" = type { %"class.blink::MemberBase.2990" }
%"class.blink::MemberBase.2990" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.2251", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.2250", [6 x i8] }>
%"class.absl::optional.2993" = type { %"class.absl::optional_internal::optional_data.2994" }
%"class.absl::optional_internal::optional_data.2994" = type { %"class.absl::optional_internal::optional_data_base.2995" }
%"class.absl::optional_internal::optional_data_base.2995" = type { %"class.absl::optional_internal::optional_data_dtor_base.2996" }
%"class.absl::optional_internal::optional_data_dtor_base.2996" = type { i8, [7 x i8], %union.anon.2997 }
%union.anon.2997 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.2998", i8, [7 x i8] }>
%"struct.std::__1::pair.2998" = type { i64, i64 }
%"class.std::__1::unique_ptr.2999" = type { %"class.std::__1::__compressed_pair.3000" }
%"class.std::__1::__compressed_pair.3000" = type { %"struct.std::__1::__compressed_pair_elem.3001" }
%"struct.std::__1::__compressed_pair_elem.3001" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.3002", %"class.mojo::ScopedHandleBase.3189", %"class.mojo::StructPtr.3190", %"class.std::__1::vector.3198", %"class.std::__1::vector.3205" }
%"class.mojo::StructPtr.3002" = type { %"class.std::__1::unique_ptr.3003" }
%"class.std::__1::unique_ptr.3003" = type { %"class.std::__1::__compressed_pair.3004" }
%"class.std::__1::__compressed_pair.3004" = type { %"struct.std::__1::__compressed_pair_elem.3005" }
%"struct.std::__1::__compressed_pair_elem.3005" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.3006, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.3021", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.3037", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.3043", %"class.std::__1::vector.3050", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.2230", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.3085", %"class.absl::optional.3175", %"class.absl::optional.496", %"class.std::__1::vector.3050", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.3006 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.3007", %"class.std::__1::vector.3008", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.3007" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.3008" = type { %"class.std::__1::__vector_base.3009" }
%"class.std::__1::__vector_base.3009" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.3010" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.3010" = type { %"struct.std::__1::__compressed_pair_elem.3011" }
%"struct.std::__1::__compressed_pair_elem.3011" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.3021" = type { %"class.std::__1::unique_ptr.3022" }
%"class.std::__1::unique_ptr.3022" = type { %"class.std::__1::__compressed_pair.3023" }
%"class.std::__1::__compressed_pair.3023" = type { %"struct.std::__1::__compressed_pair_elem.3024" }
%"struct.std::__1::__compressed_pair_elem.3024" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.3025", %"class.std::__1::vector.3025", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.3025" = type { %"class.std::__1::__vector_base.3026" }
%"class.std::__1::__vector_base.3026" = type { %"class.mojo::InlinedStructPtr.3027"*, %"class.mojo::InlinedStructPtr.3027"*, %"class.std::__1::__compressed_pair.3029" }
%"class.mojo::InlinedStructPtr.3027" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3029" = type { %"struct.std::__1::__compressed_pair_elem.3030" }
%"struct.std::__1::__compressed_pair_elem.3030" = type { %"class.mojo::InlinedStructPtr.3027"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.3037" = type { %"class.std::__1::__vector_base.3038" }
%"class.std::__1::__vector_base.3038" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.3039" }
%"class.std::__1::__compressed_pair.3039" = type { %"struct.std::__1::__compressed_pair_elem.3017" }
%"struct.std::__1::__compressed_pair_elem.3017" = type { %class.GURL* }
%"class.absl::optional.3043" = type { %"class.absl::optional_internal::optional_data.3044" }
%"class.absl::optional_internal::optional_data.3044" = type { %"class.absl::optional_internal::optional_data_base.3045" }
%"class.absl::optional_internal::optional_data_base.3045" = type { %"class.absl::optional_internal::optional_data_dtor_base.3046" }
%"class.absl::optional_internal::optional_data_dtor_base.3046" = type { i8, [7 x i8], %union.anon.3047 }
%union.anon.3047 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.3048, %class.scoped_refptr.3048, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.3068", %"class.std::__1::basic_string", %"class.std::__1::vector.3076", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.3048 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.3049", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.3057", %"class.std::__1::vector.3061" }
%"class.base::RefCountedThreadSafe.3049" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.3050", %"class.std::__1::vector.3050", %"class.std::__1::vector.3050", %"class.std::__1::vector.3050" }
%"class.std::__1::unique_ptr.3057" = type { %"class.std::__1::__compressed_pair.3058" }
%"class.std::__1::__compressed_pair.3058" = type { %"struct.std::__1::__compressed_pair_elem.3059" }
%"struct.std::__1::__compressed_pair_elem.3059" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.3061" = type { %"class.std::__1::__vector_base.3062" }
%"class.std::__1::__vector_base.3062" = type { %"class.std::__1::unique_ptr.3057"*, %"class.std::__1::unique_ptr.3057"*, %"class.std::__1::__compressed_pair.3063" }
%"class.std::__1::__compressed_pair.3063" = type { %"struct.std::__1::__compressed_pair_elem.3064" }
%"struct.std::__1::__compressed_pair_elem.3064" = type { %"class.std::__1::unique_ptr.3057"* }
%"class.std::__1::vector.3068" = type { %"class.std::__1::__vector_base.3069" }
%"class.std::__1::__vector_base.3069" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.3071" }
%"class.net::HashValue" = type { i32, %union.anon.3070 }
%union.anon.3070 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.3071" = type { %"struct.std::__1::__compressed_pair_elem.3072" }
%"struct.std::__1::__compressed_pair_elem.3072" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.3076" = type { %"class.std::__1::__vector_base.3077" }
%"class.std::__1::__vector_base.3077" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.3080" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.3078, i32, [4 x i8] }>
%class.scoped_refptr.3078 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.3079", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.3079" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3080" = type { %"struct.std::__1::__compressed_pair_elem.3081" }
%"struct.std::__1::__compressed_pair_elem.3081" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.3085" = type { %"class.std::__1::unique_ptr.3086" }
%"class.std::__1::unique_ptr.3086" = type { %"class.std::__1::__compressed_pair.3087" }
%"class.std::__1::__compressed_pair.3087" = type { %"struct.std::__1::__compressed_pair_elem.3088" }
%"struct.std::__1::__compressed_pair_elem.3088" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.3089", %"class.mojo::StructPtr.3139", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.3146", %"class.base::TimeDelta", %"class.absl::optional.3146", i32, [4 x i8], %"class.std::__1::vector.3151", %"class.mojo::StructPtr.3165", i8, [7 x i8] }>
%"class.std::__1::vector.3089" = type { %"class.std::__1::__vector_base.3090" }
%"class.std::__1::__vector_base.3090" = type { %"class.mojo::StructPtr.3091"*, %"class.mojo::StructPtr.3091"*, %"class.std::__1::__compressed_pair.3134" }
%"class.mojo::StructPtr.3091" = type { %"class.std::__1::unique_ptr.3092" }
%"class.std::__1::unique_ptr.3092" = type { %"class.std::__1::__compressed_pair.3093" }
%"class.std::__1::__compressed_pair.3093" = type { %"struct.std::__1::__compressed_pair_elem.3094" }
%"struct.std::__1::__compressed_pair_elem.3094" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.3095", %"class.base::flat_map.3102", %"class.base::flat_map.3112", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.3122", i8, %"class.std::__1::vector.3050", i32, %"class.mojo::StructPtr.3124", %"class.std::__1::vector.3050" }
%"class.mojo::StructPtr.3095" = type { %"class.std::__1::unique_ptr.3096" }
%"class.std::__1::unique_ptr.3096" = type { %"class.std::__1::__compressed_pair.3097" }
%"class.std::__1::__compressed_pair.3097" = type { %"struct.std::__1::__compressed_pair_elem.3098" }
%"struct.std::__1::__compressed_pair_elem.3098" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.3102" = type { %"class.base::internal::flat_tree.3103" }
%"class.base::internal::flat_tree.3103" = type { %"class.std::__1::vector.3104" }
%"class.std::__1::vector.3104" = type { %"class.std::__1::__vector_base.3105" }
%"class.std::__1::__vector_base.3105" = type { %"struct.std::__1::pair.3106"*, %"struct.std::__1::pair.3106"*, %"class.std::__1::__compressed_pair.3107" }
%"struct.std::__1::pair.3106" = type opaque
%"class.std::__1::__compressed_pair.3107" = type { %"struct.std::__1::__compressed_pair_elem.3108" }
%"struct.std::__1::__compressed_pair_elem.3108" = type { %"struct.std::__1::pair.3106"* }
%"class.base::flat_map.3112" = type { %"class.base::internal::flat_tree.3113" }
%"class.base::internal::flat_tree.3113" = type { %"class.std::__1::vector.3114" }
%"class.std::__1::vector.3114" = type { %"class.std::__1::__vector_base.3115" }
%"class.std::__1::__vector_base.3115" = type { %"struct.std::__1::pair.3116"*, %"struct.std::__1::pair.3116"*, %"class.std::__1::__compressed_pair.3117" }
%"struct.std::__1::pair.3116" = type opaque
%"class.std::__1::__compressed_pair.3117" = type { %"struct.std::__1::__compressed_pair_elem.3118" }
%"struct.std::__1::__compressed_pair_elem.3118" = type { %"struct.std::__1::pair.3116"* }
%"class.mojo::InlinedStructPtr.3122" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.3124" = type { %"class.std::__1::unique_ptr.3125" }
%"class.std::__1::unique_ptr.3125" = type { %"class.std::__1::__compressed_pair.3126" }
%"class.std::__1::__compressed_pair.3126" = type { %"struct.std::__1::__compressed_pair_elem.3127" }
%"struct.std::__1::__compressed_pair_elem.3127" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.3050", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3134" = type { %"struct.std::__1::__compressed_pair_elem.3135" }
%"struct.std::__1::__compressed_pair_elem.3135" = type { %"class.mojo::StructPtr.3091"* }
%"class.mojo::StructPtr.3139" = type { %"class.std::__1::unique_ptr.3140" }
%"class.std::__1::unique_ptr.3140" = type { %"class.std::__1::__compressed_pair.3141" }
%"class.std::__1::__compressed_pair.3141" = type { %"struct.std::__1::__compressed_pair_elem.3142" }
%"struct.std::__1::__compressed_pair_elem.3142" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.491", i32, %"class.absl::optional.491" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.491", i32, %"class.absl::optional.491" }
%"class.absl::optional.3146" = type { %"class.absl::optional_internal::optional_data.3147" }
%"class.absl::optional_internal::optional_data.3147" = type { %"class.absl::optional_internal::optional_data_base.3148" }
%"class.absl::optional_internal::optional_data_base.3148" = type { %"class.absl::optional_internal::optional_data_dtor_base.3149" }
%"class.absl::optional_internal::optional_data_dtor_base.3149" = type { i8, %union.anon.3150 }
%union.anon.3150 = type { %"class.std::__1::vector.2711" }
%"class.std::__1::vector.3151" = type { %"class.std::__1::__vector_base.3152" }
%"class.std::__1::__vector_base.3152" = type { %"class.mojo::StructPtr.3153"*, %"class.mojo::StructPtr.3153"*, %"class.std::__1::__compressed_pair.3160" }
%"class.mojo::StructPtr.3153" = type { %"class.std::__1::unique_ptr.3154" }
%"class.std::__1::unique_ptr.3154" = type { %"class.std::__1::__compressed_pair.3155" }
%"class.std::__1::__compressed_pair.3155" = type { %"struct.std::__1::__compressed_pair_elem.3156" }
%"struct.std::__1::__compressed_pair_elem.3156" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.491" }
%"class.std::__1::__compressed_pair.3160" = type { %"struct.std::__1::__compressed_pair_elem.3161" }
%"struct.std::__1::__compressed_pair_elem.3161" = type { %"class.mojo::StructPtr.3153"* }
%"class.mojo::StructPtr.3165" = type { %"class.std::__1::unique_ptr.3166" }
%"class.std::__1::unique_ptr.3166" = type { %"class.std::__1::__compressed_pair.3167" }
%"class.std::__1::__compressed_pair.3167" = type { %"struct.std::__1::__compressed_pair_elem.3168" }
%"struct.std::__1::__compressed_pair_elem.3168" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.3050"* }
%"class.absl::optional.3175" = type { %"class.absl::optional_internal::optional_data.3176" }
%"class.absl::optional_internal::optional_data.3176" = type { %"class.absl::optional_internal::optional_data_base.3177" }
%"class.absl::optional_internal::optional_data_base.3177" = type { %"class.absl::optional_internal::optional_data_dtor_base.3178" }
%"class.absl::optional_internal::optional_data_dtor_base.3178" = type { i8, %union.anon.3179 }
%union.anon.3179 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.3180" }
%"class.std::__1::unique_ptr.3180" = type { %"class.std::__1::__compressed_pair.3181" }
%"class.std::__1::__compressed_pair.3181" = type { %"struct.std::__1::__compressed_pair_elem.3182" }
%"struct.std::__1::__compressed_pair_elem.3182" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.3050", %"class.absl::optional.491", %"class.std::__1::vector.3050", %"class.std::__1::vector.3050" }
%"class.std::__1::vector.3050" = type { %"class.std::__1::__vector_base.3051" }
%"class.std::__1::__vector_base.3051" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3052" }
%"class.std::__1::__compressed_pair.3052" = type { %"struct.std::__1::__compressed_pair_elem.3053" }
%"struct.std::__1::__compressed_pair_elem.3053" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3015" }
%"class.std::__1::unique_ptr.3015" = type { %"class.std::__1::__compressed_pair.3016" }
%"class.std::__1::__compressed_pair.3016" = type { %"struct.std::__1::__compressed_pair_elem.3017" }
%"class.mojo::ScopedHandleBase.3189" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.3190" = type { %"class.std::__1::unique_ptr.3191" }
%"class.std::__1::unique_ptr.3191" = type { %"class.std::__1::__compressed_pair.3192" }
%"class.std::__1::__compressed_pair.3192" = type { %"struct.std::__1::__compressed_pair_elem.3193" }
%"struct.std::__1::__compressed_pair_elem.3193" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.3194", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.3194" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.3198" = type { %"class.std::__1::__vector_base.3199" }
%"class.std::__1::__vector_base.3199" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.3200" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.3200" = type { %"struct.std::__1::__compressed_pair_elem.3201" }
%"struct.std::__1::__compressed_pair_elem.3201" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.3205" = type { %"class.std::__1::__vector_base.3206" }
%"class.std::__1::__vector_base.3206" = type { %"class.mojo::StructPtr.3002"*, %"class.mojo::StructPtr.3002"*, %"class.std::__1::__compressed_pair.3207" }
%"class.std::__1::__compressed_pair.3207" = type { %"struct.std::__1::__compressed_pair_elem.3208" }
%"struct.std::__1::__compressed_pair_elem.3208" = type { %"class.mojo::StructPtr.3002"* }
%"class.blink::WorkletGlobalScope" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.3215", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.1123, i8, [7 x i8], %"class.blink::CrossThreadPersistent.3216", i32, i32, %"class.blink::Member.479", %"class.blink::WorkerThread"*, %"class.util::TokenType.284", %"class.std::__1::unique_ptr.1955", i8, i8, [6 x i8] }>
%"class.blink::ActiveScriptWrappable.3215" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::CrossThreadPersistent.3216" = type { %"class.blink::PersistentBase.3217" }
%"class.blink::PersistentBase.3217" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.3220", %"class.WTF::Mutex" }
%"class.WTF::HashMap.3220" = type { %"class.WTF::HashTable.3221" }
%"class.WTF::HashTable.3221" = type <{ %"struct.WTF::KeyValuePair.3224"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3224" = type opaque
%"class.blink::FlexibleArrayBufferView" = type { %"class.blink::DOMArrayBufferView"*, i8*, i64, [64 x i8] }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.3225" }
%"class.blink::Member.3225" = type { %"class.blink::MemberBase.3226" }
%"class.blink::MemberBase.3226" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.v8::ArrayBufferView" = type { i8 }
%"class.blink::LocalWindowProxy" = type <{ %"class.blink::WindowProxy.base", [4 x i8], %"class.blink::Member.238", i8, [7 x i8] }>
%"class.blink::WindowProxy.base" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.260", %class.scoped_refptr, %"class.blink::TraceWrapperV8Reference", i32 }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.WTF::StringTypeAdapter.3379" = type <{ i8*, i32, [4 x i8] }>
%"class.v8::Function" = type { i8 }
%"class.v8::Symbol" = type { i8 }
%"class.v8::Local.230" = type { %"class.v8::Value"* }
%"class.v8::String" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local", %"class.v8::Local.230", %"class.v8::Local.3234", %"class.v8::Local.3234", i8, %"class.v8::MaybeLocal.3233" }
%"class.v8::Local.3234" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal.3233" = type { %"class.v8::Value"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringTypeAdapter.3380" = type { %"class.WTF::StringTypeAdapter.3381" }
%"class.WTF::StringTypeAdapter.3381" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::V8StringResource" = type { %"class.v8::Local.230", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.3509" }
%"class.std::__1::unique_ptr.3509" = type { %"class.std::__1::__compressed_pair.3510" }
%"class.std::__1::__compressed_pair.3510" = type { %"struct.std::__1::__compressed_pair_elem.3511" }
%"struct.std::__1::__compressed_pair_elem.3511" = type { i8* }

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [13 x i8] c"configurable\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"enumerable\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"byte\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"octet\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"unsigned short\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"Value is outside the 'unsigned long' value range.\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"long long\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"Value is outside the 'unsigned long long' value range.\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"unsigned long long\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"The provided float value is non-finite.\00", align 1
@.str.17 = private unnamed_addr constant [41 x i8] c"The provided double value is non-finite.\00", align 1
@.str.18 = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/bindings/core/v8/v8_binding_for_core.cc\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"!context.IsEmpty()\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"!global_proxy.IsEmpty()\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"global_proxy->IsObject()\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"The provided value '\00", align 1
@.str.23 = private unnamed_addr constant [37 x i8] c"' is not a valid enum value of type \00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"Iterator must be callable function\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"Iterator is not an object.\00", align 1
@.str.27 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.29 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.30 = private unnamed_addr constant [9 x i8] c"Value is\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c" infinite and\00", align 1
@.str.32 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.33 = private unnamed_addr constant [15 x i8] c" not of type '\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"Value is outside the '\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"' value range.\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.38 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink8V8Window18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink19V8WorkerGlobalScope18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink20V8WorkletGlobalScope18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink17V8XPathNSResolver18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.41 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.42 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.43 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.44 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.45 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.46 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8SetReturnValueERKN2v820PropertyCallbackInfoINS0_5ValueEEERKNS0_18PropertyDescriptorE(%"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8), %"class.v8::PropertyDescriptor"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::V8ObjectBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::V8ObjectBuilder", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor9has_valueEv(%"class.v8::PropertyDescriptor"* %1) #11
  %14 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %0, i64 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 4
  br i1 %13, label %17, label %121

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::V8ObjectBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = getelementptr inbounds i64, i64* %15, i64 2
  %20 = bitcast i64* %19 to %"class.v8::Isolate"**
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %21) #11
  %23 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %22) #11
  call void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"* nonnull %3, %"class.blink::ScriptState"* %23) #11
  %24 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 12, i32* %28, align 8
  %29 = call zeroext i1 @_ZNK2v818PropertyDescriptor12configurableEv(%"class.v8::PropertyDescriptor"* %1) #11
  %30 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %3, i64 0, i32 0
  %31 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %31, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.v8::Context"*, %"class.v8::Context"** %32, align 8
  %34 = icmp eq %"class.v8::Context"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %17
  %36 = bitcast %"class.blink::ScriptState"* %31 to %"class.v8::internal::Isolate"**
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %36, align 8
  %38 = bitcast %"class.v8::Context"* %33 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %39) #11
  %41 = bitcast i64* %40 to %"class.v8::Context"*
  br label %42

42:                                               ; preds = %17, %35
  %43 = phi %"class.v8::Context"* [ %41, %35 ], [ null, %17 ]
  %44 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %43) #11
  %45 = bitcast %"class.blink::V8ObjectBuilder"* %3 to i64**
  %46 = load i64*, i64** %45, align 8
  %47 = load i64, i64* %46, align 8
  %48 = select i1 %29, i64 184, i64 192
  %49 = add i64 %47, %48
  %50 = inttoptr i64 %49 to %"class.v8::Value"*
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.v8::Value"* %50) #11
  %51 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %53 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %55, align 8
  %56 = call zeroext i1 @_ZNK2v818PropertyDescriptor10enumerableEv(%"class.v8::PropertyDescriptor"* %1) #11
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %30, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %42
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %42, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %42 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #11
  %71 = load i64*, i64** %45, align 8
  %72 = load i64, i64* %71, align 8
  %73 = select i1 %56, i64 184, i64 192
  %74 = add i64 %72, %73
  %75 = inttoptr i64 %74 to %"class.v8::Value"*
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.v8::Value"* %75) #11
  %76 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #11
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 5, i32* %80, align 8
  %81 = call %"class.v8::Value"* @_ZNK2v818PropertyDescriptor5valueEv(%"class.v8::PropertyDescriptor"* %1) #11
  %82 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %30, align 8
  %83 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.v8::Context"*, %"class.v8::Context"** %83, align 8
  %85 = icmp eq %"class.v8::Context"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %68
  %87 = bitcast %"class.blink::ScriptState"* %82 to %"class.v8::internal::Isolate"**
  %88 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %87, align 8
  %89 = bitcast %"class.v8::Context"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %88, i64 %90) #11
  %92 = bitcast i64* %91 to %"class.v8::Context"*
  br label %93

93:                                               ; preds = %68, %86
  %94 = phi %"class.v8::Context"* [ %92, %86 ], [ null, %68 ]
  %95 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %94) #11
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.v8::Value"* %81) #11
  %96 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #11
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %98 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %100, align 8
  %101 = call zeroext i1 @_ZNK2v818PropertyDescriptor8writableEv(%"class.v8::PropertyDescriptor"* %1) #11
  %102 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %30, align 8
  %103 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %102, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"class.v8::Context"*, %"class.v8::Context"** %103, align 8
  %105 = icmp eq %"class.v8::Context"* %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %93
  %107 = bitcast %"class.blink::ScriptState"* %102 to %"class.v8::internal::Isolate"**
  %108 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %107, align 8
  %109 = bitcast %"class.v8::Context"* %104 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %108, i64 %110) #11
  %112 = bitcast i64* %111 to %"class.v8::Context"*
  br label %113

113:                                              ; preds = %93, %106
  %114 = phi %"class.v8::Context"* [ %112, %106 ], [ null, %93 ]
  %115 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %114) #11
  %116 = load i64*, i64** %45, align 8
  %117 = load i64, i64* %116, align 8
  %118 = select i1 %101, i64 184, i64 192
  %119 = add i64 %117, %118
  %120 = inttoptr i64 %119 to %"class.v8::Value"*
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.v8::Value"* %120) #11
  br label %220

121:                                              ; preds = %2
  %122 = bitcast %"class.blink::V8ObjectBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #11
  %123 = getelementptr inbounds i64, i64* %15, i64 2
  %124 = bitcast i64* %123 to %"class.v8::Isolate"**
  %125 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %124, align 8
  %126 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %125) #11
  %127 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %126) #11
  call void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"* nonnull %8, %"class.blink::ScriptState"* %127) #11
  %128 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #11
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 12, i32* %132, align 8
  %133 = call zeroext i1 @_ZNK2v818PropertyDescriptor12configurableEv(%"class.v8::PropertyDescriptor"* %1) #11
  %134 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %8, i64 0, i32 0
  %135 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %135, i64 0, i32 1, i32 0, i32 0, i32 0
  %137 = load %"class.v8::Context"*, %"class.v8::Context"** %136, align 8
  %138 = icmp eq %"class.v8::Context"* %137, null
  br i1 %138, label %146, label %139

139:                                              ; preds = %121
  %140 = bitcast %"class.blink::ScriptState"* %135 to %"class.v8::internal::Isolate"**
  %141 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %140, align 8
  %142 = bitcast %"class.v8::Context"* %137 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %141, i64 %143) #11
  %145 = bitcast i64* %144 to %"class.v8::Context"*
  br label %146

146:                                              ; preds = %121, %139
  %147 = phi %"class.v8::Context"* [ %145, %139 ], [ null, %121 ]
  %148 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %147) #11
  %149 = bitcast %"class.blink::V8ObjectBuilder"* %8 to i64**
  %150 = load i64*, i64** %149, align 8
  %151 = load i64, i64* %150, align 8
  %152 = select i1 %133, i64 184, i64 192
  %153 = add i64 %151, %152
  %154 = inttoptr i64 %153 to %"class.v8::Value"*
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.v8::Value"* %154) #11
  %155 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #11
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %157 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 10, i32* %159, align 8
  %160 = call zeroext i1 @_ZNK2v818PropertyDescriptor10enumerableEv(%"class.v8::PropertyDescriptor"* %1) #11
  %161 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %134, align 8
  %162 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %161, i64 0, i32 1, i32 0, i32 0, i32 0
  %163 = load %"class.v8::Context"*, %"class.v8::Context"** %162, align 8
  %164 = icmp eq %"class.v8::Context"* %163, null
  br i1 %164, label %172, label %165

165:                                              ; preds = %146
  %166 = bitcast %"class.blink::ScriptState"* %161 to %"class.v8::internal::Isolate"**
  %167 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %166, align 8
  %168 = bitcast %"class.v8::Context"* %163 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %167, i64 %169) #11
  %171 = bitcast i64* %170 to %"class.v8::Context"*
  br label %172

172:                                              ; preds = %146, %165
  %173 = phi %"class.v8::Context"* [ %171, %165 ], [ null, %146 ]
  %174 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %173) #11
  %175 = load i64*, i64** %149, align 8
  %176 = load i64, i64* %175, align 8
  %177 = select i1 %160, i64 184, i64 192
  %178 = add i64 %176, %177
  %179 = inttoptr i64 %178 to %"class.v8::Value"*
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.v8::Value"* %179) #11
  %180 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #11
  %181 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %182 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 3, i32* %184, align 8
  %185 = call %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3getEv(%"class.v8::PropertyDescriptor"* %1) #11
  %186 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %134, align 8
  %187 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %186, i64 0, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.v8::Context"*, %"class.v8::Context"** %187, align 8
  %189 = icmp eq %"class.v8::Context"* %188, null
  br i1 %189, label %197, label %190

190:                                              ; preds = %172
  %191 = bitcast %"class.blink::ScriptState"* %186 to %"class.v8::internal::Isolate"**
  %192 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %191, align 8
  %193 = bitcast %"class.v8::Context"* %188 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %192, i64 %194) #11
  %196 = bitcast i64* %195 to %"class.v8::Context"*
  br label %197

197:                                              ; preds = %172, %190
  %198 = phi %"class.v8::Context"* [ %196, %190 ], [ null, %172 ]
  %199 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %198) #11
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.v8::Value"* %185) #11
  %200 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %202 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 3, i32* %204, align 8
  %205 = call %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3setEv(%"class.v8::PropertyDescriptor"* %1) #11
  %206 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %134, align 8
  %207 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %206, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.v8::Context"*, %"class.v8::Context"** %207, align 8
  %209 = icmp eq %"class.v8::Context"* %208, null
  br i1 %209, label %217, label %210

210:                                              ; preds = %197
  %211 = bitcast %"class.blink::ScriptState"* %206 to %"class.v8::internal::Isolate"**
  %212 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %211, align 8
  %213 = bitcast %"class.v8::Context"* %208 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %212, i64 %214) #11
  %216 = bitcast i64* %215 to %"class.v8::Context"*
  br label %217

217:                                              ; preds = %197, %210
  %218 = phi %"class.v8::Context"* [ %216, %210 ], [ null, %197 ]
  %219 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %218) #11
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.v8::Value"* %205) #11
  br label %220

220:                                              ; preds = %217, %113
  %221 = phi %"class.blink::V8ObjectBuilder"* [ %8, %217 ], [ %3, %113 ]
  %222 = phi i8* [ %200, %217 ], [ %96, %113 ]
  %223 = phi i8* [ %180, %217 ], [ %76, %113 ]
  %224 = phi i8* [ %155, %217 ], [ %51, %113 ]
  %225 = phi i8* [ %128, %217 ], [ %24, %113 ]
  %226 = phi i8* [ %122, %217 ], [ %18, %113 ]
  %227 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %221, i64 0, i32 1, i32 0
  %228 = load %"class.v8::Object"*, %"class.v8::Object"** %227, align 8
  %229 = icmp eq %"class.v8::Object"* %228, null
  %230 = bitcast %"class.v8::Object"* %228 to i64*
  %231 = getelementptr inbounds i64, i64* %15, i64 3
  %232 = select i1 %229, i64* %231, i64* %230
  %233 = load i64, i64* %232, align 8
  store i64 %233, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #11
  ret void
}

declare zeroext i1 @_ZNK2v818PropertyDescriptor9has_valueEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare zeroext i1 @_ZNK2v818PropertyDescriptor12configurableEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v818PropertyDescriptor10enumerableEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v818PropertyDescriptor5valueEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v818PropertyDescriptor8writableEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3getEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3setEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN5blink6ToInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3229", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #11
  br i1 %9, label %10, label %192

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %12 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %11) #11
  %13 = add i32 %12, 128
  %14 = icmp ult i32 %13, 256
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = trunc i32 %12 to i8
  br label %238

17:                                               ; preds = %10
  switch i32 %2, label %190 [
    i32 2, label %18
    i32 1, label %187
  ]

18:                                               ; preds = %17
  %19 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = bitcast %"class.WTF::StringAppend.3229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #11
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %101, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #11
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %32
  call void @llvm.trap() #11
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #11
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %47
  call void @llvm.trap() #11
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  %68 = load i32, i32* %30, align 4
  br label %69

69:                                               ; preds = %67, %64
  %70 = phi i32 [ %68, %67 ], [ %65, %64 ]
  %71 = load atomic i32, i32* %26 monotonic, align 4, !noalias !3
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = zext i32 %70 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #11
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %74
  call void @llvm.trap() #11, !noalias !3
  unreachable

82:                                               ; preds = %74
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %30, align 4, !noalias !3
  br label %84

84:                                               ; preds = %82, %69
  %85 = phi i32 [ %83, %82 ], [ %70, %69 ]
  %86 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %86, align 8, !alias.scope !3
  %87 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %87, align 8, !alias.scope !3
  %88 = load atomic i32, i32* %26 monotonic, align 4, !noalias !3
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %105

91:                                               ; preds = %84
  %92 = zext i32 %85 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #11
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %91
  call void @llvm.trap() #11, !noalias !3
  unreachable

99:                                               ; preds = %91
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %30, align 4, !noalias !3
  br label %105

101:                                              ; preds = %18
  %102 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %102, align 8, !alias.scope !3
  %103 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %103, align 8, !alias.scope !3
  %104 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %104, align 8, !alias.scope !3
  br label %117

105:                                              ; preds = %99, %84
  %106 = phi i32 [ %100, %99 ], [ %85, %84 ]
  %107 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %107, align 8, !alias.scope !3
  %108 = load atomic i32, i32* %26 monotonic, align 4, !noalias !3
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = add i32 %106, -1
  store i32 %112, i32* %30, align 4, !noalias !3
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i32 [ %112, %111 ], [ %106, %105 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11, !noalias !3
  br label %117

117:                                              ; preds = %116, %113, %101
  %118 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3229"* nonnull %6) #11
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %119, align 8
  %120 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %121 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %121, i64 3
  %123 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %122, align 8
  call void %123(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #11
  br label %139

139:                                              ; preds = %138, %135, %117
  %140 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #11
  br label %156

156:                                              ; preds = %155, %152, %139
  br i1 %24, label %170, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  br label %170

170:                                              ; preds = %169, %166, %156
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #11
  br label %186

186:                                              ; preds = %185, %182, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %238

187:                                              ; preds = %17
  %188 = icmp slt i32 %12, 127
  %189 = select i1 %188, i8 -128, i8 127
  br label %238

190:                                              ; preds = %17
  %191 = trunc i32 %12 to i8
  br label %238

192:                                              ; preds = %4
  %193 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #11
  br i1 %193, label %194, label %196

194:                                              ; preds = %192
  %195 = bitcast %"class.v8::Value"* %1 to %"class.v8::Number"*
  br label %208

196:                                              ; preds = %192
  %197 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %197) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %0) #11
  %198 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %199 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %198) #11
  %200 = icmp eq %"class.v8::Number"* %199, null
  br i1 %200, label %201, label %207

201:                                              ; preds = %196
  %202 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #11
  %203 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %204 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %204, i64 5
  %206 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %205, align 8
  call void %206(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %202) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %197) #11
  br label %238

207:                                              ; preds = %196
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %197) #11
  br label %208

208:                                              ; preds = %207, %194
  %209 = phi %"class.v8::Number"* [ %195, %194 ], [ %199, %207 ]
  %210 = icmp eq i32 %2, 2
  %211 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %209) #11
  br i1 %210, label %212, label %215

212:                                              ; preds = %208
  %213 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %211, double -1.280000e+02, double 1.270000e+02, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %214 = fptosi double %213 to i8
  br label %238

215:                                              ; preds = %208
  %216 = fcmp ueq double %211, 0.000000e+00
  br i1 %216, label %238, label %217

217:                                              ; preds = %215
  %218 = icmp eq i32 %2, 1
  br i1 %218, label %219, label %225

219:                                              ; preds = %217
  %220 = fcmp ult double %211, 1.270000e+02
  br i1 %220, label %221, label %238

221:                                              ; preds = %219
  %222 = fcmp ugt double %211, -1.280000e+02
  br i1 %222, label %223, label %238

223:                                              ; preds = %221
  %224 = fptosi double %211 to i8
  br label %238

225:                                              ; preds = %217
  %226 = call double @llvm.fabs.f64(double %211) #12
  %227 = fcmp oeq double %226, 0x7FF0000000000000
  br i1 %227, label %238, label %228

228:                                              ; preds = %225
  %229 = fcmp olt double %211, 0.000000e+00
  %230 = call double @llvm.floor.f64(double %226) #11
  %231 = fsub double -0.000000e+00, %230
  %232 = select i1 %229, double %231, double %230
  %233 = call double @fmod(double %232, double 2.560000e+02) #11
  %234 = fcmp ogt double %233, 1.270000e+02
  %235 = fadd double %233, -2.560000e+02
  %236 = select i1 %234, double %235, double %233
  %237 = fptosi double %236 to i8
  br label %238

238:                                              ; preds = %15, %186, %190, %201, %212, %215, %219, %221, %223, %225, %228, %187
  %239 = phi i8 [ %189, %187 ], [ %16, %15 ], [ 0, %186 ], [ %191, %190 ], [ %214, %212 ], [ 0, %201 ], [ %237, %228 ], [ 0, %215 ], [ 0, %225 ], [ %224, %223 ], [ 127, %219 ], [ -128, %221 ]
  ret i8 %239
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink7ToUInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3229", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #11
  br i1 %9, label %10, label %190

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %12 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %11) #11
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = trunc i32 %12 to i8
  br label %233

16:                                               ; preds = %10
  switch i32 %2, label %188 [
    i32 2, label %17
    i32 1, label %186
  ]

17:                                               ; preds = %16
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = bitcast %"class.WTF::StringAppend.3229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5) #11
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %100, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %30 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #11
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %29, align 4
  br label %41

41:                                               ; preds = %39, %24
  %42 = phi i32 [ %40, %39 ], [ %30, %24 ]
  %43 = load atomic i32, i32* %25 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %41
  %47 = zext i32 %42 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #11
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #11
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %29, align 4
  br label %56

56:                                               ; preds = %54, %41
  %57 = phi i32 [ %55, %54 ], [ %42, %41 ]
  %58 = load atomic i32, i32* %25 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = add i32 %57, -1
  store i32 %62, i32* %29, align 4
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i32 [ %62, %61 ], [ %57, %56 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  %67 = load i32, i32* %29, align 4
  br label %68

68:                                               ; preds = %66, %63
  %69 = phi i32 [ %67, %66 ], [ %64, %63 ]
  %70 = load atomic i32, i32* %25 monotonic, align 4, !noalias !6
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %69 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #11
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %73
  call void @llvm.trap() #11, !noalias !6
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %29, align 4, !noalias !6
  br label %83

83:                                               ; preds = %81, %68
  %84 = phi i32 [ %82, %81 ], [ %69, %68 ]
  %85 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %85, align 8, !alias.scope !6
  %86 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %86, align 8, !alias.scope !6
  %87 = load atomic i32, i32* %25 monotonic, align 4, !noalias !6
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %83
  %91 = zext i32 %84 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #11
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %90
  call void @llvm.trap() #11, !noalias !6
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %29, align 4, !noalias !6
  br label %104

100:                                              ; preds = %17
  %101 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %101, align 8, !alias.scope !6
  %102 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !6
  %103 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %103, align 8, !alias.scope !6
  br label %116

104:                                              ; preds = %98, %83
  %105 = phi i32 [ %99, %98 ], [ %84, %83 ]
  %106 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %106, align 8, !alias.scope !6
  %107 = load atomic i32, i32* %25 monotonic, align 4, !noalias !6
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %105, -1
  store i32 %111, i32* %29, align 4, !noalias !6
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %105, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11, !noalias !6
  br label %116

116:                                              ; preds = %115, %112, %100
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3229"* nonnull %6) #11
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %120 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %120, i64 3
  %122 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %121, align 8
  call void %122(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #11
  br label %138

138:                                              ; preds = %137, %134, %116
  %139 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #11
  br label %155

155:                                              ; preds = %154, %151, %138
  br i1 %23, label %169, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %169

169:                                              ; preds = %168, %165, %155
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #11
  br label %185

185:                                              ; preds = %184, %181, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %233

186:                                              ; preds = %16
  %187 = icmp slt i32 %12, 255
  br i1 %187, label %235, label %233

188:                                              ; preds = %16
  %189 = trunc i32 %12 to i8
  br label %233

190:                                              ; preds = %4
  %191 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #11
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = bitcast %"class.v8::Value"* %1 to %"class.v8::Number"*
  br label %206

194:                                              ; preds = %190
  %195 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %195) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %0) #11
  %196 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %197 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %196) #11
  %198 = icmp eq %"class.v8::Number"* %197, null
  br i1 %198, label %199, label %205

199:                                              ; preds = %194
  %200 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #11
  %201 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %202 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %202, i64 5
  %204 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %203, align 8
  call void %204(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %200) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %195) #11
  br label %233

205:                                              ; preds = %194
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %195) #11
  br label %206

206:                                              ; preds = %205, %192
  %207 = phi %"class.v8::Number"* [ %193, %192 ], [ %197, %205 ]
  %208 = icmp eq i32 %2, 2
  %209 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %207) #11
  br i1 %208, label %210, label %213

210:                                              ; preds = %206
  %211 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %209, double 0.000000e+00, double 2.550000e+02, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %212 = fptoui double %211 to i8
  br label %233

213:                                              ; preds = %206
  %214 = fcmp ueq double %209, 0.000000e+00
  br i1 %214, label %233, label %215

215:                                              ; preds = %213
  %216 = icmp eq i32 %2, 1
  br i1 %216, label %217, label %223

217:                                              ; preds = %215
  %218 = fcmp ult double %209, 2.550000e+02
  br i1 %218, label %219, label %233

219:                                              ; preds = %217
  %220 = fcmp ugt double %209, 0.000000e+00
  br i1 %220, label %221, label %233

221:                                              ; preds = %219
  %222 = fptoui double %209 to i8
  br label %233

223:                                              ; preds = %215
  %224 = call double @llvm.fabs.f64(double %209) #12
  %225 = fcmp oeq double %224, 0x7FF0000000000000
  br i1 %225, label %233, label %226

226:                                              ; preds = %223
  %227 = call double @llvm.trunc.f64(double %209) #11
  %228 = call double @fmod(double %227, double 2.560000e+02) #11
  %229 = fcmp olt double %228, 0.000000e+00
  %230 = fadd double %228, 2.560000e+02
  %231 = select i1 %229, double %230, double %228
  %232 = fptoui double %231 to i8
  br label %233

233:                                              ; preds = %226, %223, %221, %219, %217, %213, %210, %199, %188, %186, %185, %14
  %234 = phi i8 [ %15, %14 ], [ 0, %185 ], [ %189, %188 ], [ -1, %186 ], [ %212, %210 ], [ 0, %199 ], [ %232, %226 ], [ 0, %213 ], [ 0, %223 ], [ %222, %221 ], [ -1, %217 ], [ 0, %219 ]
  br label %235

235:                                              ; preds = %186, %233
  %236 = phi i8 [ %234, %233 ], [ 0, %186 ]
  ret i8 %236
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink7ToInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3229", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #11
  br i1 %9, label %10, label %192

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %12 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %11) #11
  %13 = add i32 %12, 32768
  %14 = icmp ult i32 %13, 65536
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = trunc i32 %12 to i16
  br label %238

17:                                               ; preds = %10
  switch i32 %2, label %190 [
    i32 2, label %18
    i32 1, label %187
  ]

18:                                               ; preds = %17
  %19 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = bitcast %"class.WTF::StringAppend.3229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5) #11
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %101, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #11
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %32
  call void @llvm.trap() #11
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = zext i32 %43 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #11
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %47
  call void @llvm.trap() #11
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %30, align 4
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %43, %42 ]
  %59 = load atomic i32, i32* %26 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %30, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  %68 = load i32, i32* %30, align 4
  br label %69

69:                                               ; preds = %67, %64
  %70 = phi i32 [ %68, %67 ], [ %65, %64 ]
  %71 = load atomic i32, i32* %26 monotonic, align 4, !noalias !9
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = zext i32 %70 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #11
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %74
  call void @llvm.trap() #11, !noalias !9
  unreachable

82:                                               ; preds = %74
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %30, align 4, !noalias !9
  br label %84

84:                                               ; preds = %82, %69
  %85 = phi i32 [ %83, %82 ], [ %70, %69 ]
  %86 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %86, align 8, !alias.scope !9
  %87 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %87, align 8, !alias.scope !9
  %88 = load atomic i32, i32* %26 monotonic, align 4, !noalias !9
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %105

91:                                               ; preds = %84
  %92 = zext i32 %85 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #11
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %91
  call void @llvm.trap() #11, !noalias !9
  unreachable

99:                                               ; preds = %91
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %30, align 4, !noalias !9
  br label %105

101:                                              ; preds = %18
  %102 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %102, align 8, !alias.scope !9
  %103 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %103, align 8, !alias.scope !9
  %104 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %104, align 8, !alias.scope !9
  br label %117

105:                                              ; preds = %99, %84
  %106 = phi i32 [ %100, %99 ], [ %85, %84 ]
  %107 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %107, align 8, !alias.scope !9
  %108 = load atomic i32, i32* %26 monotonic, align 4, !noalias !9
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = add i32 %106, -1
  store i32 %112, i32* %30, align 4, !noalias !9
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i32 [ %112, %111 ], [ %106, %105 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11, !noalias !9
  br label %117

117:                                              ; preds = %116, %113, %101
  %118 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3229"* nonnull %6) #11
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %119, align 8
  %120 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %121 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %121, i64 3
  %123 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %122, align 8
  call void %123(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #11
  br label %139

139:                                              ; preds = %138, %135, %117
  %140 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #11
  br label %156

156:                                              ; preds = %155, %152, %139
  br i1 %24, label %170, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  br label %170

170:                                              ; preds = %169, %166, %156
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #11
  br label %186

186:                                              ; preds = %185, %182, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %238

187:                                              ; preds = %17
  %188 = icmp slt i32 %12, 32767
  %189 = select i1 %188, i16 -32768, i16 32767
  br label %238

190:                                              ; preds = %17
  %191 = trunc i32 %12 to i16
  br label %238

192:                                              ; preds = %4
  %193 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #11
  br i1 %193, label %194, label %196

194:                                              ; preds = %192
  %195 = bitcast %"class.v8::Value"* %1 to %"class.v8::Number"*
  br label %208

196:                                              ; preds = %192
  %197 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %197) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %0) #11
  %198 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %199 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %198) #11
  %200 = icmp eq %"class.v8::Number"* %199, null
  br i1 %200, label %201, label %207

201:                                              ; preds = %196
  %202 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #11
  %203 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %204 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %204, i64 5
  %206 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %205, align 8
  call void %206(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %202) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %197) #11
  br label %238

207:                                              ; preds = %196
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %197) #11
  br label %208

208:                                              ; preds = %207, %194
  %209 = phi %"class.v8::Number"* [ %195, %194 ], [ %199, %207 ]
  %210 = icmp eq i32 %2, 2
  %211 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %209) #11
  br i1 %210, label %212, label %215

212:                                              ; preds = %208
  %213 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %211, double -3.276800e+04, double 3.276700e+04, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %214 = fptosi double %213 to i16
  br label %238

215:                                              ; preds = %208
  %216 = fcmp ueq double %211, 0.000000e+00
  br i1 %216, label %238, label %217

217:                                              ; preds = %215
  %218 = icmp eq i32 %2, 1
  br i1 %218, label %219, label %225

219:                                              ; preds = %217
  %220 = fcmp ult double %211, 3.276700e+04
  br i1 %220, label %221, label %238

221:                                              ; preds = %219
  %222 = fcmp ugt double %211, -3.276800e+04
  br i1 %222, label %223, label %238

223:                                              ; preds = %221
  %224 = fptosi double %211 to i16
  br label %238

225:                                              ; preds = %217
  %226 = call double @llvm.fabs.f64(double %211) #12
  %227 = fcmp oeq double %226, 0x7FF0000000000000
  br i1 %227, label %238, label %228

228:                                              ; preds = %225
  %229 = fcmp olt double %211, 0.000000e+00
  %230 = call double @llvm.floor.f64(double %226) #11
  %231 = fsub double -0.000000e+00, %230
  %232 = select i1 %229, double %231, double %230
  %233 = call double @fmod(double %232, double 6.553600e+04) #11
  %234 = fcmp ogt double %233, 3.276700e+04
  %235 = fadd double %233, -6.553600e+04
  %236 = select i1 %234, double %235, double %233
  %237 = fptosi double %236 to i16
  br label %238

238:                                              ; preds = %15, %186, %190, %201, %212, %215, %219, %221, %223, %225, %228, %187
  %239 = phi i16 [ %189, %187 ], [ %16, %15 ], [ 0, %186 ], [ %191, %190 ], [ %214, %212 ], [ 0, %201 ], [ %237, %228 ], [ 0, %215 ], [ 0, %225 ], [ %224, %223 ], [ 32767, %219 ], [ -32768, %221 ]
  ret i16 %239
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN5blink8ToUInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3229", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #11
  br i1 %9, label %10, label %190

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %12 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %11) #11
  %13 = icmp ult i32 %12, 65536
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = trunc i32 %12 to i16
  br label %233

16:                                               ; preds = %10
  switch i32 %2, label %188 [
    i32 2, label %17
    i32 1, label %186
  ]

17:                                               ; preds = %16
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = bitcast %"class.WTF::StringAppend.3229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14) #11
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %100, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %30 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #11
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %29, align 4
  br label %41

41:                                               ; preds = %39, %24
  %42 = phi i32 [ %40, %39 ], [ %30, %24 ]
  %43 = load atomic i32, i32* %25 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %41
  %47 = zext i32 %42 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #11
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #11
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %29, align 4
  br label %56

56:                                               ; preds = %54, %41
  %57 = phi i32 [ %55, %54 ], [ %42, %41 ]
  %58 = load atomic i32, i32* %25 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = add i32 %57, -1
  store i32 %62, i32* %29, align 4
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i32 [ %62, %61 ], [ %57, %56 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  %67 = load i32, i32* %29, align 4
  br label %68

68:                                               ; preds = %66, %63
  %69 = phi i32 [ %67, %66 ], [ %64, %63 ]
  %70 = load atomic i32, i32* %25 monotonic, align 4, !noalias !12
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %69 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #11
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %73
  call void @llvm.trap() #11, !noalias !12
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %29, align 4, !noalias !12
  br label %83

83:                                               ; preds = %81, %68
  %84 = phi i32 [ %82, %81 ], [ %69, %68 ]
  %85 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %85, align 8, !alias.scope !12
  %86 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %86, align 8, !alias.scope !12
  %87 = load atomic i32, i32* %25 monotonic, align 4, !noalias !12
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %83
  %91 = zext i32 %84 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #11
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %90
  call void @llvm.trap() #11, !noalias !12
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %29, align 4, !noalias !12
  br label %104

100:                                              ; preds = %17
  %101 = bitcast %"class.WTF::StringAppend.3229"* %6 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %101, align 8, !alias.scope !12
  %102 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !12
  %103 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %103, align 8, !alias.scope !12
  br label %116

104:                                              ; preds = %98, %83
  %105 = phi i32 [ %99, %98 ], [ %84, %83 ]
  %106 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %106, align 8, !alias.scope !12
  %107 = load atomic i32, i32* %25 monotonic, align 4, !noalias !12
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %105, -1
  store i32 %111, i32* %29, align 4, !noalias !12
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %105, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11, !noalias !12
  br label %116

116:                                              ; preds = %115, %112, %100
  %117 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3229"* nonnull %6) #11
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %120 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %120, i64 3
  %122 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %121, align 8
  call void %122(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #11
  br label %138

138:                                              ; preds = %137, %134, %116
  %139 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #11
  br label %155

155:                                              ; preds = %154, %151, %138
  br i1 %23, label %169, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %169

169:                                              ; preds = %168, %165, %155
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #11
  br label %185

185:                                              ; preds = %184, %181, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %233

186:                                              ; preds = %16
  %187 = icmp slt i32 %12, 65535
  br i1 %187, label %235, label %233

188:                                              ; preds = %16
  %189 = trunc i32 %12 to i16
  br label %233

190:                                              ; preds = %4
  %191 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #11
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = bitcast %"class.v8::Value"* %1 to %"class.v8::Number"*
  br label %206

194:                                              ; preds = %190
  %195 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %195) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %0) #11
  %196 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %197 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %196) #11
  %198 = icmp eq %"class.v8::Number"* %197, null
  br i1 %198, label %199, label %205

199:                                              ; preds = %194
  %200 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #11
  %201 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %202 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %202, i64 5
  %204 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %203, align 8
  call void %204(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %200) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %195) #11
  br label %233

205:                                              ; preds = %194
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %195) #11
  br label %206

206:                                              ; preds = %205, %192
  %207 = phi %"class.v8::Number"* [ %193, %192 ], [ %197, %205 ]
  %208 = icmp eq i32 %2, 2
  %209 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %207) #11
  br i1 %208, label %210, label %213

210:                                              ; preds = %206
  %211 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %209, double 0.000000e+00, double 6.553500e+04, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %212 = fptoui double %211 to i16
  br label %233

213:                                              ; preds = %206
  %214 = fcmp ueq double %209, 0.000000e+00
  br i1 %214, label %233, label %215

215:                                              ; preds = %213
  %216 = icmp eq i32 %2, 1
  br i1 %216, label %217, label %223

217:                                              ; preds = %215
  %218 = fcmp ult double %209, 6.553500e+04
  br i1 %218, label %219, label %233

219:                                              ; preds = %217
  %220 = fcmp ugt double %209, 0.000000e+00
  br i1 %220, label %221, label %233

221:                                              ; preds = %219
  %222 = fptoui double %209 to i16
  br label %233

223:                                              ; preds = %215
  %224 = call double @llvm.fabs.f64(double %209) #12
  %225 = fcmp oeq double %224, 0x7FF0000000000000
  br i1 %225, label %233, label %226

226:                                              ; preds = %223
  %227 = call double @llvm.trunc.f64(double %209) #11
  %228 = call double @fmod(double %227, double 6.553600e+04) #11
  %229 = fcmp olt double %228, 0.000000e+00
  %230 = fadd double %228, 6.553600e+04
  %231 = select i1 %229, double %230, double %228
  %232 = fptoui double %231 to i16
  br label %233

233:                                              ; preds = %226, %223, %221, %219, %217, %213, %210, %199, %188, %186, %185, %14
  %234 = phi i16 [ %15, %14 ], [ 0, %185 ], [ %189, %188 ], [ -1, %186 ], [ %212, %210 ], [ 0, %199 ], [ %232, %226 ], [ 0, %213 ], [ 0, %223 ], [ %222, %221 ], [ -1, %217 ], [ 0, %219 ]
  br label %235

235:                                              ; preds = %186, %233
  %236 = phi i16 [ %234, %233 ], [ 0, %186 ]
  ret i16 %236
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #11
  %7 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %8 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %7) #11
  %9 = icmp eq %"class.v8::Number"* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %12 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %13 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %13, i64 5
  %15 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %14, align 8
  call void %15(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %11) #11
  br label %49

16:                                               ; preds = %4
  %17 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %8) #11
  %18 = icmp eq i32 %2, 2
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %17, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %21 = fptosi double %20 to i32
  br label %49

22:                                               ; preds = %16
  %23 = fcmp uno double %17, 0.000000e+00
  br i1 %23, label %49, label %24

24:                                               ; preds = %22
  %25 = icmp eq i32 %2, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = fcmp ult double %17, 0x41DFFFFFFFC00000
  br i1 %27, label %28, label %49

28:                                               ; preds = %26
  %29 = fcmp ugt double %17, 0xC1E0000000000000
  br i1 %29, label %30, label %49

30:                                               ; preds = %28
  %31 = fptosi double %17 to i32
  br label %49

32:                                               ; preds = %24
  %33 = call double @llvm.fabs.f64(double %17) #12
  %34 = fcmp oeq double %33, 0x7FF0000000000000
  br i1 %34, label %49, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.v8::Number"* %8 to %"class.v8::Value"*
  %37 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %38 = call i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %36, %"class.v8::Context"* %37) #11
  %39 = trunc i64 %38 to i8
  %40 = lshr i64 %38, 32
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i8 %39, 0
  br i1 %42, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #11
  br label %49

49:                                               ; preds = %43, %35, %30, %28, %26, %19, %22, %32, %10
  %50 = phi i32 [ 0, %10 ], [ %21, %19 ], [ 0, %22 ], [ 0, %32 ], [ %31, %30 ], [ 2147483647, %26 ], [ -2147483648, %28 ], [ 0, %43 ], [ %41, %35 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret i32 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double, double, double, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca %"class.WTF::StringAppend.3228", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.3228", align 8
  %10 = alloca %"class.WTF::StringAppend.3229", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend.3229", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = fcmp uno double %0, 0.000000e+00
  %17 = tail call double @llvm.fabs.f64(double %0) #12
  %18 = fcmp oeq double %17, 0x7FF0000000000000
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %318

20:                                               ; preds = %5
  %21 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %23 = bitcast %"class.WTF::StringAppend.3228"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = bitcast %"class.WTF::StringAppend.3229"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = select i1 %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.32, i64 0, i64 0)
  %27 = select i1 %18, i64 13, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %26, i64 %27) #11
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %106, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %38
  call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = zext i32 %49 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #11
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %53
  call void @llvm.trap() #11
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %36, align 4
  br label %63

63:                                               ; preds = %61, %48
  %64 = phi i32 [ %62, %61 ], [ %49, %48 ]
  %65 = load atomic i32, i32* %32 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  store i32 %69, i32* %36, align 4
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %63 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %74

74:                                               ; preds = %70, %73
  %75 = load atomic i32, i32* %32 monotonic, align 4, !noalias !15
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = load i32, i32* %36, align 4
  br i1 %77, label %79, label %89

79:                                               ; preds = %74
  %80 = zext i32 %78 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #11
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %79
  call void @llvm.trap() #11, !noalias !15
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %36, align 4, !noalias !15
  br label %89

89:                                               ; preds = %74, %87
  %90 = phi i32 [ %88, %87 ], [ %78, %74 ]
  %91 = bitcast %"class.WTF::StringAppend.3229"* %10 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.30 to i64), i64* %91, align 8, !alias.scope !15
  %92 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %92, align 8, !alias.scope !15
  %93 = load atomic i32, i32* %32 monotonic, align 4, !noalias !15
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %89
  %97 = zext i32 %90 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #11
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %96
  call void @llvm.trap() #11, !noalias !15
  unreachable

104:                                              ; preds = %96
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %36, align 4, !noalias !15
  br label %110

106:                                              ; preds = %20
  %107 = bitcast %"class.WTF::StringAppend.3229"* %10 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.30 to i64), i64* %107, align 8, !alias.scope !15
  %108 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8, !alias.scope !15
  %109 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0), i8** %109, align 8, !alias.scope !15
  br label %122

110:                                              ; preds = %104, %89
  %111 = phi i32 [ %105, %104 ], [ %90, %89 ]
  %112 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0), i8** %112, align 8, !alias.scope !15
  %113 = load atomic i32, i32* %32 monotonic, align 4, !noalias !15
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = add i32 %111, -1
  store i32 %117, i32* %36, align 4, !noalias !15
  br label %118

118:                                              ; preds = %116, %110
  %119 = phi i32 [ %117, %116 ], [ %111, %110 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11, !noalias !15
  br label %122

122:                                              ; preds = %106, %118, %121
  %123 = icmp eq i8* %3, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = call i64 @strlen(i8* nonnull %3) #13
  br label %126

126:                                              ; preds = %122, %124
  %127 = phi i64 [ %125, %124 ], [ 0, %122 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %3, i64 %127) #11
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3228"* nonnull sret %9, %"class.WTF::StringAppend.3229"* nonnull dereferenceable(24) %10, %"class.WTF::StringImpl"* %129)
  %130 = bitcast %"class.WTF::StringAppend.3228"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130)
  %131 = bitcast %"class.WTF::StringAppend.3228"* %9 to i64*
  %132 = load i64, i64* %131, align 8, !noalias !18
  %133 = bitcast %"class.WTF::StringAppend.3228"* %6 to i64*
  store i64 %132, i64* %133, align 8, !noalias !18
  %134 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8, !noalias !18
  %136 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8, !noalias !18
  %137 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %137, label %155, label %138

138:                                              ; preds = %126
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #11
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !2

152:                                              ; preds = %143
  call void @llvm.trap() #11
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %155

155:                                              ; preds = %153, %138, %126
  %156 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %6, i64 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %9, i64 0, i32 0, i32 1
  %158 = bitcast i8** %157 to i64*
  %159 = load i64, i64* %158, align 8, !noalias !18
  %160 = bitcast i8** %156 to i64*
  store i64 %159, i64* %160, align 8, !noalias !18
  %161 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %9, i64 0, i32 1, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8, !noalias !18
  %163 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8, !noalias !18
  %164 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %164, label %182, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %182

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i33
  %174 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %173, i33 1) #11
  %175 = extractvalue { i33, i1 } %174, 1
  %176 = extractvalue { i33, i1 } %174, 0
  %177 = icmp slt i33 %176, 0
  %178 = or i1 %175, %177
  br i1 %178, label %179, label %180, !prof !2

179:                                              ; preds = %170
  call void @llvm.trap() #11
  unreachable

180:                                              ; preds = %170
  %181 = trunc i33 %176 to i32
  store i32 %181, i32* %171, align 4
  br label %182

182:                                              ; preds = %155, %165, %180
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %8, %"class.WTF::StringAppend.3228"* nonnull byval(%"class.WTF::StringAppend.3228") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130)
  %183 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %184, align 8
  %185 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %186 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %186, i64 3
  %188 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %187, align 8
  call void %188(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #11
  br label %204

204:                                              ; preds = %182, %200, %203
  %205 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  br i1 %212, label %215, label %217

215:                                              ; preds = %208
  %216 = add i32 %214, -1
  store i32 %216, i32* %213, align 4
  br label %217

217:                                              ; preds = %215, %208
  %218 = phi i32 [ %216, %215 ], [ %214, %208 ]
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %217
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %206) #11
  br label %221

221:                                              ; preds = %220, %217, %204
  %222 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #11
  br label %238

238:                                              ; preds = %221, %234, %237
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #11
  br label %254

254:                                              ; preds = %253, %250, %238
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #11
  br label %270

270:                                              ; preds = %254, %266, %269
  %271 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %287, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %274
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %274
  %284 = phi i32 [ %282, %281 ], [ %280, %274 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #11
  br label %287

287:                                              ; preds = %270, %283, %286
  br i1 %30, label %301, label %288

288:                                              ; preds = %287
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %301

301:                                              ; preds = %287, %297, %300
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #11
  br label %317

317:                                              ; preds = %301, %313, %316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  br label %496

318:                                              ; preds = %5
  %319 = tail call double @llvm.trunc.f64(double %0)
  %320 = fcmp olt double %319, %1
  %321 = fcmp ogt double %319, %2
  %322 = or i1 %320, %321
  br i1 %322, label %323, label %498

323:                                              ; preds = %318
  %324 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324) #11
  %325 = bitcast %"class.WTF::StringAppend.3229"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #11
  %326 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #11
  %327 = icmp eq i8* %3, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %323
  %329 = tail call i64 @strlen(i8* nonnull %3) #13
  br label %330

330:                                              ; preds = %323, %328
  %331 = phi i64 [ %329, %328 ], [ 0, %323 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* %3, i64 %331) #11
  %332 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %333, null
  br i1 %334, label %410, label %335

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  br i1 %339, label %342, label %352

342:                                              ; preds = %335
  %343 = zext i32 %341 to i33
  %344 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %343, i33 1) #11
  %345 = extractvalue { i33, i1 } %344, 1
  %346 = extractvalue { i33, i1 } %344, 0
  %347 = icmp slt i33 %346, 0
  %348 = or i1 %345, %347
  br i1 %348, label %349, label %350, !prof !2

349:                                              ; preds = %342
  call void @llvm.trap() #11
  unreachable

350:                                              ; preds = %342
  %351 = trunc i33 %346 to i32
  store i32 %351, i32* %340, align 4
  br label %352

352:                                              ; preds = %350, %335
  %353 = phi i32 [ %351, %350 ], [ %341, %335 ]
  %354 = load atomic i32, i32* %336 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %367

357:                                              ; preds = %352
  %358 = zext i32 %353 to i33
  %359 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %358, i33 1) #11
  %360 = extractvalue { i33, i1 } %359, 1
  %361 = extractvalue { i33, i1 } %359, 0
  %362 = icmp slt i33 %361, 0
  %363 = or i1 %360, %362
  br i1 %363, label %364, label %365, !prof !2

364:                                              ; preds = %357
  call void @llvm.trap() #11
  unreachable

365:                                              ; preds = %357
  %366 = trunc i33 %361 to i32
  store i32 %366, i32* %340, align 4
  br label %367

367:                                              ; preds = %365, %352
  %368 = phi i32 [ %366, %365 ], [ %353, %352 ]
  %369 = load atomic i32, i32* %336 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %367
  %373 = add i32 %368, -1
  store i32 %373, i32* %340, align 4
  br label %374

374:                                              ; preds = %372, %367
  %375 = phi i32 [ %373, %372 ], [ %368, %367 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %333) #11
  br label %378

378:                                              ; preds = %374, %377
  %379 = load atomic i32, i32* %336 monotonic, align 4, !noalias !21
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = load i32, i32* %340, align 4
  br i1 %381, label %383, label %393

383:                                              ; preds = %378
  %384 = zext i32 %382 to i33
  %385 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %384, i33 1) #11
  %386 = extractvalue { i33, i1 } %385, 1
  %387 = extractvalue { i33, i1 } %385, 0
  %388 = icmp slt i33 %387, 0
  %389 = or i1 %386, %388
  br i1 %389, label %390, label %391, !prof !2

390:                                              ; preds = %383
  call void @llvm.trap() #11, !noalias !21
  unreachable

391:                                              ; preds = %383
  %392 = trunc i33 %387 to i32
  store i32 %392, i32* %340, align 4, !noalias !21
  br label %393

393:                                              ; preds = %378, %391
  %394 = phi i32 [ %392, %391 ], [ %382, %378 ]
  %395 = bitcast %"class.WTF::StringAppend.3229"* %14 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %395, align 8, !alias.scope !21
  %396 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %333, %"class.WTF::StringImpl"** %396, align 8, !alias.scope !21
  %397 = load atomic i32, i32* %336 monotonic, align 4, !noalias !21
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %414

400:                                              ; preds = %393
  %401 = zext i32 %394 to i33
  %402 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %401, i33 1) #11
  %403 = extractvalue { i33, i1 } %402, 1
  %404 = extractvalue { i33, i1 } %402, 0
  %405 = icmp slt i33 %404, 0
  %406 = or i1 %403, %405
  br i1 %406, label %407, label %408, !prof !2

407:                                              ; preds = %400
  call void @llvm.trap() #11, !noalias !21
  unreachable

408:                                              ; preds = %400
  %409 = trunc i33 %404 to i32
  store i32 %409, i32* %340, align 4, !noalias !21
  br label %414

410:                                              ; preds = %330
  %411 = bitcast %"class.WTF::StringAppend.3229"* %14 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.35 to i64), i64* %411, align 8, !alias.scope !21
  %412 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %412, align 8, !alias.scope !21
  %413 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %413, align 8, !alias.scope !21
  br label %426

414:                                              ; preds = %408, %393
  %415 = phi i32 [ %409, %408 ], [ %394, %393 ]
  %416 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %416, align 8, !alias.scope !21
  %417 = load atomic i32, i32* %336 monotonic, align 4, !noalias !21
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %422

420:                                              ; preds = %414
  %421 = add i32 %415, -1
  store i32 %421, i32* %340, align 4, !noalias !21
  br label %422

422:                                              ; preds = %420, %414
  %423 = phi i32 [ %421, %420 ], [ %415, %414 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %333) #11, !noalias !21
  br label %426

426:                                              ; preds = %410, %422, %425
  %427 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3229"* nonnull %14)
  %428 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %427, %"class.WTF::StringImpl"** %428, align 8
  %429 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %430 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %429, align 8
  %431 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %430, i64 3
  %432 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %431, align 8
  call void %432(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %13) #11
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %426
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #11
  br label %448

448:                                              ; preds = %426, %444, %447
  %449 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %449, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %465, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  br i1 %456, label %459, label %461

459:                                              ; preds = %452
  %460 = add i32 %458, -1
  store i32 %460, i32* %457, align 4
  br label %461

461:                                              ; preds = %459, %452
  %462 = phi i32 [ %460, %459 ], [ %458, %452 ]
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %450) #11
  br label %465

465:                                              ; preds = %448, %461, %464
  br i1 %334, label %479, label %466

466:                                              ; preds = %465
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load atomic i32, i32* %467 monotonic, align 4
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  br i1 %470, label %473, label %475

473:                                              ; preds = %466
  %474 = add i32 %472, -1
  store i32 %474, i32* %471, align 4
  br label %475

475:                                              ; preds = %473, %466
  %476 = phi i32 [ %474, %473 ], [ %472, %466 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %333) #11
  br label %479

479:                                              ; preds = %465, %475, %478
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  %481 = icmp eq %"class.WTF::StringImpl"* %480, null
  br i1 %481, label %495, label %482

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %482
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %488, %482 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %480) #11
  br label %495

495:                                              ; preds = %479, %491, %494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #11
  br label %496

496:                                              ; preds = %317, %495
  %497 = phi i8* [ %324, %495 ], [ %21, %317 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %497) #11
  br label %498

498:                                              ; preds = %496, %318
  %499 = phi double [ %319, %318 ], [ 0.000000e+00, %496 ]
  ret double %499
}

declare i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #11
  br i1 %6, label %7, label %14

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %9 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %8) #11
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %60, label %11

11:                                               ; preds = %7
  %12 = icmp eq i32 %2, 2
  br i1 %12, label %13, label %60

13:                                               ; preds = %11
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %60

14:                                               ; preds = %4
  %15 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #11
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %17 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %16) #11
  %18 = icmp eq %"class.v8::Number"* %17, null
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %21 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %22 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %22, i64 5
  %24 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %23, align 8
  call void %24(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %20) #11
  br label %58

25:                                               ; preds = %14
  %26 = icmp eq i32 %2, 2
  %27 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %17) #11
  br i1 %26, label %28, label %31

28:                                               ; preds = %25
  %29 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %27, double 0.000000e+00, double 0x41EFFFFFFFE00000, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %30 = fptoui double %29 to i32
  br label %58

31:                                               ; preds = %25
  %32 = fcmp uno double %27, 0.000000e+00
  br i1 %32, label %58, label %33

33:                                               ; preds = %31
  %34 = icmp eq i32 %2, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = fcmp ult double %27, 0x41EFFFFFFFE00000
  br i1 %36, label %37, label %58

37:                                               ; preds = %35
  %38 = fcmp ugt double %27, 0.000000e+00
  br i1 %38, label %39, label %58

39:                                               ; preds = %37
  %40 = fptoui double %27 to i32
  br label %58

41:                                               ; preds = %33
  %42 = call double @llvm.fabs.f64(double %27) #12
  %43 = fcmp oeq double %42, 0x7FF0000000000000
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.v8::Number"* %17 to %"class.v8::Value"*
  %46 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %47 = call i64 @_ZNK2v85Value11Uint32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %45, %"class.v8::Context"* %46) #11
  %48 = trunc i64 %47 to i8
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i8 %48, 0
  br i1 %51, label %52, label %58, !prof !2

52:                                               ; preds = %44
  %53 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %54 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %55, i64 5
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %56, align 8
  call void %57(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %53) #11
  br label %58

58:                                               ; preds = %52, %44, %39, %37, %35, %31, %41, %28, %19
  %59 = phi i32 [ 0, %19 ], [ %30, %28 ], [ 0, %31 ], [ 0, %41 ], [ %40, %39 ], [ -1, %35 ], [ 0, %37 ], [ 0, %52 ], [ %50, %44 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #11
  br label %60

60:                                               ; preds = %11, %13, %7, %58
  %61 = phi i32 [ %59, %58 ], [ 0, %13 ], [ %9, %7 ], [ 0, %11 ]
  ret i32 %61
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare i64 @_ZNK2v85Value11Uint32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #11
  %7 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %8 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %7) #11
  %9 = icmp eq %"class.v8::Number"* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %12 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %13 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %13, i64 5
  %15 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %14, align 8
  call void %15(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %11) #11
  br label %37

16:                                               ; preds = %4
  %17 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %8) #11
  %18 = icmp eq i32 %2, 2
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %17, double 0xC33FFFFFFFFFFFFF, double 0x433FFFFFFFFFFFFF, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %21 = fptosi double %20 to i64
  br label %37

22:                                               ; preds = %16
  %23 = fcmp uno double %17, 0.000000e+00
  %24 = call double @llvm.fabs.f64(double %17) #12
  %25 = fcmp oeq double %24, 0x7FF0000000000000
  %26 = or i1 %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %22
  %28 = call double @llvm.trunc.f64(double %17) #11
  %29 = call double @fmod(double %28, double 0x43F0000000000000) #11
  %30 = fcmp ult double %29, 0.000000e+00
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = fptoui double %29 to i64
  br label %37

33:                                               ; preds = %27
  %34 = fsub double -0.000000e+00, %29
  %35 = fptoui double %34 to i64
  %36 = sub i64 0, %35
  br label %37

37:                                               ; preds = %33, %31, %22, %19, %10
  %38 = phi i64 [ 0, %10 ], [ %21, %19 ], [ 0, %22 ], [ %32, %31 ], [ %36, %33 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink12ToUInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #11
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %9 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %8) #11
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = sext i32 %9 to i64
  br label %58

13:                                               ; preds = %7
  %14 = icmp eq i32 %2, 2
  br i1 %14, label %15, label %58

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0)) #11
  br label %58

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #11
  %18 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %19 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %18) #11
  %20 = icmp eq %"class.v8::Number"* %19, null
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %23 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %24 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %24, i64 5
  %26 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, align 8
  call void %26(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %22) #11
  br label %56

27:                                               ; preds = %16
  %28 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %19) #11
  %29 = icmp eq i32 %2, 2
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = call fastcc double @_ZN5blinkL12EnforceRangeEdddPKcRNS_14ExceptionStateE(double %28, double 0.000000e+00, double 0x433FFFFFFFFFFFFF, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %32 = fptoui double %31 to i64
  br label %56

33:                                               ; preds = %27
  %34 = fcmp uno double %28, 0.000000e+00
  br i1 %34, label %56, label %35

35:                                               ; preds = %33
  %36 = icmp eq i32 %2, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %35
  %38 = fcmp ugt double %28, 0.000000e+00
  br i1 %38, label %39, label %56

39:                                               ; preds = %37
  %40 = fcmp ult double %28, 0x43F0000000000000
  br i1 %40, label %41, label %56

41:                                               ; preds = %39
  %42 = fptoui double %28 to i64
  br label %56

43:                                               ; preds = %35
  %44 = call double @llvm.fabs.f64(double %28) #12
  %45 = fcmp oeq double %44, 0x7FF0000000000000
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = call double @llvm.trunc.f64(double %28) #11
  %48 = call double @fmod(double %47, double 0x43F0000000000000) #11
  %49 = fcmp ult double %48, 0.000000e+00
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = fptoui double %48 to i64
  br label %56

52:                                               ; preds = %46
  %53 = fsub double -0.000000e+00, %48
  %54 = fptoui double %53 to i64
  %55 = sub i64 0, %54
  br label %56

56:                                               ; preds = %52, %50, %43, %41, %39, %37, %30, %33, %21
  %57 = phi i64 [ 0, %21 ], [ %32, %30 ], [ 0, %33 ], [ %42, %41 ], [ 0, %37 ], [ -1, %39 ], [ 0, %43 ], [ %51, %50 ], [ %55, %52 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #11
  br label %58

58:                                               ; preds = %13, %11, %15, %56
  %59 = phi i64 [ %57, %56 ], [ %12, %11 ], [ 0, %15 ], [ 0, %13 ]
  ret i64 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #11
  br i1 %5, label %6, label %9, !prof !24

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::Value"* %1 to %"class.v8::Number"*
  %8 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %7) #11
  br label %24

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #11
  %11 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %12 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %11) #11
  %13 = icmp eq %"class.v8::Number"* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #11
  %16 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %17 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %17, i64 5
  %19 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, align 8
  call void %19(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %15) #11
  br label %22

20:                                               ; preds = %9
  %21 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %12) #11
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi double [ 0.000000e+00, %14 ], [ %21, %20 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  br label %24

24:                                               ; preds = %6, %22
  %25 = phi double [ %8, %6 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = fcmp ogt double %25, 0x47EFFFFFE0000000
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %29
  %32 = fcmp olt double %25, 0xC7EFFFFFE0000000
  br i1 %32, label %35, label %33, !prof !2

33:                                               ; preds = %31
  %34 = fptrunc double %25 to float
  br label %35

35:                                               ; preds = %29, %31, %33
  %36 = phi float [ 0xFFF0000000000000, %31 ], [ 0x7FF0000000000000, %29 ], [ %34, %33 ]
  %37 = call float @llvm.fabs.f32(float %36) #12
  %38 = fcmp ueq float %37, 0x7FF0000000000000
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i64 0, i64 0)) #11
  br label %40

40:                                               ; preds = %35, %24, %39
  %41 = phi float [ 0.000000e+00, %39 ], [ %36, %35 ], [ 0.000000e+00, %24 ]
  ret float %41
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #11
  %6 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %7 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %6) #11
  %8 = icmp eq %"class.v8::Number"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #11
  %11 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %12 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %12, i64 5
  %14 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %13, align 8
  call void %14(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %10) #11
  br label %17

15:                                               ; preds = %3
  %16 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %7) #11
  br label %17

17:                                               ; preds = %15, %9
  %18 = phi double [ 0.000000e+00, %9 ], [ %16, %15 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #11
  ret double %18
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #11
  br i1 %5, label %6, label %9, !prof !24

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::Value"* %1 to %"class.v8::Number"*
  %8 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %7) #11
  br label %24

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #11
  %11 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %12 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %11) #11
  %13 = icmp eq %"class.v8::Number"* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #11
  %16 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %17 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %17, i64 5
  %19 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, align 8
  call void %19(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %15) #11
  br label %22

20:                                               ; preds = %9
  %21 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %12) #11
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi double [ 0.000000e+00, %14 ], [ %21, %20 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  br label %24

24:                                               ; preds = %6, %22
  %25 = phi double [ %8, %6 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = call double @llvm.fabs.f64(double %25) #12
  %31 = fcmp ueq double %30, 0x7FF0000000000000
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0)) #11
  br label %33

33:                                               ; preds = %29, %24, %32
  %34 = phi double [ 0.000000e+00, %32 ], [ 0.000000e+00, %24 ], [ %25, %29 ]
  ret double %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 {
  %2 = alloca i16*, align 8
  %3 = ptrtoint %"class.WTF::StringImpl"* %0 to i64
  %4 = icmp eq %"class.WTF::StringImpl"* %0, null
  br i1 %4, label %143, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %143, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %143

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %17 = add i32 %7, -1
  br label %18

18:                                               ; preds = %38, %14
  %19 = phi i32 [ 0, %14 ], [ %40, %38 ]
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %16, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 63488
  %25 = icmp eq i32 %24, 55296
  br i1 %25, label %26, label %38

26:                                               ; preds = %18
  %27 = and i32 %23, 64512
  %28 = icmp eq i32 %27, 56320
  %29 = icmp eq i32 %19, %17
  %30 = or i1 %29, %28
  br i1 %30, label %42, label %31

31:                                               ; preds = %26
  %32 = add nuw i32 %19, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %16, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = and i16 %35, -1024
  %37 = icmp eq i16 %36, -9216
  br i1 %37, label %38, label %42

38:                                               ; preds = %31, %18
  %39 = phi i32 [ %19, %18 ], [ %32, %31 ]
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, %7
  br i1 %41, label %18, label %143

42:                                               ; preds = %31, %26
  %43 = bitcast i16** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %2, align 8
  %44 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %7, i16** nonnull dereferenceable(8) %2) #11
  %45 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  %53 = bitcast %"class.WTF::StringImpl"* %52 to i16*
  br label %54

54:                                               ; preds = %51, %47, %42
  %55 = phi i16* [ %53, %51 ], [ null, %47 ], [ null, %42 ]
  br label %56

56:                                               ; preds = %54, %86
  %57 = phi i32 [ 0, %54 ], [ %88, %86 ]
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i16, i16* %16, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = and i32 %61, 63488
  %63 = icmp eq i32 %62, 55296
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds i16, i16* %55, i64 %58
  store i16 %60, i16* %65, align 2
  br label %86

66:                                               ; preds = %56
  %67 = and i32 %61, 64512
  %68 = icmp eq i32 %67, 56320
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = getelementptr inbounds i16, i16* %55, i64 %58
  store i16 -3, i16* %70, align 2
  br label %86

71:                                               ; preds = %66
  %72 = icmp eq i32 %57, %17
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = getelementptr inbounds i16, i16* %55, i64 %58
  store i16 -3, i16* %74, align 2
  br label %86

75:                                               ; preds = %71
  %76 = add nuw i32 %57, 1
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i16, i16* %16, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = and i16 %79, -1024
  %81 = icmp eq i16 %80, -9216
  %82 = getelementptr inbounds i16, i16* %55, i64 %58
  br i1 %81, label %83, label %85

83:                                               ; preds = %75
  store i16 %60, i16* %82, align 2
  %84 = getelementptr inbounds i16, i16* %55, i64 %77
  store i16 %79, i16* %84, align 2
  br label %86

85:                                               ; preds = %75
  store i16 -3, i16* %82, align 2
  br label %86

86:                                               ; preds = %83, %85, %69, %73, %64
  %87 = phi i32 [ %57, %69 ], [ %17, %73 ], [ %57, %64 ], [ %76, %83 ], [ %57, %85 ]
  %88 = add i32 %87, 1
  %89 = icmp ult i32 %88, %7
  br i1 %89, label %56, label %90

90:                                               ; preds = %86
  br i1 %46, label %95, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %130

95:                                               ; preds = %91, %90
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %97 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  %98 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #11
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %104
  call void @llvm.trap() #11
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  br label %116

116:                                              ; preds = %95, %99, %114
  br i1 %46, label %130, label %117

117:                                              ; preds = %116
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %130

130:                                              ; preds = %116, %126, %129, %91
  %131 = phi i64 [ %97, %116 ], [ %97, %126 ], [ %97, %129 ], [ %45, %91 ]
  %132 = load atomic i32, i32* %10 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %0) #11
  br label %143

143:                                              ; preds = %38, %1, %5, %9, %139, %142
  %144 = phi i64 [ %131, %139 ], [ %131, %142 ], [ %3, %9 ], [ %3, %5 ], [ %3, %1 ], [ %3, %38 ]
  %145 = inttoptr i64 %144 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %145
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XPathNSResolver"* @_ZN5blink17ToXPathNSResolverEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = bitcast %"class.blink::ScriptState"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 8
  %6 = inttoptr i64 %5 to %"class.blink::V8PerIsolateData"**
  %7 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %6, align 8
  %8 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %7, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8XPathNSResolver18wrapper_type_info_E, %"class.v8::Value"* %1) #11
  br i1 %8, label %9, label %31

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Value"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i64 %11, -4294967296
  %16 = zext i32 %14 to i64
  %17 = or i64 %15, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load i16, i16* %19, align 2
  switch i16 %20, label %25 [
    i16 1057, label %21
    i16 1056, label %21
    i16 1040, label %21
  ]

21:                                               ; preds = %9, %9, %9
  %22 = add i64 %11, 19
  %23 = inttoptr i64 %22 to i8**
  %24 = load i8*, i8** %23, align 1
  br label %28

25:                                               ; preds = %9
  %26 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %27 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %26, i32 1) #11
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi i8* [ %24, %21 ], [ %27, %25 ]
  %30 = bitcast i8* %29 to %"class.blink::XPathNSResolver"*
  br label %42

31:                                               ; preds = %2
  %32 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #11
  br i1 %32, label %33, label %42

33:                                               ; preds = %31
  %34 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %35 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #11
  %36 = bitcast i8* %35 to %"class.blink::V8CustomXPathNSResolver"*
  tail call void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"* %36, %"class.blink::ScriptState"* %0, %"class.v8::Object"* %34) #11
  %37 = getelementptr inbounds i8, i8* %35, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = bitcast i8* %35 to %"class.blink::XPathNSResolver"*
  br label %42

42:                                               ; preds = %31, %33, %28
  %43 = phi %"class.blink::XPathNSResolver"* [ %30, %28 ], [ %41, %33 ], [ null, %31 ]
  ret %"class.blink::XPathNSResolver"* %43
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %4 = add i64 %3, 8
  %5 = inttoptr i64 %4 to %"class.blink::V8PerIsolateData"**
  %6 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %5, align 8
  %7 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %6, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Window18wrapper_type_info_E, %"class.v8::Value"* %1) #11
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::Value"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %10, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  switch i16 %19, label %24 [
    i16 1057, label %20
    i16 1056, label %20
    i16 1040, label %20
  ]

20:                                               ; preds = %8, %8, %8
  %21 = add i64 %10, 19
  %22 = inttoptr i64 %21 to i8**
  %23 = load i8*, i8** %22, align 1
  br label %27

24:                                               ; preds = %8
  %25 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %26 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %25, i32 1) #11
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi i8* [ %23, %20 ], [ %26, %24 ]
  %29 = bitcast i8* %28 to %"class.blink::DOMWindow"*
  br label %30

30:                                               ; preds = %2, %27
  %31 = phi %"class.blink::DOMWindow"* [ %29, %27 ], [ null, %2 ]
  ret %"class.blink::DOMWindow"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalDOMWindow"* @_ZN5blink16ToLocalDOMWindowEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.v8::Context"* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %0) #11
  %5 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* nonnull %0) #11
  %6 = bitcast %"class.v8::Object"* %5 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %4 to i64
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to %"class.blink::V8PerIsolateData"**
  %10 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %10, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Window18wrapper_type_info_E, %"class.v8::Value"* %6) #11
  br i1 %11, label %12, label %33

12:                                               ; preds = %3
  %13 = bitcast %"class.v8::Object"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %14, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  switch i16 %23, label %28 [
    i16 1057, label %24
    i16 1056, label %24
    i16 1040, label %24
  ]

24:                                               ; preds = %12, %12, %12
  %25 = add i64 %14, 19
  %26 = inttoptr i64 %25 to i8**
  %27 = load i8*, i8** %26, align 1
  br label %30

28:                                               ; preds = %12
  %29 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #11
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi i8* [ %27, %24 ], [ %29, %28 ]
  %32 = bitcast i8* %31 to %"class.blink::LocalDOMWindow"*
  br label %33

33:                                               ; preds = %30, %3, %1
  %34 = phi %"class.blink::LocalDOMWindow"* [ null, %1 ], [ %32, %30 ], [ null, %3 ]
  ret %"class.blink::LocalDOMWindow"* %34
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalDOMWindow"* @_ZN5blink16EnteredDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = tail call %"class.v8::Context"* @_ZN2v87Isolate28GetEnteredOrMicrotaskContextEv(%"class.v8::Isolate"* %0) #11
  %3 = icmp eq %"class.v8::Context"* %2, null
  br i1 %3, label %34, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %2) #11
  %6 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* nonnull %2) #11
  %7 = bitcast %"class.v8::Object"* %6 to %"class.v8::Value"*
  %8 = ptrtoint %"class.v8::Isolate"* %5 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %11, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Window18wrapper_type_info_E, %"class.v8::Value"* %7) #11
  br i1 %12, label %13, label %34

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::Object"* %6 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %15, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  switch i16 %24, label %29 [
    i16 1057, label %25
    i16 1056, label %25
    i16 1040, label %25
  ]

25:                                               ; preds = %13, %13, %13
  %26 = add i64 %15, 19
  %27 = inttoptr i64 %26 to i8**
  %28 = load i8*, i8** %27, align 1
  br label %31

29:                                               ; preds = %13
  %30 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #11
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi i8* [ %28, %25 ], [ %30, %29 ]
  %33 = bitcast i8* %32 to %"class.blink::LocalDOMWindow"*
  br label %34

34:                                               ; preds = %1, %4, %31
  %35 = phi %"class.blink::LocalDOMWindow"* [ null, %1 ], [ %33, %31 ], [ null, %4 ]
  ret %"class.blink::LocalDOMWindow"* %35
}

declare %"class.v8::Context"* @_ZN2v87Isolate28GetEnteredOrMicrotaskContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalDOMWindow"* @_ZN5blink18IncumbentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = tail call %"class.v8::Context"* @_ZN2v87Isolate19GetIncumbentContextEv(%"class.v8::Isolate"* %0) #11
  %3 = icmp eq %"class.v8::Context"* %2, null
  br i1 %3, label %34, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %2) #11
  %6 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* nonnull %2) #11
  %7 = bitcast %"class.v8::Object"* %6 to %"class.v8::Value"*
  %8 = ptrtoint %"class.v8::Isolate"* %5 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %11, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Window18wrapper_type_info_E, %"class.v8::Value"* %7) #11
  br i1 %12, label %13, label %34

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::Object"* %6 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %15, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  switch i16 %24, label %29 [
    i16 1057, label %25
    i16 1056, label %25
    i16 1040, label %25
  ]

25:                                               ; preds = %13, %13, %13
  %26 = add i64 %15, 19
  %27 = inttoptr i64 %26 to i8**
  %28 = load i8*, i8** %27, align 1
  br label %31

29:                                               ; preds = %13
  %30 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #11
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi i8* [ %28, %25 ], [ %30, %29 ]
  %33 = bitcast i8* %32 to %"class.blink::LocalDOMWindow"*
  br label %34

34:                                               ; preds = %1, %4, %31
  %35 = phi %"class.blink::LocalDOMWindow"* [ null, %1 ], [ %33, %31 ], [ null, %4 ]
  ret %"class.blink::LocalDOMWindow"* %35
}

declare %"class.v8::Context"* @_ZN2v87Isolate19GetIncumbentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalDOMWindow"* @_ZN5blink16CurrentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %3 = icmp eq %"class.v8::Context"* %2, null
  br i1 %3, label %34, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %2) #11
  %6 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* nonnull %2) #11
  %7 = bitcast %"class.v8::Object"* %6 to %"class.v8::Value"*
  %8 = ptrtoint %"class.v8::Isolate"* %5 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %11, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Window18wrapper_type_info_E, %"class.v8::Value"* %7) #11
  br i1 %12, label %13, label %34

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::Object"* %6 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %15, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  switch i16 %24, label %29 [
    i16 1057, label %25
    i16 1056, label %25
    i16 1040, label %25
  ]

25:                                               ; preds = %13, %13, %13
  %26 = add i64 %15, 19
  %27 = inttoptr i64 %26 to i8**
  %28 = load i8*, i8** %27, align 1
  br label %31

29:                                               ; preds = %13
  %30 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #11
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi i8* [ %28, %25 ], [ %30, %29 ]
  %33 = bitcast i8* %32 to %"class.blink::LocalDOMWindow"*
  br label %34

34:                                               ; preds = %1, %4, %31
  %35 = phi %"class.blink::LocalDOMWindow"* [ null, %1 ], [ %33, %31 ], [ null, %4 ]
  ret %"class.blink::LocalDOMWindow"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.absl::optional.2862", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq %"class.v8::Context"* %0, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.18, i64 0, i64 0), i32 672, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0)) #11
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  %12 = bitcast %"class.absl::optional.2862"* %3 to i64*
  store i64 -6148914691236517206, i64* %12, align 8
  store i8 0, i8* %11, align 8
  %13 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon.2866* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false) #11
  %15 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %41, label %17, !prof !24

17:                                               ; preds = %10
  %18 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #11
  %19 = call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %18) #11
  %20 = load i8, i8* %11, align 8, !range !25
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %26 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %25) #11
  %27 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %24, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %26, %"class.blink::RuntimeCallTimer"** %27, align 8
  store i8 0, i8* %11, align 8
  br label %28

28:                                               ; preds = %17, %22
  %29 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %19, %"class.blink::RuntimeCallStats"** %29, align 8
  %30 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %31 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %19, i64 0, i32 3
  %32 = bitcast %"class.base::TickClock"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %36 = bitcast i64* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  %37 = bitcast %"class.base::TickClock"** %35 to i64*
  store i64 %33, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %19, i64 0, i32 2, i64 3
  %39 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %19, i64 0, i32 0
  %40 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %39, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %30, %"class.blink::RuntimeCallCounter"* %38, %"class.blink::RuntimeCallTimer"* %40) #11
  store %"class.blink::RuntimeCallTimer"* %30, %"class.blink::RuntimeCallTimer"** %39, align 8
  store i8 1, i8* %11, align 8
  br label %41

41:                                               ; preds = %10, %28
  %42 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %0) #11
  %43 = icmp eq %"class.v8::Object"* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.18, i64 0, i64 0), i32 681, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)) #11
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  br label %47

47:                                               ; preds = %41, %44
  %48 = bitcast %"class.v8::Object"* %42 to %"class.v8::Value"*
  %49 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %48) #11
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.18, i64 0, i64 0), i32 682, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0)) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %47, %50
  %54 = call i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"* %42) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %165, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.v8::Object"* %42 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %58, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  switch i16 %67, label %72 [
    i16 1057, label %68
    i16 1056, label %68
    i16 1040, label %68
  ]

68:                                               ; preds = %56, %56, %56
  %69 = add i64 %58, 11
  %70 = inttoptr i64 %69 to i8**
  %71 = load i8*, i8** %70, align 1
  br label %74

72:                                               ; preds = %56
  %73 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %42, i32 0) #11
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi i8* [ %71, %68 ], [ %73, %72 ]
  %76 = bitcast i8* %75 to %"struct.blink::WrapperTypeInfo"*
  %77 = icmp eq i8* %75, bitcast (%"struct.blink::WrapperTypeInfo"* @_ZN5blink8V8Window18wrapper_type_info_E to i8*)
  br i1 %77, label %78, label %103

78:                                               ; preds = %74
  %79 = load i64, i64* %57, align 8
  %80 = add i64 %79, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %79, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  switch i16 %88, label %93 [
    i16 1057, label %89
    i16 1056, label %89
    i16 1040, label %89
  ]

89:                                               ; preds = %78, %78, %78
  %90 = add i64 %79, 19
  %91 = inttoptr i64 %90 to i8**
  %92 = load i8*, i8** %91, align 1
  br label %95

93:                                               ; preds = %78
  %94 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %42, i32 1) #11
  br label %95

95:                                               ; preds = %89, %93
  %96 = phi i8* [ %92, %89 ], [ %94, %93 ]
  %97 = bitcast i8* %96 to %"class.blink::EventTarget"*
  %98 = bitcast i8* %96 to %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)***
  %99 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %99, i64 10
  %101 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %100, align 8
  %102 = call %"class.blink::ExecutionContext"* %101(%"class.blink::EventTarget"* %97) #11
  br label %165

103:                                              ; preds = %74
  %104 = icmp eq i8* %75, null
  br i1 %104, label %165, label %105

105:                                              ; preds = %103, %108
  %106 = phi %"struct.blink::WrapperTypeInfo"* [ %110, %108 ], [ %76, %103 ]
  %107 = icmp eq %"struct.blink::WrapperTypeInfo"* %106, @_ZN5blink19V8WorkerGlobalScope18wrapper_type_info_E
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %106, i64 0, i32 4
  %110 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %109, align 8
  %111 = icmp eq %"struct.blink::WrapperTypeInfo"* %110, null
  br i1 %111, label %133, label %105

112:                                              ; preds = %105
  %113 = load i64, i64* %57, align 8
  %114 = add i64 %113, -1
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i64 %113, -4294967296
  %118 = zext i32 %116 to i64
  %119 = or i64 %117, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load i16, i16* %121, align 2
  switch i16 %122, label %127 [
    i16 1057, label %123
    i16 1056, label %123
    i16 1040, label %123
  ]

123:                                              ; preds = %112, %112, %112
  %124 = add i64 %113, 19
  %125 = inttoptr i64 %124 to i8**
  %126 = load i8*, i8** %125, align 1
  br label %129

127:                                              ; preds = %112
  %128 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %42, i32 1) #11
  br label %129

129:                                              ; preds = %123, %127
  %130 = phi i8* [ %126, %123 ], [ %128, %127 ]
  %131 = bitcast i8* %130 to %"class.blink::WorkerGlobalScope"*
  %132 = call %"class.blink::ExecutionContext"* @_ZNK5blink17WorkerGlobalScope19GetExecutionContextEv(%"class.blink::WorkerGlobalScope"* %131) #11
  br label %165

133:                                              ; preds = %108, %136
  %134 = phi %"struct.blink::WrapperTypeInfo"* [ %138, %136 ], [ %76, %108 ]
  %135 = icmp eq %"struct.blink::WrapperTypeInfo"* %134, @_ZN5blink20V8WorkletGlobalScope18wrapper_type_info_E
  br i1 %135, label %140, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %134, i64 0, i32 4
  %138 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %137, align 8
  %139 = icmp eq %"struct.blink::WrapperTypeInfo"* %138, null
  br i1 %139, label %165, label %133

140:                                              ; preds = %133
  %141 = load i64, i64* %57, align 8
  %142 = add i64 %141, -1
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i64 %141, -4294967296
  %146 = zext i32 %144 to i64
  %147 = or i64 %145, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load i16, i16* %149, align 2
  switch i16 %150, label %155 [
    i16 1057, label %151
    i16 1056, label %151
    i16 1040, label %151
  ]

151:                                              ; preds = %140, %140, %140
  %152 = add i64 %141, 19
  %153 = inttoptr i64 %152 to i8**
  %154 = load i8*, i8** %153, align 1
  br label %157

155:                                              ; preds = %140
  %156 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %42, i32 1) #11
  br label %157

157:                                              ; preds = %151, %155
  %158 = phi i8* [ %154, %151 ], [ %156, %155 ]
  %159 = bitcast i8* %158 to %"class.blink::WorkletGlobalScope"*
  %160 = bitcast i8* %158 to %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)***
  %161 = load %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)**, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)** %161, i64 10
  %163 = load %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)** %162, align 8
  %164 = call %"class.blink::ExecutionContext"* %163(%"class.blink::WorkletGlobalScope"* %159) #11
  br label %165

165:                                              ; preds = %136, %103, %95, %129, %157, %53
  %166 = phi %"class.blink::ExecutionContext"* [ null, %53 ], [ %102, %95 ], [ %132, %129 ], [ %164, %157 ], [ null, %103 ], [ null, %136 ]
  %167 = load i8, i8* %11, align 8, !range !25
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %175, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %171 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %170, align 8
  %172 = getelementptr inbounds %"class.absl::optional.2862", %"class.absl::optional.2862"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %173 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %172) #11
  %174 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %171, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %173, %"class.blink::RuntimeCallTimer"** %174, align 8
  store i8 0, i8* %11, align 8
  br label %175

175:                                              ; preds = %165, %169
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  ret %"class.blink::ExecutionContext"* %166
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink17WorkerGlobalScope19GetExecutionContextEv(%"class.blink::WorkerGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %3 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %2)
  ret %"class.blink::ExecutionContext"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalFrame"* @_ZN5blink25ToLocalFrameIfNotDetachedEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.v8::Context"* %0, null
  br i1 %2, label %40, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %0) #11
  %5 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* nonnull %0) #11
  %6 = bitcast %"class.v8::Object"* %5 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %4 to i64
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to %"class.blink::V8PerIsolateData"**
  %10 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %10, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Window18wrapper_type_info_E, %"class.v8::Value"* %6) #11
  br i1 %11, label %12, label %40

12:                                               ; preds = %3
  %13 = bitcast %"class.v8::Object"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %14, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  switch i16 %23, label %28 [
    i16 1057, label %24
    i16 1056, label %24
    i16 1040, label %24
  ]

24:                                               ; preds = %12, %12, %12
  %25 = add i64 %14, 19
  %26 = inttoptr i64 %25 to i8**
  %27 = load i8*, i8** %26, align 1
  br label %30

28:                                               ; preds = %12
  %29 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #11
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi i8* [ %27, %24 ], [ %29, %28 ]
  %32 = icmp eq i8* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = bitcast i8* %31 to %"class.blink::DOMWindow"*
  %35 = tail call zeroext i1 @_ZNK5blink9DOMWindow27IsCurrentlyDisplayedInFrameEv(%"class.blink::DOMWindow"* nonnull %34) #11
  br i1 %35, label %36, label %40

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %31, i64 72
  %38 = bitcast i8* %37 to %"class.blink::LocalFrame"**
  %39 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %38, align 8
  br label %40

40:                                               ; preds = %3, %1, %33, %30, %36
  %41 = phi %"class.blink::LocalFrame"* [ %39, %36 ], [ null, %30 ], [ null, %33 ], [ null, %1 ], [ null, %3 ]
  ret %"class.blink::LocalFrame"* %41
}

declare zeroext i1 @_ZNK5blink9DOMWindow27IsCurrentlyDisplayedInFrameEv(%"class.blink::DOMWindow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25ToFlexibleArrayBufferViewEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_23FlexibleArrayBufferViewE(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Value"*, %"class.blink::FlexibleArrayBufferView"* dereferenceable(88)) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %1) #11
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.blink::FlexibleArrayBufferView"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  br label %20

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to %"class.v8::ArrayBufferView"*
  %9 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %8) #11
  %10 = icmp ult i64 %9, 65
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %2, i64 0, i32 3, i64 0
  %13 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %8, i8* %12, i64 %9) #11
  %14 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %2, i64 0, i32 1
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %2, i64 0, i32 2
  store i64 %9, i64* %15, align 8
  br label %20

16:                                               ; preds = %7
  %17 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %18 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %17) #11
  %19 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %2, i64 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %18, %"class.blink::DOMArrayBufferView"** %19, align 8
  br label %20

20:                                               ; preds = %16, %11, %5
  ret void
}

declare zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %3, label %55, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %6 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %6, i64 1
  %8 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %9, label %10, label %20

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, i32* %11, i64 18
  %15 = bitcast i32* %14 to %"class.blink::LocalFrame"**
  %16 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %15, align 8
  %17 = icmp eq %"class.blink::LocalFrame"* %16, null
  br i1 %17, label %55, label %18

18:                                               ; preds = %13
  %19 = tail call %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* nonnull %16, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1)
  br label %55

20:                                               ; preds = %10, %4
  %21 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %21, i64 3
  %23 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %26, i64 4
  %28 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %29, label %30, label %55

30:                                               ; preds = %20, %25
  %31 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 22
  %32 = icmp eq %"class.blink::DOMTimerCoordinator"* %31, null
  br i1 %32, label %55, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %31, i64 17
  %35 = bitcast %"class.blink::DOMTimerCoordinator"* %34 to %"class.blink::WorkerOrWorkletScriptController"**
  %36 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %35, align 8
  %37 = icmp eq %"class.blink::WorkerOrWorkletScriptController"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %36, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.v8::Context"*, %"class.v8::Context"** %41, align 8
  %43 = icmp eq %"class.v8::Context"* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %40, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %45, align 8
  %47 = icmp eq %"class.blink::V8PerContextData"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.blink::ScriptState"* %40 to %"class.v8::internal::Isolate"**
  %50 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %51 = bitcast %"class.v8::Context"* %42 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %50, i64 %52) #11
  %54 = bitcast i64* %53 to %"class.v8::Context"*
  br label %55

55:                                               ; preds = %44, %38, %33, %2, %25, %30, %13, %18, %48
  %56 = phi %"class.v8::Context"* [ %54, %48 ], [ %19, %18 ], [ null, %13 ], [ null, %30 ], [ null, %25 ], [ null, %2 ], [ null, %33 ], [ null, %44 ], [ null, %38 ]
  ret %"class.v8::Context"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::LocalFrame"* %0, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK5blink10LocalFrame13IsProvisionalEv(%"class.blink::LocalFrame"* nonnull %0) #11
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = notail call zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() #11
  br label %43

8:                                                ; preds = %4
  %9 = tail call %"class.blink::LocalWindowProxy"* @_ZN5blink10LocalFrame11WindowProxyERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* nonnull %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #11
  %10 = getelementptr inbounds %"class.blink::LocalWindowProxy", %"class.blink::LocalWindowProxy"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = icmp eq %"class.blink::ScriptState"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.v8::Context"*, %"class.v8::Context"** %14, align 8
  %16 = icmp eq %"class.v8::Context"* %15, null
  br i1 %16, label %43, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::ScriptState"* %11 to %"class.v8::internal::Isolate"**
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %20 = bitcast %"class.v8::Context"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %19, i64 %21) #11
  %23 = icmp eq i64* %22, null
  br i1 %23, label %43, label %24

24:                                               ; preds = %17
  %25 = bitcast i64* %22 to %"class.v8::Context"*
  %26 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* nonnull %25) #11
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.v8::Context"*, %"class.v8::Context"** %27, align 8
  %29 = icmp eq %"class.v8::Context"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %31, align 8
  %33 = icmp eq %"class.blink::V8PerContextData"* %32, null
  %34 = icmp eq %"class.blink::ScriptState"* %26, null
  %35 = or i1 %34, %33
  br i1 %35, label %43, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::ScriptState"* %26 to %"class.v8::internal::Isolate"**
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  %39 = bitcast %"class.v8::Context"* %28 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %38, i64 %40) #11
  %42 = bitcast i64* %41 to %"class.v8::Context"*
  br label %43

43:                                               ; preds = %30, %8, %13, %6, %2, %17, %24, %36
  %44 = phi %"class.v8::Context"* [ %42, %36 ], [ null, %24 ], [ null, %17 ], [ null, %2 ], [ null, %6 ], [ null, %13 ], [ null, %8 ], [ null, %30 ]
  ret %"class.v8::Context"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZN5blink25ToV8ContextEvenIfDetachedEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZNK5blink10LocalFrame13IsProvisionalEv(%"class.blink::LocalFrame"* %0) #11
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = notail call zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() #11
  br label %22

6:                                                ; preds = %2
  %7 = tail call %"class.blink::LocalWindowProxy"* @_ZN5blink10LocalFrame11WindowProxyERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #11
  %8 = getelementptr inbounds %"class.blink::LocalWindowProxy", %"class.blink::LocalWindowProxy"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %8, align 8
  %10 = icmp eq %"class.blink::ScriptState"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::ScriptState"* %9 to %"class.v8::internal::Isolate"**
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = bitcast %"class.v8::Context"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %17, i64 %19) #11
  %21 = bitcast i64* %20 to %"class.v8::Context"*
  br label %22

22:                                               ; preds = %15, %11, %6, %4
  %23 = phi %"class.v8::Context"* [ null, %4 ], [ %21, %15 ], [ null, %11 ], [ null, %6 ]
  ret %"class.v8::Context"* %23
}

declare zeroext i1 @_ZNK5blink10LocalFrame13IsProvisionalEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() local_unnamed_addr #1

declare %"class.blink::LocalWindowProxy"* @_ZN5blink10LocalFrame11WindowProxyERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %6 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %6, i64 1
  %8 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %9, label %10, label %20

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, i32* %11, i64 18
  %15 = bitcast i32* %14 to %"class.blink::LocalFrame"**
  %16 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %15, align 8
  %17 = icmp eq %"class.blink::LocalFrame"* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %13
  %19 = tail call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* nonnull %16, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1)
  br label %41

20:                                               ; preds = %10, %4
  %21 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %21, i64 3
  %23 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %26, i64 4
  %28 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %29, label %30, label %41

30:                                               ; preds = %20, %25
  %31 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 22
  %32 = icmp eq %"class.blink::DOMTimerCoordinator"* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %31, i64 17
  %35 = bitcast %"class.blink::DOMTimerCoordinator"* %34 to %"class.blink::WorkerOrWorkletScriptController"**
  %36 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %35, align 8
  %37 = icmp eq %"class.blink::WorkerOrWorkletScriptController"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %36, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %39, align 8
  br label %41

41:                                               ; preds = %33, %2, %25, %30, %13, %18, %38
  %42 = phi %"class.blink::ScriptState"* [ %19, %18 ], [ %40, %38 ], [ null, %13 ], [ null, %30 ], [ null, %25 ], [ null, %2 ], [ null, %33 ]
  ret %"class.blink::ScriptState"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::HandleScope", align 8
  %4 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 0, i32 10, i32 0, i32 0
  %6 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = load %"class.blink::WindowProxyManager"*, %"class.blink::WindowProxyManager"** %5, align 8
  %8 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %7, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %3, %"class.v8::Isolate"* %9) #11
  %10 = icmp eq %"class.blink::LocalFrame"* %0, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %2
  %12 = call zeroext i1 @_ZNK5blink10LocalFrame13IsProvisionalEv(%"class.blink::LocalFrame"* nonnull %0) #11
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = notail call zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() #11
  br label %42

15:                                               ; preds = %11
  %16 = call %"class.blink::LocalWindowProxy"* @_ZN5blink10LocalFrame11WindowProxyERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* nonnull %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #11
  %17 = getelementptr inbounds %"class.blink::LocalWindowProxy", %"class.blink::LocalWindowProxy"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %17, align 8
  %19 = icmp eq %"class.blink::ScriptState"* %18, null
  br i1 %19, label %42, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %21, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::ScriptState"* %18 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #11
  %30 = icmp eq i64* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %24
  %32 = bitcast i64* %29 to %"class.v8::Context"*
  %33 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* nonnull %32) #11
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.v8::Context"*, %"class.v8::Context"** %34, align 8
  %36 = icmp eq %"class.v8::Context"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %38, align 8
  %40 = icmp eq %"class.blink::V8PerContextData"* %39, null
  %41 = select i1 %40, %"class.blink::ScriptState"* null, %"class.blink::ScriptState"* %33
  br label %42

42:                                               ; preds = %15, %20, %13, %2, %24, %31, %37
  %43 = phi %"class.blink::ScriptState"* [ %41, %37 ], [ null, %31 ], [ null, %24 ], [ null, %2 ], [ null, %13 ], [ null, %20 ], [ null, %15 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret %"class.blink::ScriptState"* %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::Isolate"* @_ZN5blink9ToIsolateEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::WindowProxyManager"*, %"class.blink::WindowProxyManager"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %3, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  ret %"class.v8::Isolate"* %5
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #0 {
  %2 = tail call dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() #11
  %3 = tail call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %2)
  ret %"class.blink::ScriptState"* %3
}

declare dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nocapture readonly dereferenceable(8), i8** nocapture readonly, i64, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %6 = alloca %"class.WTF::StringAppend.3228", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.3228", align 8
  %10 = alloca %"class.WTF::StringAppend.3229", align 8
  %11 = icmp eq i64 %2, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  br label %16

14:                                               ; preds = %16
  %15 = icmp eq i64 %22, %2
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %12
  %17 = phi i64 [ 0, %12 ], [ %22, %14 ]
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %19 = getelementptr inbounds i8*, i8** %1, i64 %17
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"* %18, i8* %20) #11
  %22 = add nuw i64 %17, 1
  br i1 %21, label %316, label %14

23:                                               ; preds = %14, %5
  %24 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = bitcast %"class.WTF::StringAppend.3228"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #11
  %27 = bitcast %"class.WTF::StringAppend.3229"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %106, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %38
  tail call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = zext i32 %49 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #11
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %53
  tail call void @llvm.trap() #11
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %36, align 4
  br label %63

63:                                               ; preds = %61, %48
  %64 = phi i32 [ %62, %61 ], [ %49, %48 ]
  %65 = load atomic i32, i32* %32 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  store i32 %69, i32* %36, align 4
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %63 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %74

74:                                               ; preds = %70, %73
  %75 = load atomic i32, i32* %32 monotonic, align 4, !noalias !26
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = load i32, i32* %36, align 4
  br i1 %77, label %79, label %89

79:                                               ; preds = %74
  %80 = zext i32 %78 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #11
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %79
  tail call void @llvm.trap() #11, !noalias !26
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %36, align 4, !noalias !26
  br label %89

89:                                               ; preds = %74, %87
  %90 = phi i32 [ %88, %87 ], [ %78, %74 ]
  %91 = bitcast %"class.WTF::StringAppend.3229"* %10 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.22 to i64), i64* %91, align 8, !alias.scope !26
  %92 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %92, align 8, !alias.scope !26
  %93 = load atomic i32, i32* %32 monotonic, align 4, !noalias !26
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %89
  %97 = zext i32 %90 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #11
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %96
  tail call void @llvm.trap() #11, !noalias !26
  unreachable

104:                                              ; preds = %96
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %36, align 4, !noalias !26
  br label %110

106:                                              ; preds = %23
  %107 = bitcast %"class.WTF::StringAppend.3229"* %10 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.22 to i64), i64* %107, align 8, !alias.scope !26
  %108 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8, !alias.scope !26
  %109 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i64 0, i64 0), i8** %109, align 8, !alias.scope !26
  br label %122

110:                                              ; preds = %104, %89
  %111 = phi i32 [ %105, %104 ], [ %90, %89 ]
  %112 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i64 0, i64 0), i8** %112, align 8, !alias.scope !26
  %113 = load atomic i32, i32* %32 monotonic, align 4, !noalias !26
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = add i32 %111, -1
  store i32 %117, i32* %36, align 4, !noalias !26
  br label %118

118:                                              ; preds = %116, %110
  %119 = phi i32 [ %117, %116 ], [ %111, %110 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11, !noalias !26
  br label %122

122:                                              ; preds = %106, %118, %121
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #11
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !2

140:                                              ; preds = %131
  tail call void @llvm.trap() #11
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %122, %126, %141
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3228"* nonnull sret %9, %"class.WTF::StringAppend.3229"* nonnull dereferenceable(24) %10, %"class.WTF::StringImpl"* %124)
  %144 = bitcast %"class.WTF::StringAppend.3228"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144)
  %145 = bitcast %"class.WTF::StringAppend.3228"* %9 to i64*
  %146 = load i64, i64* %145, align 8, !noalias !29
  %147 = bitcast %"class.WTF::StringAppend.3228"* %6 to i64*
  store i64 %146, i64* %147, align 8, !noalias !29
  %148 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8, !noalias !29
  %150 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8, !noalias !29
  %151 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %151, label %169, label %152

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %169

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i33
  %161 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %160, i33 1) #11
  %162 = extractvalue { i33, i1 } %161, 1
  %163 = extractvalue { i33, i1 } %161, 0
  %164 = icmp slt i33 %163, 0
  %165 = or i1 %162, %164
  br i1 %165, label %166, label %167, !prof !2

166:                                              ; preds = %157
  call void @llvm.trap() #11
  unreachable

167:                                              ; preds = %157
  %168 = trunc i33 %163 to i32
  store i32 %168, i32* %158, align 4
  br label %169

169:                                              ; preds = %167, %152, %143
  %170 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %6, i64 0, i32 0, i32 1
  %171 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %9, i64 0, i32 0, i32 1
  %172 = bitcast i8** %171 to i64*
  %173 = load i64, i64* %172, align 8, !noalias !29
  %174 = bitcast i8** %170 to i64*
  store i64 %173, i64* %174, align 8, !noalias !29
  %175 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %9, i64 0, i32 1, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8, !noalias !29
  %177 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %177, align 8, !noalias !29
  %178 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %178, label %196, label %179

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i33
  %188 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #11
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !2

193:                                              ; preds = %184
  call void @llvm.trap() #11
  unreachable

194:                                              ; preds = %184
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %185, align 4
  br label %196

196:                                              ; preds = %169, %179, %194
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %8, %"class.WTF::StringAppend.3228"* nonnull byval(%"class.WTF::StringAppend.3228") align 8 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144)
  %197 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %198, align 8
  %199 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %200 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %200, i64 3
  %202 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %201, align 8
  call void %202(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %196
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #11
  br label %218

218:                                              ; preds = %196, %214, %217
  %219 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #11
  br label %235

235:                                              ; preds = %234, %231, %218
  %236 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #11
  br label %252

252:                                              ; preds = %235, %248, %251
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #11
  br label %268

268:                                              ; preds = %267, %264, %252
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #11
  br label %284

284:                                              ; preds = %268, %280, %283
  %285 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #11
  br label %301

301:                                              ; preds = %284, %297, %300
  br i1 %30, label %315, label %302

302:                                              ; preds = %301
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %315

315:                                              ; preds = %301, %311, %314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %316

316:                                              ; preds = %16, %315
  %317 = phi i1 [ false, %315 ], [ true, %16 ]
  ret i1 %317
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3228"* noalias sret, %"class.WTF::StringAppend.3229"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.3229", align 8
  %5 = bitcast %"class.WTF::StringAppend.3229"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.3229"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3228"* %0, %"class.WTF::StringAppend.3229"* nonnull byval(%"class.WTF::StringAppend.3229") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3228"* %0, %"class.WTF::StringAppend.3229"* nonnull byval(%"class.WTF::StringAppend.3229") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.3379"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #11
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %3, i8* %15) #11
  %16 = bitcast %"class.WTF::StringTypeAdapter.3379"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #11
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %2, i8* %18) #11
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #11
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #11
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #11
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6VectorINS0_6StringELj0ENS0_18PartitionAllocatorEEEPKPKcmRKS2_RNS_14ExceptionStateE(%"class.WTF::Vector.1245"* nocapture readonly dereferenceable(16), i8** nocapture readonly, i64, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %58, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %14, %55
  %18 = phi %"class.WTF::String"* [ %8, %14 ], [ %56, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %16, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #11
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %41

39:                                               ; preds = %17
  %40 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %6, i8** %1, i64 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br i1 %40, label %55, label %58

41:                                               ; preds = %22, %37
  %42 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %6, i8** %1, i64 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %43 = load atomic i32, i32* %23 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br i1 %42, label %55, label %58

54:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br i1 %42, label %55, label %58

55:                                               ; preds = %53, %39, %54
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %57 = icmp eq %"class.WTF::String"* %56, %12
  br i1 %57, label %58, label %17

58:                                               ; preds = %55, %54, %39, %53, %5
  %59 = phi i1 [ true, %5 ], [ false, %53 ], [ false, %39 ], [ false, %54 ], [ true, %55 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Function"* @_ZN5blink19GetEsIteratorMethodEPN2v87IsolateENS0_5LocalINS0_6ObjectEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = tail call %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"* %0) #11
  %6 = bitcast %"class.v8::Symbol"* %5 to %"class.v8::Value"*
  %7 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #11
  %8 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %9 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %8, %"class.v8::Value"* %6) #11
  %10 = icmp eq %"class.v8::Value"* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #11
  %13 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %14, i64 5
  %16 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %15, align 8
  call void %16(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %12) #11
  br label %43

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::Value"* %9 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %43
    i32 3, label %43
  ]

38:                                               ; preds = %33, %22, %17
  %39 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %9) #11
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i64 0, i64 0)) #11
  br label %43

41:                                               ; preds = %38
  %42 = bitcast %"class.v8::Value"* %9 to %"class.v8::Function"*
  br label %43

43:                                               ; preds = %33, %33, %41, %40, %11
  %44 = phi %"class.v8::Function"* [ %42, %41 ], [ null, %40 ], [ null, %11 ], [ null, %33 ], [ null, %33 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret %"class.v8::Function"* %44
}

declare %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink23GetEsIteratorWithMethodEPN2v87IsolateENS0_5LocalINS0_8FunctionEEENS3_INS0_6ObjectEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Function"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #11
  %7 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %8 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7)
  %9 = bitcast %"class.v8::Object"* %2 to %"class.v8::Value"*
  %10 = call %"class.v8::Value"* @_ZN5blink14V8ScriptRunner12CallFunctionEN2v85LocalINS1_8FunctionEEEPNS_16ExecutionContextENS2_INS1_5ValueEEEiPS8_PNS1_7IsolateE(%"class.v8::Function"* %1, %"class.blink::ExecutionContext"* %8, %"class.v8::Value"* %9, i32 0, %"class.v8::Local.230"* null, %"class.v8::Isolate"* %0) #11
  %11 = icmp eq %"class.v8::Value"* %10, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %14 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %15, i64 5
  %17 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %16, align 8
  call void %17(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %13) #11
  br label %23

18:                                               ; preds = %4
  %19 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %10) #11
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0)) #11
  br label %23

21:                                               ; preds = %18
  %22 = bitcast %"class.v8::Value"* %10 to %"class.v8::Object"*
  br label %23

23:                                               ; preds = %21, %20, %12
  %24 = phi %"class.v8::Object"* [ %22, %21 ], [ null, %20 ], [ null, %12 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret %"class.v8::Object"* %24
}

declare %"class.v8::Value"* @_ZN5blink14V8ScriptRunner12CallFunctionEN2v85LocalINS1_8FunctionEEEPNS_16ExecutionContextENS2_INS1_5ValueEEEiPS8_PNS1_7IsolateE(%"class.v8::Function"*, %"class.blink::ExecutionContext"*, %"class.v8::Value"*, i32, %"class.v8::Local.230"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25HasCallableIteratorSymbolEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #11
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %7 = tail call %"class.v8::Function"* @_ZN5blink19GetEsIteratorMethodEPN2v87IsolateENS0_5LocalINS0_6ObjectEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Object"* %6, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %8 = icmp ne %"class.v8::Function"* %7, null
  br label %9

9:                                                ; preds = %3, %5
  %10 = phi i1 [ %8, %5 ], [ false, %3 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink14FromJSONStringEPN2v87IsolateENS0_5LocalINS0_7ContextEEERKN3WTF6StringERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Context"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #11
  %8 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %14, i64* %15, align 8
  br label %23

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  br label %23

23:                                               ; preds = %12, %16
  %24 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %27 = call %"class.v8::Value"* @_ZN2v84JSON5ParseENS_5LocalINS_7ContextEEENS1_INS_6StringEEE(%"class.v8::Context"* %1, %"class.v8::String"* %26) #11
  %28 = icmp eq %"class.v8::Value"* %27, null
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %28, label %29, label %37

29:                                               ; preds = %23
  %30 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %5) #11
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  %32 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %33 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %34, i64 5
  %36 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %32) #11
  br label %37

37:                                               ; preds = %23, %29, %31
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret %"class.v8::Value"* %27
}

declare %"class.v8::Value"* @_ZN2v84JSON5ParseENS_5LocalINS_7ContextEEENS1_INS_6StringEEE(%"class.v8::Context"*, %"class.v8::String"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #11
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #11
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #11
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #11
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19GetOwnPropertyNamesEPN2v87IsolateERKNS0_5LocalINS0_6ObjectEEERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Local"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %2, i64 0, i32 0
  %7 = load %"class.v8::Object"*, %"class.v8::Object"** %6, align 8
  %8 = icmp eq %"class.v8::Object"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  br label %27

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #11
  %13 = load %"class.v8::Object"*, %"class.v8::Object"** %6, align 8
  %14 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %15 = call %"class.v8::Array"* @_ZN2v86Object19GetOwnPropertyNamesENS_5LocalINS_7ContextEEE(%"class.v8::Object"* %13, %"class.v8::Context"* %14) #11
  %16 = icmp eq %"class.v8::Array"* %15, null
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #11
  %19 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %20, i64 5
  %22 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %21, align 8
  call void %22(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %18) #11
  %23 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  br label %26

24:                                               ; preds = %11
  %25 = bitcast %"class.v8::Array"* %15 to %"class.v8::Value"*
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %25, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %26

26:                                               ; preds = %24, %17
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  br label %27

27:                                               ; preds = %26, %9
  ret void
}

declare %"class.v8::Array"* @_ZN2v86Object19GetOwnPropertyNamesENS_5LocalINS_7ContextEEE(%"class.v8::Object"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #11
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #11
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.42, i64 0, i64 0)) #11
  %12 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.43, i64 0, i64 0)) #11
  %26 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #11
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::MicrotaskQueue"* @_ZN5blink16ToMicrotaskQueueEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.v8::MicrotaskQueue"* @_ZNK5blink16ExecutionContext17GetMicrotaskQueueEv(%"class.blink::ExecutionContext"* nonnull %0) #11
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi %"class.v8::MicrotaskQueue"* [ %4, %3 ], [ null, %1 ]
  ret %"class.v8::MicrotaskQueue"* %6
}

declare %"class.v8::MicrotaskQueue"* @_ZNK5blink16ExecutionContext17GetMicrotaskQueueEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::MicrotaskQueue"* @_ZN5blink16ToMicrotaskQueueEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #11
  %3 = icmp eq %"class.blink::ExecutionContext"* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.v8::MicrotaskQueue"* @_ZNK5blink16ExecutionContext17GetMicrotaskQueueEv(%"class.blink::ExecutionContext"* nonnull %2) #11
  br label %6

6:                                                ; preds = %1, %4
  %7 = phi %"class.v8::MicrotaskQueue"* [ %5, %4 ], [ null, %1 ]
  ret %"class.v8::MicrotaskQueue"* %7
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.27, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.27, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.trunc.f64(double) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3229"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.3379"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #11
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %3, i8* %8) #11
  %9 = bitcast %"class.WTF::StringTypeAdapter.3379"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %2, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #11
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3229"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #11
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3229"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #11
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3379", %"class.WTF::StringTypeAdapter.3379"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3230"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3230"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3229"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3380", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3379"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3379"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.3379"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3379", %"class.WTF::StringTypeAdapter.3379"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.3380"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3380"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3379"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3381"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3230"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3379"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3229"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3380", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3379"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3379"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.3379"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3379", %"class.WTF::StringTypeAdapter.3379"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.3380"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3380"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3379"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3381"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3230"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3379"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3230"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3379", %"class.WTF::StringTypeAdapter.3379"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3230", %"class.WTF::StringAppend.3230"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3230", %"class.WTF::StringAppend.3230"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3379"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3381"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3379"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3381"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #8

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #9

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"*) local_unnamed_addr #1

declare i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"*, i8*, i64) local_unnamed_addr #1

declare %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

declare void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3228"*, %"class.WTF::StringAppend.3229"* byval(%"class.WTF::StringAppend.3229") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.3229"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.3228"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3229", %"class.WTF::StringAppend.3229"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.3228"* byval(%"class.WTF::StringAppend.3228") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.3228"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3379", %"class.WTF::StringTypeAdapter.3379"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3228"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3228"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3380", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3380"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3380"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3229"* %10, i8* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3381"* nonnull %30, i8* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3228"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3380", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3379", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3379"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3380"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3380"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3229"* %10, i16* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3380", %"class.WTF::StringTypeAdapter.3380"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3381"* nonnull %30, i16* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3228"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3379"* nonnull %4, i16* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3228"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3228", %"class.WTF::StringAppend.3228"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"* %8) #11
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3229"* %8) #11
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.38, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  ret i32 %18
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #8

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"*, %"class.blink::ScriptState"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.225"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.225"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.41, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.225"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1245", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #11
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.44, i64 0, i64 0)) #11
  %12 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  br label %145

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.1245"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #11
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #11
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.1245"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #11
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.1245"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  br label %99

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %41 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  br label %42

42:                                               ; preds = %36, %90
  %43 = phi i32 [ 0, %36 ], [ %91, %90 ]
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %43) #11
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #11
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #11
  br label %108

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %44, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %39, align 8
  %54 = load i32, i32* %40, align 8
  %55 = icmp eq i32 %54, 0
  %56 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br i1 %55, label %58, label %57

57:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #11
  br label %71

58:                                               ; preds = %52
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !2

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %56, i64* %66, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %90

69:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1245"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %53, %57 ]
  %73 = phi i32 [ 0, %69 ], [ 1, %57 ]
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #11
  br label %88

88:                                               ; preds = %87, %84, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %89 = icmp eq i32 %73, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %62, %88
  %91 = add nuw i32 %43, 1
  %92 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #11
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::Vector.1245"* %5 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i32, i32* %16, align 8
  %98 = load i32, i32* %17, align 4
  br label %99

99:                                               ; preds = %33, %94
  %100 = phi i8* [ %35, %33 ], [ %41, %94 ]
  %101 = phi i64* [ %34, %33 ], [ %95, %94 ]
  %102 = phi i32 [ 0, %33 ], [ %98, %94 ]
  %103 = phi i32 [ %27, %33 ], [ %97, %94 ]
  %104 = phi i64 [ %28, %33 ], [ %96, %94 ]
  %105 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #11
  %107 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %104, i64* %107 monotonic, align 8
  store i32 %103, i32* %105, align 8
  store i32 0, i32* %16, align 8
  store i32 %102, i32* %106, align 4
  store i32 0, i32* %17, align 4
  br label %108

108:                                              ; preds = %88, %46, %99
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #11
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !24

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %17, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !2

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #11
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %17, align 4
  %140 = bitcast %"class.WTF::Vector.1245"* %5 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %144

144:                                              ; preds = %108, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %145

145:                                              ; preds = %144, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1245"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1245", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7)
  %9 = bitcast %"class.WTF::Vector.1245"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #11
  br i1 %13, label %14, label %74

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %14, %72
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %17, align 8
  %25 = load i32, i32* %18, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br i1 %26, label %45, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %89

45:                                               ; preds = %23
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %45
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %51
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %27, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %72

56:                                               ; preds = %45
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1245"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %49, %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %73 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #11
  br i1 %73, label %19, label %74

74:                                               ; preds = %72, %4
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector.1245"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #11
  br label %89

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.1245"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store i64 0, i64* %84, align 8
  %85 = load i64, i64* %83, align 8
  %86 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load i32, i32* %11, align 8
  store i32 %87, i32* %81, align 8
  store i32 0, i32* %11, align 8
  %88 = load i32, i32* %12, align 4
  store i32 %88, i32* %82, align 4
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %44, %80, %78
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !24

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !2

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #11
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %12, align 4
  %121 = bitcast %"class.WTF::Vector.1245"* %5 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.3509"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #11
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #11
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #11
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #11
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #11
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #11
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #11
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #11
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #11
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #11
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #11
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.46, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !32

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !24

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #11
  br i1 %22, label %23, label %80, !prof !24

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #11
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #11
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #11
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #11
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1245"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !24

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !24

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1245"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1245", %"class.WTF::Vector.1245"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !24

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !24

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.1245"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.1245"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!20 = distinct !{!20, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!24 = !{!"branch_weights", i32 2000, i32 1}
!25 = !{i8 0, i8 2}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!31 = distinct !{!31, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!32 = !{!"branch_weights", i32 2146410443, i32 1073205}
