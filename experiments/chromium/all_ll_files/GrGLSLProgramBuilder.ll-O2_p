; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLProgramBuilder.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLProgramBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::vector", i32, %class.SkSTArray.106 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.63, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.57" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.22 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.22 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.23, void (i8*)*, i8* }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.54, %class.sk_sp.56, %class.sk_sp.56 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.30, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.30 = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.39, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.39 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.45, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.45 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.46 }
%class.SkTHashTable.46 = type { i32, i32, %class.SkAutoTArray.47 }
%class.SkAutoTArray.47 = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.54 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.55, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.55 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.56 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.62 }
%union.anon.62 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.63 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.64, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.64 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.65"*, [24 x i8] }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.68, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.70 }
%class.SkAlignedSTStorage.69 = type { [8 x i8] }
%class.SkTArray.70 = type { %"class.std::__1::unique_ptr.71"*, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.80, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.80 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.84 }
%class.SkTArray.84 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.97 }
%class.SkTArray.97 = type { %"class.std::__1::unique_ptr.94"*, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::unique_ptr.94"* }
%class.SkSTArray.106 = type { %class.SkAlignedSTStorage.107, %class.SkTArray.108 }
%class.SkAlignedSTStorage.107 = type { [160 x i8] }
%class.SkTArray.108 = type { %class.GrShaderVar*, i64 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.150", %"class.std::__1::shared_ptr.150", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.152", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.158" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.112", i32, i32, %"class.std::__1::vector.119", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.121" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.149"* }
%"class.std::__1::vector.149" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.150" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.150", %"class.std::__1::vector.165", i8, %"class.std::__1::vector.173", %"class.std::__1::forward_list", %class.SkTHashMap.186, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"class.std::__1::unique_ptr.167"*, %"class.std::__1::unique_ptr.167"*, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::unique_ptr.167"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.std::__1::unique_ptr.175"*, %"class.std::__1::unique_ptr.175"*, %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::unique_ptr.175"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.186 = type { %class.SkTHashTable.187 }
%class.SkTHashTable.187 = type { i32, i32, %class.SkAutoTArray.188 }
%class.SkAutoTArray.188 = type { %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.150", %"class.std::__1::shared_ptr.151" }
%"class.std::__1::shared_ptr.151" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.129", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131", %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i64 }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { i64*, i64*, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { i64* }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.SkAutoSTArray.195 = type { i32, %class.GrResourceHandle.196*, [16 x i8] }
%class.GrResourceHandle.196 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.108* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.197 }
%class.SkSTArray.197 = type { %class.SkAlignedSTStorage.198, %class.SkTArray.199 }
%class.SkAlignedSTStorage.198 = type { [32 x i8] }
%class.SkTArray.199 = type { %class.GrFragmentProcessor**, i64 }
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.196*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.200, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.200 = type { %class.GrSBlockAllocator.201 }
%class.GrSBlockAllocator.201 = type { [80 x i8] }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%"struct.GrGLSLXferProcessor::EmitArgs" = type <{ %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrXferProcessor*, i8*, i8*, i8*, i8*, i32, %class.GrResourceHandle.196, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrGLSLXPFragmentBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.206", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.GrGLSLFragmentProcessor::ParallelRange" = type { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* }
%"class.GrGLSLFragmentProcessor::ParallelIter" = type { %"class.GrFragmentProcessor::CIter", %"class.GrGLSLFragmentProcessor::Iter" }
%"class.GrGLSLFragmentProcessor::Iter" = type { %class.SkSTArray.202 }
%class.SkSTArray.202 = type { %class.SkAlignedSTStorage.203, %class.SkTArray.204 }
%class.SkAlignedSTStorage.203 = type { [32 x i8] }
%class.SkTArray.204 = type { %class.GrGLSLFragmentProcessor**, i64 }
%"class.GrGLSLFragmentProcessor::ParallelIterEnd" = type { i8 }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type { %class.GrFragmentProcessor*, %class.GrShaderVar* }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrTextureEffect = type { %class.GrFragmentProcessor.base, [4 x i8], %class.GrSurfaceProxyView, %class.GrSamplerState, [4 x float], %struct.SkRect, %struct.SkRect, [2 x i16] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.68, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN19GrGLSLShaderBuilderD2Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI23GrGLSLFragmentProcessorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7reserveEm = comdat any

$_ZN20GrGLSLProgramBuilder27finalizeFragmentOutputColorER11GrShaderVar = comdat any

$_ZN20GrGLSLProgramBuilder30finalizeFragmentSecondaryColorER11GrShaderVar = comdat any

$_ZN19GrGLSLShaderBuilderD0Ev = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI23GrGLSLFragmentProcessorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZN8SkTArrayIPK19GrFragmentProcessorLb1EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN4SkSL8Compiler13RTADJUST_NAMEE = comdat any

$_ZTV19GrGLSLShaderBuilder = comdat any

@_ZN20GrGLSLProgramBuilder13kVarsPerBlockE = hidden local_unnamed_addr constant i32 8, align 4
@_ZTV20GrGLSLProgramBuilder = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLProgramBuilder*)* @_ZN20GrGLSLProgramBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLProgramBuilder*)* @_ZN20GrGLSLProgramBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)* @_ZN20GrGLSLProgramBuilder27finalizeFragmentOutputColorER11GrShaderVar to i8*), i8* bitcast (void (%class.GrGLSLProgramBuilder*, %class.GrShaderVar*)* @_ZN20GrGLSLProgramBuilder30finalizeFragmentSecondaryColorER11GrShaderVar to i8*)] }, align 8
@.str = private unnamed_addr constant [12 x i8] c"outputColor\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"outputCoverage\00", align 1
@_ZN4SkSL8Compiler13RTADJUST_NAMEE = linkonce_odr hidden constant [12 x i8] c"sk_RTAdjust\00", comdat, align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"// Stage %d, %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"// Primitive Processor %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"TextureSampler_%d\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"_input\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"_coords\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"%s = %s(%s);\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"{ // Xfer Processor: %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"DstTextureSampler\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"DstTextureInput\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"float4(1)\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"%c%s\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"%s_Stage%d%s\00", align 1
@_ZTV19GrGLSLVertexBuilder = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTV19GrGLSLShaderBuilder = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV21GrGLSLGeometryBuilder = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTT27GrGLSLFragmentShaderBuilder = external unnamed_addr constant [7 x i8*], align 8
@.str.20 = private unnamed_addr constant [11 x i8] c"half4(1.0)\00", align 1

@_ZN20GrGLSLProgramBuilderD1Ev = hidden unnamed_addr alias void (%class.GrGLSLProgramBuilder*), void (%class.GrGLSLProgramBuilder*)* @_ZN20GrGLSLProgramBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilderC2ERK13GrProgramDescRK13GrProgramInfo(%class.GrGLSLProgramBuilder*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV20GrGLSLProgramBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 16
  %5 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 2
  %6 = bitcast %class.GrGLSLVertexBuilder* %5 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLShaderBuilder* %6, %class.GrGLSLProgramBuilder* %0) #7
  %7 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19GrGLSLVertexBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 16
  %8 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 3
  %9 = bitcast %class.GrGLSLGeometryBuilder* %8 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLShaderBuilder* %9, %class.GrGLSLProgramBuilder* %0) #7
  %10 = getelementptr inbounds %class.GrGLSLGeometryBuilder, %class.GrGLSLGeometryBuilder* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21GrGLSLGeometryBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 16
  %11 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4
  tail call void @_ZN27GrGLSLFragmentShaderBuilderC1EP20GrGLSLProgramBuilder(%class.GrGLSLFragmentShaderBuilder* %12, %class.GrGLSLProgramBuilder* %0) #7
  %13 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 5
  store i32 -1, i32* %13, align 16
  %14 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 6
  store %class.GrProgramDesc* %1, %class.GrProgramDesc** %14, align 8
  %15 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 7
  store %class.GrProgramInfo* %2, %class.GrProgramInfo** %15, align 16
  %16 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 8, i32 0, i32 0
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 8, i32 1, i32 0
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 9
  %19 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13, i32 0, i32 0, i64 160
  %20 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  %21 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13, i32 0, i32 0, i64 168
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %19 to i8**
  %24 = bitcast %"class.std::__1::unique_ptr.81"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 44, i1 false)
  store i8* %20, i8** %23, align 8
  store i64 34359738368, i64* %22, align 8
  ret void
}

declare void @_ZN27GrGLSLFragmentShaderBuilderC1EP20GrGLSLProgramBuilder(%class.GrGLSLFragmentShaderBuilder*, %class.GrGLSLProgramBuilder*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilderD2Ev(%class.GrGLSLProgramBuilder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV20GrGLSLProgramBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13, i32 0, i32 0, i64 160
  %4 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13, i32 0, i32 0, i64 168
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %class.GrShaderVar**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %22, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %26

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %21, %15 ]
  %17 = load %class.GrShaderVar*, %class.GrShaderVar** %10, align 8
  %18 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %17, i64 %16, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #7
  %19 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %17, i64 %16, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #7
  %20 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %17, i64 %16, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #7
  %21 = add nuw nsw i64 %16, 1
  %22 = load i64, i64* %5, align 8
  %23 = lshr i64 %22, 1
  %24 = and i64 %23, 2147483647
  %25 = icmp ult i64 %21, %24
  br i1 %25, label %15, label %11

26:                                               ; preds = %11
  %27 = bitcast i8* %3 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_Z7sk_freePv(i8* %28) #7
  br label %29

29:                                               ; preds = %11, %26
  %30 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 11
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %31, align 8
  %33 = icmp eq %"class.std::__1::unique_ptr.94"* %32, null
  br i1 %33, label %57, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::unique_ptr.94"* %32 to i8*
  %36 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 11, i32 0, i32 1
  %37 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %36, align 8
  %38 = icmp eq %"class.std::__1::unique_ptr.94"* %37, %32
  br i1 %38, label %55, label %39

39:                                               ; preds = %34, %50
  %40 = phi %"class.std::__1::unique_ptr.94"* [ %41, %50 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %42, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %42, align 8
  %44 = icmp eq %class.GrGLSLFragmentProcessor* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = bitcast %class.GrGLSLFragmentProcessor* %43 to void (%class.GrGLSLFragmentProcessor*)***
  %47 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %47, i64 1
  %49 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %48, align 8
  tail call void %49(%class.GrGLSLFragmentProcessor* nonnull %43) #7
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::unique_ptr.94"* %41, %32
  br i1 %51, label %52, label %39

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector"* %30 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %34
  %56 = phi i8* [ %54, %52 ], [ %35, %34 ]
  store %"class.std::__1::unique_ptr.94"* %32, %"class.std::__1::unique_ptr.94"** %36, align 8
  tail call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %29, %55
  %58 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %59 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %58, align 8
  store %class.GrGLSLXferProcessor* null, %class.GrGLSLXferProcessor** %58, align 8
  %60 = icmp eq %class.GrGLSLXferProcessor* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = bitcast %class.GrGLSLXferProcessor* %59 to void (%class.GrGLSLXferProcessor*)***
  %63 = load void (%class.GrGLSLXferProcessor*)**, void (%class.GrGLSLXferProcessor*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %63, i64 1
  %65 = load void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %64, align 8
  tail call void %65(%class.GrGLSLXferProcessor* nonnull %59) #7
  br label %66

66:                                               ; preds = %57, %61
  %67 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %68 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %67, align 8
  store %class.GrGLSLGeometryProcessor* null, %class.GrGLSLGeometryProcessor** %67, align 8
  %69 = icmp eq %class.GrGLSLGeometryProcessor* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = bitcast %class.GrGLSLGeometryProcessor* %68 to void (%class.GrGLSLGeometryProcessor*)***
  %72 = load void (%class.GrGLSLGeometryProcessor*)**, void (%class.GrGLSLGeometryProcessor*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %72, i64 1
  %74 = load void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %73, align 8
  tail call void %74(%class.GrGLSLGeometryProcessor* nonnull %68) #7
  br label %75

75:                                               ; preds = %66, %70
  %76 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4
  %77 = load i64, i64* bitcast ([7 x i8*]* @_ZTT27GrGLSLFragmentShaderBuilder to i64*), align 8
  %78 = bitcast %class.GrGLSLFragmentShaderBuilder* %76 to i64*
  store i64 %77, i64* %78, align 8
  %79 = load i64, i64* bitcast (i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZTT27GrGLSLFragmentShaderBuilder, i64 0, i64 5) to i64*), align 8
  %80 = inttoptr i64 %77 to i8*
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.GrGLSLFragmentShaderBuilder* %76 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = bitcast i8* %85 to i64*
  store i64 %79, i64* %86, align 16
  %87 = load i64, i64* bitcast (i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZTT27GrGLSLFragmentShaderBuilder, i64 0, i64 6) to i64*), align 8
  %88 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 2
  %89 = bitcast %class.GrGLSLXPFragmentBuilder.base* %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %90) #7
  %91 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 3, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %75
  %96 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 3
  %97 = bitcast %class.SkTArray.10* %96 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_Z7sk_freePv(i8* %98) #7
  br label %99

99:                                               ; preds = %75, %95
  %100 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 11
  %101 = bitcast %class.GrGLSLShaderBuilder.base* %100 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %101) #7
  %102 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 3
  %103 = bitcast %class.GrGLSLGeometryBuilder* %102 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %103) #7
  %104 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 2
  %105 = bitcast %class.GrGLSLVertexBuilder* %104 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %105) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19GrGLSLShaderBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %class.SkString**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %20, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %24

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %19, %15 ]
  %17 = load %class.SkString*, %class.SkString** %10, align 8
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %17, i64 %16
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #7
  %19 = add nuw nsw i64 %16, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %15, label %11

24:                                               ; preds = %11
  %25 = bitcast i8* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #7
  br label %27

27:                                               ; preds = %11, %24
  %28 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 8
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 4294967294
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %109, label %98

34:                                               ; preds = %116
  %35 = bitcast i8* %125 to %"class.std::__1::unique_ptr"**
  br label %40

36:                                               ; preds = %51, %116
  %37 = phi i64 [ %128, %116 ], [ %53, %51 ]
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %60, label %57

40:                                               ; preds = %51, %34
  %41 = phi i64 [ 0, %34 ], [ %52, %51 ]
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 %41, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %43, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %43, align 8
  %45 = icmp eq %"class.SkSL::Statement"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.SkSL::Statement"* %44 to void (%"class.SkSL::Statement"*)***
  %48 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, i64 1
  %50 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %49, align 8
  tail call void %50(%"class.SkSL::Statement"* nonnull %44) #7
  br label %51

51:                                               ; preds = %46, %40
  %52 = add nuw nsw i64 %41, 1
  %53 = load i64, i64* %127, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %40, label %36

57:                                               ; preds = %36
  %58 = bitcast i8* %125 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #7
  br label %60

60:                                               ; preds = %36, %57
  %61 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 6
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %61) #7
  %62 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %62) #7
  %63 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %63) #7
  %64 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %65 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 128
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 4294967294
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %60
  %71 = bitcast i8* %64 to %class.SkString**
  br label %76

72:                                               ; preds = %76, %60
  %73 = phi i64 [ %67, %60 ], [ %81, %76 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %88, label %85

76:                                               ; preds = %76, %70
  %77 = phi i64 [ 0, %70 ], [ %80, %76 ]
  %78 = load %class.SkString*, %class.SkString** %71, align 8
  %79 = getelementptr inbounds %class.SkString, %class.SkString* %78, i64 %77
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %79) #7
  %80 = add nuw nsw i64 %77, 1
  %81 = load i64, i64* %66, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = icmp ult i64 %80, %83
  br i1 %84, label %76, label %72

85:                                               ; preds = %72
  %86 = bitcast i8* %64 to i8**
  %87 = load i8*, i8** %86, align 8
  tail call void @_Z7sk_freePv(i8* %87) #7
  br label %88

88:                                               ; preds = %72, %85
  %89 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 2, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #12
  br label %97

97:                                               ; preds = %88, %94
  ret void

98:                                               ; preds = %27
  %99 = bitcast i8* %28 to %class.SkString**
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %104, %100 ]
  %102 = load %class.SkString*, %class.SkString** %99, align 8
  %103 = getelementptr inbounds %class.SkString, %class.SkString* %102, i64 %101
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %103) #7
  %104 = add nuw nsw i64 %101, 1
  %105 = load i64, i64* %30, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %100, label %109

109:                                              ; preds = %100, %27
  %110 = phi i64 [ %31, %27 ], [ %105, %100 ]
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast i8* %28 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_Z7sk_freePv(i8* %115) #7
  br label %116

116:                                              ; preds = %113, %109
  %117 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %117) #7
  %118 = bitcast %class.GrTBlockList* %117 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %118) #7
  %119 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10, i32 0, i32 0, i64 16
  %120 = bitcast i8* %119 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %120) #7
  %121 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %121) #7
  %122 = bitcast %class.GrTBlockList* %121 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %122) #7
  %123 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9, i32 0, i32 0, i64 16
  %124 = bitcast i8* %123 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %124) #7
  %125 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %126 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 4294967294
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %36, label %34
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilderD0Ev(%class.GrGLSLProgramBuilder* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilder10addFeatureE13GrShaderFlagsjPKc(%class.GrGLSLProgramBuilder*, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %5 = and i32 %1, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 2
  %9 = bitcast %class.GrGLSLVertexBuilder* %8 to %class.GrGLSLShaderBuilder*
  %10 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %9, i32 %2, i8* %3) #7
  br label %11

11:                                               ; preds = %4, %7
  %12 = and i32 %1, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 3
  %16 = bitcast %class.GrGLSLGeometryBuilder* %15 to %class.GrGLSLShaderBuilder*
  %17 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %16, i32 %2, i8* %3) #7
  br label %18

18:                                               ; preds = %11, %14
  %19 = and i32 %1, 16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4
  %23 = bitcast %class.GrGLSLFragmentShaderBuilder* %22 to i8**
  %24 = load i8*, i8** %23, align 16
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.GrGLSLFragmentShaderBuilder* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = bitcast i8* %29 to %class.GrGLSLShaderBuilder*
  %31 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %30, i32 %2, i8* %3) #7
  br label %32

32:                                               ; preds = %18, %21
  ret void
}

declare zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20GrGLSLProgramBuilder19emitAndInstallProcsEv(%class.GrGLSLProgramBuilder*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkString, align 8
  %3 = alloca %class.SkString, align 8
  %4 = bitcast %class.GrGLSLProgramBuilder* %0 to %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)***
  %5 = load %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)**, %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)*** %4, align 16
  %6 = getelementptr inbounds %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)*, %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)** %5, i64 3
  %7 = load %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)*, %"class.SkSL::Compiler"* (%class.GrGLSLProgramBuilder*)** %6, align 8
  %8 = tail call %"class.SkSL::Compiler"* %7(%class.GrGLSLProgramBuilder* %0) #7
  tail call void @_ZN4SkSL3dsl5StartEPNS_8CompilerENS_11ProgramKindE(%"class.SkSL::Compiler"* %8, i8 signext 0) #7
  %9 = bitcast %class.SkString* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %2, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %10, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %2) #7
  %11 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %12, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #7
  %13 = call zeroext i1 @_ZN20GrGLSLProgramBuilder22emitAndInstallPrimProcEP8SkStringS1_(%class.GrGLSLProgramBuilder* %0, %class.SkString* nonnull %2, %class.SkString* nonnull %3)
  br i1 %13, label %14, label %39

14:                                               ; preds = %1
  %15 = call zeroext i1 @_ZN20GrGLSLProgramBuilder23emitAndInstallFragProcsEP8SkStringS1_(%class.GrGLSLProgramBuilder* %0, %class.SkString* nonnull %2, %class.SkString* nonnull %3)
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = call zeroext i1 @_ZN20GrGLSLProgramBuilder22emitAndInstallXferProcERK8SkStringS2_(%class.GrGLSLProgramBuilder* %0, %class.SkString* nonnull dereferenceable(8) %2, %class.SkString* nonnull dereferenceable(8) %3)
  br i1 %17, label %18, label %39

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %20 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %19, align 8
  %21 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 2
  %22 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %23 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %22, align 16
  %24 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %23, i64 4
  %25 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %24, align 8
  %26 = call %class.GrGLSLUniformHandler* %25(%class.GrGLSLProgramBuilder* %0) #7
  call void @_ZN23GrGLSLGeometryProcessor17emitTransformCodeEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler(%class.GrGLSLGeometryProcessor* %20, %class.GrGLSLVertexBuilder* %21, %class.GrGLSLUniformHandler* %26) #7
  call void @_ZN4SkSL3dsl3EndEv() #7
  %27 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %28 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %27, align 16
  %29 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %28, i64 2
  %30 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %29, align 8
  %31 = call %class.GrCaps* %30(%class.GrGLSLProgramBuilder* %0) #7
  %32 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %31, i64 0, i32 2, i32 0
  %33 = load %class.GrShaderCaps*, %class.GrShaderCaps** %32, align 8
  %34 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 12
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %33, i64 0, i32 16
  %37 = load i32, i32* %36, align 8
  %38 = icmp sle i32 %35, %37
  br label %39

39:                                               ; preds = %16, %14, %1, %18
  %40 = phi i1 [ %38, %18 ], [ false, %1 ], [ false, %14 ], [ false, %16 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret i1 %40
}

declare void @_ZN4SkSL3dsl5StartEPNS_8CompilerENS_11ProgramKindE(%"class.SkSL::Compiler"*, i8 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20GrGLSLProgramBuilder22emitAndInstallPrimProcEP8SkStringS1_(%class.GrGLSLProgramBuilder*, %class.SkString*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkAutoSTArray.195, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler", align 8
  %7 = alloca %"struct.GrGLSLGeometryProcessor::EmitArgs", align 8
  %8 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 7
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 16
  %10 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %9, i64 0, i32 7
  %11 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %10, align 8
  %12 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 16
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 16
  %15 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4
  %16 = bitcast %class.GrGLSLFragmentShaderBuilder* %15 to i8**
  %17 = load i8*, i8** %16, align 16
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.GrGLSLFragmentShaderBuilder* %15 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = getelementptr inbounds i8, i8* %22, i64 160
  %24 = bitcast i8* %23 to %class.SkTArray*
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %24, i32 1, i32 1) #7
  %25 = bitcast i8* %23 to %class.SkString**
  %26 = load %class.SkString*, %class.SkString** %25, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 168
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 1
  %31 = and i64 %30, 2147483647
  %32 = getelementptr inbounds %class.SkString, %class.SkString* %26, i64 %31
  %33 = add i64 %29, 2
  %34 = and i64 %33, 4294967294
  %35 = and i64 %29, -4294967295
  %36 = or i64 %34, %35
  store i64 %36, i64* %28, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %32) #7
  %37 = getelementptr inbounds i8, i8* %22, i64 488
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 8
  tail call void @_ZN20GrGLSLProgramBuilder14nameExpressionEP8SkStringPKc(%class.GrGLSLProgramBuilder* %0, %class.SkString* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0))
  tail call void @_ZN20GrGLSLProgramBuilder14nameExpressionEP8SkStringPKc(%class.GrGLSLProgramBuilder* %0, %class.SkString* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  %41 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %11, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %3
  %46 = and i32 %42, 4
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, i32 1, i32 4
  br label %49

49:                                               ; preds = %3, %45
  %50 = phi i32 [ 8, %3 ], [ %48, %45 ]
  %51 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %52 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %51, align 16
  %53 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %52, i64 4
  %54 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %53, align 8
  %55 = tail call %class.GrGLSLUniformHandler* %54(%class.GrGLSLProgramBuilder* %0) #7
  %56 = bitcast %class.GrGLSLUniformHandler* %55 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %57 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %56, align 8
  %58 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %57, i64 13
  %59 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %58, align 8
  %60 = tail call i32 %59(%class.GrGLSLUniformHandler* %55, %class.GrFragmentProcessor* null, i32 %50, i32 24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN4SkSL8Compiler13RTADJUST_NAMEE, i64 0, i64 0), i1 zeroext false, i32 0, i8** null) #7
  %61 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 8, i32 0, i32 0
  store i32 %60, i32* %61, align 8
  %62 = load i8*, i8** %16, align 16
  %63 = getelementptr i8, i8* %62, i64 -24
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds i8, i8* %21, i64 %65
  %67 = bitcast i8* %66 to %class.GrGLSLShaderBuilder*
  %68 = load i32, i32* %12, align 16
  %69 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %11, i64 0, i32 0
  %70 = bitcast %class.GrGeometryProcessor* %11 to i8* (%class.GrProcessor*)***
  %71 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %70, align 8
  %72 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %71, i64 2
  %73 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %72, align 8
  %74 = tail call i8* %73(%class.GrProcessor* %69) #7
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %67, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i32 %68, i8* %74)
  %75 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 2
  %76 = bitcast %class.GrGLSLVertexBuilder* %75 to %class.GrGLSLShaderBuilder*
  %77 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %70, align 8
  %78 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %77, i64 2
  %79 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %78, align 8
  %80 = tail call i8* %79(%class.GrProcessor* %69) #7
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %76, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %80)
  %81 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %82 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %81, align 16
  %83 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %82, i64 2
  %84 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %83, align 8
  %85 = tail call %class.GrCaps* %84(%class.GrGLSLProgramBuilder* %0) #7
  %86 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %85, i64 0, i32 2, i32 0
  %87 = load %class.GrShaderCaps*, %class.GrShaderCaps** %86, align 8
  %88 = bitcast %class.GrGeometryProcessor* %11 to %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)***
  %89 = load %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)**, %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)*** %88, align 8
  %90 = getelementptr inbounds %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)*, %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)** %89, i64 4
  %91 = load %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)*, %class.GrGLSLGeometryProcessor* (%class.GrGeometryProcessor*, %class.GrShaderCaps*)** %90, align 8
  %92 = tail call %class.GrGLSLGeometryProcessor* %91(%class.GrGeometryProcessor* %11, %class.GrShaderCaps* dereferenceable(144) %87) #7
  %93 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %94 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %93, align 8
  store %class.GrGLSLGeometryProcessor* %92, %class.GrGLSLGeometryProcessor** %93, align 8
  %95 = icmp eq %class.GrGLSLGeometryProcessor* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %49
  %97 = bitcast %class.GrGLSLGeometryProcessor* %94 to void (%class.GrGLSLGeometryProcessor*)***
  %98 = load void (%class.GrGLSLGeometryProcessor*)**, void (%class.GrGLSLGeometryProcessor*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %98, i64 1
  %100 = load void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %99, align 8
  tail call void %100(%class.GrGLSLGeometryProcessor* nonnull %94) #7
  br label %101

101:                                              ; preds = %49, %96
  %102 = bitcast %class.SkAutoSTArray.195* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 32, i1 false)
  %103 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %11, i64 0, i32 5
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %class.SkAutoSTArray.195, %class.SkAutoSTArray.195* %4, i64 0, i32 1
  store %class.GrResourceHandle.196* null, %class.GrResourceHandle.196** %105, align 8
  %106 = getelementptr inbounds %class.SkAutoSTArray.195, %class.SkAutoSTArray.195* %4, i64 0, i32 0
  store i32 0, i32* %106, align 8
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %184, label %108

108:                                              ; preds = %101
  %109 = icmp sgt i32 %104, 4
  br i1 %109, label %110, label %114

110:                                              ; preds = %108
  %111 = sext i32 %104 to i64
  %112 = tail call i8* @_Z15sk_malloc_throwmm(i64 %111, i64 4) #7
  %113 = bitcast %class.GrResourceHandle.196** %105 to i8**
  store i8* %112, i8** %113, align 8
  br label %121

114:                                              ; preds = %108
  %115 = icmp sgt i32 %104, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %114
  %117 = getelementptr inbounds %class.SkAutoSTArray.195, %class.SkAutoSTArray.195* %4, i64 0, i32 2, i64 0
  %118 = bitcast %class.GrResourceHandle.196** %105 to i8**
  store i8* %117, i8** %118, align 8
  %119 = sext i32 %104 to i64
  br label %121

120:                                              ; preds = %114
  store %class.GrResourceHandle.196* null, %class.GrResourceHandle.196** %105, align 8
  store i32 %104, i32* %106, align 8
  br label %184

121:                                              ; preds = %110, %116
  %122 = phi i64 [ %111, %110 ], [ %119, %116 ]
  %123 = phi i8* [ %112, %110 ], [ %117, %116 ]
  %124 = bitcast i8* %123 to %class.GrResourceHandle.196*
  store i32 %104, i32* %106, align 8
  %125 = getelementptr inbounds %class.GrResourceHandle.196, %class.GrResourceHandle.196* %124, i64 %122
  %126 = ptrtoint i8* %123 to i64
  %127 = getelementptr i8, i8* %123, i64 4
  %128 = bitcast i8* %127 to %class.GrResourceHandle.196*
  %129 = icmp ugt %class.GrResourceHandle.196* %125, %128
  %130 = select i1 %129, %class.GrResourceHandle.196* %125, %class.GrResourceHandle.196* %128
  %131 = bitcast %class.GrResourceHandle.196* %130 to i8*
  %132 = xor i64 %126, -1
  %133 = getelementptr i8, i8* %131, i64 %132
  %134 = ptrtoint i8* %133 to i64
  %135 = add i64 %134, 4
  %136 = and i64 %135, -4
  call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 -1, i64 %136, i1 false) #7
  %137 = load i32, i32* %103, align 8
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %139, label %184

139:                                              ; preds = %121
  %140 = bitcast %class.SkString* %5 to i8*
  %141 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  %142 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 12
  br label %147

143:                                              ; preds = %147
  %144 = load i32, i32* %103, align 8
  %145 = sext i32 %144 to i64
  %146 = icmp slt i64 %183, %145
  br i1 %146, label %147, label %184

147:                                              ; preds = %139, %143
  %148 = phi i64 [ 0, %139 ], [ %183, %143 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #7
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %141, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #7
  %149 = trunc i64 %148 to i32
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 %149) #7
  %150 = call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor* %11, i32 %149) #7
  %151 = call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor* %11, i32 %149) #7
  %152 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %151, i64 0, i32 2
  %153 = bitcast %"class.GrGeometryProcessor::TextureSampler"* %150 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %150, i64 0, i32 0, i32 2
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %150, i64 0, i32 3
  %158 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %141, align 8
  %159 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %158, i64 0, i32 2
  %160 = load i32, i32* %142, align 8
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %142, align 8
  %162 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %51, align 16
  %163 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %162, i64 4
  %164 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %163, align 8
  %165 = call %class.GrGLSLUniformHandler* %164(%class.GrGLSLProgramBuilder* %0) #7
  %166 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %81, align 16
  %167 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %166, i64 2
  %168 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %167, align 8
  %169 = call %class.GrCaps* %168(%class.GrGLSLProgramBuilder* %0) #7
  %170 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %169, i64 0, i32 2, i32 0
  %171 = load %class.GrShaderCaps*, %class.GrShaderCaps** %170, align 8
  %172 = bitcast %class.GrGLSLUniformHandler* %165 to i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)***
  %173 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)**, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*** %172, align 8
  %174 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %173, i64 11
  %175 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %174, align 8
  %176 = call i32 %175(%class.GrGLSLUniformHandler* %165, %class.GrBackendFormat* dereferenceable(72) %152, i64 %154, i32 %156, %class.GrSwizzle* dereferenceable(2) %157, i8* %159, %class.GrShaderCaps* %171) #7
  %177 = load %class.GrResourceHandle.196*, %class.GrResourceHandle.196** %105, align 8
  %178 = getelementptr inbounds %class.GrResourceHandle.196, %class.GrResourceHandle.196* %177, i64 %148, i32 0
  store i32 %176, i32* %178, align 4
  %179 = load %class.GrResourceHandle.196*, %class.GrResourceHandle.196** %105, align 8
  %180 = getelementptr inbounds %class.GrResourceHandle.196, %class.GrResourceHandle.196* %179, i64 %148, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, -1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #7
  %183 = add nuw nsw i64 %148, 1
  br i1 %182, label %251, label %143

184:                                              ; preds = %143, %120, %101, %121
  %185 = getelementptr inbounds %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler", %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %185) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 56, i1 false)
  %186 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 16
  %187 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %186, i64 0, i32 5
  %188 = load %class.GrPipeline*, %class.GrPipeline** %187, align 8
  %189 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13
  %190 = icmp eq %class.SkSTArray.106* %189, null
  %191 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 13, i32 0, i32 0, i64 160
  %192 = bitcast i8* %191 to %class.SkTArray.108*
  %193 = select i1 %190, %class.SkTArray.108* null, %class.SkTArray.108* %192
  call void @_ZN23GrGLSLGeometryProcessor23FPCoordTransformHandlerC1ERK10GrPipelineP8SkTArrayI11GrShaderVarLb0EE(%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* nonnull %6, %class.GrPipeline* dereferenceable(128) %188, %class.SkTArray.108* %193) #7
  %194 = bitcast %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %194) #7
  %195 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 2
  %196 = bitcast %class.GrGLSLFPFragmentBuilder** %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 72, i1 false)
  %197 = load i32, i32* %41, align 4
  %198 = and i32 %197, 8
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 3
  %201 = select i1 %199, %class.GrGLSLGeometryBuilder* null, %class.GrGLSLGeometryBuilder* %200
  %202 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)***
  %203 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*** %202, align 16
  %204 = getelementptr inbounds %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %203, i64 6
  %205 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %204, align 8
  %206 = call %class.GrGLSLVaryingHandler* %205(%class.GrGLSLProgramBuilder* %0) #7
  %207 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %51, align 16
  %208 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %207, i64 4
  %209 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %208, align 8
  %210 = call %class.GrGLSLUniformHandler* %209(%class.GrGLSLProgramBuilder* %0) #7
  %211 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %81, align 16
  %212 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %211, i64 2
  %213 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %212, align 8
  %214 = call %class.GrCaps* %213(%class.GrGLSLProgramBuilder* %0) #7
  %215 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %214, i64 0, i32 2, i32 0
  %216 = bitcast %class.GrShaderCaps** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %219 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %218, align 8
  %220 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %219, i64 0, i32 2
  %221 = getelementptr inbounds %class.SkString, %class.SkString* %2, i64 0, i32 0, i32 0
  %222 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %221, align 8
  %223 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %222, i64 0, i32 2
  %224 = bitcast %class.GrResourceHandle.196** %105 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 0
  store %class.GrGLSLVertexBuilder* %75, %class.GrGLSLVertexBuilder** %226, align 8
  %227 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 1
  store %class.GrGLSLGeometryBuilder* %201, %class.GrGLSLGeometryBuilder** %227, align 8
  %228 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 2
  %229 = bitcast %class.GrGLSLFPFragmentBuilder** %228 to %class.GrGLSLFragmentShaderBuilder**
  store %class.GrGLSLFragmentShaderBuilder* %15, %class.GrGLSLFragmentShaderBuilder** %229, align 8
  %230 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 3
  store %class.GrGLSLVaryingHandler* %206, %class.GrGLSLVaryingHandler** %230, align 8
  %231 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 4
  store %class.GrGLSLUniformHandler* %210, %class.GrGLSLUniformHandler** %231, align 8
  %232 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 5
  %233 = bitcast %class.GrShaderCaps** %232 to i64*
  store i64 %217, i64* %233, align 8
  %234 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 6
  store %class.GrGeometryProcessor* %11, %class.GrGeometryProcessor** %234, align 8
  %235 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 7
  store i8* %220, i8** %235, align 8
  %236 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 8
  store i8* %223, i8** %236, align 8
  %237 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 9
  %238 = bitcast %class.GrResourceHandle.196** %237 to i64*
  store i64 %225, i64* %238, align 8
  %239 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %7, i64 0, i32 10
  store %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* %6, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"** %239, align 8
  %240 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %93, align 8
  call void @_ZN23GrGLSLGeometryProcessor8emitCodeERNS_8EmitArgsE(%class.GrGLSLGeometryProcessor* %240, %"struct.GrGLSLGeometryProcessor::EmitArgs"* nonnull dereferenceable(88) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %194) #7
  %241 = getelementptr inbounds %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler", %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 40
  %242 = bitcast i8* %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %243, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %184
  %247 = getelementptr inbounds %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler", %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 32
  %248 = bitcast i8* %247 to i8**
  %249 = load i8*, i8** %248, align 8
  call void @_Z7sk_freePv(i8* %249) #7
  br label %250

250:                                              ; preds = %184, %246
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %185) #7
  br label %251

251:                                              ; preds = %147, %250
  %252 = phi i1 [ true, %250 ], [ false, %147 ]
  %253 = load %class.GrResourceHandle.196*, %class.GrResourceHandle.196** %105, align 8
  %254 = load i32, i32* %106, align 8
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %class.GrResourceHandle.196, %class.GrResourceHandle.196* %253, i64 %255
  br label %257

257:                                              ; preds = %257, %251
  %258 = phi %class.GrResourceHandle.196* [ %256, %251 ], [ %260, %257 ]
  %259 = icmp ugt %class.GrResourceHandle.196* %258, %253
  %260 = getelementptr inbounds %class.GrResourceHandle.196, %class.GrResourceHandle.196* %258, i64 -1
  br i1 %259, label %257, label %261

261:                                              ; preds = %257
  %262 = bitcast %class.GrResourceHandle.196* %253 to i8*
  %263 = icmp eq i32 %254, 0
  br i1 %263, label %268, label %264

264:                                              ; preds = %261
  %265 = icmp sgt i32 %254, 4
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  call void @_Z7sk_freePv(i8* %262) #7
  br label %267

267:                                              ; preds = %266, %264
  store %class.GrResourceHandle.196* null, %class.GrResourceHandle.196** %105, align 8
  store i32 0, i32* %106, align 8
  br label %268

268:                                              ; preds = %261, %267
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #7
  ret i1 %252
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20GrGLSLProgramBuilder23emitAndInstallFragProcsEP8SkStringS1_(%class.GrGLSLProgramBuilder*, %class.SkString*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"class.std::__1::unique_ptr.94", align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"class.GrFragmentProcessor::CIter", align 8
  %9 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 7
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 16
  %11 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %10, i64 0, i32 5
  %12 = load %class.GrPipeline*, %class.GrPipeline** %11, align 8
  %13 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %12, i64 0, i32 8, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 11
  %16 = sext i32 %14 to i64
  tail call void @_ZNSt3__16vectorINS_10unique_ptrI23GrGLSLFragmentProcessorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector"* %15, i64 %16)
  %17 = icmp sgt i32 %14, 0
  br i1 %17, label %18, label %129

18:                                               ; preds = %3
  %19 = bitcast %class.SkString* %4 to i8*
  %20 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.94"* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 11, i32 0, i32 1
  %24 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr.94"** %23 to i64*
  %26 = bitcast %class.SkString* %6 to i8*
  %27 = getelementptr inbounds %"class.GrFragmentProcessor::CIter", %"class.GrFragmentProcessor::CIter"* %8, i64 0, i32 0, i32 0, i32 0, i64 0
  %28 = getelementptr inbounds %"class.GrFragmentProcessor::CIter", %"class.GrFragmentProcessor::CIter"* %8, i64 0, i32 0, i32 0, i32 0, i64 32
  %29 = getelementptr inbounds %"class.GrFragmentProcessor::CIter", %"class.GrFragmentProcessor::CIter"* %8, i64 0, i32 0, i32 0, i32 0, i64 40
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast i8* %28 to i8**
  %32 = bitcast i8* %28 to %class.SkTArray.199*
  %33 = bitcast i8* %28 to %class.GrFragmentProcessor***
  %34 = zext i32 %14 to i64
  br label %37

35:                                               ; preds = %125
  %36 = icmp eq i64 %128, %34
  br i1 %36, label %129, label %37

37:                                               ; preds = %35, %18
  %38 = phi i64 [ 0, %18 ], [ %128, %35 ]
  %39 = phi i32 [ 0, %18 ], [ %127, %35 ]
  %40 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 16
  %41 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %40, i64 0, i32 5
  %42 = load %class.GrPipeline*, %class.GrPipeline** %41, align 8
  %43 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %42, i64 0, i32 9
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = icmp slt i64 %38, %45
  %47 = select i1 %46, %class.SkString* %1, %class.SkString* %2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %20, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #7
  %48 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 16
  %49 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %48, i64 0, i32 5
  %50 = load %class.GrPipeline*, %class.GrPipeline** %49, align 8
  %51 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %50, i64 0, i32 8, i32 1
  %52 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %52, i64 %38, i32 0, i32 0, i32 0
  %54 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %53, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %55 = call %class.GrGLSLFragmentProcessor* @_ZNK19GrFragmentProcessor15makeProgramImplEv(%class.GrFragmentProcessor* %54) #7
  store %class.GrGLSLFragmentProcessor* %55, %class.GrGLSLFragmentProcessor** %22, align 8
  %56 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %23, align 8
  %57 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %24, align 8
  %58 = icmp ult %"class.std::__1::unique_ptr.94"* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %37
  %60 = ptrtoint %class.GrGLSLFragmentProcessor* %55 to i64
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %22, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.94"* %56 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %56, i64 1
  %63 = ptrtoint %"class.std::__1::unique_ptr.94"* %62 to i64
  store i64 %63, i64* %25, align 8
  br label %65

64:                                               ; preds = %37
  call void @_ZNSt3__16vectorINS_10unique_ptrI23GrGLSLFragmentProcessorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %15, %"class.std::__1::unique_ptr.94"* nonnull dereferenceable(8) %5) #7
  br label %65

65:                                               ; preds = %59, %64
  %66 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %22, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %22, align 8
  %67 = icmp eq %class.GrGLSLFragmentProcessor* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %65
  %69 = bitcast %class.GrGLSLFragmentProcessor* %66 to void (%class.GrGLSLFragmentProcessor*)***
  %70 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %70, i64 1
  %72 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %71, align 8
  call void %72(%class.GrGLSLFragmentProcessor* nonnull %66) #7
  br label %73

73:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %74 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %23, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %74, i64 -1, i32 0, i32 0, i32 0
  %76 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %75, align 8
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %7, %class.SkString* nonnull dereferenceable(8) %4) #7
  call void @_ZN20GrGLSLProgramBuilder12emitFragProcERK19GrFragmentProcessorR23GrGLSLFragmentProcessoriRK8SkStringS5_(%class.SkString* nonnull sret %6, %class.GrGLSLProgramBuilder* %0, %class.GrFragmentProcessor* dereferenceable(64) %54, %class.GrGLSLFragmentProcessor* dereferenceable(40) %76, i32 %39, %class.SkString* dereferenceable(8) %47, %class.SkString* nonnull %7)
  %77 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %4, %class.SkString* nonnull dereferenceable(8) %6) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  %78 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %20, align 8
  %79 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %125, label %82

82:                                               ; preds = %73
  %83 = ptrtoint %class.GrFragmentProcessor* %54 to i64
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  store i8* %27, i8** %31, align 8, !alias.scope !2
  store i64 34359738368, i64* %30, align 8, !alias.scope !2
  call void @_ZN8SkTArrayIPK19GrFragmentProcessorLb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.199* %32, i32 1, i32 1) #7
  %84 = load %class.GrFragmentProcessor**, %class.GrFragmentProcessor*** %33, align 8, !alias.scope !2
  %85 = load i64, i64* %30, align 8, !alias.scope !2
  %86 = lshr i64 %85, 1
  %87 = and i64 %86, 2147483647
  %88 = getelementptr inbounds %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %84, i64 %87
  %89 = add i64 %85, 2
  %90 = and i64 %89, 4294967294
  %91 = and i64 %85, -4294967295
  %92 = or i64 %90, %91
  store i64 %92, i64* %30, align 8, !alias.scope !2
  %93 = bitcast %class.GrFragmentProcessor** %88 to i64*
  store i64 %83, i64* %93, align 8
  %94 = load i64, i64* %30, align 8
  %95 = and i64 %94, 4294967294
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %106

97:                                               ; preds = %106, %82
  %98 = phi i32 [ %39, %82 ], [ %120, %106 ]
  %99 = phi i64 [ %94, %82 ], [ %122, %106 ]
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = load i8*, i8** %31, align 8
  call void @_Z7sk_freePv(i8* %103) #7
  br label %104

104:                                              ; preds = %97, %102
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #7
  %105 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %47, %class.SkString* nonnull dereferenceable(8) %4) #7
  br label %125

106:                                              ; preds = %82, %106
  %107 = phi i64 [ %122, %106 ], [ %94, %82 ]
  %108 = phi i32 [ %120, %106 ], [ %39, %82 ]
  %109 = load %class.GrFragmentProcessor**, %class.GrFragmentProcessor*** %33, align 8
  %110 = lshr i64 %107, 1
  %111 = and i64 %110, 2147483647
  %112 = add nsw i64 %111, -1
  %113 = getelementptr inbounds %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %109, i64 %112
  %114 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %113, align 8
  %115 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %114, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 48
  %118 = icmp eq i32 %117, 16
  %119 = zext i1 %118 to i32
  %120 = add nsw i32 %108, %119
  %121 = call dereferenceable(48) %"class.GrFragmentProcessor::CIter"* @_ZN19GrFragmentProcessor5CIterppEv(%"class.GrFragmentProcessor::CIter"* nonnull %8) #7
  %122 = load i64, i64* %30, align 8
  %123 = and i64 %122, 4294967294
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %97, label %106

125:                                              ; preds = %73, %104
  %126 = phi i1 [ true, %104 ], [ false, %73 ]
  %127 = phi i32 [ %98, %104 ], [ %39, %73 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  %128 = add nuw nsw i64 %38, 1
  br i1 %126, label %35, label %129

129:                                              ; preds = %125, %35, %3
  %130 = phi i1 [ true, %3 ], [ true, %35 ], [ false, %125 ]
  ret i1 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20GrGLSLProgramBuilder22emitAndInstallXferProcERK8SkStringS2_(%class.GrGLSLProgramBuilder*, %class.SkString* dereferenceable(8), %class.SkString* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrSwizzle, align 2
  %6 = alloca %class.GrSwizzle, align 2
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"struct.GrGLSLXferProcessor::EmitArgs", align 8
  %9 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 16
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 16
  %12 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4
  %13 = bitcast %class.GrGLSLFragmentShaderBuilder* %12 to i8**
  %14 = load i8*, i8** %13, align 16
  %15 = getelementptr i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.GrGLSLFragmentShaderBuilder* %12 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = getelementptr inbounds i8, i8* %19, i64 160
  %21 = bitcast i8* %20 to %class.SkTArray*
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %21, i32 1, i32 1) #7
  %22 = bitcast i8* %20 to %class.SkString**
  %23 = load %class.SkString*, %class.SkString** %22, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 168
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %26, 1
  %28 = and i64 %27, 2147483647
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %23, i64 %28
  %30 = add i64 %26, 2
  %31 = and i64 %30, 4294967294
  %32 = and i64 %26, -4294967295
  %33 = or i64 %31, %32
  store i64 %33, i64* %25, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %29) #7
  %34 = getelementptr inbounds i8, i8* %19, i64 488
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 7
  %39 = load %class.GrProgramInfo*, %class.GrProgramInfo** %38, align 16
  %40 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %39, i64 0, i32 5
  %41 = load %class.GrPipeline*, %class.GrPipeline** %40, align 8
  %42 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %41, i64 0, i32 7, i32 0
  %43 = load %class.GrXferProcessor*, %class.GrXferProcessor** %42, align 8
  %44 = icmp eq %class.GrXferProcessor* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %3
  %46 = tail call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #7
  br label %47

47:                                               ; preds = %3, %45
  %48 = phi %class.GrXferProcessor* [ %46, %45 ], [ %43, %3 ]
  %49 = bitcast %class.GrXferProcessor* %48 to %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)***
  %50 = load %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)**, %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)*** %49, align 8
  %51 = getelementptr inbounds %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)*, %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)** %50, i64 3
  %52 = load %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)*, %class.GrGLSLXferProcessor* (%class.GrXferProcessor*)** %51, align 8
  %53 = tail call %class.GrGLSLXferProcessor* %52(%class.GrXferProcessor* %48) #7
  %54 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %55 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %54, align 8
  store %class.GrGLSLXferProcessor* %53, %class.GrGLSLXferProcessor** %54, align 8
  %56 = icmp eq %class.GrGLSLXferProcessor* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %47
  %58 = bitcast %class.GrGLSLXferProcessor* %55 to void (%class.GrGLSLXferProcessor*)***
  %59 = load void (%class.GrGLSLXferProcessor*)**, void (%class.GrGLSLXferProcessor*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %59, i64 1
  %61 = load void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %60, align 8
  tail call void %61(%class.GrGLSLXferProcessor* nonnull %55) #7
  br label %62

62:                                               ; preds = %47, %57
  %63 = tail call zeroext i1 @_ZNK15GrXferProcessor18hasSecondaryOutputEv(%class.GrXferProcessor* %48) #7
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @_ZN27GrGLSLFragmentShaderBuilder21enableSecondaryOutputEv(%class.GrGLSLFragmentShaderBuilder* %12) #7
  br label %65

65:                                               ; preds = %64, %62
  %66 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %67 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %66, align 16
  %68 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %67, i64 2
  %69 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %68, align 8
  %70 = tail call %class.GrCaps* %69(%class.GrGLSLProgramBuilder* %0) #7
  %71 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %70, i64 0, i32 2, i32 0
  %72 = load %class.GrShaderCaps*, %class.GrShaderCaps** %71, align 8
  %73 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %65
  tail call void @_ZN27GrGLSLFragmentShaderBuilder18enableCustomOutputEv(%class.GrGLSLFragmentShaderBuilder* %12) #7
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #7
  %79 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %79, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #7
  %80 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %48, i64 0, i32 0
  %81 = bitcast %class.GrXferProcessor* %48 to i8* (%class.GrProcessor*)***
  %82 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %81, align 8
  %83 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %82, i64 2
  %84 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %83, align 8
  %85 = call i8* %84(%class.GrProcessor* %80) #7
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8* %85) #7
  %86 = load i8*, i8** %13, align 16
  %87 = getelementptr i8, i8* %86, i64 -24
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i8, i8* %18, i64 %89
  %91 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %79, align 8
  %92 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %91, i64 0, i32 2
  %93 = getelementptr inbounds i8, i8* %90, i64 160
  %94 = getelementptr inbounds i8, i8* %90, i64 488
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 8
  %97 = bitcast i8* %93 to %class.SkString**
  %98 = load %class.SkString*, %class.SkString** %97, align 8
  %99 = sext i32 %96 to i64
  %100 = getelementptr inbounds %class.SkString, %class.SkString* %98, i64 %99
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %100, i64 -1, i8* %92) #7
  %101 = load %class.GrProgramInfo*, %class.GrProgramInfo** %38, align 16
  %102 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %101, i64 0, i32 5
  %103 = load %class.GrPipeline*, %class.GrPipeline** %102, align 8
  %104 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  switch i32 %105, label %106 [
    i32 2, label %107
    i32 1, label %107
    i32 3, label %156
    i32 0, label %172
  ]

106:                                              ; preds = %77
  call void @llvm.trap() #7
  unreachable

107:                                              ; preds = %77, %77
  %108 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %103, i64 0, i32 0, i32 0, i32 0
  %109 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %110 = icmp eq %class.GrSurfaceProxy* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = bitcast %class.GrSurfaceProxy* %109 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %113 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %112, align 8
  %114 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %113, i64 3
  %115 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %114, align 8
  %116 = call %class.GrTextureProxy* %115(%class.GrSurfaceProxy* nonnull %109) #7
  br label %117

117:                                              ; preds = %107, %111
  %118 = phi %class.GrTextureProxy* [ %116, %111 ], [ null, %107 ]
  %119 = bitcast %class.GrSwizzle* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %119) #7
  %120 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %5, i64 0, i32 0
  %121 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %103, i64 0, i32 0, i32 2, i32 0
  %122 = load i16, i16* %121, align 2, !noalias !5
  store i16 %122, i16* %120, align 2, !alias.scope !5
  %123 = bitcast %class.GrTextureProxy* %118 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr i8, i8* %124, i64 -24
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %class.GrTextureProxy* %118 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 %127
  %130 = getelementptr inbounds i8, i8* %129, i64 32
  %131 = bitcast i8* %130 to %class.GrBackendFormat*
  %132 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 12
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %132, align 8
  %135 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %136 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %135, align 16
  %137 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %136, i64 4
  %138 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %137, align 8
  %139 = call %class.GrGLSLUniformHandler* %138(%class.GrGLSLProgramBuilder* %0) #7
  %140 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %66, align 16
  %141 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %140, i64 2
  %142 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %141, align 8
  %143 = call %class.GrCaps* %142(%class.GrGLSLProgramBuilder* %0) #7
  %144 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %143, i64 0, i32 2, i32 0
  %145 = load %class.GrShaderCaps*, %class.GrShaderCaps** %144, align 8
  %146 = bitcast %class.GrGLSLUniformHandler* %139 to i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)***
  %147 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)**, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*** %146, align 8
  %148 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %147, i64 11
  %149 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %148, align 8
  %150 = call i32 %149(%class.GrGLSLUniformHandler* %139, %class.GrBackendFormat* dereferenceable(72) %131, i64 0, i32 0, %class.GrSwizzle* nonnull dereferenceable(2) %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), %class.GrShaderCaps* %145) #7
  %151 = icmp eq i32 %150, -1
  br i1 %151, label %155, label %152

152:                                              ; preds = %117
  %153 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %103, i64 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %119) #7
  br label %172

155:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %119) #7
  br label %249

156:                                              ; preds = %77
  %157 = bitcast %class.GrSwizzle* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %157) #7
  %158 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %6, i64 0, i32 0
  %159 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %103, i64 0, i32 0, i32 2, i32 0
  %160 = load i16, i16* %159, align 2, !noalias !8
  store i16 %160, i16* %158, align 2, !alias.scope !8
  %161 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %162 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %161, align 16
  %163 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %162, i64 4
  %164 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %163, align 8
  %165 = call %class.GrGLSLUniformHandler* %164(%class.GrGLSLProgramBuilder* %0) #7
  %166 = bitcast %class.GrGLSLUniformHandler* %165 to i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)***
  %167 = load i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)**, i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)*** %166, align 8
  %168 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)** %167, i64 12
  %169 = load i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)** %168, align 8
  %170 = call i32 %169(%class.GrGLSLUniformHandler* %165, %class.GrSwizzle* nonnull dereferenceable(2) %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #7
  %171 = icmp eq i32 %170, -1
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %157) #7
  br i1 %171, label %249, label %172

172:                                              ; preds = %156, %77, %152
  %173 = phi i32 [ %170, %156 ], [ %150, %152 ], [ -1, %77 ]
  %174 = phi i32 [ 0, %156 ], [ %154, %152 ], [ %105, %77 ]
  %175 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #7
  %176 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %176, align 8
  %177 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %178 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %177, align 8
  %179 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %183, label %182

182:                                              ; preds = %172
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %7, %class.SkString* dereferenceable(8) %1) #7
  br label %184

183:                                              ; preds = %172
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #7
  br label %184

184:                                              ; preds = %183, %182
  %185 = bitcast %"struct.GrGLSLXferProcessor::EmitArgs"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %185) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 80, i1 false)
  %186 = icmp eq %class.GrGLSLFragmentShaderBuilder* %12, null
  %187 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 2
  %188 = bitcast %class.GrGLSLXPFragmentBuilder.base* %187 to %class.GrGLSLXPFragmentBuilder*
  %189 = select i1 %186, %class.GrGLSLXPFragmentBuilder* null, %class.GrGLSLXPFragmentBuilder* %188
  %190 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %191 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %190, align 16
  %192 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %191, i64 4
  %193 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %192, align 8
  %194 = call %class.GrGLSLUniformHandler* %193(%class.GrGLSLProgramBuilder* %0) #7
  %195 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %66, align 16
  %196 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %195, i64 2
  %197 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %196, align 8
  %198 = call %class.GrCaps* %197(%class.GrGLSLProgramBuilder* %0) #7
  %199 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %198, i64 0, i32 2, i32 0
  %200 = bitcast %class.GrShaderCaps** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %176, align 8
  %203 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %202, i64 0, i32 2
  %204 = getelementptr inbounds %class.SkString, %class.SkString* %2, i64 0, i32 0, i32 0
  %205 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %204, align 8
  %206 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %205, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %205, i64 0, i32 2
  %210 = select i1 %208, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i8* %209
  %211 = call i8* @_ZNK27GrGLSLFragmentShaderBuilder25getPrimaryColorOutputNameEv(%class.GrGLSLFragmentShaderBuilder* %12) #7
  %212 = call i8* @_ZNK27GrGLSLFragmentShaderBuilder27getSecondaryColorOutputNameEv(%class.GrGLSLFragmentShaderBuilder* %12) #7
  %213 = load %class.GrProgramInfo*, %class.GrProgramInfo** %38, align 16
  %214 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %213, i64 0, i32 5
  %215 = load %class.GrPipeline*, %class.GrPipeline** %214, align 8
  %216 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %215, i64 0, i32 2
  %217 = load i32, i32* %216, align 8
  %218 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 0
  store %class.GrGLSLXPFragmentBuilder* %189, %class.GrGLSLXPFragmentBuilder** %218, align 8
  %219 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 1
  store %class.GrGLSLUniformHandler* %194, %class.GrGLSLUniformHandler** %219, align 8
  %220 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 2
  %221 = bitcast %class.GrShaderCaps** %220 to i64*
  store i64 %201, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 3
  store %class.GrXferProcessor* %48, %class.GrXferProcessor** %222, align 8
  %223 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 4
  %224 = icmp eq i8* %203, null
  %225 = select i1 %224, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %203
  store i8* %225, i8** %223, align 8
  %226 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 5
  store i8* %210, i8** %226, align 8
  %227 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 6
  store i8* %211, i8** %227, align 8
  %228 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 7
  store i8* %212, i8** %228, align 8
  %229 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 8
  store i32 %217, i32* %229, align 8
  %230 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 9, i32 0
  store i32 %173, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 10
  store i32 %174, i32* %231, align 8
  %232 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %8, i64 0, i32 11, i32 0
  %233 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %215, i64 0, i32 10, i32 0
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 4
  %235 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %54, align 8
  call void @_ZN19GrGLSLXferProcessor8emitCodeERKNS_8EmitArgsE(%class.GrGLSLXferProcessor* %235, %"struct.GrGLSLXferProcessor::EmitArgs"* nonnull dereferenceable(80) %8) #7
  %236 = load i8*, i8** %13, align 16
  %237 = getelementptr i8, i8* %236, i64 -24
  %238 = bitcast i8* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds i8, i8* %18, i64 %239
  %241 = getelementptr inbounds i8, i8* %240, i64 160
  %242 = getelementptr inbounds i8, i8* %240, i64 488
  %243 = bitcast i8* %242 to i32*
  %244 = load i32, i32* %243, align 8
  %245 = bitcast i8* %241 to %class.SkString**
  %246 = load %class.SkString*, %class.SkString** %245, align 8
  %247 = sext i32 %244 to i64
  %248 = getelementptr inbounds %class.SkString, %class.SkString* %246, i64 %247
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %248, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %185) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #7
  br label %249

249:                                              ; preds = %156, %155, %184
  %250 = phi i1 [ true, %184 ], [ false, %155 ], [ false, %156 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #7
  ret i1 %250
}

declare void @_ZN23GrGLSLGeometryProcessor17emitTransformCodeEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler(%class.GrGLSLGeometryProcessor*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*) local_unnamed_addr #1

declare void @_ZN4SkSL3dsl3EndEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20GrGLSLProgramBuilder18checkSamplerCountsEv(%class.GrGLSLProgramBuilder*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %3 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %2, align 16
  %4 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %3, i64 2
  %5 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %4, align 8
  %6 = tail call %class.GrCaps* %5(%class.GrGLSLProgramBuilder* %0) #7
  %7 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %6, i64 0, i32 2, i32 0
  %8 = load %class.GrShaderCaps*, %class.GrShaderCaps** %7, align 8
  %9 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 12
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %8, i64 0, i32 16
  %12 = load i32, i32* %11, align 8
  %13 = icmp sle i32 %10, %12
  ret i1 %13
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilder14nameExpressionEP8SkStringPKc(%class.GrGLSLProgramBuilder* nocapture readonly, %class.SkString*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %12, align 8, !alias.scope !11
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #7
  %13 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* nonnull %4, i8* %2) #7
  %14 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %12, align 8, !alias.scope !11
  %15 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %14, i64 0, i32 2
  %16 = call zeroext i1 @_Z13SkStrEndsWithPKcc(i8* %15, i8 signext 95) #7
  %17 = select i1 %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0)
  %18 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 16, !noalias !11
  %20 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %21 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %20, align 8, !noalias !11
  %22 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %21, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8* %17, i32 %19, i8* %22) #7
  %23 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %1, %class.SkString* nonnull dereferenceable(8) %4) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  br label %24

24:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #7
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret void
}

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

declare dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN20GrGLSLProgramBuilder11emitSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKc(%class.GrGLSLProgramBuilder*, %class.GrBackendFormat* dereferenceable(72), i64, i32, %class.GrSwizzle* dereferenceable(2), i8*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 12
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %11 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %10, align 16
  %12 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %11, i64 4
  %13 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %12, align 8
  %14 = tail call %class.GrGLSLUniformHandler* %13(%class.GrGLSLProgramBuilder* %0) #7
  %15 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %16 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %15, align 16
  %17 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %16, i64 2
  %18 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %17, align 8
  %19 = tail call %class.GrCaps* %18(%class.GrGLSLProgramBuilder* %0) #7
  %20 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %19, i64 0, i32 2, i32 0
  %21 = load %class.GrShaderCaps*, %class.GrShaderCaps** %20, align 8
  %22 = bitcast %class.GrGLSLUniformHandler* %14 to i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)***
  %23 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)**, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %23, i64 11
  %25 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %24, align 8
  %26 = tail call i32 %25(%class.GrGLSLUniformHandler* %14, %class.GrBackendFormat* dereferenceable(72) %1, i64 %2, i32 %3, %class.GrSwizzle* dereferenceable(2) %4, i8* %5, %class.GrShaderCaps* %21) #7
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN23GrGLSLGeometryProcessor23FPCoordTransformHandlerC1ERK10GrPipelineP8SkTArrayI11GrShaderVarLb0EE(%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"*, %class.GrPipeline* dereferenceable(128), %class.SkTArray.108*) unnamed_addr #1

declare void @_ZN23GrGLSLGeometryProcessor8emitCodeERNS_8EmitArgsE(%class.GrGLSLGeometryProcessor*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI23GrGLSLFragmentProcessorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.94"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.94"*
  br i1 %10, label %12, label %135

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.94"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.94"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr.94"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr.94"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.94"*
  %29 = icmp eq %"class.std::__1::unique_ptr.94"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %class.GrGLSLFragmentProcessor** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr.94"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr.94"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.94"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.94"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !14

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr.94"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr.94"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.94"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %130

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr.94"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr.94"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.94"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.94"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.94"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.94"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.94"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.94"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.94"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.94"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.94"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.94"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.94"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.94"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.94"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.94"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.94"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.94"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.94"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr.94"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr.94"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr.94"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.94"* %114, %115
  br i1 %116, label %130, label %117

117:                                              ; preds = %110, %128
  %118 = phi %"class.std::__1::unique_ptr.94"* [ %119, %128 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %120, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %120, align 8
  %122 = icmp eq %class.GrGLSLFragmentProcessor* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = bitcast %class.GrGLSLFragmentProcessor* %121 to void (%class.GrGLSLFragmentProcessor*)***
  %125 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %125, i64 1
  %127 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %126, align 8
  tail call void %127(%class.GrGLSLFragmentProcessor* nonnull %121) #7
  br label %128

128:                                              ; preds = %123, %117
  %129 = icmp eq %"class.std::__1::unique_ptr.94"* %119, %115
  br i1 %129, label %130, label %117

130:                                              ; preds = %128, %57, %110
  %131 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %128 ]
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = inttoptr i64 %131 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %133, %130, %2
  ret void
}

declare %class.GrGLSLFragmentProcessor* @_ZNK19GrFragmentProcessor15makeProgramImplEv(%class.GrFragmentProcessor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilder12emitFragProcERK19GrFragmentProcessorR23GrGLSLFragmentProcessoriRK8SkStringS5_(%class.SkString* noalias sret, %class.GrGLSLProgramBuilder*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40), i32, %class.SkString* nocapture readonly dereferenceable(8), %class.SkString*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.GrGLSLFragmentProcessor::ParallelRange", align 8
  %9 = alloca %"class.GrGLSLFragmentProcessor::ParallelIter", align 8
  %10 = alloca %"class.GrGLSLFragmentProcessor::ParallelIterEnd", align 1
  %11 = alloca %class.SkString, align 8
  %12 = alloca %class.GrSwizzle, align 2
  %13 = alloca %"class.GrGLSLFragmentProcessor::BuilderInputProvider", align 8
  %14 = alloca %"struct.GrGLSLFragmentProcessor::EmitArgs", align 8
  %15 = alloca %class.SkString, align 8
  %16 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %1, i64 0, i32 5
  %17 = load i32, i32* %16, align 16
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 16
  %19 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %1, i64 0, i32 4
  %20 = bitcast %class.GrGLSLFragmentShaderBuilder* %19 to i8**
  %21 = load i8*, i8** %20, align 16
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %class.GrGLSLFragmentShaderBuilder* %19 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = getelementptr inbounds i8, i8* %26, i64 160
  %28 = bitcast i8* %27 to %class.SkTArray*
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %28, i32 1, i32 1) #7
  %29 = bitcast i8* %27 to %class.SkString**
  %30 = load %class.SkString*, %class.SkString** %29, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 168
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = getelementptr inbounds %class.SkString, %class.SkString* %30, i64 %35
  %37 = add i64 %33, 2
  %38 = and i64 %37, 4294967294
  %39 = and i64 %33, -4294967295
  %40 = or i64 %38, %39
  store i64 %40, i64* %32, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %36) #7
  %41 = getelementptr inbounds i8, i8* %26, i64 488
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %42, align 8
  tail call void @_ZN20GrGLSLProgramBuilder14nameExpressionEP8SkStringPKc(%class.GrGLSLProgramBuilder* %1, %class.SkString* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  %45 = load i8*, i8** %20, align 16
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  %50 = bitcast i8* %49 to %class.GrGLSLShaderBuilder*
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  %52 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %52, i64 0, i32 2
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* %53)
  %54 = bitcast %"class.GrGLSLFragmentProcessor::ParallelRange"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #7
  call void @_ZN23GrGLSLFragmentProcessor13ParallelRangeC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelRange"* nonnull %8, %class.GrFragmentProcessor* dereferenceable(64) %2, %class.GrGLSLFragmentProcessor* dereferenceable(40) %3) #7
  %55 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %55) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 96, i1 false)
  %56 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelRange", %"class.GrGLSLFragmentProcessor::ParallelRange"* %8, i64 0, i32 0
  %57 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %56, align 8, !noalias !16
  %58 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelRange", %"class.GrGLSLFragmentProcessor::ParallelRange"* %8, i64 0, i32 1
  %59 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %58, align 8, !noalias !16
  call void @_ZN23GrGLSLFragmentProcessor12ParallelIterC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %9, %class.GrFragmentProcessor* dereferenceable(64) %57, %class.GrGLSLFragmentProcessor* dereferenceable(40) %59) #7
  %60 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIterEnd", %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #7
  store i8 -86, i8* %60, align 1
  %61 = call zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %9, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* nonnull dereferenceable(1) %10) #7
  br i1 %61, label %117, label %62

62:                                               ; preds = %7
  %63 = bitcast %class.SkString* %11 to i8*
  %64 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 0, i32 0, i32 0
  %65 = bitcast %class.GrSwizzle* %12 to i8*
  %66 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %12, i64 0, i32 0
  %67 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %1, i64 0, i32 12
  %68 = bitcast %class.GrGLSLProgramBuilder* %1 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %69 = bitcast %class.GrGLSLProgramBuilder* %1 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  br label %70

70:                                               ; preds = %62, %113
  %71 = phi i32 [ 0, %62 ], [ %114, %113 ]
  %72 = call { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } @_ZNK23GrGLSLFragmentProcessor12ParallelIterdeEv(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %9) #7
  %73 = extractvalue { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } %72, 0
  %74 = extractvalue { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } %72, 1
  %75 = call %class.GrTextureEffect* @_ZNK19GrFragmentProcessor15asTextureEffectEv(%class.GrFragmentProcessor* %73) #7
  %76 = icmp eq %class.GrTextureEffect* %75, null
  br i1 %76, label %113, label %77

77:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #7
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %64, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %11) #7
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 %71) #7
  %78 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %75, i64 0, i32 3
  %79 = bitcast %class.GrSamplerState* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %75, i64 0, i32 3, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %75, i64 0, i32 2, i32 0, i32 0
  %84 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %83, align 8
  %85 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %84, i64 0, i32 5
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %65) #7
  %86 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %75, i64 0, i32 2, i32 2, i32 0
  %87 = load i16, i16* %86, align 2, !noalias !19
  store i16 %87, i16* %66, align 2, !alias.scope !19
  %88 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %64, align 8
  %89 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %88, i64 0, i32 2
  %90 = load i32, i32* %67, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %67, align 8
  %92 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %68, align 16
  %93 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %92, i64 4
  %94 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %93, align 8
  %95 = call %class.GrGLSLUniformHandler* %94(%class.GrGLSLProgramBuilder* %1) #7
  %96 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %69, align 16
  %97 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %96, i64 2
  %98 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %97, align 8
  %99 = call %class.GrCaps* %98(%class.GrGLSLProgramBuilder* %1) #7
  %100 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %99, i64 0, i32 2, i32 0
  %101 = load %class.GrShaderCaps*, %class.GrShaderCaps** %100, align 8
  %102 = bitcast %class.GrGLSLUniformHandler* %95 to i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)***
  %103 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)**, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*** %102, align 8
  %104 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %103, i64 11
  %105 = load i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)** %104, align 8
  %106 = call i32 %105(%class.GrGLSLUniformHandler* %95, %class.GrBackendFormat* dereferenceable(72) %85, i64 %80, i32 %82, %class.GrSwizzle* nonnull dereferenceable(2) %12, i8* %89, %class.GrShaderCaps* %101) #7
  %107 = icmp eq i32 %106, -1
  br i1 %107, label %108, label %109

108:                                              ; preds = %77
  call void @_ZN8SkStringC1Ev(%class.SkString* %0) #7
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %65) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  br label %117

109:                                              ; preds = %77
  %110 = add nsw i32 %71, 1
  %111 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %74, i64 1, i32 1, i32 1
  %112 = bitcast i64* %111 to i32*
  store i32 %106, i32* %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %65) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  br label %113

113:                                              ; preds = %109, %70
  %114 = phi i32 [ %71, %70 ], [ %110, %109 ]
  %115 = call dereferenceable(96) %"class.GrGLSLFragmentProcessor::ParallelIter"* @_ZN23GrGLSLFragmentProcessor12ParallelIterppEv(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %9) #7
  %116 = call zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %9, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* nonnull dereferenceable(1) %10) #7
  br i1 %116, label %117, label %70

117:                                              ; preds = %113, %7, %108
  %118 = phi i32 [ 1, %108 ], [ 2, %7 ], [ 2, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #7
  %119 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i64 40
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i64 32
  %126 = bitcast i8* %125 to i8**
  %127 = load i8*, i8** %126, align 8
  call void @_Z7sk_freePv(i8* %127) #7
  br label %128

128:                                              ; preds = %124, %117
  %129 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 40
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 32
  %136 = bitcast i8* %135 to i8**
  %137 = load i8*, i8** %136, align 8
  call void @_Z7sk_freePv(i8* %137) #7
  br label %138

138:                                              ; preds = %128, %134
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %55) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #7
  %139 = icmp eq i32 %118, 2
  br i1 %139, label %140, label %189

140:                                              ; preds = %138
  %141 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %1, i64 0, i32 13, i32 0, i32 0, i64 160
  %142 = bitcast i8* %141 to %class.GrShaderVar**
  %143 = load %class.GrShaderVar*, %class.GrShaderVar** %142, align 8
  %144 = sext i32 %4 to i64
  %145 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %143, i64 %144
  %146 = bitcast %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #7
  %147 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::BuilderInputProvider", %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* %13, i64 0, i32 0
  %148 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::BuilderInputProvider", %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* %13, i64 0, i32 1
  store %class.GrFragmentProcessor* %2, %class.GrFragmentProcessor** %147, align 8
  store %class.GrShaderVar* %145, %class.GrShaderVar** %148, align 8
  %149 = bitcast %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %149) #7
  %150 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14, i64 0, i32 2
  %151 = bitcast %class.GrShaderCaps** %150 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 40, i1 false)
  %152 = bitcast %class.GrGLSLFragmentShaderBuilder* %19 to %class.GrGLSLFPFragmentBuilder*
  %153 = bitcast %class.GrGLSLProgramBuilder* %1 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %154 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %153, align 16
  %155 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %154, i64 4
  %156 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %155, align 8
  %157 = call %class.GrGLSLUniformHandler* %156(%class.GrGLSLProgramBuilder* %1) #7
  %158 = bitcast %class.GrGLSLProgramBuilder* %1 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %159 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %158, align 16
  %160 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %159, i64 2
  %161 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %160, align 8
  %162 = call %class.GrCaps* %161(%class.GrGLSLProgramBuilder* %1) #7
  %163 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %162, i64 0, i32 2, i32 0
  %164 = bitcast %class.GrShaderCaps** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14 to %class.GrGLSLFragmentShaderBuilder**
  store %class.GrGLSLFragmentShaderBuilder* %19, %class.GrGLSLFragmentShaderBuilder** %166, align 8
  %167 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14, i64 0, i32 1
  store %class.GrGLSLUniformHandler* %157, %class.GrGLSLUniformHandler** %167, align 8
  %168 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14, i64 0, i32 2
  %169 = bitcast %class.GrShaderCaps** %168 to i64*
  store i64 %165, i64* %169, align 8
  %170 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14, i64 0, i32 3
  store %class.GrFragmentProcessor* %2, %class.GrFragmentProcessor** %170, align 8
  %171 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14, i64 0, i32 4
  %172 = bitcast i8** %171 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %172, align 8
  %173 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %14, i64 0, i32 6
  store %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* %13, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"** %173, align 8
  %174 = bitcast %class.SkString* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #7
  %175 = getelementptr inbounds %class.SkString, %class.SkString* %15, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %175, align 8
  call void @_ZN23GrGLSLFPFragmentBuilder22writeProcessorFunctionEP23GrGLSLFragmentProcessorRNS0_8EmitArgsE(%class.SkString* nonnull sret %15, %class.GrGLSLFPFragmentBuilder* %152, %class.GrGLSLFragmentProcessor* %3, %"struct.GrGLSLFragmentProcessor::EmitArgs"* nonnull dereferenceable(56) %14) #7
  %176 = load i8*, i8** %20, align 16
  %177 = getelementptr i8, i8* %176, i64 -24
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i8, i8* %25, i64 %179
  %181 = bitcast i8* %180 to %class.GrGLSLShaderBuilder*
  %182 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %183 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %182, i64 0, i32 2
  %184 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %175, align 8
  %185 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %184, i64 0, i32 2
  %186 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  %187 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %186, align 8
  %188 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %187, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %181, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* %183, i8* %185, i8* %188)
  call void @_ZN8SkStringC1EOS_(%class.SkString* %0, %class.SkString* dereferenceable(8) %6) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %149) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #7
  br label %189

189:                                              ; preds = %138, %140
  ret void
}

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(48) %"class.GrFragmentProcessor::CIter"* @_ZN19GrFragmentProcessor5CIterppEv(%"class.GrFragmentProcessor::CIter"*) local_unnamed_addr #1

declare void @_ZN23GrGLSLFragmentProcessor13ParallelRangeC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelRange"*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40)) unnamed_addr #1

declare { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } @_ZNK23GrGLSLFragmentProcessor12ParallelIterdeEv(%"class.GrGLSLFragmentProcessor::ParallelIter"*) local_unnamed_addr #1

declare %class.GrTextureEffect* @_ZNK19GrFragmentProcessor15asTextureEffectEv(%class.GrFragmentProcessor*) local_unnamed_addr #1

declare dereferenceable(96) %"class.GrGLSLFragmentProcessor::ParallelIter"* @_ZN23GrGLSLFragmentProcessor12ParallelIterppEv(%"class.GrGLSLFragmentProcessor::ParallelIter"*) local_unnamed_addr #1

declare void @_ZN23GrGLSLFPFragmentBuilder22writeProcessorFunctionEP23GrGLSLFragmentProcessorRNS0_8EmitArgsE(%class.SkString* sret, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK15GrXferProcessor18hasSecondaryOutputEv(%class.GrXferProcessor*) local_unnamed_addr #1

declare void @_ZN27GrGLSLFragmentShaderBuilder21enableSecondaryOutputEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1

declare void @_ZN27GrGLSLFragmentShaderBuilder18enableCustomOutputEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN20GrGLSLProgramBuilder16emitInputSamplerERK9GrSwizzlePKc(%class.GrGLSLProgramBuilder*, %class.GrSwizzle* dereferenceable(2), i8*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %5 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %4, align 16
  %6 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %5, i64 4
  %7 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %6, align 8
  %8 = tail call %class.GrGLSLUniformHandler* %7(%class.GrGLSLProgramBuilder* %0) #7
  %9 = bitcast %class.GrGLSLUniformHandler* %8 to i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)***
  %10 = load i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)**, i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)** %10, i64 12
  %12 = load i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)*, i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)** %11, align 8
  %13 = tail call i32 %12(%class.GrGLSLUniformHandler* %8, %class.GrSwizzle* dereferenceable(2) %1, i8* %2) #7
  ret i32 %13
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #1

declare i8* @_ZNK27GrGLSLFragmentShaderBuilder25getPrimaryColorOutputNameEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1

declare i8* @_ZNK27GrGLSLFragmentShaderBuilder27getSecondaryColorOutputNameEv(%class.GrGLSLFragmentShaderBuilder*) local_unnamed_addr #1

declare void @_ZN19GrGLSLXferProcessor8emitCodeERKNS_8EmitArgsE(%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* noalias sret, %class.GrGLSLProgramBuilder* nocapture readonly, i8 signext, i8*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %6, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %0) #7
  %7 = icmp eq i8 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %0, i8* %3) #7
  br label %12

10:                                               ; preds = %5
  %11 = sext i8 %2 to i32
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i32 %11, i8* %3) #7
  br label %12

12:                                               ; preds = %10, %8
  br i1 %4, label %13, label %23

13:                                               ; preds = %12
  %14 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %15 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %14, i64 0, i32 2
  %16 = tail call zeroext i1 @_Z13SkStrEndsWithPKcc(i8* %15, i8 signext 95) #7
  %17 = select i1 %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0)
  %18 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %1, i64 0, i32 5
  %19 = load i32, i32* %18, align 16
  %20 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %1, i64 0, i32 4, i32 4, i32 0, i32 0
  %21 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %21, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8* %17, i32 %19, i8* %22) #7
  br label %23

23:                                               ; preds = %12, %13
  ret void
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #1

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrGLSLProgramBuilder18appendUniformDeclsE13GrShaderFlagsP8SkString(%class.GrGLSLProgramBuilder*, i32, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %5 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %4, align 16
  %6 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %5, i64 5
  %7 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %6, align 8
  %8 = tail call %class.GrGLSLUniformHandler* %7(%class.GrGLSLProgramBuilder* %0) #7
  %9 = bitcast %class.GrGLSLUniformHandler* %8 to void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)***
  %10 = load void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)**, void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)*, void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)** %10, i64 14
  %12 = load void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)*, void (%class.GrGLSLUniformHandler*, i32, %class.SkString*)** %11, align 8
  tail call void %12(%class.GrGLSLUniformHandler* %8, i32 %1, %class.SkString* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder*, i8*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %4 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %3, align 16
  %5 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %4, i64 4
  %6 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %5, align 8
  %7 = tail call %class.GrGLSLUniformHandler* %6(%class.GrGLSLProgramBuilder* %0) #7
  %8 = bitcast %class.GrGLSLUniformHandler* %7 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %9 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %9, i64 13
  %11 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %10, align 8
  %12 = tail call i32 %11(%class.GrGLSLUniformHandler* %7, %class.GrFragmentProcessor* null, i32 16, i32 28, i8* %1, i1 zeroext false, i32 0, i8** null) #7
  %13 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 8, i32 1, i32 0
  store i32 %12, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLProgramBuilder15finalizeShadersEv(%class.GrGLSLProgramBuilder*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrGLSLProgramBuilder* %0 to %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)***
  %3 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*** %2, align 16
  %4 = getelementptr inbounds %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %3, i64 6
  %5 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %4, align 8
  %6 = tail call %class.GrGLSLVaryingHandler* %5(%class.GrGLSLProgramBuilder* %0) #7
  tail call void @_ZN20GrGLSLVaryingHandler8finalizeEv(%class.GrGLSLVaryingHandler* %6) #7
  %7 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 2
  %8 = bitcast %class.GrGLSLVertexBuilder* %7 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilder8finalizeEj(%class.GrGLSLShaderBuilder* %8, i32 1) #7
  %9 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 7
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 16
  %11 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %10, i64 0, i32 7
  %12 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %11, align 8
  %13 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 3
  %19 = bitcast %class.GrGLSLGeometryBuilder* %18 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilder8finalizeEj(%class.GrGLSLShaderBuilder* %19, i32 8) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %0, i64 0, i32 4
  %22 = bitcast %class.GrGLSLFragmentShaderBuilder* %21 to i8**
  %23 = load i8*, i8** %22, align 16
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %class.GrGLSLFragmentShaderBuilder* %21 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = bitcast i8* %28 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilder8finalizeEj(%class.GrGLSLShaderBuilder* %29, i32 16) #7
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler8finalizeEv(%class.GrGLSLVaryingHandler*) local_unnamed_addr #1

declare void @_ZN19GrGLSLShaderBuilder8finalizeEj(%class.GrGLSLShaderBuilder*, i32) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrGLSLProgramBuilder27finalizeFragmentOutputColorER11GrShaderVar(%class.GrGLSLProgramBuilder*, %class.GrShaderVar* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrGLSLProgramBuilder30finalizeFragmentSecondaryColorER11GrShaderVar(%class.GrGLSLProgramBuilder*, %class.GrShaderVar* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN19GrGLSLShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLShaderBuilder*, %class.GrGLSLProgramBuilder*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD0Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !22
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !22
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !22
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !22
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !22
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !22
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !22
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %59, %79, %1
  %41 = bitcast %class.GrTBlockList* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #7
  ret void

42:                                               ; preds = %75, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %76, %75 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %77, %75 ]
  %45 = phi i32 [ %22, %19 ], [ %78, %75 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %57, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 24
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #7
  %55 = getelementptr inbounds i8, i8* %50, i64 16
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #7
  %57 = add i32 %48, -40
  %58 = icmp slt i32 %57, 32
  br i1 %58, label %59, label %47

59:                                               ; preds = %47
  %60 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %60, label %40, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %63 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %62, align 8
  %64 = icmp eq %"class.GrBlockAllocator::Block"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %63
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi %"class.GrBlockAllocator::Block"* [ null, %61 ], [ %69, %65 ]
  %72 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %91, %70
  %76 = phi %"class.GrBlockAllocator::Block"* [ %44, %70 ], [ %80, %91 ]
  %77 = phi %"class.GrBlockAllocator::Block"* [ %71, %70 ], [ %92, %91 ]
  %78 = phi i32 [ %73, %70 ], [ %94, %91 ]
  br label %42

79:                                               ; preds = %70, %91
  %80 = phi %"class.GrBlockAllocator::Block"* [ %92, %91 ], [ %71, %70 ]
  %81 = icmp eq %"class.GrBlockAllocator::Block"* %80, null
  br i1 %81, label %40, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 1
  %84 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %83, align 8
  %85 = icmp eq %"class.GrBlockAllocator::Block"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %84
  br label %91

91:                                               ; preds = %86, %82
  %92 = phi %"class.GrBlockAllocator::Block"* [ null, %82 ], [ %90, %86 ]
  %93 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %79, label %75
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #7
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #7
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #7
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #7
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

declare void @_ZN23GrGLSLFragmentProcessor12ParallelIterC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelIter"*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40)) unnamed_addr #1

declare zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"*, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #1

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #1

declare zeroext i1 @_Z13SkStrEndsWithPKcc(i8*, i8 signext) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI23GrGLSLFragmentProcessorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.94"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.94"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.94"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.94"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.94"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.94"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.94"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.94"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.94"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.94"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.94"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.GrGLSLFragmentProcessor** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.94"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.94"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.94"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.94"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !25

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.94"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.94"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.94"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.94"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.94"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.94"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.94"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.94"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.94"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.94"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.94"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.94"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.94"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.94"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.94"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.94"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.94"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.94"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.94"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.94"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.94"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.94"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.94"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.94"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.94"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.94"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.94"*
  %138 = icmp eq %"class.std::__1::unique_ptr.94"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.94"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %142, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %142, align 8
  %144 = icmp eq %class.GrGLSLFragmentProcessor* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %class.GrGLSLFragmentProcessor* %143 to void (%class.GrGLSLFragmentProcessor*)***
  %147 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %147, i64 1
  %149 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %148, align 8
  tail call void %149(%class.GrGLSLFragmentProcessor* nonnull %143) #7
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.94"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPK19GrFragmentProcessorLb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.199*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.199, %class.SkTArray.199* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #7
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.199* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #7
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.199* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #7
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK19GrFragmentProcessor10CIterRangeIS_E5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK19GrFragmentProcessor10CIterRangeIS_E5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!7 = distinct !{!7, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!10 = distinct !{!10, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb: argument 0"}
!13 = distinct !{!13, !"_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN23GrGLSLFragmentProcessor13ParallelRange5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZN23GrGLSLFragmentProcessor13ParallelRange5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!21 = distinct !{!21, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
!25 = distinct !{!25, !15}
