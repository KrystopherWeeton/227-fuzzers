; ModuleID = '../../base/profiler/sample_metadata.cc'
source_filename = "../../base/profiler/sample_metadata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [2104 x i8] }
%"class.base::SampleMetadata" = type { i64 }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.base::MetadataRecorder" = type { i32 (...)**, %"struct.std::__1::array", %"struct.std::__1::atomic.5", i64, %"class.base::Lock", %"class.base::Lock" }
%"struct.std::__1::array" = type { [50 x %"struct.base::MetadataRecorder::ItemInternal"] }
%"struct.base::MetadataRecorder::ItemInternal" = type { %"struct.std::__1::atomic", i64, %"class.absl::optional", %"struct.std::__1::atomic.0" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i64 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

@_ZZN4base25GetSampleMetadataRecorderEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base25GetSampleMetadataRecorderEvE8instance = internal global i64 0, align 8

@_ZN4base14SampleMetadataC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::SampleMetadata"*, i8*, i64), void (%"class.base::SampleMetadata"*, i8*, i64)* @_ZN4base14SampleMetadataC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base20ScopedSampleMetadataC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEl = hidden unnamed_addr alias void (%"class.base::ScopedSampleMetadata"*, i8*, i64, i64), void (%"class.base::ScopedSampleMetadata"*, i8*, i64, i64)* @_ZN4base20ScopedSampleMetadataC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEl
@_ZN4base20ScopedSampleMetadataC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEll = hidden unnamed_addr alias void (%"class.base::ScopedSampleMetadata"*, i8*, i64, i64, i64), void (%"class.base::ScopedSampleMetadata"*, i8*, i64, i64, i64)* @_ZN4base20ScopedSampleMetadataC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEll
@_ZN4base20ScopedSampleMetadataD1Ev = hidden unnamed_addr alias void (%"class.base::ScopedSampleMetadata"*), void (%"class.base::ScopedSampleMetadata"*)* @_ZN4base20ScopedSampleMetadataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14SampleMetadataC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::SampleMetadata"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::SampleMetadata", %"class.base::SampleMetadata"* %0, i64 0, i32 0
  %5 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %2) #3
  store i64 %5, i64* %4, align 8
  ret void
}

declare i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14SampleMetadata3SetEl(%"class.base::SampleMetadata"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = getelementptr inbounds %"class.base::SampleMetadata", %"class.base::SampleMetadata"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  tail call void @_ZN4base16MetadataRecorder3SetEmN4absl8optionalIlEEl(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %11, i8 0, i64 undef, i64 %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::MetadataRecorder"* @_ZN4base25GetSampleMetadataRecorderEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)
}

declare void @_ZN4base16MetadataRecorder3SetEmN4absl8optionalIlEEl(%"class.base::MetadataRecorder"*, i64, i8, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14SampleMetadata3SetEll(%"class.base::SampleMetadata"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %10

10:                                               ; preds = %3, %6, %9
  %11 = getelementptr inbounds %"class.base::SampleMetadata", %"class.base::SampleMetadata"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  tail call void @_ZN4base16MetadataRecorder3SetEmN4absl8optionalIlEEl(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %12, i8 1, i64 %1, i64 %2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14SampleMetadata6RemoveEv(%"class.base::SampleMetadata"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = getelementptr inbounds %"class.base::SampleMetadata", %"class.base::SampleMetadata"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  tail call void @_ZN4base16MetadataRecorder6RemoveEmN4absl8optionalIlEE(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %10, i8 0, i64 undef) #3
  ret void
}

declare void @_ZN4base16MetadataRecorder6RemoveEmN4absl8optionalIlEE(%"class.base::MetadataRecorder"*, i64, i8, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14SampleMetadata6RemoveEl(%"class.base::SampleMetadata"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = getelementptr inbounds %"class.base::SampleMetadata", %"class.base::SampleMetadata"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  tail call void @_ZN4base16MetadataRecorder6RemoveEmN4absl8optionalIlEE(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %11, i8 1, i64 %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20ScopedSampleMetadataC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEl(%"class.base::ScopedSampleMetadata"* nocapture, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 0
  %6 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %2) #3
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14, !prof !2

10:                                               ; preds = %4
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %14

14:                                               ; preds = %4, %10, %13
  %15 = load i64, i64* %5, align 8
  tail call void @_ZN4base16MetadataRecorder3SetEmN4absl8optionalIlEEl(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %15, i8 0, i64 undef, i64 %3) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20ScopedSampleMetadataC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEll(%"class.base::ScopedSampleMetadata"* nocapture, i8*, i64, i64, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 0
  %7 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %2) #3
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %3, i64* %9, align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !2

12:                                               ; preds = %5
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %16

16:                                               ; preds = %5, %12, %15
  %17 = load i64, i64* %6, align 8
  tail call void @_ZN4base16MetadataRecorder3SetEmN4absl8optionalIlEEl(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %17, i8 1, i64 %3, i64 %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20ScopedSampleMetadataD2Ev(%"class.base::ScopedSampleMetadata"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*)) #3
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base25GetSampleMetadataRecorderEvE8instance) #3
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = getelementptr inbounds %"class.base::ScopedSampleMetadata", %"class.base::ScopedSampleMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN4base16MetadataRecorder6RemoveEmN4absl8optionalIlEE(%"class.base::MetadataRecorder"* bitcast (%"class.base::NoDestructor"* @_ZZN4base25GetSampleMetadataRecorderEvE8instance to %"class.base::MetadataRecorder"*), i64 %10, i8 %12, i64 %14) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base30ApplyMetadataToPastSamplesImplENS_9TimeTicksES0_lN4absl8optionalIlEEl(i64, i64, i64, i8, i64, i64) local_unnamed_addr #0 {
  tail call void @_ZN4base21StackSamplingProfiler26ApplyMetadataToPastSamplesENS_9TimeTicksES1_lN4absl8optionalIlEEl(i64 %0, i64 %1, i64 %2, i8 %3, i64 %4, i64 %5) #3
  ret void
}

declare void @_ZN4base21StackSamplingProfiler26ApplyMetadataToPastSamplesENS_9TimeTicksES1_lN4absl8optionalIlEEl(i64, i64, i64, i8, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26ApplyMetadataToPastSamplesENS_9TimeTicksES0_NS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEl(i64, i64, i8*, i64, i64) local_unnamed_addr #0 {
  %6 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %2, i64 %3) #3
  tail call void @_ZN4base21StackSamplingProfiler26ApplyMetadataToPastSamplesENS_9TimeTicksES1_lN4absl8optionalIlEEl(i64 %0, i64 %1, i64 %6, i8 0, i64 undef, i64 %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26ApplyMetadataToPastSamplesENS_9TimeTicksES0_NS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEll(i64, i64, i8*, i64, i64, i64) local_unnamed_addr #0 {
  %7 = tail call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %2, i64 %3) #3
  tail call void @_ZN4base21StackSamplingProfiler26ApplyMetadataToPastSamplesENS_9TimeTicksES1_lN4absl8optionalIlEEl(i64 %0, i64 %1, i64 %7, i8 1, i64 %4, i64 %5) #3
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

declare void @_ZN4base16MetadataRecorderC1Ev(%"class.base::MetadataRecorder"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
