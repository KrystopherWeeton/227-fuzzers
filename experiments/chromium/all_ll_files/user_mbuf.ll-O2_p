; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.10, %struct.anon.11, %struct.anon.12, %struct.anon.13, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon.2, %struct.anon.3, %struct.anon.4, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.9, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon.2 = type { %struct.socket*, %struct.socket** }
%struct.anon.3 = type { %struct.socket*, %struct.socket** }
%struct.anon.4 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.5, %union.anon.7, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.5 = type { i64 }
%union.anon.7 = type { i64 }
%struct.sigio = type opaque
%struct.anon.9 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct.pkthdr, %union.anon.1 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.0, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.0 = type { %struct.m_tag* }
%union.anon.1 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.40, %struct.sctp_readhead, %struct.anon.49, %struct.anon.50, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.40 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.41, %struct.anon.42, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.46, %struct.anon.47, %struct.anon.48, %struct.inpcbport*, %struct.mtx }
%struct.anon.41 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.42 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.44, %union.anon.45 }
%union.anon.44 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.45 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.46 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.47 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.48 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.43, %struct.inpcbhead, i16 }
%struct.anon.43 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.35, %struct.anon.36, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.23, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.23 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.24, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.24 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon.15, %struct.anon.16, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon.15 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.16 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.18, %struct.anon.19, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.17, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.17 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.18 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.19 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.35 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.36 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.25, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.26, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.25 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.26 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.49 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.50 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctp_laddr = type { %struct.anon.22, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.22 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.38, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.38 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctp_iterator = type { %struct.anon.33, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.33 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.10 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.11 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.12 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.13 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon.14, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon.14 = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.32 }
%union.anon.32 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.34, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.34 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.27, %struct.anon.28, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.27 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.28 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.30, i16 }
%struct.anon.30 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.37, i32, i32, i32, [0 x i16] }
%struct.anon.37 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_cc_functions = type { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_ss_functions = type { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.39, [15 x %struct.sctp_timewait] }
%struct.anon.39 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.21, i32, i8*, void (i8*)*, i32 }
%struct.anon.21 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%struct.clust_args = type { %struct.mbuf* }
%struct.uio = type { %struct.iovec*, i32, i64, i64, i32, i32 }
%struct.iovec = type { i8*, i64 }

@max_linkhdr = hidden local_unnamed_addr global i32 4, align 4
@max_protohdr = hidden local_unnamed_addr global i32 5, align 4
@zone_mbuf = common hidden local_unnamed_addr global i64 0, align 8
@zone_clust = common hidden local_unnamed_addr global i64 0, align 8
@system_base_info = external local_unnamed_addr global %struct.sctp_base_info, align 8
@zone_ext_refcnt = common hidden local_unnamed_addr global i64 0, align 8
@clust_mb_args = common hidden local_unnamed_addr global %struct.clust_args zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_get(i32, i16 signext) local_unnamed_addr #0 {
  %3 = load i64, i64* @zone_mbuf, align 8
  %4 = tail call noalias i8* @malloc(i64 %3) #9
  %5 = bitcast i8* %4 to %struct.mbuf*
  %6 = icmp eq i8* %4, null
  %7 = icmp eq i16 %1, 255
  %8 = or i1 %7, %6
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %4, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 28
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %4, i64 32
  %15 = bitcast i8* %14 to i16*
  store i16 %1, i16* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = getelementptr inbounds i8, i8* %4, i64 16
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  br label %19

19:                                               ; preds = %9, %2
  ret %struct.mbuf* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_gethdr(i32, i16 signext) local_unnamed_addr #0 {
  %3 = load i64, i64* @zone_mbuf, align 8
  %4 = tail call noalias i8* @malloc(i64 %3) #9
  %5 = bitcast i8* %4 to %struct.mbuf*
  %6 = icmp eq i8* %4, null
  %7 = icmp eq i16 %1, 255
  %8 = or i1 %7, %6
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %4, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 28
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %4, i64 32
  %15 = bitcast i8* %14 to i16*
  store i16 %1, i16* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = getelementptr inbounds i8, i8* %4, i64 80
  %18 = getelementptr inbounds i8, i8* %4, i64 16
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 40, i1 false) #9
  br label %20

20:                                               ; preds = %9, %2
  ret %struct.mbuf* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_free(%struct.mbuf* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 0
  %3 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %4 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @mb_free_ext(%struct.mbuf* %0)
  br label %62

9:                                                ; preds = %1
  %10 = and i32 %5, 262144
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %62

12:                                               ; preds = %9
  %13 = bitcast %struct.mbuf* %0 to i8*
  %14 = and i32 %5, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %61, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7
  %18 = getelementptr inbounds %struct.packet_tags, %struct.packet_tags* %17, i64 0, i32 0
  %19 = load %struct.m_tag*, %struct.m_tag** %18, align 8
  %20 = icmp eq %struct.m_tag* %19, null
  br i1 %20, label %61, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %19, i64 0, i32 0, i32 0
  %23 = load %struct.m_tag*, %struct.m_tag** %22, align 8
  %24 = icmp eq %struct.m_tag* %23, null
  %25 = bitcast %struct.packet_tags* %17 to i64*
  br i1 %24, label %57, label %26

26:                                               ; preds = %21, %42
  %27 = phi %struct.m_tag* [ %47, %42 ], [ %19, %21 ]
  %28 = phi %struct.m_tag* [ %45, %42 ], [ %23, %21 ]
  %29 = icmp eq %struct.m_tag* %27, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = bitcast %struct.m_tag* %27 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %25, align 8
  br label %42

33:                                               ; preds = %26, %33
  %34 = phi %struct.m_tag* [ %36, %33 ], [ %27, %26 ]
  %35 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %34, i64 0, i32 0, i32 0
  %36 = load %struct.m_tag*, %struct.m_tag** %35, align 8
  %37 = icmp eq %struct.m_tag* %36, %28
  br i1 %37, label %38, label %33

38:                                               ; preds = %33
  %39 = bitcast %struct.m_tag* %28 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %struct.m_tag* %34 to i64*
  store i64 %40, i64* %41, align 8
  br label %42

42:                                               ; preds = %38, %30
  %43 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %28, i64 0, i32 4
  %44 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %43, align 8
  tail call void %44(%struct.m_tag* nonnull %28) #9
  %45 = load %struct.m_tag*, %struct.m_tag** %22, align 8
  %46 = icmp eq %struct.m_tag* %45, null
  %47 = load %struct.m_tag*, %struct.m_tag** %18, align 8
  br i1 %46, label %48, label %26

48:                                               ; preds = %42
  %49 = icmp eq %struct.m_tag* %47, %19
  br i1 %49, label %57, label %50

50:                                               ; preds = %48, %50
  %51 = phi %struct.m_tag* [ %53, %50 ], [ %47, %48 ]
  %52 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %51, i64 0, i32 0, i32 0
  %53 = load %struct.m_tag*, %struct.m_tag** %52, align 8
  %54 = icmp eq %struct.m_tag* %53, %19
  br i1 %54, label %55, label %50

55:                                               ; preds = %50
  %56 = bitcast %struct.m_tag* %51 to i64*
  br label %57

57:                                               ; preds = %21, %48, %55
  %58 = phi i64* [ %56, %55 ], [ %25, %48 ], [ %25, %21 ]
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %19, i64 0, i32 4
  %60 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %59, align 8
  tail call void %60(%struct.m_tag* nonnull %19) #9
  br label %61

61:                                               ; preds = %12, %16, %57
  tail call void @free(i8* %13) #9
  br label %62

62:                                               ; preds = %9, %61, %8
  ret %struct.mbuf* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @mb_free_ext(%struct.mbuf* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 262144
  %5 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %7 = load i32*, i32** %6, align 8
  %8 = atomicrmw add i32* %7, i32 -1 seq_cst
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.m_ext, %struct.m_ext* %5, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @free(i8* %16) #9
  %17 = bitcast i32** %6 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @free(i8* %18) #9
  store i32* null, i32** %6, align 8
  br label %19

19:                                               ; preds = %10, %14, %1
  %20 = icmp eq i32 %4, 0
  br i1 %20, label %21, label %75

21:                                               ; preds = %19
  store i32* null, i32** %6, align 8
  %22 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  store i32 0, i32* %22, align 8
  %23 = bitcast %struct.m_ext* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 28, i1 false)
  %24 = load i32, i32* %2, align 4
  %25 = and i32 %24, -2
  store i32 %25, i32* %2, align 4
  %26 = bitcast %struct.mbuf* %0 to i8*
  %27 = and i32 %24, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %74, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7
  %31 = getelementptr inbounds %struct.packet_tags, %struct.packet_tags* %30, i64 0, i32 0
  %32 = load %struct.m_tag*, %struct.m_tag** %31, align 8
  %33 = icmp eq %struct.m_tag* %32, null
  br i1 %33, label %74, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %32, i64 0, i32 0, i32 0
  %36 = load %struct.m_tag*, %struct.m_tag** %35, align 8
  %37 = icmp eq %struct.m_tag* %36, null
  %38 = bitcast %struct.packet_tags* %30 to i64*
  br i1 %37, label %70, label %39

39:                                               ; preds = %34, %55
  %40 = phi %struct.m_tag* [ %60, %55 ], [ %32, %34 ]
  %41 = phi %struct.m_tag* [ %58, %55 ], [ %36, %34 ]
  %42 = icmp eq %struct.m_tag* %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = bitcast %struct.m_tag* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %38, align 8
  br label %55

46:                                               ; preds = %39, %46
  %47 = phi %struct.m_tag* [ %49, %46 ], [ %40, %39 ]
  %48 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %47, i64 0, i32 0, i32 0
  %49 = load %struct.m_tag*, %struct.m_tag** %48, align 8
  %50 = icmp eq %struct.m_tag* %49, %41
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = bitcast %struct.m_tag* %41 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %struct.m_tag* %47 to i64*
  store i64 %53, i64* %54, align 8
  br label %55

55:                                               ; preds = %51, %43
  %56 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %41, i64 0, i32 4
  %57 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %56, align 8
  tail call void %57(%struct.m_tag* nonnull %41) #9
  %58 = load %struct.m_tag*, %struct.m_tag** %35, align 8
  %59 = icmp eq %struct.m_tag* %58, null
  %60 = load %struct.m_tag*, %struct.m_tag** %31, align 8
  br i1 %59, label %61, label %39

61:                                               ; preds = %55
  %62 = icmp eq %struct.m_tag* %60, %32
  br i1 %62, label %70, label %63

63:                                               ; preds = %61, %63
  %64 = phi %struct.m_tag* [ %66, %63 ], [ %60, %61 ]
  %65 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %64, i64 0, i32 0, i32 0
  %66 = load %struct.m_tag*, %struct.m_tag** %65, align 8
  %67 = icmp eq %struct.m_tag* %66, %32
  br i1 %67, label %68, label %63

68:                                               ; preds = %63
  %69 = bitcast %struct.m_tag* %64 to i64*
  br label %70

70:                                               ; preds = %34, %61, %68
  %71 = phi i64* [ %69, %68 ], [ %38, %61 ], [ %38, %34 ]
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %32, i64 0, i32 4
  %73 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %72, align 8
  tail call void %73(%struct.m_tag* nonnull %32) #9
  br label %74

74:                                               ; preds = %21, %29, %70
  tail call void @free(i8* %26) #9
  br label %75

75:                                               ; preds = %19, %74
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @m_clget(%struct.mbuf*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = load i64, i64* @zone_clust, align 8
  %5 = tail call noalias i8* @malloc(i64 %4) #9
  %6 = icmp eq %struct.mbuf* %0, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = load i64, i64* @zone_ext_refcnt, align 8
  %9 = tail call noalias i8* @malloc(i64 %8) #9
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  store i8* %5, i8** %3, align 8
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 2
  store i8* %5, i8** %11, align 8
  %12 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = or i32 %13, 1
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %17 = bitcast void (i8*, i8*)** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #9
  store i32 2048, i32* %16, align 8
  %18 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %20 = bitcast i32** %19 to i8**
  store i8* %9, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_getm2(%struct.mbuf*, i32, i32, i16 signext, i32, i32) local_unnamed_addr #0 {
  %7 = and i32 %4, 2
  %8 = icmp ne i32 %7, 0
  %9 = icmp ne %struct.mbuf* %0, null
  %10 = and i1 %9, %8
  %11 = select i1 %10, i32 4, i32 6
  %12 = and i32 %11, %4
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 45), align 4
  %16 = mul i32 %15, 216
  %17 = add i32 %16, -40
  br label %18

18:                                               ; preds = %6, %14
  %19 = phi i32 [ %17, %14 ], [ 176, %6 ]
  %20 = icmp sgt i32 %1, 0
  br i1 %20, label %21, label %132

21:                                               ; preds = %18
  %22 = icmp eq i16 %3, 255
  %23 = icmp ne i32 %5, 0
  br label %24

24:                                               ; preds = %21, %126
  %25 = phi %struct.mbuf* [ null, %21 ], [ %112, %126 ]
  %26 = phi %struct.mbuf* [ null, %21 ], [ %127, %126 ]
  %27 = phi i32 [ %12, %21 ], [ %128, %126 ]
  %28 = phi i32 [ %1, %21 ], [ %122, %126 ]
  %29 = icmp sgt i32 %28, 2047
  %30 = and i1 %13, %29
  %31 = icmp sgt i32 %28, %19
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %69

33:                                               ; preds = %24
  %34 = load i64, i64* @zone_mbuf, align 8
  %35 = tail call noalias i8* @malloc(i64 %34) #9
  %36 = icmp eq i8* %35, null
  %37 = or i1 %22, %36
  br i1 %37, label %49, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %35, i64 24
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 28
  %42 = bitcast i8* %41 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  %44 = bitcast i8* %43 to i16*
  store i16 %3, i16* %44, align 8
  %45 = getelementptr inbounds i8, i8* %35, i64 40
  %46 = getelementptr inbounds i8, i8* %35, i64 80
  %47 = getelementptr inbounds i8, i8* %35, i64 16
  %48 = bitcast i8* %47 to i8**
  store i8* %46, i8** %48, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 40, i1 false) #9
  br label %49

49:                                               ; preds = %33, %38
  %50 = getelementptr inbounds i8, i8* %35, i64 80
  %51 = bitcast i8* %50 to i8**
  store i8* null, i8** %51, align 8
  %52 = load i64, i64* @zone_clust, align 8
  %53 = tail call noalias i8* @malloc(i64 %52) #9
  br i1 %36, label %103, label %54

54:                                               ; preds = %49
  %55 = load i64, i64* @zone_ext_refcnt, align 8
  %56 = tail call noalias i8* @malloc(i64 %55) #9
  %57 = bitcast i8* %56 to i32*
  store i32 1, i32* %57, align 4
  store i8* %53, i8** %51, align 8
  %58 = getelementptr inbounds i8, i8* %35, i64 16
  %59 = bitcast i8* %58 to i8**
  store i8* %53, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %35, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 3, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %35, i64 88
  %63 = getelementptr inbounds i8, i8* %35, i64 104
  %64 = bitcast i8* %63 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #9
  store i32 2048, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %35, i64 120
  %66 = bitcast i8* %65 to i32*
  store i32 1, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %35, i64 112
  %68 = bitcast i8* %67 to i8**
  store i8* %56, i8** %68, align 8
  br label %109

69:                                               ; preds = %24
  %70 = and i32 %27, 2
  %71 = icmp eq i32 %70, 0
  %72 = load i64, i64* @zone_mbuf, align 8
  %73 = tail call noalias i8* @malloc(i64 %72) #9
  %74 = icmp eq i8* %73, null
  %75 = or i1 %22, %74
  br i1 %71, label %88, label %76

76:                                               ; preds = %69
  br i1 %75, label %99, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds i8, i8* %73, i64 24
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %73, i64 28
  %81 = bitcast i8* %80 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %73, i64 32
  %83 = bitcast i8* %82 to i16*
  store i16 %3, i16* %83, align 8
  %84 = getelementptr inbounds i8, i8* %73, i64 40
  %85 = getelementptr inbounds i8, i8* %73, i64 80
  %86 = getelementptr inbounds i8, i8* %73, i64 16
  %87 = bitcast i8* %86 to i8**
  store i8* %85, i8** %87, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 40, i1 false) #9
  br label %99

88:                                               ; preds = %69
  br i1 %75, label %99, label %89

89:                                               ; preds = %88
  %90 = getelementptr inbounds i8, i8* %73, i64 24
  %91 = bitcast i8* %90 to i32*
  store i32 0, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %73, i64 28
  %93 = bitcast i8* %92 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %73, i64 32
  %95 = bitcast i8* %94 to i16*
  store i16 %3, i16* %95, align 8
  %96 = getelementptr inbounds i8, i8* %73, i64 40
  %97 = getelementptr inbounds i8, i8* %73, i64 16
  %98 = bitcast i8* %97 to i8**
  store i8* %96, i8** %98, align 8
  br label %99

99:                                               ; preds = %89, %88, %77, %76
  %100 = phi i32 [ 176, %76 ], [ 176, %77 ], [ 216, %88 ], [ 216, %89 ]
  %101 = icmp slt i32 %28, %100
  %102 = select i1 %101, i32 %28, i32 %100
  br i1 %74, label %103, label %109

103:                                              ; preds = %49, %99
  %104 = icmp eq %struct.mbuf* %26, null
  br i1 %104, label %153, label %105

105:                                              ; preds = %103, %105
  %106 = phi %struct.mbuf* [ %107, %105 ], [ %26, %103 ]
  %107 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %106) #9
  %108 = icmp eq %struct.mbuf* %107, null
  br i1 %108, label %153, label %105

109:                                              ; preds = %54, %99
  %110 = phi i32 [ 2048, %54 ], [ %102, %99 ]
  %111 = phi i8* [ %35, %54 ], [ %73, %99 ]
  %112 = bitcast i8* %111 to %struct.mbuf*
  %113 = icmp slt i32 %110, %1
  %114 = and i1 %23, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %109
  %116 = bitcast i8* %111 to %struct.mbuf*
  br label %117

117:                                              ; preds = %115, %117
  %118 = phi %struct.mbuf* [ %119, %117 ], [ %116, %115 ]
  %119 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %118) #9
  %120 = icmp eq %struct.mbuf* %119, null
  br i1 %120, label %153, label %117

121:                                              ; preds = %109
  %122 = sub nsw i32 %28, %110
  %123 = icmp eq %struct.mbuf* %25, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = bitcast %struct.mbuf* %25 to i8**
  store i8* %111, i8** %125, align 8
  br label %126

126:                                              ; preds = %121, %124
  %127 = phi %struct.mbuf* [ %26, %124 ], [ %112, %121 ]
  %128 = and i32 %27, -3
  %129 = icmp sgt i32 %122, 0
  br i1 %129, label %24, label %130

130:                                              ; preds = %126
  %131 = bitcast i8* %111 to %struct.mbuf*
  br label %132

132:                                              ; preds = %130, %18
  %133 = phi i32 [ %12, %18 ], [ %128, %130 ]
  %134 = phi %struct.mbuf* [ null, %18 ], [ %127, %130 ]
  %135 = phi %struct.mbuf* [ null, %18 ], [ %131, %130 ]
  %136 = and i32 %133, 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %135, i64 0, i32 0, i32 4
  %140 = load i32, i32* %139, align 4
  %141 = or i32 %140, 4
  store i32 %141, i32* %139, align 4
  br label %142

142:                                              ; preds = %132, %138
  br i1 %9, label %143, label %153

143:                                              ; preds = %142, %143
  %144 = phi %struct.mbuf* [ %146, %143 ], [ %0, %142 ]
  %145 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %144, i64 0, i32 0, i32 0
  %146 = load %struct.mbuf*, %struct.mbuf** %145, align 8
  %147 = icmp eq %struct.mbuf* %146, null
  br i1 %147, label %148, label %143

148:                                              ; preds = %143
  %149 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %144, i64 0, i32 0, i32 0
  store %struct.mbuf* %134, %struct.mbuf** %149, align 8
  %150 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %144, i64 0, i32 0, i32 4
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, -5
  store i32 %152, i32* %150, align 4
  br label %153

153:                                              ; preds = %117, %105, %148, %142, %103
  %154 = phi %struct.mbuf* [ null, %103 ], [ %0, %148 ], [ %134, %142 ], [ null, %105 ], [ null, %117 ]
  ret %struct.mbuf* %154
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_freem(%struct.mbuf*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.mbuf* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1, %3
  %4 = phi %struct.mbuf* [ %5, %3 ], [ %0, %1 ]
  %5 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %4)
  %6 = icmp eq %struct.mbuf* %5, null
  br i1 %6, label %7, label %3

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_uiotombuf(%struct.uio*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %2, 0
  %7 = getelementptr inbounds %struct.uio, %struct.uio* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  br i1 %6, label %9, label %13

9:                                                ; preds = %5
  %10 = sext i32 %2 to i64
  %11 = icmp sgt i64 %8, %10
  %12 = select i1 %11, i64 %10, i64 %8
  br label %13

13:                                               ; preds = %5, %9
  %14 = phi i64 [ %12, %9 ], [ %8, %5 ]
  %15 = icmp sgt i32 %3, 175
  br i1 %15, label %137, label %16

16:                                               ; preds = %13
  %17 = sext i32 %3 to i64
  %18 = add nsw i64 %14, %17
  %19 = icmp sgt i64 %18, 1
  %20 = select i1 %19, i64 %18, i64 1
  %21 = trunc i64 %20 to i32
  %22 = tail call %struct.mbuf* @m_getm2(%struct.mbuf* null, i32 %21, i32 undef, i16 signext 1, i32 %4, i32 0)
  %23 = icmp eq %struct.mbuf* %22, null
  br i1 %23, label %137, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  store i8* %27, i8** %25, align 8
  %28 = and i32 %4, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  br label %31

31:                                               ; preds = %24, %133
  %32 = phi i32 [ 0, %24 ], [ %129, %133 ]
  %33 = phi %struct.mbuf* [ %22, %24 ], [ %135, %133 ]
  %34 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %62, label %38

38:                                               ; preds = %31
  %39 = and i32 %35, 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %74

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %43 = load i32*, i32** %42, align 8
  %44 = load volatile i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %74

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %54, i64 %57
  %59 = ptrtoint i8* %52 to i64
  %60 = ptrtoint i8* %58 to i64
  %61 = sub i64 %59, %60
  br label %74

62:                                               ; preds = %31
  %63 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1
  %64 = getelementptr inbounds %union.anon, %union.anon* %63, i64 1
  %65 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 2
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = ptrtoint %union.anon* %64 to i64
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %71, %72
  br label %74

74:                                               ; preds = %38, %46, %41, %62
  %75 = phi i64 [ %73, %62 ], [ %61, %46 ], [ 0, %41 ], [ 0, %38 ]
  %76 = sext i32 %32 to i64
  %77 = sub nsw i64 %14, %76
  %78 = icmp sgt i64 %75, %77
  br i1 %78, label %116, label %79

79:                                               ; preds = %74
  br i1 %37, label %104, label %80

80:                                               ; preds = %79
  %81 = and i32 %35, 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %116

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %85 = load i32*, i32** %84, align 8
  %86 = load volatile i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %116

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %90, i64 %93
  %95 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  %101 = ptrtoint i8* %94 to i64
  %102 = ptrtoint i8* %100 to i64
  %103 = sub i64 %101, %102
  br label %116

104:                                              ; preds = %79
  %105 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1
  %106 = getelementptr inbounds %union.anon, %union.anon* %105, i64 1
  %107 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %108, i64 %111
  %113 = ptrtoint %union.anon* %106 to i64
  %114 = ptrtoint i8* %112 to i64
  %115 = sub i64 %113, %114
  br label %116

116:                                              ; preds = %74, %80, %104, %83, %88
  %117 = phi i64 [ %115, %104 ], [ %103, %88 ], [ 0, %83 ], [ 0, %80 ], [ %77, %74 ]
  %118 = trunc i64 %117 to i32
  %119 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 2
  %120 = load i8*, i8** %119, align 8
  %121 = tail call i32 @uiomove(i8* %120, i32 %118, %struct.uio* %0) #9
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %116, %123
  %124 = phi %struct.mbuf* [ %125, %123 ], [ %22, %116 ]
  %125 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %124) #9
  %126 = icmp eq %struct.mbuf* %125, null
  br i1 %126, label %137, label %123

127:                                              ; preds = %116
  %128 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 3
  store i32 %118, i32* %128, align 8
  %129 = add nsw i32 %32, %118
  br i1 %29, label %133, label %130

130:                                              ; preds = %127
  %131 = load i32, i32* %30, align 8
  %132 = add nsw i32 %131, %118
  store i32 %132, i32* %30, align 8
  br label %133

133:                                              ; preds = %127, %130
  %134 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 0
  %135 = load %struct.mbuf*, %struct.mbuf** %134, align 8
  %136 = icmp eq %struct.mbuf* %135, null
  br i1 %136, label %137, label %31

137:                                              ; preds = %133, %123, %16, %13
  %138 = phi %struct.mbuf* [ null, %13 ], [ null, %16 ], [ null, %123 ], [ %22, %133 ]
  ret %struct.mbuf* %138
}

declare i32 @uiomove(i8*, i32, %struct.uio*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @m_length(%struct.mbuf*, %struct.mbuf**) local_unnamed_addr #5 {
  br label %3

3:                                                ; preds = %7, %2
  %4 = phi %struct.mbuf* [ %0, %2 ], [ %12, %7 ]
  %5 = phi i32 [ 0, %2 ], [ %10, %7 ]
  %6 = icmp eq %struct.mbuf* %4, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, %5
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 0
  %12 = load %struct.mbuf*, %struct.mbuf** %11, align 8
  %13 = icmp eq %struct.mbuf* %12, null
  br i1 %13, label %14, label %3

14:                                               ; preds = %3, %7
  %15 = phi i32 [ %5, %3 ], [ %10, %7 ]
  %16 = icmp eq %struct.mbuf** %1, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  store %struct.mbuf* %4, %struct.mbuf** %1, align 8
  br label %18

18:                                               ; preds = %14, %17
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.mbuf* @m_last(%struct.mbuf* readonly) local_unnamed_addr #6 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %struct.mbuf* [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %3, i64 0, i32 0, i32 0
  %5 = load %struct.mbuf*, %struct.mbuf** %4, align 8
  %6 = icmp eq %struct.mbuf* %5, null
  br i1 %6, label %7, label %2

7:                                                ; preds = %2
  ret %struct.mbuf* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @mbuf_initialize(i8* nocapture readnone) local_unnamed_addr #7 {
  store i64 256, i64* @zone_mbuf, align 8
  store i64 4, i64* @zone_ext_refcnt, align 8
  store i64 2048, i64* @zone_clust, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_tag_delete(%struct.mbuf* nocapture, %struct.m_tag*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  %4 = load %struct.m_tag*, %struct.m_tag** %3, align 8
  %5 = icmp eq %struct.m_tag* %4, %1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = bitcast %struct.m_tag* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.m_tag** %3 to i64*
  store i64 %8, i64* %9, align 8
  br label %19

10:                                               ; preds = %2, %10
  %11 = phi %struct.m_tag* [ %13, %10 ], [ %4, %2 ]
  %12 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %11, i64 0, i32 0, i32 0
  %13 = load %struct.m_tag*, %struct.m_tag** %12, align 8
  %14 = icmp eq %struct.m_tag* %13, %1
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = bitcast %struct.m_tag* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %struct.m_tag* %11 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %6, %15
  %20 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %1, i64 0, i32 4
  %21 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %20, align 8
  tail call void %21(%struct.m_tag* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_tag_delete_chain(%struct.mbuf* nocapture, %struct.m_tag*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.m_tag* %1, null
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  %6 = load %struct.m_tag*, %struct.m_tag** %5, align 8
  %7 = icmp eq %struct.m_tag* %6, null
  br i1 %7, label %57, label %8

8:                                                ; preds = %2, %4
  %9 = phi %struct.m_tag* [ %6, %4 ], [ %1, %2 ]
  %10 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %9, i64 0, i32 0, i32 0
  %11 = load %struct.m_tag*, %struct.m_tag** %10, align 8
  %12 = icmp eq %struct.m_tag* %11, null
  %13 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  %14 = load %struct.m_tag*, %struct.m_tag** %13, align 8
  br i1 %12, label %39, label %15

15:                                               ; preds = %8
  %16 = bitcast %struct.m_tag** %13 to i64*
  br label %17

17:                                               ; preds = %15, %33
  %18 = phi %struct.m_tag* [ %14, %15 ], [ %38, %33 ]
  %19 = phi %struct.m_tag* [ %11, %15 ], [ %36, %33 ]
  %20 = icmp eq %struct.m_tag* %18, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = bitcast %struct.m_tag* %18 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %16, align 8
  br label %33

24:                                               ; preds = %17, %24
  %25 = phi %struct.m_tag* [ %27, %24 ], [ %18, %17 ]
  %26 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %25, i64 0, i32 0, i32 0
  %27 = load %struct.m_tag*, %struct.m_tag** %26, align 8
  %28 = icmp eq %struct.m_tag* %27, %19
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = bitcast %struct.m_tag* %19 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.m_tag* %25 to i64*
  store i64 %31, i64* %32, align 8
  br label %33

33:                                               ; preds = %21, %29
  %34 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %19, i64 0, i32 4
  %35 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %34, align 8
  tail call void %35(%struct.m_tag* nonnull %19) #9
  %36 = load %struct.m_tag*, %struct.m_tag** %10, align 8
  %37 = icmp eq %struct.m_tag* %36, null
  %38 = load %struct.m_tag*, %struct.m_tag** %13, align 8
  br i1 %37, label %39, label %17

39:                                               ; preds = %33, %8
  %40 = phi %struct.m_tag* [ %11, %8 ], [ %36, %33 ]
  %41 = phi %struct.m_tag* [ %14, %8 ], [ %38, %33 ]
  %42 = ptrtoint %struct.m_tag* %40 to i64
  %43 = icmp eq %struct.m_tag* %41, %9
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = bitcast %struct.m_tag** %13 to i64*
  br label %53

46:                                               ; preds = %39, %46
  %47 = phi %struct.m_tag* [ %49, %46 ], [ %41, %39 ]
  %48 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %47, i64 0, i32 0, i32 0
  %49 = load %struct.m_tag*, %struct.m_tag** %48, align 8
  %50 = icmp eq %struct.m_tag* %49, %9
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = bitcast %struct.m_tag* %47 to i64*
  br label %53

53:                                               ; preds = %44, %51
  %54 = phi i64* [ %45, %44 ], [ %52, %51 ]
  store i64 %42, i64* %54, align 8
  %55 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %9, i64 0, i32 4
  %56 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %55, align 8
  tail call void %56(%struct.m_tag* nonnull %9) #9
  br label %57

57:                                               ; preds = %4, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_move_pkthdr(%struct.mbuf*, %struct.mbuf* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 212990
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = or i32 %8, %5
  store i32 %9, i32* %6, align 4
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1
  %13 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 2
  %14 = bitcast i8** %13 to %union.anon.1**
  store %union.anon.1* %12, %union.anon.1** %14, align 8
  br label %15

15:                                               ; preds = %11, %2
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 0
  %18 = bitcast %struct.pkthdr* %16 to i8*
  %19 = bitcast %struct.pkthdr* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 40, i1 false)
  %20 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  store %struct.m_tag* null, %struct.m_tag** %20, align 8
  %21 = load i32, i32* %3, align 4
  %22 = and i32 %21, -3
  store i32 %22, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_pullup(%struct.mbuf*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %26

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1
  %13 = getelementptr inbounds %union.anon, %union.anon* %12, i64 1
  %14 = bitcast %union.anon* %13 to i8*
  %15 = icmp ult i8* %11, %14
  br i1 %15, label %16, label %26

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 0
  %18 = load %struct.mbuf*, %struct.mbuf** %17, align 8
  %19 = icmp eq %struct.mbuf* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, %1
  br i1 %23, label %24, label %134

24:                                               ; preds = %20
  %25 = sub nsw i32 %1, %22
  br label %65

26:                                               ; preds = %16, %7, %2
  %27 = icmp sgt i32 %1, 176
  br i1 %27, label %127, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 5
  %30 = load i16, i16* %29, align 8
  %31 = load i64, i64* @zone_mbuf, align 8
  %32 = tail call noalias i8* @malloc(i64 %31) #9
  %33 = bitcast i8* %32 to %struct.mbuf*
  %34 = icmp eq i8* %32, null
  %35 = icmp eq i16 %30, 255
  %36 = or i1 %35, %34
  br i1 %36, label %47, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %32, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %32, i64 28
  %41 = bitcast i8* %40 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %32, i64 32
  %43 = bitcast i8* %42 to i16*
  store i16 %30, i16* %43, align 8
  %44 = getelementptr inbounds i8, i8* %32, i64 40
  %45 = getelementptr inbounds i8, i8* %32, i64 16
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  br label %47

47:                                               ; preds = %28, %37
  br i1 %34, label %127, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds i8, i8* %32, i64 24
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 8
  %51 = and i32 %4, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %48
  %54 = and i32 %4, 212990
  %55 = getelementptr inbounds i8, i8* %32, i64 28
  %56 = bitcast i8* %55 to i32*
  store i32 %54, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %32, i64 80
  %58 = getelementptr inbounds i8, i8* %32, i64 16
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %32, i64 40
  %61 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0
  %62 = bitcast %struct.pkthdr* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %62, i64 40, i1 false) #9
  %63 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  store %struct.m_tag* null, %struct.m_tag** %63, align 8
  %64 = and i32 %4, -3
  store i32 %64, i32* %3, align 4
  br label %65

65:                                               ; preds = %48, %53, %24
  %66 = phi %struct.mbuf* [ %18, %24 ], [ %0, %53 ], [ %0, %48 ]
  %67 = phi i32 [ %25, %24 ], [ %1, %53 ], [ %1, %48 ]
  %68 = phi %struct.mbuf* [ %0, %24 ], [ %33, %53 ], [ %33, %48 ]
  %69 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %68, i64 0, i32 1
  %70 = getelementptr inbounds %union.anon, %union.anon* %69, i64 1
  %71 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %68, i64 0, i32 0, i32 2
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %68, i64 0, i32 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %72, i64 %75
  %77 = ptrtoint %union.anon* %70 to i64
  %78 = ptrtoint i8* %76 to i64
  %79 = sub i64 %77, %78
  %80 = trunc i64 %79 to i32
  br label %81

81:                                               ; preds = %119, %65
  %82 = phi i32 [ %74, %65 ], [ %121, %119 ]
  %83 = phi i8* [ %72, %65 ], [ %120, %119 ]
  %84 = phi %struct.mbuf* [ %66, %65 ], [ %115, %119 ]
  %85 = phi i32 [ %67, %65 ], [ %101, %119 ]
  %86 = phi i32 [ %80, %65 ], [ %106, %119 ]
  %87 = load i32, i32* @max_protohdr, align 4
  %88 = icmp sgt i32 %85, %87
  %89 = select i1 %88, i32 %85, i32 %87
  %90 = icmp sgt i32 %89, %86
  %91 = select i1 %90, i32 %86, i32 %89
  %92 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = icmp sgt i32 %91, %93
  %95 = select i1 %94, i32 %93, i32 %91
  %96 = sext i32 %82 to i64
  %97 = getelementptr inbounds i8, i8* %83, i64 %96
  %98 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 2
  %99 = load i8*, i8** %98, align 8
  %100 = zext i32 %95 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %99, i64 %100, i1 false)
  %101 = sub nsw i32 %85, %95
  %102 = load i32, i32* %73, align 8
  %103 = add nsw i32 %102, %95
  store i32 %103, i32* %73, align 8
  %104 = load i32, i32* %92, align 8
  %105 = sub nsw i32 %104, %95
  store i32 %105, i32* %92, align 8
  %106 = sub nsw i32 %86, %95
  %107 = icmp eq i32 %105, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %81
  %109 = load i8*, i8** %98, align 8
  %110 = sext i32 %95 to i64
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  store i8* %111, i8** %98, align 8
  br label %114

112:                                              ; preds = %81
  %113 = tail call %struct.mbuf* @m_free(%struct.mbuf* %84)
  br label %114

114:                                              ; preds = %108, %112
  %115 = phi %struct.mbuf* [ %84, %108 ], [ %113, %112 ]
  %116 = icmp sgt i32 %101, 0
  %117 = icmp ne %struct.mbuf* %115, null
  %118 = and i1 %116, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = load i8*, i8** %71, align 8
  %121 = load i32, i32* %73, align 8
  br label %81

122:                                              ; preds = %114
  br i1 %116, label %123, label %125

123:                                              ; preds = %122
  %124 = tail call %struct.mbuf* @m_free(%struct.mbuf* %68)
  br label %127

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %68, i64 0, i32 0, i32 0
  store %struct.mbuf* %115, %struct.mbuf** %126, align 8
  br label %134

127:                                              ; preds = %47, %26, %123
  %128 = phi %struct.mbuf* [ %115, %123 ], [ %0, %26 ], [ %0, %47 ]
  %129 = icmp eq %struct.mbuf* %128, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %127, %130
  %131 = phi %struct.mbuf* [ %132, %130 ], [ %128, %127 ]
  %132 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %131) #9
  %133 = icmp eq %struct.mbuf* %132, null
  br i1 %133, label %134, label %130

134:                                              ; preds = %130, %127, %20, %125
  %135 = phi %struct.mbuf* [ %68, %125 ], [ %0, %20 ], [ null, %127 ], [ null, %130 ]
  ret %struct.mbuf* %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_pulldown(%struct.mbuf*, i32, i32, i32*) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %2, 2048
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = icmp ne %struct.mbuf* %0, null
  %8 = icmp sgt i32 %1, 0
  %9 = and i1 %8, %7
  br i1 %9, label %16, label %29

10:                                               ; preds = %4
  %11 = icmp eq %struct.mbuf* %0, null
  br i1 %11, label %449, label %12

12:                                               ; preds = %10, %12
  %13 = phi %struct.mbuf* [ %14, %12 ], [ %0, %10 ]
  %14 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %13) #9
  %15 = icmp eq %struct.mbuf* %14, null
  br i1 %15, label %449, label %12

16:                                               ; preds = %6, %22
  %17 = phi %struct.mbuf* [ %25, %22 ], [ %0, %6 ]
  %18 = phi i32 [ %23, %22 ], [ %1, %6 ]
  %19 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %17, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %34, label %22

22:                                               ; preds = %16
  %23 = sub nsw i32 %18, %20
  %24 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %17, i64 0, i32 0, i32 0
  %25 = load %struct.mbuf*, %struct.mbuf** %24, align 8
  %26 = icmp ne %struct.mbuf* %25, null
  %27 = icmp sgt i32 %23, 0
  %28 = and i1 %27, %26
  br i1 %28, label %16, label %29

29:                                               ; preds = %22, %6
  %30 = phi i32 [ %1, %6 ], [ %23, %22 ]
  %31 = phi %struct.mbuf* [ %0, %6 ], [ %25, %22 ]
  %32 = phi i1 [ %8, %6 ], [ %27, %22 ]
  %33 = icmp eq %struct.mbuf* %31, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %16, %29
  %35 = phi i1 [ %32, %29 ], [ true, %16 ]
  %36 = phi %struct.mbuf* [ %31, %29 ], [ %17, %16 ]
  %37 = phi i32 [ %30, %29 ], [ %18, %16 ]
  br label %38

38:                                               ; preds = %34, %43
  %39 = phi %struct.mbuf* [ %45, %43 ], [ %36, %34 ]
  %40 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 0
  %45 = load %struct.mbuf*, %struct.mbuf** %44, align 8
  %46 = icmp eq %struct.mbuf* %45, null
  br i1 %46, label %47, label %38

47:                                               ; preds = %43, %29
  %48 = icmp eq %struct.mbuf* %0, null
  br i1 %48, label %449, label %49

49:                                               ; preds = %47, %49
  %50 = phi %struct.mbuf* [ %51, %49 ], [ %0, %47 ]
  %51 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %50) #9
  %52 = icmp eq %struct.mbuf* %51, null
  br i1 %52, label %449, label %49

53:                                               ; preds = %38
  %54 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 3
  %55 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 4
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 1
  %63 = and i32 %56, 8
  %64 = icmp eq i32 %63, 0
  %65 = and i1 %64, %62
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %68 = load i32*, i32** %67, align 8
  %69 = load volatile i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %72

71:                                               ; preds = %66, %53
  br label %72

72:                                               ; preds = %71, %66, %59
  %73 = phi i32 [ 1, %71 ], [ 0, %66 ], [ 0, %59 ]
  %74 = icmp eq i32 %37, 0
  %75 = icmp ne i32* %3, null
  %76 = or i1 %75, %74
  %77 = sub nsw i32 %41, %37
  br i1 %76, label %78, label %82

78:                                               ; preds = %72
  %79 = icmp sge i32 %77, %2
  %80 = icmp ne i32 %73, 0
  %81 = and i1 %79, %80
  br i1 %81, label %445, label %82

82:                                               ; preds = %72, %78
  %83 = icmp slt i32 %77, %2
  br i1 %83, label %220, label %84

84:                                               ; preds = %82
  %85 = icmp sgt i32 %77, 2048
  br i1 %85, label %214, label %86

86:                                               ; preds = %84
  %87 = and i32 %56, 2
  %88 = icmp ne i32 %87, 0
  %89 = and i1 %74, %88
  %90 = icmp sgt i32 %77, 176
  br i1 %90, label %91, label %104

91:                                               ; preds = %86
  store i8* null, i8** inttoptr (i64 80 to i8**), align 16
  br i1 %89, label %92, label %214

92:                                               ; preds = %91
  %93 = load i32, i32* %55, align 4
  %94 = and i32 %93, 212990
  %95 = load i32, i32* inttoptr (i64 28 to i32*), align 4
  %96 = and i32 %95, 1
  %97 = or i32 %96, %94
  store i32 %97, i32* inttoptr (i64 28 to i32*), align 4
  %98 = icmp eq i32 %96, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  store %union.anon.1* inttoptr (i64 80 to %union.anon.1*), %union.anon.1** inttoptr (i64 16 to %union.anon.1**), align 16
  br label %100

100:                                              ; preds = %99, %92
  %101 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 0
  %102 = bitcast %struct.pkthdr* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 inttoptr (i64 40 to i8*), i8* align 8 %102, i64 32, i1 false) #9
  store %struct.m_tag* null, %struct.m_tag** inttoptr (i64 72 to %struct.m_tag**), align 8
  %103 = tail call i32 @m_tag_copy_chain(%struct.mbuf* null, %struct.mbuf* nonnull %39, i32 1) #9
  br label %214

104:                                              ; preds = %86
  %105 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 5
  %106 = load i16, i16* %105, align 8
  %107 = load i64, i64* @zone_mbuf, align 8
  %108 = tail call noalias i8* @malloc(i64 %107) #9
  %109 = bitcast i8* %108 to %struct.mbuf*
  %110 = icmp eq i8* %108, null
  %111 = icmp eq i16 %106, 255
  %112 = or i1 %111, %110
  br i1 %89, label %113, label %125

113:                                              ; preds = %104
  br i1 %112, label %136, label %114

114:                                              ; preds = %113
  %115 = getelementptr inbounds i8, i8* %108, i64 24
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds i8, i8* %108, i64 28
  %118 = bitcast i8* %117 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %108, i64 32
  %120 = bitcast i8* %119 to i16*
  store i16 %106, i16* %120, align 8
  %121 = getelementptr inbounds i8, i8* %108, i64 40
  %122 = getelementptr inbounds i8, i8* %108, i64 80
  %123 = getelementptr inbounds i8, i8* %108, i64 16
  %124 = bitcast i8* %123 to i8**
  store i8* %122, i8** %124, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 40, i1 false) #9
  br label %136

125:                                              ; preds = %104
  br i1 %112, label %136, label %126

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %108, i64 24
  %128 = bitcast i8* %127 to i32*
  store i32 0, i32* %128, align 8
  %129 = getelementptr inbounds i8, i8* %108, i64 28
  %130 = bitcast i8* %129 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %130, align 4
  %131 = getelementptr inbounds i8, i8* %108, i64 32
  %132 = bitcast i8* %131 to i16*
  store i16 %106, i16* %132, align 8
  %133 = getelementptr inbounds i8, i8* %108, i64 40
  %134 = getelementptr inbounds i8, i8* %108, i64 16
  %135 = bitcast i8* %134 to i8**
  store i8* %133, i8** %135, align 8
  br label %136

136:                                              ; preds = %126, %125, %114, %113
  %137 = phi i8* [ %133, %126 ], [ undef, %125 ], [ %122, %114 ], [ undef, %113 ]
  br i1 %110, label %214, label %138

138:                                              ; preds = %136
  br i1 %89, label %139, label %158

139:                                              ; preds = %138
  %140 = load i32, i32* %55, align 4
  %141 = and i32 %140, 212990
  %142 = getelementptr inbounds i8, i8* %108, i64 28
  %143 = bitcast i8* %142 to i32*
  store i32 %141, i32* %143, align 4
  %144 = getelementptr inbounds i8, i8* %108, i64 80
  %145 = getelementptr inbounds i8, i8* %108, i64 16
  %146 = bitcast i8* %145 to i8**
  store i8* %144, i8** %146, align 8
  %147 = getelementptr inbounds i8, i8* %108, i64 40
  %148 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 0
  %149 = bitcast %struct.pkthdr* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %149, i64 32, i1 false) #9
  %150 = getelementptr inbounds i8, i8* %108, i64 72
  %151 = bitcast i8* %150 to %struct.m_tag**
  store %struct.m_tag* null, %struct.m_tag** %151, align 8
  %152 = tail call i32 @m_tag_copy_chain(%struct.mbuf* nonnull %109, %struct.mbuf* nonnull %39, i32 1) #9
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %139
  %155 = load i8*, i8** %146, align 8
  br label %158

156:                                              ; preds = %139
  %157 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %109) #9
  br label %214

158:                                              ; preds = %138, %154
  %159 = phi i8* [ %155, %154 ], [ %137, %138 ]
  br i1 %35, label %160, label %171

160:                                              ; preds = %158, %166
  %161 = phi i32 [ %167, %166 ], [ %37, %158 ]
  %162 = phi %struct.mbuf* [ %169, %166 ], [ %39, %158 ]
  %163 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %162, i64 0, i32 0, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %171, label %166

166:                                              ; preds = %160
  %167 = sub nsw i32 %161, %164
  %168 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %162, i64 0, i32 0, i32 0
  %169 = load %struct.mbuf*, %struct.mbuf** %168, align 8
  %170 = icmp sgt i32 %167, 0
  br i1 %170, label %160, label %171

171:                                              ; preds = %166, %160, %158
  %172 = phi %struct.mbuf* [ %39, %158 ], [ %162, %160 ], [ %169, %166 ]
  %173 = phi i32 [ %37, %158 ], [ %161, %160 ], [ %167, %166 ]
  %174 = icmp sgt i32 %77, 0
  br i1 %174, label %175, label %207

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %172, i64 0, i32 0, i32 3
  %177 = load i32, i32* %176, align 8
  %178 = sub nsw i32 %177, %173
  %179 = icmp sgt i32 %178, %77
  %180 = select i1 %179, i32 %77, i32 %178
  %181 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %172, i64 0, i32 0, i32 2
  %182 = load i8*, i8** %181, align 8
  %183 = sext i32 %173 to i64
  %184 = getelementptr inbounds i8, i8* %182, i64 %183
  %185 = zext i32 %180 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* align 1 %184, i64 %185, i1 false) #9
  %186 = sub i32 %77, %180
  %187 = getelementptr inbounds i8, i8* %159, i64 %185
  %188 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %172, i64 0, i32 0, i32 0
  %189 = load %struct.mbuf*, %struct.mbuf** %188, align 8
  %190 = icmp sgt i32 %186, 0
  br i1 %190, label %191, label %207

191:                                              ; preds = %175, %191
  %192 = phi i8* [ %203, %191 ], [ %187, %175 ]
  %193 = phi i32 [ %202, %191 ], [ %186, %175 ]
  %194 = phi %struct.mbuf* [ %205, %191 ], [ %189, %175 ]
  %195 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %194, i64 0, i32 0, i32 3
  %196 = load i32, i32* %195, align 8
  %197 = icmp sgt i32 %196, %193
  %198 = select i1 %197, i32 %193, i32 %196
  %199 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %194, i64 0, i32 0, i32 2
  %200 = load i8*, i8** %199, align 8
  %201 = zext i32 %198 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %200, i64 %201, i1 false) #9
  %202 = sub i32 %193, %198
  %203 = getelementptr inbounds i8, i8* %192, i64 %201
  %204 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %194, i64 0, i32 0, i32 0
  %205 = load %struct.mbuf*, %struct.mbuf** %204, align 8
  %206 = icmp sgt i32 %202, 0
  br i1 %206, label %191, label %207, !llvm.loop !2

207:                                              ; preds = %175, %191, %171
  %208 = getelementptr inbounds i8, i8* %108, i64 24
  %209 = bitcast i8* %208 to i32*
  store i32 %77, i32* %209, align 8
  store i32 %37, i32* %54, align 8
  %210 = bitcast %struct.mbuf* %39 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast i8* %108 to i64*
  store i64 %211, i64* %212, align 8
  %213 = bitcast %struct.mbuf* %39 to i8**
  store i8* %108, i8** %213, align 8
  br label %445

214:                                              ; preds = %91, %100, %136, %84, %156
  %215 = icmp eq %struct.mbuf* %0, null
  br i1 %215, label %449, label %216

216:                                              ; preds = %214, %216
  %217 = phi %struct.mbuf* [ %218, %216 ], [ %0, %214 ]
  %218 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %217) #9
  %219 = icmp eq %struct.mbuf* %218, null
  br i1 %219, label %449, label %216

220:                                              ; preds = %82
  %221 = sub nsw i32 %2, %77
  %222 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 0
  %223 = load %struct.mbuf*, %struct.mbuf** %222, align 8
  %224 = icmp eq %struct.mbuf* %223, null
  br i1 %224, label %234, label %225

225:                                              ; preds = %220, %225
  %226 = phi %struct.mbuf* [ %232, %225 ], [ %223, %220 ]
  %227 = phi i32 [ %230, %225 ], [ 0, %220 ]
  %228 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %226, i64 0, i32 0, i32 3
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, %227
  %231 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %226, i64 0, i32 0, i32 0
  %232 = load %struct.mbuf*, %struct.mbuf** %231, align 8
  %233 = icmp eq %struct.mbuf* %232, null
  br i1 %233, label %234, label %225

234:                                              ; preds = %225, %220
  %235 = phi i32 [ 0, %220 ], [ %230, %225 ]
  %236 = add nsw i32 %235, %77
  %237 = icmp slt i32 %236, %2
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = icmp eq %struct.mbuf* %0, null
  br i1 %239, label %449, label %240

240:                                              ; preds = %238, %240
  %241 = phi %struct.mbuf* [ %242, %240 ], [ %0, %238 ]
  %242 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %241) #9
  %243 = icmp eq %struct.mbuf* %242, null
  br i1 %243, label %449, label %240

244:                                              ; preds = %234
  br i1 %76, label %245, label %371

245:                                              ; preds = %244
  br i1 %58, label %268, label %246

246:                                              ; preds = %245
  %247 = and i32 %56, 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %278

249:                                              ; preds = %246
  %250 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %251 = load i32*, i32** %250, align 8
  %252 = load volatile i32, i32* %251, align 4
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %254, label %278

254:                                              ; preds = %249
  %255 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %258 = load i32, i32* %257, align 8
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds i8, i8* %256, i64 %259
  %261 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 2
  %262 = load i8*, i8** %261, align 8
  %263 = sext i32 %41 to i64
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  %265 = ptrtoint i8* %260 to i64
  %266 = ptrtoint i8* %264 to i64
  %267 = sub i64 %265, %266
  br label %278

268:                                              ; preds = %245
  %269 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 1
  %270 = getelementptr inbounds %union.anon, %union.anon* %269, i64 1
  %271 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 2
  %272 = load i8*, i8** %271, align 8
  %273 = sext i32 %41 to i64
  %274 = getelementptr inbounds i8, i8* %272, i64 %273
  %275 = ptrtoint %union.anon* %270 to i64
  %276 = ptrtoint i8* %274 to i64
  %277 = sub i64 %275, %276
  br label %278

278:                                              ; preds = %246, %254, %249, %268
  %279 = phi i64 [ %277, %268 ], [ %267, %254 ], [ 0, %249 ], [ 0, %246 ]
  %280 = sext i32 %221 to i64
  %281 = icmp sge i64 %279, %280
  %282 = icmp ne i32 %73, 0
  %283 = and i1 %282, %281
  br i1 %283, label %284, label %314

284:                                              ; preds = %278
  %285 = icmp sgt i32 %221, 0
  br i1 %285, label %286, label %310

286:                                              ; preds = %284
  %287 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 2
  %288 = load i8*, i8** %287, align 8
  %289 = sext i32 %41 to i64
  %290 = getelementptr inbounds i8, i8* %288, i64 %289
  br label %291

291:                                              ; preds = %286, %291
  %292 = phi i8* [ %303, %291 ], [ %290, %286 ]
  %293 = phi i32 [ %302, %291 ], [ %221, %286 ]
  %294 = phi %struct.mbuf* [ %305, %291 ], [ %223, %286 ]
  %295 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %294, i64 0, i32 0, i32 3
  %296 = load i32, i32* %295, align 8
  %297 = icmp sgt i32 %296, %293
  %298 = select i1 %297, i32 %293, i32 %296
  %299 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %294, i64 0, i32 0, i32 2
  %300 = load i8*, i8** %299, align 8
  %301 = zext i32 %298 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %292, i8* align 1 %300, i64 %301, i1 false) #9
  %302 = sub i32 %293, %298
  %303 = getelementptr inbounds i8, i8* %292, i64 %301
  %304 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %294, i64 0, i32 0, i32 0
  %305 = load %struct.mbuf*, %struct.mbuf** %304, align 8
  %306 = icmp sgt i32 %302, 0
  br i1 %306, label %291, label %307

307:                                              ; preds = %291
  %308 = load i32, i32* %54, align 8
  %309 = load %struct.mbuf*, %struct.mbuf** %222, align 8
  br label %310

310:                                              ; preds = %307, %284
  %311 = phi %struct.mbuf* [ %309, %307 ], [ %223, %284 ]
  %312 = phi i32 [ %308, %307 ], [ %41, %284 ]
  %313 = add nsw i32 %312, %221
  store i32 %313, i32* %54, align 8
  tail call void @m_adj(%struct.mbuf* %311, i32 %221)
  br label %445

314:                                              ; preds = %278
  %315 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 0, i32 4
  %316 = load i32, i32* %315, align 4
  %317 = and i32 %316, 1
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %335, label %319

319:                                              ; preds = %314
  %320 = and i32 %316, 8
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %347

322:                                              ; preds = %319
  %323 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %324 = load i32*, i32** %323, align 8
  %325 = load volatile i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 1
  br i1 %326, label %327, label %347

327:                                              ; preds = %322
  %328 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 0, i32 2
  %329 = bitcast i8** %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %332 = bitcast i8** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 %330, %333
  br label %347

335:                                              ; preds = %314
  %336 = and i32 %316, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 0, i32 2
  %339 = bitcast i8** %338 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 1
  %342 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 1, i32 0, i32 1
  %343 = ptrtoint %union.anon.1* %342 to i64
  %344 = ptrtoint %union.anon* %341 to i64
  %345 = select i1 %337, i64 %344, i64 %343
  %346 = sub i64 %340, %345
  br label %347

347:                                              ; preds = %319, %335, %327, %322
  %348 = phi i64 [ %334, %327 ], [ 0, %322 ], [ 0, %319 ], [ %346, %335 ]
  %349 = sext i32 %77 to i64
  %350 = icmp sge i64 %348, %349
  %351 = and i1 %282, %350
  br i1 %351, label %352, label %371

352:                                              ; preds = %347
  %353 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %223, i64 0, i32 0, i32 2
  %354 = load i8*, i8** %353, align 8
  %355 = sub nsw i64 0, %349
  %356 = getelementptr inbounds i8, i8* %354, i64 %355
  store i8* %356, i8** %353, align 8
  %357 = load %struct.mbuf*, %struct.mbuf** %222, align 8
  %358 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %357, i64 0, i32 0, i32 3
  %359 = load i32, i32* %358, align 8
  %360 = add nsw i32 %359, %77
  store i32 %360, i32* %358, align 8
  %361 = load %struct.mbuf*, %struct.mbuf** %222, align 8
  %362 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %361, i64 0, i32 0, i32 2
  %363 = load i8*, i8** %362, align 8
  %364 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 2
  %365 = load i8*, i8** %364, align 8
  %366 = sext i32 %37 to i64
  %367 = getelementptr inbounds i8, i8* %365, i64 %366
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %363, i8* align 1 %367, i64 %349, i1 false)
  %368 = load i32, i32* %54, align 8
  %369 = sub nsw i32 %368, %77
  store i32 %369, i32* %54, align 8
  %370 = load %struct.mbuf*, %struct.mbuf** %222, align 8
  br label %445

371:                                              ; preds = %244, %347
  %372 = icmp sgt i32 %2, 216
  br i1 %372, label %373, label %374

373:                                              ; preds = %371
  store i8* null, i8** inttoptr (i64 80 to i8**), align 16
  br label %395

374:                                              ; preds = %371
  %375 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 5
  %376 = load i16, i16* %375, align 8
  %377 = load i64, i64* @zone_mbuf, align 8
  %378 = tail call noalias i8* @malloc(i64 %377) #9
  %379 = bitcast i8* %378 to %struct.mbuf*
  %380 = icmp eq i8* %378, null
  %381 = icmp eq i16 %376, 255
  %382 = or i1 %381, %380
  br i1 %382, label %393, label %383

383:                                              ; preds = %374
  %384 = getelementptr inbounds i8, i8* %378, i64 24
  %385 = bitcast i8* %384 to i32*
  store i32 0, i32* %385, align 8
  %386 = getelementptr inbounds i8, i8* %378, i64 28
  %387 = bitcast i8* %386 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %378, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %387, align 4
  %388 = getelementptr inbounds i8, i8* %378, i64 32
  %389 = bitcast i8* %388 to i16*
  store i16 %376, i16* %389, align 8
  %390 = getelementptr inbounds i8, i8* %378, i64 40
  %391 = getelementptr inbounds i8, i8* %378, i64 16
  %392 = bitcast i8* %391 to i8**
  store i8* %390, i8** %392, align 8
  br label %393

393:                                              ; preds = %383, %374
  %394 = phi i8* [ %390, %383 ], [ undef, %374 ]
  br i1 %380, label %395, label %401

395:                                              ; preds = %373, %393
  %396 = icmp eq %struct.mbuf* %0, null
  br i1 %396, label %449, label %397

397:                                              ; preds = %395, %397
  %398 = phi %struct.mbuf* [ %399, %397 ], [ %0, %395 ]
  %399 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %398) #9
  %400 = icmp eq %struct.mbuf* %399, null
  br i1 %400, label %449, label %397

401:                                              ; preds = %393
  %402 = getelementptr inbounds i8, i8* %378, i64 24
  %403 = bitcast i8* %402 to i32*
  store i32 %77, i32* %403, align 8
  %404 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 2
  %405 = load i8*, i8** %404, align 8
  %406 = sext i32 %37 to i64
  %407 = getelementptr inbounds i8, i8* %405, i64 %406
  %408 = sext i32 %77 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %394, i8* align 1 %407, i64 %408, i1 false)
  %409 = load i32, i32* %54, align 8
  %410 = sub nsw i32 %409, %77
  store i32 %410, i32* %54, align 8
  %411 = load i32, i32* %403, align 8
  %412 = icmp sgt i32 %221, 0
  br i1 %412, label %413, label %437

413:                                              ; preds = %401
  %414 = getelementptr inbounds i8, i8* %378, i64 16
  %415 = bitcast i8* %414 to i8**
  %416 = load i8*, i8** %415, align 8
  %417 = sext i32 %411 to i64
  %418 = getelementptr inbounds i8, i8* %416, i64 %417
  br label %419

419:                                              ; preds = %413, %419
  %420 = phi i8* [ %432, %419 ], [ %418, %413 ]
  %421 = phi i32 [ %431, %419 ], [ %221, %413 ]
  %422 = phi %struct.mbuf** [ %433, %419 ], [ %222, %413 ]
  %423 = load %struct.mbuf*, %struct.mbuf** %422, align 8
  %424 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %423, i64 0, i32 0, i32 3
  %425 = load i32, i32* %424, align 8
  %426 = icmp sgt i32 %425, %421
  %427 = select i1 %426, i32 %421, i32 %425
  %428 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %423, i64 0, i32 0, i32 2
  %429 = load i8*, i8** %428, align 8
  %430 = zext i32 %427 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %420, i8* align 1 %429, i64 %430, i1 false) #9
  %431 = sub i32 %421, %427
  %432 = getelementptr inbounds i8, i8* %420, i64 %430
  %433 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %423, i64 0, i32 0, i32 0
  %434 = icmp sgt i32 %431, 0
  br i1 %434, label %419, label %435

435:                                              ; preds = %419
  %436 = load i32, i32* %403, align 8
  br label %437

437:                                              ; preds = %435, %401
  %438 = phi i32 [ %436, %435 ], [ %411, %401 ]
  %439 = add nsw i32 %438, %221
  store i32 %439, i32* %403, align 8
  %440 = load %struct.mbuf*, %struct.mbuf** %222, align 8
  tail call void @m_adj(%struct.mbuf* %440, i32 %221)
  %441 = bitcast %struct.mbuf* %39 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = bitcast i8* %378 to i64*
  store i64 %442, i64* %443, align 8
  %444 = bitcast %struct.mbuf* %39 to i8**
  store i8* %378, i8** %444, align 8
  br label %445

445:                                              ; preds = %78, %437, %352, %310, %207
  %446 = phi i32 [ %37, %78 ], [ 0, %207 ], [ %37, %310 ], [ 0, %352 ], [ 0, %437 ]
  %447 = phi %struct.mbuf* [ %39, %78 ], [ %109, %207 ], [ %39, %310 ], [ %370, %352 ], [ %379, %437 ]
  br i1 %75, label %448, label %449

448:                                              ; preds = %445
  store i32 %446, i32* %3, align 4
  br label %449

449:                                              ; preds = %216, %397, %240, %49, %12, %395, %238, %214, %47, %10, %445, %448
  %450 = phi %struct.mbuf* [ %447, %448 ], [ %447, %445 ], [ null, %10 ], [ null, %47 ], [ null, %214 ], [ null, %238 ], [ null, %395 ], [ null, %12 ], [ null, %49 ], [ null, %240 ], [ null, %397 ], [ null, %216 ]
  ret %struct.mbuf* %450
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_copydata(%struct.mbuf* nocapture readonly, i32, i32, i8* nocapture) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %4, %12
  %7 = phi i32 [ %13, %12 ], [ %1, %4 ]
  %8 = phi %struct.mbuf* [ %15, %12 ], [ %0, %4 ]
  %9 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %8, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = sub nsw i32 %7, %10
  %14 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %8, i64 0, i32 0, i32 0
  %15 = load %struct.mbuf*, %struct.mbuf** %14, align 8
  %16 = icmp sgt i32 %13, 0
  br i1 %16, label %6, label %17

17:                                               ; preds = %12, %6, %4
  %18 = phi %struct.mbuf* [ %0, %4 ], [ %8, %6 ], [ %15, %12 ]
  %19 = phi i32 [ %1, %4 ], [ %7, %6 ], [ %13, %12 ]
  %20 = icmp sgt i32 %2, 0
  br i1 %20, label %21, label %53

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = sub nsw i32 %23, %19
  %25 = icmp sgt i32 %24, %2
  %26 = select i1 %25, i32 %2, i32 %24
  %27 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = sext i32 %19 to i64
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = zext i32 %26 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %30, i64 %31, i1 false)
  %32 = sub i32 %2, %26
  %33 = getelementptr inbounds i8, i8* %3, i64 %31
  %34 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 0
  %35 = load %struct.mbuf*, %struct.mbuf** %34, align 8
  %36 = icmp sgt i32 %32, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %21, %37
  %38 = phi i8* [ %49, %37 ], [ %33, %21 ]
  %39 = phi i32 [ %48, %37 ], [ %32, %21 ]
  %40 = phi %struct.mbuf* [ %51, %37 ], [ %35, %21 ]
  %41 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, %39
  %44 = select i1 %43, i32 %39, i32 %42
  %45 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = zext i32 %44 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %46, i64 %47, i1 false)
  %48 = sub i32 %39, %44
  %49 = getelementptr inbounds i8, i8* %38, i64 %47
  %50 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 0
  %51 = load %struct.mbuf*, %struct.mbuf** %50, align 8
  %52 = icmp sgt i32 %48, 0
  br i1 %52, label %37, label %53, !llvm.loop !4

53:                                               ; preds = %21, %37, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_adj(%struct.mbuf*, i32) local_unnamed_addr #0 {
  %3 = sub i32 0, %1
  %4 = icmp eq %struct.mbuf* %0, null
  br i1 %4, label %93, label %5

5:                                                ; preds = %2
  %6 = icmp sgt i32 %1, -1
  br i1 %6, label %7, label %39

7:                                                ; preds = %5
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %7, %21
  %10 = phi %struct.mbuf* [ %24, %21 ], [ %0, %7 ]
  %11 = phi i32 [ %22, %21 ], [ %1, %7 ]
  %12 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %10, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = sub nsw i32 %13, %11
  store i32 %16, i32* %12, align 8
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %10, i64 0, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  store i8* %20, i8** %17, align 8
  br label %28

21:                                               ; preds = %9
  %22 = sub nsw i32 %11, %13
  store i32 0, i32* %12, align 8
  %23 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %10, i64 0, i32 0, i32 0
  %24 = load %struct.mbuf*, %struct.mbuf** %23, align 8
  %25 = icmp ne %struct.mbuf* %24, null
  %26 = icmp sgt i32 %22, 0
  %27 = and i1 %26, %25
  br i1 %27, label %9, label %28

28:                                               ; preds = %21, %15, %7
  %29 = phi i32 [ 0, %7 ], [ 0, %15 ], [ %22, %21 ]
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %93, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = sub i32 %29, %1
  %38 = add i32 %37, %36
  store i32 %38, i32* %35, align 8
  br label %93

39:                                               ; preds = %5, %39
  %40 = phi %struct.mbuf* [ %46, %39 ], [ %0, %5 ]
  %41 = phi i32 [ %44, %39 ], [ 0, %5 ]
  %42 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, %41
  %45 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 0
  %46 = load %struct.mbuf*, %struct.mbuf** %45, align 8
  %47 = icmp eq %struct.mbuf* %46, null
  br i1 %47, label %48, label %39

48:                                               ; preds = %39
  %49 = icmp slt i32 %43, %3
  br i1 %49, label %61, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 3
  %52 = add nsw i32 %43, %1
  store i32 %52, i32* %51, align 8
  %53 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, %1
  store i32 %60, i32* %58, align 8
  br label %93

61:                                               ; preds = %48
  %62 = add nsw i32 %44, %1
  %63 = icmp sgt i32 %62, 0
  %64 = select i1 %63, i32 %62, i32 0
  %65 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %64, i32* %70, align 8
  br label %71

71:                                               ; preds = %69, %61
  br label %72

72:                                               ; preds = %71, %88
  %73 = phi i32 [ %89, %88 ], [ %64, %71 ]
  %74 = phi %struct.mbuf* [ %91, %88 ], [ %0, %71 ]
  %75 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %74, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %73, %76
  br i1 %77, label %88, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %74, i64 0, i32 0, i32 3
  store i32 %73, i32* %79, align 8
  %80 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %74, i64 0, i32 0, i32 0
  %81 = load %struct.mbuf*, %struct.mbuf** %80, align 8
  %82 = icmp eq %struct.mbuf* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %78, %83
  %84 = phi %struct.mbuf* [ %85, %83 ], [ %81, %78 ]
  %85 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %84) #9
  %86 = icmp eq %struct.mbuf* %85, null
  br i1 %86, label %87, label %83

87:                                               ; preds = %83
  store %struct.mbuf* null, %struct.mbuf** %80, align 8
  br label %93

88:                                               ; preds = %72
  %89 = sub nsw i32 %73, %76
  %90 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %74, i64 0, i32 0, i32 0
  %91 = load %struct.mbuf*, %struct.mbuf** %90, align 8
  %92 = icmp eq %struct.mbuf* %91, null
  br i1 %92, label %93, label %72

93:                                               ; preds = %88, %34, %87, %78, %28, %57, %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_copym(%struct.mbuf* readonly, i32, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.mbuf*, align 8
  %6 = bitcast %struct.mbuf** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  store %struct.mbuf* inttoptr (i64 -6148914691236517206 to %struct.mbuf*), %struct.mbuf** %5, align 8
  %7 = icmp eq %struct.mbuf* %0, null
  br i1 %7, label %198, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = lshr i32 %12, 1
  %14 = and i32 %13, 1
  br label %28

15:                                               ; preds = %8
  %16 = icmp sgt i32 %1, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %15, %23
  %18 = phi i32 [ %24, %23 ], [ %1, %15 ]
  %19 = phi %struct.mbuf* [ %26, %23 ], [ %0, %15 ]
  %20 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %19, i64 0, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = sub nsw i32 %18, %21
  %25 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %19, i64 0, i32 0, i32 0
  %26 = load %struct.mbuf*, %struct.mbuf** %25, align 8
  %27 = icmp sgt i32 %24, 0
  br i1 %27, label %17, label %28

28:                                               ; preds = %23, %17, %10, %15
  %29 = phi i32 [ 0, %15 ], [ %14, %10 ], [ 0, %17 ], [ 0, %23 ]
  %30 = phi %struct.mbuf* [ %0, %15 ], [ %0, %10 ], [ %26, %23 ], [ %19, %17 ]
  %31 = phi i32 [ %1, %15 ], [ 0, %10 ], [ %24, %23 ], [ %18, %17 ]
  store %struct.mbuf* null, %struct.mbuf** %5, align 8
  %32 = icmp slt i32 %2, 1
  %33 = icmp eq %struct.mbuf* %30, null
  %34 = or i1 %33, %32
  br i1 %34, label %198, label %35

35:                                               ; preds = %28, %181
  %36 = phi i32 [ 0, %181 ], [ %29, %28 ]
  %37 = phi i32 [ 0, %181 ], [ %31, %28 ]
  %38 = phi %struct.mbuf** [ %185, %181 ], [ %5, %28 ]
  %39 = phi i32 [ %182, %181 ], [ %2, %28 ]
  %40 = phi %struct.mbuf* [ %184, %181 ], [ %30, %28 ]
  %41 = icmp ne i32 %36, 0
  %42 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 5
  %43 = load i16, i16* %42, align 8
  %44 = load i64, i64* @zone_mbuf, align 8
  %45 = tail call noalias i8* @malloc(i64 %44) #9
  %46 = bitcast i8* %45 to %struct.mbuf*
  %47 = icmp eq i8* %45, null
  %48 = icmp eq i16 %43, 255
  %49 = or i1 %48, %47
  br i1 %41, label %50, label %62

50:                                               ; preds = %35
  br i1 %49, label %73, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %45, i64 24
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %45, i64 28
  %55 = bitcast i8* %54 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %45, i64 32
  %57 = bitcast i8* %56 to i16*
  store i16 %43, i16* %57, align 8
  %58 = getelementptr inbounds i8, i8* %45, i64 40
  %59 = getelementptr inbounds i8, i8* %45, i64 80
  %60 = getelementptr inbounds i8, i8* %45, i64 16
  %61 = bitcast i8* %60 to i8**
  store i8* %59, i8** %61, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 40, i1 false) #9
  br label %73

62:                                               ; preds = %35
  br i1 %49, label %73, label %63

63:                                               ; preds = %62
  %64 = getelementptr inbounds i8, i8* %45, i64 24
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %45, i64 28
  %67 = bitcast i8* %66 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %45, i64 32
  %69 = bitcast i8* %68 to i16*
  store i16 %43, i16* %69, align 8
  %70 = getelementptr inbounds i8, i8* %45, i64 40
  %71 = getelementptr inbounds i8, i8* %45, i64 16
  %72 = bitcast i8* %71 to i8**
  store i8* %70, i8** %72, align 8
  br label %73

73:                                               ; preds = %63, %62, %51, %50
  %74 = bitcast %struct.mbuf** %38 to i8**
  store i8* %45, i8** %74, align 8
  br i1 %47, label %191, label %75

75:                                               ; preds = %73
  br i1 %41, label %76, label %107

76:                                               ; preds = %75
  %77 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 212990
  %80 = getelementptr inbounds i8, i8* %45, i64 28
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 1
  %84 = or i32 %83, %79
  store i32 %84, i32* %81, align 4
  %85 = icmp eq i32 %83, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %76
  %87 = getelementptr inbounds i8, i8* %45, i64 80
  %88 = getelementptr inbounds i8, i8* %45, i64 16
  %89 = bitcast i8* %88 to i8**
  store i8* %87, i8** %89, align 8
  br label %90

90:                                               ; preds = %76, %86
  %91 = getelementptr inbounds i8, i8* %45, i64 40
  %92 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 0
  %93 = bitcast %struct.pkthdr* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %93, i64 32, i1 false) #9
  %94 = getelementptr inbounds i8, i8* %45, i64 72
  %95 = bitcast i8* %94 to %struct.m_tag**
  store %struct.m_tag* null, %struct.m_tag** %95, align 8
  %96 = tail call i32 @m_tag_copy_chain(%struct.mbuf* nonnull %46, %struct.mbuf* nonnull %40, i32 %3) #9
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %191, label %98

98:                                               ; preds = %90
  %99 = icmp eq i32 %39, 1000000000
  %100 = getelementptr inbounds i8, i8* %45, i64 56
  %101 = bitcast i8* %100 to i32*
  br i1 %99, label %102, label %105

102:                                              ; preds = %98
  %103 = load i32, i32* %101, align 8
  %104 = sub nsw i32 %103, %1
  br label %105

105:                                              ; preds = %98, %102
  %106 = phi i32 [ %104, %102 ], [ %39, %98 ]
  store i32 %106, i32* %101, align 8
  br label %107

107:                                              ; preds = %105, %75
  %108 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = sub nsw i32 %109, %37
  %111 = icmp sgt i32 %39, %110
  %112 = select i1 %111, i32 %110, i32 %39
  %113 = getelementptr inbounds i8, i8* %45, i64 24
  %114 = bitcast i8* %113 to i32*
  store i32 %112, i32* %114, align 8
  %115 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 4
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %167, label %119

119:                                              ; preds = %107
  %120 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 2
  %121 = load i8*, i8** %120, align 8
  %122 = sext i32 %37 to i64
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  %124 = getelementptr inbounds i8, i8* %45, i64 16
  %125 = bitcast i8* %124 to i8**
  store i8* %123, i8** %125, align 8
  %126 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 1, i32 0
  %127 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %128 = load i32*, i32** %127, align 8
  %129 = load volatile i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %134

131:                                              ; preds = %119
  %132 = load volatile i32, i32* %128, align 4
  %133 = add i32 %132, 1
  store volatile i32 %133, i32* %128, align 4
  br label %136

134:                                              ; preds = %119
  %135 = atomicrmw add i32* %128, i32 1 seq_cst
  br label %136

136:                                              ; preds = %131, %134
  %137 = bitcast %struct.m_ext* %126 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds i8, i8* %45, i64 80
  %140 = bitcast i8* %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %142 = bitcast void (i8*, i8*)** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds i8, i8* %45, i64 88
  %145 = bitcast i8* %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds i8, i8* %45, i64 96
  %150 = bitcast i8* %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds i8, i8* %45, i64 104
  %154 = bitcast i8* %153 to i32*
  store i32 %152, i32* %154, align 8
  %155 = bitcast i32** %127 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds i8, i8* %45, i64 112
  %158 = bitcast i8* %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds i8, i8* %45, i64 120
  %162 = bitcast i8* %161 to i32*
  store i32 %160, i32* %162, align 8
  %163 = getelementptr inbounds i8, i8* %45, i64 28
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = or i32 %165, 1
  store i32 %166, i32* %164, align 4
  br label %176

167:                                              ; preds = %107
  %168 = getelementptr inbounds i8, i8* %45, i64 16
  %169 = bitcast i8* %168 to i8**
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 2
  %172 = load i8*, i8** %171, align 8
  %173 = sext i32 %37 to i64
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  %175 = zext i32 %112 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %170, i8* align 1 %174, i64 %175, i1 false)
  br label %176

176:                                              ; preds = %167, %136
  %177 = icmp eq i32 %39, 1000000000
  br i1 %177, label %181, label %178

178:                                              ; preds = %176
  %179 = load i32, i32* %114, align 8
  %180 = sub nsw i32 %39, %179
  br label %181

181:                                              ; preds = %176, %178
  %182 = phi i32 [ %180, %178 ], [ 1000000000, %176 ]
  %183 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %40, i64 0, i32 0, i32 0
  %184 = load %struct.mbuf*, %struct.mbuf** %183, align 8
  %185 = bitcast i8* %45 to %struct.mbuf**
  %186 = icmp slt i32 %182, 1
  %187 = icmp eq %struct.mbuf* %184, null
  %188 = or i1 %187, %186
  br i1 %188, label %189, label %35

189:                                              ; preds = %181
  %190 = load %struct.mbuf*, %struct.mbuf** %5, align 8
  br label %198

191:                                              ; preds = %90, %73
  %192 = load %struct.mbuf*, %struct.mbuf** %5, align 8
  %193 = icmp eq %struct.mbuf* %192, null
  br i1 %193, label %198, label %194

194:                                              ; preds = %191, %194
  %195 = phi %struct.mbuf* [ %196, %194 ], [ %192, %191 ]
  %196 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %195) #9
  %197 = icmp eq %struct.mbuf* %196, null
  br i1 %197, label %198, label %194

198:                                              ; preds = %194, %28, %189, %191, %4
  %199 = phi %struct.mbuf* [ null, %4 ], [ null, %191 ], [ %190, %189 ], [ null, %28 ], [ null, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret %struct.mbuf* %199
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @m_dup_pkthdr(%struct.mbuf*, %struct.mbuf* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 212990
  %7 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = or i32 %9, %6
  store i32 %10, i32* %7, align 4
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 2
  %15 = bitcast i8** %14 to %union.anon.1**
  store %union.anon.1* %13, %union.anon.1** %15, align 8
  br label %16

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 0
  %19 = bitcast %struct.pkthdr* %17 to i8*
  %20 = bitcast %struct.pkthdr* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
  %21 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  store %struct.m_tag* null, %struct.m_tag** %21, align 8
  %22 = tail call i32 @m_tag_copy_chain(%struct.mbuf* %0, %struct.mbuf* %1, i32 %2)
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @m_tag_copy_chain(%struct.mbuf* nocapture, %struct.mbuf* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  %5 = load %struct.m_tag*, %struct.m_tag** %4, align 8
  %6 = icmp eq %struct.m_tag* %5, null
  br i1 %6, label %47, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %5, i64 0, i32 0, i32 0
  %9 = load %struct.m_tag*, %struct.m_tag** %8, align 8
  %10 = icmp eq %struct.m_tag* %9, null
  %11 = bitcast %struct.m_tag** %4 to i64*
  br i1 %10, label %43, label %12

12:                                               ; preds = %7, %28
  %13 = phi %struct.m_tag* [ %33, %28 ], [ %5, %7 ]
  %14 = phi %struct.m_tag* [ %31, %28 ], [ %9, %7 ]
  %15 = icmp eq %struct.m_tag* %13, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = bitcast %struct.m_tag* %13 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %11, align 8
  br label %28

19:                                               ; preds = %12, %19
  %20 = phi %struct.m_tag* [ %22, %19 ], [ %13, %12 ]
  %21 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %20, i64 0, i32 0, i32 0
  %22 = load %struct.m_tag*, %struct.m_tag** %21, align 8
  %23 = icmp eq %struct.m_tag* %22, %14
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  %25 = bitcast %struct.m_tag* %14 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.m_tag* %20 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %24, %16
  %29 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %14, i64 0, i32 4
  %30 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %29, align 8
  tail call void %30(%struct.m_tag* nonnull %14) #9
  %31 = load %struct.m_tag*, %struct.m_tag** %8, align 8
  %32 = icmp eq %struct.m_tag* %31, null
  %33 = load %struct.m_tag*, %struct.m_tag** %4, align 8
  br i1 %32, label %34, label %12

34:                                               ; preds = %28
  %35 = icmp eq %struct.m_tag* %33, %5
  br i1 %35, label %43, label %36

36:                                               ; preds = %34, %36
  %37 = phi %struct.m_tag* [ %39, %36 ], [ %33, %34 ]
  %38 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %37, i64 0, i32 0, i32 0
  %39 = load %struct.m_tag*, %struct.m_tag** %38, align 8
  %40 = icmp eq %struct.m_tag* %39, %5
  br i1 %40, label %41, label %36

41:                                               ; preds = %36
  %42 = bitcast %struct.m_tag* %37 to i64*
  br label %43

43:                                               ; preds = %34, %7, %41
  %44 = phi i64* [ %42, %41 ], [ %11, %7 ], [ %11, %34 ]
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %5, i64 0, i32 4
  %46 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %45, align 8
  tail call void %46(%struct.m_tag* nonnull %5) #9
  br label %47

47:                                               ; preds = %3, %43
  %48 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  %49 = load %struct.m_tag*, %struct.m_tag** %48, align 8
  %50 = icmp eq %struct.m_tag* %49, null
  br i1 %50, label %136, label %51

51:                                               ; preds = %47
  %52 = bitcast %struct.m_tag** %4 to i64*
  %53 = bitcast %struct.m_tag** %4 to i8**
  br label %54

54:                                               ; preds = %51, %131
  %55 = phi %struct.m_tag* [ %49, %51 ], [ %134, %131 ]
  %56 = phi %struct.m_tag* [ null, %51 ], [ %76, %131 ]
  %57 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %55, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %55, i64 0, i32 1
  %60 = load i16, i16* %59, align 8
  %61 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %55, i64 0, i32 2
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i64
  %64 = add nuw nsw i64 %63, 24
  %65 = tail call noalias i8* @malloc(i64 %64) #9
  %66 = icmp eq i8* %65, null
  br i1 %66, label %81, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds i8, i8* %65, i64 8
  %69 = bitcast i8* %68 to i16*
  store i16 %60, i16* %69, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 10
  %71 = bitcast i8* %70 to i16*
  store i16 %62, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %65, i64 12
  %73 = bitcast i8* %72 to i32*
  store i32 %58, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %65, i64 16
  %75 = bitcast i8* %74 to void (%struct.m_tag*)**
  store void (%struct.m_tag*)* @m_tag_free_default, void (%struct.m_tag*)** %75, align 8
  %76 = bitcast i8* %65 to %struct.m_tag*
  %77 = getelementptr inbounds i8, i8* %65, i64 24
  %78 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %55, i64 1
  %79 = bitcast %struct.m_tag* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 %63, i1 false) #9
  %80 = icmp eq %struct.m_tag* %56, null
  br i1 %80, label %123, label %126

81:                                               ; preds = %54
  %82 = load %struct.m_tag*, %struct.m_tag** %4, align 8
  %83 = icmp eq %struct.m_tag* %82, null
  br i1 %83, label %136, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %82, i64 0, i32 0, i32 0
  %86 = load %struct.m_tag*, %struct.m_tag** %85, align 8
  %87 = icmp eq %struct.m_tag* %86, null
  br i1 %87, label %119, label %88

88:                                               ; preds = %84, %104
  %89 = phi %struct.m_tag* [ %109, %104 ], [ %82, %84 ]
  %90 = phi %struct.m_tag* [ %107, %104 ], [ %86, %84 ]
  %91 = icmp eq %struct.m_tag* %89, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = bitcast %struct.m_tag* %89 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %52, align 8
  br label %104

95:                                               ; preds = %88, %95
  %96 = phi %struct.m_tag* [ %98, %95 ], [ %89, %88 ]
  %97 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %96, i64 0, i32 0, i32 0
  %98 = load %struct.m_tag*, %struct.m_tag** %97, align 8
  %99 = icmp eq %struct.m_tag* %98, %90
  br i1 %99, label %100, label %95

100:                                              ; preds = %95
  %101 = bitcast %struct.m_tag* %90 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %struct.m_tag* %96 to i64*
  store i64 %102, i64* %103, align 8
  br label %104

104:                                              ; preds = %100, %92
  %105 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %90, i64 0, i32 4
  %106 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %105, align 8
  tail call void %106(%struct.m_tag* nonnull %90) #9
  %107 = load %struct.m_tag*, %struct.m_tag** %85, align 8
  %108 = icmp eq %struct.m_tag* %107, null
  %109 = load %struct.m_tag*, %struct.m_tag** %4, align 8
  br i1 %108, label %110, label %88

110:                                              ; preds = %104
  %111 = icmp eq %struct.m_tag* %109, %82
  br i1 %111, label %119, label %112

112:                                              ; preds = %110, %112
  %113 = phi %struct.m_tag* [ %115, %112 ], [ %109, %110 ]
  %114 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %113, i64 0, i32 0, i32 0
  %115 = load %struct.m_tag*, %struct.m_tag** %114, align 8
  %116 = icmp eq %struct.m_tag* %115, %82
  br i1 %116, label %117, label %112

117:                                              ; preds = %112
  %118 = bitcast %struct.m_tag* %113 to i64*
  br label %119

119:                                              ; preds = %110, %84, %117
  %120 = phi i64* [ %118, %117 ], [ %52, %84 ], [ %52, %110 ]
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %82, i64 0, i32 4
  %122 = load void (%struct.m_tag*)*, void (%struct.m_tag*)** %121, align 8
  tail call void %122(%struct.m_tag* nonnull %82) #9
  br label %136

123:                                              ; preds = %67
  %124 = load i64, i64* %52, align 8
  %125 = bitcast i8* %65 to i64*
  store i64 %124, i64* %125, align 8
  br label %131

126:                                              ; preds = %67
  %127 = bitcast %struct.m_tag* %56 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8* %65 to i64*
  store i64 %128, i64* %129, align 8
  %130 = bitcast %struct.m_tag* %56 to i8**
  br label %131

131:                                              ; preds = %126, %123
  %132 = phi i8** [ %130, %126 ], [ %53, %123 ]
  store i8* %65, i8** %132, align 8
  %133 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %55, i64 0, i32 0, i32 0
  %134 = load %struct.m_tag*, %struct.m_tag** %133, align 8
  %135 = icmp eq %struct.m_tag* %134, null
  br i1 %135, label %136, label %54

136:                                              ; preds = %131, %47, %119, %81
  %137 = phi i32 [ 0, %81 ], [ 0, %119 ], [ 1, %47 ], [ 1, %131 ]
  ret i32 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.m_tag* @m_tag_copy(%struct.m_tag* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 8
  %7 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %0, i64 0, i32 2
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  %10 = add nuw nsw i64 %9, 24
  %11 = tail call noalias i8* @malloc(i64 %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i16*
  store i16 %6, i16* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 10
  %17 = bitcast i8* %16 to i16*
  store i16 %8, i16* %17, align 2
  %18 = getelementptr inbounds i8, i8* %11, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 %4, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %11, i64 16
  %21 = bitcast i8* %20 to void (%struct.m_tag*)**
  store void (%struct.m_tag*)* @m_tag_free_default, void (%struct.m_tag*)** %21, align 8
  %22 = bitcast i8* %11 to %struct.m_tag*
  %23 = getelementptr inbounds i8, i8* %11, i64 24
  %24 = getelementptr inbounds %struct.m_tag, %struct.m_tag* %0, i64 1
  %25 = bitcast %struct.m_tag* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 %9, i1 false)
  br label %26

26:                                               ; preds = %2, %13
  %27 = phi %struct.m_tag* [ %22, %13 ], [ null, %2 ]
  ret %struct.m_tag* %27
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct.m_tag* @m_tag_alloc(i32, i32, i32, i32) local_unnamed_addr #8 {
  %5 = icmp slt i32 %2, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = sext i32 %2 to i64
  %8 = add nuw nsw i64 %7, 24
  %9 = tail call noalias i8* @malloc(i64 %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.m_tag*
  %13 = trunc i32 %1 to i16
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i16*
  store i16 %13, i16* %15, align 8
  %16 = trunc i32 %2 to i16
  %17 = getelementptr inbounds i8, i8* %9, i64 10
  %18 = bitcast i8* %17 to i16*
  store i16 %16, i16* %18, align 2
  %19 = getelementptr inbounds i8, i8* %9, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %9, i64 16
  %22 = bitcast i8* %21 to void (%struct.m_tag*)**
  store void (%struct.m_tag*)* @m_tag_free_default, void (%struct.m_tag*)** %22, align 8
  br label %23

23:                                               ; preds = %6, %4, %11
  %24 = phi %struct.m_tag* [ %12, %11 ], [ null, %4 ], [ null, %6 ]
  ret %struct.m_tag* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_tag_free_default(%struct.m_tag* nocapture) #0 {
  %2 = bitcast %struct.m_tag* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_copyback(%struct.mbuf*, i32, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = icmp eq %struct.mbuf* %0, null
  br i1 %5, label %124, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, %1
  br i1 %9, label %15, label %10

10:                                               ; preds = %53, %6
  %11 = phi i32 [ %1, %6 ], [ %20, %53 ]
  %12 = phi %struct.mbuf* [ %0, %6 ], [ %54, %53 ]
  %13 = phi i32 [ 0, %6 ], [ %21, %53 ]
  %14 = icmp sgt i32 %2, 0
  br i1 %14, label %58, label %113

15:                                               ; preds = %6, %53
  %16 = phi i32 [ %56, %53 ], [ %8, %6 ]
  %17 = phi i32 [ %21, %53 ], [ 0, %6 ]
  %18 = phi %struct.mbuf* [ %54, %53 ], [ %0, %6 ]
  %19 = phi i32 [ %20, %53 ], [ %1, %6 ]
  %20 = sub nsw i32 %19, %16
  %21 = add nsw i32 %16, %17
  %22 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 0
  %23 = load %struct.mbuf*, %struct.mbuf** %22, align 8
  %24 = icmp eq %struct.mbuf* %23, null
  br i1 %24, label %25, label %53

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 5
  %27 = load i16, i16* %26, align 8
  %28 = load i64, i64* @zone_mbuf, align 8
  %29 = tail call noalias i8* @malloc(i64 %28) #9
  %30 = icmp eq i8* %29, null
  %31 = icmp eq i16 %27, 255
  %32 = or i1 %31, %30
  br i1 %32, label %43, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds i8, i8* %29, i64 24
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 28
  %37 = bitcast i8* %36 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %29, i64 32
  %39 = bitcast i8* %38 to i16*
  store i16 %27, i16* %39, align 8
  %40 = getelementptr inbounds i8, i8* %29, i64 40
  %41 = getelementptr inbounds i8, i8* %29, i64 16
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  br label %43

43:                                               ; preds = %25, %33
  %44 = phi i8* [ undef, %25 ], [ %40, %33 ]
  br i1 %30, label %113, label %45

45:                                               ; preds = %43
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 216, i1 false)
  %46 = add nsw i32 %20, %2
  %47 = icmp slt i32 %46, 216
  %48 = select i1 %47, i32 %46, i32 216
  %49 = getelementptr inbounds i8, i8* %29, i64 24
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 8
  %51 = bitcast %struct.mbuf* %18 to i8**
  store i8* %29, i8** %51, align 8
  %52 = bitcast i8* %29 to %struct.mbuf*
  br label %53

53:                                               ; preds = %45, %15
  %54 = phi %struct.mbuf* [ %52, %45 ], [ %23, %15 ]
  %55 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %54, i64 0, i32 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %20, %56
  br i1 %57, label %15, label %10

58:                                               ; preds = %10, %110
  %59 = phi i32 [ %78, %110 ], [ %13, %10 ]
  %60 = phi %struct.mbuf* [ %111, %110 ], [ %12, %10 ]
  %61 = phi i8* [ %75, %110 ], [ %3, %10 ]
  %62 = phi i32 [ %76, %110 ], [ %2, %10 ]
  %63 = phi i32 [ 0, %110 ], [ %11, %10 ]
  %64 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = sub nsw i32 %65, %63
  %67 = icmp sgt i32 %66, %62
  %68 = select i1 %67, i32 %62, i32 %66
  %69 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = sext i32 %63 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = zext i32 %68 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %61, i64 %73, i1 false)
  %74 = sext i32 %68 to i64
  %75 = getelementptr inbounds i8, i8* %61, i64 %74
  %76 = sub nsw i32 %62, %68
  %77 = add i32 %59, %63
  %78 = add i32 %77, %68
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %113, label %80

80:                                               ; preds = %58
  %81 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 0
  %82 = load %struct.mbuf*, %struct.mbuf** %81, align 8
  %83 = icmp eq %struct.mbuf* %82, null
  br i1 %83, label %84, label %110

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 5
  %86 = load i16, i16* %85, align 8
  %87 = load i64, i64* @zone_mbuf, align 8
  %88 = tail call noalias i8* @malloc(i64 %87) #9
  %89 = icmp eq i8* %88, null
  %90 = icmp eq i16 %86, 255
  %91 = or i1 %90, %89
  br i1 %91, label %102, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds i8, i8* %88, i64 24
  %94 = bitcast i8* %93 to i32*
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds i8, i8* %88, i64 28
  %96 = bitcast i8* %95 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %88, i64 32
  %98 = bitcast i8* %97 to i16*
  store i16 %86, i16* %98, align 8
  %99 = getelementptr inbounds i8, i8* %88, i64 40
  %100 = getelementptr inbounds i8, i8* %88, i64 16
  %101 = bitcast i8* %100 to i8**
  store i8* %99, i8** %101, align 8
  br label %102

102:                                              ; preds = %84, %92
  br i1 %89, label %113, label %103

103:                                              ; preds = %102
  %104 = icmp slt i32 %76, 216
  %105 = select i1 %104, i32 %76, i32 216
  %106 = getelementptr inbounds i8, i8* %88, i64 24
  %107 = bitcast i8* %106 to i32*
  store i32 %105, i32* %107, align 8
  %108 = bitcast %struct.mbuf* %60 to i8**
  store i8* %88, i8** %108, align 8
  %109 = bitcast i8* %88 to %struct.mbuf*
  br label %110

110:                                              ; preds = %103, %80
  %111 = phi %struct.mbuf* [ %109, %103 ], [ %82, %80 ]
  %112 = icmp sgt i32 %76, 0
  br i1 %112, label %58, label %113

113:                                              ; preds = %43, %102, %58, %110, %10
  %114 = phi i32 [ %13, %10 ], [ %78, %110 ], [ %78, %58 ], [ %78, %102 ], [ %21, %43 ]
  %115 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %121, %114
  br i1 %122, label %123, label %124

123:                                              ; preds = %119
  store i32 %114, i32* %120, align 8
  br label %124

124:                                              ; preds = %119, %123, %113, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_prepend(%struct.mbuf*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 5
  %9 = load i16, i16* %8, align 8
  %10 = load i64, i64* @zone_mbuf, align 8
  %11 = tail call noalias i8* @malloc(i64 %10) #9
  %12 = bitcast i8* %11 to %struct.mbuf*
  %13 = icmp eq i8* %11, null
  %14 = icmp eq i16 %9, 255
  %15 = or i1 %14, %13
  br i1 %7, label %28, label %16

16:                                               ; preds = %3
  br i1 %15, label %39, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds i8, i8* %11, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 28
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %11, i64 32
  %23 = bitcast i8* %22 to i16*
  store i16 %9, i16* %23, align 8
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = getelementptr inbounds i8, i8* %11, i64 80
  %26 = getelementptr inbounds i8, i8* %11, i64 16
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false) #9
  br label %39

28:                                               ; preds = %3
  br i1 %15, label %39, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds i8, i8* %11, i64 24
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %11, i64 28
  %33 = bitcast i8* %32 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %11, i64 32
  %35 = bitcast i8* %34 to i16*
  store i16 %9, i16* %35, align 8
  %36 = getelementptr inbounds i8, i8* %11, i64 40
  %37 = getelementptr inbounds i8, i8* %11, i64 16
  %38 = bitcast i8* %37 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %29, %28, %17, %16
  %40 = phi i8* [ %36, %29 ], [ undef, %28 ], [ %25, %17 ], [ undef, %16 ]
  %41 = phi i32 [ 0, %29 ], [ undef, %28 ], [ 2, %17 ], [ undef, %16 ]
  br i1 %13, label %42, label %48

42:                                               ; preds = %39
  %43 = icmp eq %struct.mbuf* %0, null
  br i1 %43, label %88, label %44

44:                                               ; preds = %42, %44
  %45 = phi %struct.mbuf* [ %46, %44 ], [ %0, %42 ]
  %46 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %45) #9
  %47 = icmp eq %struct.mbuf* %46, null
  br i1 %47, label %88, label %44

48:                                               ; preds = %39
  br i1 %7, label %61, label %49

49:                                               ; preds = %48
  %50 = and i32 %5, 212990
  %51 = getelementptr inbounds i8, i8* %11, i64 28
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %11, i64 80
  %54 = getelementptr inbounds i8, i8* %11, i64 16
  %55 = bitcast i8* %54 to i8**
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %11, i64 40
  %57 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0
  %58 = bitcast %struct.pkthdr* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 40, i1 false) #9
  %59 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 7, i32 0
  store %struct.m_tag* null, %struct.m_tag** %59, align 8
  %60 = and i32 %5, -3
  store i32 %60, i32* %4, align 4
  br label %61

61:                                               ; preds = %48, %49
  %62 = phi i8* [ %53, %49 ], [ %40, %48 ]
  %63 = phi i32 [ %50, %49 ], [ %41, %48 ]
  %64 = bitcast i8* %11 to %struct.mbuf**
  store %struct.mbuf* %0, %struct.mbuf** %64, align 8
  %65 = and i32 %63, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %61
  %68 = icmp slt i32 %1, 176
  br i1 %68, label %69, label %85

69:                                               ; preds = %67
  %70 = sub nsw i32 176, %1
  %71 = and i32 %70, -8
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %11, i64 16
  %74 = bitcast i8* %73 to i8**
  %75 = getelementptr inbounds i8, i8* %62, i64 %72
  store i8* %75, i8** %74, align 8
  br label %85

76:                                               ; preds = %61
  %77 = icmp slt i32 %1, 216
  br i1 %77, label %78, label %85

78:                                               ; preds = %76
  %79 = sub nsw i32 216, %1
  %80 = and i32 %79, -8
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %11, i64 16
  %83 = bitcast i8* %82 to i8**
  %84 = getelementptr inbounds i8, i8* %62, i64 %81
  store i8* %84, i8** %83, align 8
  br label %85

85:                                               ; preds = %76, %78, %67, %69
  %86 = getelementptr inbounds i8, i8* %11, i64 24
  %87 = bitcast i8* %86 to i32*
  store i32 %1, i32* %87, align 8
  br label %88

88:                                               ; preds = %44, %42, %85
  %89 = phi %struct.mbuf* [ %12, %85 ], [ null, %42 ], [ null, %44 ]
  ret %struct.mbuf* %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @m_cat(%struct.mbuf*, %struct.mbuf*) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi %struct.mbuf* [ %0, %2 ], [ %6, %3 ]
  %5 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 0
  %6 = load %struct.mbuf*, %struct.mbuf** %5, align 8
  %7 = icmp eq %struct.mbuf* %6, null
  br i1 %7, label %8, label %3

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 0
  %10 = icmp eq %struct.mbuf* %1, null
  br i1 %10, label %43, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 4
  %13 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  %15 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 1
  %17 = bitcast %union.anon* %16 to i8*
  br label %18

18:                                               ; preds = %11, %34
  %19 = phi %struct.mbuf* [ %1, %11 ], [ %41, %34 ]
  %20 = load i32, i32* %12, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = load i8*, i8** %13, align 8
  %25 = load i32, i32* %14, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %19, i64 0, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %27, i64 %30
  %32 = icmp ult i8* %31, %17
  br i1 %32, label %34, label %33

33:                                               ; preds = %23, %18
  store %struct.mbuf* %19, %struct.mbuf** %9, align 8
  br label %43

34:                                               ; preds = %23
  %35 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %19, i64 0, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = zext i32 %29 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %36, i64 %37, i1 false)
  %38 = load i32, i32* %28, align 8
  %39 = load i32, i32* %14, align 8
  %40 = add nsw i32 %39, %38
  store i32 %40, i32* %14, align 8
  %41 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %19)
  %42 = icmp eq %struct.mbuf* %41, null
  br i1 %42, label %43, label %18

43:                                               ; preds = %34, %8, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @m_split(%struct.mbuf*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.mbuf* %0, null
  br i1 %4, label %175, label %5

5:                                                ; preds = %3, %11
  %6 = phi i32 [ %12, %11 ], [ %1, %3 ]
  %7 = phi %struct.mbuf* [ %14, %11 ], [ %0, %3 ]
  %8 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %6, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = sub i32 %6, %9
  %13 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 0
  %14 = load %struct.mbuf*, %struct.mbuf** %13, align 8
  %15 = icmp eq %struct.mbuf* %14, null
  br i1 %15, label %175, label %5

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 3
  %18 = sub i32 %9, %6
  %19 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %74, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 5
  %25 = load i16, i16* %24, align 8
  %26 = load i64, i64* @zone_mbuf, align 8
  %27 = tail call noalias i8* @malloc(i64 %26) #9
  %28 = bitcast i8* %27 to %struct.mbuf*
  %29 = icmp eq i8* %27, null
  %30 = icmp eq i16 %25, 255
  %31 = or i1 %30, %29
  br i1 %31, label %43, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %27, i64 24
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %27, i64 28
  %36 = bitcast i8* %35 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #9
  store i32 2, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %27, i64 32
  %38 = bitcast i8* %37 to i16*
  store i16 %25, i16* %38, align 8
  %39 = getelementptr inbounds i8, i8* %27, i64 40
  %40 = getelementptr inbounds i8, i8* %27, i64 80
  %41 = getelementptr inbounds i8, i8* %27, i64 16
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 40, i1 false) #9
  br label %43

43:                                               ; preds = %23, %32
  %44 = phi i8* [ undef, %23 ], [ %40, %32 ]
  br i1 %29, label %175, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0
  %47 = bitcast %struct.pkthdr* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %27, i64 40
  %50 = bitcast i8* %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = sub nsw i32 %52, %1
  %54 = getelementptr inbounds i8, i8* %27, i64 56
  %55 = bitcast i8* %54 to i32*
  store i32 %53, i32* %55, align 8
  store i32 %1, i32* %51, align 8
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 4
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %111

60:                                               ; preds = %45
  %61 = icmp ugt i32 %18, 176
  br i1 %61, label %62, label %100

62:                                               ; preds = %60
  %63 = getelementptr inbounds i8, i8* %27, i64 16
  %64 = bitcast i8* %63 to i8**
  %65 = getelementptr inbounds i8, i8* %44, i64 176
  store i8* %65, i8** %64, align 8
  %66 = tail call %struct.mbuf* @m_split(%struct.mbuf* nonnull %7, i32 %6, i32 %2)
  %67 = bitcast i8* %27 to %struct.mbuf**
  store %struct.mbuf* %66, %struct.mbuf** %67, align 8
  %68 = icmp eq %struct.mbuf* %66, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %28)
  br label %175

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %27, i64 24
  %73 = bitcast i8* %72 to i32*
  store i32 0, i32* %73, align 8
  br label %175

74:                                               ; preds = %16
  %75 = icmp eq i32 %18, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 0
  %78 = load %struct.mbuf*, %struct.mbuf** %77, align 8
  store %struct.mbuf* null, %struct.mbuf** %77, align 8
  br label %175

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 5
  %81 = load i16, i16* %80, align 8
  %82 = load i64, i64* @zone_mbuf, align 8
  %83 = tail call noalias i8* @malloc(i64 %82) #9
  %84 = bitcast i8* %83 to %struct.mbuf*
  %85 = icmp eq i8* %83, null
  %86 = icmp eq i16 %81, 255
  %87 = or i1 %86, %85
  br i1 %87, label %98, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds i8, i8* %83, i64 24
  %90 = bitcast i8* %89 to i32*
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %83, i64 28
  %92 = bitcast i8* %91 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #9
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %83, i64 32
  %94 = bitcast i8* %93 to i16*
  store i16 %81, i16* %94, align 8
  %95 = getelementptr inbounds i8, i8* %83, i64 40
  %96 = getelementptr inbounds i8, i8* %83, i64 16
  %97 = bitcast i8* %96 to i8**
  store i8* %95, i8** %97, align 8
  br label %98

98:                                               ; preds = %79, %88
  %99 = phi i8* [ undef, %79 ], [ %95, %88 ]
  br i1 %85, label %175, label %100

100:                                              ; preds = %98, %60
  %101 = phi i32 [ 176, %60 ], [ 216, %98 ]
  %102 = phi i8* [ %27, %60 ], [ %83, %98 ]
  %103 = phi i8* [ %44, %60 ], [ %99, %98 ]
  %104 = phi %struct.mbuf* [ %28, %60 ], [ %84, %98 ]
  %105 = sub i32 %101, %18
  %106 = and i32 %105, -8
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %102, i64 16
  %109 = bitcast i8* %108 to i8**
  %110 = getelementptr inbounds i8, i8* %103, i64 %107
  store i8* %110, i8** %109, align 8
  br label %111

111:                                              ; preds = %100, %45
  %112 = phi %struct.mbuf* [ %28, %45 ], [ %104, %100 ]
  %113 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 4
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %161, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 2
  %119 = load i8*, i8** %118, align 8
  %120 = zext i32 %6 to i64
  %121 = getelementptr inbounds i8, i8* %119, i64 %120
  %122 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 0, i32 2
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 1, i32 0, i32 1, i32 0
  %124 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %125 = load i32*, i32** %124, align 8
  %126 = load volatile i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %131

128:                                              ; preds = %117
  %129 = load volatile i32, i32* %125, align 4
  %130 = add i32 %129, 1
  store volatile i32 %130, i32* %125, align 4
  br label %133

131:                                              ; preds = %117
  %132 = atomicrmw add i32* %125, i32 1 seq_cst
  br label %133

133:                                              ; preds = %128, %131
  %134 = bitcast %struct.m_ext* %123 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 1, i32 0, i32 1
  %137 = bitcast %union.anon.1* %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %139 = bitcast void (i8*, i8*)** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %142 = bitcast void (i8*, i8*)** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2
  %144 = bitcast i8** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2
  %147 = bitcast i8** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  store i32 %149, i32* %150, align 8
  %151 = bitcast i32** %124 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %154 = bitcast i32** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 1, i32 0, i32 1, i32 0, i32 5
  store i32 %156, i32* %157, align 8
  %158 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 0, i32 4
  %159 = load i32, i32* %158, align 4
  %160 = or i32 %159, 1
  store i32 %160, i32* %158, align 4
  br label %169

161:                                              ; preds = %111
  %162 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 0, i32 2
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 2
  %165 = load i8*, i8** %164, align 8
  %166 = zext i32 %6 to i64
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  %168 = zext i32 %18 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %167, i64 %168, i1 false)
  br label %169

169:                                              ; preds = %161, %133
  %170 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 0, i32 3
  store i32 %18, i32* %170, align 8
  store i32 %6, i32* %17, align 8
  %171 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 0
  %172 = bitcast %struct.mbuf* %7 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %struct.mbuf* %112 to i64*
  store i64 %173, i64* %174, align 8
  store %struct.mbuf* null, %struct.mbuf** %171, align 8
  br label %175

175:                                              ; preds = %11, %3, %98, %43, %169, %76, %71, %69
  %176 = phi %struct.mbuf* [ %112, %169 ], [ null, %69 ], [ %28, %71 ], [ %78, %76 ], [ null, %43 ], [ null, %98 ], [ null, %3 ], [ null, %11 ]
  ret %struct.mbuf* %176
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pack_send_buffer(i8* nocapture, %struct.mbuf* nocapture readonly) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi %struct.mbuf* [ %1, %2 ], [ %17, %3 ]
  %5 = phi i32 [ 0, %2 ], [ %15, %3 ]
  %6 = phi i32 [ 0, %2 ], [ %14, %3 ]
  %7 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 %13, i1 false)
  %14 = add nsw i32 %8, %6
  %15 = add nsw i32 %8, %5
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 0
  %17 = load %struct.mbuf*, %struct.mbuf** %16, align 8
  %18 = icmp eq %struct.mbuf* %17, null
  br i1 %18, label %19, label %3

19:                                               ; preds = %3
  ret i32 %15
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
