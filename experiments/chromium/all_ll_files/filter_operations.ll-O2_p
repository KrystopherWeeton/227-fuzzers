; ModuleID = '../../cc/paint/filter_operations.cc'
source_filename = "../../cc/paint/filter_operations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::FilterOperations" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.5" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.2", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%class.anon = type { %class.SkMatrix }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::TracedValueJSON" = type { %"class.base::trace_event::TracedValue" }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN4base11trace_event15TracedValueJSOND0Ev = comdat any

$_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZTVN4base11trace_event15TracedValueJSONE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"FilterOperations\00", align 1
@_ZTVN4base11trace_event15TracedValueJSONE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event11TracedValueD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValueJSON"*)* @_ZN4base11trace_event15TracedValueJSOND0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*)* @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, comdat, align 8

@_ZN2cc16FilterOperationsC1Ev = hidden unnamed_addr alias void (%"class.cc::FilterOperations"*), void (%"class.cc::FilterOperations"*)* @_ZN2cc16FilterOperationsC2Ev
@_ZN2cc16FilterOperationsC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"*), void (%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"*)* @_ZN2cc16FilterOperationsC2ERKS0_
@_ZN2cc16FilterOperationsC1EONSt3__16vectorINS_15FilterOperationENS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"class.cc::FilterOperations"*, %"class.std::__1::vector"*), void (%"class.cc::FilterOperations"*, %"class.std::__1::vector"*)* @_ZN2cc16FilterOperationsC2EONSt3__16vectorINS_15FilterOperationENS1_9allocatorIS3_EEEE
@_ZN2cc16FilterOperationsD1Ev = hidden unnamed_addr alias void (%"class.cc::FilterOperations"*), void (%"class.cc::FilterOperations"*)* @_ZN2cc16FilterOperationsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16FilterOperationsC2Ev(%"class.cc::FilterOperations"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16FilterOperationsC2ERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.cc::FilterOperation"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.cc::FilterOperations"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 152
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 121360158379668102
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.cc::FilterOperations"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #12
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #13
  %18 = bitcast i8* %17 to %"class.cc::FilterOperation"*
  %19 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.cc::FilterOperation"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.cc::FilterOperations"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %18, i64 %10
  %23 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cc::FilterOperation"* %22, %"class.cc::FilterOperation"** %23, align 8
  %24 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %24, align 8
  %26 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %4, align 8
  %27 = bitcast %"class.cc::FilterOperation"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.cc::FilterOperation"* %25, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"class.cc::FilterOperation"* [ %34, %30 ], [ %18, %16 ]
  %32 = phi %"class.cc::FilterOperation"* [ %33, %30 ], [ %25, %16 ]
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %31, %"class.cc::FilterOperation"* dereferenceable(152) %32) #11
  %33 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %32, i64 1
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %31, i64 1
  %35 = icmp eq %"class.cc::FilterOperation"* %33, %26
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.cc::FilterOperation"* %34 to i64
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi i64 [ %28, %16 ], [ %37, %36 ]
  store i64 %39, i64* %27, align 8
  br label %40

40:                                               ; preds = %2, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16FilterOperationsC2EONSt3__16vectorINS_15FilterOperationENS1_9allocatorIS3_EEEE(%"class.cc::FilterOperations"* nocapture, %"class.std::__1::vector"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.cc::FilterOperation"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.cc::FilterOperation"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.cc::FilterOperation"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.cc::FilterOperation"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16FilterOperationsD2Ev(%"class.cc::FilterOperations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %2, align 8
  %4 = icmp eq %"class.cc::FilterOperation"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::FilterOperation"* %3 to i8*
  %7 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %7, align 8
  %9 = icmp eq %"class.cc::FilterOperation"* %8, %3
  br i1 %9, label %17, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"class.cc::FilterOperation"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %11, i64 -1
  tail call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %12) #11
  %13 = icmp eq %"class.cc::FilterOperation"* %12, %3
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = bitcast %"class.cc::FilterOperations"* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i8* [ %16, %14 ], [ %6, %5 ]
  store %"class.cc::FilterOperation"* %3, %"class.cc::FilterOperation"** %7, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* returned, %"class.cc::FilterOperations"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.cc::FilterOperations"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"class.cc::FilterOperation"* %7, %"class.cc::FilterOperation"* %9) #11
  br label %10

10:                                               ; preds = %2, %4
  ret %"class.cc::FilterOperations"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSEOS0_(%"class.cc::FilterOperations"* returned, %"class.cc::FilterOperations"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %3, align 8
  %5 = icmp eq %"class.cc::FilterOperation"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::FilterOperation"* %4 to i8*
  %8 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %8, align 8
  %10 = icmp eq %"class.cc::FilterOperation"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.cc::FilterOperation"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %12, i64 -1
  tail call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %13) #11
  %14 = icmp eq %"class.cc::FilterOperation"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::FilterOperations"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"class.cc::FilterOperation"* %4, %"class.cc::FilterOperation"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #13
  %20 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  br label %21

21:                                               ; preds = %2, %18
  %22 = bitcast %"class.cc::FilterOperations"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.cc::FilterOperation"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.cc::FilterOperation"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.cc::FilterOperation"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.cc::FilterOperation"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"class.cc::FilterOperations"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #11
  ret %"class.cc::FilterOperations"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc16FilterOperationseqERKS0_(%"class.cc::FilterOperations"* nocapture readonly, %"class.cc::FilterOperations"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.cc::FilterOperation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.cc::FilterOperations"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.cc::FilterOperation"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %8, %14
  %16 = inttoptr i64 %7 to %"class.cc::FilterOperation"*
  br i1 %15, label %17, label %37

17:                                               ; preds = %2
  %18 = icmp eq i64 %11, %13
  br i1 %18, label %37, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = inttoptr i64 %13 to %"class.cc::FilterOperation"*
  %22 = tail call zeroext i1 @_ZNK2cc15FilterOperationeqERKS0_(%"class.cc::FilterOperation"* %16, %"class.cc::FilterOperation"* dereferenceable(152) %21) #11
  br i1 %22, label %23, label %37

23:                                               ; preds = %19, %30
  %24 = phi i64 [ %36, %30 ], [ 1, %19 ]
  %25 = load i64, i64* %10, align 8
  %26 = load i64, i64* %12, align 8
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 152
  %29 = icmp ult i64 %24, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %23
  %31 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %20, align 8
  %32 = inttoptr i64 %26 to %"class.cc::FilterOperation"*
  %33 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %31, i64 %24
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %32, i64 %24
  %35 = tail call zeroext i1 @_ZNK2cc15FilterOperationeqERKS0_(%"class.cc::FilterOperation"* %33, %"class.cc::FilterOperation"* dereferenceable(152) %34) #11
  %36 = add nuw i64 %24, 1
  br i1 %35, label %23, label %37

37:                                               ; preds = %30, %23, %19, %17, %2
  %38 = phi i1 [ false, %2 ], [ true, %17 ], [ false, %19 ], [ true, %23 ], [ false, %30 ]
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16FilterOperations6AppendERKNS_15FilterOperationE(%"class.cc::FilterOperations"*, %"class.cc::FilterOperation"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %5, align 8
  %7 = icmp eq %"class.cc::FilterOperation"* %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %4, %"class.cc::FilterOperation"* dereferenceable(152) %1) #11
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %4, i64 1
  %10 = ptrtoint %"class.cc::FilterOperation"* %9 to i64
  %11 = bitcast %"class.cc::FilterOperation"** %3 to i64*
  store i64 %10, i64* %11, align 8
  br label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %13, %"class.cc::FilterOperation"* dereferenceable(152) %1) #11
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16FilterOperations5ClearEv(%"class.cc::FilterOperations"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %4, align 8
  %6 = icmp eq %"class.cc::FilterOperation"* %5, %3
  br i1 %6, label %11, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.cc::FilterOperation"* [ %9, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 -1
  tail call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %9) #11
  %10 = icmp eq %"class.cc::FilterOperation"* %9, %3
  br i1 %10, label %11, label %7

11:                                               ; preds = %7, %1
  store %"class.cc::FilterOperation"* %3, %"class.cc::FilterOperation"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %4, align 8
  %6 = icmp eq %"class.cc::FilterOperation"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %class.anon, align 8
  %6 = alloca [9 x float], align 4
  %7 = bitcast [9 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %7)
  %8 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 36, i1 false)
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %13, align 8
  %15 = bitcast %"class.gfx::Rect"* %1 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %18 = bitcast %"class.gfx::Size"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = bitcast %class.anon* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20)
  %21 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 4 %7, i64 36, i1 false)
  %22 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0, i32 1
  store i32 %10, i32* %22, align 4
  %23 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %16, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %19, i64* %25, align 8
  %26 = icmp eq %"class.cc::FilterOperation"* %12, %14
  br i1 %26, label %36, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"class.cc::FilterOperation"* [ %12, %27 ], [ %34, %29 ]
  %31 = call { i64, i64 } @_ZNK2cc15FilterOperation7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperation"* %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %23, %class.SkMatrix* nonnull dereferenceable(40) %28) #11
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = extractvalue { i64, i64 } %31, 1
  store i64 %32, i64* %24, align 8
  store i64 %33, i64* %25, align 8
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %30, i64 1
  %35 = icmp eq %"class.cc::FilterOperation"* %34, %14
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %3
  %37 = phi i64 [ %19, %3 ], [ %33, %29 ]
  %38 = phi i64 [ %16, %3 ], [ %32, %29 ]
  %39 = insertvalue { i64, i64 } undef, i64 %38, 0
  %40 = insertvalue { i64, i64 } %39, i64 %37, 1
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %7)
  ret { i64, i64 } %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc16FilterOperations14MapRectReverseERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %7, align 8
  %9 = bitcast %"class.gfx::Rect"* %1 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %12 = bitcast %"class.gfx::Size"* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %10, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.cc::FilterOperation"* %6, %8
  br i1 %18, label %26, label %19

19:                                               ; preds = %3, %19
  %20 = phi %"class.cc::FilterOperation"* [ %21, %19 ], [ %6, %3 ]
  %21 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %20, i64 -1
  %22 = call { i64, i64 } @_ZNK2cc15FilterOperation14MapRectReverseERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperation"* %21, %"class.gfx::Rect"* nonnull dereferenceable(16) %15, %class.SkMatrix* dereferenceable(40) %2) #11
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = extractvalue { i64, i64 } %22, 1
  store i64 %23, i64* %16, align 8
  store i64 %24, i64* %17, align 8
  %25 = icmp eq %"class.cc::FilterOperation"* %21, %8
  br i1 %25, label %26, label %19

26:                                               ; preds = %19, %3
  %27 = phi i64 [ %13, %3 ], [ %24, %19 ]
  %28 = phi i64 [ %10, %3 ], [ %23, %19 ]
  %29 = insertvalue { i64, i64 } undef, i64 %28, 0
  %30 = insertvalue { i64, i64 } %29, i64 %27, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret { i64, i64 } %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.cc::FilterOperation"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  %8 = inttoptr i64 %6 to %"class.cc::FilterOperation"*
  br i1 %7, label %26, label %9

9:                                                ; preds = %1
  %10 = sub i64 %4, %6
  %11 = sdiv exact i64 %10, 152
  br label %12

12:                                               ; preds = %9, %18
  %13 = phi i64 [ 0, %9 ], [ %19, %18 ]
  %14 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -8
  %17 = icmp ult i32 %16, 5
  br i1 %17, label %21, label %18

18:                                               ; preds = %21, %12
  %19 = add nuw i64 %13, 1
  %20 = icmp ult i64 %19, %11
  br i1 %20, label %12, label %26

21:                                               ; preds = %12
  %22 = trunc i32 %16 to i8
  %23 = lshr i8 27, %22
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %18, label %26

26:                                               ; preds = %21, %18, %1
  %27 = phi i1 [ false, %1 ], [ true, %21 ], [ false, %18 ]
  ret i1 %27
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK2cc16FilterOperations20MaximumPixelMovementEv(%"class.cc::FilterOperations"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.cc::FilterOperation"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  %8 = inttoptr i64 %6 to %"class.cc::FilterOperation"*
  br i1 %7, label %12, label %9

9:                                                ; preds = %1
  %10 = sub i64 %4, %6
  %11 = sdiv exact i64 %10, 152
  br label %14

12:                                               ; preds = %59, %1
  %13 = phi float [ 0.000000e+00, %1 ], [ %60, %59 ]
  ret float %13

14:                                               ; preds = %9, %59
  %15 = phi i64 [ 0, %9 ], [ %61, %59 ]
  %16 = phi float [ 0.000000e+00, %9 ], [ %60, %59 ]
  %17 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %15, i32 0
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %59 [
    i32 8, label %19
    i32 9, label %24
    i32 11, label %48
    i32 12, label %55
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %15, i32 1
  %21 = load float, float* %20, align 4
  %22 = fmul float %21, 3.000000e+00
  %23 = tail call float @llvm.maxnum.f32(float %16, float %22) #11
  br label %59

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %15, i32 3
  %26 = bitcast %"class.gfx::Point"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = icmp slt i32 %28, 0
  %31 = sub nsw i32 0, %28
  %32 = select i1 %30, i32 %31, i32 %28
  %33 = trunc i64 %29 to i32
  %34 = icmp slt i32 %33, 0
  %35 = sub nsw i32 0, %33
  %36 = select i1 %34, i32 %35, i32 %33
  %37 = sitofp i32 %32 to double
  %38 = sitofp i32 %36 to double
  %39 = tail call double @llvm.maxnum.f64(double %37, double %38) #11
  %40 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %15, i32 1
  %41 = load float, float* %40, align 4
  %42 = fmul float %41, 3.000000e+00
  %43 = fpext float %42 to double
  %44 = fadd double %39, %43
  %45 = fpext float %16 to double
  %46 = tail call double @llvm.maxnum.f64(double %45, double %44) #11
  %47 = fptrunc double %46 to float
  br label %59

48:                                               ; preds = %14
  %49 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %15, i32 7
  %50 = load i32, i32* %49, align 8
  %51 = fpext float %16 to double
  %52 = sitofp i32 %50 to double
  %53 = tail call double @llvm.maxnum.f64(double %51, double %52) #11
  %54 = fptrunc double %53 to float
  br label %59

55:                                               ; preds = %14
  %56 = fpext float %16 to double
  %57 = tail call double @llvm.maxnum.f64(double %56, double 1.000000e+02) #11
  %58 = fptrunc double %57 to float
  br label %59

59:                                               ; preds = %14, %55, %48, %24, %19
  %60 = phi float [ %58, %55 ], [ %54, %48 ], [ %47, %24 ], [ %23, %19 ], [ %16, %14 ]
  %61 = add nuw i64 %15, 1
  %62 = icmp ult i64 %61, %11
  br i1 %62, label %14, label %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc16FilterOperations27HasFilterThatAffectsOpacityEv(%"class.cc::FilterOperations"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.cc::FilterOperation"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  %8 = inttoptr i64 %6 to %"class.cc::FilterOperation"*
  br i1 %7, label %39, label %9

9:                                                ; preds = %1
  %10 = sub i64 %4, %6
  %11 = sdiv exact i64 %10, 152
  br label %12

12:                                               ; preds = %9, %36
  %13 = phi i64 [ 0, %9 ], [ %37, %36 ]
  %14 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 0
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %36 [
    i32 7, label %39
    i32 8, label %39
    i32 9, label %39
    i32 11, label %39
    i32 12, label %39
    i32 14, label %39
    i32 10, label %16
  ]

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 6, i64 15
  %18 = load float, float* %17, align 4
  %19 = fcmp une float %18, 0.000000e+00
  br i1 %19, label %39, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 6, i64 16
  %22 = load float, float* %21, align 4
  %23 = fcmp une float %22, 0.000000e+00
  br i1 %23, label %39, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 6, i64 17
  %26 = load float, float* %25, align 4
  %27 = fcmp une float %26, 0.000000e+00
  br i1 %27, label %39, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 6, i64 18
  %30 = load float, float* %29, align 4
  %31 = fcmp une float %30, 1.000000e+00
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 %13, i32 6, i64 19
  %34 = load float, float* %33, align 4
  %35 = fcmp une float %34, 0.000000e+00
  br i1 %35, label %39, label %36

36:                                               ; preds = %32, %12
  %37 = add nuw i64 %13, 1
  %38 = icmp ult i64 %37, %11
  br i1 %38, label %12, label %39

39:                                               ; preds = %12, %12, %12, %12, %12, %12, %36, %32, %28, %24, %20, %16, %1
  %40 = phi i1 [ false, %1 ], [ true, %16 ], [ true, %20 ], [ true, %24 ], [ true, %28 ], [ true, %32 ], [ false, %36 ], [ true, %12 ], [ true, %12 ], [ true, %12 ], [ true, %12 ], [ true, %12 ], [ true, %12 ]
  ret i1 %40
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc16FilterOperations18HasReferenceFilterEv(%"class.cc::FilterOperations"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %4, align 8
  %6 = icmp eq %"class.cc::FilterOperation"* %5, %3
  br i1 %6, label %15, label %7

7:                                                ; preds = %1, %12
  %8 = phi %"class.cc::FilterOperation"* [ %13, %12 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 12
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %8, i64 1
  %14 = icmp eq %"class.cc::FilterOperation"* %13, %3
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %12, %1
  %16 = phi %"class.cc::FilterOperation"* [ %3, %1 ], [ %3, %12 ], [ %8, %7 ]
  %17 = icmp ne %"class.cc::FilterOperation"* %3, %16
  ret i1 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %5, align 8
  %7 = icmp eq %"class.cc::FilterOperation"* %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.cc::FilterOperation"* [ %14, %13 ], [ %6, %2 ]
  %10 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %9, i64 1
  %15 = icmp eq %"class.cc::FilterOperation"* %14, %4
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %13, %2
  %17 = phi %"class.cc::FilterOperation"* [ %4, %2 ], [ %9, %8 ], [ %4, %13 ]
  %18 = icmp ne %"class.cc::FilterOperation"* %4, %17
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16FilterOperations5BlendERKS0_d(%"class.cc::FilterOperations"* noalias sret, %"class.cc::FilterOperations"* readonly, %"class.cc::FilterOperations"* nocapture readonly dereferenceable(24), double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::FilterOperations", align 8
  %6 = alloca %"class.cc::FilterOperation", align 8
  %7 = alloca %"class.cc::FilterOperation", align 8
  %8 = alloca %"class.cc::FilterOperation", align 8
  %9 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %11, align 8
  %13 = icmp eq %"class.cc::FilterOperation"* %12, %10
  %14 = ptrtoint %"class.cc::FilterOperation"* %10 to i64
  %15 = ptrtoint %"class.cc::FilterOperation"* %12 to i64
  br i1 %13, label %26, label %16

16:                                               ; preds = %4, %21
  %17 = phi %"class.cc::FilterOperation"* [ %22, %21 ], [ %12, %4 ]
  %18 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 12
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %17, i64 1
  %23 = icmp eq %"class.cc::FilterOperation"* %22, %10
  br i1 %23, label %26, label %16

24:                                               ; preds = %16
  %25 = icmp eq %"class.cc::FilterOperation"* %10, %17
  br i1 %25, label %26, label %44

26:                                               ; preds = %21, %24, %4
  %27 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %2, i64 0, i32 0, i32 0, i32 1
  %28 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %29, align 8
  %31 = icmp eq %"class.cc::FilterOperation"* %30, %28
  %32 = ptrtoint %"class.cc::FilterOperation"* %28 to i64
  %33 = ptrtoint %"class.cc::FilterOperation"* %30 to i64
  br i1 %31, label %73, label %34

34:                                               ; preds = %26, %39
  %35 = phi %"class.cc::FilterOperation"* [ %40, %39 ], [ %30, %26 ]
  %36 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 12
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %35, i64 1
  %41 = icmp eq %"class.cc::FilterOperation"* %40, %28
  br i1 %41, label %73, label %34

42:                                               ; preds = %34
  %43 = icmp eq %"class.cc::FilterOperation"* %28, %35
  br i1 %43, label %73, label %44

44:                                               ; preds = %24, %42
  %45 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #11
  %46 = sub i64 %14, %15
  %47 = sdiv exact i64 %46, 152
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %245, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 121360158379668102
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = bitcast %"class.cc::FilterOperations"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #12
  unreachable

53:                                               ; preds = %49
  %54 = tail call i8* @_Znwm(i64 %46) #13
  %55 = bitcast i8* %54 to %"class.cc::FilterOperation"*
  %56 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.cc::FilterOperation"** %56 to i8**
  store i8* %54, i8** %57, align 8
  %58 = bitcast %"class.cc::FilterOperations"* %0 to i8**
  store i8* %54, i8** %58, align 8
  %59 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %55, i64 %47
  %60 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cc::FilterOperation"* %59, %"class.cc::FilterOperation"** %60, align 8
  %61 = bitcast %"class.cc::FilterOperation"** %56 to i64*
  %62 = ptrtoint i8* %54 to i64
  br i1 %13, label %71, label %63

63:                                               ; preds = %53, %63
  %64 = phi %"class.cc::FilterOperation"* [ %67, %63 ], [ %55, %53 ]
  %65 = phi %"class.cc::FilterOperation"* [ %66, %63 ], [ %12, %53 ]
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %64, %"class.cc::FilterOperation"* dereferenceable(152) %65) #11
  %66 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %65, i64 1
  %67 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %64, i64 1
  %68 = icmp eq %"class.cc::FilterOperation"* %66, %10
  br i1 %68, label %69, label %63

69:                                               ; preds = %63
  %70 = ptrtoint %"class.cc::FilterOperation"* %67 to i64
  br label %71

71:                                               ; preds = %69, %53
  %72 = phi i64 [ %62, %53 ], [ %70, %69 ]
  store i64 %72, i64* %61, align 8
  br label %245

73:                                               ; preds = %39, %42, %26
  %74 = sub i64 %32, %33
  %75 = sdiv exact i64 %74, 152
  %76 = sub i64 %14, %15
  %77 = sdiv exact i64 %76, 152
  %78 = icmp ugt i64 %75, %77
  %79 = icmp eq i64 %75, %77
  %80 = select i1 %78, i64 %75, i64 %77
  %81 = icmp ult i64 %75, %77
  %82 = select i1 %81, i64 %75, i64 %77
  %83 = select i1 %79, i64 %77, i64 %80
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %122, label %87

85:                                               ; preds = %87
  %86 = icmp ult i64 %94, %82
  br i1 %86, label %87, label %122

87:                                               ; preds = %73, %85
  %88 = phi i64 [ %94, %85 ], [ 0, %73 ]
  %89 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %30, i64 %88, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %12, i64 %88, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %90, %92
  %94 = add nuw i64 %88, 1
  br i1 %93, label %85, label %95

95:                                               ; preds = %87
  %96 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #11
  %97 = icmp eq i64 %76, 0
  br i1 %97, label %245, label %98

98:                                               ; preds = %95
  %99 = icmp ugt i64 %77, 121360158379668102
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.cc::FilterOperations"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %101) #12
  unreachable

102:                                              ; preds = %98
  %103 = tail call i8* @_Znwm(i64 %76) #13
  %104 = bitcast i8* %103 to %"class.cc::FilterOperation"*
  %105 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = bitcast %"class.cc::FilterOperation"** %105 to i8**
  store i8* %103, i8** %106, align 8
  %107 = bitcast %"class.cc::FilterOperations"* %0 to i8**
  store i8* %103, i8** %107, align 8
  %108 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %104, i64 %77
  %109 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cc::FilterOperation"* %108, %"class.cc::FilterOperation"** %109, align 8
  %110 = bitcast %"class.cc::FilterOperation"** %105 to i64*
  %111 = ptrtoint i8* %103 to i64
  br i1 %13, label %120, label %112

112:                                              ; preds = %102, %112
  %113 = phi %"class.cc::FilterOperation"* [ %116, %112 ], [ %104, %102 ]
  %114 = phi %"class.cc::FilterOperation"* [ %115, %112 ], [ %12, %102 ]
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %113, %"class.cc::FilterOperation"* dereferenceable(152) %114) #11
  %115 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %114, i64 1
  %116 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %113, i64 1
  %117 = icmp eq %"class.cc::FilterOperation"* %115, %10
  br i1 %117, label %118, label %112

118:                                              ; preds = %112
  %119 = ptrtoint %"class.cc::FilterOperation"* %116 to i64
  br label %120

120:                                              ; preds = %118, %102
  %121 = phi i64 [ %111, %102 ], [ %119, %118 ]
  store i64 %121, i64* %110, align 8
  br label %245

122:                                              ; preds = %85, %73
  %123 = bitcast %"class.cc::FilterOperations"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #11
  %124 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %5, i64 0, i32 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %5, i64 0, i32 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 24, i1 false) #11
  br i1 %84, label %131, label %127

127:                                              ; preds = %122
  %128 = bitcast %"class.cc::FilterOperation"* %6 to i8*
  %129 = bitcast %"class.cc::FilterOperation"** %125 to i64*
  %130 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %5, i64 0, i32 0
  br label %143

131:                                              ; preds = %156, %122
  %132 = icmp ult i64 %82, %83
  br i1 %78, label %138, label %133

133:                                              ; preds = %131
  br i1 %132, label %134, label %190

134:                                              ; preds = %133
  %135 = bitcast %"class.cc::FilterOperation"* %8 to i8*
  %136 = bitcast %"class.cc::FilterOperation"** %125 to i64*
  %137 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %5, i64 0, i32 0
  br label %176

138:                                              ; preds = %131
  br i1 %132, label %139, label %190

139:                                              ; preds = %138
  %140 = bitcast %"class.cc::FilterOperation"* %7 to i8*
  %141 = bitcast %"class.cc::FilterOperation"** %125 to i64*
  %142 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %5, i64 0, i32 0
  br label %162

143:                                              ; preds = %159, %127
  %144 = phi %"class.cc::FilterOperation"* [ %12, %127 ], [ %161, %159 ]
  %145 = phi %"class.cc::FilterOperation"* [ %30, %127 ], [ %160, %159 ]
  %146 = phi i64 [ 0, %127 ], [ %157, %159 ]
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %128) #11
  %147 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %145, i64 %146
  %148 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %144, i64 %146
  call void @_ZN2cc15FilterOperation5BlendEPKS0_S2_d(%"class.cc::FilterOperation"* nonnull sret %6, %"class.cc::FilterOperation"* %147, %"class.cc::FilterOperation"* %148, double %3) #11
  %149 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %125, align 8
  %150 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %126, align 8
  %151 = icmp eq %"class.cc::FilterOperation"* %149, %150
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %149, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %6) #11
  %153 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %149, i64 1
  %154 = ptrtoint %"class.cc::FilterOperation"* %153 to i64
  store i64 %154, i64* %129, align 8
  br label %156

155:                                              ; preds = %143
  call void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %130, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %6) #11
  br label %156

156:                                              ; preds = %152, %155
  call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %128) #11
  %157 = add nuw i64 %146, 1
  %158 = icmp ult i64 %157, %82
  br i1 %158, label %159, label %131

159:                                              ; preds = %156
  %160 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %29, align 8
  %161 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %11, align 8
  br label %143

162:                                              ; preds = %139, %173
  %163 = phi i64 [ %82, %139 ], [ %174, %173 ]
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %140) #11
  %164 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %29, align 8
  %165 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %164, i64 %163
  call void @_ZN2cc15FilterOperation5BlendEPKS0_S2_d(%"class.cc::FilterOperation"* nonnull sret %7, %"class.cc::FilterOperation"* %165, %"class.cc::FilterOperation"* null, double %3) #11
  %166 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %125, align 8
  %167 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %126, align 8
  %168 = icmp eq %"class.cc::FilterOperation"* %166, %167
  br i1 %168, label %172, label %169

169:                                              ; preds = %162
  call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %166, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %7) #11
  %170 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %166, i64 1
  %171 = ptrtoint %"class.cc::FilterOperation"* %170 to i64
  store i64 %171, i64* %141, align 8
  br label %173

172:                                              ; preds = %162
  call void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %142, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %7) #11
  br label %173

173:                                              ; preds = %169, %172
  call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %140) #11
  %174 = add nuw i64 %163, 1
  %175 = icmp ult i64 %174, %83
  br i1 %175, label %162, label %190

176:                                              ; preds = %134, %187
  %177 = phi i64 [ %82, %134 ], [ %188, %187 ]
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %135) #11
  %178 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %11, align 8
  %179 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %178, i64 %177
  call void @_ZN2cc15FilterOperation5BlendEPKS0_S2_d(%"class.cc::FilterOperation"* nonnull sret %8, %"class.cc::FilterOperation"* null, %"class.cc::FilterOperation"* %179, double %3) #11
  %180 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %125, align 8
  %181 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %126, align 8
  %182 = icmp eq %"class.cc::FilterOperation"* %180, %181
  br i1 %182, label %186, label %183

183:                                              ; preds = %176
  call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %180, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %8) #11
  %184 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %180, i64 1
  %185 = ptrtoint %"class.cc::FilterOperation"* %184 to i64
  store i64 %185, i64* %136, align 8
  br label %187

186:                                              ; preds = %176
  call void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %137, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %8) #11
  br label %187

187:                                              ; preds = %183, %186
  call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %135) #11
  %188 = add nuw i64 %177, 1
  %189 = icmp ult i64 %188, %83
  br i1 %189, label %176, label %190

190:                                              ; preds = %187, %173, %133, %138
  %191 = bitcast %"class.cc::FilterOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #11
  %192 = bitcast %"class.cc::FilterOperation"** %125 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.cc::FilterOperations"* %5 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = sdiv exact i64 %196, 152
  %198 = icmp eq i64 %196, 0
  %199 = inttoptr i64 %195 to %"class.cc::FilterOperation"*
  %200 = inttoptr i64 %193 to %"class.cc::FilterOperation"*
  br i1 %198, label %228, label %201

201:                                              ; preds = %190
  %202 = icmp ugt i64 %197, 121360158379668102
  br i1 %202, label %203, label %205

203:                                              ; preds = %201
  %204 = bitcast %"class.cc::FilterOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %204) #12
  unreachable

205:                                              ; preds = %201
  %206 = call i8* @_Znwm(i64 %196) #13
  %207 = bitcast i8* %206 to %"class.cc::FilterOperation"*
  %208 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %209 = bitcast %"class.cc::FilterOperation"** %208 to i8**
  store i8* %206, i8** %209, align 8
  %210 = bitcast %"class.cc::FilterOperations"* %0 to i8**
  store i8* %206, i8** %210, align 8
  %211 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %207, i64 %197
  %212 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cc::FilterOperation"* %211, %"class.cc::FilterOperation"** %212, align 8
  %213 = bitcast %"class.cc::FilterOperation"** %208 to i64*
  %214 = ptrtoint i8* %206 to i64
  %215 = icmp eq %"class.cc::FilterOperation"* %199, %200
  br i1 %215, label %225, label %216

216:                                              ; preds = %205, %216
  %217 = phi %"class.cc::FilterOperation"* [ %220, %216 ], [ %207, %205 ]
  %218 = phi %"class.cc::FilterOperation"* [ %219, %216 ], [ %199, %205 ]
  call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %217, %"class.cc::FilterOperation"* dereferenceable(152) %218) #11
  %219 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %218, i64 1
  %220 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %217, i64 1
  %221 = icmp eq %"class.cc::FilterOperation"* %219, %200
  br i1 %221, label %222, label %216

222:                                              ; preds = %216
  %223 = ptrtoint %"class.cc::FilterOperation"* %220 to i64
  %224 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %124, align 8
  br label %225

225:                                              ; preds = %222, %205
  %226 = phi %"class.cc::FilterOperation"* [ %199, %205 ], [ %224, %222 ]
  %227 = phi i64 [ %214, %205 ], [ %223, %222 ]
  store i64 %227, i64* %213, align 8
  br label %228

228:                                              ; preds = %190, %225
  %229 = phi %"class.cc::FilterOperation"* [ %199, %190 ], [ %226, %225 ]
  %230 = icmp eq %"class.cc::FilterOperation"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %228
  %232 = bitcast %"class.cc::FilterOperation"* %229 to i8*
  %233 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %125, align 8
  %234 = icmp eq %"class.cc::FilterOperation"* %233, %229
  br i1 %234, label %242, label %235

235:                                              ; preds = %231, %235
  %236 = phi %"class.cc::FilterOperation"* [ %237, %235 ], [ %233, %231 ]
  %237 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %236, i64 -1
  call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %237) #11
  %238 = icmp eq %"class.cc::FilterOperation"* %237, %229
  br i1 %238, label %239, label %235

239:                                              ; preds = %235
  %240 = bitcast %"class.cc::FilterOperations"* %5 to i8**
  %241 = load i8*, i8** %240, align 8
  br label %242

242:                                              ; preds = %239, %231
  %243 = phi i8* [ %241, %239 ], [ %232, %231 ]
  store %"class.cc::FilterOperation"* %229, %"class.cc::FilterOperation"** %125, align 8
  call void @_ZdlPv(i8* %243) #13
  br label %244

244:                                              ; preds = %228, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #11
  br label %245

245:                                              ; preds = %120, %95, %71, %44, %244
  ret void
}

declare void @_ZN2cc15FilterOperation5BlendEPKS0_S2_d(%"class.cc::FilterOperation"* sret, %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, double) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16FilterOperations11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::FilterOperations"* nocapture readonly, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.cc::FilterOperation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.cc::FilterOperations"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %12, %2
  ret void

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %16, %12 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #11
  %14 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %10, align 8
  %15 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %14, i64 %13
  tail call void @_ZNK2cc15FilterOperation11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::FilterOperation"* %15, %"class.base::trace_event::TracedValue"* %1) #11
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #11
  %16 = add nuw i64 %13, 1
  %17 = load i64, i64* %4, align 8
  %18 = load i64, i64* %6, align 8
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 152
  %21 = icmp ult i64 %16, %20
  br i1 %21, label %12, label %11
}

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZNK2cc15FilterOperation11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::FilterOperation"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16FilterOperations8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::FilterOperations"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::TracedValueJSON", align 8
  %4 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0
  %7 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"* nonnull %6, i64 0, i1 zeroext true) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event15TracedValueJSONE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  %8 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.cc::FilterOperation"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.cc::FilterOperations"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %26, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cc::FilterOperations", %"class.cc::FilterOperations"* %1, i64 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %20, %16 ]
  call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* nonnull %6) #11
  %18 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %15, align 8
  %19 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %18, i64 %17
  call void @_ZNK2cc15FilterOperation11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::FilterOperation"* %19, %"class.base::trace_event::TracedValue"* nonnull %6) #11
  call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* nonnull %6) #11
  %20 = add nuw i64 %17, 1
  %21 = load i64, i64* %9, align 8
  %22 = load i64, i64* %11, align 8
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 152
  %25 = icmp ult i64 %20, %24
  br i1 %25, label %16, label %26

26:                                               ; preds = %16, %2
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* nonnull %6) #11
  call void @_ZNK4base11trace_event15TracedValueJSON6ToJSONEv(%"class.std::__1::basic_string"* sret %0, %"class.base::trace_event::TracedValueJSON"* nonnull %3) #11
  call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZNK4base11trace_event15TracedValueJSON6ToJSONEv(%"class.std::__1::basic_string"* sret, %"class.base::trace_event::TracedValueJSON"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"*) unnamed_addr #5

declare zeroext i1 @_ZNK2cc15FilterOperationeqERKS0_(%"class.cc::FilterOperation"*, %"class.cc::FilterOperation"* dereferenceable(152)) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.maxnum.f32(float, float) #6

declare void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"*, i64, i1 zeroext) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event15TracedValueJSOND0Ev(%"class.base::trace_event::TracedValueJSON"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* %2) #11
  %3 = bitcast %"class.base::trace_event::TracedValueJSON"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

declare void @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*) unnamed_addr #4

declare zeroext i1 @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"*, %"class.cc::FilterOperation"* dereferenceable(152)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.cc::FilterOperation"* %2 to i64
  %5 = ptrtoint %"class.cc::FilterOperation"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 152
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.cc::FilterOperation"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 152
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.cc::FilterOperation"*
  br i1 %15, label %96, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.cc::FilterOperation"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 152
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 %22
  %25 = select i1 %23, %"class.cc::FilterOperation"* %24, %"class.cc::FilterOperation"* %2
  %26 = icmp eq %"class.cc::FilterOperation"* %25, %1
  br i1 %26, label %71, label %27

27:                                               ; preds = %17, %64
  %28 = phi %"class.cc::FilterOperation"* [ %69, %64 ], [ %16, %17 ]
  %29 = phi %"class.cc::FilterOperation"* [ %68, %64 ], [ %1, %17 ]
  %30 = bitcast %"class.cc::FilterOperation"* %28 to i8*
  %31 = bitcast %"class.cc::FilterOperation"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #11
  %32 = icmp eq %"class.cc::FilterOperation"* %28, %29
  br i1 %32, label %64, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %29, i64 0, i32 5, i32 0
  %35 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %34, align 8
  %36 = icmp eq %"class.cc::PaintFilter"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  br label %40

40:                                               ; preds = %37, %33
  %41 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %28, i64 0, i32 5, i32 0
  %42 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %41, align 8
  store %"class.cc::PaintFilter"* %35, %"class.cc::PaintFilter"** %41, align 8
  %43 = icmp eq %"class.cc::PaintFilter"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.cc::PaintFilter"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.cc::PaintFilter"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  tail call void %53(%class.SkRefCntBase* nonnull %49) #11
  br label %54

54:                                               ; preds = %48, %44, %40
  %55 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %28, i64 0, i32 6
  %56 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %29, i64 0, i32 6
  %57 = bitcast [20 x float]* %55 to i8*
  %58 = bitcast [20 x float]* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 84, i1 false) #11
  %59 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %28, i64 0, i32 9
  %60 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %29, i64 0, i32 9, i32 0, i32 0
  %61 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %60, align 8
  %62 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %29, i64 0, i32 9, i32 0, i32 1
  %63 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %62, align 8
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.2"* %59, %"class.gfx::Rect"* %61, %"class.gfx::Rect"* %63) #11
  br label %64

64:                                               ; preds = %54, %27
  %65 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %29, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %28, i64 0, i32 10
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %29, i64 1
  %69 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %28, i64 1
  %70 = icmp eq %"class.cc::FilterOperation"* %68, %25
  br i1 %70, label %71, label %27

71:                                               ; preds = %64, %17
  %72 = phi %"class.cc::FilterOperation"* [ %16, %17 ], [ %69, %64 ]
  br i1 %23, label %73, label %88

73:                                               ; preds = %71
  %74 = load i64, i64* %19, align 8
  %75 = icmp eq %"class.cc::FilterOperation"* %25, %2
  br i1 %75, label %86, label %76

76:                                               ; preds = %73
  %77 = inttoptr i64 %74 to %"class.cc::FilterOperation"*
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi %"class.cc::FilterOperation"* [ %82, %78 ], [ %77, %76 ]
  %80 = phi %"class.cc::FilterOperation"* [ %81, %78 ], [ %24, %76 ]
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %79, %"class.cc::FilterOperation"* dereferenceable(152) %80) #11
  %81 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %80, i64 1
  %82 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %79, i64 1
  %83 = icmp eq %"class.cc::FilterOperation"* %81, %2
  br i1 %83, label %84, label %78

84:                                               ; preds = %78
  %85 = ptrtoint %"class.cc::FilterOperation"* %82 to i64
  br label %86

86:                                               ; preds = %73, %84
  %87 = phi i64 [ %74, %73 ], [ %85, %84 ]
  store i64 %87, i64* %19, align 8
  br label %147

88:                                               ; preds = %71
  %89 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %18, align 8
  %90 = icmp eq %"class.cc::FilterOperation"* %89, %72
  br i1 %90, label %95, label %91

91:                                               ; preds = %88, %91
  %92 = phi %"class.cc::FilterOperation"* [ %93, %91 ], [ %89, %88 ]
  %93 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %92, i64 -1
  tail call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %93) #11
  %94 = icmp eq %"class.cc::FilterOperation"* %93, %72
  br i1 %94, label %95, label %91

95:                                               ; preds = %91, %88
  store %"class.cc::FilterOperation"* %72, %"class.cc::FilterOperation"** %18, align 8
  br label %147

96:                                               ; preds = %3
  %97 = icmp eq i64 %12, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %96
  %99 = inttoptr i64 %12 to i8*
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %101 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %100, align 8
  %102 = icmp eq %"class.cc::FilterOperation"* %101, %16
  br i1 %102, label %110, label %103

103:                                              ; preds = %98, %103
  %104 = phi %"class.cc::FilterOperation"* [ %105, %103 ], [ %101, %98 ]
  %105 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %104, i64 -1
  tail call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %105) #11
  %106 = icmp eq %"class.cc::FilterOperation"* %105, %16
  br i1 %106, label %107, label %103

107:                                              ; preds = %103
  %108 = bitcast %"class.std::__1::vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %98
  %111 = phi i8* [ %109, %107 ], [ %99, %98 ]
  store %"class.cc::FilterOperation"* %16, %"class.cc::FilterOperation"** %100, align 8
  tail call void @_ZdlPv(i8* %111) #13
  %112 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #11
  br label %113

113:                                              ; preds = %96, %110
  %114 = phi i64 [ %10, %96 ], [ 0, %110 ]
  %115 = icmp ugt i64 %7, 121360158379668102
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #12
  unreachable

118:                                              ; preds = %113
  %119 = sdiv exact i64 %114, 152
  %120 = icmp ult i64 %119, 60680079189834051
  br i1 %120, label %121, label %125

121:                                              ; preds = %118
  %122 = shl nsw i64 %119, 1
  %123 = icmp ult i64 %122, %7
  %124 = select i1 %123, i64 %7, i64 %122
  br label %125

125:                                              ; preds = %121, %118
  %126 = phi i64 [ %124, %121 ], [ 121360158379668102, %118 ]
  %127 = mul i64 %126, 152
  %128 = tail call i8* @_Znwm(i64 %127) #13
  %129 = bitcast i8* %128 to %"class.cc::FilterOperation"*
  %130 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %131 = bitcast %"class.cc::FilterOperation"** %130 to i8**
  store i8* %128, i8** %131, align 8
  %132 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %128, i8** %132, align 8
  %133 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %129, i64 %126
  store %"class.cc::FilterOperation"* %133, %"class.cc::FilterOperation"** %8, align 8
  %134 = bitcast %"class.cc::FilterOperation"** %130 to i64*
  %135 = ptrtoint i8* %128 to i64
  %136 = icmp eq %"class.cc::FilterOperation"* %1, %2
  br i1 %136, label %145, label %137

137:                                              ; preds = %125, %137
  %138 = phi %"class.cc::FilterOperation"* [ %141, %137 ], [ %129, %125 ]
  %139 = phi %"class.cc::FilterOperation"* [ %140, %137 ], [ %1, %125 ]
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %138, %"class.cc::FilterOperation"* dereferenceable(152) %139) #11
  %140 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %139, i64 1
  %141 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %138, i64 1
  %142 = icmp eq %"class.cc::FilterOperation"* %140, %2
  br i1 %142, label %143, label %137

143:                                              ; preds = %137
  %144 = ptrtoint %"class.cc::FilterOperation"* %141 to i64
  br label %145

145:                                              ; preds = %125, %143
  %146 = phi i64 [ %135, %125 ], [ %144, %143 ]
  store i64 %146, i64* %134, align 8
  br label %147

147:                                              ; preds = %86, %95, %145
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.2"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Rect"* %2 to i64
  %5 = ptrtoint %"class.gfx::Rect"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Rect"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Rect"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Rect"* %24, %"class.gfx::Rect"* %2
  %26 = ptrtoint %"class.gfx::Rect"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Rect"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.gfx::Rect"*
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Rect"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 %28
  store %"class.gfx::Rect"* %48, %"class.gfx::Rect"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Rect"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.2"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  %76 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Rect"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.2"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %72
  store %"class.gfx::Rect"* %79, %"class.gfx::Rect"** %8, align 8
  %80 = bitcast %"class.gfx::Rect"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Rect"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc15FilterOperationENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.cc::FilterOperation"* dereferenceable(152)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.cc::FilterOperation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 152
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 121360158379668102
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.cc::FilterOperation"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 152
  %20 = icmp ult i64 %19, 60680079189834051
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 121360158379668102, %14 ]
  %28 = mul i64 %27, 152
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.cc::FilterOperation"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.cc::FilterOperation"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %33, i64 %9
  %35 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %33, i64 %32
  %36 = ptrtoint %"class.cc::FilterOperation"* %35 to i64
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %34, %"class.cc::FilterOperation"* dereferenceable(152) %1) #11
  %37 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %34, i64 1
  %38 = ptrtoint %"class.cc::FilterOperation"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %39, align 8
  %41 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %3, align 8
  %42 = icmp eq %"class.cc::FilterOperation"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.cc::FilterOperation"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.cc::FilterOperation"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.cc::FilterOperation"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %46, i64 -1
  %49 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %47, i64 -1
  tail call void @_ZN2cc15FilterOperationC1ERKS0_(%"class.cc::FilterOperation"* %48, %"class.cc::FilterOperation"* dereferenceable(152) %49) #11
  %50 = icmp eq %"class.cc::FilterOperation"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.cc::FilterOperation"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.cc::FilterOperation"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.cc::FilterOperation"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.cc::FilterOperation"*
  %60 = icmp eq %"class.cc::FilterOperation"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.cc::FilterOperation"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %62, i64 -1
  tail call void @_ZN2cc15FilterOperationD1Ev(%"class.cc::FilterOperation"* %63) #11
  %64 = icmp eq %"class.cc::FilterOperation"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare { i64, i64 } @_ZNK2cc15FilterOperation7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperation"*, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4

declare { i64, i64 } @_ZNK2cc15FilterOperation14MapRectReverseERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperation"*, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.maxnum.f64(double, double) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
