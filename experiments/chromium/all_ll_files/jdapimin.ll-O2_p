; ModuleID = '../../third_party/libjpeg_turbo/jdapimin.c'
source_filename = "../../third_party/libjpeg_turbo/jdapimin.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32, i32, [10 x i32], [10 x i32], i32, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct*, i32, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %4, align 8
  %5 = icmp eq i32 %1, 62
  br i1 %5, label %18, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 12, i32* %9, align 8
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 62, i32* %11, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 1
  store i32 %1, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #3
  br label %18

18:                                               ; preds = %3, %6
  %19 = icmp eq i64 %2, 632
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  br label %35

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 5
  store i32 21, i32* %25, align 8
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 0
  store i32 632, i32* %27, align 4
  %28 = trunc i64 %2 to i32
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 1
  store i32 %28, i32* %30, align 4
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 0
  %33 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %32, align 8
  %34 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %33(%struct.jpeg_common_struct* %34) #3
  br label %35

35:                                               ; preds = %20, %22
  %36 = phi %struct.jpeg_common_struct* [ %21, %20 ], [ %34, %22 ]
  %37 = bitcast %struct.jpeg_decompress_struct* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 3
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %43 = bitcast %struct.jpeg_memory_mgr** %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 624, i1 false)
  store i64 %38, i64* %37, align 8
  store i64 %41, i64* %40, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 4
  store i32 1, i32* %44, align 8
  tail call void @jinit_memory_mgr(%struct.jpeg_common_struct* %36) #3
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  store %struct.jpeg_progress_mgr* null, %struct.jpeg_progress_mgr** %45, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  store %struct.jpeg_source_mgr* null, %struct.jpeg_source_mgr** %46, align 8
  %47 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 40, i64 0
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 60
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %48, align 8
  %49 = bitcast %struct.JQUANT_TBL** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 96, i1 false)
  tail call void @jinit_marker_reader(%struct.jpeg_decompress_struct* %0) #3
  tail call void @jinit_input_controller(%struct.jpeg_decompress_struct* %0) #3
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  store i32 200, i32* %50, align 4
  %51 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %4, align 8
  %52 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %51, i64 0, i32 0
  %53 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %52, align 8
  %54 = tail call i8* %53(%struct.jpeg_common_struct* %36, i32 0, i64 144) #3
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %56 = bitcast %struct.jpeg_decomp_master** %55 to i8**
  store i8* %54, i8** %56, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 144, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @jinit_memory_mgr(%struct.jpeg_common_struct*) local_unnamed_addr #2

declare void @jinit_marker_reader(%struct.jpeg_decompress_struct*) local_unnamed_addr #2

declare void @jinit_input_controller(%struct.jpeg_decompress_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void @jpeg_destroy(%struct.jpeg_common_struct* %2) #3
  ret void
}

declare void @jpeg_destroy(%struct.jpeg_common_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_abort_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void @jpeg_abort(%struct.jpeg_common_struct* %2) #3
  ret void
}

declare void @jpeg_abort(%struct.jpeg_common_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_read_header(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -2
  %6 = icmp eq i32 %5, 200
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8
  %11 = load i32, i32* %3, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0
  store i32 %11, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #3
  br label %18

18:                                               ; preds = %2, %7
  %19 = tail call i32 @jpeg_consume_input(%struct.jpeg_decompress_struct* %0)
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %35

21:                                               ; preds = %18
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  br label %33

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 5
  store i32 51, i32* %28, align 8
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  %32 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %31(%struct.jpeg_common_struct* %32) #3
  br label %33

33:                                               ; preds = %23, %25
  %34 = phi %struct.jpeg_common_struct* [ %24, %23 ], [ %32, %25 ]
  tail call void @jpeg_abort(%struct.jpeg_common_struct* %34) #3
  br label %35

35:                                               ; preds = %18, %33
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_consume_input(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %123 [
    i32 200, label %4
    i32 201, label %13
    i32 202, label %134
    i32 203, label %117
    i32 204, label %117
    i32 205, label %117
    i32 206, label %117
    i32 207, label %117
    i32 208, label %117
    i32 210, label %117
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %6 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %6, i64 0, i32 1
  %8 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %7, align 8
  tail call void %8(%struct.jpeg_decompress_struct* %0) #3
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %10 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %10, i64 0, i32 2
  %12 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %11, align 8
  tail call void %12(%struct.jpeg_decompress_struct* %0) #3
  store i32 201, i32* %2, align 4
  br label %13

13:                                               ; preds = %1, %4
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %15 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %15, i64 0, i32 0
  %17 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %16, align 8
  %18 = tail call i32 %17(%struct.jpeg_decompress_struct* %0) #3
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %134

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %99 [
    i32 1, label %100
    i32 3, label %23
    i32 4, label %79
  ]

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 51
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %100

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  %33 = load i8, i8* %32, align 4
  switch i8 %33, label %35 [
    i8 0, label %100
    i8 1, label %34
  ]

34:                                               ; preds = %31
  br label %100

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 5
  store i32 114, i32* %38, align 8
  %39 = load i8, i8* %32, align 4
  %40 = zext i8 %39 to i32
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 6, i32 0, i64 0
  store i32 %40, i32* %42, align 4
  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %44 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 1
  %45 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %44, align 8
  %46 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %45(%struct.jpeg_common_struct* %46, i32 -1) #3
  br label %100

47:                                               ; preds = %27
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %49 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 1, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 2, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %51, 1
  %57 = icmp eq i32 %53, 2
  %58 = and i1 %56, %57
  %59 = icmp eq i32 %55, 3
  %60 = and i1 %58, %59
  br i1 %60, label %100, label %61

61:                                               ; preds = %47
  %62 = icmp eq i32 %51, 82
  %63 = icmp eq i32 %53, 71
  %64 = and i1 %62, %63
  %65 = icmp eq i32 %55, 66
  %66 = and i1 %64, %65
  br i1 %66, label %100, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %68, align 8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 6, i32 0, i64 0
  store i32 %51, i32* %70, align 4
  %71 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 6, i32 0, i64 1
  store i32 %53, i32* %71, align 4
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 6, i32 0, i64 2
  store i32 %55, i32* %72, align 4
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %68, align 8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i64 0, i32 5
  store i32 111, i32* %74, align 8
  %75 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %68, align 8
  %76 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %75, i64 0, i32 1
  %77 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %76, align 8
  %78 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %77(%struct.jpeg_common_struct* %78, i32 1) #3
  br label %100

79:                                               ; preds = %20
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  %85 = load i8, i8* %84, align 4
  switch i8 %85, label %87 [
    i8 0, label %100
    i8 2, label %86
  ]

86:                                               ; preds = %83
  br label %100

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %88, align 8
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 5
  store i32 114, i32* %90, align 8
  %91 = load i8, i8* %84, align 4
  %92 = zext i8 %91 to i32
  %93 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %88, align 8
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %93, i64 0, i32 6, i32 0, i64 0
  store i32 %92, i32* %94, align 4
  %95 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %88, align 8
  %96 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i64 0, i32 1
  %97 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %96, align 8
  %98 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %97(%struct.jpeg_common_struct* %98, i32 -1) #3
  br label %100

99:                                               ; preds = %20
  br label %100

100:                                              ; preds = %86, %87, %83, %79, %34, %35, %67, %23, %31, %47, %61, %20, %99
  %101 = phi i32 [ 0, %99 ], [ %22, %20 ], [ 3, %67 ], [ 3, %35 ], [ 3, %34 ], [ 3, %23 ], [ 2, %31 ], [ 3, %47 ], [ 2, %61 ], [ 5, %87 ], [ 5, %86 ], [ 4, %83 ], [ 4, %79 ]
  %102 = phi i32 [ 0, %99 ], [ %22, %20 ], [ 2, %67 ], [ 2, %35 ], [ 2, %34 ], [ 2, %23 ], [ 2, %31 ], [ 2, %47 ], [ 2, %61 ], [ 4, %87 ], [ 4, %86 ], [ 4, %83 ], [ 4, %79 ]
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 10
  store i32 %101, i32* %103, align 4
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 11
  store i32 %102, i32* %104, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 12
  store i32 1, i32* %105, align 4
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 13
  store i32 1, i32* %106, align 8
  %107 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 14
  store double 1.000000e+00, double* %107, align 8
  %108 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 15
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %109, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 19
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 2, i32 1>, <4 x i32>* %111, align 8
  %112 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 23
  store i32 256, i32* %112, align 8
  %113 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 33
  store i8** null, i8*** %113, align 8
  %114 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 24
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 25
  store i32 0, i32* %115, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 26
  store i32 0, i32* %116, align 4
  store i32 202, i32* %2, align 4
  br label %134

117:                                              ; preds = %1, %1, %1, %1, %1, %1, %1
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %119 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %118, align 8
  %120 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %119, i64 0, i32 0
  %121 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %120, align 8
  %122 = tail call i32 %121(%struct.jpeg_decompress_struct* %0) #3
  br label %134

123:                                              ; preds = %1
  %124 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %125 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %124, align 8
  %126 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %125, i64 0, i32 5
  store i32 20, i32* %126, align 8
  %127 = load i32, i32* %2, align 4
  %128 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %124, align 8
  %129 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %128, i64 0, i32 6, i32 0, i64 0
  store i32 %127, i32* %129, align 4
  %130 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %124, align 8
  %131 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %130, i64 0, i32 0
  %132 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %131, align 8
  %133 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %132(%struct.jpeg_common_struct* %133) #3
  br label %134

134:                                              ; preds = %1, %13, %100, %123, %117
  %135 = phi i32 [ 0, %123 ], [ %122, %117 ], [ 1, %100 ], [ %18, %13 ], [ 1, %1 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_input_complete(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -200
  %5 = icmp ugt i32 %4, 10
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 20, i32* %9, align 8
  %10 = load i32, i32* %2, align 4
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 %10, i32* %12, align 4
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 0
  %15 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %14, align 8
  %16 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %15(%struct.jpeg_common_struct* %16) #3
  br label %17

17:                                               ; preds = %1, %6
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %19 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_has_multiple_scans(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -202
  %5 = icmp ugt i32 %4, 8
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 20, i32* %9, align 8
  %10 = load i32, i32* %2, align 4
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 %10, i32* %12, align 4
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 0
  %15 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %14, align 8
  %16 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %15(%struct.jpeg_common_struct* %16) #3
  br label %17

17:                                               ; preds = %1, %6
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %19 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %19, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_finish_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -205
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %29

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 28
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i64 0, i32 5
  store i32 67, i32* %19, align 8
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 0
  %22 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %21, align 8
  %23 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %22(%struct.jpeg_common_struct* %23) #3
  br label %24

24:                                               ; preds = %16, %10
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %26 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %26, i64 0, i32 1
  %28 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %27, align 8
  tail call void %28(%struct.jpeg_decompress_struct* %0) #3
  store i32 210, i32* %2, align 4
  br label %42

29:                                               ; preds = %1, %6
  switch i32 %3, label %31 [
    i32 207, label %30
    i32 210, label %42
  ]

30:                                               ; preds = %29
  store i32 210, i32* %2, align 4
  br label %42

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 5
  store i32 20, i32* %34, align 8
  %35 = load i32, i32* %2, align 4
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 6, i32 0, i64 0
  store i32 %35, i32* %37, align 4
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i64 0, i32 0
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %39, align 8
  %41 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %40(%struct.jpeg_common_struct* %41) #3
  br label %42

42:                                               ; preds = %29, %30, %31, %24
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  br label %44

44:                                               ; preds = %49, %42
  %45 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %43, align 8
  %46 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %45, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %45, i64 0, i32 0
  %51 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %50, align 8
  %52 = tail call i32 %51(%struct.jpeg_decompress_struct* %0) #3
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %44

54:                                               ; preds = %44
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %56 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %56, i64 0, i32 6
  %58 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %57, align 8
  tail call void %58(%struct.jpeg_decompress_struct* %0) #3
  %59 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void @jpeg_abort(%struct.jpeg_common_struct* %59) #3
  br label %60

60:                                               ; preds = %49, %54
  %61 = phi i32 [ 1, %54 ], [ 0, %49 ]
  ret i32 %61
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
