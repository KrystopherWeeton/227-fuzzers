; ModuleID = '../../net/third_party/quiche/src/spdy/core/spdy_header_block.cc'
source_filename = "../../net/third_party/quiche/src/spdy/core/spdy_header_block.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.spdy::Http2HeaderBlock::HeaderValue" = type { %"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.4", %"struct.std::__1::pair", i64, i64 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.6" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.absl::string_view"* }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.1" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.spdy::Http2HeaderBlock::ValueProxy" = type <{ %"class.spdy::Http2HeaderBlock"*, %"class.std::__1::__list_iterator", %"class.absl::string_view", i64*, i8, [7 x i8] }>
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair.11"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair.11" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.24" = type { %"class.absl::string_view", %"class.spdy::Http2HeaderBlock::HeaderValue" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.24" }
%"struct.std::__1::pair.51" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE7emplaceIJNSt3__14pairIS2_S5_EEEEENSB_INSA_15__list_iteratorISC_PvEEbEEDpOT_ = comdat any

$_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE5eraseENSt3__115__list_iteratorINS9_4pairIS2_S5_EEPvEE = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_ = comdat any

$_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE22find_or_prepare_insertIS3_EENS6_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE5clearEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@.str.2 = private unnamed_addr constant [4 x i8] c"\0A{\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@_ZN4spdy12_GLOBAL__N_110kCookieKeyE = internal constant [7 x i8] c"cookie\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@_ZN4spdy12_GLOBAL__N_114kNullSeparatorE = internal constant i8 0, align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@.str.10 = private unnamed_addr constant [65 x i8] c"../../net/third_party/quiche/src/common/quiche_linked_hash_map.h\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"found->second == position\00", align 1
@.str.12 = private unnamed_addr constant [68 x i8] c"Inconsistent iterator for map and list, or the iterator is invalid.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4spdy16Http2HeaderBlock11HeaderValueC1EPNS_17SpdyHeaderStorageEN4absl11string_viewES5_ = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::HeaderValue"*, %"class.spdy::SpdyHeaderStorage"*, i8*, i64, i8*, i64), void (%"class.spdy::Http2HeaderBlock::HeaderValue"*, %"class.spdy::SpdyHeaderStorage"*, i8*, i64, i8*, i64)* @_ZN4spdy16Http2HeaderBlock11HeaderValueC2EPNS_17SpdyHeaderStorageEN4absl11string_viewES5_
@_ZN4spdy16Http2HeaderBlock11HeaderValueC1EOS1_ = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::HeaderValue"*, %"class.spdy::Http2HeaderBlock::HeaderValue"*), void (%"class.spdy::Http2HeaderBlock::HeaderValue"*, %"class.spdy::Http2HeaderBlock::HeaderValue"*)* @_ZN4spdy16Http2HeaderBlock11HeaderValueC2EOS1_
@_ZN4spdy16Http2HeaderBlock11HeaderValueD1Ev = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::HeaderValue"*), void (%"class.spdy::Http2HeaderBlock::HeaderValue"*)* @_ZN4spdy16Http2HeaderBlock11HeaderValueD2Ev
@_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base"*), void (%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base"*)* @_ZN4spdy16Http2HeaderBlock8iteratorC2ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE
@_ZN4spdy16Http2HeaderBlock8iteratorC1ERKS1_ = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::iterator"*, %"class.spdy::Http2HeaderBlock::iterator"*), void (%"class.spdy::Http2HeaderBlock::iterator"*, %"class.spdy::Http2HeaderBlock::iterator"*)* @_ZN4spdy16Http2HeaderBlock8iteratorC2ERKS1_
@_ZN4spdy16Http2HeaderBlock8iteratorD1Ev = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::iterator"*), void (%"class.spdy::Http2HeaderBlock::iterator"*)* @_ZN4spdy16Http2HeaderBlock8iteratorD2Ev
@_ZN4spdy16Http2HeaderBlock10ValueProxyC1EPS0_NSt3__115__list_iteratorINS3_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEES7_Pm = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::ValueProxy"*, %"class.spdy::Http2HeaderBlock"*, %"struct.std::__1::__list_node_base"*, i8*, i64, i64*), void (%"class.spdy::Http2HeaderBlock::ValueProxy"*, %"class.spdy::Http2HeaderBlock"*, %"struct.std::__1::__list_node_base"*, i8*, i64, i64*)* @_ZN4spdy16Http2HeaderBlock10ValueProxyC2EPS0_NSt3__115__list_iteratorINS3_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEES7_Pm
@_ZN4spdy16Http2HeaderBlock10ValueProxyC1EOS1_ = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::ValueProxy"*, %"class.spdy::Http2HeaderBlock::ValueProxy"*), void (%"class.spdy::Http2HeaderBlock::ValueProxy"*, %"class.spdy::Http2HeaderBlock::ValueProxy"*)* @_ZN4spdy16Http2HeaderBlock10ValueProxyC2EOS1_
@_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock::ValueProxy"*), void (%"class.spdy::Http2HeaderBlock::ValueProxy"*)* @_ZN4spdy16Http2HeaderBlock10ValueProxyD2Ev
@_ZN4spdy16Http2HeaderBlockC1Ev = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock"*), void (%"class.spdy::Http2HeaderBlock"*)* @_ZN4spdy16Http2HeaderBlockC2Ev
@_ZN4spdy16Http2HeaderBlockC1EOS0_ = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"*), void (%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"*)* @_ZN4spdy16Http2HeaderBlockC2EOS0_
@_ZN4spdy16Http2HeaderBlockD1Ev = hidden unnamed_addr alias void (%"class.spdy::Http2HeaderBlock"*), void (%"class.spdy::Http2HeaderBlock"*)* @_ZN4spdy16Http2HeaderBlockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock11HeaderValueC2EPNS_17SpdyHeaderStorageEN4absl11string_viewES5_(%"class.spdy::Http2HeaderBlock::HeaderValue"* nocapture, %"class.spdy::SpdyHeaderStorage"*, i8*, i64, i8*, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 0
  store %"class.spdy::SpdyHeaderStorage"* %1, %"class.spdy::SpdyHeaderStorage"** %7, align 8
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1
  %9 = tail call i8* @_Znwm(i64 16) #18
  %10 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.4"* %8 to i8**
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 16
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.absl::string_view"** %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = bitcast %"class.absl::string_view"** %10 to i64*
  %16 = bitcast i8* %9 to i8**
  store i8* %4, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %5, i64* %18, align 8
  %19 = ptrtoint i8* %12 to i64
  store i64 %19, i64* %15, align 8
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 0, i32 0
  store i8* %2, i8** %20, align 8
  %21 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %3, i64* %21, align 8
  %22 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 1
  %23 = bitcast %"class.absl::string_view"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 3
  store i64 %5, i64* %24, align 8
  %25 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 4
  %26 = icmp eq i64 %3, 6
  br i1 %26, label %27, label %30

27:                                               ; preds = %6
  %28 = tail call i32 @bcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27, %6
  br label %31

31:                                               ; preds = %27, %30
  %32 = phi i64 [ 1, %30 ], [ 2, %27 ]
  store i64 %32, i64* %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock11HeaderValueC2EOS1_(%"class.spdy::Http2HeaderBlock::HeaderValue"* nocapture, %"class.spdy::Http2HeaderBlock::HeaderValue"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector.4"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = bitcast %"class.std::__1::vector.4"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.4"* %6 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.absl::string_view"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.absl::string_view"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.absl::string_view"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.absl::string_view"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector.4"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #14
  %23 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 2
  %25 = bitcast %"struct.std::__1::pair"* %23 to i8*
  %26 = bitcast %"struct.std::__1::pair"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false)
  %27 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 4
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.spdy::Http2HeaderBlock::HeaderValue"* @_ZN4spdy16Http2HeaderBlock11HeaderValueaSEOS1_(%"class.spdy::Http2HeaderBlock::HeaderValue"* returned, %"class.spdy::Http2HeaderBlock::HeaderValue"* nocapture dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.absl::string_view"*, %"class.absl::string_view"** %8, align 8
  %10 = icmp eq %"class.absl::string_view"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = ptrtoint %"class.absl::string_view"* %9 to i64
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.absl::string_view"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %"class.absl::string_view"* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #18
  %16 = bitcast %"class.std::__1::vector.4"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #14
  br label %17

17:                                               ; preds = %2, %11
  %18 = bitcast %"class.std::__1::vector.4"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.4"* %7 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.absl::string_view"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.absl::string_view"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.absl::string_view"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.absl::string_view"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.std::__1::vector.4"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #14
  %32 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 2
  %33 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2
  %34 = bitcast %"struct.std::__1::pair"* %33 to i8*
  %35 = bitcast %"struct.std::__1::pair"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false) #14
  %36 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 2, i32 1
  %37 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 1
  %38 = bitcast %"class.absl::string_view"* %37 to i8*
  %39 = bitcast %"class.absl::string_view"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #14
  %40 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 3
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %1, i64 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 4
  store i64 %44, i64* %45, align 8
  ret %"class.spdy::Http2HeaderBlock::HeaderValue"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4spdy16Http2HeaderBlock11HeaderValue11set_storageEPNS_17SpdyHeaderStorageE(%"class.spdy::Http2HeaderBlock::HeaderValue"* nocapture, %"class.spdy::SpdyHeaderStorage"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 0
  store %"class.spdy::SpdyHeaderStorage"* %1, %"class.spdy::SpdyHeaderStorage"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock11HeaderValueD2Ev(%"class.spdy::Http2HeaderBlock::HeaderValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.absl::string_view"*, %"class.absl::string_view"** %2, align 8
  %4 = icmp eq %"class.absl::string_view"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.absl::string_view"* %3 to i64
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.absl::string_view"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.absl::string_view"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [1 x %"class.absl::string_view"], align 8
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.absl::string_view"*, %"class.absl::string_view"** %4, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %8 = icmp eq %"class.absl::string_view"* %5, %7
  br i1 %8, label %45, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %"class.absl::string_view"* %5 to i64
  %11 = ptrtoint %"class.absl::string_view"* %7 to i64
  %12 = sub i64 %11, %10
  %13 = ashr exact i64 %12, 4
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %15, label %39

15:                                               ; preds = %9
  %16 = bitcast [1 x %"class.absl::string_view"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %2, i64 0, i64 0
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 0
  %19 = load %"class.spdy::SpdyHeaderStorage"*, %"class.spdy::SpdyHeaderStorage"** %18, align 8
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 6
  br i1 %22, label %23, label %28

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @bcmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %23, %15
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi i8* [ @_ZN4spdy12_GLOBAL__N_114kNullSeparatorE, %28 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %23 ]
  %31 = phi i64 [ 1, %28 ], [ 2, %23 ]
  %32 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage14WriteFragmentsERKNSt3__16vectorIN4absl11string_viewENS1_9allocatorIS4_EEEES4_(%"class.spdy::SpdyHeaderStorage"* %19, %"class.std::__1::vector.4"* dereferenceable(24) %3, i8* nonnull %30, i64 %31) #14
  %33 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %2, i64 0, i64 0, i32 0
  %34 = extractvalue { i8*, i64 } %32, 0
  store i8* %34, i8** %33, align 8
  %35 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %2, i64 0, i64 0, i32 1
  %36 = extractvalue { i8*, i64 } %32, 1
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %2, i64 0, i64 1
  call void @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.4"* %3, %"class.absl::string_view"* nonnull %17, %"class.absl::string_view"* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  %38 = load %"class.absl::string_view"*, %"class.absl::string_view"** %4, align 8
  br label %39

39:                                               ; preds = %29, %9
  %40 = phi %"class.absl::string_view"* [ %38, %29 ], [ %5, %9 ]
  %41 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %40, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  br label %45

45:                                               ; preds = %1, %39
  %46 = phi i8* [ %42, %39 ], [ null, %1 ]
  %47 = phi i64 [ %44, %39 ], [ 0, %1 ]
  %48 = insertvalue { i8*, i64 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i64 } %48, i64 %47, 1
  ret { i8*, i64 } %49
}

declare { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage14WriteFragmentsERKNSt3__16vectorIN4absl11string_viewENS1_9allocatorIS4_EEEES4_(%"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.4"* dereferenceable(24), i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock11HeaderValue6AppendEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::HeaderValue"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, %8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load %"class.absl::string_view"*, %"class.absl::string_view"** %11, align 8
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.absl::string_view"*, %"class.absl::string_view"** %13, align 8
  %15 = icmp eq %"class.absl::string_view"* %12, %14
  %16 = ptrtoint %"class.absl::string_view"* %14 to i64
  br i1 %15, label %23, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %12, i64 0, i32 0
  store i8* %1, i8** %18, align 8
  %19 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %12, i64 0, i32 1
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %12, i64 1
  %21 = ptrtoint %"class.absl::string_view"* %20 to i64
  %22 = bitcast %"class.absl::string_view"** %11 to i64*
  store i64 %21, i64* %22, align 8
  br label %81

23:                                               ; preds = %3
  %24 = ptrtoint %"class.absl::string_view"* %12 to i64
  %25 = bitcast %"class.absl::string_view"** %11 to i64*
  %26 = bitcast %"class.std::__1::vector.4"* %10 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 4
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 1152921504606846975
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.4"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #19
  unreachable

34:                                               ; preds = %23
  %35 = bitcast %"class.absl::string_view"** %13 to i64*
  %36 = sub i64 %16, %27
  %37 = ashr exact i64 %36, 4
  %38 = icmp ult i64 %37, 576460752303423487
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 3
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 1152921504606846975
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #19
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 1152921504606846975, %34 ]
  %49 = shl i64 %48, 4
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"class.absl::string_view"*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi %"class.absl::string_view"* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %29
  %56 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %53
  %57 = ptrtoint %"class.absl::string_view"* %56 to i64
  %58 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %55, i64 0, i32 0
  store i8* %1, i8** %58, align 8
  %59 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %29, i32 1
  store i64 %2, i64* %59, align 8
  %60 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %55, i64 1
  %61 = ptrtoint %"class.absl::string_view"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %10, i64 0, i32 0, i32 0
  %63 = load %"class.absl::string_view"*, %"class.absl::string_view"** %62, align 8
  %64 = load i64, i64* %25, align 8
  %65 = ptrtoint %"class.absl::string_view"* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 4
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %55, i64 %68
  %70 = ptrtoint %"class.absl::string_view"* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %52
  %73 = bitcast %"class.absl::string_view"* %69 to i8*
  %74 = bitcast %"class.absl::string_view"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #14
  %75 = load %"class.absl::string_view"*, %"class.absl::string_view"** %62, align 8
  br label %76

76:                                               ; preds = %72, %52
  %77 = phi %"class.absl::string_view"* [ %63, %52 ], [ %75, %72 ]
  store i64 %70, i64* %26, align 8
  store i64 %61, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %78 = icmp eq %"class.absl::string_view"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.absl::string_view"* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %17, %76, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.std::__1::pair"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %0)
  %3 = extractvalue { i8*, i64 } %2, 0
  %4 = extractvalue { i8*, i64 } %2, 1
  %5 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 1, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2, i32 1, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::HeaderValue", %"class.spdy::Http2HeaderBlock::HeaderValue"* %0, i64 0, i32 2
  ret %"struct.std::__1::pair"* %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4spdy16Http2HeaderBlock8iteratorC2ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nocapture, %"struct.std::__1::__list_node_base"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %1, %"struct.std::__1::__list_node_base"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock8iteratorC2ERKS1_(%"class.spdy::Http2HeaderBlock::iterator"* nocapture, %"class.spdy::Http2HeaderBlock::iterator"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %1 to i64*
  %4 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock8iteratorD2Ev(%"class.spdy::Http2HeaderBlock::iterator"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4spdy16Http2HeaderBlock10ValueProxyC2EPS0_NSt3__115__list_iteratorINS3_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEES7_Pm(%"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture, %"class.spdy::Http2HeaderBlock"*, %"struct.std::__1::__list_node_base"*, i8*, i64, i64*) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 0
  store %"class.spdy::Http2HeaderBlock"* %1, %"class.spdy::Http2HeaderBlock"** %7, align 8
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1, i32 0
  store %"struct.std::__1::__list_node_base"* %2, %"struct.std::__1::__list_node_base"** %8, align 8
  %9 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 0
  store i8* %3, i8** %9, align 8
  %10 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 1
  store i64 %4, i64* %10, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 3
  store i64* %5, i64** %11, align 8
  %12 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 4
  store i8 1, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock10ValueProxyC2EOS1_(%"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture, %"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::__list_iterator"* %7 to i64*
  %9 = bitcast %"class.std::__1::__list_iterator"* %6 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 2
  %13 = bitcast %"class.absl::string_view"* %11 to i8*
  %14 = bitcast %"class.absl::string_view"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 3
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i64** %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 4
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 4
  store i8 0, i8* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEOS1_(%"class.spdy::Http2HeaderBlock::ValueProxy"* returned, %"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::__list_iterator"* %6 to i64*
  %9 = bitcast %"class.std::__1::__list_iterator"* %7 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2
  %13 = bitcast %"class.absl::string_view"* %12 to i8*
  %14 = bitcast %"class.absl::string_view"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 4
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 4
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 3
  %18 = bitcast i64** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 3
  %21 = bitcast i64** %20 to i64*
  store i64 %19, i64* %21, align 8
  ret %"class.spdy::Http2HeaderBlock::ValueProxy"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock10ValueProxyD2Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 0
  %7 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__list_node_base"* %10, %8
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %7, i64 0, i32 1
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZN4spdy17SpdyHeaderStorage6RewindEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %13, i8* %15, i64 %17) #14
  br label %18

18:                                               ; preds = %1, %12, %5
  ret void
}

declare void @_ZN4spdy17SpdyHeaderStorage6RewindEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* returned, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.24", align 8
  %5 = alloca %"class.absl::string_view", align 8
  %6 = alloca %"class.absl::string_view", align 8
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 3
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %2
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 0
  %12 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %11, align 8
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %12, i64 0, i32 1
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %12, i64 0, i32 0
  %16 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %14, i64 0, i32 0
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = icmp eq %"struct.std::__1::__list_node_base"* %18, %16
  br i1 %19, label %20, label %71

20:                                               ; preds = %3
  %21 = bitcast %"struct.std::__1::pair.24"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2
  %23 = bitcast %"class.absl::string_view"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %13, i8* %1, i64 %2) #14
  %29 = extractvalue { i8*, i64 } %28, 0
  %30 = extractvalue { i8*, i64 } %28, 1
  %31 = ptrtoint %"class.spdy::SpdyHeaderStorage"* %13 to i64
  %32 = tail call i8* @_Znwm(i64 16) #18
  %33 = ptrtoint i8* %32 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 16
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast i8* %32 to i8**
  store i8* %29, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64*
  store i64 %30, i64* %38, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false)
  %39 = icmp eq i64 %27, 6
  br i1 %39, label %40, label %43

40:                                               ; preds = %20
  %41 = tail call i32 @bcmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40, %20
  br label %44

44:                                               ; preds = %40, %43
  %45 = phi i64 [ 1, %43 ], [ 2, %40 ]
  %46 = bitcast %"class.absl::string_view"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %46, i64 16, i1 false) #14
  %47 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1
  %48 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %47 to i64*
  store i64 %31, i64* %48, align 8, !alias.scope !3
  %49 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 1
  %50 = bitcast %"class.std::__1::vector.4"* %49 to i64*
  store i64 %33, i64* %50, align 8, !alias.scope !3
  %51 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 1, i32 0, i32 1
  %52 = bitcast %"class.absl::string_view"** %51 to i64*
  store i64 %35, i64* %52, align 8, !alias.scope !3
  %53 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.absl::string_view"** %53 to i64*
  store i64 %35, i64* %54, align 8, !alias.scope !3
  %55 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  store i8* %25, i8** %55, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 2, i32 0, i32 1
  store i64 %27, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 2, i32 1
  %58 = bitcast %"class.absl::string_view"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* nonnull align 8 %23, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 3
  store i64 %30, i64* %59, align 8, !alias.scope !3
  %60 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 4
  store i64 %45, i64* %60, align 8, !alias.scope !3
  %61 = call { %"struct.std::__1::__list_node_base"*, i8 } @_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE7emplaceIJNSt3__14pairIS2_S5_EEEEENSB_INSA_15__list_iteratorISC_PvEEbEEDpOT_(%"class.quiche::QuicheLinkedHashMap"* %15, %"struct.std::__1::pair.24"* nonnull dereferenceable(96) %4)
  %62 = extractvalue { %"struct.std::__1::__list_node_base"*, i8 } %61, 0
  %63 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1, i32 0
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 1, i32 0, i32 0
  %65 = load %"class.absl::string_view"*, %"class.absl::string_view"** %64, align 8
  %66 = icmp eq %"class.absl::string_view"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %44
  %68 = ptrtoint %"class.absl::string_view"* %65 to i64
  store i64 %68, i64* %52, align 8
  %69 = bitcast %"class.absl::string_view"* %65 to i8*
  call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %67, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %21) #14
  br label %127

71:                                               ; preds = %3
  %72 = bitcast %"class.std::__1::__list_iterator"* %14 to %"struct.std::__1::__list_node"**
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 6
  %74 = bitcast %"struct.std::__1::__list_node_base"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = load i64*, i64** %7, align 8
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %77, %75
  store i64 %78, i64* %76, align 8
  %79 = bitcast %"class.absl::string_view"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79)
  %80 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %13, i8* %1, i64 %2) #14
  %85 = extractvalue { i8*, i64 } %84, 0
  %86 = extractvalue { i8*, i64 } %84, 1
  %87 = ptrtoint %"class.spdy::SpdyHeaderStorage"* %13 to i64
  %88 = tail call i8* @_Znwm(i64 16) #18
  %89 = ptrtoint i8* %88 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 16
  %91 = ptrtoint i8* %90 to i64
  %92 = bitcast i8* %88 to i8**
  store i8* %85, i8** %92, align 8
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 %86, i64* %94, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false)
  %95 = icmp eq i64 %83, 6
  br i1 %95, label %96, label %99

96:                                               ; preds = %71
  %97 = tail call i32 @bcmp(i8* %81, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96, %71
  br label %100

100:                                              ; preds = %96, %99
  %101 = phi i64 [ 1, %99 ], [ 2, %96 ]
  %102 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %72, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1
  %104 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %103 to i64*
  store i64 %87, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 1
  %106 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.absl::string_view"*, %"class.absl::string_view"** %106, align 8
  %108 = icmp eq %"class.absl::string_view"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %100
  %110 = ptrtoint %"class.absl::string_view"* %107 to i64
  %111 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 1, i32 0, i32 1
  %112 = bitcast %"class.absl::string_view"** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = bitcast %"class.absl::string_view"* %107 to i8*
  tail call void @_ZdlPv(i8* %113) #18
  %114 = bitcast %"class.std::__1::vector.4"* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #14
  br label %115

115:                                              ; preds = %100, %109
  %116 = bitcast %"class.std::__1::vector.4"* %105 to i64*
  store i64 %89, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 1, i32 0, i32 1
  %118 = bitcast %"class.absl::string_view"** %117 to i64*
  store i64 %91, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"class.absl::string_view"** %119 to i64*
  store i64 %91, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  store i8* %81, i8** %121, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  store i64 %83, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 2, i32 1
  %124 = bitcast %"class.absl::string_view"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* nonnull align 8 %79, i64 16, i1 false)
  %125 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 3
  store i64 %86, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %102, i64 0, i32 1, i32 1, i32 4
  store i64 %101, i64* %126, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79)
  br label %127

127:                                              ; preds = %115, %70
  ret %"class.spdy::Http2HeaderBlock::ValueProxy"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__list_node_base"*, i8 } @_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE7emplaceIJNSt3__14pairIS2_S5_EEEEENSB_INSA_15__list_iteratorISC_PvEEbEEDpOT_(%"class.quiche::QuicheLinkedHashMap"*, %"struct.std::__1::pair.24"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::list", align 8
  %4 = alloca %"struct.std::__1::pair.51", align 8
  %5 = bitcast %"class.std::__1::list"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %10 = call i8* @_Znwm(i64 112) #18, !noalias !6
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast %"struct.std::__1::pair.24"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false) #14
  %13 = getelementptr inbounds i8, i8* %10, i64 32
  %14 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %1, i64 0, i32 1, i32 1
  %16 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %14 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds i8, i8* %10, i64 48
  %21 = bitcast %"class.absl::string_view"** %19 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  %24 = bitcast %"class.std::__1::vector.4"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  %25 = getelementptr inbounds i8, i8* %10, i64 64
  %26 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %1, i64 0, i32 1, i32 2
  %27 = bitcast %"struct.std::__1::pair"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 32, i1 false) #14
  %28 = getelementptr inbounds i8, i8* %10, i64 96
  %29 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %1, i64 0, i32 1, i32 3
  %30 = bitcast i64* %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  %32 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %32, align 8
  %33 = bitcast i8* %10 to %"struct.std::__1::__list_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"struct.std::__1::__list_node_base"** %34 to i8**
  store i8* %10, i8** %35, align 8
  %36 = ptrtoint %"class.std::__1::list"* %3 to i64
  %37 = bitcast i8* %10 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.std::__1::list"* %3 to i8**
  store i8* %10, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %10, i64 8
  %40 = bitcast i8* %39 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %9, %"struct.std::__1::__list_node_base"** %40, align 8
  store i64 1, i64* %8, align 8
  %41 = ptrtoint i8* %10 to i64
  %42 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"struct.std::__1::pair.51"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %12, i64 16, i1 false)
  %44 = getelementptr inbounds %"struct.std::__1::pair.51", %"struct.std::__1::pair.51"* %4, i64 0, i32 1
  %45 = bitcast %"class.std::__1::__list_iterator"* %44 to i64*
  store i64 %41, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.51", %"struct.std::__1::pair.51"* %4, i64 0, i32 0
  %47 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE22find_or_prepare_insertIS3_EENS6_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"* %42, %"class.absl::string_view"* nonnull dereferenceable(16) %46) #14, !noalias !9
  %48 = extractvalue { i64, i8 } %47, 0
  %49 = extractvalue { i64, i8 } %47, 1
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %53, align 8, !noalias !9
  %55 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %54, i64 %48
  %56 = call i8* @_Znwm(i64 24) #18, !noalias !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %43, i64 16, i1 false) #14, !noalias !9
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %45, align 8, !noalias !9
  store i64 %59, i64* %58, align 8, !noalias !9
  %60 = bitcast %"struct.std::__1::pair.11"** %55 to i8**
  store i8* %56, i8** %60, align 8, !noalias !9
  br label %61

61:                                               ; preds = %2, %52
  %62 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8, !noalias !9
  %64 = getelementptr inbounds i8, i8* %63, i64 %48
  %65 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %66 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %65, align 8, !noalias !9
  %67 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %66, i64 %48
  %68 = icmp ne i8* %64, null
  call void @llvm.assume(i1 %68) #14, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #14
  %69 = icmp eq i8 %49, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %61
  %71 = load i8, i8* %64, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %106, label %73, !prof !24

73:                                               ; preds = %70
  call void @llvm.trap() #14
  unreachable

74:                                               ; preds = %61
  %75 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %75, i64 0, i32 0, i32 0
  %77 = icmp eq %"struct.std::__1::__list_node_base"* %76, %33
  br i1 %77, label %102, label %78

78:                                               ; preds = %74
  %79 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %80 = icmp eq %"struct.std::__1::__list_node_base"* %79, %76
  br i1 %80, label %102, label %81

81:                                               ; preds = %78
  %82 = ptrtoint %"struct.std::__1::__list_node_base"* %79 to i64
  %83 = bitcast i8* %10 to %"struct.std::__1::__list_node_base"**
  %84 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %84, i64 0, i32 1
  %86 = bitcast %"struct.std::__1::__list_node_base"** %85 to i64*
  store i64 %82, i64* %86, align 8
  %87 = load i64, i64* %37, align 8
  %88 = bitcast i8* %39 to i64**
  %89 = load i64*, i64** %88, align 8
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %75, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %91, i64 0, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i8**
  store i8* %10, i8** %93, align 8
  %94 = bitcast %"class.std::__1::list"* %75 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %37, align 8
  %96 = bitcast %"class.std::__1::list"* %75 to i8**
  store i8* %10, i8** %96, align 8
  store %"struct.std::__1::__list_node_base"* %76, %"struct.std::__1::__list_node_base"** %40, align 8
  %97 = load i64, i64* %8, align 8
  %98 = add i64 %97, -1
  store i64 %98, i64* %8, align 8
  %99 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %99, align 8
  br label %102

102:                                              ; preds = %81, %78, %74
  %103 = load i8, i8* %64, align 1
  %104 = icmp sgt i8 %103, -1
  br i1 %104, label %106, label %105, !prof !24

105:                                              ; preds = %102
  call void @llvm.trap() #14
  unreachable

106:                                              ; preds = %102, %70
  %107 = phi i8 [ 0, %70 ], [ 1, %102 ]
  %108 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %67, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %108, i64 0, i32 1, i32 0
  %110 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %109, align 8
  %111 = load i64, i64* %8, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %144, label %113

113:                                              ; preds = %106
  %114 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %115 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %115, i64 0, i32 1
  %117 = bitcast %"struct.std::__1::__list_node_base"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %114, i64 0, i32 0
  %120 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %120, i64 0, i32 1
  %122 = bitcast %"struct.std::__1::__list_node_base"** %121 to i64*
  store i64 %118, i64* %122, align 8
  %123 = bitcast %"struct.std::__1::__list_node_base"* %114 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__list_node_base"** %116 to i64**
  %126 = load i64*, i64** %125, align 8
  store i64 %124, i64* %126, align 8
  store i64 0, i64* %8, align 8
  %127 = icmp eq %"struct.std::__1::__list_node_base"* %114, %9
  br i1 %127, label %144, label %128

128:                                              ; preds = %113, %141
  %129 = phi %"struct.std::__1::__list_node_base"* [ %131, %141 ], [ %114, %113 ]
  %130 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %131 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 2, i32 1
  %133 = bitcast %"struct.std::__1::__list_node_base"** %132 to %"class.absl::string_view"**
  %134 = load %"class.absl::string_view"*, %"class.absl::string_view"** %133, align 8
  %135 = icmp eq %"class.absl::string_view"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %128
  %137 = ptrtoint %"class.absl::string_view"* %134 to i64
  %138 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 3
  %139 = bitcast %"struct.std::__1::__list_node_base"* %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast %"class.absl::string_view"* %134 to i8*
  call void @_ZdlPv(i8* %140) #18
  br label %141

141:                                              ; preds = %136, %128
  %142 = bitcast %"struct.std::__1::__list_node_base"* %129 to i8*
  call void @_ZdlPv(i8* %142) #18
  %143 = icmp eq %"struct.std::__1::__list_node_base"* %131, %9
  br i1 %143, label %144, label %128

144:                                              ; preds = %141, %106, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  %145 = insertvalue { %"struct.std::__1::__list_node_base"*, i8 } undef, %"struct.std::__1::__list_node_base"* %110, 0
  %146 = insertvalue { %"struct.std::__1::__list_node_base"*, i8 } %145, i8 %107, 1
  ret { %"struct.std::__1::__list_node_base"*, i8 } %146
}

declare { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4spdy16Http2HeaderBlock10ValueProxyeqEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 0
  %5 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %8, %6
  br i1 %9, label %26, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 2
  %12 = bitcast %"struct.std::__1::__list_node_base"* %11 to %"class.spdy::Http2HeaderBlock::HeaderValue"*
  %13 = tail call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %12) #14
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 5
  %17 = bitcast %"struct.std::__1::__list_node_base"* %16 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 5, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq i64 %15, %2
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = icmp eq i64 %2, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call i32 @bcmp(i8* %1, i8* %14, i64 %2) #14
  %25 = icmp eq i32 %24, 0
  br label %26

26:                                               ; preds = %23, %21, %10, %3
  %27 = phi i1 [ false, %3 ], [ false, %10 ], [ true, %21 ], [ %25, %23 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4spdy16Http2HeaderBlock10ValueProxy9as_stringEv(%"class.std::__1::basic_string"* noalias sret, %"class.spdy::Http2HeaderBlock::ValueProxy"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 0
  %4 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %1, i64 0, i32 1, i32 0
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__list_node_base"* %7, %5
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 0, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %12, align 8
  br label %51

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 2
  %15 = bitcast %"struct.std::__1::__list_node_base"* %14 to %"class.spdy::Http2HeaderBlock::HeaderValue"*
  %16 = tail call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %15) #14
  %17 = extractvalue { i8*, i64 } %16, 0
  %18 = extractvalue { i8*, i64 } %16, 1
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 5
  %20 = bitcast %"struct.std::__1::__list_node_base"* %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 5, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq i8* %17, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %13
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #14, !alias.scope !25
  br label %51

26:                                               ; preds = %13
  %27 = icmp ugt i64 %18, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #19
  unreachable

30:                                               ; preds = %26
  %31 = icmp ult i64 %18, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %18, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #18
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8, !alias.scope !25
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8, !alias.scope !25
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %39, align 8, !alias.scope !25
  br label %46

40:                                               ; preds = %30
  %41 = trunc i64 %18 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1, !alias.scope !25
  %44 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %45 = icmp eq i64 %18, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %40, %32
  %47 = phi i8* [ %35, %32 ], [ %44, %40 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* nonnull align 1 %17, i64 %18, i1 false) #14
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i8* [ %44, %40 ], [ %47, %46 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 %18
  store i8 0, i8* %50, align 1
  br label %51

51:                                               ; preds = %48, %24, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlockC2Ev(%"class.spdy::Http2HeaderBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %3, i64 1
  %5 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::pair.11"*** %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 15>, <2 x i64>* %6, align 8
  %7 = tail call i8* @_Znwm(i64 152) #18
  store i8* %7, i8** %2, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 32
  %9 = bitcast %"struct.std::__1::pair.11"*** %3 to i8**
  store i8* %8, i8** %9, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -128, i64 31, i1 false) #14
  %10 = getelementptr inbounds i8, i8* %7, i64 15
  store i8 -1, i8* %10, align 1
  store i64 14, i64* %5, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %11, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %12, %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %12, %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  tail call void @_ZN4spdy17SpdyHeaderStorageC1Ev(%"class.spdy::SpdyHeaderStorage"* %16) #14
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %18 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN4spdy17SpdyHeaderStorageC1Ev(%"class.spdy::SpdyHeaderStorage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlockC2EOS0_(%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %4, i64 1
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %8 = bitcast %"struct.std::__1::pair.11"*** %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 15>, <2 x i64>* %8, align 8
  %9 = tail call i8* @_Znwm(i64 152) #18
  store i8* %9, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast %"struct.std::__1::pair.11"*** %4 to i8**
  store i8* %10, i8** %11, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %9, i8 -128, i64 31, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %9, i64 15
  store i8 -1, i8* %12, align 1
  store i64 14, i64* %6, align 8
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %13, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %13, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %15, align 8
  %16 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %16, align 8
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  tail call void @_ZN4spdy17SpdyHeaderStorageC1Ev(%"class.spdy::SpdyHeaderStorage"* %18) #14
  %19 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 3
  %21 = bitcast %"class.spdy::Http2HeaderBlock"* %0 to i64*
  %22 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.spdy::Http2HeaderBlock"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %21, align 8
  store i64 %23, i64* %24, align 8
  %26 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"struct.std::__1::pair.11"*** %4 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::pair.11"*** %26 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i64, i64* %31, align 8
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %35 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %36 = load i64, i64* %7, align 8
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %7, align 8
  store i64 %36, i64* %35, align 8
  %38 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %6, align 8
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %6, align 8
  store i64 %39, i64* %38, align 8
  %41 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %43 = load i64, i64* %17, align 8
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %17, align 8
  store i64 %43, i64* %42, align 8
  %45 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %41, i64 0, i32 0, i32 0
  %46 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  %47 = bitcast %"class.std::__1::list"* %13 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = bitcast %"class.std::__1::list"* %13 to i8*
  %50 = bitcast %"class.std::__1::list"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #14
  %51 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::list"* %41 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %52, align 8
  %53 = load i64, i64* %17, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %2
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %15, align 8
  br label %61

56:                                               ; preds = %2
  %57 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %57, i64 0, i32 0
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %58, align 8
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 1
  br label %61

61:                                               ; preds = %56, %55
  %62 = phi %"struct.std::__1::__list_node_base"** [ %60, %56 ], [ %16, %55 ]
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %62, align 8
  %63 = load i64, i64* %42, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %41, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %45, %"struct.std::__1::__list_node_base"** %66, align 8
  br label %73

67:                                               ; preds = %61
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %51, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 0
  store %"struct.std::__1::__list_node_base"* %45, %"struct.std::__1::__list_node_base"** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %41, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  br label %73

73:                                               ; preds = %65, %67
  %74 = phi %"struct.std::__1::__list_node_base"** [ %51, %65 ], [ %72, %67 ]
  store %"struct.std::__1::__list_node_base"* %45, %"struct.std::__1::__list_node_base"** %74, align 8
  %75 = getelementptr inbounds %"class.spdy::SpdyHeaderStorage", %"class.spdy::SpdyHeaderStorage"* %18, i64 0, i32 0
  %76 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 1, i32 0
  %77 = tail call dereferenceable(40) %"class.spdy::SpdySimpleArena"* @_ZN4spdy15SpdySimpleArenaaSEOS0_(%"class.spdy::SpdySimpleArena"* %75, %"class.spdy::SpdySimpleArena"* dereferenceable(40) %76) #14
  %78 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %79 = load i64, i64* %46, align 8
  %80 = inttoptr i64 %79 to %"struct.std::__1::__list_node_base"*
  %81 = icmp eq %"struct.std::__1::__list_node_base"* %78, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %87, %73
  %83 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %19, align 8
  %85 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 3
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %20, align 8
  ret void

87:                                               ; preds = %73, %87
  %88 = phi %"struct.std::__1::__list_node_base"* [ %95, %87 ], [ %80, %73 ]
  %89 = phi i64 [ %94, %87 ], [ %79, %73 ]
  %90 = inttoptr i64 %89 to %"struct.std::__1::__list_node"*
  %91 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %90, i64 0, i32 1, i32 1, i32 0
  store %"class.spdy::SpdyHeaderStorage"* %18, %"class.spdy::SpdyHeaderStorage"** %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %88, i64 0, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %94 to %"struct.std::__1::__list_node_base"*
  %96 = icmp eq %"struct.std::__1::__list_node_base"* %78, %95
  br i1 %96, label %82, label %87
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlockD2Ev(%"class.spdy::Http2HeaderBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4spdy15SpdySimpleArenaD1Ev(%"class.spdy::SpdySimpleArena"* %2) #14
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %41, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %3, i64 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  store i64 0, i64* %4, align 8
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %9, %10
  br i1 %24, label %41, label %25

25:                                               ; preds = %7, %38
  %26 = phi %"struct.std::__1::__list_node_base"* [ %28, %38 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 2, i32 1
  %30 = bitcast %"struct.std::__1::__list_node_base"** %29 to %"class.absl::string_view"**
  %31 = load %"class.absl::string_view"*, %"class.absl::string_view"** %30, align 8
  %32 = icmp eq %"class.absl::string_view"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = ptrtoint %"class.absl::string_view"* %31 to i64
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 3
  %36 = bitcast %"struct.std::__1::__list_node_base"* %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.absl::string_view"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %33, %25
  %39 = bitcast %"struct.std::__1::__list_node_base"* %26 to i8*
  tail call void @_ZdlPv(i8* %39) #18
  %40 = icmp eq %"struct.std::__1::__list_node_base"* %28, %10
  br i1 %40, label %41, label %25

41:                                               ; preds = %38, %7, %1
  %42 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %68, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %51

48:                                               ; preds = %64
  %49 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %49) #18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %46, align 8
  %50 = bitcast %"struct.std::__1::pair.11"*** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #14
  br label %68

51:                                               ; preds = %64, %45
  %52 = phi i64 [ %43, %45 ], [ %65, %64 ]
  %53 = phi i64 [ 0, %45 ], [ %66, %64 ]
  %54 = load i8*, i8** %46, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = load i8, i8* %55, align 1
  %57 = icmp sgt i8 %56, -1
  br i1 %57, label %58, label %64

58:                                               ; preds = %51
  %59 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %47, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %59, i64 %53
  %61 = bitcast %"struct.std::__1::pair.11"** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #18
  %63 = load i64, i64* %42, align 8
  br label %64

64:                                               ; preds = %58, %51
  %65 = phi i64 [ %52, %51 ], [ %63, %58 ]
  %66 = add i64 %53, 1
  %67 = icmp eq i64 %66, %65
  br i1 %67, label %48, label %51

68:                                               ; preds = %41, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.spdy::Http2HeaderBlock"* @_ZN4spdy16Http2HeaderBlockaSEOS0_(%"class.spdy::Http2HeaderBlock"* returned, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spdy::Http2HeaderBlock"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.spdy::Http2HeaderBlock"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 %4, i64* %5, align 8
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.11"*** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.std::__1::pair.11"*** %8 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  %13 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i64, i64* %13, align 8
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %19 = load i64, i64* %17, align 8
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %21 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load i64, i64* %21, align 8
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %25 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %29 = load i64, i64* %27, align 8
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %27, align 8
  store i64 %29, i64* %28, align 8
  %31 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %25, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  %35 = bitcast %"class.std::__1::list"* %25 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = bitcast %"class.std::__1::list"* %25 to i8*
  %38 = bitcast %"class.std::__1::list"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #14
  %39 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::list"* %26 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %40, align 8
  %41 = load i64, i64* %27, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %25, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %31, %"struct.std::__1::__list_node_base"** %44, align 8
  br label %51

45:                                               ; preds = %2
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 0
  store %"struct.std::__1::__list_node_base"* %31, %"struct.std::__1::__list_node_base"** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %25, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  br label %51

51:                                               ; preds = %45, %43
  %52 = phi %"struct.std::__1::__list_node_base"** [ %50, %45 ], [ %33, %43 ]
  store %"struct.std::__1::__list_node_base"* %31, %"struct.std::__1::__list_node_base"** %52, align 8
  %53 = load i64, i64* %28, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %32, %"struct.std::__1::__list_node_base"** %56, align 8
  br label %63

57:                                               ; preds = %51
  %58 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %39, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 0
  store %"struct.std::__1::__list_node_base"* %32, %"struct.std::__1::__list_node_base"** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %61, i64 0, i32 1
  br label %63

63:                                               ; preds = %55, %57
  %64 = phi %"struct.std::__1::__list_node_base"** [ %39, %55 ], [ %62, %57 ]
  store %"struct.std::__1::__list_node_base"* %32, %"struct.std::__1::__list_node_base"** %64, align 8
  %65 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spdy::SpdyHeaderStorage", %"class.spdy::SpdyHeaderStorage"* %65, i64 0, i32 0
  %67 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 1, i32 0
  %68 = tail call dereferenceable(40) %"class.spdy::SpdySimpleArena"* @_ZN4spdy15SpdySimpleArenaaSEOS0_(%"class.spdy::SpdySimpleArena"* %66, %"class.spdy::SpdySimpleArena"* dereferenceable(40) %67) #14
  %69 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %70 = load i64, i64* %34, align 8
  %71 = inttoptr i64 %70 to %"struct.std::__1::__list_node_base"*
  %72 = icmp eq %"struct.std::__1::__list_node_base"* %69, %71
  br i1 %72, label %73, label %80

73:                                               ; preds = %80, %63
  %74 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 3
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 3
  store i64 %78, i64* %79, align 8
  ret %"class.spdy::Http2HeaderBlock"* %0

80:                                               ; preds = %63, %80
  %81 = phi %"struct.std::__1::__list_node_base"* [ %88, %80 ], [ %71, %63 ]
  %82 = phi i64 [ %87, %80 ], [ %70, %63 ]
  %83 = inttoptr i64 %82 to %"struct.std::__1::__list_node"*
  %84 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %83, i64 0, i32 1, i32 1, i32 0
  store %"class.spdy::SpdyHeaderStorage"* %65, %"class.spdy::SpdyHeaderStorage"** %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %81, i64 0, i32 1
  %86 = bitcast %"struct.std::__1::__list_node_base"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = inttoptr i64 %87 to %"struct.std::__1::__list_node_base"*
  %89 = icmp eq %"struct.std::__1::__list_node_base"* %69, %88
  br i1 %89, label %73, label %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4spdy16Http2HeaderBlock5CloneEv(%"class.spdy::Http2HeaderBlock"* noalias sret, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  %4 = bitcast %"class.spdy::SpdyHeaderStorage"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 56, i1 false)
  %5 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %6, i64 1
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.11"*** %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 15>, <2 x i64>* %9, align 8
  %10 = tail call i8* @_Znwm(i64 152) #18
  store i8* %10, i8** %5, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast %"struct.std::__1::pair.11"*** %6 to i8**
  store i8* %11, i8** %12, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 -128, i64 31, i1 false) #14
  %13 = getelementptr inbounds i8, i8* %10, i64 15
  store i8 -1, i8* %13, align 1
  store i64 14, i64* %8, align 8
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %14, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %16, align 8
  %17 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %17, align 8
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  tail call void @_ZN4spdy17SpdyHeaderStorageC1Ev(%"class.spdy::SpdyHeaderStorage"* %19) #14
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %21 = bitcast i64* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #14
  %22 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %25 to %"struct.std::__1::__list_node_base"*
  %27 = icmp eq %"struct.std::__1::__list_node_base"* %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %29, %2
  ret void

29:                                               ; preds = %2, %29
  %30 = phi %"struct.std::__1::__list_node_base"* [ %46, %29 ], [ %26, %2 ]
  %31 = phi i64 [ %45, %29 ], [ %25, %2 ]
  %32 = inttoptr i64 %31 to %"struct.std::__1::__list_node"*
  %33 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %32, i64 0, i32 1, i32 1
  %34 = tail call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %33) #14
  %35 = extractvalue { i8*, i64 } %34, 0
  %36 = extractvalue { i8*, i64 } %34, 1
  %37 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %32, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %32, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %32, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %32, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZN4spdy16Http2HeaderBlock12AppendHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"* %0, i8* %40, i64 %42, i8* %35, i64 %36)
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node_base"*
  %47 = icmp eq %"struct.std::__1::__list_node_base"* %23, %46
  br i1 %47, label %28, label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock12AppendHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"*, i8*, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.24", align 8
  %7 = alloca %"class.absl::string_view", align 8
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %2
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  %12 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %11, i8* %1, i64 %2) #14
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0
  %16 = bitcast %"struct.std::__1::pair.24"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %16) #14
  %17 = bitcast %"class.absl::string_view"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %11, i8* %3, i64 %4) #14
  %19 = extractvalue { i8*, i64 } %18, 0
  %20 = extractvalue { i8*, i64 } %18, 1
  %21 = ptrtoint %"class.spdy::SpdyHeaderStorage"* %11 to i64
  %22 = tail call i8* @_Znwm(i64 16) #18
  %23 = ptrtoint i8* %22 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 16
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast i8* %22 to i8**
  store i8* %19, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %20, i64* %28, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false)
  %29 = icmp eq i64 %14, 6
  br i1 %29, label %30, label %33

30:                                               ; preds = %5
  %31 = tail call i32 @bcmp(i8* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30, %5
  br label %34

34:                                               ; preds = %30, %33
  %35 = phi i64 [ 1, %33 ], [ 2, %30 ]
  %36 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 0, i32 0
  store i8* %13, i8** %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1
  %39 = bitcast %"class.spdy::Http2HeaderBlock::HeaderValue"* %38 to i64*
  store i64 %21, i64* %39, align 8, !alias.scope !28
  %40 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 1
  %41 = bitcast %"class.std::__1::vector.4"* %40 to i64*
  store i64 %23, i64* %41, align 8, !alias.scope !28
  %42 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 1, i32 0, i32 1
  %43 = bitcast %"class.absl::string_view"** %42 to i64*
  store i64 %25, i64* %43, align 8, !alias.scope !28
  %44 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.absl::string_view"** %44 to i64*
  store i64 %25, i64* %45, align 8, !alias.scope !28
  %46 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 2, i32 0, i32 0
  store i8* %13, i8** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 2, i32 0, i32 1
  store i64 %14, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 2, i32 1
  %49 = bitcast %"class.absl::string_view"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %17, i64 16, i1 false)
  %50 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 3
  store i64 %20, i64* %50, align 8, !alias.scope !28
  %51 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 4
  store i64 %35, i64* %51, align 8, !alias.scope !28
  %52 = call { %"struct.std::__1::__list_node_base"*, i8 } @_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE7emplaceIJNSt3__14pairIS2_S5_EEEEENSB_INSA_15__list_iteratorISC_PvEEbEEDpOT_(%"class.quiche::QuicheLinkedHashMap"* %15, %"struct.std::__1::pair.24"* nonnull dereferenceable(96) %6)
  %53 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %6, i64 0, i32 1, i32 1, i32 0, i32 0
  %54 = load %"class.absl::string_view"*, %"class.absl::string_view"** %53, align 8
  %55 = icmp eq %"class.absl::string_view"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %34
  %57 = ptrtoint %"class.absl::string_view"* %54 to i64
  store i64 %57, i64* %43, align 8
  %58 = bitcast %"class.absl::string_view"* %54 to i8*
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %56, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %16) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4spdy16Http2HeaderBlockeqERKS0_(%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"* nocapture readonly dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %68

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8, !noalias !31
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"struct.std::__1::__list_node_base"* %11, %10
  br i1 %12, label %68, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  br label %15

15:                                               ; preds = %65, %13
  %16 = phi %"struct.std::__1::__list_node_base"** [ %67, %65 ], [ %14, %13 ]
  %17 = phi %"struct.std::__1::__list_node_base"* [ %63, %65 ], [ %10, %13 ]
  %18 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 2
  %21 = bitcast %"struct.std::__1::__list_node_base"* %20 to %"class.spdy::Http2HeaderBlock::HeaderValue"*
  %22 = tail call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %21) #14
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = extractvalue { i8*, i64 } %22, 1
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 5
  %26 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 5, i32 1
  %28 = bitcast %"struct.std::__1::__list_node_base"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = inttoptr i64 %19 to %"struct.std::__1::__list_node"*
  %30 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 1
  %31 = tail call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %30) #14
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = extractvalue { i8*, i64 } %31, 1
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 4
  %37 = bitcast %"struct.std::__1::__list_node_base"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 4, i32 1
  %40 = bitcast %"struct.std::__1::__list_node_base"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %41, %45
  br i1 %46, label %47, label %68

47:                                               ; preds = %15
  %48 = icmp eq i64 %41, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  %50 = tail call i32 @bcmp(i8* %38, i8* %43, i64 %41) #14
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %68

52:                                               ; preds = %49, %47
  %53 = load i8*, i8** %26, align 8
  %54 = load i64, i64* %28, align 8
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %68

56:                                               ; preds = %52
  %57 = icmp eq i64 %33, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %56
  %59 = tail call i32 @bcmp(i8* %53, i8* %32, i64 %33) #14
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %68

61:                                               ; preds = %58, %56
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__list_node_base"* %63, %11
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = inttoptr i64 %19 to %"struct.std::__1::__list_node_base"*
  %67 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %66, i64 0, i32 1
  br label %15

68:                                               ; preds = %61, %58, %52, %49, %15, %8, %2
  %69 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %58 ], [ false, %49 ], [ false, %52 ], [ false, %15 ], [ true, %61 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4spdy16Http2HeaderBlockneERKS0_(%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"* nocapture readonly dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK4spdy16Http2HeaderBlockeqERKS0_(%"class.spdy::Http2HeaderBlock"* %0, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4spdy16Http2HeaderBlock11DebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [5 x %"class.absl::string_view"], align 16
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 2, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 32123, i16* %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 0, i8* %14, align 2
  br label %67

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  store i8 3, i8* %18, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #14
  %20 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = inttoptr i64 %23 to %"struct.std::__1::__list_node_base"*
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %24, %25
  br i1 %26, label %40, label %27

27:                                               ; preds = %15
  %28 = bitcast [5 x %"class.absl::string_view"]* %3 to i8*
  %29 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %31 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %32 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %33 = bitcast i8** %32 to i64*
  %34 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  %35 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %36 = bitcast [5 x %"class.absl::string_view"]* %3 to <2 x i64>*
  %37 = bitcast i8** %30 to <2 x i64>*
  %38 = bitcast i8** %31 to <2 x i64>*
  %39 = bitcast i8** %35 to <2 x i64>*
  br label %45

40:                                               ; preds = %45, %15
  %41 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %41) #14
  %42 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 2, i64* %43, align 8
  call void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"* nonnull %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %41) #14
  %44 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %16, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  br label %67

45:                                               ; preds = %27, %45
  %46 = phi %"struct.std::__1::__list_node_base"* [ %25, %27 ], [ %65, %45 ]
  %47 = phi i64 [ %23, %27 ], [ %64, %45 ]
  %48 = inttoptr i64 %47 to %"struct.std::__1::__list_node"*
  %49 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %48, i64 0, i32 1, i32 1
  %50 = call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %49) #14
  %51 = extractvalue { i8*, i64 } %50, 0
  %52 = extractvalue { i8*, i64 } %50, 1
  %53 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %48, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %48, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %48, i64 0, i32 1, i32 1, i32 2
  %56 = bitcast %"struct.std::__1::pair"* %55 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8
  %58 = call { i8*, i64 } @_ZNK4spdy16Http2HeaderBlock11HeaderValue17ConsolidatedValueEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %49) #14
  %59 = extractvalue { i8*, i64 } %58, 0
  %60 = extractvalue { i8*, i64 } %58, 1
  store i8* %59, i8** %53, align 8
  store i64 %60, i64* %54, align 8
  %61 = ptrtoint i8* %59 to i64
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %28) #14
  store <2 x i64> <i64 ptrtoint ([3 x i8]* @.str.3 to i64), i64 2>, <2 x i64>* %36, align 16
  store <2 x i64> %57, <2 x i64>* %37, align 16
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.4 to i64), i64 1>, <2 x i64>* %38, align 16
  store i64 %61, i64* %33, align 16
  store i64 %60, i64* %34, align 8
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.5 to i64), i64 1>, <2 x i64>* %39, align 16
  call void @_ZN4absl16strings_internal12AppendPiecesEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull %4, %"class.absl::string_view"* nonnull %29, i64 5) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %28) #14
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %63 = bitcast %"struct.std::__1::__list_node_base"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = inttoptr i64 %64 to %"struct.std::__1::__list_node_base"*
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %24, %65
  br i1 %66, label %40, label %45

67:                                               ; preds = %40, %9
  ret void
}

declare void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"*, %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock5eraseEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::string_view", align 8
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = call { i8*, %"struct.std::__1::pair.11"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %8, %"class.absl::string_view"* nonnull dereferenceable(16) %4) #14
  %10 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %9, 0
  %11 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %9, 1
  %12 = icmp eq i8* %10, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %3
  %14 = load i8, i8* %10, align 1
  %15 = icmp sgt i8 %14, -1
  br i1 %15, label %17, label %16, !prof !24

16:                                               ; preds = %13
  call void @llvm.trap() #14
  unreachable

17:                                               ; preds = %13
  %18 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %11, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %18, i64 0, i32 1, i32 0
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %20, %21
  br i1 %22, label %35, label %23

23:                                               ; preds = %17
  %24 = load i64, i64* %6, align 8
  %25 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %24
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 6
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  store i64 %33, i64* %31, align 8
  %34 = call %"struct.std::__1::__list_node_base"* @_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE5eraseENSt3__115__list_iteratorINS9_4pairIS2_S5_EEPvEE(%"class.quiche::QuicheLinkedHashMap"* %7, %"struct.std::__1::__list_node_base"* %20)
  br label %35

35:                                               ; preds = %17, %3, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZN6quiche19QuicheLinkedHashMapIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueENS4_19StringPieceCaseHashENS4_20StringPieceCaseEqualEE5eraseENSt3__115__list_iteratorINS9_4pairIS2_S5_EEPvEE(%"class.quiche::QuicheLinkedHashMap"*, %"struct.std::__1::__list_node_base"*) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %6 = bitcast %"struct.std::__1::__list_node_base"* %5 to %"class.absl::string_view"*
  %7 = tail call { i8*, %"struct.std::__1::pair.11"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %4, %"class.absl::string_view"* dereferenceable(16) %6)
  %8 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %7, 0
  %9 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %7, 1
  %10 = icmp eq i8* %8, null
  br i1 %10, label %14, label %11, !prof !34

11:                                               ; preds = %2
  %12 = load i8, i8* %8, align 1
  %13 = icmp sgt i8 %12, -1
  br i1 %13, label %15, label %14, !prof !24

14:                                               ; preds = %11, %2
  tail call void @llvm.trap() #14
  unreachable

15:                                               ; preds = %11
  %16 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %9, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %16, i64 0, i32 1, i32 0
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = icmp eq %"struct.std::__1::__list_node_base"* %18, %1
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.10, i64 0, i64 0), i32 129, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i64 67) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  %24 = load i8, i8* %8, align 1
  %25 = icmp sgt i8 %24, -1
  br i1 %25, label %27, label %26, !prof !24

26:                                               ; preds = %20
  call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %15, %20
  %28 = bitcast %"struct.std::__1::pair.11"** %9 to i8**
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #18
  %30 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.quiche::QuicheLinkedHashMap"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = ptrtoint i8* %8 to i64
  %37 = sub i64 %36, %35
  %38 = add i64 %37, -16
  %39 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %38, %40
  %42 = bitcast i8* %8 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %45 = bitcast <16 x i1> %44 to i16
  %46 = inttoptr i64 %35 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %41
  %48 = bitcast i8* %47 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = icmp eq <16 x i8> %49, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %51 = bitcast <16 x i1> %50 to i16
  %52 = icmp ne i16 %51, 0
  %53 = icmp ne i16 %45, 0
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %65

55:                                               ; preds = %27
  %56 = zext i16 %45 to i32
  %57 = zext i16 %51 to i32
  %58 = call i32 @llvm.cttz.i32(i32 %56, i1 false) #14, !range !35
  %59 = shl nuw i32 %57, 16
  %60 = call i32 @llvm.ctlz.i32(i32 %59, i1 false) #14, !range !35
  %61 = add nuw nsw i32 %60, %58
  %62 = icmp ult i32 %61, 16
  %63 = zext i1 %62 to i64
  %64 = select i1 %62, i8 -128, i8 -2
  br label %65

65:                                               ; preds = %27, %55
  %66 = phi i64 [ 0, %27 ], [ %63, %55 ]
  %67 = phi i8 [ -2, %27 ], [ %64, %55 ]
  %68 = getelementptr inbounds i8, i8* %46, i64 %37
  store i8 %67, i8* %68, align 1
  %69 = load i8*, i8** %33, align 8
  %70 = add i64 %37, -15
  %71 = load i64, i64* %39, align 8
  %72 = and i64 %71, %70
  %73 = and i64 %71, 15
  %74 = add i64 %72, %73
  %75 = getelementptr inbounds i8, i8* %69, i64 %74
  store i8 %67, i8* %75, align 1
  %76 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %66
  store i64 %78, i64* %76, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 1
  %80 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %79, align 8
  %81 = ptrtoint %"struct.std::__1::__list_node_base"* %80 to i64
  %82 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 0
  %83 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  store i64 %81, i64* %85, align 8
  %86 = bitcast %"struct.std::__1::__list_node_base"* %1 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64**
  %89 = load i64*, i64** %88, align 8
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, -1
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 2, i32 1
  %94 = bitcast %"struct.std::__1::__list_node_base"** %93 to %"class.absl::string_view"**
  %95 = load %"class.absl::string_view"*, %"class.absl::string_view"** %94, align 8
  %96 = icmp eq %"class.absl::string_view"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %65
  %98 = ptrtoint %"class.absl::string_view"* %95 to i64
  %99 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 3
  %100 = bitcast %"struct.std::__1::__list_node_base"* %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.absl::string_view"* %95 to i8*
  call void @_ZdlPv(i8* %101) #18
  br label %102

102:                                              ; preds = %65, %97
  %103 = bitcast %"struct.std::__1::__list_node_base"* %1 to i8*
  call void @_ZdlPv(i8* %103) #18
  ret %"struct.std::__1::__list_node_base"* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock5clearEv(%"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"* %3) #14
  %5 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %16 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  store i64 %17, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64**
  %25 = load i64*, i64** %24, align 8
  store i64 %23, i64* %25, align 8
  store i64 0, i64* %6, align 8
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %11, %12
  br i1 %26, label %43, label %27

27:                                               ; preds = %9, %40
  %28 = phi %"struct.std::__1::__list_node_base"* [ %30, %40 ], [ %11, %9 ]
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 2, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to %"class.absl::string_view"**
  %33 = load %"class.absl::string_view"*, %"class.absl::string_view"** %32, align 8
  %34 = icmp eq %"class.absl::string_view"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = ptrtoint %"class.absl::string_view"* %33 to i64
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 3
  %38 = bitcast %"struct.std::__1::__list_node_base"* %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.absl::string_view"* %33 to i8*
  tail call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %35, %27
  %41 = bitcast %"struct.std::__1::__list_node_base"* %28 to i8*
  tail call void @_ZdlPv(i8* %41) #18
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %30, %12
  br i1 %42, label %43, label %27

43:                                               ; preds = %40, %1, %9
  %44 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4spdy15SpdySimpleArena5ResetEv(%"class.spdy::SpdySimpleArena"* %44) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock6insertERKNSt3__14pairIN4absl11string_viewES4_EE(%"class.spdy::Http2HeaderBlock"*, %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call { i8*, %"struct.std::__1::pair.11"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %10, %"class.absl::string_view"* dereferenceable(16) %9) #14
  %12 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %11, 0
  %13 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %11, 1
  %14 = icmp eq i8* %12, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  %16 = load i8, i8* %12, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %19, label %18, !prof !24

18:                                               ; preds = %15
  tail call void @llvm.trap() #14
  unreachable

19:                                               ; preds = %15
  %20 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %13, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %20, i64 0, i32 1, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %22, %23
  br i1 %24, label %25, label %33

25:                                               ; preds = %2, %19
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = load i64, i64* %4, align 8
  tail call void @_ZN4spdy16Http2HeaderBlock12AppendHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"* %0, i8* %27, i64 %29, i8* %31, i64 %32)
  br label %94

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 2
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 6
  %37 = bitcast %"struct.std::__1::__list_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %6, align 8
  %40 = sub i64 %39, %38
  store i64 %40, i64* %6, align 8
  %41 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"* %34 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 1, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = load i64, i64* %4, align 8
  %51 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %42, i8* %49, i64 %50) #14
  %52 = extractvalue { i8*, i64 } %51, 0
  %53 = extractvalue { i8*, i64 } %51, 1
  %54 = ptrtoint %"class.spdy::SpdyHeaderStorage"* %42 to i64
  %55 = tail call i8* @_Znwm(i64 16) #18
  %56 = ptrtoint i8* %55 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 16
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast i8* %55 to i8**
  store i8* %52, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 8
  %61 = bitcast i8* %60 to i64*
  store i64 %53, i64* %61, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false)
  %62 = icmp eq i64 %47, 6
  br i1 %62, label %63, label %66

63:                                               ; preds = %33
  %64 = tail call i32 @bcmp(i8* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63, %33
  br label %67

67:                                               ; preds = %63, %66
  %68 = phi i64 [ 1, %66 ], [ 2, %63 ]
  %69 = bitcast %"struct.std::__1::__list_node_base"* %35 to i64*
  store i64 %54, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 2, i32 1
  %71 = bitcast %"struct.std::__1::__list_node_base"** %70 to %"class.absl::string_view"**
  %72 = load %"class.absl::string_view"*, %"class.absl::string_view"** %71, align 8
  %73 = icmp eq %"class.absl::string_view"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %67
  %75 = ptrtoint %"class.absl::string_view"* %72 to i64
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 3
  %77 = bitcast %"struct.std::__1::__list_node_base"* %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast %"class.absl::string_view"* %72 to i8*
  tail call void @_ZdlPv(i8* %78) #18
  %79 = bitcast %"struct.std::__1::__list_node_base"** %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #14
  br label %80

80:                                               ; preds = %67, %74
  %81 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64*
  store i64 %56, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 3
  %83 = bitcast %"struct.std::__1::__list_node_base"* %82 to i64*
  store i64 %58, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 3, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  store i64 %58, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 4
  %87 = bitcast %"struct.std::__1::__list_node_base"* %86 to i8**
  store i8* %44, i8** %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 4, i32 1
  %89 = bitcast %"struct.std::__1::__list_node_base"** %88 to i64*
  store i64 %47, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 5
  %91 = bitcast %"struct.std::__1::__list_node_base"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %41, i64 16, i1 false)
  store i64 %53, i64* %37, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 6, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64*
  store i64 %68, i64* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  br label %94

94:                                               ; preds = %80, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* noalias nocapture sret, %"class.spdy::Http2HeaderBlock"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::string_view", align 8
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = call { i8*, %"struct.std::__1::pair.11"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %8, %"class.absl::string_view"* nonnull dereferenceable(16) %5) #14
  %10 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %9, 0
  %11 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %9, 1
  %12 = icmp eq i8* %10, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %10, align 1
  %15 = icmp sgt i8 %14, -1
  br i1 %15, label %19, label %16, !prof !24

16:                                               ; preds = %13
  call void @llvm.trap() #14
  unreachable

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %25

19:                                               ; preds = %13
  %20 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %11, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %20, i64 0, i32 1, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %22, %23
  br i1 %24, label %25, label %36

25:                                               ; preds = %17, %19
  %26 = phi %"struct.std::__1::__list_node_base"* [ %18, %17 ], [ %22, %19 ]
  %27 = load i8*, i8** %6, align 8
  %28 = load i64, i64* %7, align 8
  %29 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %28
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 1
  %33 = call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %32, i8* %27, i64 %28) #14
  %34 = extractvalue { i8*, i64 } %33, 0
  %35 = extractvalue { i8*, i64 } %33, 1
  br label %43

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 1
  %38 = bitcast %"struct.std::__1::__list_node_base"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 1, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %36, %25
  %44 = phi %"struct.std::__1::__list_node_base"* [ %26, %25 ], [ %22, %36 ]
  %45 = phi i64 [ %35, %25 ], [ %42, %36 ]
  %46 = phi i8* [ %34, %25 ], [ %39, %36 ]
  %47 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 3
  %48 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 0
  store %"class.spdy::Http2HeaderBlock"* %1, %"class.spdy::Http2HeaderBlock"** %48, align 8
  %49 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 1, i32 0
  store %"struct.std::__1::__list_node_base"* %44, %"struct.std::__1::__list_node_base"** %49, align 8
  %50 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 0
  store i8* %46, i8** %50, align 8
  %51 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 2, i32 1
  store i64 %45, i64* %51, align 8
  %52 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 3
  store i64* %47, i64** %52, align 8
  %53 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::ValueProxy", %"class.spdy::Http2HeaderBlock::ValueProxy"* %0, i64 0, i32 4
  store i8 1, i8* %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4spdy16Http2HeaderBlock8WriteKeyEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  %8 = tail call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %7, i8* %1, i64 %2) #14
  ret { i8*, i64 } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy16Http2HeaderBlock22AppendValueOrAddHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"*, i8*, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::string_view", align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %4
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = call { i8*, %"struct.std::__1::pair.11"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"* %12, %"class.absl::string_view"* nonnull dereferenceable(16) %6) #14
  %14 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %13, 0
  %15 = extractvalue { i8*, %"struct.std::__1::pair.11"** } %13, 1
  %16 = icmp eq i8* %14, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %5
  %18 = load i8, i8* %14, align 1
  %19 = icmp sgt i8 %18, -1
  br i1 %19, label %21, label %20, !prof !24

20:                                               ; preds = %17
  call void @llvm.trap() #14
  unreachable

21:                                               ; preds = %17
  %22 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %15, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %22, i64 0, i32 1, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %24, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %5, %21
  %28 = load i8*, i8** %7, align 8
  %29 = load i64, i64* %8, align 8
  call void @_ZN4spdy16Http2HeaderBlock12AppendHeaderEN4absl11string_viewES2_(%"class.spdy::Http2HeaderBlock"* %0, i8* %28, i64 %29, i8* %3, i64 %4)
  br label %48

30:                                               ; preds = %21
  %31 = load i64, i64* %8, align 8
  %32 = icmp eq i64 %31, 6
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = load i8*, i8** %7, align 8
  %35 = call i32 @bcmp(i8* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4spdy12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %30
  br label %38

38:                                               ; preds = %33, %37
  %39 = phi i64 [ 1, %37 ], [ 2, %33 ]
  %40 = load i64, i64* %9, align 8
  %41 = add i64 %40, %39
  store i64 %41, i64* %9, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 2
  %43 = bitcast %"struct.std::__1::__list_node_base"* %42 to %"class.spdy::Http2HeaderBlock::HeaderValue"*
  %44 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1
  %45 = call { i8*, i64 } @_ZN4spdy17SpdyHeaderStorage5WriteEN4absl11string_viewE(%"class.spdy::SpdyHeaderStorage"* %44, i8* %3, i64 %4) #14
  %46 = extractvalue { i8*, i64 } %45, 0
  %47 = extractvalue { i8*, i64 } %45, 1
  call void @_ZN4spdy16Http2HeaderBlock11HeaderValue6AppendEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::HeaderValue"* %43, i8* %46, i64 %47)
  br label %48

48:                                               ; preds = %38, %27
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4spdy16Http2HeaderBlock19EstimateMemoryUsageEv(%"class.spdy::Http2HeaderBlock"* nocapture readnone) local_unnamed_addr #5 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4spdy16Http2HeaderBlock15bytes_allocatedEv(%"class.spdy::Http2HeaderBlock"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 1, i32 0, i32 2, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare dereferenceable(40) %"class.spdy::SpdySimpleArena"* @_ZN4spdy15SpdySimpleArenaaSEOS0_(%"class.spdy::SpdySimpleArena"*, %"class.spdy::SpdySimpleArena"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4spdy15SpdySimpleArenaD1Ev(%"class.spdy::SpdySimpleArena"*) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN4spdy15SpdySimpleArena5ResetEv(%"class.spdy::SpdySimpleArena"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"struct.std::__1::pair.11"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::container_internal::CompressedTuple"* %3 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %4, i8* %6, i64 %8)
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %11 = bitcast %"class.absl::container_internal::raw_hash_set"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %9, 7
  %16 = lshr i64 %12, 12
  %17 = xor i64 %16, %15
  %18 = trunc i64 %9 to i8
  %19 = and i8 %18, 127
  %20 = insertelement <16 x i8> undef, i8 %19, i32 0
  %21 = shufflevector <16 x i8> %20, <16 x i8> undef, <16 x i32> zeroinitializer
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %23 = inttoptr i64 %12 to i8*
  br label %24

24:                                               ; preds = %67, %2
  %25 = phi i8* [ %23, %2 ], [ %70, %67 ]
  %26 = phi i64 [ %17, %2 ], [ %69, %67 ]
  %27 = phi i64 [ 0, %2 ], [ %68, %67 ]
  %28 = and i64 %26, %14
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %21, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %63, label %35

35:                                               ; preds = %24
  %36 = zext i16 %33 to i32
  br label %37

37:                                               ; preds = %53, %35
  %38 = phi i32 [ %55, %53 ], [ %36, %35 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #14, !range !35
  %40 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %22, align 8
  %41 = zext i32 %39 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %14
  %44 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %40, i64 %43
  %45 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %45, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %7, align 8
  %52 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %47, i64 %49, i8* %50, i64 %51) #14
  br i1 %52, label %57, label %53, !prof !24

53:                                               ; preds = %37
  %54 = add i32 %38, -1
  %55 = and i32 %54, %38
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %37

57:                                               ; preds = %37
  %58 = load i8*, i8** %10, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %43
  %60 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %60, i64 %43
  %62 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %62) #14
  br label %71

63:                                               ; preds = %53, %24
  %64 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71, !prof !34

67:                                               ; preds = %63
  %68 = add i64 %27, 16
  %69 = add i64 %68, %28
  %70 = load i8*, i8** %10, align 8
  br label %24

71:                                               ; preds = %63, %57
  %72 = phi %"struct.std::__1::pair.11"** [ %61, %57 ], [ undef, %63 ]
  %73 = phi i8* [ %59, %57 ], [ null, %63 ]
  %74 = insertvalue { i8*, %"struct.std::__1::pair.11"** } undef, i8* %73, 0
  %75 = insertvalue { i8*, %"struct.std::__1::pair.11"** } %74, %"struct.std::__1::pair.11"** %72, 1
  ret { i8*, %"struct.std::__1::pair.11"** } %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = icmp eq i8* %1, null
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #14, !alias.scope !36
  br label %33

12:                                               ; preds = %3
  %13 = icmp ugt i64 %2, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #19
  unreachable

16:                                               ; preds = %12
  %17 = icmp ult i64 %2, 23
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %2, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #18
  store i8* %21, i8** %6, align 8, !alias.scope !36
  %22 = or i64 %20, -9223372036854775808
  store i64 %22, i64* %8, align 8, !alias.scope !36
  store i64 %2, i64* %7, align 8, !alias.scope !36
  br label %28

23:                                               ; preds = %16
  %24 = trunc i64 %2 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !36
  %27 = icmp eq i64 %2, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23, %18
  %29 = phi i8* [ %21, %18 ], [ %5, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %1, i64 %2, i1 false) #14
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %5, %23 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  store i8 0, i8* %32, align 1
  br label %33

33:                                               ; preds = %11, %30
  call void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %4) #14
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = zext i8 %36 to i64
  %40 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  br label %47

41:                                               ; preds = %33
  %42 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %7, align 8
  %45 = icmp sgt i64 %44, -1
  br i1 %45, label %47, label %46, !prof !24

46:                                               ; preds = %41
  call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %38, %41
  %48 = phi i64 [ %43, %41 ], [ %40, %38 ]
  %49 = phi i64 [ %44, %41 ], [ %39, %38 ]
  %50 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %51 = inttoptr i64 %48 to i8*
  %52 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %50, i8* %51, i64 %49) #14
  %53 = add i64 %52, %49
  %54 = zext i64 %53 to i128
  %55 = mul nuw i128 %54, 11376068507788127593
  %56 = lshr i128 %55, 64
  %57 = xor i128 %56, %55
  %58 = trunc i128 %57 to i64
  %59 = load i8, i8* %35, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %47
  %62 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %47, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i64 %58
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #14

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #15

; Function Attrs: nounwind
declare zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8*, i64, i8*, i64) local_unnamed_addr #9

declare void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !34

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #14
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #14
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #3

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.4"*, %"class.absl::string_view"*, %"class.absl::string_view"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.absl::string_view"* %2 to i64
  %5 = ptrtoint %"class.absl::string_view"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.absl::string_view"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.absl::string_view"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.absl::string_view"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %22
  %25 = select i1 %23, %"class.absl::string_view"* %24, %"class.absl::string_view"* %2
  %26 = ptrtoint %"class.absl::string_view"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.absl::string_view"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.absl::string_view"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #14
  %42 = inttoptr i64 %35 to %"class.absl::string_view"*
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %42, i64 %39
  %44 = ptrtoint %"class.absl::string_view"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %16, i64 %28
  store %"class.absl::string_view"* %48, %"class.absl::string_view"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.absl::string_view"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  %55 = bitcast %"class.std::__1::vector.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #14
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #18
  %75 = bitcast i8* %74 to %"class.absl::string_view"*
  %76 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.absl::string_view"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.4"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %75, i64 %72
  store %"class.absl::string_view"* %79, %"class.absl::string_view"** %8, align 8
  %80 = bitcast %"class.absl::string_view"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.absl::string_view"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #14
  %86 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %75, i64 %84
  %87 = ptrtoint %"class.absl::string_view"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE22find_or_prepare_insertIS3_EENS6_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::container_internal::CompressedTuple"* %3 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %4, i8* %6, i64 %8)
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %11 = bitcast %"class.absl::container_internal::raw_hash_set"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %9, 7
  %16 = lshr i64 %12, 12
  %17 = xor i64 %16, %15
  %18 = trunc i64 %9 to i8
  %19 = and i8 %18, 127
  %20 = insertelement <16 x i8> undef, i8 %19, i32 0
  %21 = shufflevector <16 x i8> %20, <16 x i8> undef, <16 x i32> zeroinitializer
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %23 = inttoptr i64 %12 to i8*
  br label %24

24:                                               ; preds = %61, %2
  %25 = phi i8* [ %23, %2 ], [ %64, %61 ]
  %26 = phi i64 [ %17, %2 ], [ %63, %61 ]
  %27 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %28 = and i64 %26, %14
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %21, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %57, label %35

35:                                               ; preds = %24
  %36 = zext i16 %33 to i32
  br label %37

37:                                               ; preds = %35, %53
  %38 = phi i32 [ %55, %53 ], [ %36, %35 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #14, !range !35
  %40 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %22, align 8
  %41 = zext i32 %39 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %14
  %44 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %40, i64 %43
  %45 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %45, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %7, align 8
  %52 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %47, i64 %49, i8* %50, i64 %51) #14
  br i1 %52, label %67, label %53, !prof !24

53:                                               ; preds = %37
  %54 = add i32 %38, -1
  %55 = and i32 %54, %38
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %37

57:                                               ; preds = %53, %24
  %58 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65, !prof !34

61:                                               ; preds = %57
  %62 = add i64 %27, 16
  %63 = add i64 %62, %28
  %64 = load i8*, i8** %10, align 8
  br label %24

65:                                               ; preds = %57
  %66 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %9)
  br label %67

67:                                               ; preds = %37, %65
  %68 = phi i64 [ %66, %65 ], [ %43, %37 ]
  %69 = phi i8 [ 1, %65 ], [ 0, %37 ]
  %70 = insertvalue { i64, i8 } undef, i64 %68, 0
  %71 = insertvalue { i64, i8 } %70, i8 %69, 1
  ret { i64, i8 } %71
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #14, !range !35
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !24

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #14
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #14
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #14
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #14, !range !35
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 3
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #18
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"struct.std::__1::pair.11"*** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %94, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %27 = bitcast %"class.absl::container_internal::CompressedTuple"* %26 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  br label %29

28:                                               ; preds = %90
  br i1 %24, label %94, label %93

29:                                               ; preds = %25, %90
  %30 = phi i64 [ 0, %25 ], [ %91, %90 ]
  %31 = getelementptr inbounds i8, i8* %4, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp sgt i8 %32, -1
  br i1 %33, label %34, label %90

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, i64 %30
  %36 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %36, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %36, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %27, i8* %38, i64 %40) #14
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %46, %44
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %34, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %34 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %34 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %34
  %68 = phi i64 [ %48, %34 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %34 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #14, !range !35
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = trunc i64 %41 to i8
  %76 = and i8 %75, 127
  %77 = getelementptr inbounds i8, i8* %42, i64 %74
  store i8 %76, i8* %77, align 1
  %78 = load i8*, i8** %3, align 8
  %79 = add i64 %74, -15
  %80 = load i64, i64* %7, align 8
  %81 = and i64 %79, %80
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %76, i8* %84, align 1
  %85 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %5, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %85, i64 %74
  %87 = bitcast %"struct.std::__1::pair.11"** %35 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"struct.std::__1::pair.11"** %86 to i64*
  store i64 %88, i64* %89, align 8
  br label %90

90:                                               ; preds = %29, %67
  %91 = add nuw i64 %30, 1
  %92 = icmp eq i64 %91, %8
  br i1 %92, label %28, label %29

93:                                               ; preds = %28
  tail call void @_ZdlPv(i8* %4) #18
  br label %94

94:                                               ; preds = %2, %28, %93
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #16 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #14
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %10 = bitcast %"class.absl::container_internal::CompressedTuple"* %9 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %20

12:                                               ; preds = %124, %1
  %13 = phi i64 [ 0, %1 ], [ %126, %124 ]
  %14 = lshr i64 %13, 3
  %15 = sub i64 %13, %14
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  ret void

20:                                               ; preds = %8, %124
  %21 = phi i64 [ 0, %8 ], [ %126, %124 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %124

26:                                               ; preds = %20
  %27 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %11, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %27, i64 %21
  %29 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %29, i64 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %29, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %10, i8* %31, i64 %33) #14
  %35 = load i8*, i8** %2, align 8
  %36 = load i64, i64* %4, align 8
  %37 = lshr i64 %34, 7
  %38 = ptrtoint i8* %35 to i64
  %39 = lshr i64 %38, 12
  %40 = xor i64 %39, %37
  %41 = and i64 %40, %36
  %42 = getelementptr inbounds i8, i8* %35, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %36
  %54 = getelementptr inbounds i8, i8* %35, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #14, !range !35
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %36
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %36
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %84, !prof !24

73:                                               ; preds = %60
  %74 = trunc i64 %34 to i8
  %75 = and i8 %74, 127
  %76 = getelementptr inbounds i8, i8* %35, i64 %21
  store i8 %75, i8* %76, align 1
  %77 = load i8*, i8** %2, align 8
  %78 = add i64 %21, -15
  %79 = load i64, i64* %4, align 8
  %80 = and i64 %79, %78
  %81 = and i64 %79, 15
  %82 = add i64 %80, %81
  %83 = getelementptr inbounds i8, i8* %77, i64 %82
  store i8 %75, i8* %83, align 1
  br label %124

84:                                               ; preds = %60
  %85 = getelementptr inbounds i8, i8* %35, i64 %67
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, -128
  %88 = trunc i64 %34 to i8
  %89 = and i8 %88, 127
  store i8 %89, i8* %85, align 1
  %90 = load i8*, i8** %2, align 8
  %91 = add i64 %67, -15
  %92 = load i64, i64* %4, align 8
  %93 = and i64 %92, %91
  %94 = and i64 %92, 15
  %95 = add i64 %93, %94
  %96 = getelementptr inbounds i8, i8* %90, i64 %95
  store i8 %89, i8* %96, align 1
  %97 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %11, align 8
  br i1 %87, label %98, label %113

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %97, i64 %67
  %100 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %97, i64 %21
  %101 = bitcast %"struct.std::__1::pair.11"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"struct.std::__1::pair.11"** %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = load i8*, i8** %2, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 %21
  store i8 -128, i8* %105, align 1
  %106 = load i8*, i8** %2, align 8
  %107 = add i64 %21, -15
  %108 = load i64, i64* %4, align 8
  %109 = and i64 %108, %107
  %110 = and i64 %108, 15
  %111 = add i64 %109, %110
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  store i8 -128, i8* %112, align 1
  br label %124

113:                                              ; preds = %84
  %114 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %97, i64 %21
  %115 = bitcast %"struct.std::__1::pair.11"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %97, i64 %67
  %118 = bitcast %"struct.std::__1::pair.11"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %115, align 8
  %120 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %11, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %120, i64 %67
  %122 = bitcast %"struct.std::__1::pair.11"** %121 to i64*
  store i64 %116, i64* %122, align 8
  %123 = add i64 %21, -1
  br label %124

124:                                              ; preds = %73, %113, %98, %20
  %125 = phi i64 [ %21, %20 ], [ %21, %73 ], [ %21, %98 ], [ %123, %113 ]
  %126 = add i64 %125, 1
  %127 = load i64, i64* %4, align 8
  %128 = icmp eq i64 %126, %127
  br i1 %128, label %12, label %20
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #3

declare void @_ZN4absl16strings_internal12AppendPiecesEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"*, %"class.absl::string_view"*, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %21, %5
  %9 = phi i64 [ %3, %5 ], [ %22, %21 ]
  %10 = phi i64 [ 0, %5 ], [ %23, %21 ]
  %11 = load i8*, i8** %6, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = load i8, i8* %12, align 1
  %14 = icmp sgt i8 %13, -1
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %7, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %16, i64 %10
  %18 = bitcast %"struct.std::__1::pair.11"** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  %20 = load i64, i64* %2, align 8
  br label %21

21:                                               ; preds = %15, %8
  %22 = phi i64 [ %9, %8 ], [ %20, %15 ]
  %23 = add i64 %10, 1
  %24 = icmp eq i64 %23, %22
  br i1 %24, label %25, label %8

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %26) #18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %27 = bitcast %"struct.std::__1::pair.11"*** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #14
  br label %64

28:                                               ; preds = %1
  %29 = icmp eq i64 %3, 0
  br i1 %29, label %64, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %47

33:                                               ; preds = %60
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = add i64 %61, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 -128, i64 %37, i1 false) #14
  %38 = load i8*, i8** %35, align 8
  %39 = load i64, i64* %2, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8 -1, i8* %40, align 1
  %41 = load i64, i64* %2, align 8
  %42 = lshr i64 %41, 3
  %43 = sub i64 %41, %42
  %44 = load i64, i64* %34, align 8
  %45 = sub i64 %43, %44
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  br label %64

47:                                               ; preds = %30, %60
  %48 = phi i64 [ %3, %30 ], [ %61, %60 ]
  %49 = phi i64 [ 0, %30 ], [ %62, %60 ]
  %50 = load i8*, i8** %31, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = icmp sgt i8 %52, -1
  br i1 %53, label %54, label %60

54:                                               ; preds = %47
  %55 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %32, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %55, i64 %49
  %57 = bitcast %"struct.std::__1::pair.11"** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #18
  %59 = load i64, i64* %2, align 8
  br label %60

60:                                               ; preds = %47, %54
  %61 = phi i64 [ %48, %47 ], [ %59, %54 ]
  %62 = add i64 %49, 1
  %63 = icmp eq i64 %62, %61
  br i1 %63, label %33, label %47

64:                                               ; preds = %28, %33, %25
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19make_pairIRN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19make_pairIRN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__14listINS_4pairIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__14listINS_4pairIN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!9 = !{!10, !12, !14, !16, !18, !20, !22}
!10 = distinct !{!10, !11, !"_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE19EmplaceDecomposableclIS3_JRKNS4_21piecewise_construct_tENS4_5tupleIJOS3_EEENSQ_IJOSC_EEEEEENS6_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE19EmplaceDecomposableclIS3_JRKNS4_21piecewise_construct_tENS4_5tupleIJOS3_EEENSQ_IJOSC_EEEEEENS6_INSK_8iteratorEbEERKT_DpOT0_"}
!12 = distinct !{!12, !13, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS6_4pairIS5_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENSA_19StringPieceCaseHashENSA_20StringPieceCaseEqualENS6_9allocatorINS8_IKS5_SE_EEEEE19EmplaceDecomposableEOS5_NS6_5tupleIJOSE_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNS6_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NS8_ISW_SX_EE: argument 0"}
!13 = distinct !{!13, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS6_4pairIS5_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENSA_19StringPieceCaseHashENSA_20StringPieceCaseEqualENS6_9allocatorINS8_IKS5_SE_EEEEE19EmplaceDecomposableEOS5_NS6_5tupleIJOSE_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNS6_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NS8_ISW_SX_EE"}
!14 = distinct !{!14, !15, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS5_4pairIS4_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS9_19StringPieceCaseHashENS9_20StringPieceCaseEqualENS5_9allocatorINS7_IKS4_SD_EEEEE19EmplaceDecomposableEJNS7_IS4_SD_EEEEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSO_DpOSP_: argument 0"}
!15 = distinct !{!15, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS5_4pairIS4_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS9_19StringPieceCaseHashENS9_20StringPieceCaseEqualENS5_9allocatorINS7_IKS4_SD_EEEEE19EmplaceDecomposableEJNS7_IS4_SD_EEEEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSO_DpOSP_"}
!16 = distinct !{!16, !17, !"_ZN4absl18container_internal17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS3_4pairIS2_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEE5applyINS0_12raw_hash_setISC_NS7_19StringPieceCaseHashENS7_20StringPieceCaseEqualENS3_9allocatorINS5_IKS2_SB_EEEEE19EmplaceDecomposableEJNS5_IS2_SB_EEEEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSO_DpOSP_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl18container_internal17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS3_4pairIS2_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEE5applyINS0_12raw_hash_setISC_NS7_19StringPieceCaseHashENS7_20StringPieceCaseEqualENS3_9allocatorINS5_IKS2_SB_EEEEE19EmplaceDecomposableEJNS5_IS2_SB_EEEEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSO_DpOSP_"}
!18 = distinct !{!18, !19, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEEvE5applyINS0_12raw_hash_setISD_NS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE19EmplaceDecomposableEJNS6_IS3_SC_EEESD_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSR_DpOSS_: argument 0"}
!19 = distinct !{!19, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEEvE5applyINS0_12raw_hash_setISD_NS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE19EmplaceDecomposableEJNS6_IS3_SC_EEESD_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSR_DpOSS_"}
!20 = distinct !{!20, !21, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE7emplaceIJNS6_IS3_SC_EEELi0EEENS6_INSK_8iteratorEbEEDpOT_: argument 0"}
!21 = distinct !{!21, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE7emplaceIJNS6_IS3_SC_EEELi0EEENS6_INSK_8iteratorEbEEDpOT_"}
!22 = distinct !{!22, !23, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE6insertEONS6_IS3_SC_EE: argument 0"}
!23 = distinct !{!23, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE6insertEONS6_IS3_SC_EE"}
!24 = !{!"branch_weights", i32 2000, i32 1}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__19make_pairIRN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__19make_pairIRN4absl11string_viewEN4spdy16Http2HeaderBlock11HeaderValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4spdy16Http2HeaderBlock5beginEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4spdy16Http2HeaderBlock5beginEv"}
!34 = !{!"branch_weights", i32 1, i32 2000}
!35 = !{i32 0, i32 33}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!38 = distinct !{!38, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!39 = distinct !{!39, !40, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE: argument 0"}
!40 = distinct !{!40, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE"}
