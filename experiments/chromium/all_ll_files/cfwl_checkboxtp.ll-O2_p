; ModuleID = '../../third_party/pdfium/xfa/fwl/theme/cfwl_checkboxtp.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/theme/cfwl_checkboxtp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_CheckBoxTP = type { %class.CFWL_WidgetTP, %"class.std::__1::unique_ptr.55" }
%class.CFWL_WidgetTP = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFDE_TextOut* }
%class.CFDE_TextOut = type { %"class.std::__1::unique_ptr.0", %"class.fxcrt::RetainPtr", float, float, float, float, i8, %struct.FDE_TextStyle, %"class.std::__1::vector", i32, i32, %"class.fxcrt::WideString", %class.CFX_Matrix, %"class.std::__1::deque", i32, i64, i32, %"class.std::__1::vector.39" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CFGAS_TxtBreak* }
%class.CFGAS_TxtBreak = type opaque
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.11" }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::__split_buffer" = type { %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.std::__1::__compressed_pair.30" }
%"class.CFDE_TextOut::Line" = type { i8, %"class.std::__1::deque.17" }
%"class.std::__1::deque.17" = type { %"class.std::__1::__deque_base.18" }
%"class.std::__1::__deque_base.18" = type { %"struct.std::__1::__split_buffer.19", i64, %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::__split_buffer.19" = type { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"class.std::__1::__compressed_pair.20" }
%"struct.CFDE_TextOut::Piece" = type <{ i64, i64, i32, %class.CFX_RectF, [4 x i8] }>
%class.CFX_RectF = type { float, float, float, float }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.CFDE_TextOut::Piece"** }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.CFDE_TextOut::Line"** }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.41" }
%class.TextCharPos = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %class.TextCharPos* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.CFWL_WidgetTP::CColorData"* }
%"struct.CFWL_WidgetTP::CColorData" = type { [4 x i32], [4 x i32], [4 x i32], [4 x i32] }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.60" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.FX_PATHPOINT* }
%class.CFWL_ThemeText = type { %class.CFWL_ThemePart, i8, %struct.FDE_TextStyle, %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.74" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.68" }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.68" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.71", %"class.cppgc::internal::BasicMember.72", %"class.cppgc::internal::BasicMember.73" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.70" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.71" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.72" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.73" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.74" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.75", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.85" }
%"class.fxcrt::UnownedPtr.75" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.76" }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { float*, float*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.83", %"class.fxcrt::UnownedPtr.84" }
%"class.fxcrt::UnownedPtr.83" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.84" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::unique_ptr.87"*, %"class.std::__1::unique_ptr.87"*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::unique_ptr.87" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::unique_ptr.87"* }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.93", %"class.fxcrt::UnownedPtr.74" }
%"class.fxcrt::UnownedPtr.93" = type { %class.CFGAS_GEPath* }

@_ZTV15CFWL_CheckBoxTP = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_CheckBoxTP*)* @_ZN15CFWL_CheckBoxTPD2Ev to i8*), i8* bitcast (void (%class.CFWL_CheckBoxTP*)* @_ZN15CFWL_CheckBoxTPD0Ev to i8*), i8* bitcast (void (%class.CFWL_CheckBoxTP*, %class.CFWL_ThemeBackground*)* @_ZN15CFWL_CheckBoxTP14DrawBackgroundERK20CFWL_ThemeBackground to i8*), i8* bitcast (void (%class.CFWL_CheckBoxTP*, %class.CFWL_ThemeText*)* @_ZN15CFWL_CheckBoxTP8DrawTextERK14CFWL_ThemeText to i8*)] }, align 8

@_ZN15CFWL_CheckBoxTPC1Ev = hidden unnamed_addr alias void (%class.CFWL_CheckBoxTP*), void (%class.CFWL_CheckBoxTP*)* @_ZN15CFWL_CheckBoxTPC2Ev
@_ZN15CFWL_CheckBoxTPD1Ev = hidden unnamed_addr alias void (%class.CFWL_CheckBoxTP*), void (%class.CFWL_CheckBoxTP*)* @_ZN15CFWL_CheckBoxTPD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTPC2Ev(%class.CFWL_CheckBoxTP*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTPC2Ev(%class.CFWL_WidgetTP* %2) #6
  %3 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15CFWL_CheckBoxTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.55"* %4 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

declare void @_ZN13CFWL_WidgetTPC2Ev(%class.CFWL_WidgetTP*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTPD2Ev(%class.CFWL_CheckBoxTP*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15CFWL_CheckBoxTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %3, align 8
  store %class.CFGAS_GEPath* null, %class.CFGAS_GEPath** %3, align 8
  %5 = icmp eq %class.CFGAS_GEPath* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %4) #6
  %7 = bitcast %class.CFGAS_GEPath* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP* %9) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTPD0Ev(%class.CFWL_CheckBoxTP*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15CFWL_CheckBoxTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %3, align 8
  store %class.CFGAS_GEPath* null, %class.CFGAS_GEPath** %3, align 8
  %5 = icmp eq %class.CFGAS_GEPath* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %4) #6
  %7 = bitcast %class.CFGAS_GEPath* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP* %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP8DrawTextERK14CFWL_ThemeText(%class.CFWL_CheckBoxTP*, %class.CFWL_ThemeText* dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTP20EnsureTTOInitializedEv(%class.CFWL_WidgetTP* %3) #6
  %4 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 8
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 -16777216, i32 -5461863
  %11 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %5, i64 0, i32 9
  store i32 %10, i32* %11, align 8
  tail call void @_ZN13CFWL_WidgetTP8DrawTextERK14CFWL_ThemeText(%class.CFWL_WidgetTP* %3, %class.CFWL_ThemeText* dereferenceable(88) %1) #6
  ret void
}

declare void @_ZN13CFWL_WidgetTP20EnsureTTOInitializedEv(%class.CFWL_WidgetTP*) local_unnamed_addr #1

declare void @_ZN13CFWL_WidgetTP8DrawTextERK14CFWL_ThemeText(%class.CFWL_WidgetTP*, %class.CFWL_ThemeText* dereferenceable(88)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP13DrawSignCheckEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFX_Matrix, align 16
  %7 = alloca %class.CFGAS_GEColor, align 8
  %8 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %9 = load float, float* %8, align 4
  tail call void @_ZN15CFWL_CheckBoxTP26EnsureCheckPathInitializedEf(%class.CFWL_CheckBoxTP* %0, float %9)
  %10 = bitcast %class.CFX_Matrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 0
  %12 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 1
  %13 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 2
  %14 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 3
  %15 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 4
  %16 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 5
  %17 = bitcast %class.CFX_Matrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %17, align 16
  store float 0.000000e+00, float* %15, align 16
  store float 0.000000e+00, float* %16, align 4
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %21 = load float, float* %20, align 4
  call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* nonnull %6, float %19, float %21) #6
  %22 = load float, float* %11, align 16, !noalias !2
  %23 = load float, float* %12, align 4, !noalias !2
  %24 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 2
  %25 = bitcast %class.CFX_Matrix* %4 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4, !noalias !2
  %27 = shufflevector <2 x float> %26, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %28 = bitcast float* %24 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4, !noalias !2
  %30 = shufflevector <2 x float> %29, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %31 = load float, float* %13, align 8, !noalias !2
  %32 = load float, float* %14, align 4, !noalias !2
  %33 = insertelement <4 x float> undef, float %22, i32 0
  %34 = shufflevector <4 x float> %33, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %35 = extractelement <2 x float> %26, i32 0
  %36 = extractelement <2 x float> %26, i32 1
  %37 = shufflevector <4 x float> %34, <4 x float> %27, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %38 = insertelement <4 x float> undef, float %35, i32 0
  %39 = insertelement <4 x float> %38, float %36, i32 1
  %40 = insertelement <4 x float> %39, float %31, i32 2
  %41 = insertelement <4 x float> %40, float %31, i32 3
  %42 = fmul <4 x float> %37, %41
  %43 = insertelement <4 x float> undef, float %23, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %45 = extractelement <2 x float> %29, i32 0
  %46 = extractelement <2 x float> %29, i32 1
  %47 = shufflevector <4 x float> %44, <4 x float> %30, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %48 = insertelement <4 x float> undef, float %45, i32 0
  %49 = insertelement <4 x float> %48, float %46, i32 1
  %50 = insertelement <4 x float> %49, float %32, i32 2
  %51 = insertelement <4 x float> %50, float %32, i32 3
  %52 = fmul <4 x float> %47, %51
  %53 = fadd <4 x float> %42, %52
  %54 = load float, float* %15, align 16, !noalias !2
  %55 = fmul float %35, %54
  %56 = load float, float* %16, align 4, !noalias !2
  %57 = fmul float %45, %56
  %58 = fadd float %55, %57
  %59 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %60 = load float, float* %59, align 4, !noalias !2
  %61 = fadd float %60, %58
  %62 = fmul float %36, %54
  %63 = fmul float %46, %56
  %64 = fadd float %62, %63
  %65 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %66 = load float, float* %65, align 4, !noalias !2
  %67 = fadd float %64, %66
  %68 = bitcast %class.CFX_Matrix* %6 to <4 x float>*
  store <4 x float> %53, <4 x float>* %68, align 16
  store float %61, float* %15, align 16
  store float %67, float* %16, align 4
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  %69 = bitcast %class.CFGAS_GEColor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %7, i32 %3) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %7) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #6
  %70 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %70, align 8
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* dereferenceable(24) %71, i8 zeroext 2, %class.CFX_Matrix* nonnull dereferenceable(24) %6) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP26EnsureCheckPathInitializedEf(%class.CFWL_CheckBoxTP* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %class.CFX_PTemplate, align 4
  %14 = alloca %class.CFX_PTemplate, align 4
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFX_PTemplate, align 4
  %17 = alloca %class.CFX_PTemplate, align 4
  %18 = alloca %class.CFX_Matrix, align 16
  %19 = getelementptr inbounds %class.CFWL_CheckBoxTP, %class.CFWL_CheckBoxTP* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %22 = icmp eq %class.CFGAS_GEPath* %21, null
  br i1 %22, label %23, label %140

23:                                               ; preds = %2
  %24 = tail call i8* @_Znwm(i64 24) #7
  %25 = bitcast i8* %24 to %class.CFGAS_GEPath*
  tail call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %25) #6
  %26 = ptrtoint i8* %24 to i64
  %27 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.55"* %19 to i64*
  store i64 %26, i64* %28, align 8
  %29 = icmp eq %class.CFGAS_GEPath* %27, null
  %30 = bitcast i8* %24 to %class.CFGAS_GEPath*
  br i1 %29, label %34, label %31

31:                                               ; preds = %23
  tail call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %27) #6
  %32 = bitcast %class.CFGAS_GEPath* %27 to i8*
  tail call void @_ZdlPv(i8* %32) #7
  %33 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi %class.CFGAS_GEPath* [ %33, %31 ], [ %30, %23 ]
  %36 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  %38 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float 0x401AAAAAA0000000, float* %37, align 4
  store float 6.000000e+01, float* %38, align 4
  %39 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %41 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float 0x403638E380000000, float* %40, align 4
  store float 9.375000e+01, float* %41, align 4
  %42 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  %43 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  %44 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float 0x4040AAAAA0000000, float* %43, align 4
  store float 1.000000e+02, float* %44, align 4
  %45 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  %46 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  %47 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float 0x4057555560000000, float* %46, align 4
  store float 6.250000e+00, float* %47, align 4
  %48 = bitcast %class.CFX_PTemplate* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #6
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  %50 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  store float 0x403BC71C80000000, float* %49, align 4
  store float 0x4051DB6DC0000000, float* %50, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %35, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #6
  %51 = load float, float* %37, align 4, !noalias !5
  %52 = fsub float 0x402C924920000000, %51
  %53 = load float, float* %38, align 4, !noalias !5
  %54 = fsub float 0x4051DB6DC0000000, %53
  %55 = fmul float %52, 0x3FE1AC5120000000
  %56 = fmul float %54, 0x3FE1AC5120000000
  %57 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %58 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #6
  %59 = fadd float %51, %55
  %60 = fadd float %53, %56
  %61 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %59, float* %61, align 4, !alias.scope !8
  %62 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %60, float* %62, align 4, !alias.scope !8
  %63 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #6
  %64 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float 0x4034FEB340000000, float* %64, align 4, !alias.scope !11
  %65 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float 0x405589FD40000000, float* %65, align 4, !alias.scope !11
  call void @_ZN12CFGAS_GEPath8BezierToERK13CFX_PTemplateIfES3_S3_(%class.CFGAS_GEPath* %57, %class.CFX_PTemplate* nonnull dereferenceable(8) %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #6
  %66 = load float, float* %40, align 4, !noalias !14
  %67 = fsub float 0x4036BA2E80000000, %66
  %68 = load float, float* %41, align 4, !noalias !14
  %69 = fsub float 1.000000e+02, %68
  %70 = fmul float %67, 0x3FE1AC5120000000
  %71 = fmul float %69, 0x3FE1AC5120000000
  %72 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %73 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %74 = fadd float %66, %70
  %75 = fadd float %68, %71
  %76 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %74, float* %76, align 4, !alias.scope !17
  %77 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  store float %75, float* %77, align 4, !alias.scope !17
  %78 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #6
  %79 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 0
  store float 0x403CBB2020000000, float* %79, align 4, !alias.scope !20
  %80 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  store float 1.000000e+02, float* %80, align 4, !alias.scope !20
  call void @_ZN12CFGAS_GEPath8BezierToERK13CFX_PTemplateIfES3_S3_(%class.CFGAS_GEPath* %72, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, %class.CFX_PTemplate* nonnull dereferenceable(8) %11, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  %81 = load float, float* %43, align 4, !noalias !23
  %82 = fsub float 0x404E79E7C0000000, %81
  %83 = load float, float* %44, align 4, !noalias !23
  %84 = fsub float 2.000000e+01, %83
  %85 = fmul float %82, 0x3FE1AC5120000000
  %86 = fmul float %84, 0x3FE1AC5120000000
  %87 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %88 = bitcast %class.CFX_PTemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #6
  %89 = fadd float %81, %85
  %90 = fadd float %83, %86
  %91 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 0
  store float %89, float* %91, align 4, !alias.scope !26
  %92 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  store float %90, float* %92, align 4, !alias.scope !26
  %93 = bitcast %class.CFX_PTemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #6
  %94 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 0
  store float 0x4052DCCA00000000, float* %94, align 4, !alias.scope !29
  %95 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 1
  store float 0x402BB015C0000000, float* %95, align 4, !alias.scope !29
  call void @_ZN12CFGAS_GEPath8BezierToERK13CFX_PTemplateIfES3_S3_(%class.CFGAS_GEPath* %87, %class.CFX_PTemplate* nonnull dereferenceable(8) %12, %class.CFX_PTemplate* nonnull dereferenceable(8) %13, %class.CFX_PTemplate* nonnull dereferenceable(8) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #6
  %96 = load float, float* %46, align 4, !noalias !32
  %97 = fsub float 0x4047555560000000, %96
  %98 = load float, float* %47, align 4, !noalias !32
  %99 = fsub float 0xC02C924900000000, %98
  %100 = fmul float %97, 0x3FE1AC5120000000
  %101 = fmul float %99, 0x3FE1AC5120000000
  %102 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %103 = bitcast %class.CFX_PTemplate* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #6
  %104 = fadd float %96, %100
  %105 = fadd float %98, %101
  %106 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 0
  store float %104, float* %106, align 4, !alias.scope !35
  %107 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 1
  store float %105, float* %107, align 4, !alias.scope !35
  %108 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #6
  %109 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 0
  store float 0x403CAE21E0000000, float* %109, align 4, !alias.scope !38
  %110 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  store float 0x4051DB6DC0000000, float* %110, align 4, !alias.scope !38
  call void @_ZN12CFGAS_GEPath8BezierToERK13CFX_PTemplateIfES3_S3_(%class.CFGAS_GEPath* %102, %class.CFX_PTemplate* nonnull dereferenceable(8) %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #6
  %111 = load float, float* %49, align 4, !noalias !41
  %112 = fsub float 0x403BC71C80000000, %111
  %113 = load float, float* %50, align 4, !noalias !41
  %114 = fsub float 7.500000e+01, %113
  %115 = fmul float %112, 0x3FE1AC5120000000
  %116 = fmul float %114, 0x3FE1AC5120000000
  %117 = load float, float* %37, align 4, !noalias !44
  %118 = fsub float 0x403C924920000000, %117
  %119 = load float, float* %38, align 4, !noalias !44
  %120 = fsub float 3.000000e+01, %119
  %121 = fmul float %118, 0x3FE1AC5120000000
  %122 = fmul float %120, 0x3FE1AC5120000000
  %123 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  %124 = bitcast %class.CFX_PTemplate* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #6
  %125 = fadd float %111, %115
  %126 = fadd float %113, %116
  %127 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 0
  store float %125, float* %127, align 4, !alias.scope !47
  %128 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 1
  store float %126, float* %128, align 4, !alias.scope !47
  %129 = bitcast %class.CFX_PTemplate* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #6
  %130 = fadd float %117, %121
  %131 = fadd float %119, %122
  %132 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 0
  store float %130, float* %132, align 4, !alias.scope !50
  %133 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 1
  store float %131, float* %133, align 4, !alias.scope !50
  call void @_ZN12CFGAS_GEPath8BezierToERK13CFX_PTemplateIfES3_S3_(%class.CFGAS_GEPath* %123, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, %class.CFX_PTemplate* nonnull dereferenceable(8) %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #6
  %134 = fdiv float %1, 1.000000e+02
  %135 = bitcast %class.CFX_Matrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #6
  %136 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %18, i64 0, i32 4
  %137 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %18, i64 0, i32 5
  %138 = bitcast %class.CFX_Matrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %138, align 16
  store float 0.000000e+00, float* %136, align 16
  store float 0.000000e+00, float* %137, align 4
  call void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix* nonnull %18, float %134, float %134) #6
  %139 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %20, align 8
  call void @_ZN12CFGAS_GEPath11TransformByERK10CFX_Matrix(%class.CFGAS_GEPath* %139, %class.CFX_Matrix* nonnull dereferenceable(24) %18) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %140

140:                                              ; preds = %2, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP14DrawSignCircleEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca %class.CFGAS_GEColor, align 8
  %8 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  call void @_ZN12CFGAS_GEPath10AddEllipseERK9CFX_RectF(%class.CFGAS_GEPath* nonnull %6, %class.CFX_RectF* dereferenceable(16) %2) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  %10 = bitcast %class.CFGAS_GEColor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %7, i32 %3) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %7) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  ret void
}

declare void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath*) unnamed_addr #1

declare void @_ZN12CFGAS_GEPath10AddEllipseERK9CFX_RectF(%class.CFGAS_GEPath*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP13DrawSignCrossEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFGAS_GEColor, align 8
  %12 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %22 = load float, float* %21, align 4
  %23 = fadd float %20, %22
  %24 = bitcast %class.CFX_PTemplate* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = bitcast %class.CFX_RectF* %2 to i32*
  %26 = bitcast float* %19 to i32*
  %27 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  store float %15, float* %27, align 4, !alias.scope !53
  %28 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  store float %20, float* %28, align 4, !alias.scope !53
  %29 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %18, float* %30, align 4
  %31 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %23, float* %31, align 4
  call void @_ZN12CFGAS_GEPath7AddLineERK13CFX_PTemplateIfES3_(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  %32 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  %33 = load i32, i32* %25, align 4
  %34 = bitcast %class.CFX_PTemplate* %9 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %23, float* %35, align 4
  %36 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = load i32, i32* %26, align 4
  %38 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %18, float* %38, align 4
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %40 = bitcast float* %39 to i32*
  store i32 %37, i32* %40, align 4
  call void @_ZN12CFGAS_GEPath7AddLineERK13CFX_PTemplateIfES3_(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  %41 = bitcast %class.CFGAS_GEColor* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %11, i32 %3) #6
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %11) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #6
  call void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics* %1, float 1.000000e+00) #6
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, %class.CFX_Matrix* dereferenceable(24) %4) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  ret void
}

declare void @_ZN12CFGAS_GEPath7AddLineERK13CFX_PTemplateIfES3_(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics*, float) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP15DrawSignDiamondEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFGAS_GEColor, align 8
  %13 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #6
  %14 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  %15 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fadd float %18, %20
  %22 = bitcast %class.CFX_PTemplate* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  %23 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fmul float %16, 5.000000e-01
  %26 = fadd float %25, %24
  %27 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  store float %26, float* %27, align 4
  %28 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  store float %20, float* %28, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  %29 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = bitcast %class.CFX_RectF* %2 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = load float, float* %19, align 4
  %33 = fmul float %18, 5.000000e-01
  %34 = fadd float %33, %32
  %35 = bitcast %class.CFX_PTemplate* %8 to i32*
  store i32 %31, i32* %35, align 4
  %36 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %34, float* %36, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  %37 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  %38 = load float, float* %23, align 4
  %39 = fadd float %25, %38
  %40 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float %39, float* %40, align 4
  %41 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %21, float* %41, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  %42 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  %43 = load float, float* %23, align 4
  %44 = load float, float* %15, align 4
  %45 = fadd float %43, %44
  %46 = load float, float* %19, align 4
  %47 = fadd float %33, %46
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %45, float* %48, align 4
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  store float %47, float* %49, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  %50 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #6
  %51 = load float, float* %23, align 4
  %52 = fadd float %25, %51
  %53 = bitcast float* %19 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 0
  store float %52, float* %55, align 4
  %56 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  %57 = bitcast float* %56 to i32*
  store i32 %54, i32* %57, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  %58 = bitcast %class.CFGAS_GEColor* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %12, i32 %3) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %12) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #6
  ret void
}

declare void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP14DrawSignSquareEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca %class.CFGAS_GEColor, align 8
  %8 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  %10 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %17 = load float, float* %16, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %6, float %11, float %13, float %15, float %17) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  %18 = bitcast %class.CFGAS_GEColor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %7, i32 %3) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %7) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  ret void
}

declare void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath*, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP12DrawSignStarEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca [5 x %class.CFX_PTemplate], align 16
  %8 = bitcast [5 x %class.CFX_PTemplate]* %7 to i8*
  %9 = alloca %class.CFGAS_GEColor, align 8
  %10 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  %12 = bitcast %class.CFX_RectF* %2 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = fadd <2 x float> %13, %16
  %18 = extractelement <2 x float> %13, i32 1
  %19 = extractelement <2 x float> %17, i32 1
  %20 = fsub float %18, %19
  %21 = fadd <2 x float> %13, %17
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #6
  %22 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 0
  %23 = fdiv float %20, 0x3FFCF1BBC0000000
  %24 = fmul <2 x float> %21, <float 5.000000e-01, float 5.000000e-01>
  %25 = shufflevector <2 x float> %24, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %26 = insertelement <2 x float> undef, float %23, i32 0
  %27 = shufflevector <2 x float> %26, <2 x float> undef, <2 x i32> zeroinitializer
  %28 = fmul <2 x float> %27, <float 0x3FEE6F0E20000000, float 0x3FD3C6EF40000000>
  %29 = fmul float %23, 0xBE6777A5C0000000
  %30 = extractelement <2 x float> %28, i32 0
  %31 = insertelement <4 x float> undef, float %30, i32 0
  %32 = extractelement <2 x float> %28, i32 1
  %33 = insertelement <4 x float> %31, float %32, i32 1
  %34 = insertelement <4 x float> %33, float %29, i32 2
  %35 = insertelement <4 x float> %34, float %23, i32 3
  %36 = fadd <4 x float> %25, %35
  %37 = bitcast [5 x %class.CFX_PTemplate]* %7 to <4 x float>*
  store <4 x float> %36, <4 x float>* %37, align 16
  %38 = extractelement <2 x float> %24, i32 0
  %39 = extractelement <2 x float> %24, i32 1
  %40 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 2, i32 0
  %41 = insertelement <4 x float> undef, float %23, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = fmul <4 x float> %42, <float 0xBFEE6F0E40000000, float 0x3FD3C6EE60000000, float 0xBFE2CF22A0000000, float 0xBFE9E377E0000000>
  %44 = shufflevector <2 x float> %24, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %45 = fadd <4 x float> %44, %43
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %45, <4 x float>* %46, align 16
  %47 = fmul float %23, 0x3FE2CF2380000000
  %48 = fmul float %23, 0xBFE9E37740000000
  %49 = fadd float %38, %47
  %50 = fadd float %39, %48
  %51 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 4, i32 0
  store float %49, float* %51, align 16
  %52 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 4, i32 1
  store float %50, float* %52, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %22) #6
  %53 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 2
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* dereferenceable(8) %53) #6
  %54 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* dereferenceable(8) %54) #6
  %55 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 1
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* dereferenceable(8) %55) #6
  %56 = getelementptr inbounds [5 x %class.CFX_PTemplate], [5 x %class.CFX_PTemplate]* %7, i64 0, i64 3
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* dereferenceable(8) %56) #6
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %22) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  %57 = bitcast %class.CFGAS_GEColor* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %9, i32 %3) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %9) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN12CFGAS_GEPath8BezierToERK13CFX_PTemplateIfES3_S3_(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath11TransformByERK10CFX_Matrix(%class.CFGAS_GEPath*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP14DrawBackgroundERK20CFWL_ThemeBackground(%class.CFWL_CheckBoxTP* nocapture, %class.CFWL_ThemeBackground* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 4
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 6
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 514
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 7, i32 0
  %13 = load %class.CFWL_Widget*, %class.CFWL_Widget** %12, align 8
  %14 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 2, i32 0
  %15 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %14, align 8
  %16 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 0
  tail call void @_ZN15CFWL_CheckBoxTP13DrawCheckSignEP11CFWL_WidgetP16CFGAS_GEGraphicsRK9CFX_RectFiRK10CFX_Matrix(%class.CFWL_CheckBoxTP* %0, %class.CFWL_Widget* %13, %class.CFGAS_GEGraphics* %15, %class.CFX_RectF* dereferenceable(16) %16, i32 %8, %class.CFX_Matrix* dereferenceable(24) %17)
  br label %18

18:                                               ; preds = %6, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_CheckBoxTP13DrawCheckSignEP11CFWL_WidgetP16CFGAS_GEGraphicsRK9CFX_RectFiRK10CFX_Matrix(%class.CFWL_CheckBoxTP* nocapture, %class.CFWL_Widget* nocapture readonly, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.CFGAS_GEPath, align 8
  %8 = alloca %class.CFGAS_GEColor, align 8
  %9 = alloca %class.CFGAS_GEPath, align 8
  %10 = alloca %class.CFGAS_GEColor, align 8
  %11 = alloca <4 x float>, align 16
  %12 = bitcast <4 x float>* %11 to %class.CFX_RectF*
  %13 = bitcast <4 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %14 = bitcast %class.CFX_RectF* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 4 %14, i64 16, i1 false)
  %15 = and i32 %4, 512
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 -16777216, i32 -5658199
  %18 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = load <4 x float>, <4 x float>* %11, align 16
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %22 = fmul <2 x float> %21, <float 2.500000e-01, float 2.500000e-01>
  %23 = extractelement <2 x float> %22, i32 0
  %24 = fmul float %23, 2.000000e+00
  %25 = extractelement <2 x float> %22, i32 1
  %26 = fmul float %25, 2.000000e+00
  %27 = insertelement <4 x float> undef, float %23, i32 0
  %28 = insertelement <4 x float> %27, float %25, i32 1
  %29 = insertelement <4 x float> %28, float %24, i32 2
  %30 = insertelement <4 x float> %29, float %26, i32 3
  %31 = fadd <4 x float> %20, %30
  %32 = fsub <4 x float> %20, %30
  %33 = shufflevector <4 x float> %31, <4 x float> %32, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %33, <4 x float>* %11, align 16
  %34 = lshr i32 %19, 10
  %35 = and i32 %34, 7
  %36 = zext i32 %35 to i64
  switch i64 %36, label %55 [
    i64 0, label %37
    i64 1, label %38
    i64 2, label %41
    i64 3, label %42
    i64 4, label %43
    i64 5, label %54
  ]

37:                                               ; preds = %6
  call void @_ZN15CFWL_CheckBoxTP13DrawSignCheckEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* %0, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %12, i32 %17, %class.CFX_Matrix* dereferenceable(24) %5)
  br label %55

38:                                               ; preds = %6
  %39 = bitcast %class.CFGAS_GEPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #6
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %7) #6
  call void @_ZN12CFGAS_GEPath10AddEllipseERK9CFX_RectF(%class.CFGAS_GEPath* nonnull %7, %class.CFX_RectF* nonnull dereferenceable(16) %12) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %2) #6
  %40 = bitcast %class.CFGAS_GEColor* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %8, i32 %17) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEColor* nonnull dereferenceable(24) %8) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %7, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %5) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %2) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #6
  br label %55

41:                                               ; preds = %6
  call void @_ZN15CFWL_CheckBoxTP13DrawSignCrossEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %12, i32 %17, %class.CFX_Matrix* dereferenceable(24) %5)
  br label %55

42:                                               ; preds = %6
  call void @_ZN15CFWL_CheckBoxTP15DrawSignDiamondEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %12, i32 %17, %class.CFX_Matrix* dereferenceable(24) %5)
  br label %55

43:                                               ; preds = %6
  %44 = getelementptr inbounds <4 x float>, <4 x float>* %11, i64 0, i64 0
  %45 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %12, i64 0, i32 3
  %46 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %12, i64 0, i32 2
  %47 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %12, i64 0, i32 1
  %48 = bitcast %class.CFGAS_GEPath* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false) #6
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %9) #6
  %49 = load float, float* %44, align 16
  %50 = load float, float* %47, align 4
  %51 = load float, float* %46, align 8
  %52 = load float, float* %45, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %9, float %49, float %50, float %51, float %52) #6
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %2) #6
  %53 = bitcast %class.CFGAS_GEColor* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %10, i32 %17) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEColor* nonnull dereferenceable(24) %10) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %9, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %5) #6
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %2) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #6
  br label %55

54:                                               ; preds = %6
  call void @_ZN15CFWL_CheckBoxTP12DrawSignStarEP16CFGAS_GEGraphicsRK9CFX_RectFjRK10CFX_Matrix(%class.CFWL_CheckBoxTP* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %12, i32 %17, %class.CFX_Matrix* dereferenceable(24) %5)
  br label %55

55:                                               ; preds = %6, %54, %43, %42, %41, %38, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!7 = distinct !{!7, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!10 = distinct !{!10, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!13 = distinct !{!13, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!16 = distinct !{!16, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!19 = distinct !{!19, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!22 = distinct !{!22, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!25 = distinct !{!25, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!28 = distinct !{!28, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!31 = distinct !{!31, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!34 = distinct !{!34, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!37 = distinct !{!37, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!40 = distinct !{!40, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!43 = distinct !{!43, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!46 = distinct !{!46, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!49 = distinct !{!49, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!52 = distinct !{!52, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!55 = distinct !{!55, !"_ZNK9CFX_RectF7TopLeftEv"}
