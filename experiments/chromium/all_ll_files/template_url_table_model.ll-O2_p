; ModuleID = '../../chrome/browser/ui/search_engines/template_url_table_model.cc'
source_filename = "../../chrome/browser/ui/search_engines/template_url_table_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%class.TemplateURLTableModel = type { %"class.ui::TableModel", %class.TemplateURLServiceObserver, %"class.ui::TableModelObserver"*, %"class.std::__1::vector", %class.TemplateURLService*, i32, i32 }
%"class.ui::TableModel" = type { i32 (...)** }
%class.TemplateURLServiceObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::TableModelObserver" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.TemplateURL**, %class.TemplateURL**, %"class.std::__1::__compressed_pair.53" }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.26", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.47", i32, i32 }
%struct.TemplateURLData = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.10", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.10", %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17", %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.20 }
%union.anon.20 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.28", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.35", i8, [7 x i8] }>
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.30" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.37" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string", %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.TemplateURL** }
%class.TemplateURLService = type { %class.WebDataServiceConsumer, %class.KeyedService, %"class.syncer::SyncableService", %class.PrefService*, %"class.std::__1::unique_ptr.58", %class.scoped_refptr.64, %"class.std::__1::unique_ptr.79", %"class.base::RepeatingCallback", %class.PrefChangeRegistrar, %"class.std::__1::multimap", %"class.std::__1::map.103", %"class.std::__1::vector.112", %"class.base::ObserverList", %"class.std::__1::unique_ptr.133", i8, i8, i8, i32, %"class.std::__1::vector.149", %class.TemplateURL*, %"class.std::__1::unique_ptr.114", i32, i64, %"class.std::__1::unique_ptr.156", i8, i8, i8, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::set", i32, %"class.base::OnceCallbackList", %"class.base::OnceCallback", %class.DefaultSearchManager, i32, i8, %"class.std::__1::basic_string", %"class.base::TimeTicks" }
%class.WebDataServiceConsumer = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.syncer::SyncableService" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%class.PrefService = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.SearchTermsData* }
%class.SearchTermsData = type { i32 (...)** }
%class.scoped_refptr.64 = type { %class.KeywordWebDataService* }
%class.KeywordWebDataService = type { %class.WebDataServiceBase, i64, %"class.std::__1::vector.68", %"class.base::RetainingOneShotTimer" }
%class.WebDataServiceBase = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", %class.scoped_refptr.67 }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.66" }>
%"class.base::RefCountedThreadSafe.66" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.67 = type { %class.WebDatabaseService* }
%class.WebDatabaseService = type opaque
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair"* }
%"class.base::RetainingOneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.65, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.76" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.76" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.TemplateURLServiceClient* }
%class.TemplateURLServiceClient = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.78", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.std::__1::unique_ptr.114"*, %"class.std::__1::unique_ptr.114"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::unique_ptr.114"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.125", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.128" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %class.SearchHostToURLsMap* }
%class.SearchHostToURLsMap = type <{ %"class.std::__1::map.136", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.TemplateURLService::URLVisitedDetails"*, %"struct.TemplateURLService::URLVisitedDetails"*, %"class.std::__1::__compressed_pair.151" }
%"struct.TemplateURLService::URLVisitedDetails" = type <{ %class.GURL, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.TemplateURLService::URLVisitedDetails"* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.TemplateURL* }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.base::Clock"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.syncer::SyncChangeProcessor"* }
%"class.syncer::SyncChangeProcessor" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.syncer::SyncErrorFactory"* }
%"class.syncer::SyncErrorFactory" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.174" }
%"class.std::__1::__tree.174" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallbackList" = type { %"class.base::internal::CallbackListBase", %"class.std::__1::list" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.185" }
%"class.base::WeakPtrFactory.185" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.181" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%class.DefaultSearchManager = type <{ %class.PrefService*, %"class.base::RepeatingCallback.186", %class.PrefChangeRegistrar, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", i8, [7 x i8] }>
%"class.base::RepeatingCallback.186" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %struct.TemplateURLData* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.75" }
%"class.base::time_internal::TimeBase.75" = type { i64 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.21 }
%struct.anon.21 = type { %"struct.std::__1::__padding.22", i8 }
%"struct.std::__1::__padding.22" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN26TemplateURLServiceObserver32OnTemplateURLServiceShuttingDownEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIP11TemplateURLNS_9allocatorIS3_EEEEEaSEOS3_ = comdat any

@_ZTV21TemplateURLTableModel = hidden unnamed_addr constant { [11 x i8*], [6 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%class.TemplateURLTableModel*)* @_ZN21TemplateURLTableModel8RowCountEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.17"*, %class.TemplateURLTableModel*, i32, i32)* @_ZN21TemplateURLTableModel7GetTextEii to i8*), i8* bitcast (void ()* @_ZN2ui10TableModel7GetIconEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string.17"*, %"class.ui::TableModel"*, i32)* @_ZN2ui10TableModel10GetTooltipEi to i8*), i8* bitcast (void (%class.TemplateURLTableModel*, %"class.ui::TableModelObserver"*)* @_ZN21TemplateURLTableModel11SetObserverEPN2ui18TableModelObserverE to i8*), i8* bitcast (i32 (%"class.ui::TableModel"*, i32, i32, i32)* @_ZN2ui10TableModel13CompareValuesEiii to i8*), i8* bitcast (void (%class.TemplateURLTableModel*)* @_ZN21TemplateURLTableModelD2Ev to i8*), i8* bitcast (void (%class.TemplateURLTableModel*)* @_ZN21TemplateURLTableModelD0Ev to i8*), i8* bitcast (void (%class.TemplateURLTableModel*)* @_ZN21TemplateURLTableModel27OnTemplateURLServiceChangedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%class.TemplateURLTableModel*)* @_ZThn8_N21TemplateURLTableModelD1Ev to i8*), i8* bitcast (void (%class.TemplateURLTableModel*)* @_ZThn8_N21TemplateURLTableModelD0Ev to i8*), i8* bitcast (void (%class.TemplateURLTableModel*)* @_ZThn8_N21TemplateURLTableModel27OnTemplateURLServiceChangedEv to i8*), i8* bitcast (void (%class.TemplateURLServiceObserver*)* @_ZN26TemplateURLServiceObserver32OnTemplateURLServiceShuttingDownEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"index >= 0\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"../../chrome/browser/ui/search_engines/template_url_table_model.cc\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"static_cast<size_t>(index) < entries_.size()\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"base::Contains(template_url_service_->GetTemplateURLs(), entries_[index])\00", align 1
@.str.4 = private unnamed_addr constant [113 x i8] c"TemplateURLTableModel is returning a pointer to a TemplateURL that has already been freed by TemplateURLService.\00", align 1
@_ZTVN2ui10TableModelE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN21TemplateURLTableModelC1EP18TemplateURLService = hidden unnamed_addr alias void (%class.TemplateURLTableModel*, %class.TemplateURLService*), void (%class.TemplateURLTableModel*, %class.TemplateURLService*)* @_ZN21TemplateURLTableModelC2EP18TemplateURLService
@_ZN21TemplateURLTableModelD1Ev = hidden unnamed_addr alias void (%class.TemplateURLTableModel*), void (%class.TemplateURLTableModel*)* @_ZN21TemplateURLTableModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModelC2EP18TemplateURLService(%class.TemplateURLTableModel*, %class.TemplateURLService*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui10TableModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.TemplateURLServiceObserver, %class.TemplateURLServiceObserver* %4, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %5) #11
  %6 = bitcast %class.TemplateURLTableModel* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %9 = bitcast %"class.ui::TableModelObserver"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  store %class.TemplateURLService* %1, %class.TemplateURLService** %8, align 8
  tail call void @_ZN18TemplateURLService11AddObserverEP26TemplateURLServiceObserver(%class.TemplateURLService* %1, %class.TemplateURLServiceObserver* %4) #11
  %10 = load %class.TemplateURLService*, %class.TemplateURLService** %8, align 8
  tail call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %10) #11
  tail call void @_ZN21TemplateURLTableModel6ReloadEv(%class.TemplateURLTableModel* %0)
  ret void
}

declare void @_ZN18TemplateURLService11AddObserverEP26TemplateURLServiceObserver(%class.TemplateURLService*, %class.TemplateURLServiceObserver*) local_unnamed_addr #1

declare void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel6ReloadEv(%class.TemplateURLTableModel*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::back_insert_iterator", align 8
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load %class.TemplateURLService*, %class.TemplateURLService** %12, align 8
  call void @_ZN18TemplateURLService15GetTemplateURLsEv(%"class.std::__1::vector"* nonnull sret %5, %class.TemplateURLService* %14) #11
  %15 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11
  %19 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %23 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #11
  %27 = load %class.TemplateURL**, %class.TemplateURL*** %10, align 8
  %28 = load %class.TemplateURL**, %class.TemplateURL*** %11, align 8
  %29 = icmp eq %class.TemplateURL** %27, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %1
  %31 = bitcast %class.TemplateURL*** %17 to i64*
  %32 = bitcast %class.TemplateURL*** %21 to i64*
  br label %52

33:                                               ; preds = %1
  %34 = bitcast %class.TemplateURL*** %21 to i64*
  %35 = bitcast %"class.std::__1::vector"* %7 to i64*
  %36 = bitcast %class.TemplateURL*** %22 to i64*
  %37 = bitcast %class.TemplateURL*** %25 to i64*
  %38 = bitcast %"class.std::__1::vector"* %8 to i64*
  %39 = bitcast %class.TemplateURL*** %26 to i64*
  %40 = bitcast %class.TemplateURL*** %17 to i64*
  %41 = bitcast %"class.std::__1::vector"* %6 to i64*
  %42 = bitcast %class.TemplateURL*** %18 to i64*
  br label %114

43:                                               ; preds = %283
  %44 = load i64, i64* %40, align 8
  %45 = load i64, i64* %41, align 8
  %46 = load i64, i64* %34, align 8
  %47 = load i64, i64* %35, align 8
  %48 = inttoptr i64 %45 to %class.TemplateURL**
  %49 = inttoptr i64 %44 to %class.TemplateURL**
  %50 = inttoptr i64 %47 to %class.TemplateURL**
  %51 = inttoptr i64 %46 to %class.TemplateURL**
  br label %52

52:                                               ; preds = %30, %43
  %53 = phi i64* [ %32, %30 ], [ %34, %43 ]
  %54 = phi i64* [ %31, %30 ], [ %40, %43 ]
  %55 = phi %class.TemplateURL** [ null, %30 ], [ %51, %43 ]
  %56 = phi %class.TemplateURL** [ null, %30 ], [ %50, %43 ]
  %57 = phi %class.TemplateURL** [ null, %30 ], [ %49, %43 ]
  %58 = phi %class.TemplateURL** [ null, %30 ], [ %48, %43 ]
  %59 = phi i64 [ 0, %30 ], [ %47, %43 ]
  %60 = phi i64 [ 0, %30 ], [ %46, %43 ]
  %61 = phi i64 [ 0, %30 ], [ %45, %43 ]
  %62 = phi i64 [ 0, %30 ], [ %44, %43 ]
  %63 = sub i64 %62, %61
  %64 = lshr exact i64 %63, 3
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 5
  store i32 %65, i32* %66, align 8
  %67 = sub i64 %60, %59
  %68 = lshr exact i64 %67, 3
  %69 = trunc i64 %68 to i32
  %70 = add nsw i32 %69, %65
  %71 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 6
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3
  %73 = bitcast %"class.std::__1::vector"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 1
  %76 = bitcast %class.TemplateURL*** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  %78 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector"* %72, %"class.std::__1::vector"** %78, align 8
  %79 = icmp eq %class.TemplateURL** %58, %57
  br i1 %79, label %88, label %80

80:                                               ; preds = %52, %80
  %81 = phi %class.TemplateURL** [ %83, %80 ], [ %58, %52 ]
  %82 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIP11TemplateURLNS_9allocatorIS3_EEEEEaSEOS3_(%"class.std::__1::back_insert_iterator"* nonnull %4, %class.TemplateURL** dereferenceable(8) %81) #11
  %83 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %81, i64 1
  %84 = icmp eq %class.TemplateURL** %83, %57
  br i1 %84, label %85, label %80

85:                                               ; preds = %80
  %86 = load %class.TemplateURL**, %class.TemplateURL*** %20, align 8
  %87 = load %class.TemplateURL**, %class.TemplateURL*** %21, align 8
  br label %88

88:                                               ; preds = %85, %52
  %89 = phi %class.TemplateURL** [ %87, %85 ], [ %55, %52 ]
  %90 = phi %class.TemplateURL** [ %86, %85 ], [ %56, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  %91 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector"* %72, %"class.std::__1::vector"** %92, align 8
  %93 = icmp eq %class.TemplateURL** %90, %89
  br i1 %93, label %99, label %94

94:                                               ; preds = %88, %94
  %95 = phi %class.TemplateURL** [ %97, %94 ], [ %90, %88 ]
  %96 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIP11TemplateURLNS_9allocatorIS3_EEEEEaSEOS3_(%"class.std::__1::back_insert_iterator"* nonnull %3, %class.TemplateURL** dereferenceable(8) %95) #11
  %97 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %95, i64 1
  %98 = icmp eq %class.TemplateURL** %97, %89
  br i1 %98, label %99, label %94

99:                                               ; preds = %94, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  %100 = load %class.TemplateURL**, %class.TemplateURL*** %24, align 8
  %101 = load %class.TemplateURL**, %class.TemplateURL*** %25, align 8
  %102 = bitcast %"class.std::__1::back_insert_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %2, i64 0, i32 0
  store %"class.std::__1::vector"* %72, %"class.std::__1::vector"** %103, align 8
  %104 = icmp eq %class.TemplateURL** %100, %101
  br i1 %104, label %110, label %105

105:                                              ; preds = %99, %105
  %106 = phi %class.TemplateURL** [ %108, %105 ], [ %100, %99 ]
  %107 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIP11TemplateURLNS_9allocatorIS3_EEEEEaSEOS3_(%"class.std::__1::back_insert_iterator"* nonnull %2, %class.TemplateURL** dereferenceable(8) %106) #11
  %108 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %106, i64 1
  %109 = icmp eq %class.TemplateURL** %108, %101
  br i1 %109, label %110, label %105

110:                                              ; preds = %105, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  %111 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 2
  %112 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %111, align 8
  %113 = icmp eq %"class.ui::TableModelObserver"* %112, null
  br i1 %113, label %290, label %286

114:                                              ; preds = %33, %283
  %115 = phi %class.TemplateURL** [ %27, %33 ], [ %284, %283 ]
  %116 = load %class.TemplateURL*, %class.TemplateURL** %115, align 8
  %117 = ptrtoint %class.TemplateURL* %116 to i64
  %118 = load %class.TemplateURLService*, %class.TemplateURLService** %12, align 8
  %119 = call zeroext i1 @_ZNK18TemplateURLService17ShowInDefaultListEPK11TemplateURL(%class.TemplateURLService* %118, %class.TemplateURL* %116) #11
  br i1 %119, label %120, label %173

120:                                              ; preds = %114
  %121 = load %class.TemplateURL**, %class.TemplateURL*** %17, align 8
  %122 = load %class.TemplateURL**, %class.TemplateURL*** %18, align 8
  %123 = icmp eq %class.TemplateURL** %121, %122
  %124 = ptrtoint %class.TemplateURL** %122 to i64
  br i1 %123, label %129, label %125

125:                                              ; preds = %120
  %126 = bitcast %class.TemplateURL** %121 to i64*
  store i64 %117, i64* %126, align 8
  %127 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %121, i64 1
  %128 = ptrtoint %class.TemplateURL** %127 to i64
  store i64 %128, i64* %40, align 8
  br label %283

129:                                              ; preds = %120
  %130 = ptrtoint %class.TemplateURL** %121 to i64
  %131 = load i64, i64* %41, align 8
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 3
  %134 = add nsw i64 %133, 1
  %135 = icmp ugt i64 %134, 2305843009213693951
  br i1 %135, label %136, label %138

136:                                              ; preds = %129
  %137 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %137) #12
  unreachable

138:                                              ; preds = %129
  %139 = sub i64 %124, %131
  %140 = ashr exact i64 %139, 3
  %141 = icmp ult i64 %140, 1152921504606846975
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = ashr exact i64 %139, 2
  %144 = icmp ult i64 %143, %134
  %145 = select i1 %144, i64 %134, i64 %143
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = icmp ugt i64 %145, 2305843009213693951
  br i1 %148, label %149, label %150

149:                                              ; preds = %147
  call void @abort() #12
  unreachable

150:                                              ; preds = %147, %138
  %151 = phi i64 [ %145, %147 ], [ 2305843009213693951, %138 ]
  %152 = shl i64 %151, 3
  %153 = call i8* @_Znwm(i64 %152) #13
  %154 = bitcast i8* %153 to %class.TemplateURL**
  br label %155

155:                                              ; preds = %150, %142
  %156 = phi i64 [ %151, %150 ], [ 0, %142 ]
  %157 = phi i8* [ %153, %150 ], [ null, %142 ]
  %158 = phi %class.TemplateURL** [ %154, %150 ], [ null, %142 ]
  %159 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %158, i64 %133
  %160 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %158, i64 %156
  %161 = ptrtoint %class.TemplateURL** %160 to i64
  %162 = bitcast %class.TemplateURL** %159 to i64*
  store i64 %117, i64* %162, align 8
  %163 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %159, i64 1
  %164 = ptrtoint %class.TemplateURL** %163 to i64
  %165 = ptrtoint %class.TemplateURL** %158 to i64
  %166 = icmp sgt i64 %132, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %155
  %168 = inttoptr i64 %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %168, i64 %132, i1 false) #11
  br label %169

169:                                              ; preds = %167, %155
  store i64 %165, i64* %41, align 8
  store i64 %164, i64* %40, align 8
  store i64 %161, i64* %42, align 8
  %170 = icmp eq i64 %131, 0
  br i1 %170, label %283, label %171

171:                                              ; preds = %169
  %172 = inttoptr i64 %131 to i8*
  call void @_ZdlPv(i8* %172) #13
  br label %283

173:                                              ; preds = %114
  %174 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %116, i64 0, i32 7
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 3
  br i1 %176, label %177, label %230

177:                                              ; preds = %173
  %178 = load %class.TemplateURL**, %class.TemplateURL*** %25, align 8
  %179 = load %class.TemplateURL**, %class.TemplateURL*** %26, align 8
  %180 = icmp eq %class.TemplateURL** %178, %179
  %181 = ptrtoint %class.TemplateURL** %179 to i64
  br i1 %180, label %186, label %182

182:                                              ; preds = %177
  %183 = bitcast %class.TemplateURL** %178 to i64*
  store i64 %117, i64* %183, align 8
  %184 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %178, i64 1
  %185 = ptrtoint %class.TemplateURL** %184 to i64
  store i64 %185, i64* %37, align 8
  br label %283

186:                                              ; preds = %177
  %187 = ptrtoint %class.TemplateURL** %178 to i64
  %188 = load i64, i64* %38, align 8
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 3
  %191 = add nsw i64 %190, 1
  %192 = icmp ugt i64 %191, 2305843009213693951
  br i1 %192, label %193, label %195

193:                                              ; preds = %186
  %194 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %194) #12
  unreachable

195:                                              ; preds = %186
  %196 = sub i64 %181, %188
  %197 = ashr exact i64 %196, 3
  %198 = icmp ult i64 %197, 1152921504606846975
  br i1 %198, label %199, label %207

199:                                              ; preds = %195
  %200 = ashr exact i64 %196, 2
  %201 = icmp ult i64 %200, %191
  %202 = select i1 %201, i64 %191, i64 %200
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %212, label %204

204:                                              ; preds = %199
  %205 = icmp ugt i64 %202, 2305843009213693951
  br i1 %205, label %206, label %207

206:                                              ; preds = %204
  call void @abort() #12
  unreachable

207:                                              ; preds = %204, %195
  %208 = phi i64 [ %202, %204 ], [ 2305843009213693951, %195 ]
  %209 = shl i64 %208, 3
  %210 = call i8* @_Znwm(i64 %209) #13
  %211 = bitcast i8* %210 to %class.TemplateURL**
  br label %212

212:                                              ; preds = %207, %199
  %213 = phi i64 [ %208, %207 ], [ 0, %199 ]
  %214 = phi i8* [ %210, %207 ], [ null, %199 ]
  %215 = phi %class.TemplateURL** [ %211, %207 ], [ null, %199 ]
  %216 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %215, i64 %190
  %217 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %215, i64 %213
  %218 = ptrtoint %class.TemplateURL** %217 to i64
  %219 = bitcast %class.TemplateURL** %216 to i64*
  store i64 %117, i64* %219, align 8
  %220 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %216, i64 1
  %221 = ptrtoint %class.TemplateURL** %220 to i64
  %222 = ptrtoint %class.TemplateURL** %215 to i64
  %223 = icmp sgt i64 %189, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %212
  %225 = inttoptr i64 %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %225, i64 %189, i1 false) #11
  br label %226

226:                                              ; preds = %224, %212
  store i64 %222, i64* %38, align 8
  store i64 %221, i64* %37, align 8
  store i64 %218, i64* %39, align 8
  %227 = icmp eq i64 %188, 0
  br i1 %227, label %283, label %228

228:                                              ; preds = %226
  %229 = inttoptr i64 %188 to i8*
  call void @_ZdlPv(i8* %229) #13
  br label %283

230:                                              ; preds = %173
  %231 = load %class.TemplateURL**, %class.TemplateURL*** %21, align 8
  %232 = load %class.TemplateURL**, %class.TemplateURL*** %22, align 8
  %233 = icmp eq %class.TemplateURL** %231, %232
  %234 = ptrtoint %class.TemplateURL** %232 to i64
  br i1 %233, label %239, label %235

235:                                              ; preds = %230
  %236 = bitcast %class.TemplateURL** %231 to i64*
  store i64 %117, i64* %236, align 8
  %237 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %231, i64 1
  %238 = ptrtoint %class.TemplateURL** %237 to i64
  store i64 %238, i64* %34, align 8
  br label %283

239:                                              ; preds = %230
  %240 = ptrtoint %class.TemplateURL** %231 to i64
  %241 = load i64, i64* %35, align 8
  %242 = sub i64 %240, %241
  %243 = ashr exact i64 %242, 3
  %244 = add nsw i64 %243, 1
  %245 = icmp ugt i64 %244, 2305843009213693951
  br i1 %245, label %246, label %248

246:                                              ; preds = %239
  %247 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %247) #12
  unreachable

248:                                              ; preds = %239
  %249 = sub i64 %234, %241
  %250 = ashr exact i64 %249, 3
  %251 = icmp ult i64 %250, 1152921504606846975
  br i1 %251, label %252, label %260

252:                                              ; preds = %248
  %253 = ashr exact i64 %249, 2
  %254 = icmp ult i64 %253, %244
  %255 = select i1 %254, i64 %244, i64 %253
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %265, label %257

257:                                              ; preds = %252
  %258 = icmp ugt i64 %255, 2305843009213693951
  br i1 %258, label %259, label %260

259:                                              ; preds = %257
  call void @abort() #12
  unreachable

260:                                              ; preds = %257, %248
  %261 = phi i64 [ %255, %257 ], [ 2305843009213693951, %248 ]
  %262 = shl i64 %261, 3
  %263 = call i8* @_Znwm(i64 %262) #13
  %264 = bitcast i8* %263 to %class.TemplateURL**
  br label %265

265:                                              ; preds = %260, %252
  %266 = phi i64 [ %261, %260 ], [ 0, %252 ]
  %267 = phi i8* [ %263, %260 ], [ null, %252 ]
  %268 = phi %class.TemplateURL** [ %264, %260 ], [ null, %252 ]
  %269 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %268, i64 %243
  %270 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %268, i64 %266
  %271 = ptrtoint %class.TemplateURL** %270 to i64
  %272 = bitcast %class.TemplateURL** %269 to i64*
  store i64 %117, i64* %272, align 8
  %273 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %269, i64 1
  %274 = ptrtoint %class.TemplateURL** %273 to i64
  %275 = ptrtoint %class.TemplateURL** %268 to i64
  %276 = icmp sgt i64 %242, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %265
  %278 = inttoptr i64 %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %278, i64 %242, i1 false) #11
  br label %279

279:                                              ; preds = %277, %265
  store i64 %275, i64* %35, align 8
  store i64 %274, i64* %34, align 8
  store i64 %271, i64* %36, align 8
  %280 = icmp eq i64 %241, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %279
  %282 = inttoptr i64 %241 to i8*
  call void @_ZdlPv(i8* %282) #13
  br label %283

283:                                              ; preds = %281, %279, %235, %228, %226, %182, %171, %169, %125
  %284 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %115, i64 1
  %285 = icmp eq %class.TemplateURL** %284, %28
  br i1 %285, label %43, label %114

286:                                              ; preds = %110
  %287 = bitcast %"class.ui::TableModelObserver"* %112 to void (%"class.ui::TableModelObserver"*)***
  %288 = load void (%"class.ui::TableModelObserver"*)**, void (%"class.ui::TableModelObserver"*)*** %287, align 8
  %289 = load void (%"class.ui::TableModelObserver"*)*, void (%"class.ui::TableModelObserver"*)** %288, align 8
  call void %289(%"class.ui::TableModelObserver"* nonnull %112) #11
  br label %290

290:                                              ; preds = %110, %286
  %291 = load %class.TemplateURL**, %class.TemplateURL*** %24, align 8
  %292 = icmp eq %class.TemplateURL** %291, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %290
  %294 = ptrtoint %class.TemplateURL** %291 to i64
  %295 = bitcast %class.TemplateURL*** %25 to i64*
  store i64 %294, i64* %295, align 8
  %296 = bitcast %class.TemplateURL** %291 to i8*
  call void @_ZdlPv(i8* %296) #13
  br label %297

297:                                              ; preds = %290, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %298 = load %class.TemplateURL**, %class.TemplateURL*** %20, align 8
  %299 = icmp eq %class.TemplateURL** %298, null
  br i1 %299, label %303, label %300

300:                                              ; preds = %297
  %301 = ptrtoint %class.TemplateURL** %298 to i64
  store i64 %301, i64* %53, align 8
  %302 = bitcast %class.TemplateURL** %298 to i8*
  call void @_ZdlPv(i8* %302) #13
  br label %303

303:                                              ; preds = %297, %300
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %304 = load %class.TemplateURL**, %class.TemplateURL*** %16, align 8
  %305 = icmp eq %class.TemplateURL** %304, null
  br i1 %305, label %309, label %306

306:                                              ; preds = %303
  %307 = ptrtoint %class.TemplateURL** %304 to i64
  store i64 %307, i64* %54, align 8
  %308 = bitcast %class.TemplateURL** %304 to i8*
  call void @_ZdlPv(i8* %308) #13
  br label %309

309:                                              ; preds = %303, %306
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %310 = load %class.TemplateURL**, %class.TemplateURL*** %10, align 8
  %311 = icmp eq %class.TemplateURL** %310, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %309
  %313 = ptrtoint %class.TemplateURL** %310 to i64
  %314 = bitcast %class.TemplateURL*** %11 to i64*
  store i64 %313, i64* %314, align 8
  %315 = bitcast %class.TemplateURL** %310 to i8*
  call void @_ZdlPv(i8* %315) #13
  br label %316

316:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModelD2Ev(%class.TemplateURLTableModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 1
  %3 = bitcast %class.TemplateURLTableModel* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %5 = load %class.TemplateURLService*, %class.TemplateURLService** %4, align 8
  tail call void @_ZN18TemplateURLService14RemoveObserverEP26TemplateURLServiceObserver(%class.TemplateURLService* %5, %class.TemplateURLServiceObserver* %2) #11
  %6 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %class.TemplateURL**, %class.TemplateURL*** %6, align 8
  %8 = icmp eq %class.TemplateURL** %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %class.TemplateURL** %7 to i64
  %11 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %class.TemplateURL*** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %class.TemplateURL** %7 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %class.TemplateURLServiceObserver, %class.TemplateURLServiceObserver* %2, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %15) #11
  ret void
}

declare void @_ZN18TemplateURLService14RemoveObserverEP26TemplateURLServiceObserver(%class.TemplateURLService*, %class.TemplateURLServiceObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N21TemplateURLTableModelD1Ev(%class.TemplateURLTableModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 -1, i32 5
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to %class.TemplateURLServiceObserver*
  %5 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 16
  %7 = bitcast i32* %6 to %class.TemplateURLService**
  %8 = load %class.TemplateURLService*, %class.TemplateURLService** %7, align 8
  tail call void @_ZN18TemplateURLService14RemoveObserverEP26TemplateURLServiceObserver(%class.TemplateURLService* %8, %class.TemplateURLServiceObserver* %4) #11
  %9 = getelementptr inbounds i32, i32* %2, i64 10
  %10 = bitcast i32* %9 to %class.TemplateURL***
  %11 = load %class.TemplateURL**, %class.TemplateURL*** %10, align 8
  %12 = icmp eq %class.TemplateURL** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = ptrtoint %class.TemplateURL** %11 to i64
  %15 = getelementptr inbounds i32, i32* %2, i64 12
  %16 = bitcast i32* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %class.TemplateURL** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %1, %13
  %19 = bitcast i32* %3 to %"class.base::CheckedObserver"*
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModelD0Ev(%class.TemplateURLTableModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 1
  %3 = bitcast %class.TemplateURLTableModel* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %5 = load %class.TemplateURLService*, %class.TemplateURLService** %4, align 8
  tail call void @_ZN18TemplateURLService14RemoveObserverEP26TemplateURLServiceObserver(%class.TemplateURLService* %5, %class.TemplateURLServiceObserver* %2) #11
  %6 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %class.TemplateURL**, %class.TemplateURL*** %6, align 8
  %8 = icmp eq %class.TemplateURL** %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %class.TemplateURL** %7 to i64
  %11 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %class.TemplateURL*** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %class.TemplateURL** %7 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %class.TemplateURLServiceObserver, %class.TemplateURLServiceObserver* %2, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %15) #11
  %16 = bitcast %class.TemplateURLTableModel* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N21TemplateURLTableModelD0Ev(%class.TemplateURLTableModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 -1, i32 5
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to %class.TemplateURLServiceObserver*
  %5 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTV21TemplateURLTableModel, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 16
  %7 = bitcast i32* %6 to %class.TemplateURLService**
  %8 = load %class.TemplateURLService*, %class.TemplateURLService** %7, align 8
  tail call void @_ZN18TemplateURLService14RemoveObserverEP26TemplateURLServiceObserver(%class.TemplateURLService* %8, %class.TemplateURLServiceObserver* %4) #11
  %9 = getelementptr inbounds i32, i32* %2, i64 10
  %10 = bitcast i32* %9 to %class.TemplateURL***
  %11 = load %class.TemplateURL**, %class.TemplateURL*** %10, align 8
  %12 = icmp eq %class.TemplateURL** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = ptrtoint %class.TemplateURL** %11 to i64
  %15 = getelementptr inbounds i32, i32* %2, i64 12
  %16 = bitcast i32* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %class.TemplateURL** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %1, %13
  %19 = bitcast i32* %3 to %"class.base::CheckedObserver"*
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %19) #11
  %20 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN18TemplateURLService15GetTemplateURLsEv(%"class.std::__1::vector"* sret, %class.TemplateURLService*) local_unnamed_addr #1

declare zeroext i1 @_ZNK18TemplateURLService17ShowInDefaultListEPK11TemplateURL(%class.TemplateURLService*, %class.TemplateURL*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN21TemplateURLTableModel8RowCountEv(%class.TemplateURLTableModel* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3
  %3 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %class.TemplateURL*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel7GetTextEii(%"class.std::__1::basic_string.17"* noalias sret, %class.TemplateURLTableModel* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.17", align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %1, i64 0, i32 3, i32 0, i32 0
  %8 = load %class.TemplateURL**, %class.TemplateURL*** %7, align 8
  %9 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %8, i64 %6
  %10 = load %class.TemplateURL*, %class.TemplateURL** %9, align 8
  %11 = icmp eq i32 %3, 6740
  br i1 %11, label %12, label %395

12:                                               ; preds = %4
  %13 = bitcast %"class.std::__1::basic_string.17"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %10, i64 0, i32 0, i32 23
  %18 = bitcast %"class.std::__1::basic_string.17"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = bitcast %"class.std::__1::basic_string.17"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::basic_string.17"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %24, i64 24, i1 false) #11
  br label %198

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %10, i64 0, i32 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string.17"* %5 to i16*
  %33 = trunc i64 %29 to i8
  %34 = bitcast %"class.std::__1::basic_string.17"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 %33, i8* %35, align 1
  br label %51

36:                                               ; preds = %25
  %37 = icmp ugt i64 %29, 9223372036854775791
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string.17"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #12
  unreachable

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %29, 8
  %42 = and i64 %41, -8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #12
  unreachable

45:                                               ; preds = %40
  %46 = shl i64 %42, 1
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"class.std::__1::basic_string.17"* %5 to i8**
  store i8* %47, i8** %49, align 8
  %50 = or i64 %42, -9223372036854775808
  store i64 %50, i64* %16, align 8
  store i64 %29, i64* %15, align 8
  br label %51

51:                                               ; preds = %45, %31
  %52 = phi i16* [ %32, %31 ], [ %48, %45 ]
  %53 = add nuw nsw i64 %29, 1
  %54 = add i64 %29, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %51
  %57 = add i64 %29, 1
  %58 = getelementptr i16, i16* %52, i64 %57
  %59 = getelementptr i16, i16* %27, i64 %57
  %60 = icmp ult i16* %52, %59
  %61 = icmp ult i16* %27, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %54, -16
  %65 = sub i64 %53, %64
  %66 = getelementptr i16, i16* %27, i64 %64
  %67 = getelementptr i16, i16* %52, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %27, i64 %76
  %79 = getelementptr i16, i16* %52, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !2
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %27, i64 %88
  %90 = getelementptr i16, i16* %52, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !2
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %27, i64 %99
  %101 = getelementptr i16, i16* %52, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !2
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %27, i64 %110
  %112 = getelementptr i16, i16* %52, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !2
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !5, !noalias !2
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !7

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %27, i64 %128
  %131 = getelementptr i16, i16* %52, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !2
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !2
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !5, !noalias !2
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !5, !noalias !2
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !9

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %54, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %56, %51
  %146 = phi i64 [ %53, %56 ], [ %53, %51 ], [ %65, %143 ]
  %147 = phi i16* [ %27, %56 ], [ %27, %51 ], [ %66, %143 ]
  %148 = phi i16* [ %52, %56 ], [ %52, %51 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !11

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !12

198:                                              ; preds = %163, %168, %143, %23
  %199 = call zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"* nonnull %5) #11
  %200 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %1, i64 0, i32 4
  %201 = load %class.TemplateURLService*, %class.TemplateURLService** %200, align 8
  %202 = call %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService* %201) #11
  %203 = icmp eq %class.TemplateURL* %202, %10
  br i1 %203, label %204, label %206

204:                                              ; preds = %198
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"* sret %0, i32 6741, %"class.std::__1::basic_string.17"* nonnull dereferenceable(24) %5) #11
  %205 = bitcast %"class.std::__1::basic_string.17"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %386

206:                                              ; preds = %198
  %207 = bitcast %"class.std::__1::basic_string.17"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %213, label %211

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::basic_string.17"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* nonnull align 8 %13, i64 24, i1 false) #11
  br label %386

213:                                              ; preds = %206
  %214 = load i16*, i16** %14, align 8
  %215 = load i64, i64* %15, align 8
  %216 = icmp ult i64 %215, 11
  br i1 %216, label %217, label %222

217:                                              ; preds = %213
  %218 = bitcast %"class.std::__1::basic_string.17"* %0 to i16*
  %219 = trunc i64 %215 to i8
  %220 = bitcast %"class.std::__1::basic_string.17"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %220, i64 0, i32 1, i32 1
  store i8 %219, i8* %221, align 1
  br label %239

222:                                              ; preds = %213
  %223 = icmp ugt i64 %215, 9223372036854775791
  br i1 %223, label %224, label %226

224:                                              ; preds = %222
  %225 = bitcast %"class.std::__1::basic_string.17"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %225) #12
  unreachable

226:                                              ; preds = %222
  %227 = add nuw nsw i64 %215, 8
  %228 = and i64 %227, -8
  %229 = icmp slt i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %226
  call void @abort() #12
  unreachable

231:                                              ; preds = %226
  %232 = shl i64 %228, 1
  %233 = call i8* @_Znwm(i64 %232) #13
  %234 = bitcast i8* %233 to i16*
  %235 = bitcast %"class.std::__1::basic_string.17"* %0 to i8**
  store i8* %233, i8** %235, align 8
  %236 = or i64 %228, -9223372036854775808
  %237 = getelementptr inbounds %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %215, i64* %238, align 8
  br label %239

239:                                              ; preds = %231, %217
  %240 = phi i16* [ %218, %217 ], [ %234, %231 ]
  %241 = add nuw nsw i64 %215, 1
  %242 = add i64 %215, 1
  %243 = icmp ult i64 %242, 16
  br i1 %243, label %333, label %244

244:                                              ; preds = %239
  %245 = add i64 %215, 1
  %246 = getelementptr i16, i16* %240, i64 %245
  %247 = getelementptr i16, i16* %214, i64 %245
  %248 = icmp ult i16* %240, %247
  %249 = icmp ult i16* %214, %246
  %250 = and i1 %248, %249
  br i1 %250, label %333, label %251

251:                                              ; preds = %244
  %252 = and i64 %242, -16
  %253 = sub i64 %241, %252
  %254 = getelementptr i16, i16* %214, i64 %252
  %255 = getelementptr i16, i16* %240, i64 %252
  %256 = add i64 %252, -16
  %257 = lshr exact i64 %256, 4
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 48
  br i1 %260, label %312, label %261

261:                                              ; preds = %251
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr i16, i16* %214, i64 %264
  %267 = getelementptr i16, i16* %240, i64 %264
  %268 = bitcast i16* %266 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !13
  %270 = getelementptr i16, i16* %266, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !13
  %273 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !16, !noalias !13
  %274 = getelementptr i16, i16* %267, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !16, !noalias !13
  %276 = or i64 %264, 16
  %277 = getelementptr i16, i16* %214, i64 %276
  %278 = getelementptr i16, i16* %240, i64 %276
  %279 = bitcast i16* %277 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !13
  %281 = getelementptr i16, i16* %277, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !13
  %284 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 2, !alias.scope !16, !noalias !13
  %285 = getelementptr i16, i16* %278, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %286, align 2, !alias.scope !16, !noalias !13
  %287 = or i64 %264, 32
  %288 = getelementptr i16, i16* %214, i64 %287
  %289 = getelementptr i16, i16* %240, i64 %287
  %290 = bitcast i16* %288 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !13
  %292 = getelementptr i16, i16* %288, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !13
  %295 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %295, align 2, !alias.scope !16, !noalias !13
  %296 = getelementptr i16, i16* %289, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %297, align 2, !alias.scope !16, !noalias !13
  %298 = or i64 %264, 48
  %299 = getelementptr i16, i16* %214, i64 %298
  %300 = getelementptr i16, i16* %240, i64 %298
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !13
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !13
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !16, !noalias !13
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !16, !noalias !13
  %309 = add i64 %264, 64
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !18

312:                                              ; preds = %263, %251
  %313 = phi i64 [ 0, %251 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr i16, i16* %214, i64 %316
  %319 = getelementptr i16, i16* %240, i64 %316
  %320 = bitcast i16* %318 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !13
  %322 = getelementptr i16, i16* %318, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  %324 = load <8 x i16>, <8 x i16>* %323, align 2, !alias.scope !13
  %325 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %325, align 2, !alias.scope !16, !noalias !13
  %326 = getelementptr i16, i16* %319, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %324, <8 x i16>* %327, align 2, !alias.scope !16, !noalias !13
  %328 = add i64 %316, 16
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !19

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %242, %252
  br i1 %332, label %386, label %333

333:                                              ; preds = %331, %244, %239
  %334 = phi i64 [ %241, %244 ], [ %241, %239 ], [ %253, %331 ]
  %335 = phi i16* [ %214, %244 ], [ %214, %239 ], [ %254, %331 ]
  %336 = phi i16* [ %240, %244 ], [ %240, %239 ], [ %255, %331 ]
  %337 = add i64 %334, -1
  %338 = and i64 %334, 7
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %351, label %340

340:                                              ; preds = %333, %340
  %341 = phi i64 [ %346, %340 ], [ %334, %333 ]
  %342 = phi i16* [ %348, %340 ], [ %335, %333 ]
  %343 = phi i16* [ %347, %340 ], [ %336, %333 ]
  %344 = phi i64 [ %349, %340 ], [ %338, %333 ]
  %345 = load i16, i16* %342, align 2
  store i16 %345, i16* %343, align 2
  %346 = add i64 %341, -1
  %347 = getelementptr inbounds i16, i16* %343, i64 1
  %348 = getelementptr inbounds i16, i16* %342, i64 1
  %349 = add i64 %344, -1
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %340, !llvm.loop !20

351:                                              ; preds = %340, %333
  %352 = phi i64 [ %334, %333 ], [ %346, %340 ]
  %353 = phi i16* [ %335, %333 ], [ %348, %340 ]
  %354 = phi i16* [ %336, %333 ], [ %347, %340 ]
  %355 = icmp ult i64 %337, 7
  br i1 %355, label %386, label %356

356:                                              ; preds = %351, %356
  %357 = phi i64 [ %382, %356 ], [ %352, %351 ]
  %358 = phi i16* [ %384, %356 ], [ %353, %351 ]
  %359 = phi i16* [ %383, %356 ], [ %354, %351 ]
  %360 = load i16, i16* %358, align 2
  store i16 %360, i16* %359, align 2
  %361 = getelementptr inbounds i16, i16* %359, i64 1
  %362 = getelementptr inbounds i16, i16* %358, i64 1
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %359, i64 2
  %365 = getelementptr inbounds i16, i16* %358, i64 2
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %359, i64 3
  %368 = getelementptr inbounds i16, i16* %358, i64 3
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %359, i64 4
  %371 = getelementptr inbounds i16, i16* %358, i64 4
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %359, i64 5
  %374 = getelementptr inbounds i16, i16* %358, i64 5
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %359, i64 6
  %377 = getelementptr inbounds i16, i16* %358, i64 6
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %359, i64 7
  %380 = getelementptr inbounds i16, i16* %358, i64 7
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = add i64 %357, -8
  %383 = getelementptr inbounds i16, i16* %359, i64 8
  %384 = getelementptr inbounds i16, i16* %358, i64 8
  %385 = icmp eq i64 %382, 0
  br i1 %385, label %386, label %356, !llvm.loop !21

386:                                              ; preds = %351, %356, %331, %211, %204
  %387 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %207, %211 ], [ %205, %204 ], [ %207, %331 ], [ %207, %356 ], [ %207, %351 ]
  %388 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %387, i64 0, i32 1, i32 1
  %389 = load i8, i8* %388, align 1
  %390 = icmp slt i8 %389, 0
  br i1 %390, label %391, label %394

391:                                              ; preds = %386
  %392 = bitcast %"class.std::__1::basic_string.17"* %5 to i8**
  %393 = load i8*, i8** %392, align 8
  call void @_ZdlPv(i8* %393) #13
  br label %394

394:                                              ; preds = %386, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br label %397

395:                                              ; preds = %4
  %396 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %10, i64 0, i32 0, i32 24
  tail call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"* sret %0, %"class.std::__1::basic_string.17"* dereferenceable(24) %396) #11
  br label %397

397:                                              ; preds = %395, %394
  ret void
}

declare zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"*) local_unnamed_addr #1

declare %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService*) local_unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"* sret, i32, %"class.std::__1::basic_string.17"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"* sret, %"class.std::__1::basic_string.17"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN21TemplateURLTableModel11SetObserverEPN2ui18TableModelObserverE(%class.TemplateURLTableModel* nocapture, %"class.ui::TableModelObserver"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 2
  store %"class.ui::TableModelObserver"* %1, %"class.ui::TableModelObserver"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel6RemoveEi(%class.TemplateURLTableModel* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %class.TemplateURL* @_ZN21TemplateURLTableModel14GetTemplateURLEi(%class.TemplateURLTableModel* %0, i32 %1)
  %4 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %5 = load %class.TemplateURLService*, %class.TemplateURLService** %4, align 8
  tail call void @_ZN18TemplateURLService6RemoveEPK11TemplateURL(%class.TemplateURLService* %5, %class.TemplateURL* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.TemplateURL* @_ZN21TemplateURLTableModel14GetTemplateURLEi(%class.TemplateURLTableModel* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = icmp slt i32 %1, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %12, align 8
  br label %25

16:                                               ; preds = %2
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #11
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %17, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %20, i8** %12, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 128, %"class.logging::CheckOpResult"* nonnull %5) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %26 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8
  %28 = sext i32 %1 to i64
  %29 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3
  %30 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 1
  %31 = bitcast %class.TemplateURL*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ugt i64 %36, %28
  br i1 %38, label %39, label %40

39:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %27, align 8
  br label %49

40:                                               ; preds = %25
  %41 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %28) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %27, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 129, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %50 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %52 = load %class.TemplateURLService*, %class.TemplateURLService** %51, align 8
  call void @_ZN18TemplateURLService15GetTemplateURLsEv(%"class.std::__1::vector"* nonnull sret %9, %class.TemplateURLService* %52) #11
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %55 = load %class.TemplateURL**, %class.TemplateURL*** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %57 = load %class.TemplateURL**, %class.TemplateURL*** %56, align 8
  %58 = icmp eq %class.TemplateURL** %55, %57
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = load %class.TemplateURL**, %class.TemplateURL*** %53, align 8
  %61 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %60, i64 %28
  %62 = load %class.TemplateURL*, %class.TemplateURL** %61, align 8
  br label %63

63:                                               ; preds = %67, %59
  %64 = phi %class.TemplateURL** [ %55, %59 ], [ %68, %67 ]
  %65 = load %class.TemplateURL*, %class.TemplateURL** %64, align 8
  %66 = icmp eq %class.TemplateURL* %65, %62
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %64, i64 1
  %69 = icmp eq %class.TemplateURL** %68, %57
  br i1 %69, label %73, label %63

70:                                               ; preds = %63, %49
  %71 = phi %class.TemplateURL** [ %55, %49 ], [ %64, %63 ]
  %72 = icmp eq %class.TemplateURL** %71, %57
  br i1 %72, label %73, label %78

73:                                               ; preds = %67, %70
  %74 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 131, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0)) #11
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.4, i64 0, i64 0), i64 112) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  %77 = load %class.TemplateURL**, %class.TemplateURL*** %54, align 8
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi %class.TemplateURL** [ %55, %70 ], [ %77, %73 ]
  %80 = icmp eq %class.TemplateURL** %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = ptrtoint %class.TemplateURL** %79 to i64
  %83 = bitcast %class.TemplateURL*** %56 to i64*
  store i64 %82, i64* %83, align 8
  %84 = bitcast %class.TemplateURL** %79 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  %86 = load %class.TemplateURL**, %class.TemplateURL*** %53, align 8
  %87 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %86, i64 %28
  %88 = load %class.TemplateURL*, %class.TemplateURL** %87, align 8
  ret %class.TemplateURL* %88
}

declare void @_ZN18TemplateURLService6RemoveEPK11TemplateURL(%class.TemplateURLService*, %class.TemplateURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel3AddEiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RKNS1_IcNS2_IcEENS4_IcEEEE(%class.TemplateURLTableModel* nocapture readonly, i32, %"class.std::__1::basic_string.17"* dereferenceable(24), %"class.std::__1::basic_string.17"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.TemplateURLData, align 8
  %7 = bitcast %struct.TemplateURLData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 848, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 848, i1 false)
  call void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData* nonnull %6) #11
  call void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* nonnull %6, %"class.std::__1::basic_string.17"* dereferenceable(24) %2) #11
  call void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* nonnull %6, %"class.std::__1::basic_string.17"* dereferenceable(24) %3) #11
  call void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %4) #11
  %8 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %9 = load %class.TemplateURLService*, %class.TemplateURLService** %8, align 8
  %10 = call i8* @_Znwm(i64 2104) #13
  %11 = bitcast i8* %10 to %class.TemplateURL*
  call void @_ZN11TemplateURLC1ERK15TemplateURLDataNS_4TypeE(%class.TemplateURL* nonnull %11, %struct.TemplateURLData* nonnull dereferenceable(848) %6, i32 1) #11
  %12 = call %class.TemplateURL* @_ZN18TemplateURLService3AddENSt3__110unique_ptrI11TemplateURLNS0_14default_deleteIS2_EEEE(%class.TemplateURLService* %9, %class.TemplateURL* nonnull %11) #11
  call void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 848, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData*) unnamed_addr #1

declare void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string.17"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string.17"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %class.TemplateURL* @_ZN18TemplateURLService3AddENSt3__110unique_ptrI11TemplateURLNS0_14default_deleteIS2_EEEE(%class.TemplateURLService*, %class.TemplateURL*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel17ModifyTemplateURLEiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RKNS1_IcNS2_IcEENS4_IcEEEE(%class.TemplateURLTableModel* nocapture readonly, i32, %"class.std::__1::basic_string.17"* dereferenceable(24), %"class.std::__1::basic_string.17"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = tail call %class.TemplateURL* @_ZN21TemplateURLTableModel14GetTemplateURLEi(%class.TemplateURLTableModel* %0, i32 %1)
  %7 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %8 = load %class.TemplateURLService*, %class.TemplateURLService** %7, align 8
  tail call void @_ZN18TemplateURLService16ResetTemplateURLEP11TemplateURLRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEESA_RKNS3_IcNS4_IcEENS6_IcEEEE(%class.TemplateURLService* %8, %class.TemplateURL* %6, %"class.std::__1::basic_string.17"* dereferenceable(24) %2, %"class.std::__1::basic_string.17"* dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %4) #11
  ret void
}

declare void @_ZN18TemplateURLService16ResetTemplateURLEP11TemplateURLRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEESA_RKNS3_IcNS4_IcEENS6_IcEEEE(%class.TemplateURLService*, %class.TemplateURL*, %"class.std::__1::basic_string.17"* dereferenceable(24), %"class.std::__1::basic_string.17"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN21TemplateURLTableModel18IndexOfTemplateURLEPK11TemplateURL(%class.TemplateURLTableModel* nocapture readonly, %class.TemplateURL* readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::vector"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %class.TemplateURL**, %class.TemplateURL*** %6, align 8
  %8 = inttoptr i64 %5 to %class.TemplateURL**
  %9 = icmp eq %class.TemplateURL** %7, %8
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = load %class.TemplateURL*, %class.TemplateURL** %8, align 8
  %12 = icmp eq %class.TemplateURL* %11, %1
  br i1 %12, label %22, label %16

13:                                               ; preds = %16
  %14 = load %class.TemplateURL*, %class.TemplateURL** %18, align 8
  %15 = icmp eq %class.TemplateURL* %14, %1
  br i1 %15, label %20, label %16

16:                                               ; preds = %10, %13
  %17 = phi %class.TemplateURL** [ %18, %13 ], [ %8, %10 ]
  %18 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %17, i64 1
  %19 = icmp eq %class.TemplateURL** %7, %18
  br i1 %19, label %27, label %13

20:                                               ; preds = %13
  %21 = ptrtoint %class.TemplateURL** %18 to i64
  br label %22

22:                                               ; preds = %20, %10
  %23 = phi i64 [ %21, %20 ], [ %5, %10 ]
  %24 = sub i64 %23, %5
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %16, %2, %22
  %28 = phi i32 [ %26, %22 ], [ -1, %2 ], [ -1, %16 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel22MakeDefaultTemplateURLEi(%class.TemplateURLTableModel* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %class.TemplateURL* @_ZN21TemplateURLTableModel14GetTemplateURLEi(%class.TemplateURLTableModel* %0, i32 %1)
  %4 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 0, i32 4
  %5 = load %class.TemplateURLService*, %class.TemplateURLService** %4, align 8
  %6 = tail call %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService* %5) #11
  %7 = icmp eq %class.TemplateURL* %6, %3
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = load %class.TemplateURLService*, %class.TemplateURLService** %4, align 8
  tail call void @_ZN18TemplateURLService36SetUserSelectedDefaultSearchProviderEP11TemplateURL(%class.TemplateURLService* %9, %class.TemplateURL* %3) #11
  br label %10

10:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN18TemplateURLService36SetUserSelectedDefaultSearchProviderEP11TemplateURL(%class.TemplateURLService*, %class.TemplateURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TemplateURLTableModel27OnTemplateURLServiceChangedEv(%class.TemplateURLTableModel*) unnamed_addr #0 align 2 {
  tail call void @_ZN21TemplateURLTableModel6ReloadEv(%class.TemplateURLTableModel* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N21TemplateURLTableModel27OnTemplateURLServiceChangedEv(%class.TemplateURLTableModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TemplateURLTableModel, %class.TemplateURLTableModel* %0, i64 -1, i32 5
  %3 = bitcast i32* %2 to %class.TemplateURLTableModel*
  tail call void @_ZN21TemplateURLTableModel6ReloadEv(%class.TemplateURLTableModel* %3) #11
  ret void
}

declare void @_ZN2ui10TableModel7GetIconEi() unnamed_addr

declare void @_ZN2ui10TableModel10GetTooltipEi(%"class.std::__1::basic_string.17"* sret, %"class.ui::TableModel"*, i32) unnamed_addr #1

declare i32 @_ZN2ui10TableModel13CompareValuesEiii(%"class.ui::TableModel"*, i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26TemplateURLServiceObserver32OnTemplateURLServiceShuttingDownEv(%class.TemplateURLServiceObserver*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIP11TemplateURLNS_9allocatorIS3_EEEEEaSEOS3_(%"class.std::__1::back_insert_iterator"*, %class.TemplateURL** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %6 = load %class.TemplateURL**, %class.TemplateURL*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %class.TemplateURL**, %class.TemplateURL*** %7, align 8
  %9 = icmp ult %class.TemplateURL** %6, %8
  %10 = ptrtoint %class.TemplateURL** %8 to i64
  br i1 %9, label %11, label %18

11:                                               ; preds = %2
  %12 = bitcast %class.TemplateURL** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.TemplateURL** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %6, i64 1
  %16 = ptrtoint %class.TemplateURL** %15 to i64
  %17 = bitcast %class.TemplateURL*** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %77

18:                                               ; preds = %2
  %19 = ptrtoint %class.TemplateURL** %6 to i64
  %20 = bitcast %class.TemplateURL*** %5 to i64*
  %21 = bitcast %"class.std::__1::vector"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %class.TemplateURL*** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #12
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #13
  %46 = bitcast i8* %45 to %class.TemplateURL**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %class.TemplateURL** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %49, i64 %24
  %51 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %49, i64 %48
  %52 = ptrtoint %class.TemplateURL** %51 to i64
  %53 = bitcast %class.TemplateURL** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %class.TemplateURL** %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %50, i64 1
  %57 = ptrtoint %class.TemplateURL** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %59 = load %class.TemplateURL**, %class.TemplateURL*** %58, align 8
  %60 = load i64, i64* %20, align 8
  %61 = ptrtoint %class.TemplateURL** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %50, i64 %64
  %66 = ptrtoint %class.TemplateURL** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %47
  %69 = bitcast %class.TemplateURL** %65 to i8*
  %70 = bitcast %class.TemplateURL** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #11
  %71 = load %class.TemplateURL**, %class.TemplateURL*** %58, align 8
  br label %72

72:                                               ; preds = %68, %47
  %73 = phi %class.TemplateURL** [ %59, %47 ], [ %71, %68 ]
  store i64 %66, i64* %21, align 8
  store i64 %57, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %74 = icmp eq %class.TemplateURL** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %class.TemplateURL** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %11, %72, %75
  ret %"class.std::__1::back_insert_iterator"* %0
}

declare void @_ZN11TemplateURLC1ERK15TemplateURLDataNS_4TypeE(%class.TemplateURL*, %struct.TemplateURLData* dereferenceable(848), i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
