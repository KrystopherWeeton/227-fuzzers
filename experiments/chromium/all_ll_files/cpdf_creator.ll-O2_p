; ModuleID = '../../third_party/pdfium/core/fpdfapi/edit/cpdf_creator.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/edit/cpdf_creator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Creator = type <{ %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.171", %"class.fxcrt::RetainPtr.89", %"class.fxcrt::RetainPtr.50", %"class.fxcrt::RetainPtr.79", %"class.fxcrt::RetainPtr.172", i32, [4 x i8], %"class.std::__1::unique_ptr.178", i64, i32, i32, i64, %"class.std::__1::map.184", %"class.std::__1::vector.32", %"class.fxcrt::RetainPtr.193", i32, i8, i8, i8, i8 }>
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%"class.fxcrt::UnownedPtr.171" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.40", %"class.fxcrt::UnownedPtr.46", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.47", i64, %"class.fxcrt::RetainPtr.79", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.107", %"class.std::__1::map.113", %"class.std::__1::set.122", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type { %"class.fxcrt::RetainPtr.22", i64, i64, i64, %"class.fxcrt::WeakPtr", %"class.std::__1::vector", i64, i32, [257 x i8], i32, %"class.fxcrt::UnownedPtr.31" }
%"class.fxcrt::RetainPtr.22" = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.CPDF_ReadValidator* }
%class.CPDF_ReadValidator = type opaque
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.238" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.241", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i8* }
%"class.fxcrt::UnownedPtr.31" = type { %"class.std::__1::vector.32"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::UnownedPtr.46" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.50", %"class.std::__1::map.67" }
%"class.std::__1::map.67" = type { %"class.std::__1::__tree.68" }
%"class.std::__1::__tree.68" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.83" }
%"class.fxcrt::RetainPtr.83" = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.113" = type { %"class.std::__1::__tree.114" }
%"class.std::__1::__tree.114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.122" = type { %"class.std::__1::__tree.123" }
%"class.std::__1::__tree.123" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.89" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.54" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.50" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type { %"class.fxcrt::Retainable", i8, i32, i32, i32, i64, i32, i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.89", %"class.std::__1::unique_ptr.95", [32 x i8] }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.CPDF_CryptoHandler* }
%class.CPDF_CryptoHandler = type { i64, i32, %"class.std::__1::unique_ptr.98", [32 x i8] }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %struct.CRYPT_aes_context* }
%struct.CRYPT_aes_context = type { i32, i32, [120 x i32], [120 x i32], [8 x i32] }
%"class.fxcrt::RetainPtr.172" = type { %"class.std::__1::unique_ptr.173" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.CPDF_Object* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.IFX_ArchiveStream* }
%class.IFX_ArchiveStream = type { %class.IFX_WriteStream }
%class.IFX_WriteStream = type { i32 (...)** }
%"class.std::__1::map.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i32*, i32*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i32* }
%"class.fxcrt::RetainPtr.193" = type { %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.197", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.fxcrt::RetainPtr.199"*, %"class.fxcrt::RetainPtr.199"*, %"class.std::__1::__compressed_pair.205" }
%"class.fxcrt::RetainPtr.199" = type { %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.fxcrt::RetainPtr.199"* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.50", %"class.fxcrt::RetainPtr.50", %"class.std::__1::vector.133", i8, i8, i32, i32, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::vector.32", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.165" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.135" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.164" }
%"class.fxcrt::UnownedPtr.164" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.212" = type { %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %class.IFX_RetainableWriteStream* }
%class.IFX_RetainableWriteStream = type { %class.IFX_WriteStream, %"class.fxcrt::Retainable" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.237" }
%"struct.std::__1::pair.237" = type { i32, i64 }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.224", i64 }
%"class.fxcrt::UnownedPtr.224" = type { i8* }
%class.CPDF_Encryptor = type <{ %"class.fxcrt::UnownedPtr.228", i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.228" = type { %class.CPDF_CryptoHandler* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CPDF_DictionaryLocker = type { %"class.fxcrt::RetainPtr.89" }
%class.CPDF_String = type <{ %class.CPDF_Object, %"class.fxcrt::ByteString", i8, [7 x i8] }>
%"class.(anonymous namespace)::CFX_FileBufferArchive" = type { %class.IFX_ArchiveStream, i64, i64, %"class.std::__1::vector", %"class.fxcrt::RetainPtr.212" }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_ = comdat any

$_ZN10CPDF_Array9AppendNewI11CPDF_StringJRN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeEDpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [9 x i8] c" 0 obj\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"\0D\0Aendobj\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"Metadata\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"%PDF-1.\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"\0D\0A%\A1\B3\C5\D7\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"xref\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"xref\0D\0A0 1\0D\0A0000000000 65535 f\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"0 %d\0D\0A0000000000 65535 f\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"%d %d\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"%010d 00000 n\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"trailer\0D\0A<<\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c" 0 obj <<\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"Encrypt\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"Size\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Filter\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Index\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"Prev\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"XRefStm\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"ID\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"DecodeParms\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"\0D\0A/Root \00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c" 0 R\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"/Info \00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"/Encrypt\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c" 0 R \00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"/Size \00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"/Prev \00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"/ID\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"/W[0 4 1]/Index[\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c" 1 \00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"]/Length \00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c">>stream\0D\0A\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"\0D\0Aendstream\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"\0D\0Astartxref\0D\0A\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"\0D\0A%%EOF\0D\0A\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"Standard\00", align 1
@_ZTVN12_GLOBAL__N_121CFX_FileBufferArchiveE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.(anonymous namespace)::CFX_FileBufferArchive"*, i8*, i64)* @_ZN12_GLOBAL__N_121CFX_FileBufferArchive10WriteBlockEPKvm to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CFX_FileBufferArchive"*, %"class.fxcrt::StringViewTemplate"*)* @_ZN12_GLOBAL__N_121CFX_FileBufferArchive11WriteStringEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CFX_FileBufferArchive"*)* @_ZN12_GLOBAL__N_121CFX_FileBufferArchiveD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CFX_FileBufferArchive"*)* @_ZN12_GLOBAL__N_121CFX_FileBufferArchiveD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CFX_FileBufferArchive"*, i8)* @_ZN12_GLOBAL__N_121CFX_FileBufferArchive9WriteByteEh to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CFX_FileBufferArchive"*, i32)* @_ZN12_GLOBAL__N_121CFX_FileBufferArchive10WriteDWordEj to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::CFX_FileBufferArchive"*)* @_ZNK12_GLOBAL__N_121CFX_FileBufferArchive13CurrentOffsetEv to i8*)] }, align 8

@_ZN12CPDF_CreatorC1EP13CPDF_DocumentRKN5fxcrt9RetainPtrI25IFX_RetainableWriteStreamEE = hidden unnamed_addr alias void (%class.CPDF_Creator*, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.212"*), void (%class.CPDF_Creator*, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.212"*)* @_ZN12CPDF_CreatorC2EP13CPDF_DocumentRKN5fxcrt9RetainPtrI25IFX_RetainableWriteStreamEE
@_ZN12CPDF_CreatorD1Ev = hidden unnamed_addr alias void (%class.CPDF_Creator*), void (%class.CPDF_Creator*)* @_ZN12CPDF_CreatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CreatorC2EP13CPDF_DocumentRKN5fxcrt9RetainPtrI25IFX_RetainableWriteStreamEE(%class.CPDF_Creator*, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.212"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Parser*, %class.CPDF_Parser** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Parser* %6, %class.CPDF_Parser** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2
  %9 = icmp eq %class.CPDF_Parser* %6, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.89"* %8 to i64*
  store i64 0, i64* %11, align 8
  br label %21

12:                                               ; preds = %3
  %13 = tail call %class.CPDF_Dictionary* @_ZNK11CPDF_Parser14GetEncryptDictEv(%class.CPDF_Parser* nonnull %6) #13
  %14 = ptrtoint %class.CPDF_Dictionary* %13 to i64
  %15 = bitcast %"class.fxcrt::RetainPtr.89"* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = icmp eq %class.CPDF_Dictionary* %13, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %13, i64 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %18, align 8
  br label %21

21:                                               ; preds = %10, %12, %17
  %22 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 3
  %23 = bitcast %"class.fxcrt::RetainPtr.50"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 4
  %25 = load %class.CPDF_Parser*, %class.CPDF_Parser** %7, align 8
  %26 = icmp eq %class.CPDF_Parser* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %25, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %28, align 8
  %30 = ptrtoint %class.CPDF_SecurityHandler* %29 to i64
  %31 = bitcast %"class.fxcrt::RetainPtr.79"* %24 to i64*
  store i64 %30, i64* %31, align 8
  %32 = icmp eq %class.CPDF_SecurityHandler* %29, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %29, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %34, align 8
  br label %39

37:                                               ; preds = %21
  %38 = bitcast %"class.fxcrt::RetainPtr.79"* %24 to i64*
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %33, %27, %37
  %40 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 5
  %41 = bitcast %"class.fxcrt::RetainPtr.172"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  %43 = load %class.CPDF_Document*, %class.CPDF_Document** %4, align 8
  %44 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %43, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %42, align 8
  %46 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8
  %47 = tail call i8* @_Znwm(i64 56) #14
  %48 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_121CFX_FileBufferArchiveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #13
  %50 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 32768, i64 1) #13
  %51 = getelementptr inbounds i8, i8* %47, i64 32
  %52 = getelementptr inbounds i8, i8* %47, i64 24
  %53 = bitcast i8* %52 to i8**
  store i8* %50, i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %50, i64 32768
  %55 = getelementptr inbounds i8, i8* %47, i64 40
  %56 = bitcast i8* %55 to i8**
  store i8* %54, i8** %56, align 8
  %57 = bitcast i8* %51 to i64*
  %58 = ptrtoint i8* %50 to i64
  %59 = sub i64 32768, %58
  %60 = getelementptr i8, i8* %50, i64 %59
  %61 = ptrtoint i8* %60 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 %61, i1 false) #13
  %62 = ptrtoint i8* %54 to i64
  store i64 %62, i64* %57, align 8
  %63 = getelementptr inbounds i8, i8* %47, i64 48
  %64 = getelementptr inbounds %"class.fxcrt::RetainPtr.212", %"class.fxcrt::RetainPtr.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %64, align 8
  %66 = ptrtoint %class.IFX_RetainableWriteStream* %65 to i64
  %67 = bitcast i8* %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %class.IFX_RetainableWriteStream* %65, null
  br i1 %68, label %81, label %69

69:                                               ; preds = %39
  %70 = bitcast %class.IFX_RetainableWriteStream* %65 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %class.IFX_RetainableWriteStream* %65 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = add nsw i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %69, %39
  %82 = ptrtoint i8* %47 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.178"* %46 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 9
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  store i32 -1, i32* %85, align 8
  %86 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 12
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %90 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 0
  %91 = bitcast %"class.std::__1::__tree_node_base"** %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %90, align 8
  %92 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %93 = bitcast %"class.std::__1::vector.32"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 39, i1 false)
  ret void
}

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Parser14GetEncryptDictEv(%class.CPDF_Parser*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_CreatorD2Ev(%class.CPDF_Creator*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Array*, %class.CPDF_Array** %2, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %2, align 8
  %4 = icmp eq %class.CPDF_Array* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Array* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint i32* %18 to i64
  %22 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast i32* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %16, %20
  %26 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0
  %27 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.185"* %26, %"class.std::__1::__tree_node"* %29) #13
  %30 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %30, align 8
  store %class.IFX_ArchiveStream* null, %class.IFX_ArchiveStream** %30, align 8
  %32 = icmp eq %class.IFX_ArchiveStream* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = bitcast %class.IFX_ArchiveStream* %31 to void (%class.IFX_ArchiveStream*)***
  %35 = load void (%class.IFX_ArchiveStream*)**, void (%class.IFX_ArchiveStream*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.IFX_ArchiveStream*)*, void (%class.IFX_ArchiveStream*)** %35, i64 3
  %37 = load void (%class.IFX_ArchiveStream*)*, void (%class.IFX_ArchiveStream*)** %36, align 8
  tail call void %37(%class.IFX_ArchiveStream* nonnull %31) #13
  br label %38

38:                                               ; preds = %25, %33
  %39 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %40 = load %class.CPDF_Object*, %class.CPDF_Object** %39, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %39, align 8
  %41 = icmp eq %class.CPDF_Object* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %40, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %40, i64 0, i32 0
  %49 = bitcast %class.CPDF_Object* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  tail call void %52(%"class.fxcrt::Retainable"* nonnull %48) #13
  br label %53

53:                                               ; preds = %38, %42, %47
  %54 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %55 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %54, align 8
  store %class.CPDF_SecurityHandler* null, %class.CPDF_SecurityHandler** %54, align 8
  %56 = icmp eq %class.CPDF_SecurityHandler* %55, null
  br i1 %56, label %68, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %55, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, -1
  store i64 %60, i64* %58, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %55, i64 0, i32 0
  %64 = bitcast %class.CPDF_SecurityHandler* %55 to void (%"class.fxcrt::Retainable"*)***
  %65 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %65, i64 1
  %67 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %66, align 8
  tail call void %67(%"class.fxcrt::Retainable"* nonnull %63) #13
  br label %68

68:                                               ; preds = %53, %57, %62
  %69 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %70 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %69, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %69, align 8
  %71 = icmp eq %class.CPDF_Dictionary* %70, null
  br i1 %71, label %83, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %70, i64 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add nsw i64 %74, -1
  store i64 %75, i64* %73, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %70, i64 0, i32 0, i32 0
  %79 = bitcast %class.CPDF_Dictionary* %70 to void (%"class.fxcrt::Retainable"*)***
  %80 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, i64 1
  %82 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, align 8
  tail call void %82(%"class.fxcrt::Retainable"* nonnull %78) #13
  br label %83

83:                                               ; preds = %68, %72, %77
  %84 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %85 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %84, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %84, align 8
  %86 = icmp eq %class.CPDF_Dictionary* %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %85, i64 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i64 %89, -1
  store i64 %90, i64* %88, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %87
  %93 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %85, i64 0, i32 0, i32 0
  %94 = bitcast %class.CPDF_Dictionary* %85 to void (%"class.fxcrt::Retainable"*)***
  %95 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, i64 1
  %97 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %96, align 8
  tail call void %97(%"class.fxcrt::Retainable"* nonnull %93) #13
  br label %98

98:                                               ; preds = %83, %87, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_Creator16WriteIndirectObjEjPK11CPDF_Object(%class.CPDF_Creator* nocapture readonly, i32, %class.CPDF_Object*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %6, align 8
  %8 = bitcast %class.IFX_ArchiveStream* %7 to i1 (%class.IFX_ArchiveStream*, i32)***
  %9 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %9, i64 5
  %11 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.IFX_ArchiveStream* %7, i32 %1) #13
  br i1 %12, label %13, label %62

13:                                               ; preds = %3
  %14 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %6, align 8
  %15 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 8, i64* %17, align 8
  %18 = bitcast %class.IFX_ArchiveStream* %14 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %19 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %19, i64 1
  %21 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %20, align 8
  %22 = call zeroext i1 %21(%class.IFX_WriteStream* %15, %"class.fxcrt::StringViewTemplate"* nonnull %4) #13
  br i1 %22, label %23, label %62

23:                                               ; preds = %13
  %24 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %24, align 8
  %26 = icmp eq %class.CPDF_SecurityHandler* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %25, i64 0, i32 10, i32 0, i32 0, i32 0
  %29 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %28, align 8
  %30 = icmp eq %class.CPDF_CryptoHandler* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %32, align 8
  %34 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %33, i64 0, i32 0
  %35 = icmp eq %class.CPDF_Object* %34, %2
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = call i8* @_Znwm(i64 16) #14
  %38 = bitcast i8* %37 to %class.CPDF_Encryptor*
  call void @_ZN14CPDF_EncryptorC1EPK18CPDF_CryptoHandleri(%class.CPDF_Encryptor* nonnull %38, %class.CPDF_CryptoHandler* nonnull %29, i32 %1) #13
  br label %39

39:                                               ; preds = %31, %23, %27, %36
  %40 = phi i8* [ null, %27 ], [ %37, %36 ], [ null, %31 ], [ null, %23 ]
  %41 = phi %class.CPDF_Encryptor* [ null, %27 ], [ %38, %36 ], [ null, %31 ], [ null, %23 ]
  %42 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %6, align 8
  %43 = bitcast %class.CPDF_Object* %2 to i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)***
  %44 = load i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)**, i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)*, i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)** %44, i64 39
  %46 = load i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)*, i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)** %45, align 8
  %47 = call zeroext i1 %46(%class.CPDF_Object* %2, %class.IFX_ArchiveStream* %42, %class.CPDF_Encryptor* %41) #13
  br i1 %47, label %48, label %58

48:                                               ; preds = %39
  %49 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %6, align 8
  %50 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %49, i64 0, i32 0
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 10, i64* %52, align 8
  %53 = bitcast %class.IFX_ArchiveStream* %49 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %54 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %54, i64 1
  %56 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %55, align 8
  %57 = call zeroext i1 %56(%class.IFX_WriteStream* %50, %"class.fxcrt::StringViewTemplate"* nonnull %5) #13
  br label %58

58:                                               ; preds = %39, %48
  %59 = phi i1 [ %57, %48 ], [ false, %39 ]
  %60 = icmp eq %class.CPDF_Encryptor* %41, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZN14CPDF_EncryptorD1Ev(%class.CPDF_Encryptor* nonnull %41) #13
  call void @_ZdlPv(i8* %40) #14
  br label %62

62:                                               ; preds = %13, %3, %61, %58
  %63 = phi i1 [ false, %13 ], [ %59, %58 ], [ %59, %61 ], [ false, %3 ]
  ret i1 %63
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CPDF_CryptoHandler* @_ZN12CPDF_Creator16GetCryptoHandlerEv(%class.CPDF_Creator* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %2, align 8
  %4 = icmp eq %class.CPDF_SecurityHandler* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %3, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.CPDF_CryptoHandler* [ %7, %5 ], [ null, %1 ]
  ret %class.CPDF_CryptoHandler* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_Creator22WriteOldIndirectObjectEj(%class.CPDF_Creator*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %4 = load %class.CPDF_Parser*, %class.CPDF_Parser** %3, align 8
  %5 = tail call zeroext i1 @_ZNK11CPDF_Parser18IsObjectFreeOrNullEj(%class.CPDF_Parser* %4, i32 %1) #13
  br i1 %5, label %174, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %8 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %7, align 8
  %9 = bitcast %class.IFX_ArchiveStream* %8 to i64 (%class.IFX_ArchiveStream*)***
  %10 = load i64 (%class.IFX_ArchiveStream*)**, i64 (%class.IFX_ArchiveStream*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %10, i64 6
  %12 = load i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %11, align 8
  %13 = tail call i64 %12(%class.IFX_ArchiveStream* %8) #13
  %14 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %15 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %18, label %47, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %43, %19
  %22 = phi %"class.std::__1::__tree_node"* [ %46, %43 ], [ %17, %19 ]
  %23 = phi %"class.std::__1::__tree_node_base"** [ %45, %43 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, %1
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %49

33:                                               ; preds = %21
  %34 = icmp ult i32 %25, %1
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %49

43:                                               ; preds = %35, %27
  %44 = phi %"class.std::__1::__tree_node_base"* [ %29, %27 ], [ %37, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %28, %27 ], [ %36, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"* %44 to %"class.std::__1::__tree_node"*
  br label %21

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  br label %49

49:                                               ; preds = %47, %41, %39, %31
  %50 = phi %"class.std::__1::__tree_end_node"* [ %15, %47 ], [ %32, %31 ], [ %40, %39 ], [ %42, %41 ]
  %51 = phi %"class.std::__1::__tree_node_base"** [ %48, %47 ], [ %28, %31 ], [ %36, %39 ], [ %23, %41 ]
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %82

55:                                               ; preds = %49
  %56 = tail call i8* @_Znwm(i64 48) #14, !noalias !2
  %57 = getelementptr inbounds i8, i8* %56, i64 32
  %58 = bitcast i8* %57 to i32*
  store i32 %1, i32* %58, align 8, !noalias !2
  %59 = getelementptr inbounds i8, i8* %56, i64 40
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8, !noalias !2
  %61 = bitcast i8* %56 to %"class.std::__1::__tree_node"*
  %62 = bitcast i8* %56 to %"class.std::__1::__tree_node_base"*
  %63 = getelementptr inbounds i8, i8* %56, i64 16
  %64 = bitcast i8* %63 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %64, align 8
  %65 = bitcast %"class.std::__1::__tree_node_base"** %51 to i8**
  store i8* %56, i8** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %14, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %55
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %69 to i64
  %73 = bitcast %"class.std::__1::map.184"* %14 to i64*
  store i64 %72, i64* %73, align 8
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  br label %75

75:                                               ; preds = %71, %55
  %76 = phi %"class.std::__1::__tree_node_base"* [ %62, %55 ], [ %74, %71 ]
  %77 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %78, %"class.std::__1::__tree_node_base"* %76) #13
  %79 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %49, %75
  %83 = phi %"class.std::__1::__tree_node"* [ %61, %75 ], [ %53, %49 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1, i32 0, i32 1
  store i64 %13, i64* %84, align 8
  %85 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %86 = load %class.CPDF_Document*, %class.CPDF_Document** %85, align 8
  %87 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %86, i64 0, i32 0, i32 0
  %88 = tail call %class.CPDF_Object* @_ZNK25CPDF_IndirectObjectHolder17GetIndirectObjectEj(%class.CPDF_IndirectObjectHolder* %87, i32 %1) #13
  %89 = load %class.CPDF_Document*, %class.CPDF_Document** %85, align 8
  %90 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %89, i64 0, i32 0, i32 0
  %91 = bitcast %class.CPDF_Document* %89 to %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)***
  %92 = load %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)**, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*** %91, align 8
  %93 = getelementptr inbounds %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)** %92, i64 2
  %94 = load %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)** %93, align 8
  %95 = tail call %class.CPDF_Object* %94(%class.CPDF_IndirectObjectHolder* %90, i32 %1) #13
  %96 = icmp eq %class.CPDF_Object* %95, null
  br i1 %96, label %97, label %164

97:                                               ; preds = %82
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  %100 = bitcast %"class.std::__1::__tree_node"* %98 to %"class.std::__1::__tree_node_base"*
  br i1 %99, label %174, label %101

101:                                              ; preds = %97, %101
  %102 = phi %"class.std::__1::__tree_end_node"* [ %112, %101 ], [ %15, %97 ]
  %103 = phi %"class.std::__1::__tree_node"* [ %113, %101 ], [ %98, %97 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 1, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp ult i32 %105, %1
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::__tree_node_base"** %107 to %"class.std::__1::__tree_node"**
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_node"* %103 to %"class.std::__1::__tree_node"**
  %111 = select i1 %106, %"class.std::__1::__tree_node"** %108, %"class.std::__1::__tree_node"** %110
  %112 = select i1 %106, %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"* %109
  %113 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %111, align 8
  %114 = icmp eq %"class.std::__1::__tree_node"* %113, null
  br i1 %114, label %115, label %101

115:                                              ; preds = %101
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %112, %15
  br i1 %116, label %174, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 4
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp ugt i32 %120, %1
  br i1 %121, label %174, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 1, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %126, label %134

126:                                              ; preds = %122
  %127 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node_base"*
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 2
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_end_node"**
  %130 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node_base"* %132, %127
  br i1 %133, label %150, label %141

134:                                              ; preds = %122, %134
  %135 = phi %"class.std::__1::__tree_node_base"* [ %137, %134 ], [ %124, %122 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %139, label %134

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %135, i64 0, i32 0
  br label %150

141:                                              ; preds = %126, %141
  %142 = phi %"class.std::__1::__tree_end_node"** [ %145, %141 ], [ %129, %126 ]
  %143 = bitcast %"class.std::__1::__tree_end_node"** %142 to %"class.std::__1::__tree_node_base"**
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 2
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %144
  br i1 %149, label %150, label %141

150:                                              ; preds = %141, %139, %126
  %151 = phi %"class.std::__1::__tree_end_node"* [ %140, %139 ], [ %130, %126 ], [ %146, %141 ]
  %152 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %14, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_end_node"* %153, %112
  br i1 %154, label %155, label %158

155:                                              ; preds = %150
  %156 = ptrtoint %"class.std::__1::__tree_end_node"* %151 to i64
  %157 = bitcast %"class.std::__1::map.184"* %14 to i64*
  store i64 %156, i64* %157, align 8
  br label %158

158:                                              ; preds = %155, %150
  %159 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %160, -1
  store i64 %161, i64* %159, align 8
  %162 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %100, %"class.std::__1::__tree_node_base"* %162) #13
  %163 = bitcast %"class.std::__1::__tree_end_node"* %112 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  br label %174

164:                                              ; preds = %82
  %165 = icmp ne %class.CPDF_Object* %88, null
  %166 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %95, i64 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = tail call zeroext i1 @_ZN12CPDF_Creator16WriteIndirectObjEjPK11CPDF_Object(%class.CPDF_Creator* %0, i32 %167, %class.CPDF_Object* nonnull %95)
  %169 = xor i1 %168, true
  %170 = or i1 %165, %169
  br i1 %170, label %174, label %171

171:                                              ; preds = %164
  %172 = load %class.CPDF_Document*, %class.CPDF_Document** %85, align 8
  %173 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %172, i64 0, i32 0, i32 0
  tail call void @_ZN25CPDF_IndirectObjectHolder20DeleteIndirectObjectEj(%class.CPDF_IndirectObjectHolder* %173, i32 %1) #13
  br label %174

174:                                              ; preds = %158, %117, %115, %97, %164, %171, %2
  %175 = phi i1 [ true, %2 ], [ %168, %164 ], [ true, %171 ], [ true, %97 ], [ true, %115 ], [ true, %117 ], [ true, %158 ]
  ret i1 %175
}

declare zeroext i1 @_ZNK11CPDF_Parser18IsObjectFreeOrNullEj(%class.CPDF_Parser*, i32) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZNK25CPDF_IndirectObjectHolder17GetIndirectObjectEj(%class.CPDF_IndirectObjectHolder*, i32) local_unnamed_addr #1

declare void @_ZN25CPDF_IndirectObjectHolder20DeleteIndirectObjectEj(%class.CPDF_IndirectObjectHolder*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_Creator12WriteOldObjsEv(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPDF_Parser*, %class.CPDF_Parser** %2, align 8
  %4 = tail call i32 @_ZNK11CPDF_Parser13GetLastObjNumEv(%class.CPDF_Parser* %3) #13
  %5 = load %class.CPDF_Parser*, %class.CPDF_Parser** %2, align 8
  %6 = tail call zeroext i1 @_ZNK11CPDF_Parser19IsValidObjectNumberEj(%class.CPDF_Parser* %5, i32 %4) #13
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, %4
  br i1 %10, label %17, label %13

11:                                               ; preds = %13
  %12 = icmp ugt i32 %16, %4
  br i1 %12, label %17, label %13

13:                                               ; preds = %7, %11
  %14 = phi i32 [ %16, %11 ], [ %9, %7 ]
  %15 = tail call zeroext i1 @_ZN12CPDF_Creator22WriteOldIndirectObjectEj(%class.CPDF_Creator* %0, i32 %14)
  %16 = add i32 %14, 1
  br i1 %15, label %11, label %17

17:                                               ; preds = %13, %11, %7, %1
  %18 = phi i1 [ true, %1 ], [ true, %7 ], [ false, %13 ], [ true, %11 ]
  ret i1 %18
}

declare i32 @_ZNK11CPDF_Parser13GetLastObjNumEv(%class.CPDF_Parser*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Parser19IsValidObjectNumberEj(%class.CPDF_Parser*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_Creator12WriteNewObjsEv(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %6 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.32"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = icmp ugt i64 %12, %4
  br i1 %13, label %14, label %112

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %18 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"**
  %20 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %17, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::map.184"* %17 to i64*
  %24 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  br label %25

25:                                               ; preds = %14, %105
  %26 = phi i64 [ %10, %14 ], [ %108, %105 ]
  %27 = phi i64 [ %4, %14 ], [ %106, %105 ]
  %28 = inttoptr i64 %26 to i32*
  %29 = getelementptr inbounds i32, i32* %28, i64 %27
  %30 = load i32, i32* %29, align 4
  %31 = load %class.CPDF_Document*, %class.CPDF_Document** %15, align 8
  %32 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %31, i64 0, i32 0, i32 0
  %33 = tail call %class.CPDF_Object* @_ZNK25CPDF_IndirectObjectHolder17GetIndirectObjectEj(%class.CPDF_IndirectObjectHolder* %32, i32 %30) #13
  %34 = icmp eq %class.CPDF_Object* %33, null
  br i1 %34, label %105, label %35

35:                                               ; preds = %25
  %36 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %16, align 8
  %37 = bitcast %class.IFX_ArchiveStream* %36 to i64 (%class.IFX_ArchiveStream*)***
  %38 = load i64 (%class.IFX_ArchiveStream*)**, i64 (%class.IFX_ArchiveStream*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %38, i64 6
  %40 = load i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %39, align 8
  %41 = tail call i64 %40(%class.IFX_ArchiveStream* %36) #13
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %70, label %44

44:                                               ; preds = %35, %66
  %45 = phi %"class.std::__1::__tree_node"* [ %69, %66 ], [ %42, %35 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %68, %66 ], [ %20, %35 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp ult i32 %30, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %66

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %70

56:                                               ; preds = %44
  %57 = icmp ult i32 %48, %30
  br i1 %57, label %58, label %64

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %70

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %70

66:                                               ; preds = %58, %50
  %67 = phi %"class.std::__1::__tree_node_base"* [ %52, %50 ], [ %60, %58 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %59, %58 ]
  %69 = bitcast %"class.std::__1::__tree_node_base"* %67 to %"class.std::__1::__tree_node"*
  br label %44

70:                                               ; preds = %35, %64, %62, %54
  %71 = phi %"class.std::__1::__tree_end_node"* [ %55, %54 ], [ %63, %62 ], [ %65, %64 ], [ %18, %35 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %51, %54 ], [ %59, %62 ], [ %46, %64 ], [ %21, %35 ]
  %73 = bitcast %"class.std::__1::__tree_node_base"** %72 to %"class.std::__1::__tree_node"**
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node"* %74, null
  br i1 %75, label %76, label %99

76:                                               ; preds = %70
  %77 = tail call i8* @_Znwm(i64 48) #14, !noalias !5
  %78 = getelementptr inbounds i8, i8* %77, i64 32
  %79 = bitcast i8* %78 to i32*
  store i32 %30, i32* %79, align 8, !noalias !5
  %80 = getelementptr inbounds i8, i8* %77, i64 40
  %81 = bitcast i8* %80 to i64*
  store i64 0, i64* %81, align 8, !noalias !5
  %82 = bitcast i8* %77 to %"class.std::__1::__tree_node"*
  %83 = bitcast i8* %77 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %85, align 8
  %86 = bitcast %"class.std::__1::__tree_node_base"** %72 to i8**
  store i8* %77, i8** %86, align 8
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %76
  %92 = ptrtoint %"class.std::__1::__tree_node_base"* %89 to i64
  store i64 %92, i64* %23, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  br label %94

94:                                               ; preds = %91, %76
  %95 = phi %"class.std::__1::__tree_node_base"* [ %83, %76 ], [ %93, %91 ]
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %96, %"class.std::__1::__tree_node_base"* %95) #13
  %97 = load i64, i64* %24, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %24, align 8
  br label %99

99:                                               ; preds = %70, %94
  %100 = phi %"class.std::__1::__tree_node"* [ %82, %94 ], [ %74, %70 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %100, i64 0, i32 1, i32 0, i32 1
  store i64 %41, i64* %101, align 8
  %102 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %33, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = tail call zeroext i1 @_ZN12CPDF_Creator16WriteIndirectObjEjPK11CPDF_Object(%class.CPDF_Creator* %0, i32 %103, %class.CPDF_Object* nonnull %33)
  br i1 %104, label %105, label %112

105:                                              ; preds = %99, %25
  %106 = add nuw i64 %27, 1
  %107 = load i64, i64* %7, align 8
  %108 = load i64, i64* %9, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %25, label %112

112:                                              ; preds = %99, %105, %1
  %113 = phi i1 [ true, %1 ], [ true, %105 ], [ false, %99 ]
  ret i1 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_Creator20InitNewObjNumOffsetsEv(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %4 = load %class.CPDF_Document*, %class.CPDF_Document** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  %11 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %12 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %14 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %13, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  br label %18

17:                                               ; preds = %94, %1
  ret void

18:                                               ; preds = %9, %94
  %19 = phi %"class.std::__1::__tree_end_node"* [ %6, %9 ], [ %95, %94 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %2, align 4
  %23 = load i8, i8* %11, align 1, !range !8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %66

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %class.CPDF_Object**
  %28 = load %class.CPDF_Object*, %class.CPDF_Object** %27, align 8
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %66, label %32

32:                                               ; preds = %25
  %33 = load %class.CPDF_Parser*, %class.CPDF_Parser** %12, align 8
  %34 = icmp eq %class.CPDF_Parser* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = call zeroext i1 @_ZNK11CPDF_Parser19IsValidObjectNumberEj(%class.CPDF_Parser* nonnull %33, i32 %22) #13
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = load %class.CPDF_Parser*, %class.CPDF_Parser** %12, align 8
  %39 = load i32, i32* %2, align 4
  %40 = call zeroext i1 @_ZNK11CPDF_Parser12IsObjectFreeEj(%class.CPDF_Parser* %38, i32 %39) #13
  br i1 %40, label %41, label %66

41:                                               ; preds = %32, %37, %35
  %42 = load i32*, i32** %14, align 8
  %43 = load i64, i64* %16, align 8
  %44 = ptrtoint i32* %42 to i64
  %45 = sub i64 %43, %44
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %41
  %48 = ashr exact i64 %45, 2
  %49 = load i32, i32* %2, align 4
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi i32* [ %42, %47 ], [ %61, %50 ]
  %52 = phi i64 [ %48, %47 ], [ %60, %50 ]
  %53 = lshr i64 %52, 1
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %55, %49
  %57 = getelementptr inbounds i32, i32* %54, i64 1
  %58 = xor i64 %53, -1
  %59 = add i64 %52, %58
  %60 = select i1 %56, i64 %59, i64 %53
  %61 = select i1 %56, i32* %57, i32* %51
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %50, %41
  %64 = phi i32* [ %42, %41 ], [ %61, %50 ]
  %65 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.32"* %13, i32* %64, i32* nonnull dereferenceable(4) %2)
  br label %66

66:                                               ; preds = %18, %25, %37, %63
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_end_node"**
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, %71
  br i1 %77, label %94, label %85

78:                                               ; preds = %66, %78
  %79 = phi %"class.std::__1::__tree_node_base"* [ %81, %78 ], [ %68, %66 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %83, label %78

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %79, i64 0, i32 0
  br label %94

85:                                               ; preds = %70, %85
  %86 = phi %"class.std::__1::__tree_end_node"** [ %89, %85 ], [ %73, %70 ]
  %87 = bitcast %"class.std::__1::__tree_end_node"** %86 to %"class.std::__1::__tree_node_base"**
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 2
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, %88
  br i1 %93, label %94, label %85

94:                                               ; preds = %85, %70, %83
  %95 = phi %"class.std::__1::__tree_end_node"* [ %84, %83 ], [ %74, %70 ], [ %90, %85 ]
  %96 = icmp eq %"class.std::__1::__tree_end_node"* %95, %7
  br i1 %96, label %17, label %18
}

declare zeroext i1 @_ZNK11CPDF_Parser12IsObjectFreeEj(%class.CPDF_Parser*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.32"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = bitcast i32* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %166

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %410

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %149

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !9
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !9
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !12, !noalias !9
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !12, !noalias !9
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !9
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !9
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !12, !noalias !9
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !12, !noalias !9
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !9
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !9
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !12, !noalias !9
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !12, !noalias !9
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !9
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !9
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !12, !noalias !9
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !12, !noalias !9
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !14

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !9
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !9
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !12, !noalias !9
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !12, !noalias !9
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !16

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %149, %137
  %140 = phi i32* [ %60, %137 ], [ %154, %149 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %5, i64 %24, i1 false) #13
  br label %156

149:                                              ; preds = %39, %149
  %150 = phi i32* [ %154, %149 ], [ %40, %39 ]
  %151 = phi i32* [ %153, %149 ], [ %41, %39 ]
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds i32, i32* %151, i64 1
  %154 = getelementptr inbounds i32, i32* %150, i64 1
  %155 = icmp ult i32* %153, %8
  br i1 %155, label %149, label %139, !llvm.loop !18

156:                                              ; preds = %142, %145
  %157 = icmp ugt i32* %1, %2
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = load i32*, i32** %7, align 8
  %160 = icmp ugt i32* %159, %2
  %161 = getelementptr inbounds i32, i32* %2, i64 1
  %162 = select i1 %160, i32* %161, i32* %2
  br label %163

163:                                              ; preds = %158, %156
  %164 = phi i32* [ %2, %156 ], [ %162, %158 ]
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %1, align 4
  br label %410

166:                                              ; preds = %3
  %167 = bitcast i32** %7 to i64*
  %168 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %166
  %175 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #15
  unreachable

176:                                              ; preds = %166
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  br label %194

184:                                              ; preds = %176
  %185 = ashr exact i64 %178, 1
  %186 = icmp ult i64 %185, %172
  %187 = select i1 %186, i64 %172, i64 %185
  %188 = sub i64 %4, %169
  %189 = ashr exact i64 %188, 2
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %200, label %191

191:                                              ; preds = %184
  %192 = icmp ugt i64 %187, 4611686018427387903
  br i1 %192, label %193, label %194

193:                                              ; preds = %191
  tail call void @abort() #15
  unreachable

194:                                              ; preds = %181, %191
  %195 = phi i64 [ 4611686018427387903, %181 ], [ %187, %191 ]
  %196 = phi i64 [ %183, %181 ], [ %189, %191 ]
  %197 = shl i64 %195, 2
  %198 = tail call i8* @_Znwm(i64 %197) #14
  %199 = bitcast i8* %198 to i32*
  br label %200

200:                                              ; preds = %184, %194
  %201 = phi i64 [ %196, %194 ], [ %189, %184 ]
  %202 = phi i64 [ %195, %194 ], [ 0, %184 ]
  %203 = phi i8* [ %198, %194 ], [ null, %184 ]
  %204 = phi i32* [ %199, %194 ], [ null, %184 ]
  %205 = getelementptr inbounds i32, i32* %204, i64 %201
  %206 = getelementptr inbounds i32, i32* %204, i64 %202
  %207 = ptrtoint i32* %206 to i64
  %208 = icmp eq i64 %201, %202
  br i1 %208, label %209, label %231

209:                                              ; preds = %200
  %210 = icmp sgt i64 %201, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %209
  %212 = add nuw nsw i64 %201, 1
  %213 = sdiv i64 %212, -2
  %214 = getelementptr inbounds i32, i32* %205, i64 %213
  br label %231

215:                                              ; preds = %209
  %216 = shl nsw i64 %201, 1
  %217 = icmp eq i64 %201, 0
  %218 = select i1 %217, i64 1, i64 %216
  %219 = icmp ugt i64 %218, 4611686018427387903
  br i1 %219, label %220, label %221

220:                                              ; preds = %215
  tail call void @abort() #15
  unreachable

221:                                              ; preds = %215
  %222 = lshr i64 %218, 2
  %223 = shl i64 %218, 2
  %224 = tail call i8* @_Znwm(i64 %223) #14
  %225 = bitcast i8* %224 to i32*
  %226 = getelementptr inbounds i32, i32* %225, i64 %222
  %227 = getelementptr inbounds i32, i32* %225, i64 %218
  %228 = ptrtoint i32* %227 to i64
  %229 = icmp eq i32* %204, null
  br i1 %229, label %231, label %230

230:                                              ; preds = %221
  tail call void @_ZdlPv(i8* %203) #14
  br label %231

231:                                              ; preds = %200, %211, %221, %230
  %232 = phi i32* [ %214, %211 ], [ %226, %221 ], [ %226, %230 ], [ %205, %200 ]
  %233 = phi i64 [ %207, %211 ], [ %228, %221 ], [ %228, %230 ], [ %207, %200 ]
  %234 = load i32, i32* %2, align 4
  store i32 %234, i32* %232, align 4
  %235 = getelementptr inbounds i32, i32* %232, i64 1
  %236 = load i32*, i32** %6, align 8
  %237 = ptrtoint i32* %236 to i64
  %238 = sub i64 %4, %237
  %239 = ashr exact i64 %238, 2
  %240 = sub nsw i64 0, %239
  %241 = getelementptr inbounds i32, i32* %232, i64 %240
  %242 = ptrtoint i32* %241 to i64
  %243 = icmp sgt i64 %238, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %231
  %245 = bitcast i32* %241 to i8*
  %246 = bitcast i32* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %238, i1 false) #13
  br label %247

247:                                              ; preds = %244, %231
  %248 = load i32*, i32** %7, align 8
  %249 = icmp eq i32* %248, %1
  br i1 %249, label %403, label %250

250:                                              ; preds = %247
  %251 = getelementptr i32, i32* %248, i64 -1
  %252 = ptrtoint i32* %251 to i64
  %253 = sub i64 %252, %4
  %254 = lshr i64 %253, 2
  %255 = add nuw nsw i64 %254, 1
  %256 = icmp ult i64 %255, 8
  br i1 %256, label %350, label %257

257:                                              ; preds = %250
  %258 = getelementptr i32, i32* %248, i64 -1
  %259 = ptrtoint i32* %258 to i64
  %260 = sub i64 %259, %4
  %261 = lshr i64 %260, 2
  %262 = add nuw nsw i64 %261, 2
  %263 = getelementptr i32, i32* %232, i64 %262
  %264 = add nuw nsw i64 %261, 1
  %265 = getelementptr i32, i32* %1, i64 %264
  %266 = icmp ult i32* %235, %265
  %267 = icmp ugt i32* %263, %1
  %268 = and i1 %266, %267
  br i1 %268, label %350, label %269

269:                                              ; preds = %257
  %270 = and i64 %255, 9223372036854775800
  %271 = getelementptr i32, i32* %235, i64 %270
  %272 = getelementptr i32, i32* %1, i64 %270
  %273 = add nsw i64 %270, -8
  %274 = lshr exact i64 %273, 3
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 3
  %277 = icmp ult i64 %273, 24
  br i1 %277, label %329, label %278

278:                                              ; preds = %269
  %279 = sub nsw i64 %275, %276
  br label %280

280:                                              ; preds = %280, %278
  %281 = phi i64 [ 0, %278 ], [ %326, %280 ]
  %282 = phi i64 [ %279, %278 ], [ %327, %280 ]
  %283 = getelementptr i32, i32* %235, i64 %281
  %284 = getelementptr i32, i32* %1, i64 %281
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4, !alias.scope !19
  %287 = getelementptr i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4, !alias.scope !19
  %290 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %286, <4 x i32>* %290, align 4, !alias.scope !22, !noalias !19
  %291 = getelementptr i32, i32* %283, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %292, align 4, !alias.scope !22, !noalias !19
  %293 = or i64 %281, 8
  %294 = getelementptr i32, i32* %235, i64 %293
  %295 = getelementptr i32, i32* %1, i64 %293
  %296 = bitcast i32* %295 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4, !alias.scope !19
  %298 = getelementptr i32, i32* %295, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4, !alias.scope !19
  %301 = bitcast i32* %294 to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %301, align 4, !alias.scope !22, !noalias !19
  %302 = getelementptr i32, i32* %294, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %300, <4 x i32>* %303, align 4, !alias.scope !22, !noalias !19
  %304 = or i64 %281, 16
  %305 = getelementptr i32, i32* %235, i64 %304
  %306 = getelementptr i32, i32* %1, i64 %304
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4, !alias.scope !19
  %309 = getelementptr i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4, !alias.scope !19
  %312 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %308, <4 x i32>* %312, align 4, !alias.scope !22, !noalias !19
  %313 = getelementptr i32, i32* %305, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  store <4 x i32> %311, <4 x i32>* %314, align 4, !alias.scope !22, !noalias !19
  %315 = or i64 %281, 24
  %316 = getelementptr i32, i32* %235, i64 %315
  %317 = getelementptr i32, i32* %1, i64 %315
  %318 = bitcast i32* %317 to <4 x i32>*
  %319 = load <4 x i32>, <4 x i32>* %318, align 4, !alias.scope !19
  %320 = getelementptr i32, i32* %317, i64 4
  %321 = bitcast i32* %320 to <4 x i32>*
  %322 = load <4 x i32>, <4 x i32>* %321, align 4, !alias.scope !19
  %323 = bitcast i32* %316 to <4 x i32>*
  store <4 x i32> %319, <4 x i32>* %323, align 4, !alias.scope !22, !noalias !19
  %324 = getelementptr i32, i32* %316, i64 4
  %325 = bitcast i32* %324 to <4 x i32>*
  store <4 x i32> %322, <4 x i32>* %325, align 4, !alias.scope !22, !noalias !19
  %326 = add i64 %281, 32
  %327 = add i64 %282, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %280, !llvm.loop !24

329:                                              ; preds = %280, %269
  %330 = phi i64 [ 0, %269 ], [ %326, %280 ]
  %331 = icmp eq i64 %276, 0
  br i1 %331, label %348, label %332

332:                                              ; preds = %329, %332
  %333 = phi i64 [ %345, %332 ], [ %330, %329 ]
  %334 = phi i64 [ %346, %332 ], [ %276, %329 ]
  %335 = getelementptr i32, i32* %235, i64 %333
  %336 = getelementptr i32, i32* %1, i64 %333
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4, !alias.scope !19
  %339 = getelementptr i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4, !alias.scope !19
  %342 = bitcast i32* %335 to <4 x i32>*
  store <4 x i32> %338, <4 x i32>* %342, align 4, !alias.scope !22, !noalias !19
  %343 = getelementptr i32, i32* %335, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  store <4 x i32> %341, <4 x i32>* %344, align 4, !alias.scope !22, !noalias !19
  %345 = add i64 %333, 8
  %346 = add i64 %334, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %332, !llvm.loop !25

348:                                              ; preds = %332, %329
  %349 = icmp eq i64 %255, %270
  br i1 %349, label %403, label %350

350:                                              ; preds = %348, %257, %250
  %351 = phi i32* [ %235, %257 ], [ %235, %250 ], [ %271, %348 ]
  %352 = phi i32* [ %1, %257 ], [ %1, %250 ], [ %272, %348 ]
  %353 = ptrtoint i32* %352 to i64
  %354 = getelementptr i32, i32* %248, i64 -1
  %355 = ptrtoint i32* %354 to i64
  %356 = sub i64 %355, %353
  %357 = lshr i64 %356, 2
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 7
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %370, label %361

361:                                              ; preds = %350, %361
  %362 = phi i32* [ %367, %361 ], [ %351, %350 ]
  %363 = phi i32* [ %366, %361 ], [ %352, %350 ]
  %364 = phi i64 [ %368, %361 ], [ %359, %350 ]
  %365 = load i32, i32* %363, align 4
  store i32 %365, i32* %362, align 4
  %366 = getelementptr inbounds i32, i32* %363, i64 1
  %367 = getelementptr inbounds i32, i32* %362, i64 1
  %368 = add i64 %364, -1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %361, !llvm.loop !26

370:                                              ; preds = %361, %350
  %371 = phi i32* [ undef, %350 ], [ %367, %361 ]
  %372 = phi i32* [ %351, %350 ], [ %367, %361 ]
  %373 = phi i32* [ %352, %350 ], [ %366, %361 ]
  %374 = icmp ult i64 %356, 28
  br i1 %374, label %403, label %375

375:                                              ; preds = %370, %375
  %376 = phi i32* [ %401, %375 ], [ %372, %370 ]
  %377 = phi i32* [ %400, %375 ], [ %373, %370 ]
  %378 = load i32, i32* %377, align 4
  store i32 %378, i32* %376, align 4
  %379 = getelementptr inbounds i32, i32* %377, i64 1
  %380 = getelementptr inbounds i32, i32* %376, i64 1
  %381 = load i32, i32* %379, align 4
  store i32 %381, i32* %380, align 4
  %382 = getelementptr inbounds i32, i32* %377, i64 2
  %383 = getelementptr inbounds i32, i32* %376, i64 2
  %384 = load i32, i32* %382, align 4
  store i32 %384, i32* %383, align 4
  %385 = getelementptr inbounds i32, i32* %377, i64 3
  %386 = getelementptr inbounds i32, i32* %376, i64 3
  %387 = load i32, i32* %385, align 4
  store i32 %387, i32* %386, align 4
  %388 = getelementptr inbounds i32, i32* %377, i64 4
  %389 = getelementptr inbounds i32, i32* %376, i64 4
  %390 = load i32, i32* %388, align 4
  store i32 %390, i32* %389, align 4
  %391 = getelementptr inbounds i32, i32* %377, i64 5
  %392 = getelementptr inbounds i32, i32* %376, i64 5
  %393 = load i32, i32* %391, align 4
  store i32 %393, i32* %392, align 4
  %394 = getelementptr inbounds i32, i32* %377, i64 6
  %395 = getelementptr inbounds i32, i32* %376, i64 6
  %396 = load i32, i32* %394, align 4
  store i32 %396, i32* %395, align 4
  %397 = getelementptr inbounds i32, i32* %377, i64 7
  %398 = getelementptr inbounds i32, i32* %376, i64 7
  %399 = load i32, i32* %397, align 4
  store i32 %399, i32* %398, align 4
  %400 = getelementptr inbounds i32, i32* %377, i64 8
  %401 = getelementptr inbounds i32, i32* %376, i64 8
  %402 = icmp eq i32* %400, %248
  br i1 %402, label %403, label %375, !llvm.loop !27

403:                                              ; preds = %370, %375, %348, %247
  %404 = phi i32* [ %235, %247 ], [ %271, %348 ], [ %371, %370 ], [ %401, %375 ]
  %405 = ptrtoint i32* %404 to i64
  %406 = load i32*, i32** %6, align 8
  store i64 %242, i64* %168, align 8
  store i64 %405, i64* %167, align 8
  store i64 %233, i64* %177, align 8
  %407 = icmp eq i32* %406, null
  br i1 %407, label %410, label %408

408:                                              ; preds = %403
  %409 = bitcast i32* %406 to i8*
  tail call void @_ZdlPv(i8* %409) #14
  br label %410

410:                                              ; preds = %408, %403, %16, %163
  %411 = phi i32* [ %1, %16 ], [ %1, %163 ], [ %232, %403 ], [ %232, %408 ]
  ret i32* %411
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_Creator15WriteDoc_Stage1Ev(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %259 [
    i32 0, label %7
    i32 10, label %68
    i32 15, label %120
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %9 = load %class.CPDF_Parser*, %class.CPDF_Parser** %8, align 8
  %10 = icmp eq %class.CPDF_Parser* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 17
  %13 = load i8, i8* %12, align 4, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 19
  %17 = load i8, i8* %16, align 2, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %7, %15
  %20 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  store i8 0, i8* %20, align 1
  br label %21

21:                                               ; preds = %15, %11, %19
  %22 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %23 = load %class.CPDF_Document*, %class.CPDF_Document** %22, align 8
  %24 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %23, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %24, align 8
  %26 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 5
  %27 = icmp eq %class.CPDF_Dictionary* %25, null
  br i1 %27, label %52, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #13
  %30 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %25, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #13
  %31 = icmp eq %class.CPDF_Object* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %30, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, 1
  store i64 %35, i64* %33, align 8
  br label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.172", %"class.fxcrt::RetainPtr.172"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CPDF_Object*, %class.CPDF_Object** %37, align 8
  store %class.CPDF_Object* %30, %class.CPDF_Object** %37, align 8
  %39 = icmp eq %class.CPDF_Object* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %38, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %38, i64 0, i32 0
  %47 = bitcast %class.CPDF_Object* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  call void %50(%"class.fxcrt::Retainable"* nonnull %46) #13
  br label %51

51:                                               ; preds = %36, %40, %45
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %67

52:                                               ; preds = %21
  %53 = getelementptr inbounds %"class.fxcrt::RetainPtr.172", %"class.fxcrt::RetainPtr.172"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %class.CPDF_Object*, %class.CPDF_Object** %53, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %53, align 8
  %55 = icmp eq %class.CPDF_Object* %54, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %54, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, -1
  store i64 %59, i64* %57, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %54, i64 0, i32 0
  %63 = bitcast %class.CPDF_Object* %54 to void (%"class.fxcrt::Retainable"*)***
  %64 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %64, i64 1
  %66 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %65, align 8
  tail call void %66(%"class.fxcrt::Retainable"* nonnull %62) #13
  br label %67

67:                                               ; preds = %51, %52, %56, %61
  store i32 10, i32* %5, align 8
  br label %68

68:                                               ; preds = %1, %67
  %69 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %70 = load i8, i8* %69, align 1, !range !8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %113

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %74 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %73, align 8
  %75 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 7, i64* %77, align 8
  %78 = bitcast %class.IFX_ArchiveStream* %74 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %79 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %78, align 8
  %80 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %79, i64 1
  %81 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %80, align 8
  %82 = call zeroext i1 %81(%class.IFX_WriteStream* %75, %"class.fxcrt::StringViewTemplate"* nonnull %3) #13
  br i1 %82, label %83, label %261

83:                                               ; preds = %72
  %84 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 16
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %94

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %89 = load %class.CPDF_Parser*, %class.CPDF_Parser** %88, align 8
  %90 = icmp eq %class.CPDF_Parser* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %89, i64 0, i32 7
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %87, %83, %91
  %95 = phi i32 [ %93, %91 ], [ 7, %87 ], [ %85, %83 ]
  %96 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %73, align 8
  %97 = srem i32 %95, 10
  %98 = bitcast %class.IFX_ArchiveStream* %96 to i1 (%class.IFX_ArchiveStream*, i32)***
  %99 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %98, align 8
  %100 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %99, i64 5
  %101 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %100, align 8
  %102 = call zeroext i1 %101(%class.IFX_ArchiveStream* %96, i32 %97) #13
  br i1 %102, label %103, label %261

103:                                              ; preds = %94
  %104 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %73, align 8
  %105 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %104, i64 0, i32 0
  %106 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8** %106, align 8
  %107 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 9, i64* %107, align 8
  %108 = bitcast %class.IFX_ArchiveStream* %104 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %109 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %108, align 8
  %110 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %109, i64 1
  %111 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %110, align 8
  %112 = call zeroext i1 %111(%class.IFX_WriteStream* %105, %"class.fxcrt::StringViewTemplate"* nonnull %4) #13
  br i1 %112, label %258, label %261

113:                                              ; preds = %68
  %114 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %115 = load %class.CPDF_Parser*, %class.CPDF_Parser** %114, align 8
  %116 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %115, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %class.CPDF_SyntaxParser*, %class.CPDF_SyntaxParser** %116, align 8
  %118 = call i64 @_ZNK17CPDF_SyntaxParser15GetDocumentSizeEv(%class.CPDF_SyntaxParser* %117) #13
  %119 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 9
  store i64 %118, i64* %119, align 8
  store i32 15, i32* %5, align 8
  br label %120

120:                                              ; preds = %1, %113
  %121 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 19
  %122 = load i8, i8* %121, align 2, !range !8
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %258, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 9
  %126 = load i64, i64* %125, align 8
  %127 = icmp sgt i64 %126, 0
  br i1 %127, label %128, label %170

128:                                              ; preds = %124
  %129 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 4096, i64 1) #13
  %130 = ptrtoint i8* %129 to i64
  %131 = sub i64 4096, %130
  %132 = getelementptr i8, i8* %129, i64 %131
  %133 = ptrtoint i8* %132 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %129, i8 0, i64 %133, i1 false) #13
  %134 = load i64, i64* %125, align 8
  %135 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %136 = load %class.CPDF_Parser*, %class.CPDF_Parser** %135, align 8
  %137 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %136, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %class.CPDF_SyntaxParser*, %class.CPDF_SyntaxParser** %137, align 8
  call void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser* %138, i64 0) #13
  %139 = icmp eq i64 %134, 0
  br i1 %139, label %161, label %140

140:                                              ; preds = %128
  %141 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %144

142:                                              ; preds = %153
  %143 = icmp eq i64 %160, 0
  br i1 %143, label %161, label %144

144:                                              ; preds = %140, %142
  %145 = phi i64 [ %134, %140 ], [ %160, %142 ]
  %146 = icmp slt i64 %145, 4096
  %147 = select i1 %146, i64 %145, i64 4096
  %148 = load %class.CPDF_Parser*, %class.CPDF_Parser** %135, align 8
  %149 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %148, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load %class.CPDF_SyntaxParser*, %class.CPDF_SyntaxParser** %149, align 8
  %151 = trunc i64 %147 to i32
  %152 = call zeroext i1 @_ZN17CPDF_SyntaxParser9ReadBlockEPhj(%class.CPDF_SyntaxParser* %150, i8* %129, i32 %151) #13
  br i1 %152, label %153, label %161

153:                                              ; preds = %144
  %154 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %141, align 8
  %155 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %154, i64 0, i32 0
  %156 = bitcast %class.IFX_ArchiveStream* %154 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %157 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %156, align 8
  %158 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %157, align 8
  %159 = call zeroext i1 %158(%class.IFX_WriteStream* %155, i8* %129, i64 %147) #13
  %160 = sub nsw i64 %145, %147
  br i1 %159, label %142, label %161

161:                                              ; preds = %142, %144, %153, %128
  %162 = phi i32 [ 0, %128 ], [ 1, %153 ], [ 1, %144 ], [ 0, %142 ]
  %163 = icmp eq i8* %129, null
  br i1 %163, label %165, label %164

164:                                              ; preds = %161
  call void @_Z7FX_FreePv(i8* nonnull %129) #13
  br label %165

165:                                              ; preds = %161, %164
  %166 = icmp eq i32 %162, 0
  br i1 %166, label %167, label %261

167:                                              ; preds = %165
  %168 = load i8, i8* %121, align 2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %258, label %170

170:                                              ; preds = %124, %167
  %171 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %172 = load %class.CPDF_Parser*, %class.CPDF_Parser** %171, align 8
  %173 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %172, i64 0, i32 9
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %258

176:                                              ; preds = %170
  %177 = call i32 @_ZNK11CPDF_Parser13GetLastObjNumEv(%class.CPDF_Parser* %172) #13
  %178 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %179 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %180 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node"**
  %181 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %178, i64 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::map.184"* %178 to i64*
  %185 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  br label %186

186:                                              ; preds = %176, %253
  %187 = phi i32 [ 0, %176 ], [ %254, %253 ]
  %188 = load %class.CPDF_Parser*, %class.CPDF_Parser** %171, align 8
  %189 = call zeroext i1 @_ZNK11CPDF_Parser18IsObjectFreeOrNullEj(%class.CPDF_Parser* %188, i32 %187) #13
  br i1 %189, label %253, label %190

190:                                              ; preds = %186
  %191 = load %class.CPDF_Parser*, %class.CPDF_Parser** %171, align 8
  %192 = call i64 @_ZNK11CPDF_Parser23GetObjectPositionOrZeroEj(%class.CPDF_Parser* %191, i32 %187) #13
  %193 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %180, align 8
  %194 = icmp eq %"class.std::__1::__tree_node"* %193, null
  br i1 %194, label %221, label %195

195:                                              ; preds = %190, %217
  %196 = phi %"class.std::__1::__tree_node"* [ %220, %217 ], [ %193, %190 ]
  %197 = phi %"class.std::__1::__tree_node_base"** [ %219, %217 ], [ %181, %190 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 1, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp ult i32 %187, %199
  br i1 %200, label %201, label %207

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0
  br label %221

207:                                              ; preds = %195
  %208 = icmp ult i32 %199, %187
  br i1 %208, label %209, label %215

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 1
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0
  br label %221

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 0, i32 0
  br label %221

217:                                              ; preds = %209, %201
  %218 = phi %"class.std::__1::__tree_node_base"* [ %203, %201 ], [ %211, %209 ]
  %219 = phi %"class.std::__1::__tree_node_base"** [ %202, %201 ], [ %210, %209 ]
  %220 = bitcast %"class.std::__1::__tree_node_base"* %218 to %"class.std::__1::__tree_node"*
  br label %195

221:                                              ; preds = %190, %215, %213, %205
  %222 = phi %"class.std::__1::__tree_end_node"* [ %206, %205 ], [ %214, %213 ], [ %216, %215 ], [ %179, %190 ]
  %223 = phi %"class.std::__1::__tree_node_base"** [ %202, %205 ], [ %210, %213 ], [ %197, %215 ], [ %182, %190 ]
  %224 = bitcast %"class.std::__1::__tree_node_base"** %223 to %"class.std::__1::__tree_node"**
  %225 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node"* %225, null
  br i1 %226, label %227, label %250

227:                                              ; preds = %221
  %228 = call i8* @_Znwm(i64 48) #14, !noalias !28
  %229 = getelementptr inbounds i8, i8* %228, i64 32
  %230 = bitcast i8* %229 to i32*
  store i32 %187, i32* %230, align 8, !noalias !28
  %231 = getelementptr inbounds i8, i8* %228, i64 40
  %232 = bitcast i8* %231 to i64*
  store i64 0, i64* %232, align 8, !noalias !28
  %233 = bitcast i8* %228 to %"class.std::__1::__tree_node"*
  %234 = bitcast i8* %228 to %"class.std::__1::__tree_node_base"*
  %235 = getelementptr inbounds i8, i8* %228, i64 16
  %236 = bitcast i8* %235 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %222, %"class.std::__1::__tree_end_node"** %236, align 8
  %237 = bitcast %"class.std::__1::__tree_node_base"** %223 to i8**
  store i8* %228, i8** %237, align 8
  %238 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %227
  %243 = ptrtoint %"class.std::__1::__tree_node_base"* %240 to i64
  store i64 %243, i64* %184, align 8
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  br label %245

245:                                              ; preds = %242, %227
  %246 = phi %"class.std::__1::__tree_node_base"* [ %234, %227 ], [ %244, %242 ]
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"* %246) #13
  %248 = load i64, i64* %185, align 8
  %249 = add i64 %248, 1
  store i64 %249, i64* %185, align 8
  br label %250

250:                                              ; preds = %221, %245
  %251 = phi %"class.std::__1::__tree_node"* [ %233, %245 ], [ %225, %221 ]
  %252 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %251, i64 0, i32 1, i32 0, i32 1
  store i64 %192, i64* %252, align 8
  br label %253

253:                                              ; preds = %186, %250
  %254 = add i32 %187, 1
  %255 = load %class.CPDF_Parser*, %class.CPDF_Parser** %171, align 8
  %256 = call i32 @_ZNK11CPDF_Parser13GetLastObjNumEv(%class.CPDF_Parser* %255) #13
  %257 = icmp ugt i32 %254, %256
  br i1 %257, label %258, label %186

258:                                              ; preds = %253, %170, %167, %120, %103
  store i32 20, i32* %5, align 8
  br label %259

259:                                              ; preds = %258, %1
  call void @_ZN12CPDF_Creator20InitNewObjNumOffsetsEv(%class.CPDF_Creator* %0)
  %260 = load i32, i32* %5, align 8
  br label %261

261:                                              ; preds = %103, %94, %72, %165, %259
  %262 = phi i32 [ %260, %259 ], [ -1, %165 ], [ -1, %72 ], [ -1, %103 ], [ -1, %94 ]
  ret i32 %262
}

declare %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

declare i64 @_ZNK17CPDF_SyntaxParser15GetDocumentSizeEv(%class.CPDF_SyntaxParser*) local_unnamed_addr #1

declare void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN17CPDF_SyntaxParser9ReadBlockEPhj(%class.CPDF_SyntaxParser*, i8*, i32) local_unnamed_addr #1

declare i64 @_ZNK11CPDF_Parser23GetObjectPositionOrZeroEj(%class.CPDF_Parser*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_Creator15WriteDoc_Stage2Ev(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %210 [
    i32 20, label %7
    i32 21, label %4
    i32 25, label %34
    i32 26, label %36
    i32 27, label %39
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %6 = load %class.CPDF_Parser*, %class.CPDF_Parser** %5, align 8
  br label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %9 = load i8, i8* %8, align 1, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %13 = load %class.CPDF_Parser*, %class.CPDF_Parser** %12, align 8
  %14 = icmp eq %class.CPDF_Parser* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  store i32 0, i32* %16, align 4
  store i32 21, i32* %2, align 8
  br label %17

17:                                               ; preds = %4, %15
  %18 = phi %class.CPDF_Parser* [ %6, %4 ], [ %13, %15 ]
  %19 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %20 = tail call i32 @_ZNK11CPDF_Parser13GetLastObjNumEv(%class.CPDF_Parser* %18) #13
  %21 = load %class.CPDF_Parser*, %class.CPDF_Parser** %19, align 8
  %22 = tail call zeroext i1 @_ZNK11CPDF_Parser19IsValidObjectNumberEj(%class.CPDF_Parser* %21, i32 %20) #13
  br i1 %22, label %23, label %33

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, %20
  br i1 %26, label %33, label %29

27:                                               ; preds = %29
  %28 = icmp ugt i32 %32, %20
  br i1 %28, label %33, label %29

29:                                               ; preds = %23, %27
  %30 = phi i32 [ %32, %27 ], [ %25, %23 ]
  %31 = tail call zeroext i1 @_ZN12CPDF_Creator22WriteOldIndirectObjectEj(%class.CPDF_Creator* %0, i32 %30) #13
  %32 = add i32 %30, 1
  br i1 %31, label %27, label %210

33:                                               ; preds = %27, %23, %17, %7, %11
  store i32 25, i32* %2, align 8
  br label %34

34:                                               ; preds = %33, %1
  %35 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  store i32 0, i32* %35, align 4
  store i32 26, i32* %2, align 8
  br label %36

36:                                               ; preds = %1, %34
  %37 = tail call zeroext i1 @_ZN12CPDF_Creator12WriteNewObjsEv(%class.CPDF_Creator* %0)
  br i1 %37, label %38, label %210

38:                                               ; preds = %36
  store i32 27, i32* %2, align 8
  br label %39

39:                                               ; preds = %1, %38
  %40 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %41 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %40, align 8
  %42 = icmp eq %class.CPDF_Dictionary* %41, null
  br i1 %42, label %209, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %41, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %209

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %52 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %51, align 8
  %53 = bitcast %class.IFX_ArchiveStream* %52 to i64 (%class.IFX_ArchiveStream*)***
  %54 = load i64 (%class.IFX_ArchiveStream*)**, i64 (%class.IFX_ArchiveStream*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %54, i64 6
  %56 = load i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %55, align 8
  %57 = tail call i64 %56(%class.IFX_ArchiveStream* %52) #13
  %58 = load i32, i32* %48, align 8
  %59 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %40, align 8
  %60 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %59, i64 0, i32 0
  %61 = tail call zeroext i1 @_ZN12CPDF_Creator16WriteIndirectObjEjPK11CPDF_Object(%class.CPDF_Creator* %0, i32 %58, %class.CPDF_Object* %60)
  br i1 %61, label %62, label %210

62:                                               ; preds = %47
  %63 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %64 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node"**
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %97, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = load i32, i32* %48, align 4
  br label %71

71:                                               ; preds = %93, %68
  %72 = phi %"class.std::__1::__tree_node"* [ %96, %93 ], [ %66, %68 ]
  %73 = phi %"class.std::__1::__tree_node_base"** [ %95, %93 ], [ %69, %68 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 1, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %70, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %93

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0
  br label %99

83:                                               ; preds = %71
  %84 = icmp ult i32 %75, %70
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 1
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0
  br label %99

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0
  br label %99

93:                                               ; preds = %85, %77
  %94 = phi %"class.std::__1::__tree_node_base"* [ %79, %77 ], [ %87, %85 ]
  %95 = phi %"class.std::__1::__tree_node_base"** [ %78, %77 ], [ %86, %85 ]
  %96 = bitcast %"class.std::__1::__tree_node_base"* %94 to %"class.std::__1::__tree_node"*
  br label %71

97:                                               ; preds = %62
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  br label %99

99:                                               ; preds = %97, %91, %89, %81
  %100 = phi %"class.std::__1::__tree_end_node"* [ %64, %97 ], [ %82, %81 ], [ %90, %89 ], [ %92, %91 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %98, %97 ], [ %78, %81 ], [ %86, %89 ], [ %73, %91 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node"**
  %103 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node"* %103, null
  br i1 %104, label %105, label %133

105:                                              ; preds = %99
  %106 = tail call i8* @_Znwm(i64 48) #14, !noalias !31
  %107 = getelementptr inbounds i8, i8* %106, i64 32
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %48, align 4, !noalias !31
  store i32 %109, i32* %108, align 8, !noalias !31
  %110 = getelementptr inbounds i8, i8* %106, i64 40
  %111 = bitcast i8* %110 to i64*
  store i64 0, i64* %111, align 8, !noalias !31
  %112 = bitcast i8* %106 to %"class.std::__1::__tree_node"*
  %113 = bitcast i8* %106 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds i8, i8* %106, i64 16
  %115 = bitcast i8* %114 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** %115, align 8
  %116 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8**
  store i8* %106, i8** %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %63, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %118, i64 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %105
  %123 = ptrtoint %"class.std::__1::__tree_node_base"* %120 to i64
  %124 = bitcast %"class.std::__1::map.184"* %63 to i64*
  store i64 %123, i64* %124, align 8
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  br label %126

126:                                              ; preds = %122, %105
  %127 = phi %"class.std::__1::__tree_node_base"* [ %113, %105 ], [ %125, %122 ]
  %128 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"* %127) #13
  %130 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %130, align 8
  br label %133

133:                                              ; preds = %99, %126
  %134 = phi %"class.std::__1::__tree_node"* [ %112, %126 ], [ %103, %99 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %134, i64 0, i32 1, i32 0, i32 1
  store i64 %57, i64* %135, align 8
  %136 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %137 = load i8, i8* %136, align 1, !range !8
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %209, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %141 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = icmp eq i32* %142, %144
  %146 = ptrtoint i32* %144 to i64
  br i1 %145, label %152, label %147

147:                                              ; preds = %139
  %148 = load i32, i32* %48, align 4
  store i32 %148, i32* %142, align 4
  %149 = getelementptr inbounds i32, i32* %142, i64 1
  %150 = ptrtoint i32* %149 to i64
  %151 = bitcast i32** %141 to i64*
  store i64 %150, i64* %151, align 8
  br label %209

152:                                              ; preds = %139
  %153 = ptrtoint i32* %142 to i64
  %154 = bitcast i32** %141 to i64*
  %155 = bitcast %"class.std::__1::vector.32"* %140 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %153, %156
  %158 = ashr exact i64 %157, 2
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 4611686018427387903
  br i1 %160, label %161, label %163

161:                                              ; preds = %152
  %162 = bitcast %"class.std::__1::vector.32"* %140 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %162) #15
  unreachable

163:                                              ; preds = %152
  %164 = bitcast i32** %143 to i64*
  %165 = sub i64 %146, %156
  %166 = ashr exact i64 %165, 2
  %167 = icmp ult i64 %166, 2305843009213693951
  br i1 %167, label %168, label %176

168:                                              ; preds = %163
  %169 = ashr exact i64 %165, 1
  %170 = icmp ult i64 %169, %159
  %171 = select i1 %170, i64 %159, i64 %169
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %168
  %174 = icmp ugt i64 %171, 4611686018427387903
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  tail call void @abort() #15
  unreachable

176:                                              ; preds = %173, %163
  %177 = phi i64 [ %171, %173 ], [ 4611686018427387903, %163 ]
  %178 = shl i64 %177, 2
  %179 = tail call i8* @_Znwm(i64 %178) #14
  %180 = bitcast i8* %179 to i32*
  br label %181

181:                                              ; preds = %176, %168
  %182 = phi i64 [ %177, %176 ], [ 0, %168 ]
  %183 = phi i32* [ %180, %176 ], [ null, %168 ]
  %184 = getelementptr inbounds i32, i32* %183, i64 %158
  %185 = getelementptr inbounds i32, i32* %183, i64 %182
  %186 = ptrtoint i32* %185 to i64
  %187 = load i32, i32* %48, align 4
  store i32 %187, i32* %184, align 4
  %188 = getelementptr inbounds i32, i32* %184, i64 1
  %189 = ptrtoint i32* %188 to i64
  %190 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %140, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = load i64, i64* %154, align 8
  %193 = ptrtoint i32* %191 to i64
  %194 = sub i64 %192, %193
  %195 = ashr exact i64 %194, 2
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds i32, i32* %184, i64 %196
  %198 = ptrtoint i32* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %181
  %201 = bitcast i32* %197 to i8*
  %202 = bitcast i32* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %202, i64 %194, i1 false) #13
  %203 = load i32*, i32** %190, align 8
  br label %204

204:                                              ; preds = %200, %181
  %205 = phi i32* [ %191, %181 ], [ %203, %200 ]
  store i64 %198, i64* %155, align 8
  store i64 %189, i64* %154, align 8
  store i64 %186, i64* %164, align 8
  %206 = icmp eq i32* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  %208 = bitcast i32* %205 to i8*
  tail call void @_ZdlPv(i8* %208) #14
  br label %209

209:                                              ; preds = %39, %207, %204, %147, %133, %43
  store i32 80, i32* %2, align 8
  br label %210

210:                                              ; preds = %29, %1, %209, %47, %36
  %211 = phi i32 [ -1, %36 ], [ -1, %47 ], [ 80, %209 ], [ %3, %1 ], [ -1, %29 ]
  ret i32 %211
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_Creator15WriteDoc_Stage3Ev(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %15 = alloca %"class.fxcrt::ByteString", align 8
  %16 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %17 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 80
  br i1 %21, label %22, label %113

22:                                               ; preds = %1
  %23 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %24 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %23, align 8
  %25 = bitcast %class.IFX_ArchiveStream* %24 to i64 (%class.IFX_ArchiveStream*)***
  %26 = load i64 (%class.IFX_ArchiveStream*)**, i64 (%class.IFX_ArchiveStream*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %26, i64 6
  %28 = load i64 (%class.IFX_ArchiveStream*)*, i64 (%class.IFX_ArchiveStream*)** %27, align 8
  %29 = tail call i64 %28(%class.IFX_ArchiveStream* %24) #13
  %30 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 12
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %32 = load i8, i8* %31, align 1, !range !8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %36 = load %class.CPDF_Parser*, %class.CPDF_Parser** %35, align 8
  %37 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %36, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %112

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %36, i64 0, i32 9
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %100

44:                                               ; preds = %22, %40
  %45 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %46, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %2) #13
  %47 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node"* %49, null
  br i1 %50, label %72, label %51

51:                                               ; preds = %44, %51
  %52 = phi %"class.std::__1::__tree_end_node"* [ %62, %51 ], [ %47, %44 ]
  %53 = phi %"class.std::__1::__tree_node"* [ %63, %51 ], [ %49, %44 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 1, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node"**
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_node"* %53 to %"class.std::__1::__tree_node"**
  %61 = select i1 %56, %"class.std::__1::__tree_node"** %58, %"class.std::__1::__tree_node"** %60
  %62 = select i1 %56, %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"* %59
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %51

65:                                               ; preds = %51
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %62, %47
  br i1 %66, label %72, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 4
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp ugt i32 %70, 1
  br i1 %71, label %72, label %73

72:                                               ; preds = %67, %65, %44
  br label %73

73:                                               ; preds = %67, %72
  %74 = phi %"class.std::__1::__tree_end_node"* [ %47, %72 ], [ %62, %67 ]
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %74, %47
  %76 = select i1 %75, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)
  %77 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* %76) #13
  %78 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %23, align 8
  %79 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %78, i64 0, i32 0
  %80 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %46, align 8, !noalias !34
  %81 = icmp eq %"class.fxcrt::StringDataTemplate"* %80, null
  %82 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %80, i64 0, i32 3, i64 0
  %83 = select i1 %81, i8* null, i8* %82
  br i1 %81, label %87, label %84

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %80, i64 0, i32 1
  %86 = load i64, i64* %85, align 8, !noalias !34
  br label %87

87:                                               ; preds = %73, %84
  %88 = phi i64 [ %86, %84 ], [ 0, %73 ]
  %89 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %83, i8** %89, align 8, !alias.scope !34
  %90 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 %88, i64* %90, align 8, !alias.scope !34
  %91 = bitcast %class.IFX_ArchiveStream* %78 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %92 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %92, i64 1
  %94 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %93, align 8
  %95 = call zeroext i1 %94(%class.IFX_WriteStream* %79, %"class.fxcrt::StringViewTemplate"* nonnull %3) #13
  br i1 %95, label %96, label %99

96:                                               ; preds = %87
  %97 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  store i32 1, i32* %97, align 4
  store i32 81, i32* %19, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %98 = load i32, i32* %19, align 8
  br label %113

99:                                               ; preds = %87
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  br label %492

100:                                              ; preds = %40
  %101 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %23, align 8
  %102 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %101, i64 0, i32 0
  %103 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %103, align 8
  %104 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 6, i64* %104, align 8
  %105 = bitcast %class.IFX_ArchiveStream* %101 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %106 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %106, i64 1
  %108 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %107, align 8
  %109 = call zeroext i1 %108(%class.IFX_WriteStream* %102, %"class.fxcrt::StringViewTemplate"* nonnull %4) #13
  br i1 %109, label %110, label %492

110:                                              ; preds = %100
  %111 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  store i32 0, i32* %111, align 4
  store i32 82, i32* %19, align 8
  br label %314

112:                                              ; preds = %34
  store i32 90, i32* %19, align 8
  br label %492

113:                                              ; preds = %96, %1
  %114 = phi i32 [ %98, %96 ], [ %20, %1 ]
  %115 = icmp eq i32 %114, 81
  br i1 %115, label %116, label %311

116:                                              ; preds = %113
  %117 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #13
  %118 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %118, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %5) #13
  %119 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %122 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node"**
  %123 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  %124 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  %125 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %128 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  %129 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %130 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %132 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %129, i64 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::map.184"* %129 to i64*
  %134 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %135 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  br label %137

137:                                              ; preds = %306, %116
  %138 = phi i32 [ %120, %116 ], [ %224, %306 ]
  %139 = icmp ugt i32 %138, %18
  br i1 %139, label %308, label %140

140:                                              ; preds = %137
  %141 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %122, align 8
  %142 = icmp eq %"class.std::__1::__tree_node"* %141, null
  br label %143

143:                                              ; preds = %140, %166
  %144 = phi i32 [ %138, %140 ], [ %167, %166 ]
  br i1 %142, label %166, label %145

145:                                              ; preds = %143, %145
  %146 = phi %"class.std::__1::__tree_end_node"* [ %156, %145 ], [ %121, %143 ]
  %147 = phi %"class.std::__1::__tree_node"* [ %157, %145 ], [ %141, %143 ]
  %148 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 1, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp ult i32 %149, %144
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 1
  %152 = bitcast %"class.std::__1::__tree_node_base"** %151 to %"class.std::__1::__tree_node"**
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 0
  %154 = bitcast %"class.std::__1::__tree_node"* %147 to %"class.std::__1::__tree_node"**
  %155 = select i1 %150, %"class.std::__1::__tree_node"** %152, %"class.std::__1::__tree_node"** %154
  %156 = select i1 %150, %"class.std::__1::__tree_end_node"* %146, %"class.std::__1::__tree_end_node"* %153
  %157 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %155, align 8
  %158 = icmp eq %"class.std::__1::__tree_node"* %157, null
  br i1 %158, label %159, label %145

159:                                              ; preds = %145
  %160 = icmp eq %"class.std::__1::__tree_end_node"* %156, %121
  br i1 %160, label %166, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %156, i64 4
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = icmp ult i32 %144, %164
  br i1 %165, label %166, label %169

166:                                              ; preds = %161, %159, %143
  %167 = add i32 %144, 1
  %168 = icmp ugt i32 %167, %18
  br i1 %168, label %308, label %143

169:                                              ; preds = %161
  %170 = icmp ugt i32 %144, %18
  br i1 %170, label %197, label %171

171:                                              ; preds = %169, %194
  %172 = phi i32 [ %195, %194 ], [ %144, %169 ]
  br label %173

173:                                              ; preds = %171, %173
  %174 = phi %"class.std::__1::__tree_end_node"* [ %184, %173 ], [ %121, %171 ]
  %175 = phi %"class.std::__1::__tree_node"* [ %185, %173 ], [ %141, %171 ]
  %176 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %175, i64 0, i32 1, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp ult i32 %177, %172
  %179 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %175, i64 0, i32 0, i32 1
  %180 = bitcast %"class.std::__1::__tree_node_base"** %179 to %"class.std::__1::__tree_node"**
  %181 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %175, i64 0, i32 0, i32 0
  %182 = bitcast %"class.std::__1::__tree_node"* %175 to %"class.std::__1::__tree_node"**
  %183 = select i1 %178, %"class.std::__1::__tree_node"** %180, %"class.std::__1::__tree_node"** %182
  %184 = select i1 %178, %"class.std::__1::__tree_end_node"* %174, %"class.std::__1::__tree_end_node"* %181
  %185 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %183, align 8
  %186 = icmp eq %"class.std::__1::__tree_node"* %185, null
  br i1 %186, label %187, label %173

187:                                              ; preds = %173
  %188 = icmp eq %"class.std::__1::__tree_end_node"* %184, %121
  br i1 %188, label %197, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 4
  %191 = bitcast %"class.std::__1::__tree_end_node"* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = icmp ult i32 %172, %192
  br i1 %193, label %197, label %194

194:                                              ; preds = %189
  %195 = add i32 %172, 1
  %196 = icmp ugt i32 %195, %18
  br i1 %196, label %197, label %171

197:                                              ; preds = %194, %187, %189, %169
  %198 = phi i32 [ %144, %169 ], [ %172, %189 ], [ %172, %187 ], [ %195, %194 ]
  %199 = icmp eq i32 %144, 1
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #13
  call void (%"class.fxcrt::ByteString"*, i8*, ...) @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i32 %198) #13
  br label %203

201:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #13
  %202 = sub i32 %198, %144
  call void (%"class.fxcrt::ByteString"*, i8*, ...) @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* nonnull sret %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 %144, i32 %202) #13
  br label %203

203:                                              ; preds = %201, %200
  %204 = phi %"class.fxcrt::ByteString"* [ %7, %201 ], [ %6, %200 ]
  %205 = phi i8* [ %123, %201 ], [ %124, %200 ]
  %206 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %204) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %204) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #13
  %207 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %125, align 8
  %208 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %207, i64 0, i32 0
  %209 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %118, align 8, !noalias !37
  %210 = icmp eq %"class.fxcrt::StringDataTemplate"* %209, null
  %211 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %209, i64 0, i32 3, i64 0
  %212 = select i1 %210, i8* null, i8* %211
  br i1 %210, label %216, label %213

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %209, i64 0, i32 1
  %215 = load i64, i64* %214, align 8, !noalias !37
  br label %216

216:                                              ; preds = %203, %213
  %217 = phi i64 [ %215, %213 ], [ 0, %203 ]
  store i8* %212, i8** %126, align 8, !alias.scope !37
  store i64 %217, i64* %127, align 8, !alias.scope !37
  %218 = bitcast %class.IFX_ArchiveStream* %207 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %219 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %218, align 8
  %220 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %219, i64 1
  %221 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %220, align 8
  %222 = call zeroext i1 %221(%class.IFX_WriteStream* %208, %"class.fxcrt::StringViewTemplate"* nonnull %8) #13
  br i1 %222, label %223, label %310

223:                                              ; preds = %216, %299
  %224 = phi i32 [ %227, %299 ], [ %144, %216 ]
  %225 = icmp ult i32 %224, %198
  br i1 %225, label %226, label %306

226:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #13
  %227 = add nuw i32 %224, 1
  %228 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %122, align 8
  %229 = icmp eq %"class.std::__1::__tree_node"* %228, null
  br i1 %229, label %256, label %230

230:                                              ; preds = %226, %252
  %231 = phi %"class.std::__1::__tree_node"* [ %255, %252 ], [ %228, %226 ]
  %232 = phi %"class.std::__1::__tree_node_base"** [ %254, %252 ], [ %130, %226 ]
  %233 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %231, i64 0, i32 1, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp ult i32 %224, %234
  br i1 %235, label %236, label %242

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %231, i64 0, i32 0, i32 0, i32 0
  %238 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %237, align 8
  %239 = icmp eq %"class.std::__1::__tree_node_base"* %238, null
  br i1 %239, label %240, label %252

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %231, i64 0, i32 0, i32 0
  br label %256

242:                                              ; preds = %230
  %243 = icmp ult i32 %234, %224
  br i1 %243, label %244, label %250

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %231, i64 0, i32 0, i32 1
  %246 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_node_base"* %246, null
  br i1 %247, label %248, label %252

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %231, i64 0, i32 0, i32 0
  br label %256

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %231, i64 0, i32 0, i32 0
  br label %256

252:                                              ; preds = %244, %236
  %253 = phi %"class.std::__1::__tree_node_base"* [ %238, %236 ], [ %246, %244 ]
  %254 = phi %"class.std::__1::__tree_node_base"** [ %237, %236 ], [ %245, %244 ]
  %255 = bitcast %"class.std::__1::__tree_node_base"* %253 to %"class.std::__1::__tree_node"*
  br label %230

256:                                              ; preds = %226, %250, %248, %240
  %257 = phi %"class.std::__1::__tree_end_node"* [ %241, %240 ], [ %249, %248 ], [ %251, %250 ], [ %121, %226 ]
  %258 = phi %"class.std::__1::__tree_node_base"** [ %237, %240 ], [ %245, %248 ], [ %232, %250 ], [ %131, %226 ]
  %259 = bitcast %"class.std::__1::__tree_node_base"** %258 to %"class.std::__1::__tree_node"**
  %260 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %259, align 8
  %261 = icmp eq %"class.std::__1::__tree_node"* %260, null
  br i1 %261, label %262, label %285

262:                                              ; preds = %256
  %263 = call i8* @_Znwm(i64 48) #14, !noalias !40
  %264 = getelementptr inbounds i8, i8* %263, i64 32
  %265 = bitcast i8* %264 to i32*
  store i32 %224, i32* %265, align 8, !noalias !40
  %266 = getelementptr inbounds i8, i8* %263, i64 40
  %267 = bitcast i8* %266 to i64*
  store i64 0, i64* %267, align 8, !noalias !40
  %268 = bitcast i8* %263 to %"class.std::__1::__tree_node"*
  %269 = bitcast i8* %263 to %"class.std::__1::__tree_node_base"*
  %270 = getelementptr inbounds i8, i8* %263, i64 16
  %271 = bitcast i8* %270 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %257, %"class.std::__1::__tree_end_node"** %271, align 8
  %272 = bitcast %"class.std::__1::__tree_node_base"** %258 to i8**
  store i8* %263, i8** %272, align 8
  %273 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %273, i64 0, i32 0
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %274, align 8
  %276 = icmp eq %"class.std::__1::__tree_node_base"* %275, null
  br i1 %276, label %280, label %277

277:                                              ; preds = %262
  %278 = ptrtoint %"class.std::__1::__tree_node_base"* %275 to i64
  store i64 %278, i64* %133, align 8
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  br label %280

280:                                              ; preds = %277, %262
  %281 = phi %"class.std::__1::__tree_node_base"* [ %269, %262 ], [ %279, %277 ]
  %282 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %282, %"class.std::__1::__tree_node_base"* %281) #13
  %283 = load i64, i64* %134, align 8
  %284 = add i64 %283, 1
  store i64 %284, i64* %134, align 8
  br label %285

285:                                              ; preds = %256, %280
  %286 = phi %"class.std::__1::__tree_node"* [ %268, %280 ], [ %260, %256 ]
  %287 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %286, i64 0, i32 1, i32 0, i32 1
  %288 = load i64, i64* %287, align 8
  call void (%"class.fxcrt::ByteString"*, i8*, ...) @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* nonnull sret %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 %288) #13
  %289 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #13
  %290 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %125, align 8
  %291 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %290, i64 0, i32 0
  %292 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %118, align 8, !noalias !43
  %293 = icmp eq %"class.fxcrt::StringDataTemplate"* %292, null
  %294 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %292, i64 0, i32 3, i64 0
  %295 = select i1 %293, i8* null, i8* %294
  br i1 %293, label %299, label %296

296:                                              ; preds = %285
  %297 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %292, i64 0, i32 1
  %298 = load i64, i64* %297, align 8, !noalias !43
  br label %299

299:                                              ; preds = %285, %296
  %300 = phi i64 [ %298, %296 ], [ 0, %285 ]
  store i8* %295, i8** %135, align 8, !alias.scope !43
  store i64 %300, i64* %136, align 8, !alias.scope !43
  %301 = bitcast %class.IFX_ArchiveStream* %290 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %302 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %301, align 8
  %303 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %302, i64 1
  %304 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %303, align 8
  %305 = call zeroext i1 %304(%class.IFX_WriteStream* %291, %"class.fxcrt::StringViewTemplate"* nonnull %10) #13
  br i1 %305, label %223, label %310

306:                                              ; preds = %223
  %307 = icmp ugt i32 %224, %18
  br i1 %307, label %308, label %137

308:                                              ; preds = %137, %306, %166
  store i32 90, i32* %19, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #13
  %309 = load i32, i32* %19, align 8
  br label %311

310:                                              ; preds = %216, %299
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #13
  br label %492

311:                                              ; preds = %308, %113
  %312 = phi i32 [ %309, %308 ], [ %114, %113 ]
  %313 = icmp eq i32 %312, 82
  br i1 %313, label %314, label %492

314:                                              ; preds = %110, %311
  %315 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %315) #13
  %316 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %316, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %11) #13
  %317 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %318 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %319 = bitcast i32** %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.std::__1::vector.32"* %317 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = sub i64 %320, %322
  %324 = ashr exact i64 %323, 2
  %325 = icmp ult i64 %324, 4294967296
  %326 = inttoptr i64 %322 to i32*
  br i1 %325, label %328, label %327, !prof !46

327:                                              ; preds = %314
  call void @llvm.trap() #13
  unreachable

328:                                              ; preds = %314
  %329 = trunc i64 %324 to i32
  %330 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 11
  %331 = load i32, i32* %330, align 4
  %332 = icmp ult i32 %331, %329
  br i1 %332, label %333, label %489

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %317, i64 0, i32 0, i32 0
  %335 = and i64 %324, 4294967295
  %336 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  %337 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  %338 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %339 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 1
  %341 = bitcast %"class.fxcrt::ByteString"* %15 to i8*
  %342 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %343 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %344 = bitcast %"class.std::__1::__tree_end_node"* %343 to %"class.std::__1::__tree_node"**
  %345 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %346 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %343, i64 0, i32 0
  %347 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %342, i64 0, i32 0, i32 0
  %348 = bitcast %"class.std::__1::map.184"* %342 to i64*
  %349 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %350 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 0, i32 0
  %351 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 1
  br label %356

352:                                              ; preds = %402
  %353 = icmp ult i32 %403, %329
  br i1 %353, label %354, label %489

354:                                              ; preds = %352
  %355 = load i32*, i32** %334, align 8
  br label %356

356:                                              ; preds = %354, %333
  %357 = phi i32* [ %326, %333 ], [ %355, %354 ]
  %358 = phi i32 [ %331, %333 ], [ %403, %354 ]
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds i32, i32* %357, i64 %359
  %361 = load i32, i32* %360, align 4
  br label %362

362:                                              ; preds = %369, %356
  %363 = phi i32 [ %361, %356 ], [ %371, %369 ]
  %364 = phi i64 [ %359, %356 ], [ %367, %369 ]
  %365 = icmp ult i64 %364, %335
  br i1 %365, label %366, label %374

366:                                              ; preds = %362
  %367 = add nuw nsw i64 %364, 1
  %368 = icmp eq i64 %367, %335
  br i1 %368, label %374, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds i32, i32* %357, i64 %367
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %371, %363
  %373 = icmp ugt i32 %372, 1
  br i1 %373, label %374, label %362

374:                                              ; preds = %369, %366, %362
  %375 = phi i64 [ %335, %366 ], [ %364, %362 ], [ %367, %369 ]
  %376 = icmp eq i32 %361, 1
  br i1 %376, label %377, label %380

377:                                              ; preds = %374
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #13
  %378 = sub nsw i64 1, %359
  %379 = add i64 %378, %375
  call void (%"class.fxcrt::ByteString"*, i8*, ...) @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* nonnull sret %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i64 %379) #13
  br label %382

380:                                              ; preds = %374
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336) #13
  %381 = sub i64 %375, %359
  call void (%"class.fxcrt::ByteString"*, i8*, ...) @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* nonnull sret %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 %361, i64 %381) #13
  br label %382

382:                                              ; preds = %380, %377
  %383 = phi %"class.fxcrt::ByteString"* [ %13, %380 ], [ %12, %377 ]
  %384 = phi i8* [ %336, %380 ], [ %337, %377 ]
  %385 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %383) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %383) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #13
  %386 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %338, align 8
  %387 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %386, i64 0, i32 0
  %388 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %316, align 8, !noalias !47
  %389 = icmp eq %"class.fxcrt::StringDataTemplate"* %388, null
  %390 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %388, i64 0, i32 3, i64 0
  %391 = select i1 %389, i8* null, i8* %390
  br i1 %389, label %395, label %392

392:                                              ; preds = %382
  %393 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %388, i64 0, i32 1
  %394 = load i64, i64* %393, align 8, !noalias !47
  br label %395

395:                                              ; preds = %382, %392
  %396 = phi i64 [ %394, %392 ], [ 0, %382 ]
  store i8* %391, i8** %339, align 8, !alias.scope !47
  store i64 %396, i64* %340, align 8, !alias.scope !47
  %397 = bitcast %class.IFX_ArchiveStream* %386 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %398 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %397, align 8
  %399 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %398, i64 1
  %400 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %399, align 8
  %401 = call zeroext i1 %400(%class.IFX_WriteStream* %387, %"class.fxcrt::StringViewTemplate"* nonnull %14) #13
  br i1 %401, label %402, label %491

402:                                              ; preds = %395, %482
  %403 = phi i32 [ %407, %482 ], [ %358, %395 ]
  %404 = zext i32 %403 to i64
  %405 = icmp ugt i64 %375, %404
  br i1 %405, label %406, label %352

406:                                              ; preds = %402
  %407 = add i32 %403, 1
  %408 = load i32*, i32** %334, align 8
  %409 = getelementptr inbounds i32, i32* %408, i64 %404
  %410 = load i32, i32* %409, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #13
  %411 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %344, align 8
  %412 = icmp eq %"class.std::__1::__tree_node"* %411, null
  br i1 %412, label %439, label %413

413:                                              ; preds = %406, %435
  %414 = phi %"class.std::__1::__tree_node"* [ %438, %435 ], [ %411, %406 ]
  %415 = phi %"class.std::__1::__tree_node_base"** [ %437, %435 ], [ %345, %406 ]
  %416 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %414, i64 0, i32 1, i32 0, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = icmp ult i32 %410, %417
  br i1 %418, label %419, label %425

419:                                              ; preds = %413
  %420 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %414, i64 0, i32 0, i32 0, i32 0
  %421 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %420, align 8
  %422 = icmp eq %"class.std::__1::__tree_node_base"* %421, null
  br i1 %422, label %423, label %435

423:                                              ; preds = %419
  %424 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %414, i64 0, i32 0, i32 0
  br label %439

425:                                              ; preds = %413
  %426 = icmp ult i32 %417, %410
  br i1 %426, label %427, label %433

427:                                              ; preds = %425
  %428 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %414, i64 0, i32 0, i32 1
  %429 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %428, align 8
  %430 = icmp eq %"class.std::__1::__tree_node_base"* %429, null
  br i1 %430, label %431, label %435

431:                                              ; preds = %427
  %432 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %414, i64 0, i32 0, i32 0
  br label %439

433:                                              ; preds = %425
  %434 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %414, i64 0, i32 0, i32 0
  br label %439

435:                                              ; preds = %427, %419
  %436 = phi %"class.std::__1::__tree_node_base"* [ %421, %419 ], [ %429, %427 ]
  %437 = phi %"class.std::__1::__tree_node_base"** [ %420, %419 ], [ %428, %427 ]
  %438 = bitcast %"class.std::__1::__tree_node_base"* %436 to %"class.std::__1::__tree_node"*
  br label %413

439:                                              ; preds = %406, %433, %431, %423
  %440 = phi %"class.std::__1::__tree_end_node"* [ %424, %423 ], [ %432, %431 ], [ %434, %433 ], [ %343, %406 ]
  %441 = phi %"class.std::__1::__tree_node_base"** [ %420, %423 ], [ %428, %431 ], [ %415, %433 ], [ %346, %406 ]
  %442 = bitcast %"class.std::__1::__tree_node_base"** %441 to %"class.std::__1::__tree_node"**
  %443 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %442, align 8
  %444 = icmp eq %"class.std::__1::__tree_node"* %443, null
  br i1 %444, label %445, label %468

445:                                              ; preds = %439
  %446 = call i8* @_Znwm(i64 48) #14, !noalias !50
  %447 = getelementptr inbounds i8, i8* %446, i64 32
  %448 = bitcast i8* %447 to i32*
  store i32 %410, i32* %448, align 8, !noalias !50
  %449 = getelementptr inbounds i8, i8* %446, i64 40
  %450 = bitcast i8* %449 to i64*
  store i64 0, i64* %450, align 8, !noalias !50
  %451 = bitcast i8* %446 to %"class.std::__1::__tree_node"*
  %452 = bitcast i8* %446 to %"class.std::__1::__tree_node_base"*
  %453 = getelementptr inbounds i8, i8* %446, i64 16
  %454 = bitcast i8* %453 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %446, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %440, %"class.std::__1::__tree_end_node"** %454, align 8
  %455 = bitcast %"class.std::__1::__tree_node_base"** %441 to i8**
  store i8* %446, i8** %455, align 8
  %456 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %347, align 8
  %457 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %456, i64 0, i32 0
  %458 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %457, align 8
  %459 = icmp eq %"class.std::__1::__tree_node_base"* %458, null
  br i1 %459, label %463, label %460

460:                                              ; preds = %445
  %461 = ptrtoint %"class.std::__1::__tree_node_base"* %458 to i64
  store i64 %461, i64* %348, align 8
  %462 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %441, align 8
  br label %463

463:                                              ; preds = %460, %445
  %464 = phi %"class.std::__1::__tree_node_base"* [ %452, %445 ], [ %462, %460 ]
  %465 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %345, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %465, %"class.std::__1::__tree_node_base"* %464) #13
  %466 = load i64, i64* %349, align 8
  %467 = add i64 %466, 1
  store i64 %467, i64* %349, align 8
  br label %468

468:                                              ; preds = %439, %463
  %469 = phi %"class.std::__1::__tree_node"* [ %451, %463 ], [ %443, %439 ]
  %470 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %469, i64 0, i32 1, i32 0, i32 1
  %471 = load i64, i64* %470, align 8
  call void (%"class.fxcrt::ByteString"*, i8*, ...) @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* nonnull sret %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 %471) #13
  %472 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %15) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #13
  %473 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %338, align 8
  %474 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %473, i64 0, i32 0
  %475 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %316, align 8, !noalias !53
  %476 = icmp eq %"class.fxcrt::StringDataTemplate"* %475, null
  %477 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %475, i64 0, i32 3, i64 0
  %478 = select i1 %476, i8* null, i8* %477
  br i1 %476, label %482, label %479

479:                                              ; preds = %468
  %480 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %475, i64 0, i32 1
  %481 = load i64, i64* %480, align 8, !noalias !53
  br label %482

482:                                              ; preds = %468, %479
  %483 = phi i64 [ %481, %479 ], [ 0, %468 ]
  store i8* %478, i8** %350, align 8, !alias.scope !53
  store i64 %483, i64* %351, align 8, !alias.scope !53
  %484 = bitcast %class.IFX_ArchiveStream* %473 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %485 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %484, align 8
  %486 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %485, i64 1
  %487 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %486, align 8
  %488 = call zeroext i1 %487(%class.IFX_WriteStream* %474, %"class.fxcrt::StringViewTemplate"* nonnull %16) #13
  br i1 %488, label %402, label %491

489:                                              ; preds = %352, %328
  store i32 90, i32* %19, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %315) #13
  %490 = load i32, i32* %19, align 8
  br label %492

491:                                              ; preds = %395, %482
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %315) #13
  br label %492

492:                                              ; preds = %311, %112, %489, %491, %310, %100, %99
  %493 = phi i32 [ -1, %491 ], [ -1, %310 ], [ -1, %99 ], [ -1, %100 ], [ %490, %489 ], [ 90, %112 ], [ %312, %311 ]
  ret i32 %493
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteString6FormatEPKcz(%"class.fxcrt::ByteString"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12CPDF_Creator15WriteDoc_Stage4Ev(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.50", align 8
  %5 = alloca %class.CPDF_DictionaryLocker, align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %13 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %14 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %15 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %16 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %17 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %18 = alloca [20 x i8], align 16
  %19 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %20 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %21 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %22 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %23 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %24 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %25 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %26 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %27 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %28 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %29 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %30 = alloca [20 x i8], align 16
  %31 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %32 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %33 = load i8, i8* %32, align 1, !range !8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %1
  %36 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %37 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %36, align 8
  br label %46

38:                                               ; preds = %1
  %39 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %40 = load %class.CPDF_Parser*, %class.CPDF_Parser** %39, align 8
  %41 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !8
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %45 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %44, align 8
  br i1 %43, label %46, label %57

46:                                               ; preds = %38, %35
  %47 = phi %class.IFX_ArchiveStream* [ %37, %35 ], [ %45, %38 ]
  %48 = phi %class.IFX_ArchiveStream** [ %36, %35 ], [ %44, %38 ]
  %49 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %47, i64 0, i32 0
  %50 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  store i64 11, i64* %51, align 8
  %52 = bitcast %class.IFX_ArchiveStream* %47 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %53 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %53, i64 1
  %55 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %54, align 8
  %56 = call zeroext i1 %55(%class.IFX_WriteStream* %49, %"class.fxcrt::StringViewTemplate"* nonnull %2) #13
  br i1 %56, label %78, label %825

57:                                               ; preds = %38
  %58 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %59 = load %class.CPDF_Document*, %class.CPDF_Document** %58, align 8
  %60 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %59, i64 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, 1
  %63 = bitcast %class.IFX_ArchiveStream* %45 to i1 (%class.IFX_ArchiveStream*, i32)***
  %64 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %63, align 8
  %65 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %64, i64 5
  %66 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %65, align 8
  %67 = tail call zeroext i1 %66(%class.IFX_ArchiveStream* %45, i32 %62) #13
  br i1 %67, label %68, label %825

68:                                               ; preds = %57
  %69 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %44, align 8
  %70 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 9, i64* %72, align 8
  %73 = bitcast %class.IFX_ArchiveStream* %69 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %74 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %74, i64 1
  %76 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %75, align 8
  %77 = call zeroext i1 %76(%class.IFX_WriteStream* %70, %"class.fxcrt::StringViewTemplate"* nonnull %3) #13
  br i1 %77, label %78, label %825

78:                                               ; preds = %68, %46
  %79 = phi %class.IFX_ArchiveStream** [ %48, %46 ], [ %44, %68 ]
  %80 = phi i1 [ false, %46 ], [ true, %68 ]
  %81 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %82 = load %class.CPDF_Parser*, %class.CPDF_Parser** %81, align 8
  %83 = icmp eq %class.CPDF_Parser* %82, null
  br i1 %83, label %215, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.fxcrt::RetainPtr.50"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"class.fxcrt::RetainPtr.50", %"class.fxcrt::RetainPtr.50"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*), %class.CPDF_Dictionary** %86, align 8
  call void @_ZNK11CPDF_Parser18GetCombinedTrailerEv(%"class.fxcrt::RetainPtr.50"* nonnull sret %4, %class.CPDF_Parser* nonnull %82) #13
  %87 = bitcast %class.CPDF_DictionaryLocker* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  %88 = getelementptr inbounds %class.CPDF_DictionaryLocker, %class.CPDF_DictionaryLocker* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*), %class.CPDF_Dictionary** %88, align 8
  %89 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %86, align 8
  call void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker* nonnull %5, %class.CPDF_Dictionary* %89) #13
  %90 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %88, align 8
  %91 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95, !prof !56

94:                                               ; preds = %84
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !57
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !58
  unreachable

95:                                               ; preds = %84
  %96 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %90, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %96, align 8
  %98 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %90, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %99 = icmp eq %"class.std::__1::__tree_end_node"* %97, %98
  br i1 %99, label %198, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %103 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  %104 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  br label %107

107:                                              ; preds = %100, %195
  %108 = phi %"class.std::__1::__tree_end_node"* [ %97, %100 ], [ %196, %195 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 4
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.fxcrt::ByteString"*
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 5
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to %class.CPDF_Object**
  %113 = load %class.CPDF_Object*, %class.CPDF_Object** %112, align 8
  %114 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #13
  br i1 %114, label %167, label %115

115:                                              ; preds = %107
  %116 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #13
  br i1 %116, label %167, label %117

117:                                              ; preds = %115
  %118 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #13
  br i1 %118, label %167, label %119

119:                                              ; preds = %117
  %120 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #13
  br i1 %120, label %167, label %121

121:                                              ; preds = %119
  %122 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #13
  br i1 %122, label %167, label %123

123:                                              ; preds = %121
  %124 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0)) #13
  br i1 %124, label %167, label %125

125:                                              ; preds = %123
  %126 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #13
  br i1 %126, label %167, label %127

127:                                              ; preds = %125
  %128 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0)) #13
  br i1 %128, label %167, label %129

129:                                              ; preds = %127
  %130 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #13
  br i1 %130, label %167, label %131

131:                                              ; preds = %129
  %132 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0)) #13
  br i1 %132, label %167, label %133

133:                                              ; preds = %131
  %134 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #13
  br i1 %134, label %167, label %135

135:                                              ; preds = %133
  %136 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %137 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %136, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i8** %101, align 8
  store i64 1, i64* %102, align 8
  %138 = bitcast %class.IFX_ArchiveStream* %136 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %139 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %138, align 8
  %140 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %139, i64 1
  %141 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %140, align 8
  %142 = call zeroext i1 %141(%class.IFX_WriteStream* %137, %"class.fxcrt::StringViewTemplate"* nonnull %6) #13
  br i1 %142, label %143, label %198

143:                                              ; preds = %135
  %144 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %145 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %144, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #13
  call void @_Z14PDF_NameEncodeRKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %8, %"class.fxcrt::ByteString"* dereferenceable(8) %110) #13
  %146 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %104, align 8, !noalias !59
  %147 = icmp eq %"class.fxcrt::StringDataTemplate"* %146, null
  %148 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %146, i64 0, i32 3, i64 0
  %149 = select i1 %147, i8* null, i8* %148
  br i1 %147, label %153, label %150

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %146, i64 0, i32 1
  %152 = load i64, i64* %151, align 8, !noalias !59
  br label %153

153:                                              ; preds = %143, %150
  %154 = phi i64 [ %152, %150 ], [ 0, %143 ]
  store i8* %149, i8** %105, align 8, !alias.scope !59
  store i64 %154, i64* %106, align 8, !alias.scope !59
  %155 = bitcast %class.IFX_ArchiveStream* %144 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %156 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %155, align 8
  %157 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %156, i64 1
  %158 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %157, align 8
  %159 = call zeroext i1 %158(%class.IFX_WriteStream* %145, %"class.fxcrt::StringViewTemplate"* nonnull %7) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #13
  br i1 %159, label %160, label %198

160:                                              ; preds = %153
  %161 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %162 = bitcast %class.CPDF_Object* %113 to i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)***
  %163 = load i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)**, i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)*** %162, align 8
  %164 = getelementptr inbounds i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)*, i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)** %163, i64 39
  %165 = load i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)*, i1 (%class.CPDF_Object*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)** %164, align 8
  %166 = call zeroext i1 %165(%class.CPDF_Object* %113, %class.IFX_ArchiveStream* %161, %class.CPDF_Encryptor* null) #13
  br i1 %166, label %167, label %198

167:                                              ; preds = %160, %133, %131, %129, %127, %125, %123, %121, %119, %117, %115, %107
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 1, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %171, label %179

171:                                              ; preds = %167
  %172 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.std::__1::__tree_node_base"*
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 2
  %174 = bitcast %"class.std::__1::__tree_end_node"* %173 to %"class.std::__1::__tree_end_node"**
  %175 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, %172
  br i1 %178, label %195, label %186

179:                                              ; preds = %167, %179
  %180 = phi %"class.std::__1::__tree_node_base"* [ %182, %179 ], [ %169, %167 ]
  %181 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %180, i64 0, i32 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, null
  br i1 %183, label %184, label %179

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %180, i64 0, i32 0
  br label %195

186:                                              ; preds = %171, %186
  %187 = phi %"class.std::__1::__tree_end_node"** [ %190, %186 ], [ %174, %171 ]
  %188 = bitcast %"class.std::__1::__tree_end_node"** %187 to %"class.std::__1::__tree_node_base"**
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %191 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %190, align 8
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %191, i64 0, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, %189
  br i1 %194, label %195, label %186

195:                                              ; preds = %186, %171, %184
  %196 = phi %"class.std::__1::__tree_end_node"* [ %185, %184 ], [ %175, %171 ], [ %191, %186 ]
  %197 = icmp eq %"class.std::__1::__tree_end_node"* %196, %98
  br i1 %197, label %198, label %107

198:                                              ; preds = %135, %160, %195, %153, %95
  %199 = phi i32 [ 0, %95 ], [ 1, %153 ], [ 0, %195 ], [ 1, %160 ], [ 1, %135 ]
  call void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #13
  %200 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %86, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %86, align 8
  %201 = icmp eq %class.CPDF_Dictionary* %200, null
  br i1 %201, label %213, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %200, i64 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = add nsw i64 %204, -1
  store i64 %205, i64* %203, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %213

207:                                              ; preds = %202
  %208 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %200, i64 0, i32 0, i32 0
  %209 = bitcast %class.CPDF_Dictionary* %200 to void (%"class.fxcrt::Retainable"*)***
  %210 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %210, i64 1
  %212 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %211, align 8
  call void %212(%"class.fxcrt::Retainable"* nonnull %208) #13
  br label %213

213:                                              ; preds = %198, %202, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  %214 = icmp eq i32 %199, 0
  br i1 %214, label %283, label %825

215:                                              ; preds = %78
  %216 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %217 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %216, i64 0, i32 0
  %218 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8** %218, align 8
  %219 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  store i64 8, i64* %219, align 8
  %220 = bitcast %class.IFX_ArchiveStream* %216 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %221 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %220, align 8
  %222 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %221, i64 1
  %223 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %222, align 8
  %224 = call zeroext i1 %223(%class.IFX_WriteStream* %217, %"class.fxcrt::StringViewTemplate"* nonnull %9) #13
  br i1 %224, label %225, label %825

225:                                              ; preds = %215
  %226 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %227 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %228 = load %class.CPDF_Document*, %class.CPDF_Document** %227, align 8
  %229 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %228, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %230 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %229, align 8
  %231 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %230, i64 0, i32 0, i32 1
  %232 = load i32, i32* %231, align 8
  %233 = bitcast %class.IFX_ArchiveStream* %226 to i1 (%class.IFX_ArchiveStream*, i32)***
  %234 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %233, align 8
  %235 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %234, i64 5
  %236 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %235, align 8
  %237 = call zeroext i1 %236(%class.IFX_ArchiveStream* %226, i32 %232) #13
  br i1 %237, label %238, label %825

238:                                              ; preds = %225
  %239 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %240 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %239, i64 0, i32 0
  %241 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i8** %241, align 8
  %242 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  store i64 6, i64* %242, align 8
  %243 = bitcast %class.IFX_ArchiveStream* %239 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %244 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %243, align 8
  %245 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %244, i64 1
  %246 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %245, align 8
  %247 = call zeroext i1 %246(%class.IFX_WriteStream* %240, %"class.fxcrt::StringViewTemplate"* nonnull %10) #13
  br i1 %247, label %248, label %825

248:                                              ; preds = %238
  %249 = load %class.CPDF_Document*, %class.CPDF_Document** %227, align 8
  %250 = call %class.CPDF_Dictionary* @_ZN13CPDF_Document7GetInfoEv(%class.CPDF_Document* %249) #13
  %251 = icmp eq %class.CPDF_Dictionary* %250, null
  br i1 %251, label %283, label %252

252:                                              ; preds = %248
  %253 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %254 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %253, i64 0, i32 0
  %255 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8** %255, align 8
  %256 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  store i64 6, i64* %256, align 8
  %257 = bitcast %class.IFX_ArchiveStream* %253 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %258 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %257, align 8
  %259 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %258, i64 1
  %260 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %259, align 8
  %261 = call zeroext i1 %260(%class.IFX_WriteStream* %254, %"class.fxcrt::StringViewTemplate"* nonnull %11) #13
  br i1 %261, label %262, label %825

262:                                              ; preds = %252
  %263 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %264 = load %class.CPDF_Document*, %class.CPDF_Document** %227, align 8
  %265 = call %class.CPDF_Dictionary* @_ZN13CPDF_Document7GetInfoEv(%class.CPDF_Document* %264) #13
  %266 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %265, i64 0, i32 0, i32 1
  %267 = load i32, i32* %266, align 8
  %268 = bitcast %class.IFX_ArchiveStream* %263 to i1 (%class.IFX_ArchiveStream*, i32)***
  %269 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %268, align 8
  %270 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %269, i64 5
  %271 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %270, align 8
  %272 = call zeroext i1 %271(%class.IFX_ArchiveStream* %263, i32 %267) #13
  br i1 %272, label %273, label %825

273:                                              ; preds = %262
  %274 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %275 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %274, i64 0, i32 0
  %276 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i8** %276, align 8
  %277 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 1
  store i64 6, i64* %277, align 8
  %278 = bitcast %class.IFX_ArchiveStream* %274 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %279 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %278, align 8
  %280 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %279, i64 1
  %281 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %280, align 8
  %282 = call zeroext i1 %281(%class.IFX_WriteStream* %275, %"class.fxcrt::StringViewTemplate"* nonnull %12) #13
  br i1 %282, label %283, label %825

283:                                              ; preds = %273, %248, %213
  %284 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %285 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %284, align 8
  %286 = icmp eq %class.CPDF_Dictionary* %285, null
  br i1 %286, label %336, label %287

287:                                              ; preds = %283
  %288 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %289 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %288, i64 0, i32 0
  %290 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i8** %290, align 8
  %291 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 1
  store i64 8, i64* %291, align 8
  %292 = bitcast %class.IFX_ArchiveStream* %288 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %293 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %292, align 8
  %294 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %293, i64 1
  %295 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %294, align 8
  %296 = call zeroext i1 %295(%class.IFX_WriteStream* %289, %"class.fxcrt::StringViewTemplate"* nonnull %13) #13
  br i1 %296, label %297, label %825

297:                                              ; preds = %287
  %298 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %284, align 8
  %299 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %298, i64 0, i32 0, i32 1
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %308

302:                                              ; preds = %297
  %303 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %304 = load %class.CPDF_Document*, %class.CPDF_Document** %303, align 8
  %305 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %304, i64 0, i32 0, i32 0, i32 1
  %306 = load i32, i32* %305, align 8
  %307 = add i32 %306, 1
  br label %308

308:                                              ; preds = %302, %297
  %309 = phi i32 [ %307, %302 ], [ %300, %297 ]
  %310 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %311 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %310, i64 0, i32 0
  %312 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8** %312, align 8
  %313 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 1
  store i64 1, i64* %313, align 8
  %314 = bitcast %class.IFX_ArchiveStream* %310 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %315 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %314, align 8
  %316 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %315, i64 1
  %317 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %316, align 8
  %318 = call zeroext i1 %317(%class.IFX_WriteStream* %311, %"class.fxcrt::StringViewTemplate"* nonnull %14) #13
  br i1 %318, label %319, label %825

319:                                              ; preds = %308
  %320 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %321 = bitcast %class.IFX_ArchiveStream* %320 to i1 (%class.IFX_ArchiveStream*, i32)***
  %322 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %321, align 8
  %323 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %322, i64 5
  %324 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %323, align 8
  %325 = call zeroext i1 %324(%class.IFX_ArchiveStream* %320, i32 %309) #13
  br i1 %325, label %326, label %825

326:                                              ; preds = %319
  %327 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %328 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %327, i64 0, i32 0
  %329 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %15, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8** %329, align 8
  %330 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %15, i64 0, i32 0, i32 1
  store i64 5, i64* %330, align 8
  %331 = bitcast %class.IFX_ArchiveStream* %327 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %332 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %331, align 8
  %333 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %332, i64 1
  %334 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %333, align 8
  %335 = call zeroext i1 %334(%class.IFX_WriteStream* %328, %"class.fxcrt::StringViewTemplate"* nonnull %15) #13
  br i1 %335, label %336, label %825

336:                                              ; preds = %326, %283
  %337 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %338 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %337, i64 0, i32 0
  %339 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i8** %339, align 8
  %340 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 1
  store i64 6, i64* %340, align 8
  %341 = bitcast %class.IFX_ArchiveStream* %337 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %342 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %341, align 8
  %343 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %342, i64 1
  %344 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %343, align 8
  %345 = call zeroext i1 %344(%class.IFX_WriteStream* %338, %"class.fxcrt::StringViewTemplate"* nonnull %16) #13
  br i1 %345, label %346, label %825

346:                                              ; preds = %336
  %347 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %348 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  %349 = load i32, i32* %348, align 8
  %350 = select i1 %80, i32 2, i32 1
  %351 = add i32 %349, %350
  %352 = bitcast %class.IFX_ArchiveStream* %347 to i1 (%class.IFX_ArchiveStream*, i32)***
  %353 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %352, align 8
  %354 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %353, i64 5
  %355 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %354, align 8
  %356 = call zeroext i1 %355(%class.IFX_ArchiveStream* %347, i32 %351) #13
  br i1 %356, label %357, label %825

357:                                              ; preds = %346
  %358 = load i8, i8* %32, align 1, !range !8
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %385, label %360

360:                                              ; preds = %357
  %361 = load %class.CPDF_Parser*, %class.CPDF_Parser** %81, align 8
  %362 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %361, i64 0, i32 9
  %363 = load i64, i64* %362, align 8
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %385, label %365

365:                                              ; preds = %360
  %366 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %367 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %366, i64 0, i32 0
  %368 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %17, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8** %368, align 8
  %369 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %17, i64 0, i32 0, i32 1
  store i64 6, i64* %369, align 8
  %370 = bitcast %class.IFX_ArchiveStream* %366 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %371 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %370, align 8
  %372 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %371, i64 1
  %373 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %372, align 8
  %374 = call zeroext i1 %373(%class.IFX_WriteStream* %367, %"class.fxcrt::StringViewTemplate"* nonnull %17) #13
  br i1 %374, label %375, label %825

375:                                              ; preds = %365
  %376 = getelementptr inbounds [20 x i8], [20 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %376) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %376, i8 0, i64 20, i1 false)
  %377 = call i8* @FXSYS_i64toa(i64 %363, i8* nonnull %376, i32 10) #13
  %378 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %379 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %378, i64 0, i32 0
  %380 = call i64 @strlen(i8* nonnull %376) #16
  %381 = bitcast %class.IFX_ArchiveStream* %378 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %382 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %381, align 8
  %383 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %382, align 8
  %384 = call zeroext i1 %383(%class.IFX_WriteStream* %379, i8* nonnull %376, i64 %380) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %376) #13
  br i1 %384, label %385, label %825

385:                                              ; preds = %360, %375, %357
  %386 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %387 = load %class.CPDF_Array*, %class.CPDF_Array** %386, align 8
  %388 = icmp eq %class.CPDF_Array* %387, null
  br i1 %388, label %403, label %389

389:                                              ; preds = %385
  %390 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %391 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %390, i64 0, i32 0
  %392 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %19, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8** %392, align 8
  %393 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %19, i64 0, i32 0, i32 1
  store i64 3, i64* %393, align 8
  %394 = bitcast %class.IFX_ArchiveStream* %390 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %395 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %394, align 8
  %396 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %395, i64 1
  %397 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %396, align 8
  %398 = call zeroext i1 %397(%class.IFX_WriteStream* %391, %"class.fxcrt::StringViewTemplate"* nonnull %19) #13
  br i1 %398, label %399, label %825

399:                                              ; preds = %389
  %400 = load %class.CPDF_Array*, %class.CPDF_Array** %386, align 8
  %401 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %402 = call zeroext i1 @_ZNK10CPDF_Array7WriteToEP17IFX_ArchiveStreamPK14CPDF_Encryptor(%class.CPDF_Array* %400, %class.IFX_ArchiveStream* %401, %class.CPDF_Encryptor* null) #13
  br i1 %402, label %403, label %825

403:                                              ; preds = %385, %399
  %404 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %405 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %404, i64 0, i32 0
  br i1 %80, label %414, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %20, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8** %407, align 8
  %408 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %20, i64 0, i32 0, i32 1
  store i64 2, i64* %408, align 8
  %409 = bitcast %class.IFX_ArchiveStream* %404 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %410 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %409, align 8
  %411 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %410, i64 1
  %412 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %411, align 8
  %413 = call zeroext i1 %412(%class.IFX_WriteStream* %405, %"class.fxcrt::StringViewTemplate"* nonnull %20) #13
  br i1 %413, label %789, label %825

414:                                              ; preds = %403
  %415 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %21, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8** %415, align 8
  %416 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %21, i64 0, i32 0, i32 1
  store i64 16, i64* %416, align 8
  %417 = bitcast %class.IFX_ArchiveStream* %404 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %418 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %417, align 8
  %419 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %418, i64 1
  %420 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %419, align 8
  %421 = call zeroext i1 %420(%class.IFX_WriteStream* %405, %"class.fxcrt::StringViewTemplate"* nonnull %21) #13
  br i1 %421, label %422, label %825

422:                                              ; preds = %414
  %423 = load i8, i8* %32, align 1, !range !8
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %591, label %425

425:                                              ; preds = %422
  %426 = load %class.CPDF_Parser*, %class.CPDF_Parser** %81, align 8
  %427 = icmp eq %class.CPDF_Parser* %426, null
  br i1 %427, label %591, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %class.CPDF_Parser, %class.CPDF_Parser* %426, i64 0, i32 9
  %430 = load i64, i64* %429, align 8
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %591

432:                                              ; preds = %428
  %433 = load i32, i32* %348, align 8
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %487, label %435

435:                                              ; preds = %432
  %436 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %437 = bitcast %"class.std::__1::__tree_end_node"* %436 to %"class.std::__1::__tree_node"**
  %438 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %22, i64 0, i32 0, i32 0, i32 0
  %439 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %22, i64 0, i32 0, i32 1
  br label %440

440:                                              ; preds = %435, %483
  %441 = phi i32 [ %433, %435 ], [ %484, %483 ]
  %442 = phi i32 [ 0, %435 ], [ %485, %483 ]
  %443 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %437, align 8
  %444 = icmp eq %"class.std::__1::__tree_node"* %443, null
  br i1 %444, label %483, label %445

445:                                              ; preds = %440, %445
  %446 = phi %"class.std::__1::__tree_end_node"* [ %456, %445 ], [ %436, %440 ]
  %447 = phi %"class.std::__1::__tree_node"* [ %457, %445 ], [ %443, %440 ]
  %448 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %447, i64 0, i32 1, i32 0, i32 0
  %449 = load i32, i32* %448, align 4
  %450 = icmp ult i32 %449, %442
  %451 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %447, i64 0, i32 0, i32 1
  %452 = bitcast %"class.std::__1::__tree_node_base"** %451 to %"class.std::__1::__tree_node"**
  %453 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %447, i64 0, i32 0, i32 0
  %454 = bitcast %"class.std::__1::__tree_node"* %447 to %"class.std::__1::__tree_node"**
  %455 = select i1 %450, %"class.std::__1::__tree_node"** %452, %"class.std::__1::__tree_node"** %454
  %456 = select i1 %450, %"class.std::__1::__tree_end_node"* %446, %"class.std::__1::__tree_end_node"* %453
  %457 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %455, align 8
  %458 = icmp eq %"class.std::__1::__tree_node"* %457, null
  br i1 %458, label %459, label %445

459:                                              ; preds = %445
  %460 = icmp eq %"class.std::__1::__tree_end_node"* %456, %436
  br i1 %460, label %483, label %461

461:                                              ; preds = %459
  %462 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %456, i64 4
  %463 = bitcast %"class.std::__1::__tree_end_node"* %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = icmp ult i32 %442, %464
  br i1 %465, label %483, label %466

466:                                              ; preds = %461
  %467 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %468 = bitcast %class.IFX_ArchiveStream* %467 to i1 (%class.IFX_ArchiveStream*, i32)***
  %469 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %468, align 8
  %470 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %469, i64 5
  %471 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %470, align 8
  %472 = call zeroext i1 %471(%class.IFX_ArchiveStream* %467, i32 %442) #13
  br i1 %472, label %473, label %825

473:                                              ; preds = %466
  %474 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %475 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %474, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8** %438, align 8
  store i64 3, i64* %439, align 8
  %476 = bitcast %class.IFX_ArchiveStream* %474 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %477 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %476, align 8
  %478 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %477, i64 1
  %479 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %478, align 8
  %480 = call zeroext i1 %479(%class.IFX_WriteStream* %475, %"class.fxcrt::StringViewTemplate"* nonnull %22) #13
  br i1 %480, label %481, label %825

481:                                              ; preds = %473
  %482 = load i32, i32* %348, align 8
  br label %483

483:                                              ; preds = %481, %461, %459, %440
  %484 = phi i32 [ %482, %481 ], [ %441, %461 ], [ %441, %459 ], [ %441, %440 ]
  %485 = add nuw i32 %442, 1
  %486 = icmp ult i32 %485, %484
  br i1 %486, label %440, label %487

487:                                              ; preds = %483, %432
  %488 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %489 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %488, i64 0, i32 0
  %490 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %23, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8** %490, align 8
  %491 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %23, i64 0, i32 0, i32 1
  store i64 9, i64* %491, align 8
  %492 = bitcast %class.IFX_ArchiveStream* %488 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %493 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %492, align 8
  %494 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %493, i64 1
  %495 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %494, align 8
  %496 = call zeroext i1 %495(%class.IFX_WriteStream* %489, %"class.fxcrt::StringViewTemplate"* nonnull %23) #13
  br i1 %496, label %497, label %825

497:                                              ; preds = %487
  %498 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %499 = load i32, i32* %348, align 8
  %500 = mul i32 %499, 5
  %501 = bitcast %class.IFX_ArchiveStream* %498 to i1 (%class.IFX_ArchiveStream*, i32)***
  %502 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %501, align 8
  %503 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %502, i64 5
  %504 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %503, align 8
  %505 = call zeroext i1 %504(%class.IFX_ArchiveStream* %498, i32 %500) #13
  br i1 %505, label %506, label %825

506:                                              ; preds = %497
  %507 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %508 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %507, i64 0, i32 0
  %509 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %24, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0), i8** %509, align 8
  %510 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %24, i64 0, i32 0, i32 1
  store i64 10, i64* %510, align 8
  %511 = bitcast %class.IFX_ArchiveStream* %507 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %512 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %511, align 8
  %513 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %512, i64 1
  %514 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %513, align 8
  %515 = call zeroext i1 %514(%class.IFX_WriteStream* %508, %"class.fxcrt::StringViewTemplate"* nonnull %24) #13
  br i1 %515, label %516, label %825

516:                                              ; preds = %506
  %517 = load i32, i32* %348, align 8
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %779, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %521 = bitcast %"class.std::__1::__tree_end_node"* %520 to %"class.std::__1::__tree_node"**
  br label %522

522:                                              ; preds = %519, %587
  %523 = phi i32 [ %517, %519 ], [ %588, %587 ]
  %524 = phi i32 [ 0, %519 ], [ %589, %587 ]
  %525 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %521, align 8
  %526 = icmp eq %"class.std::__1::__tree_node"* %525, null
  br i1 %526, label %587, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.std::__1::__tree_end_node"* [ %538, %527 ], [ %520, %522 ]
  %529 = phi %"class.std::__1::__tree_node"* [ %539, %527 ], [ %525, %522 ]
  %530 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %529, i64 0, i32 1, i32 0, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = icmp ult i32 %531, %524
  %533 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %529, i64 0, i32 0, i32 1
  %534 = bitcast %"class.std::__1::__tree_node_base"** %533 to %"class.std::__1::__tree_node"**
  %535 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %529, i64 0, i32 0, i32 0
  %536 = bitcast %"class.std::__1::__tree_node"* %529 to %"class.std::__1::__tree_node"**
  %537 = select i1 %532, %"class.std::__1::__tree_node"** %534, %"class.std::__1::__tree_node"** %536
  %538 = select i1 %532, %"class.std::__1::__tree_end_node"* %528, %"class.std::__1::__tree_end_node"* %535
  %539 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %537, align 8
  %540 = icmp eq %"class.std::__1::__tree_node"* %539, null
  br i1 %540, label %541, label %527

541:                                              ; preds = %527
  %542 = icmp eq %"class.std::__1::__tree_end_node"* %538, %520
  br i1 %542, label %587, label %543

543:                                              ; preds = %541
  %544 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %538, i64 4
  %545 = bitcast %"class.std::__1::__tree_end_node"* %544 to i32*
  %546 = load i32, i32* %545, align 4
  %547 = icmp ult i32 %524, %546
  br i1 %547, label %587, label %548

548:                                              ; preds = %543
  %549 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %550 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %538, i64 5
  %551 = bitcast %"class.std::__1::__tree_end_node"* %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = lshr i64 %552, 24
  %554 = trunc i64 %553 to i8
  %555 = bitcast %class.IFX_ArchiveStream* %549 to i1 (%class.IFX_ArchiveStream*, i8)***
  %556 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %555, align 8
  %557 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %556, i64 4
  %558 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %557, align 8
  %559 = call zeroext i1 %558(%class.IFX_ArchiveStream* %549, i8 zeroext %554) #13
  br i1 %559, label %560, label %825

560:                                              ; preds = %548
  %561 = lshr i64 %552, 16
  %562 = trunc i64 %561 to i8
  %563 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %555, align 8
  %564 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %563, i64 4
  %565 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %564, align 8
  %566 = call zeroext i1 %565(%class.IFX_ArchiveStream* %549, i8 zeroext %562) #13
  br i1 %566, label %567, label %825

567:                                              ; preds = %560
  %568 = lshr i64 %552, 8
  %569 = trunc i64 %568 to i8
  %570 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %555, align 8
  %571 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %570, i64 4
  %572 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %571, align 8
  %573 = call zeroext i1 %572(%class.IFX_ArchiveStream* %549, i8 zeroext %569) #13
  br i1 %573, label %574, label %825

574:                                              ; preds = %567
  %575 = trunc i64 %552 to i8
  %576 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %555, align 8
  %577 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %576, i64 4
  %578 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %577, align 8
  %579 = call zeroext i1 %578(%class.IFX_ArchiveStream* %549, i8 zeroext %575) #13
  br i1 %579, label %580, label %825

580:                                              ; preds = %574
  %581 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %555, align 8
  %582 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %581, i64 4
  %583 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %582, align 8
  %584 = call zeroext i1 %583(%class.IFX_ArchiveStream* %549, i8 zeroext 0) #13
  br i1 %584, label %585, label %825

585:                                              ; preds = %580
  %586 = load i32, i32* %348, align 8
  br label %587

587:                                              ; preds = %585, %543, %541, %522
  %588 = phi i32 [ %586, %585 ], [ %523, %543 ], [ %523, %541 ], [ %523, %522 ]
  %589 = add nuw i32 %524, 1
  %590 = icmp ult i32 %589, %588
  br i1 %590, label %522, label %779

591:                                              ; preds = %425, %422, %428
  %592 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %593 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %594 = bitcast i32** %593 to i64*
  %595 = load i64, i64* %594, align 8
  %596 = bitcast %"class.std::__1::vector.32"* %592 to i64*
  %597 = load i64, i64* %596, align 8
  %598 = sub i64 %595, %597
  %599 = ashr exact i64 %598, 2
  %600 = icmp eq i64 %598, 0
  %601 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  br i1 %600, label %635, label %602

602:                                              ; preds = %591
  %603 = inttoptr i64 %597 to i32*
  %604 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %592, i64 0, i32 0, i32 0
  %605 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %25, i64 0, i32 0, i32 0, i32 0
  %606 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %25, i64 0, i32 0, i32 1
  %607 = load i32, i32* %603, align 4
  %608 = bitcast %class.IFX_ArchiveStream* %601 to i1 (%class.IFX_ArchiveStream*, i32)***
  %609 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %608, align 8
  %610 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %609, i64 5
  %611 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %610, align 8
  %612 = call zeroext i1 %611(%class.IFX_ArchiveStream* %601, i32 %607) #13
  br i1 %612, label %625, label %825

613:                                              ; preds = %625
  %614 = icmp ult i64 %634, %599
  %615 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  br i1 %614, label %616, label %635

616:                                              ; preds = %613
  %617 = load i32*, i32** %604, align 8
  %618 = getelementptr inbounds i32, i32* %617, i64 %634
  %619 = load i32, i32* %618, align 4
  %620 = bitcast %class.IFX_ArchiveStream* %615 to i1 (%class.IFX_ArchiveStream*, i32)***
  %621 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %620, align 8
  %622 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %621, i64 5
  %623 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %622, align 8
  %624 = call zeroext i1 %623(%class.IFX_ArchiveStream* %615, i32 %619) #13
  br i1 %624, label %625, label %825

625:                                              ; preds = %602, %616
  %626 = phi i64 [ %634, %616 ], [ 0, %602 ]
  %627 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %628 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %627, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8** %605, align 8
  store i64 3, i64* %606, align 8
  %629 = bitcast %class.IFX_ArchiveStream* %627 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %630 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %629, align 8
  %631 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %630, i64 1
  %632 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %631, align 8
  %633 = call zeroext i1 %632(%class.IFX_WriteStream* %628, %"class.fxcrt::StringViewTemplate"* nonnull %25) #13
  %634 = add nuw i64 %626, 1
  br i1 %633, label %613, label %825

635:                                              ; preds = %613, %591
  %636 = phi %class.IFX_ArchiveStream* [ %601, %591 ], [ %615, %613 ]
  %637 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %636, i64 0, i32 0
  %638 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %26, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8** %638, align 8
  %639 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %26, i64 0, i32 0, i32 1
  store i64 9, i64* %639, align 8
  %640 = bitcast %class.IFX_ArchiveStream* %636 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %641 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %640, align 8
  %642 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %641, i64 1
  %643 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %642, align 8
  %644 = call zeroext i1 %643(%class.IFX_WriteStream* %637, %"class.fxcrt::StringViewTemplate"* nonnull %26) #13
  br i1 %644, label %645, label %825

645:                                              ; preds = %635
  %646 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %647 = trunc i64 %599 to i32
  %648 = mul i32 %647, 5
  %649 = bitcast %class.IFX_ArchiveStream* %646 to i1 (%class.IFX_ArchiveStream*, i32)***
  %650 = load i1 (%class.IFX_ArchiveStream*, i32)**, i1 (%class.IFX_ArchiveStream*, i32)*** %649, align 8
  %651 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %650, i64 5
  %652 = load i1 (%class.IFX_ArchiveStream*, i32)*, i1 (%class.IFX_ArchiveStream*, i32)** %651, align 8
  %653 = call zeroext i1 %652(%class.IFX_ArchiveStream* %646, i32 %648) #13
  br i1 %653, label %654, label %825

654:                                              ; preds = %645
  %655 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %656 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %655, i64 0, i32 0
  %657 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %27, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0), i8** %657, align 8
  %658 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %27, i64 0, i32 0, i32 1
  store i64 10, i64* %658, align 8
  %659 = bitcast %class.IFX_ArchiveStream* %655 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %660 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %659, align 8
  %661 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %660, i64 1
  %662 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %661, align 8
  %663 = call zeroext i1 %662(%class.IFX_WriteStream* %656, %"class.fxcrt::StringViewTemplate"* nonnull %27) #13
  br i1 %663, label %664, label %825

664:                                              ; preds = %654
  br i1 %600, label %779, label %665

665:                                              ; preds = %664
  %666 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %667 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %592, i64 0, i32 0, i32 0
  %668 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %669 = bitcast %"class.std::__1::__tree_end_node"* %668 to %"class.std::__1::__tree_node"**
  %670 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %671 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %668, i64 0, i32 0
  %672 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %666, i64 0, i32 0, i32 0
  %673 = bitcast %"class.std::__1::map.184"* %666 to i64*
  %674 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  br label %677

675:                                              ; preds = %773
  %676 = icmp ult i64 %778, %599
  br i1 %676, label %677, label %779

677:                                              ; preds = %665, %675
  %678 = phi i64 [ 0, %665 ], [ %778, %675 ]
  %679 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %680 = load i32*, i32** %667, align 8
  %681 = getelementptr inbounds i32, i32* %680, i64 %678
  %682 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %669, align 8
  %683 = icmp eq %"class.std::__1::__tree_node"* %682, null
  br i1 %683, label %712, label %684

684:                                              ; preds = %677
  %685 = load i32, i32* %681, align 4
  br label %686

686:                                              ; preds = %708, %684
  %687 = phi %"class.std::__1::__tree_node"* [ %711, %708 ], [ %682, %684 ]
  %688 = phi %"class.std::__1::__tree_node_base"** [ %710, %708 ], [ %670, %684 ]
  %689 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 1, i32 0, i32 0
  %690 = load i32, i32* %689, align 4
  %691 = icmp ult i32 %685, %690
  br i1 %691, label %692, label %698

692:                                              ; preds = %686
  %693 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 0, i32 0, i32 0
  %694 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %693, align 8
  %695 = icmp eq %"class.std::__1::__tree_node_base"* %694, null
  br i1 %695, label %696, label %708

696:                                              ; preds = %692
  %697 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 0, i32 0
  br label %712

698:                                              ; preds = %686
  %699 = icmp ult i32 %690, %685
  br i1 %699, label %700, label %706

700:                                              ; preds = %698
  %701 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 0, i32 1
  %702 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %701, align 8
  %703 = icmp eq %"class.std::__1::__tree_node_base"* %702, null
  br i1 %703, label %704, label %708

704:                                              ; preds = %700
  %705 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 0, i32 0
  br label %712

706:                                              ; preds = %698
  %707 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 0, i32 0
  br label %712

708:                                              ; preds = %700, %692
  %709 = phi %"class.std::__1::__tree_node_base"* [ %694, %692 ], [ %702, %700 ]
  %710 = phi %"class.std::__1::__tree_node_base"** [ %693, %692 ], [ %701, %700 ]
  %711 = bitcast %"class.std::__1::__tree_node_base"* %709 to %"class.std::__1::__tree_node"*
  br label %686

712:                                              ; preds = %677, %706, %704, %696
  %713 = phi %"class.std::__1::__tree_end_node"* [ %697, %696 ], [ %705, %704 ], [ %707, %706 ], [ %668, %677 ]
  %714 = phi %"class.std::__1::__tree_node_base"** [ %693, %696 ], [ %701, %704 ], [ %688, %706 ], [ %671, %677 ]
  %715 = bitcast %"class.std::__1::__tree_node_base"** %714 to %"class.std::__1::__tree_node"**
  %716 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %715, align 8
  %717 = icmp eq %"class.std::__1::__tree_node"* %716, null
  br i1 %717, label %718, label %742

718:                                              ; preds = %712
  %719 = call i8* @_Znwm(i64 48) #14, !noalias !62
  %720 = getelementptr inbounds i8, i8* %719, i64 32
  %721 = bitcast i8* %720 to i32*
  %722 = load i32, i32* %681, align 4, !noalias !62
  store i32 %722, i32* %721, align 8, !noalias !62
  %723 = getelementptr inbounds i8, i8* %719, i64 40
  %724 = bitcast i8* %723 to i64*
  store i64 0, i64* %724, align 8, !noalias !62
  %725 = bitcast i8* %719 to %"class.std::__1::__tree_node"*
  %726 = bitcast i8* %719 to %"class.std::__1::__tree_node_base"*
  %727 = getelementptr inbounds i8, i8* %719, i64 16
  %728 = bitcast i8* %727 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %719, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %713, %"class.std::__1::__tree_end_node"** %728, align 8
  %729 = bitcast %"class.std::__1::__tree_node_base"** %714 to i8**
  store i8* %719, i8** %729, align 8
  %730 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %672, align 8
  %731 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 0, i32 0
  %732 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %731, align 8
  %733 = icmp eq %"class.std::__1::__tree_node_base"* %732, null
  br i1 %733, label %737, label %734

734:                                              ; preds = %718
  %735 = ptrtoint %"class.std::__1::__tree_node_base"* %732 to i64
  store i64 %735, i64* %673, align 8
  %736 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %714, align 8
  br label %737

737:                                              ; preds = %734, %718
  %738 = phi %"class.std::__1::__tree_node_base"* [ %726, %718 ], [ %736, %734 ]
  %739 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %670, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %739, %"class.std::__1::__tree_node_base"* %738) #13
  %740 = load i64, i64* %674, align 8
  %741 = add i64 %740, 1
  store i64 %741, i64* %674, align 8
  br label %742

742:                                              ; preds = %712, %737
  %743 = phi %"class.std::__1::__tree_node"* [ %725, %737 ], [ %716, %712 ]
  %744 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %743, i64 0, i32 1, i32 0, i32 1
  %745 = load i64, i64* %744, align 8
  %746 = lshr i64 %745, 24
  %747 = trunc i64 %746 to i8
  %748 = bitcast %class.IFX_ArchiveStream* %679 to i1 (%class.IFX_ArchiveStream*, i8)***
  %749 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %748, align 8
  %750 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %749, i64 4
  %751 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %750, align 8
  %752 = call zeroext i1 %751(%class.IFX_ArchiveStream* %679, i8 zeroext %747) #13
  br i1 %752, label %753, label %825

753:                                              ; preds = %742
  %754 = lshr i64 %745, 16
  %755 = trunc i64 %754 to i8
  %756 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %748, align 8
  %757 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %756, i64 4
  %758 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %757, align 8
  %759 = call zeroext i1 %758(%class.IFX_ArchiveStream* %679, i8 zeroext %755) #13
  br i1 %759, label %760, label %825

760:                                              ; preds = %753
  %761 = lshr i64 %745, 8
  %762 = trunc i64 %761 to i8
  %763 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %748, align 8
  %764 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %763, i64 4
  %765 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %764, align 8
  %766 = call zeroext i1 %765(%class.IFX_ArchiveStream* %679, i8 zeroext %762) #13
  br i1 %766, label %767, label %825

767:                                              ; preds = %760
  %768 = trunc i64 %745 to i8
  %769 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %748, align 8
  %770 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %769, i64 4
  %771 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %770, align 8
  %772 = call zeroext i1 %771(%class.IFX_ArchiveStream* %679, i8 zeroext %768) #13
  br i1 %772, label %773, label %825

773:                                              ; preds = %767
  %774 = load i1 (%class.IFX_ArchiveStream*, i8)**, i1 (%class.IFX_ArchiveStream*, i8)*** %748, align 8
  %775 = getelementptr inbounds i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %774, i64 4
  %776 = load i1 (%class.IFX_ArchiveStream*, i8)*, i1 (%class.IFX_ArchiveStream*, i8)** %775, align 8
  %777 = call zeroext i1 %776(%class.IFX_ArchiveStream* %679, i8 zeroext 0) #13
  %778 = add nuw i64 %678, 1
  br i1 %777, label %675, label %825

779:                                              ; preds = %587, %675, %516, %664
  %780 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %781 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %780, i64 0, i32 0
  %782 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %28, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), i8** %782, align 8
  %783 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %28, i64 0, i32 0, i32 1
  store i64 11, i64* %783, align 8
  %784 = bitcast %class.IFX_ArchiveStream* %780 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %785 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %784, align 8
  %786 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %785, i64 1
  %787 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %786, align 8
  %788 = call zeroext i1 %787(%class.IFX_WriteStream* %781, %"class.fxcrt::StringViewTemplate"* nonnull %28) #13
  br i1 %788, label %789, label %825

789:                                              ; preds = %779, %406
  %790 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %791 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %790, i64 0, i32 0
  %792 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %29, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i8** %792, align 8
  %793 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %29, i64 0, i32 0, i32 1
  store i64 13, i64* %793, align 8
  %794 = bitcast %class.IFX_ArchiveStream* %790 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %795 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %794, align 8
  %796 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %795, i64 1
  %797 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %796, align 8
  %798 = call zeroext i1 %797(%class.IFX_WriteStream* %791, %"class.fxcrt::StringViewTemplate"* nonnull %29) #13
  br i1 %798, label %799, label %825

799:                                              ; preds = %789
  %800 = getelementptr inbounds [20 x i8], [20 x i8]* %30, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %800) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %800, i8 0, i64 20, i1 false)
  %801 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 12
  %802 = load i64, i64* %801, align 8
  %803 = call i8* @FXSYS_i64toa(i64 %802, i8* nonnull %800, i32 10) #13
  %804 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %805 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %804, i64 0, i32 0
  %806 = call i64 @strlen(i8* nonnull %800) #16
  %807 = bitcast %class.IFX_ArchiveStream* %804 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %808 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %807, align 8
  %809 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %808, align 8
  %810 = call zeroext i1 %809(%class.IFX_WriteStream* %805, i8* nonnull %800, i64 %806) #13
  br i1 %810, label %811, label %823

811:                                              ; preds = %799
  %812 = load %class.IFX_ArchiveStream*, %class.IFX_ArchiveStream** %79, align 8
  %813 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %812, i64 0, i32 0
  %814 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %31, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i8** %814, align 8
  %815 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %31, i64 0, i32 0, i32 1
  store i64 9, i64* %815, align 8
  %816 = bitcast %class.IFX_ArchiveStream* %812 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %817 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %816, align 8
  %818 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %817, i64 1
  %819 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %818, align 8
  %820 = call zeroext i1 %819(%class.IFX_WriteStream* %813, %"class.fxcrt::StringViewTemplate"* nonnull %31) #13
  br i1 %820, label %821, label %823

821:                                              ; preds = %811
  %822 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  store i32 100, i32* %822, align 8
  br label %823

823:                                              ; preds = %811, %799, %821
  %824 = phi i32 [ 100, %821 ], [ -1, %811 ], [ -1, %799 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %800) #13
  br label %825

825:                                              ; preds = %473, %466, %548, %560, %567, %574, %580, %616, %625, %742, %753, %760, %767, %773, %602, %68, %326, %506, %654, %273, %238, %375, %645, %635, %497, %487, %365, %319, %308, %262, %252, %225, %215, %57, %389, %336, %789, %779, %414, %406, %399, %346, %287, %46, %213, %823
  %826 = phi i32 [ %824, %823 ], [ -1, %213 ], [ -1, %46 ], [ -1, %68 ], [ -1, %238 ], [ -1, %273 ], [ -1, %287 ], [ -1, %346 ], [ -1, %399 ], [ -1, %406 ], [ -1, %414 ], [ -1, %779 ], [ -1, %789 ], [ -1, %654 ], [ -1, %326 ], [ -1, %336 ], [ -1, %389 ], [ -1, %57 ], [ -1, %215 ], [ -1, %225 ], [ -1, %252 ], [ -1, %262 ], [ -1, %308 ], [ -1, %319 ], [ -1, %365 ], [ -1, %506 ], [ -1, %487 ], [ -1, %497 ], [ -1, %635 ], [ -1, %645 ], [ -1, %375 ], [ -1, %602 ], [ -1, %773 ], [ -1, %767 ], [ -1, %760 ], [ -1, %753 ], [ -1, %742 ], [ -1, %625 ], [ -1, %616 ], [ -1, %580 ], [ -1, %574 ], [ -1, %567 ], [ -1, %560 ], [ -1, %548 ], [ -1, %466 ], [ -1, %473 ]
  ret i32 %826
}

declare void @_ZNK11CPDF_Parser18GetCombinedTrailerEv(%"class.fxcrt::RetainPtr.50"* sret, %class.CPDF_Parser*) local_unnamed_addr #1

declare void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker*, %class.CPDF_Dictionary*) unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare void @_Z14PDF_NameEncodeRKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker*) unnamed_addr #4

declare %class.CPDF_Dictionary* @_ZN13CPDF_Document7GetInfoEv(%class.CPDF_Document*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @FXSYS_i64toa(i64, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare zeroext i1 @_ZNK10CPDF_Array7WriteToEP17IFX_ArchiveStreamPK14CPDF_Encryptor(%class.CPDF_Array*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_Creator6CreateEj(%class.CPDF_Creator*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %4 = trunc i32 %1 to i8
  %5 = and i8 %4, 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 19
  %7 = lshr i32 %1, 1
  %8 = trunc i32 %7 to i8
  %9 = and i8 %8, 1
  %10 = xor i8 %9, 1
  store i8 %10, i8* %6, align 2
  %11 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 0, i32 0
  %13 = load %class.CPDF_Document*, %class.CPDF_Document** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %13, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13
  %18 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.185"* %18, %"class.std::__1::__tree_node"* %21) #13
  %22 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::map.184", %"class.std::__1::map.184"* %17, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %24, align 8
  %25 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14
  %26 = bitcast %"class.std::__1::vector.32"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 14, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  tail call void @_ZN12CPDF_Creator6InitIDEv(%class.CPDF_Creator* %0)
  %30 = load i32, i32* %11, align 8
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %64, label %32

32:                                               ; preds = %2
  %33 = icmp slt i32 %30, 100
  br i1 %33, label %34, label %59

34:                                               ; preds = %32, %49
  %35 = phi i32 [ %51, %49 ], [ %30, %32 ]
  %36 = icmp slt i32 %35, 20
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage1Ev(%class.CPDF_Creator* %0) #13
  br label %49

39:                                               ; preds = %34
  %40 = icmp slt i32 %35, 80
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage2Ev(%class.CPDF_Creator* %0) #13
  br label %49

43:                                               ; preds = %39
  %44 = icmp slt i32 %35, 90
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage3Ev(%class.CPDF_Creator* %0) #13
  br label %49

47:                                               ; preds = %43
  %48 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage4Ev(%class.CPDF_Creator* %0) #13
  br label %49

49:                                               ; preds = %47, %45, %41, %37
  %50 = phi i32 [ %38, %37 ], [ %42, %41 ], [ %46, %45 ], [ %48, %47 ]
  %51 = load i32, i32* %11, align 8
  %52 = icmp sge i32 %50, %51
  %53 = icmp slt i32 %51, 100
  %54 = and i1 %52, %53
  br i1 %54, label %34, label %55

55:                                               ; preds = %49
  %56 = icmp slt i32 %50, 1
  %57 = icmp eq i32 %51, 100
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %55, %32
  %60 = phi i32 [ %50, %55 ], [ 0, %32 ]
  store i32 -1, i32* %11, align 8
  %61 = icmp sgt i32 %60, 0
  br label %64

62:                                               ; preds = %55
  %63 = icmp sgt i32 %51, -1
  br label %64

64:                                               ; preds = %2, %59, %62
  %65 = phi i1 [ false, %2 ], [ %61, %59 ], [ %63, %62 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_Creator6InitIDEv(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %3 = alloca [4 x i32], align 16
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.199", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.fxcrt::RetainPtr.199", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.fxcrt::RetainPtr.199", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.199", align 8
  %16 = alloca %"class.fxcrt::ByteString", align 8
  %17 = tail call i8* @_Znwm(i64 64) #14, !noalias !65
  %18 = bitcast i8* %17 to %class.CPDF_Array*
  tail call void @_ZN10CPDF_ArrayC1Ev(%class.CPDF_Array* nonnull %18) #13, !noalias !65
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !65
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8, !noalias !65
  %24 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 15
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.193", %"class.fxcrt::RetainPtr.193"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  %27 = bitcast %"class.fxcrt::RetainPtr.193"* %24 to i64*
  store i64 %19, i64* %27, align 8
  %28 = icmp eq %class.CPDF_Array* %26, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %1
  %30 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %26, i64 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %26, i64 0, i32 0, i32 0
  %36 = bitcast %class.CPDF_Array* %26 to void (%"class.fxcrt::Retainable"*)***
  %37 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, i64 1
  %39 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, align 8
  tail call void %39(%"class.fxcrt::Retainable"* nonnull %35) #13
  br label %40

40:                                               ; preds = %34, %29, %1
  %41 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 1, i32 0
  %42 = load %class.CPDF_Parser*, %class.CPDF_Parser** %41, align 8
  %43 = icmp eq %class.CPDF_Parser* %42, null
  br i1 %43, label %71, label %44

44:                                               ; preds = %40
  %45 = tail call %class.CPDF_Array* @_ZNK11CPDF_Parser10GetIDArrayEv(%class.CPDF_Parser* nonnull %42) #13
  %46 = icmp eq %class.CPDF_Array* %45, null
  br i1 %46, label %71, label %47

47:                                               ; preds = %44
  %48 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array11GetObjectAtEm(%class.CPDF_Array* nonnull %45, i64 0) #13
  %49 = icmp eq %class.CPDF_Object* %48, null
  br i1 %49, label %71, label %50

50:                                               ; preds = %47
  %51 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  %52 = bitcast %class.CPDF_Object* %48 to void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)***
  %53 = load void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)**, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)** %53, i64 3
  %55 = load void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)** %54, align 8
  call void %55(%"class.fxcrt::RetainPtr.199"* nonnull sret %5, %class.CPDF_Object* nonnull %48) #13
  %56 = call %class.CPDF_Object* @_ZN10CPDF_Array6AppendEN5fxcrt9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Array* %51, %"class.fxcrt::RetainPtr.199"* nonnull %5) #13
  %57 = getelementptr inbounds %"class.fxcrt::RetainPtr.199", %"class.fxcrt::RetainPtr.199"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %class.CPDF_Object*, %class.CPDF_Object** %57, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %57, align 8
  %59 = icmp eq %class.CPDF_Object* %58, null
  br i1 %59, label %97, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %58, i64 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = add nsw i64 %62, -1
  store i64 %63, i64* %61, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %97

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %58, i64 0, i32 0
  %67 = bitcast %class.CPDF_Object* %58 to void (%"class.fxcrt::Retainable"*)***
  %68 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, i64 1
  %70 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %69, align 8
  call void %70(%"class.fxcrt::Retainable"* nonnull %66) #13
  br label %97

71:                                               ; preds = %44, %40, %47
  %72 = phi %class.CPDF_Array* [ %45, %47 ], [ null, %44 ], [ null, %40 ]
  %73 = phi i1 [ true, %47 ], [ false, %44 ], [ false, %40 ]
  %74 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %75, align 8
  %76 = ptrtoint %class.CPDF_Creator* %0 to i64
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  %79 = load i32, i32* %78, align 8
  %80 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80)
  %81 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13, !noalias !68
  %82 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %83 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %84 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %85 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %86 = tail call i8* @_Z18FX_Random_MT_Startj(i32 %77) #13, !noalias !68
  %87 = tail call i8* @_Z18FX_Random_MT_Startj(i32 %79) #13, !noalias !68
  %88 = tail call i32 @_Z21FX_Random_MT_GeneratePv(i8* %86) #13, !noalias !68
  store i32 %88, i32* %82, align 16, !noalias !68
  %89 = tail call i32 @_Z21FX_Random_MT_GeneratePv(i8* %86) #13, !noalias !68
  store i32 %89, i32* %83, align 4, !noalias !68
  %90 = tail call i32 @_Z21FX_Random_MT_GeneratePv(i8* %87) #13, !noalias !68
  store i32 %90, i32* %84, align 8, !noalias !68
  %91 = tail call i32 @_Z21FX_Random_MT_GeneratePv(i8* %87) #13, !noalias !68
  store i32 %91, i32* %85, align 4, !noalias !68
  tail call void @_Z18FX_Random_MT_ClosePv(i8* %86) #13, !noalias !68
  tail call void @_Z18FX_Random_MT_ClosePv(i8* %87) #13, !noalias !68
  %92 = ptrtoint [4 x i32]* %3 to i64
  %93 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i64*
  store i64 %92, i64* %93, align 8, !noalias !68
  %94 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 16, i64* %94, align 8, !noalias !68
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* nonnull %6, %"class.fxcrt::StringViewTemplate"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13, !noalias !68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80)
  %95 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  store i8 1, i8* %7, align 1
  %96 = call %class.CPDF_String* @_ZN10CPDF_Array9AppendNewI11CPDF_StringJRN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeEDpOT0_(%class.CPDF_Array* %95, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %7)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  br i1 %73, label %97, label %154

97:                                               ; preds = %65, %60, %50, %71
  %98 = phi %class.CPDF_Array* [ %72, %71 ], [ %45, %50 ], [ %45, %60 ], [ %45, %65 ]
  %99 = call %class.CPDF_Object* @_ZNK10CPDF_Array11GetObjectAtEm(%class.CPDF_Array* nonnull %98, i64 1) #13
  %100 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 18
  %101 = load i8, i8* %100, align 1, !range !8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %130, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %105 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %104, align 8
  %106 = icmp ne %class.CPDF_Dictionary* %105, null
  %107 = icmp ne %class.CPDF_Object* %99, null
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %130

109:                                              ; preds = %103
  %110 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  %111 = bitcast %class.CPDF_Object* %99 to void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)***
  %112 = load void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)**, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)** %112, i64 3
  %114 = load void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)** %113, align 8
  call void %114(%"class.fxcrt::RetainPtr.199"* nonnull sret %8, %class.CPDF_Object* nonnull %99) #13
  %115 = call %class.CPDF_Object* @_ZN10CPDF_Array6AppendEN5fxcrt9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Array* %110, %"class.fxcrt::RetainPtr.199"* nonnull %8) #13
  %116 = getelementptr inbounds %"class.fxcrt::RetainPtr.199", %"class.fxcrt::RetainPtr.199"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %class.CPDF_Object*, %class.CPDF_Object** %116, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %116, align 8
  %118 = icmp eq %class.CPDF_Object* %117, null
  br i1 %118, label %294, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %117, i64 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = add nsw i64 %121, -1
  store i64 %122, i64* %120, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %294

124:                                              ; preds = %119
  %125 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %117, i64 0, i32 0
  %126 = bitcast %class.CPDF_Object* %117 to void (%"class.fxcrt::Retainable"*)***
  %127 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %127, i64 1
  %129 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %128, align 8
  call void %129(%"class.fxcrt::Retainable"* nonnull %125) #13
  br label %294

130:                                              ; preds = %97, %103
  %131 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #13
  %132 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %132, align 8
  %133 = ptrtoint %class.CPDF_Creator* %0 to i64
  %134 = trunc i64 %133 to i32
  %135 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 6
  %136 = load i32, i32* %135, align 8
  %137 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137)
  %138 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #13, !noalias !71
  %139 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %140 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %141 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %142 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %143 = call i8* @_Z18FX_Random_MT_Startj(i32 %134) #13, !noalias !71
  %144 = call i8* @_Z18FX_Random_MT_Startj(i32 %136) #13, !noalias !71
  %145 = call i32 @_Z21FX_Random_MT_GeneratePv(i8* %143) #13, !noalias !71
  store i32 %145, i32* %139, align 16, !noalias !71
  %146 = call i32 @_Z21FX_Random_MT_GeneratePv(i8* %143) #13, !noalias !71
  store i32 %146, i32* %140, align 4, !noalias !71
  %147 = call i32 @_Z21FX_Random_MT_GeneratePv(i8* %144) #13, !noalias !71
  store i32 %147, i32* %141, align 8, !noalias !71
  %148 = call i32 @_Z21FX_Random_MT_GeneratePv(i8* %144) #13, !noalias !71
  store i32 %148, i32* %142, align 4, !noalias !71
  call void @_Z18FX_Random_MT_ClosePv(i8* %143) #13, !noalias !71
  call void @_Z18FX_Random_MT_ClosePv(i8* %144) #13, !noalias !71
  %149 = ptrtoint [4 x i32]* %3 to i64
  %150 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i64*
  store i64 %149, i64* %150, align 8, !noalias !71
  %151 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  store i64 16, i64* %151, align 8, !noalias !71
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::StringViewTemplate"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #13, !noalias !71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137)
  %152 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #13
  store i8 1, i8* %10, align 1
  %153 = call %class.CPDF_String* @_ZN10CPDF_Array9AppendNewI11CPDF_StringJRN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeEDpOT0_(%class.CPDF_Array* %152, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9, i8* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #13
  br label %294

154:                                              ; preds = %71
  %155 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  %156 = call %class.CPDF_Object* @_ZN10CPDF_Array11GetObjectAtEm(%class.CPDF_Array* %155, i64 0) #13
  %157 = bitcast %class.CPDF_Object* %156 to void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)***
  %158 = load void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)**, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)** %158, i64 3
  %160 = load void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)*, void (%"class.fxcrt::RetainPtr.199"*, %class.CPDF_Object*)** %159, align 8
  call void %160(%"class.fxcrt::RetainPtr.199"* nonnull sret %11, %class.CPDF_Object* %156) #13
  %161 = call %class.CPDF_Object* @_ZN10CPDF_Array6AppendEN5fxcrt9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Array* %155, %"class.fxcrt::RetainPtr.199"* nonnull %11) #13
  %162 = getelementptr inbounds %"class.fxcrt::RetainPtr.199", %"class.fxcrt::RetainPtr.199"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %163 = load %class.CPDF_Object*, %class.CPDF_Object** %162, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %162, align 8
  %164 = icmp eq %class.CPDF_Object* %163, null
  br i1 %164, label %176, label %165

165:                                              ; preds = %154
  %166 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %163, i64 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i64 %167, -1
  store i64 %168, i64* %166, align 8
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %176

170:                                              ; preds = %165
  %171 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %163, i64 0, i32 0
  %172 = bitcast %class.CPDF_Object* %163 to void (%"class.fxcrt::Retainable"*)***
  %173 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %173, i64 1
  %175 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %174, align 8
  call void %175(%"class.fxcrt::Retainable"* nonnull %171) #13
  br label %176

176:                                              ; preds = %154, %165, %170
  %177 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2
  %178 = getelementptr inbounds %"class.fxcrt::RetainPtr.89", %"class.fxcrt::RetainPtr.89"* %177, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %178, align 8
  %180 = icmp eq %class.CPDF_Dictionary* %179, null
  br i1 %180, label %294, label %181

181:                                              ; preds = %176
  %182 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #13
  %183 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %179, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #13
  %184 = or i32 %183, 1
  %185 = icmp eq i32 %184, 3
  br i1 %185, label %186, label %294

186:                                              ; preds = %181
  %187 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #13
  %188 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %178, align 8
  %189 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #13
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %13, %class.CPDF_Dictionary* %188, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #13
  %190 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #13
  br i1 %190, label %191, label %294

191:                                              ; preds = %186
  %192 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %178, align 8
  call void @_ZNK15CPDF_Dictionary5CloneEv(%"class.fxcrt::RetainPtr.199"* nonnull sret %15, %class.CPDF_Dictionary* %192) #13
  %193 = getelementptr inbounds %"class.fxcrt::RetainPtr.199", %"class.fxcrt::RetainPtr.199"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %194 = load %class.CPDF_Object*, %class.CPDF_Object** %193, align 8, !noalias !74
  %195 = icmp eq %class.CPDF_Object* %194, null
  br i1 %195, label %208, label %196

196:                                              ; preds = %191
  %197 = bitcast %class.CPDF_Object* %194 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %198 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %197, align 8, !noalias !74
  %199 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %198, i64 27
  %200 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %199, align 8, !noalias !74
  %201 = call %class.CPDF_Dictionary* %200(%class.CPDF_Object* nonnull %194) #13, !noalias !74
  %202 = ptrtoint %class.CPDF_Dictionary* %201 to i64
  %203 = icmp eq %class.CPDF_Dictionary* %201, null
  br i1 %203, label %208, label %204

204:                                              ; preds = %196
  %205 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %201, i64 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8, !noalias !74
  %207 = add nsw i64 %206, 1
  store i64 %207, i64* %205, align 8, !noalias !74
  br label %208

208:                                              ; preds = %191, %196, %204
  %209 = phi i64 [ %202, %196 ], [ %202, %204 ], [ 0, %191 ]
  %210 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 3
  %211 = getelementptr inbounds %"class.fxcrt::RetainPtr.50", %"class.fxcrt::RetainPtr.50"* %210, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %211, align 8
  %213 = bitcast %"class.fxcrt::RetainPtr.50"* %210 to i64*
  store i64 %209, i64* %213, align 8
  %214 = icmp eq %class.CPDF_Dictionary* %212, null
  br i1 %214, label %226, label %215

215:                                              ; preds = %208
  %216 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %212, i64 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = add nsw i64 %217, -1
  store i64 %218, i64* %216, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %226

220:                                              ; preds = %215
  %221 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %212, i64 0, i32 0, i32 0
  %222 = bitcast %class.CPDF_Dictionary* %212 to void (%"class.fxcrt::Retainable"*)***
  %223 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %223, i64 1
  %225 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %224, align 8
  call void %225(%"class.fxcrt::Retainable"* nonnull %221) #13
  br label %226

226:                                              ; preds = %220, %215, %208
  %227 = load %class.CPDF_Object*, %class.CPDF_Object** %193, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %193, align 8
  %228 = icmp eq %class.CPDF_Object* %227, null
  br i1 %228, label %240, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %227, i64 0, i32 0, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = add nsw i64 %231, -1
  store i64 %232, i64* %230, align 8
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %240

234:                                              ; preds = %229
  %235 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %227, i64 0, i32 0
  %236 = bitcast %class.CPDF_Object* %227 to void (%"class.fxcrt::Retainable"*)***
  %237 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %237, i64 1
  %239 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %238, align 8
  call void %239(%"class.fxcrt::Retainable"* nonnull %235) #13
  br label %240

240:                                              ; preds = %226, %229, %234
  %241 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %211, align 8
  %242 = ptrtoint %class.CPDF_Dictionary* %241 to i64
  %243 = icmp eq %class.CPDF_Dictionary* %241, null
  br i1 %243, label %248, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %241, i64 0, i32 0, i32 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = add nsw i64 %246, 1
  store i64 %247, i64* %245, align 8
  br label %248

248:                                              ; preds = %240, %244
  %249 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %178, align 8
  %250 = bitcast %"class.fxcrt::RetainPtr.89"* %177 to i64*
  store i64 %242, i64* %250, align 8
  %251 = icmp eq %class.CPDF_Dictionary* %249, null
  br i1 %251, label %263, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %249, i64 0, i32 0, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = add nsw i64 %254, -1
  store i64 %255, i64* %253, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %263

257:                                              ; preds = %252
  %258 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %249, i64 0, i32 0, i32 0
  %259 = bitcast %class.CPDF_Dictionary* %249 to void (%"class.fxcrt::Retainable"*)***
  %260 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %260, i64 1
  %262 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %261, align 8
  call void %262(%"class.fxcrt::Retainable"* nonnull %258) #13
  br label %263

263:                                              ; preds = %257, %252, %248
  %264 = call i8* @_Znwm(i64 104) #14, !noalias !77
  %265 = bitcast i8* %264 to %class.CPDF_SecurityHandler*
  call void @_ZN20CPDF_SecurityHandlerC1Ev(%class.CPDF_SecurityHandler* nonnull %265) #13, !noalias !77
  %266 = ptrtoint i8* %264 to i64
  %267 = getelementptr inbounds i8, i8* %264, i64 8
  %268 = bitcast i8* %267 to i64*
  %269 = load i64, i64* %268, align 8, !noalias !77
  %270 = add nsw i64 %269, 1
  store i64 %270, i64* %268, align 8, !noalias !77
  %271 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 4
  %272 = getelementptr inbounds %"class.fxcrt::RetainPtr.79", %"class.fxcrt::RetainPtr.79"* %271, i64 0, i32 0, i32 0, i32 0, i32 0
  %273 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %272, align 8
  %274 = bitcast %"class.fxcrt::RetainPtr.79"* %271 to i64*
  store i64 %266, i64* %274, align 8
  %275 = icmp eq %class.CPDF_SecurityHandler* %273, null
  br i1 %275, label %287, label %276

276:                                              ; preds = %263
  %277 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %273, i64 0, i32 0, i32 1
  %278 = load i64, i64* %277, align 8
  %279 = add nsw i64 %278, -1
  store i64 %279, i64* %277, align 8
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %287

281:                                              ; preds = %276
  %282 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %273, i64 0, i32 0
  %283 = bitcast %class.CPDF_SecurityHandler* %273 to void (%"class.fxcrt::Retainable"*)***
  %284 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %284, i64 1
  %286 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %285, align 8
  call void %286(%"class.fxcrt::Retainable"* nonnull %282) #13
  br label %287

287:                                              ; preds = %281, %276, %263
  %288 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %272, align 8
  %289 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %211, align 8
  %290 = load %class.CPDF_Array*, %class.CPDF_Array** %25, align 8
  %291 = bitcast %"class.fxcrt::ByteString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #13
  %292 = load %class.CPDF_Parser*, %class.CPDF_Parser** %41, align 8
  call void @_ZNK11CPDF_Parser18GetEncodedPasswordEv(%"class.fxcrt::ByteString"* nonnull sret %16, %class.CPDF_Parser* %292) #13
  call void @_ZN20CPDF_SecurityHandler8OnCreateEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringE(%class.CPDF_SecurityHandler* %288, %class.CPDF_Dictionary* %289, %class.CPDF_Array* %290, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %16) #13
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #13
  %293 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 17
  store i8 1, i8* %293, align 4
  br label %294

294:                                              ; preds = %176, %181, %124, %119, %109, %287, %186, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CPDF_Creator8ContinueEv(%class.CPDF_Creator*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = icmp slt i32 %3, 100
  br i1 %6, label %7, label %32

7:                                                ; preds = %5, %22
  %8 = phi i32 [ %24, %22 ], [ %3, %5 ]
  %9 = icmp slt i32 %8, 20
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage1Ev(%class.CPDF_Creator* %0)
  br label %22

12:                                               ; preds = %7
  %13 = icmp slt i32 %8, 80
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage2Ev(%class.CPDF_Creator* %0)
  br label %22

16:                                               ; preds = %12
  %17 = icmp slt i32 %8, 90
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage3Ev(%class.CPDF_Creator* %0)
  br label %22

20:                                               ; preds = %16
  %21 = tail call i32 @_ZN12CPDF_Creator15WriteDoc_Stage4Ev(%class.CPDF_Creator* %0)
  br label %22

22:                                               ; preds = %14, %20, %18, %10
  %23 = phi i32 [ %11, %10 ], [ %15, %14 ], [ %19, %18 ], [ %21, %20 ]
  %24 = load i32, i32* %2, align 8
  %25 = icmp sge i32 %23, %24
  %26 = icmp slt i32 %24, 100
  %27 = and i1 %25, %26
  br i1 %27, label %7, label %28

28:                                               ; preds = %22
  %29 = icmp slt i32 %23, 1
  %30 = icmp eq i32 %24, 100
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %5, %28
  %33 = phi i32 [ %23, %28 ], [ 0, %5 ]
  store i32 -1, i32* %2, align 8
  %34 = icmp sgt i32 %33, 0
  br label %37

35:                                               ; preds = %28
  %36 = icmp sgt i32 %24, -1
  br label %37

37:                                               ; preds = %32, %35, %1
  %38 = phi i1 [ false, %1 ], [ %34, %32 ], [ %36, %35 ]
  ret i1 %38
}

declare %class.CPDF_Array* @_ZNK11CPDF_Parser10GetIDArrayEv(%class.CPDF_Parser*) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZNK10CPDF_Array11GetObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZN10CPDF_Array6AppendEN5fxcrt9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Array*, %"class.fxcrt::RetainPtr.199"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_String* @_ZN10CPDF_Array9AppendNewI11CPDF_StringJRN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeEDpOT0_(%class.CPDF_Array*, %"class.fxcrt::ByteString"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.199", align 8
  %6 = bitcast %"class.fxcrt::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = tail call i8* @_Znwm(i64 40) #14, !noalias !80
  %8 = bitcast i8* %7 to %class.CPDF_String*
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %9, align 8, !noalias !80
  %11 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %10 to i64
  %12 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %11, i64* %12, align 8, !noalias !80
  %13 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %10, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %10, i64 0, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !80
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %15, align 8, !noalias !80
  br label %18

18:                                               ; preds = %3, %14
  %19 = load i8, i8* %2, align 1, !range !8, !noalias !80
  %20 = icmp ne i8 %19, 0
  call void @_ZN11CPDF_StringC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_b(%class.CPDF_String* nonnull %8, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext %20) #13, !noalias !80
  %21 = ptrtoint i8* %7 to i64
  %22 = getelementptr inbounds i8, i8* %7, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !80
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8, !noalias !80
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #13
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #14
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %18, %29, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  %61 = bitcast %"class.fxcrt::RetainPtr.199"* %5 to i64*
  store i64 %21, i64* %61, align 8
  %62 = load i64, i64* %23, align 8
  %63 = add nsw i64 %62, 1
  store i64 %63, i64* %23, align 8
  %64 = call %class.CPDF_Object* @_ZN10CPDF_Array6AppendEN5fxcrt9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Array* %0, %"class.fxcrt::RetainPtr.199"* nonnull %5) #13
  %65 = bitcast %class.CPDF_Object* %64 to %class.CPDF_String*
  %66 = getelementptr inbounds %"class.fxcrt::RetainPtr.199", %"class.fxcrt::RetainPtr.199"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %class.CPDF_Object*, %class.CPDF_Object** %66, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %66, align 8
  %68 = icmp eq %class.CPDF_Object* %67, null
  br i1 %68, label %80, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %67, i64 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %67, i64 0, i32 0
  %76 = bitcast %class.CPDF_Object* %67 to void (%"class.fxcrt::Retainable"*)***
  %77 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, i64 1
  %79 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, align 8
  call void %79(%"class.fxcrt::Retainable"* nonnull %75) #13
  br label %80

80:                                               ; preds = %74, %69, %60
  %81 = load i64, i64* %23, align 8
  %82 = add nsw i64 %81, -1
  store i64 %82, i64* %23, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast i8* %7 to %"class.fxcrt::Retainable"*
  %86 = bitcast i8* %7 to void (%"class.fxcrt::Retainable"*)***
  %87 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %87, i64 1
  %89 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, align 8
  call void %89(%"class.fxcrt::Retainable"* nonnull %85) #13
  br label %90

90:                                               ; preds = %80, %84
  ret %class.CPDF_String* %65
}

declare %class.CPDF_Object* @_ZN10CPDF_Array11GetObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK15CPDF_Dictionary5CloneEv(%"class.fxcrt::RetainPtr.199"* sret, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_ZN20CPDF_SecurityHandler8OnCreateEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringE(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*, %class.CPDF_Array*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK11CPDF_Parser18GetEncodedPasswordEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_Parser*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN12CPDF_Creator14SetFileVersionEi(%class.CPDF_Creator* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = add i32 %1, -10
  %4 = icmp ugt i32 %3, 7
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 16
  store i32 %1, i32* %6, align 8
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_Creator14RemoveSecurityEv(%class.CPDF_Creator* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_SecurityHandler*, %class.CPDF_SecurityHandler** %2, align 8
  store %class.CPDF_SecurityHandler* null, %class.CPDF_SecurityHandler** %2, align 8
  %4 = icmp eq %class.CPDF_SecurityHandler* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %3, i64 0, i32 0
  %12 = bitcast %class.CPDF_SecurityHandler* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 17
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %18, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %18, align 8
  %20 = icmp eq %class.CPDF_Dictionary* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %19, i64 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, -1
  store i64 %24, i64* %22, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %19, i64 0, i32 0, i32 0
  %28 = bitcast %class.CPDF_Dictionary* %19 to void (%"class.fxcrt::Retainable"*)***
  %29 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, i64 1
  %31 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, align 8
  tail call void %31(%"class.fxcrt::Retainable"* nonnull %27) #13
  br label %32

32:                                               ; preds = %16, %21, %26
  %33 = getelementptr inbounds %class.CPDF_Creator, %class.CPDF_Creator* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %34 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %33, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %33, align 8
  %35 = icmp eq %class.CPDF_Dictionary* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %34, i64 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i64 %38, -1
  store i64 %39, i64* %37, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %34, i64 0, i32 0, i32 0
  %43 = bitcast %class.CPDF_Dictionary* %34 to void (%"class.fxcrt::Retainable"*)***
  %44 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, i64 1
  %46 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, align 8
  tail call void %46(%"class.fxcrt::Retainable"* nonnull %42) #13
  br label %47

47:                                               ; preds = %32, %36, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_Z18FX_Random_MT_Startj(i32) local_unnamed_addr #1

declare i32 @_Z21FX_Random_MT_GeneratePv(i8*) local_unnamed_addr #1

declare void @_Z18FX_Random_MT_ClosePv(i8*) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_121CFX_FileBufferArchive10WriteBlockEPKvm(%"class.(anonymous namespace)::CFX_FileBufferArchive"* nocapture, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %5, %31
  %10 = phi i8* [ %1, %5 ], [ %33, %31 ]
  %11 = phi i64 [ %2, %5 ], [ %32, %31 ]
  %12 = load i64, i64* %6, align 8
  %13 = sub i64 32768, %12
  %14 = icmp ult i64 %11, %13
  %15 = select i1 %14, i64 %11, i64 %13
  %16 = load i8*, i8** %7, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %10, i64 %15, i1 false)
  %18 = load i64, i64* %6, align 8
  %19 = add i64 %18, %15
  store i64 %19, i64* %6, align 8
  %20 = icmp eq i64 %19, 32768
  br i1 %20, label %21, label %31

21:                                               ; preds = %9
  store i64 0, i64* %6, align 8
  %22 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %8, align 8
  %23 = icmp eq %class.IFX_RetainableWriteStream* %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.IFX_RetainableWriteStream, %class.IFX_RetainableWriteStream* %22, i64 0, i32 0
  %26 = load i8*, i8** %7, align 8
  %27 = bitcast %class.IFX_RetainableWriteStream* %22 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %28 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %27, align 8
  %29 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %28, align 8
  %30 = tail call zeroext i1 %29(%class.IFX_WriteStream* %25, i8* %26, i64 32768) #13
  br i1 %30, label %31, label %48

31:                                               ; preds = %9, %24
  %32 = sub i64 %11, %15
  %33 = getelementptr inbounds i8, i8* %10, i64 %15
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %9

35:                                               ; preds = %31, %3
  %36 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = sext i64 %37 to i65
  %39 = zext i64 %2 to i65
  %40 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %38, i65 %39) #13
  %41 = extractvalue { i65, i1 } %40, 1
  %42 = extractvalue { i65, i1 } %40, 0
  %43 = trunc i65 %42 to i64
  %44 = sext i64 %43 to i65
  %45 = icmp ne i65 %42, %44
  %46 = or i1 %41, %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %35
  store i64 %43, i64* %36, align 8
  br label %48

48:                                               ; preds = %21, %24, %47, %35
  %49 = phi i1 [ true, %47 ], [ false, %35 ], [ false, %24 ], [ false, %21 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_121CFX_FileBufferArchive11WriteStringEN5fxcrt18StringViewTemplateIcEE(%"class.(anonymous namespace)::CFX_FileBufferArchive"* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %34, %6
  %13 = phi i8* [ %8, %6 ], [ %36, %34 ]
  %14 = phi i64 [ %4, %6 ], [ %35, %34 ]
  %15 = load i64, i64* %9, align 8
  %16 = sub i64 32768, %15
  %17 = icmp ult i64 %14, %16
  %18 = select i1 %17, i64 %14, i64 %16
  %19 = load i8*, i8** %10, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %13, i64 %18, i1 false) #13
  %21 = load i64, i64* %9, align 8
  %22 = add i64 %21, %18
  store i64 %22, i64* %9, align 8
  %23 = icmp eq i64 %22, 32768
  br i1 %23, label %24, label %34

24:                                               ; preds = %12
  store i64 0, i64* %9, align 8
  %25 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %11, align 8
  %26 = icmp eq %class.IFX_RetainableWriteStream* %25, null
  br i1 %26, label %51, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.IFX_RetainableWriteStream, %class.IFX_RetainableWriteStream* %25, i64 0, i32 0
  %29 = load i8*, i8** %10, align 8
  %30 = bitcast %class.IFX_RetainableWriteStream* %25 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %31 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %30, align 8
  %32 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %31, align 8
  %33 = tail call zeroext i1 %32(%class.IFX_WriteStream* %28, i8* %29, i64 32768) #13
  br i1 %33, label %34, label %51

34:                                               ; preds = %27, %12
  %35 = sub i64 %14, %18
  %36 = getelementptr inbounds i8, i8* %13, i64 %18
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %12

38:                                               ; preds = %34, %2
  %39 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sext i64 %40 to i65
  %42 = zext i64 %4 to i65
  %43 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %41, i65 %42) #13
  %44 = extractvalue { i65, i1 } %43, 1
  %45 = extractvalue { i65, i1 } %43, 0
  %46 = trunc i65 %45 to i64
  %47 = sext i64 %46 to i65
  %48 = icmp ne i65 %45, %47
  %49 = or i1 %44, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %38
  store i64 %46, i64* %39, align 8
  br label %51

51:                                               ; preds = %24, %27, %38, %50
  %52 = phi i1 [ true, %50 ], [ false, %38 ], [ false, %27 ], [ false, %24 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121CFX_FileBufferArchiveD2Ev(%"class.(anonymous namespace)::CFX_FileBufferArchive"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_121CFX_FileBufferArchiveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %5, align 8
  %7 = icmp eq %class.IFX_RetainableWriteStream* %6, null
  %8 = icmp eq i64 %4, 0
  %9 = or i1 %8, %7
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.IFX_RetainableWriteStream, %class.IFX_RetainableWriteStream* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.IFX_RetainableWriteStream* %6 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %15 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %14, align 8
  %16 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.IFX_WriteStream* %11, i8* %13, i64 %4) #13
  %18 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %5, align 8
  br label %19

19:                                               ; preds = %1, %10
  %20 = phi %class.IFX_RetainableWriteStream* [ %6, %1 ], [ %18, %10 ]
  store %class.IFX_RetainableWriteStream* null, %class.IFX_RetainableWriteStream** %5, align 8
  %21 = icmp eq %class.IFX_RetainableWriteStream* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %19
  %23 = bitcast %class.IFX_RetainableWriteStream* %20 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.IFX_RetainableWriteStream* %20 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp ne i64 %33, 0
  %35 = icmp eq i8* %29, null
  %36 = or i1 %35, %34
  br i1 %36, label %43, label %37

37:                                               ; preds = %22
  %38 = bitcast i8* %29 to %"class.fxcrt::Retainable"*
  %39 = bitcast i8* %29 to void (%"class.fxcrt::Retainable"*)***
  %40 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, i64 1
  %42 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, align 8
  tail call void %42(%"class.fxcrt::Retainable"* nonnull %38) #13
  br label %43

43:                                               ; preds = %19, %22, %37
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = ptrtoint i8* %45 to i64
  %49 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 %48, i64* %50, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %45) #13
  br label %51

51:                                               ; preds = %43, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121CFX_FileBufferArchiveD0Ev(%"class.(anonymous namespace)::CFX_FileBufferArchive"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12_GLOBAL__N_121CFX_FileBufferArchiveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %5, align 8
  %7 = icmp eq %class.IFX_RetainableWriteStream* %6, null
  %8 = icmp eq i64 %4, 0
  %9 = or i1 %8, %7
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.IFX_RetainableWriteStream, %class.IFX_RetainableWriteStream* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.IFX_RetainableWriteStream* %6 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %15 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %14, align 8
  %16 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.IFX_WriteStream* %11, i8* %13, i64 %4) #13
  %18 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %5, align 8
  br label %19

19:                                               ; preds = %10, %1
  %20 = phi %class.IFX_RetainableWriteStream* [ %6, %1 ], [ %18, %10 ]
  store %class.IFX_RetainableWriteStream* null, %class.IFX_RetainableWriteStream** %5, align 8
  %21 = icmp eq %class.IFX_RetainableWriteStream* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %19
  %23 = bitcast %class.IFX_RetainableWriteStream* %20 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.IFX_RetainableWriteStream* %20 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp ne i64 %33, 0
  %35 = icmp eq i8* %29, null
  %36 = or i1 %35, %34
  br i1 %36, label %43, label %37

37:                                               ; preds = %22
  %38 = bitcast i8* %29 to %"class.fxcrt::Retainable"*
  %39 = bitcast i8* %29 to void (%"class.fxcrt::Retainable"*)***
  %40 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, i64 1
  %42 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, align 8
  tail call void %42(%"class.fxcrt::Retainable"* nonnull %38) #13
  br label %43

43:                                               ; preds = %37, %22, %19
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = ptrtoint i8* %45 to i64
  %49 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 %48, i64* %50, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %45) #13
  br label %51

51:                                               ; preds = %43, %47
  %52 = bitcast %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_121CFX_FileBufferArchive9WriteByteEh(%"class.(anonymous namespace)::CFX_FileBufferArchive"* nocapture, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %29, %2
  %8 = phi i8* [ %3, %2 ], [ %31, %29 ]
  %9 = phi i64 [ 1, %2 ], [ %30, %29 ]
  %10 = load i64, i64* %4, align 8
  %11 = sub i64 32768, %10
  %12 = icmp ult i64 %9, %11
  %13 = select i1 %12, i64 %9, i64 %11
  %14 = load i8*, i8** %5, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %8, i64 %13, i1 false) #13
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %16, %13
  store i64 %17, i64* %4, align 8
  %18 = icmp eq i64 %17, 32768
  br i1 %18, label %19, label %29

19:                                               ; preds = %7
  store i64 0, i64* %4, align 8
  %20 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %6, align 8
  %21 = icmp eq %class.IFX_RetainableWriteStream* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.IFX_RetainableWriteStream, %class.IFX_RetainableWriteStream* %20, i64 0, i32 0
  %24 = load i8*, i8** %5, align 8
  %25 = bitcast %class.IFX_RetainableWriteStream* %20 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %26 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %25, align 8
  %27 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.IFX_WriteStream* %23, i8* %24, i64 32768) #13
  br i1 %28, label %29, label %42

29:                                               ; preds = %22, %7
  %30 = sub i64 %9, %13
  %31 = getelementptr inbounds i8, i8* %8, i64 %13
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %7

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = sext i64 %35 to i65
  %37 = add nsw i65 %36, 1
  %38 = trunc i65 %37 to i64
  %39 = sext i64 %38 to i65
  %40 = icmp eq i65 %37, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %33
  store i64 %38, i64* %34, align 8
  br label %42

42:                                               ; preds = %19, %22, %33, %41
  %43 = phi i1 [ true, %41 ], [ false, %33 ], [ false, %22 ], [ false, %19 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_121CFX_FileBufferArchive10WriteDWordEj(%"class.(anonymous namespace)::CFX_FileBufferArchive"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  %5 = call i8* @FXSYS_itoa(i32 %1, i8* nonnull %4, i32 10) #13
  %6 = call i64 @strlen(i8* nonnull %4) #16
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %34, %8
  %13 = phi i8* [ %4, %8 ], [ %36, %34 ]
  %14 = phi i64 [ %6, %8 ], [ %35, %34 ]
  %15 = load i64, i64* %9, align 8
  %16 = sub i64 32768, %15
  %17 = icmp ult i64 %14, %16
  %18 = select i1 %17, i64 %14, i64 %16
  %19 = load i8*, i8** %10, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %13, i64 %18, i1 false) #13
  %21 = load i64, i64* %9, align 8
  %22 = add i64 %21, %18
  store i64 %22, i64* %9, align 8
  %23 = icmp eq i64 %22, 32768
  br i1 %23, label %24, label %34

24:                                               ; preds = %12
  store i64 0, i64* %9, align 8
  %25 = load %class.IFX_RetainableWriteStream*, %class.IFX_RetainableWriteStream** %11, align 8
  %26 = icmp eq %class.IFX_RetainableWriteStream* %25, null
  br i1 %26, label %51, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.IFX_RetainableWriteStream, %class.IFX_RetainableWriteStream* %25, i64 0, i32 0
  %29 = load i8*, i8** %10, align 8
  %30 = bitcast %class.IFX_RetainableWriteStream* %25 to i1 (%class.IFX_WriteStream*, i8*, i64)***
  %31 = load i1 (%class.IFX_WriteStream*, i8*, i64)**, i1 (%class.IFX_WriteStream*, i8*, i64)*** %30, align 8
  %32 = load i1 (%class.IFX_WriteStream*, i8*, i64)*, i1 (%class.IFX_WriteStream*, i8*, i64)** %31, align 8
  %33 = call zeroext i1 %32(%class.IFX_WriteStream* %28, i8* %29, i64 32768) #13
  br i1 %33, label %34, label %51

34:                                               ; preds = %27, %12
  %35 = sub i64 %14, %18
  %36 = getelementptr inbounds i8, i8* %13, i64 %18
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %12

38:                                               ; preds = %34, %2
  %39 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sext i64 %40 to i65
  %42 = zext i64 %6 to i65
  %43 = call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %41, i65 %42) #13
  %44 = extractvalue { i65, i1 } %43, 1
  %45 = extractvalue { i65, i1 } %43, 0
  %46 = trunc i65 %45 to i64
  %47 = sext i64 %46 to i65
  %48 = icmp ne i65 %45, %47
  %49 = or i1 %44, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %38
  store i64 %46, i64* %39, align 8
  br label %51

51:                                               ; preds = %24, %27, %38, %50
  %52 = phi i1 [ true, %50 ], [ false, %38 ], [ false, %27 ], [ false, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #13
  ret i1 %52
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_121CFX_FileBufferArchive13CurrentOffsetEv(%"class.(anonymous namespace)::CFX_FileBufferArchive"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CFX_FileBufferArchive", %"class.(anonymous namespace)::CFX_FileBufferArchive"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare i8* @FXSYS_itoa(i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.185"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.185"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.185"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN14CPDF_EncryptorD1Ev(%class.CPDF_Encryptor*) unnamed_addr #4

declare void @_ZN14CPDF_EncryptorC1EPK18CPDF_CryptoHandleri(%class.CPDF_Encryptor*, %class.CPDF_CryptoHandler*, i32) unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !8
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !8
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !8
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !8
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !8
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !8
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !8
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !8
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !8
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !8
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !8
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10CPDF_ArrayC1Ev(%class.CPDF_Array*) unnamed_addr #1

declare void @_ZN11CPDF_StringC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_b(%class.CPDF_String*, %"class.fxcrt::WeakPtr"*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) unnamed_addr #1

declare void @_ZN20CPDF_SecurityHandlerC1Ev(%class.CPDF_SecurityHandler*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !15}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !17}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !15}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!39 = distinct !{!39, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!45 = distinct !{!45, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!46 = !{!"branch_weights", i32 2000, i32 1}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!56 = !{!"branch_weights", i32 1, i32 2000}
!57 = !{i32 -2143068319}
!58 = !{i32 -2143068298}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!61 = distinct !{!61, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__16__treeINS_12__value_typeIjlEENS_19__map_value_compareIjS2_NS_4lessIjEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6pdfium10MakeRetainI10CPDF_ArrayJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!67 = distinct !{!67, !"_ZN6pdfium10MakeRetainI10CPDF_ArrayJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN12_GLOBAL__N_114GenerateFileIDEjj: argument 0"}
!70 = distinct !{!70, !"_ZN12_GLOBAL__N_114GenerateFileIDEjj"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN12_GLOBAL__N_114GenerateFileIDEjj: argument 0"}
!73 = distinct !{!73, !"_ZN12_GLOBAL__N_114GenerateFileIDEjj"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_Z12ToDictionaryN5fxcrt9RetainPtrI11CPDF_ObjectEE: argument 0"}
!76 = distinct !{!76, !"_Z12ToDictionaryN5fxcrt9RetainPtrI11CPDF_ObjectEE"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6pdfium10MakeRetainI20CPDF_SecurityHandlerJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!79 = distinct !{!79, !"_ZN6pdfium10MakeRetainI20CPDF_SecurityHandlerJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6pdfium10MakeRetainI11CPDF_StringJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERS5_bEEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!82 = distinct !{!82, !"_ZN6pdfium10MakeRetainI11CPDF_StringJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERS5_bEEENS2_9RetainPtrIT_EEDpOT0_"}
