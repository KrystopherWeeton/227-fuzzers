; ModuleID = '../../third_party/perfetto/src/trace_processor/importers/proto/chrome_string_lookup.cc'
source_filename = "../../third_party/perfetto/src/trace_processor/importers/proto/chrome_string_lookup.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" = type { i32, i8* }
%"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" = type { i32, i8* }
%"class.perfetto::trace_processor::ChromeStringLookup" = type { %"class.std::__1::map", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.perfetto::trace_processor::TraceStorage" = type <{ i32 (...)**, %"class.perfetto::trace_processor::StringPool", %"struct.std::__1::array", %"class.perfetto::trace_processor::tables::MetadataTable", %"class.perfetto::trace_processor::tables::ClockSnapshotTable", %"class.perfetto::trace_processor::tables::TrackTable", %"class.perfetto::trace_processor::tables::GpuTrackTable", %"class.perfetto::trace_processor::tables::ProcessTrackTable", %"class.perfetto::trace_processor::tables::ThreadTrackTable", %"class.perfetto::trace_processor::tables::CounterTrackTable", %"class.perfetto::trace_processor::tables::ThreadCounterTrackTable", %"class.perfetto::trace_processor::tables::ProcessCounterTrackTable", %"class.perfetto::trace_processor::tables::CpuCounterTrackTable", %"class.perfetto::trace_processor::tables::IrqCounterTrackTable", %"class.perfetto::trace_processor::tables::SoftirqCounterTrackTable", %"class.perfetto::trace_processor::tables::GpuCounterTrackTable", %"class.perfetto::trace_processor::tables::GpuCounterGroupTable", %"class.perfetto::trace_processor::tables::PerfCounterTrackTable", %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ThreadTable", %"class.perfetto::trace_processor::tables::ProcessTable", %"class.perfetto::trace_processor::tables::SliceTable", %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::SchedSliceTable", %"class.perfetto::trace_processor::tables::ThreadSliceTable", %"class.perfetto::trace_processor::TraceStorage::VirtualTrackSlices", %"class.perfetto::trace_processor::tables::GpuSliceTable", %"class.perfetto::trace_processor::tables::CounterTable", %"class.perfetto::trace_processor::TraceStorage::SqlStats", %"class.perfetto::trace_processor::tables::InstantTable", %"class.perfetto::trace_processor::tables::RawTable", %"class.perfetto::trace_processor::tables::CpuTable", %"class.perfetto::trace_processor::tables::CpuFreqTable", %"class.perfetto::trace_processor::tables::AndroidLogTable", %"class.perfetto::trace_processor::tables::StackProfileMappingTable", %"class.perfetto::trace_processor::tables::StackProfileFrameTable", %"class.perfetto::trace_processor::tables::StackProfileCallsiteTable", %"class.perfetto::trace_processor::tables::StackSampleTable", %"class.perfetto::trace_processor::tables::HeapProfileAllocationTable", %"class.perfetto::trace_processor::tables::CpuProfileStackSampleTable", %"class.perfetto::trace_processor::tables::PerfSampleTable", %"class.perfetto::trace_processor::tables::PackageListTable", %"class.perfetto::trace_processor::tables::ProfilerSmapsTable", %"class.perfetto::trace_processor::tables::SymbolTable", %"class.perfetto::trace_processor::tables::HeapGraphObjectTable", %"class.perfetto::trace_processor::tables::HeapGraphClassTable", %"class.perfetto::trace_processor::tables::HeapGraphReferenceTable", %"class.perfetto::trace_processor::tables::VulkanMemoryAllocationsTable", %"class.perfetto::trace_processor::tables::GraphicsFrameSliceTable", %"class.perfetto::trace_processor::tables::MemorySnapshotTable", %"class.perfetto::trace_processor::tables::ProcessMemorySnapshotTable", %"class.perfetto::trace_processor::tables::MemorySnapshotNodeTable", %"class.perfetto::trace_processor::tables::MemorySnapshotEdgeTable", %"class.perfetto::trace_processor::tables::ExpectedFrameTimelineSliceTable", %"class.perfetto::trace_processor::tables::ActualFrameTimelineSliceTable", %"struct.std::__1::array.167", [4 x i8] }>
%"class.perfetto::trace_processor::StringPool" = type { %"class.std::__1::vector", %"class.std::__1::vector.9", %"class.std::__1::unordered_map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.perfetto::trace_processor::StringPool::Block"*, %"struct.perfetto::trace_processor::StringPool::Block"*, %"class.std::__1::__compressed_pair.4" }
%"struct.perfetto::trace_processor::StringPool::Block" = type { %"class.perfetto::base::PagedMemory", i32, i64 }
%"class.perfetto::base::PagedMemory" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.perfetto::trace_processor::StringPool::Block"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"struct.std::__1::array" = type { [130 x %"struct.perfetto::trace_processor::TraceStorage::Stats"] }
%"struct.perfetto::trace_processor::TraceStorage::Stats" = type { i64, %"class.std::__1::map.43" }
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::MetadataTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::macros_internal::MacroTable" = type { %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::NullableVector", i8*, %"class.perfetto::trace_processor::Table"* }
%"class.perfetto::trace_processor::Table" = type { i32 (...)**, %"class.std::__1::vector.52", %"class.std::__1::vector.74", i32, %"class.perfetto::trace_processor::StringPool"* }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"*, %"class.std::__1::__compressed_pair.69" }
%"class.perfetto::trace_processor::RowMap" = type <{ i32, i32, i32, [4 x i8], %"class.perfetto::trace_processor::BitVector", %"class.std::__1::vector.54", i32, [4 x i8] }>
%"class.perfetto::trace_processor::BitVector" = type { i32, %"class.std::__1::vector.54", %"class.std::__1::vector.61" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"*, %"class.std::__1::__compressed_pair.64" }
%"class.perfetto::trace_processor::BitVector::Block" = type { %"struct.std::__1::array.63" }
%"struct.std::__1::array.63" = type { [8 x %"class.perfetto::trace_processor::BitVector::BitWord"] }
%"class.perfetto::trace_processor::BitVector::BitWord" = type { i64 }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.perfetto::trace_processor::BitVector::Block"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { i32*, i32*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i32* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.perfetto::trace_processor::RowMap"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"*, %"class.std::__1::__compressed_pair.76" }
%"class.perfetto::trace_processor::Column" = type { %"class.std::__1::shared_ptr", i32, %"class.perfetto::trace_processor::NullableVectorBase"*, i8*, i32, %"class.perfetto::trace_processor::Table"*, i32, i32, %"class.perfetto::trace_processor::StringPool"* }
%"class.std::__1::shared_ptr" = type { %"class.perfetto::trace_processor::NullableVectorBase"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.perfetto::trace_processor::NullableVectorBase" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.perfetto::trace_processor::Column"* }
%"class.perfetto::trace_processor::macros_internal::RootParentTable" = type { %"class.perfetto::trace_processor::Table" }
%"class.perfetto::trace_processor::NullableVector.90" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.91", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.91" = type { %"class.std::__1::__deque_base.92" }
%"class.std::__1::__deque_base.92" = type { %"struct.std::__1::__split_buffer.93", i64, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::__split_buffer.93" = type { i64**, i64**, i64**, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64** }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::NullableVector" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.86" }
%"struct.std::__1::__split_buffer" = type { %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"class.std::__1::__compressed_pair.81" }
%"struct.perfetto::trace_processor::StringPool::Id" = type { i32 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.perfetto::trace_processor::StringPool::Id"** }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::ClockSnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::NullableVector.104" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.105", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.105" = type { %"class.std::__1::__deque_base.106" }
%"class.std::__1::__deque_base.106" = type { %"struct.std::__1::__split_buffer.107", i64, %"class.std::__1::__compressed_pair.113" }
%"struct.std::__1::__split_buffer.107" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i32** }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::TrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::GpuTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90" }
%"class.perfetto::trace_processor::tables::ProcessTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::ThreadTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::CounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ThreadCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::ProcessCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::CpuCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::IrqCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.115" }
%"class.perfetto::trace_processor::NullableVector.115" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.116", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.116" = type { %"class.std::__1::__deque_base.117" }
%"class.std::__1::__deque_base.117" = type { %"struct.std::__1::__split_buffer.118", i64, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::__split_buffer.118" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i32** }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::SoftirqCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.115" }
%"class.perfetto::trace_processor::tables::GpuCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::GpuCounterGroupTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.115", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::PerfCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::ArgTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.129", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::NullableVector.129" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.130", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.130" = type { %"class.std::__1::__deque_base.131" }
%"class.std::__1::__deque_base.131" = type { %"struct.std::__1::__split_buffer.132", i64, %"class.std::__1::__compressed_pair.138" }
%"struct.std::__1::__split_buffer.132" = type { double**, double**, double**, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { double** }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::ThreadTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::ProcessTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::SliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::FlowTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::SchedSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.115" }
%"class.perfetto::trace_processor::tables::ThreadSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90" }
%"class.perfetto::trace_processor::TraceStorage::VirtualTrackSlices" = type { %"class.std::__1::deque.143", %"class.std::__1::deque.91", %"class.std::__1::deque.91", %"class.std::__1::deque.91", %"class.std::__1::deque.91" }
%"class.std::__1::deque.143" = type { %"class.std::__1::__deque_base.144" }
%"class.std::__1::__deque_base.144" = type { %"struct.std::__1::__split_buffer.145", i64, %"class.std::__1::__compressed_pair.151" }
%"struct.std::__1::__split_buffer.145" = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"class.std::__1::__compressed_pair.146" }
%"struct.perfetto::trace_processor::tables::SliceTable::DefinedId" = type { %"struct.perfetto::trace_processor::BaseId" }
%"struct.perfetto::trace_processor::BaseId" = type { i32 }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"** }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::GpuSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::CounterTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.129", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::TraceStorage::SqlStats" = type { i32, %"class.std::__1::deque.155", %"class.std::__1::deque.91", %"class.std::__1::deque.91", %"class.std::__1::deque.91", %"class.std::__1::deque.91" }
%"class.std::__1::deque.155" = type { %"class.std::__1::__deque_base.156" }
%"class.std::__1::__deque_base.156" = type { %"struct.std::__1::__split_buffer.157", i64, %"class.std::__1::__compressed_pair.163" }
%"struct.std::__1::__split_buffer.157" = type { %"class.std::__1::basic_string"**, %"class.std::__1::basic_string"**, %"class.std::__1::basic_string"**, %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.std::__1::basic_string"** }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::InstantTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::RawTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::CpuTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::CpuFreqTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::AndroidLogTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileMappingTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileFrameTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileCallsiteTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::StackSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::HeapProfileAllocationTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90" }
%"class.perfetto::trace_processor::tables::CpuProfileStackSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::StackSampleTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.115" }
%"class.perfetto::trace_processor::tables::PerfSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::PackageListTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.115", %"class.perfetto::trace_processor::NullableVector.115", %"class.perfetto::trace_processor::NullableVector.90" }
%"class.perfetto::trace_processor::tables::ProfilerSmapsTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90" }
%"class.perfetto::trace_processor::tables::SymbolTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::HeapGraphObjectTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.115", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.115" }
%"class.perfetto::trace_processor::tables::HeapGraphClassTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::HeapGraphReferenceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::VulkanMemoryAllocationsTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::GraphicsFrameSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90" }
%"class.perfetto::trace_processor::tables::MemorySnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ProcessMemorySnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::MemorySnapshotNodeTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::MemorySnapshotEdgeTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector.104" }
%"class.perfetto::trace_processor::tables::ExpectedFrameTimelineSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ActualFrameTimelineSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.90", %"class.perfetto::trace_processor::NullableVector.104", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.115", %"class.perfetto::trace_processor::NullableVector.115", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"struct.std::__1::array.167" = type { [7 x %"struct.perfetto::trace_processor::StringPool::Id"] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"struct.perfetto::trace_processor::StringPool::Id" }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN8perfetto15trace_processor12_GLOBAL__N_113kProcessNamesE = internal unnamed_addr constant [39 x %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName"] [%"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" zeroinitializer, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 13, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 15, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 17, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 19, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 20, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 21, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 22, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 23, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 24, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.24, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 25, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 26, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 27, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 28, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 29, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.29, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 30, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 31, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 32, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 33, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 34, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 35, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 37, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 38, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.38, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName" { i32 39, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.39, i32 0, i32 0) }], align 16
@_ZN8perfetto15trace_processor12_GLOBAL__N_112kThreadNamesE = internal unnamed_addr constant [43 x %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName"] [%"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" zeroinitializer, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.44, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 51, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.56, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 19, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 25, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 29, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 37, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 39, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i32 0, i32 0) }, %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName" { i32 40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.81, i32 0, i32 0) }], align 16
@.str.2 = private unnamed_addr constant [8 x i8] c"Browser\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Renderer\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Utility\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"SandboxHelper\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"Gpu\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"PpapiPlugin\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"PpapiBroker\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"Service: network.mojom.NetworkService\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"Service: tracing.mojom.TracingService\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Service: storage.mojom.StorageService\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"Service: audio.mojom.AudioService\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"Service: data_decoder.mojom.DataDecoderService\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"Service: chrome.mojom.UtilWin\00", align 1
@.str.15 = private unnamed_addr constant [51 x i8] c"Service: proxy_resolver.mojom.ProxyResolverFactory\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"Service: media.mojom.CdmService\00", align 1
@.str.17 = private unnamed_addr constant [49 x i8] c"Service: video_capture.mojom.VideoCaptureService\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"Service: unzip.mojom.Unzipper\00", align 1
@.str.19 = private unnamed_addr constant [42 x i8] c"Service: mirroring.mojom.MirroringService\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Service: patch.mojom.FilePatcher\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"Service: chromeos.tts.mojom.TtsService\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"Service: printing.mojom.PrintingService\00", align 1
@.str.23 = private unnamed_addr constant [37 x i8] c"Service: quarantine.mojom.Quarantine\00", align 1
@.str.24 = private unnamed_addr constant [64 x i8] c"Service: chromeos.local_search_service.mojom.LocalSearchService\00", align 1
@.str.25 = private unnamed_addr constant [63 x i8] c"Service: chromeos.assistant.mojom.AssistantAudioDecoderFactory\00", align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"Service: chrome.mojom.FileUtilService\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"Service: printing.mojom.PrintCompositor\00", align 1
@.str.28 = private unnamed_addr constant [62 x i8] c"Service: paint_preview.mojom.PaintPreviewCompositorCollection\00", align 1
@.str.29 = private unnamed_addr constant [46 x i8] c"Service: media.mojom.SpeechRecognitionService\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"Service: device.mojom.XRDeviceService\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"Service: chrome.mojom.UtilReadIcon\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"Service: language_detection.mojom.LanguageDetectionService\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"Service: sharing.mojom.Sharing\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"Service: chrome.mojom.MediaParserFactory\00", align 1
@.str.35 = private unnamed_addr constant [55 x i8] c"Service: qrcode_generator.mojom.QRCodeGeneratorService\00", align 1
@.str.36 = private unnamed_addr constant [36 x i8] c"Service: chrome.mojom.ProfileImport\00", align 1
@.str.37 = private unnamed_addr constant [39 x i8] c"Service: chromeos.ime.mojom.ImeService\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"Service: recording.mojom.RecordingService\00", align 1
@.str.39 = private unnamed_addr constant [53 x i8] c"Service: shape_detection.mojom.ShapeDetectionService\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"CrProcessMain\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"ChromeIOThread\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"NetworkService\00", align 1
@.str.43 = private unnamed_addr constant [28 x i8] c"ThreadPoolBackgroundWorker&\00", align 1
@.str.44 = private unnamed_addr constant [28 x i8] c"ThreadPoolForegroundWorker&\00", align 1
@.str.45 = private unnamed_addr constant [42 x i8] c"ThreadPoolSingleThreadBackgroundBlocking&\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"ThreadPoolSingleThreadForegroundBlocking&\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"ThreadPoolService\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"Compositor\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"VizCompositorThread\00", align 1
@.str.50 = private unnamed_addr constant [22 x i8] c"CompositorTileWorker&\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"ServiceWorkerThread&\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"MemoryInfra\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"StackSamplingProfiler\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"CrBrowserMain\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"CrRendererMain\00", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"Chrome_ChildIOThread\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"Chrome_IOThread\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"CrUtilityMain\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"CrGpuMain\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"CacheThread_BlockFile\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"Media\00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"AudioOutputDevice\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"GpuMemoryThread\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"GpuVSyncThread\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"DXVAVideoDecoderThread\00", align 1
@.str.66 = private unnamed_addr constant [16 x i8] c"BrowserWatchdog\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"WebRTC_Network\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c"Window owner thread\00", align 1
@.str.69 = private unnamed_addr constant [17 x i8] c"WebRTC_Signaling\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"CrPPAPIMain\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"GpuWatchdog\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"swapper\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"Gamepad polling thread\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"AudioInputDevice\00", align 1
@.str.75 = private unnamed_addr constant [14 x i8] c"WebRTC_Worker\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"WebCrypto\00", align 1
@.str.77 = private unnamed_addr constant [16 x i8] c"Database thread\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"Proxy Resolver\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"Chrome_DevToolsADBThread\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"NetworkConfigWatcher\00", align 1
@.str.81 = private unnamed_addr constant [21 x i8] c"wasapi_render_thread\00", align 1

@_ZN8perfetto15trace_processor18ChromeStringLookupC1EPNS0_12TraceStorageE = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ChromeStringLookup"*, %"class.perfetto::trace_processor::TraceStorage"*), void (%"class.perfetto::trace_processor::ChromeStringLookup"*, %"class.perfetto::trace_processor::TraceStorage"*)* @_ZN8perfetto15trace_processor18ChromeStringLookupC2EPNS0_12TraceStorageE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor18ChromeStringLookupC2EPNS0_12TraceStorageE(%"class.perfetto::trace_processor::ChromeStringLookup"*, %"class.perfetto::trace_processor::TraceStorage"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = bitcast %"class.perfetto::trace_processor::TraceStorage"* %1 to i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)***
  %13 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %15 = bitcast %"class.perfetto::trace_processor::ChromeStringLookup"* %0 to i64*
  %16 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %22

17:                                               ; preds = %94
  %18 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  %20 = bitcast %"class.std::__1::map"* %7 to i64*
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %100

22:                                               ; preds = %94, %2
  %23 = phi i64 [ 0, %2 ], [ %97, %94 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds [39 x %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName"], [39 x %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName"]* @_ZN8perfetto15trace_processor12_GLOBAL__N_113kProcessNamesE, i64 0, i64 %23, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = tail call i64 @strlen(i8* %27) #6
  %29 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)**, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*** %12, align 8
  %30 = getelementptr inbounds i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %29, i64 2
  %31 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %30, align 8
  %32 = tail call i32 %31(%"class.perfetto::trace_processor::TraceStorage"* %1, i8* %27, i64 %28) #5
  br label %33

33:                                               ; preds = %22, %25
  %34 = phi i32 [ %32, %25 ], [ 0, %22 ]
  %35 = getelementptr inbounds [39 x %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName"], [39 x %"struct.perfetto::trace_processor::(anonymous namespace)::ProcessName"]* @_ZN8perfetto15trace_processor12_GLOBAL__N_113kProcessNamesE, i64 0, i64 %23, i32 0
  %36 = load i32, i32* %35, align 16
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %38 = icmp eq %"class.std::__1::__tree_node"* %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %33, %61
  %40 = phi %"class.std::__1::__tree_node"* [ %64, %61 ], [ %37, %33 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %63, %61 ], [ %3, %33 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %36, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %61

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %65

51:                                               ; preds = %39
  %52 = icmp slt i32 %43, %36
  br i1 %52, label %53, label %59

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %65

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %65

61:                                               ; preds = %53, %45
  %62 = phi %"class.std::__1::__tree_node_base"* [ %47, %45 ], [ %55, %53 ]
  %63 = phi %"class.std::__1::__tree_node_base"** [ %46, %45 ], [ %54, %53 ]
  %64 = bitcast %"class.std::__1::__tree_node_base"* %62 to %"class.std::__1::__tree_node"*
  br label %39

65:                                               ; preds = %33, %59, %57, %49
  %66 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %58, %57 ], [ %60, %59 ], [ %4, %33 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %46, %49 ], [ %54, %57 ], [ %41, %59 ], [ %14, %33 ]
  %68 = bitcast %"class.std::__1::__tree_node_base"** %67 to %"class.std::__1::__tree_node"**
  %69 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node"* %69, null
  br i1 %70, label %71, label %94

71:                                               ; preds = %65
  %72 = tail call i8* @_Znwm(i64 40) #7, !noalias !2
  %73 = getelementptr inbounds i8, i8* %72, i64 28
  %74 = bitcast i8* %73 to i32*
  store i32 %36, i32* %74, align 4, !noalias !2
  %75 = getelementptr inbounds i8, i8* %72, i64 32
  %76 = bitcast i8* %75 to i32*
  store i32 0, i32* %76, align 4, !noalias !2
  %77 = bitcast i8* %72 to %"class.std::__1::__tree_node"*
  %78 = bitcast i8* %72 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds i8, i8* %72, i64 16
  %80 = bitcast i8* %79 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %80, align 8
  %81 = bitcast %"class.std::__1::__tree_node_base"** %67 to i8**
  store i8* %72, i8** %81, align 8
  %82 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %71
  %87 = ptrtoint %"class.std::__1::__tree_node_base"* %84 to i64
  store i64 %87, i64* %15, align 8
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  br label %89

89:                                               ; preds = %86, %71
  %90 = phi %"class.std::__1::__tree_node_base"* [ %78, %71 ], [ %88, %86 ]
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %90) #5
  %92 = load i64, i64* %16, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %16, align 8
  br label %94

94:                                               ; preds = %65, %89
  %95 = phi %"class.std::__1::__tree_node"* [ %77, %89 ], [ %69, %65 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %34, i32* %96, align 4
  %97 = add nuw nsw i64 %23, 1
  %98 = icmp eq i64 %97, 39
  br i1 %98, label %17, label %22

99:                                               ; preds = %172
  ret void

100:                                              ; preds = %172, %17
  %101 = phi i64 [ 0, %17 ], [ %175, %172 ]
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds [43 x %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName"], [43 x %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName"]* @_ZN8perfetto15trace_processor12_GLOBAL__N_112kThreadNamesE, i64 0, i64 %101, i32 1
  %105 = load i8*, i8** %104, align 8
  %106 = tail call i64 @strlen(i8* %105) #6
  %107 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)**, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*** %12, align 8
  %108 = getelementptr inbounds i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %107, i64 2
  %109 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %108, align 8
  %110 = tail call i32 %109(%"class.perfetto::trace_processor::TraceStorage"* %1, i8* %105, i64 %106) #5
  br label %111

111:                                              ; preds = %100, %103
  %112 = phi i32 [ %110, %103 ], [ 0, %100 ]
  %113 = getelementptr inbounds [43 x %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName"], [43 x %"struct.perfetto::trace_processor::(anonymous namespace)::ThreadName"]* @_ZN8perfetto15trace_processor12_GLOBAL__N_112kThreadNamesE, i64 0, i64 %101, i32 0
  %114 = load i32, i32* %113, align 16
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %116 = icmp eq %"class.std::__1::__tree_node"* %115, null
  br i1 %116, label %143, label %117

117:                                              ; preds = %111, %139
  %118 = phi %"class.std::__1::__tree_node"* [ %142, %139 ], [ %115, %111 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %141, %139 ], [ %8, %111 ]
  %120 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 1, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %114, %121
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %139

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 0
  br label %143

129:                                              ; preds = %117
  %130 = icmp slt i32 %121, %114
  br i1 %130, label %131, label %137

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 1
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 0
  br label %143

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 0, i32 0
  br label %143

139:                                              ; preds = %131, %123
  %140 = phi %"class.std::__1::__tree_node_base"* [ %125, %123 ], [ %133, %131 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %124, %123 ], [ %132, %131 ]
  %142 = bitcast %"class.std::__1::__tree_node_base"* %140 to %"class.std::__1::__tree_node"*
  br label %117

143:                                              ; preds = %111, %137, %135, %127
  %144 = phi %"class.std::__1::__tree_end_node"* [ %128, %127 ], [ %136, %135 ], [ %138, %137 ], [ %9, %111 ]
  %145 = phi %"class.std::__1::__tree_node_base"** [ %124, %127 ], [ %132, %135 ], [ %119, %137 ], [ %19, %111 ]
  %146 = bitcast %"class.std::__1::__tree_node_base"** %145 to %"class.std::__1::__tree_node"**
  %147 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node"* %147, null
  br i1 %148, label %149, label %172

149:                                              ; preds = %143
  %150 = tail call i8* @_Znwm(i64 40) #7, !noalias !5
  %151 = getelementptr inbounds i8, i8* %150, i64 28
  %152 = bitcast i8* %151 to i32*
  store i32 %114, i32* %152, align 4, !noalias !5
  %153 = getelementptr inbounds i8, i8* %150, i64 32
  %154 = bitcast i8* %153 to i32*
  store i32 0, i32* %154, align 4, !noalias !5
  %155 = bitcast i8* %150 to %"class.std::__1::__tree_node"*
  %156 = bitcast i8* %150 to %"class.std::__1::__tree_node_base"*
  %157 = getelementptr inbounds i8, i8* %150, i64 16
  %158 = bitcast i8* %157 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %144, %"class.std::__1::__tree_end_node"** %158, align 8
  %159 = bitcast %"class.std::__1::__tree_node_base"** %145 to i8**
  store i8* %150, i8** %159, align 8
  %160 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 0, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %149
  %165 = ptrtoint %"class.std::__1::__tree_node_base"* %162 to i64
  store i64 %165, i64* %20, align 8
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  br label %167

167:                                              ; preds = %164, %149
  %168 = phi %"class.std::__1::__tree_node_base"* [ %156, %149 ], [ %166, %164 ]
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %169, %"class.std::__1::__tree_node_base"* %168) #5
  %170 = load i64, i64* %21, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %21, align 8
  br label %172

172:                                              ; preds = %143, %167
  %173 = phi %"class.std::__1::__tree_node"* [ %155, %167 ], [ %147, %143 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %173, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %112, i32* %174, align 4
  %175 = add nuw nsw i64 %101, 1
  %176 = icmp eq i64 %175, 43
  br i1 %176, label %99, label %100
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8perfetto15trace_processor18ChromeStringLookup14GetProcessNameEi(%"class.perfetto::trace_processor::ChromeStringLookup"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi i32 [ %31, %28 ], [ 0, %2 ], [ 0, %21 ], [ 0, %23 ]
  ret i32 %33
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8perfetto15trace_processor18ChromeStringLookup13GetThreadNameEi(%"class.perfetto::trace_processor::ChromeStringLookup"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ChromeStringLookup", %"class.perfetto::trace_processor::ChromeStringLookup"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi i32 [ %31, %28 ], [ 0, %2 ], [ 0, %21 ], [ 0, %23 ]
  ret i32 %33
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIiN8perfetto15trace_processor10StringPool2IdEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIiN8perfetto15trace_processor10StringPool2IdEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIiN8perfetto15trace_processor10StringPool2IdEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIiN8perfetto15trace_processor10StringPool2IdEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
