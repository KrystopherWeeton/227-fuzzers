; ModuleID = 'gen/content/common/input/input_injector.mojom-test-utils.cc'
source_filename = "gen/content/common/input/input_injector.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::mojom::InputInjectorAsyncWaiter" = type { %"class.content::mojom::InputInjector"* }
%"class.content::mojom::InputInjector" = type { i32 (...)** }
%"class.content::mojom::InputInjectorInterceptorForTesting" = type { %"class.content::mojom::InputInjector" }
%"struct.content::SyntheticSmoothDragGestureParams" = type <{ %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", [4 x i8], %"class.std::__1::vector", float, [4 x i8] }>
%"struct.content::SyntheticGestureParams.base" = type <{ i32 (...)**, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Vector2dF"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.content::SyntheticSmoothScrollGestureParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", %"class.std::__1::vector", i8, float, float, float, i8, i32 }
%"struct.content::SyntheticPinchGestureParams" = type { %"struct.content::SyntheticGestureParams.base", float, %"class.gfx::PointF", float, [4 x i8] }
%"struct.content::SyntheticTapGestureParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", float }
%"struct.content::SyntheticPointerActionListParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.std::__1::vector.4"*, %"class.std::__1::vector.4"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::vector.4" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::vector.4"* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.24, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.17", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.24 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.27", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN7content5mojom13InputInjectorD2Ev = comdat any

$_ZN7content5mojom34InputInjectorInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [25 x i8] c"QueueSyntheticSmoothDrag\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"gen/content/common/input/input_injector.mojom-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"QueueSyntheticSmoothScroll\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"QueueSyntheticPinch\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"QueueSyntheticTap\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"QueueSyntheticPointerAction\00", align 1
@_ZTVN7content5mojom34InputInjectorInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::mojom::InputInjector"*)* @_ZN7content5mojom13InputInjectorD2Ev to i8*), i8* bitcast (void (%"class.content::mojom::InputInjectorInterceptorForTesting"*)* @_ZN7content5mojom34InputInjectorInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)* @_ZN7content5mojom34InputInjectorInterceptorForTesting24QueueSyntheticSmoothDragERKNS_32SyntheticSmoothDragGestureParamsEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)* @_ZN7content5mojom34InputInjectorInterceptorForTesting26QueueSyntheticSmoothScrollERKNS_34SyntheticSmoothScrollGestureParamsEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)* @_ZN7content5mojom34InputInjectorInterceptorForTesting19QueueSyntheticPinchERKNS_27SyntheticPinchGestureParamsEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)* @_ZN7content5mojom34InputInjectorInterceptorForTesting17QueueSyntheticTapERKNS_25SyntheticTapGestureParamsEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)* @_ZN7content5mojom34InputInjectorInterceptorForTesting27QueueSyntheticPointerActionERKNS_32SyntheticPointerActionListParamsEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7content5mojom24InputInjectorAsyncWaiterC1EPNS0_13InputInjectorE = hidden unnamed_addr alias void (%"class.content::mojom::InputInjectorAsyncWaiter"*, %"class.content::mojom::InputInjector"*), void (%"class.content::mojom::InputInjectorAsyncWaiter"*, %"class.content::mojom::InputInjector"*)* @_ZN7content5mojom24InputInjectorAsyncWaiterC2EPNS0_13InputInjectorE
@_ZN7content5mojom24InputInjectorAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.content::mojom::InputInjectorAsyncWaiter"*), void (%"class.content::mojom::InputInjectorAsyncWaiter"*)* @_ZN7content5mojom24InputInjectorAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom34InputInjectorInterceptorForTesting24QueueSyntheticSmoothDragERKNS_32SyntheticSmoothDragGestureParamsEN4base12OnceCallbackIFvvEEE(%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticSmoothDragGestureParams"* dereferenceable(56), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.content::mojom::InputInjectorInterceptorForTesting"* %0 to %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)***
  %6 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)**, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.content::mojom::InputInjector"* %8(%"class.content::mojom::InputInjectorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.content::mojom::InputInjector"* %9 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)** %15, i64 2
  %17 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.content::mojom::InputInjector"* %9, %"struct.content::SyntheticSmoothDragGestureParams"* dereferenceable(56) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom34InputInjectorInterceptorForTesting26QueueSyntheticSmoothScrollERKNS_34SyntheticSmoothScrollGestureParamsEN4base12OnceCallbackIFvvEEE(%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticSmoothScrollGestureParams"* dereferenceable(72), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.content::mojom::InputInjectorInterceptorForTesting"* %0 to %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)***
  %6 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)**, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.content::mojom::InputInjector"* %8(%"class.content::mojom::InputInjectorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.content::mojom::InputInjector"* %9 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.content::mojom::InputInjector"* %9, %"struct.content::SyntheticSmoothScrollGestureParams"* dereferenceable(72) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom34InputInjectorInterceptorForTesting19QueueSyntheticPinchERKNS_27SyntheticPinchGestureParamsEN4base12OnceCallbackIFvvEEE(%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.content::mojom::InputInjectorInterceptorForTesting"* %0 to %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)***
  %6 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)**, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.content::mojom::InputInjector"* %8(%"class.content::mojom::InputInjectorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.content::mojom::InputInjector"* %9 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)** %15, i64 4
  %17 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.content::mojom::InputInjector"* %9, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom34InputInjectorInterceptorForTesting17QueueSyntheticTapERKNS_25SyntheticTapGestureParamsEN4base12OnceCallbackIFvvEEE(%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.content::mojom::InputInjectorInterceptorForTesting"* %0 to %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)***
  %6 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)**, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.content::mojom::InputInjector"* %8(%"class.content::mojom::InputInjectorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.content::mojom::InputInjector"* %9 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)** %15, i64 5
  %17 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.content::mojom::InputInjector"* %9, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom34InputInjectorInterceptorForTesting27QueueSyntheticPointerActionERKNS_32SyntheticPointerActionListParamsEN4base12OnceCallbackIFvvEEE(%"class.content::mojom::InputInjectorInterceptorForTesting"*, %"struct.content::SyntheticPointerActionListParams"* dereferenceable(40), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.content::mojom::InputInjectorInterceptorForTesting"* %0 to %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)***
  %6 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)**, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)*, %"class.content::mojom::InputInjector"* (%"class.content::mojom::InputInjectorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.content::mojom::InputInjector"* %8(%"class.content::mojom::InputInjectorInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.content::mojom::InputInjector"* %9 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)** %15, i64 6
  %17 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.content::mojom::InputInjector"* %9, %"struct.content::SyntheticPointerActionListParams"* dereferenceable(40) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiterC2EPNS0_13InputInjectorE(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture, %"class.content::mojom::InputInjector"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.content::mojom::InputInjectorAsyncWaiter", %"class.content::mojom::InputInjectorAsyncWaiter"* %0, i64 0, i32 0
  store %"class.content::mojom::InputInjector"* %1, %"class.content::mojom::InputInjector"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiterD2Ev(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS_32SyntheticSmoothDragGestureParamsE(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture readonly, %"struct.content::SyntheticSmoothDragGestureParams"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %7 = getelementptr inbounds %"class.content::mojom::InputInjectorAsyncWaiter", %"class.content::mojom::InputInjectorAsyncWaiter"* %0, i64 0, i32 0
  %8 = load %"class.content::mojom::InputInjector"*, %"class.content::mojom::InputInjector"** %7, align 8
  %9 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %10 = call i8* @_Znwm(i64 48) #11, !noalias !2
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS3_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS2_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !2
  %14 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !2
  %15 = bitcast %"class.content::mojom::InputInjector"* %8 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)** %16, i64 2
  %18 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothDragGestureParams"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.content::mojom::InputInjector"* %8, %"struct.content::SyntheticSmoothDragGestureParams"* dereferenceable(56) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  %20 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 66) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS_34SyntheticSmoothScrollGestureParamsE(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture readonly, %"struct.content::SyntheticSmoothScrollGestureParams"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %7 = getelementptr inbounds %"class.content::mojom::InputInjectorAsyncWaiter", %"class.content::mojom::InputInjectorAsyncWaiter"* %0, i64 0, i32 0
  %8 = load %"class.content::mojom::InputInjector"*, %"class.content::mojom::InputInjector"** %7, align 8
  %9 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %10 = call i8* @_Znwm(i64 48) #11, !noalias !7
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS3_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS2_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !7
  %14 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !7
  %15 = bitcast %"class.content::mojom::InputInjector"* %8 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)** %16, i64 3
  %18 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticSmoothScrollGestureParams"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.content::mojom::InputInjector"* %8, %"struct.content::SyntheticSmoothScrollGestureParams"* dereferenceable(72) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  %20 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 77) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS_27SyntheticPinchGestureParamsE(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture readonly, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %7 = getelementptr inbounds %"class.content::mojom::InputInjectorAsyncWaiter", %"class.content::mojom::InputInjectorAsyncWaiter"* %0, i64 0, i32 0
  %8 = load %"class.content::mojom::InputInjector"*, %"class.content::mojom::InputInjector"** %7, align 8
  %9 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %10 = call i8* @_Znwm(i64 48) #11, !noalias !12
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS3_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS2_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !12
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !12
  %14 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !12
  %15 = bitcast %"class.content::mojom::InputInjector"* %8 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)** %16, i64 4
  %18 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPinchGestureParams"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.content::mojom::InputInjector"* %8, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  %20 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 88) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS_25SyntheticTapGestureParamsE(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture readonly, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %7 = getelementptr inbounds %"class.content::mojom::InputInjectorAsyncWaiter", %"class.content::mojom::InputInjectorAsyncWaiter"* %0, i64 0, i32 0
  %8 = load %"class.content::mojom::InputInjector"*, %"class.content::mojom::InputInjector"** %7, align 8
  %9 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %10 = call i8* @_Znwm(i64 48) #11, !noalias !17
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS3_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS2_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !17
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !17
  %14 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !17
  %15 = bitcast %"class.content::mojom::InputInjector"* %8 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)** %16, i64 5
  %18 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticTapGestureParams"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.content::mojom::InputInjector"* %8, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  %20 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS_32SyntheticPointerActionListParamsE(%"class.content::mojom::InputInjectorAsyncWaiter"* nocapture readonly, %"struct.content::SyntheticPointerActionListParams"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %7 = getelementptr inbounds %"class.content::mojom::InputInjectorAsyncWaiter", %"class.content::mojom::InputInjectorAsyncWaiter"* %0, i64 0, i32 0
  %8 = load %"class.content::mojom::InputInjector"*, %"class.content::mojom::InputInjector"** %7, align 8
  %9 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %10 = call i8* @_Znwm(i64 48) #11, !noalias !22
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS3_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS2_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !22
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !22
  %14 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !22
  %15 = bitcast %"class.content::mojom::InputInjector"* %8 to void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)**, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)** %16, i64 6
  %18 = load void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)*, void (%"class.content::mojom::InputInjector"*, %"struct.content::SyntheticPointerActionListParams"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.content::mojom::InputInjector"* %8, %"struct.content::SyntheticPointerActionListParams"* dereferenceable(40) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  %20 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 110) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom13InputInjectorD2Ev(%"class.content::mojom::InputInjector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom34InputInjectorInterceptorForTestingD0Ev(%"class.content::mojom::InputInjectorInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS3_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS2_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS3_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS2_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS3_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS2_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS3_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS2_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS3_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS2_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS3_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS3_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS1_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter24QueueSyntheticSmoothDragERKNS1_32SyntheticSmoothDragGestureParamsEE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS3_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS3_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS1_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter26QueueSyntheticSmoothScrollERKNS1_34SyntheticSmoothScrollGestureParamsEE3$_1JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS3_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS3_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS1_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter19QueueSyntheticPinchERKNS1_27SyntheticPinchGestureParamsEE3$_2JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS3_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS3_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS1_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter17QueueSyntheticTapERKNS1_25SyntheticTapGestureParamsEE3$_3JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS3_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS3_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS1_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN7content5mojom24InputInjectorAsyncWaiter27QueueSyntheticPointerActionERKNS1_32SyntheticPointerActionListParamsEE3$_4JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
