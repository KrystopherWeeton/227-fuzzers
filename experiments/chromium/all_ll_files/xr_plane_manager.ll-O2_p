; ModuleID = '../../third_party/blink/renderer/modules/xr/xr_plane_manager.cc'
source_filename = "../../third_party/blink/renderer/modules/xr/xr_plane_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.613", i32, [4 x i8], %"class.std::__1::unique_ptr.751", %"class.std::__1::unique_ptr.751", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.762", %"class.std::__1::unique_ptr.768", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.786", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.96", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.616", %"class.std::__1::unique_ptr.622", %"class.std::__1::unique_ptr.628", %"class.std::__1::unique_ptr.634", %"class.std::__1::unique_ptr.640", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.671", %"class.std::__1::unique_ptr.678", %"class.std::__1::unique_ptr.685", %"class.std::__1::unique_ptr.685", %"class.std::__1::unique_ptr.692", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.731", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.649" = type { %"struct.std::__1::__atomic_base.650" }
%"struct.std::__1::__atomic_base.650" = type { %"struct.std::__1::__atomic_base.651" }
%"struct.std::__1::__atomic_base.651" = type { %"struct.std::__1::__cxx_atomic_impl.652" }
%"struct.std::__1::__cxx_atomic_impl.652" = type { %"struct.std::__1::__cxx_atomic_base_impl.653" }
%"struct.std::__1::__cxx_atomic_base_impl.653" = type { i64 }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::Worklist.660"* }
%"class.blink::Worklist.660" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.blink::Worklist.667"* }
%"class.blink::Worklist.667" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.blink::Worklist.674"* }
%"class.blink::Worklist.674" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.blink::Worklist.681"* }
%"class.blink::Worklist.681" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.blink::Worklist.688"* }
%"class.blink::Worklist.688" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.blink::Worklist.695"* }
%"class.blink::Worklist.695" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.blink::Worklist.702"* }
%"class.blink::Worklist.702" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.649" }
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.709", %"class.std::__1::__compressed_pair.717", %"class.std::__1::__compressed_pair.722", %"class.std::__1::__compressed_pair.724", [4 x i8] }>
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711", %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i64 }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { float }
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.734", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.743" }
%"class.WTF::Vector.743" = type { %"class.WTF::VectorBuffer.744" }
%"class.WTF::VectorBuffer.744" = type { %"class.WTF::VectorBufferBase.745" }
%"class.WTF::VectorBufferBase.745" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760" }
%"class.WTF::VectorBufferBase.760" = type { %"struct.std::__1::pair.761"*, i32, i32 }
%"struct.std::__1::pair.761" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.774" }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.660"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.667"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.674"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.681"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.688"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1016" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.792 }
%class.scoped_refptr.792 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::XRPlaneManager" = type { %"class.blink::Member", i8, [7 x i8], %"class.blink::HeapHashMap.412" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::XRSession"* }
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type { i64, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::XRPlane"* }
%"class.blink::XRPlane" = type { %"class.blink::ScriptWrappable", i64, %"class.blink::HeapVector.421", %"class.absl::optional.429", %"class.absl::optional.434", %"class.blink::Member", double, %"class.blink::Member.439" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapVector.421" = type { %"class.WTF::Vector.424" }
%"class.WTF::Vector.424" = type { %"class.WTF::VectorBuffer.425" }
%"class.WTF::VectorBuffer.425" = type { %"class.WTF::VectorBufferBase.426" }
%"class.WTF::VectorBufferBase.426" = type { %"class.blink::Member.427"*, i32, i32 }
%"class.blink::Member.427" = type opaque
%"class.absl::optional.429" = type { %"class.absl::optional_internal::optional_data.430" }
%"class.absl::optional_internal::optional_data.430" = type { %"class.absl::optional_internal::optional_data_base.431" }
%"class.absl::optional_internal::optional_data_base.431" = type { %"class.absl::optional_internal::optional_data_dtor_base.432" }
%"class.absl::optional_internal::optional_data_dtor_base.432" = type { i8, %union.anon.433 }
%union.anon.433 = type { i32 }
%"class.absl::optional.434" = type { %"class.absl::optional_internal::optional_data.435" }
%"class.absl::optional_internal::optional_data.435" = type { %"class.absl::optional_internal::optional_data_base.436" }
%"class.absl::optional_internal::optional_data_base.436" = type { %"class.absl::optional_internal::optional_data_dtor_base.437" }
%"class.absl::optional_internal::optional_data_dtor_base.437" = type { i8, [7 x i8], %union.anon.438 }
%union.anon.438 = type { %"class.device::Pose" }
%"class.device::Pose" = type <{ %"class.gfx::Point3F", [4 x i8], %"class.gfx::Quaternion", %"class.gfx::Transform", [4 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::Quaternion" = type { double, double, double, double }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::XRSpace"* }
%"class.blink::XRSpace" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.7" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::HeapVector.9"* }
%"class.blink::HeapVector.9" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.10"* }
%"class.WTF::Vector.10" = type opaque
%"class.blink::XRSession" = type <{ %"class.blink::EventTargetWithInlineData", %"class.device::mojom::blink::XRSessionClient", %"class.device::mojom::blink::XRInputSourceButtonListener", %"class.blink::ActiveScriptWrappable", %"class.blink::HeapVector.12", i8, [7 x i8], %"class.WTF::Vector.20", %"class.blink::HeapVector.25", %"class.blink::Member.34", i32, i8, [3 x i8], %"class.WTF::String", %"class.WTF::String", i32, i32, %"class.WTF::String", %"class.blink::Member.36", %"class.blink::Member.38", %"class.blink::HeapVector.40", %"class.blink::Member.31", i8, i8, [6 x i8], %"class.WTF::HashSet", %"class.std::__1::unique_ptr.50", i8, [7 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.244", %"class.blink::HeapHashMap.251", %"class.blink::HeapHashMap.258", %"class.WTF::HashSet.265", %"class.WTF::HashSet.265", %"class.blink::Member.269", %"class.blink::Member.271", %"class.absl::optional.273", [4 x i8], %"class.blink::HeapVector.278", %"class.WTF::Vector.286", %"class.blink::Member.297", %"class.blink::Member.306", %"class.blink::Member.308", %"class.blink::Member.310", %"class.blink::Member.312", %"class.blink::Member.340", i8, [7 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapVector.342", i32, [4 x i8], %"class.mojo::StructPtr.350", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver", %"class.WTF::Vector.371", %"class.blink::Member.377", %"class.std::__1::unique_ptr.400", i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, [3 x i8], float, i8, i8, [6 x i8], %"class.std::__1::unique_ptr.406", i8, i8, i16, i8, [3 x i8] }>
%"class.device::mojom::blink::XRSessionClient" = type { i32 (...)** }
%"class.device::mojom::blink::XRInputSourceButtonListener" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapVector.12" = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"class.blink::Member.18"*, i32, i32 }
%"class.blink::Member.18" = type opaque
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.25" = type { %"class.WTF::Vector.28" }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"class.blink::Member.31"*, i32, i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::XRSystem"* }
%"class.blink::XRSystem" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::XRRenderState"* }
%"class.blink::XRRenderState" = type opaque
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::XRLightProbe"* }
%"class.blink::XRLightProbe" = type opaque
%"class.blink::HeapVector.40" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.46" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::XRSession::MetricsReporter"* }
%"struct.blink::XRSession::MetricsReporter" = type { %"class.mojo::Remote", %"class.WTF::HashSet" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.226" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.53, %"class.std::__1::unique_ptr.176", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.59, i32 }>
%class.scoped_refptr.53 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.59, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.138", %"class.absl::optional.143", %"class.absl::optional.100", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.167", i8, [7 x i8], %class.scoped_refptr.59, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.54" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.77", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.77" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.78" }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.59, %"class.std::__1::unique_ptr.85", %"class.absl::optional", %"struct.std::__1::atomic.96", i8, i8, i8, i8, i32, i32, %"class.absl::optional.100", %"class.std::__1::unique_ptr.105", i8, i64, %class.scoped_refptr.134, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.137" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.84", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.59, i8, %"class.mojo::ScopedHandleBase.88", %class.scoped_refptr.89, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.90" }
%"class.mojo::ScopedHandleBase.88" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.89 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.95", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.95" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.108", i8, i64, %class.scoped_refptr.109, %class.scoped_refptr.130 }
%"class.base::RepeatingCallback.108" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.109 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.119", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%class.scoped_refptr.130 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.134 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1021", [4 x i8], %"class.base::RepeatingCallback.179", %class.scoped_refptr.59, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1021" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.179" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.137" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, [7 x i8], %union.anon.147 }
%union.anon.147 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.152 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.152 = type { %"class.std::__1::map.155" }
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.166"*, i64 }
%"class.std::__1::unique_ptr.166" = type opaque
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.179", %"class.base::OnceCallback.180", %"class.absl::optional.181", %"class.absl::optional.186", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.193", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.201", %"class.std::__1::map.212", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.221", i8, %class.scoped_refptr.59, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.222" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.180" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.186" = type { %"class.absl::optional_internal::optional_data.187" }
%"class.absl::optional_internal::optional_data.187" = type { %"class.absl::optional_internal::optional_data_base.188" }
%"class.absl::optional_internal::optional_data_base.188" = type { %"class.absl::optional_internal::optional_data_dtor_base.189" }
%"class.absl::optional_internal::optional_data_dtor_base.189" = type { i8, %union.anon.190 }
%union.anon.190 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.59, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.191" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.191" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.196", %class.scoped_refptr.197 }
%"class.base::RepeatingCallback.196" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.197 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.201" = type { %"class.std::__1::__tree.202" }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::map.212" = type { %"class.std::__1::__tree.213" }
%"class.std::__1::__tree.213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.base::OnceCallback.221" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.59 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.60" }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.device::mojom::blink::XRSessionMetricsRecorderProxy"* }
%"class.device::mojom::blink::XRSessionMetricsRecorderProxy" = type { %"class.device::mojom::blink::XRSessionMetricsRecorder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::blink::XRSessionMetricsRecorder" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.237" }
%"class.WTF::HashTable.237" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::HeapHashMap.244" = type { %"class.WTF::HashMap.247" }
%"class.WTF::HashMap.247" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"struct.WTF::KeyValuePair.250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.250" = type opaque
%"class.blink::HeapHashMap.251" = type { %"class.WTF::HashMap.254" }
%"class.WTF::HashMap.254" = type { %"class.WTF::HashTable.255" }
%"class.WTF::HashTable.255" = type <{ %"struct.WTF::KeyValuePair.257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.257" = type opaque
%"class.blink::HeapHashMap.258" = type { %"class.WTF::HashMap.261" }
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.264" = type opaque
%"class.WTF::HashSet.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::XRPlaneManager"* }
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::XRDepthManager"* }
%"class.blink::XRDepthManager" = type opaque
%"class.absl::optional.273" = type { %"class.absl::optional_internal::optional_data.274" }
%"class.absl::optional_internal::optional_data.274" = type { %"class.absl::optional_internal::optional_data_base.275" }
%"class.absl::optional_internal::optional_data_base.275" = type { %"class.absl::optional_internal::optional_data_dtor_base.276" }
%"class.absl::optional_internal::optional_data_dtor_base.276" = type { i8, %union.anon.277 }
%union.anon.277 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::HeapVector.278" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.blink::Member.284" = type opaque
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.289" }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.device::mojom::blink::XRView"* }
%"class.device::mojom::blink::XRView" = type { i32, %"class.mojo::InlinedStructPtr", %"class.gfx::Transform", %"class.gfx::Size" }
%"class.mojo::InlinedStructPtr" = type { %"class.device::mojom::blink::VRFieldOfView", i32 }
%"class.device::mojom::blink::VRFieldOfView" = type { float, float, float, float }
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::XRInputSourceArray"* }
%"class.blink::XRInputSourceArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapHashMap.299" }
%"class.blink::HeapHashMap.299" = type { %"class.WTF::HashMap.302" }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type opaque
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::XRWebGLLayer"* }
%"class.blink::XRWebGLLayer" = type opaque
%"class.blink::Member.308" = type { %"class.blink::MemberBase.309" }
%"class.blink::MemberBase.309" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::XRCanvasInputProvider"* }
%"class.blink::XRCanvasInputProvider" = type opaque
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.324" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.314", %"class.blink::Member.314" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.314", %"class.blink::Member.316", %"class.blink::Member.314", %"class.blink::Member.314", %"class.blink::Member.318" }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.316", %"class.blink::Member.514", %"class.blink::Member.514", %"class.blink::Member.536", %"class.blink::Member.538", %"class.blink::Member.540", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.545", %"class.blink::HeapVector.547" }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.556", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.564", %"class.WTF::Vector.564", i8, i32, %"class.blink::Member.569", %"class.blink::Member.398", %"class.blink::Member.571", %"class.blink::Member.573", %"class.blink::Member.575", %"class.blink::Member.577", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.585", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.591", %"class.blink::Member.593", %"class.blink::Member.553", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.596", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.529", %"class.blink::Member.312", %"class.blink::Member.798", %"class.blink::Member.312", %"class.blink::Member.312", %"class.blink::Member.312", %"class.blink::UserActionElementSet", %"class.blink::Member.807", double, double, i64, i64, %"class.blink::HeapHashSet.809", %"class.blink::HeapHashSet.816", i16, i8, %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.827", %"class.blink::Member.829", %"class.blink::TextLinkColors", %"class.blink::Member.831", i8, [7 x i8], %"class.blink::HeapHashMap.833", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.312", %"class.WTF::Vector.840", %"class.blink::Member.845", %"class.blink::Member.847", i8, %"class.blink::Member.312", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.849", %"class.blink::HeapVector.851", %"class.std::__1::unique_ptr.859", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.865", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.878", %"class.WTF::Vector.880", i8, i8, %"class.std::__1::unique_ptr.885", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.529", %"class.blink::HeapVector.891", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.899", i8, i32, %"class.blink::Member.901", %"class.blink::Member.903", %"class.blink::Member.905", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.907", %"class.WTF::HashMap.909", %"class.blink::Member.914", %"class.blink::Member.916", %"class.blink::Member.918", %"class.blink::Member.920", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.922", i8, i32, %"class.blink::Member.929", %"class.blink::Member.931", i32, %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::Member.937", %"class.std::__1::unique_ptr.939", i64, %"class.std::__1::unique_ptr.945", i32, i32, %"class.blink::Member.951", %"class.blink::Member.953", %"class.blink::Member.955", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.957", %"class.WTF::Vector.959", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.964", %"class.blink::Member.971", %"class.std::__1::unique_ptr.973", %"class.blink::Member.979", i8, i8, %"class.WTF::String", %"class.blink::Member.981", i8, [7 x i8], %"class.blink::HeapHashMap.983", %"class.blink::HeapObserverSet.990", %"class.blink::Member.998", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1000", i32, i8, i8, %"class.blink::WeakMember.1002", %"class.blink::Member.1003" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.556" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566" }
%"class.WTF::VectorBufferBase.566" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.479", i32, i8, [3 x i8], %"class.blink::HeapVector.481", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.489", %"class.blink::Member.491", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.500", %"class.blink::Member.506", %"class.blink::Member.508", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.441" }
%"class.blink::HeapHashMap.441" = type { %"class.WTF::HashMap.444" }
%"class.WTF::HashMap.444" = type { %"class.WTF::HashTable.445" }
%"class.WTF::HashTable.445" = type <{ %"struct.WTF::KeyValuePair.447"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.447" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.454" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.448" }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.454" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.455" }
%"class.blink::HeapHashMap.455" = type { %"class.WTF::HashMap.458" }
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.461"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.461" = type { i8*, %"class.blink::Member.1052" }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1054" }
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.462, %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.469", %"class.blink::Member.398", i32, [4 x i8], %"class.WTF::HashSet.475", i32, i32 }
%class.scoped_refptr.462 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.475" = type { %"class.WTF::HashTable.476" }
%"class.WTF::HashTable.476" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.481" = type { %"class.WTF::Vector.484" }
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { %"class.blink::Member.487"*, i32, i32 }
%"class.blink::Member.487" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.493", i32, i32 }
%"class.blink::HeapHashMap.493" = type { %"class.WTF::HashMap.496" }
%"class.WTF::HashMap.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ %"struct.WTF::KeyValuePair.499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.499" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.579" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::KURL"* }
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.595 }
%class.scoped_refptr.595 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.599 }
%class.scoped_refptr.599 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.600", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.600" = type { %"class.base::RefCounted.601" }
%"class.base::RefCounted.601" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.604" }
%"class.blink::HeapHashMap.604" = type { %"class.WTF::HashMap.607" }
%"class.WTF::HashMap.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"struct.WTF::KeyValuePair.610"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.610" = type { %"class.blink::WeakMember.611", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.800" }
%"class.blink::HeapHashMap.800" = type { %"class.WTF::HashMap.803" }
%"class.WTF::HashMap.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"struct.WTF::KeyValuePair.806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.806" = type opaque
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.809" = type { %"class.WTF::HashSet.812" }
%"class.WTF::HashSet.812" = type { %"class.WTF::HashTable.813" }
%"class.WTF::HashTable.813" = type <{ %"class.blink::WeakMember.815"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.815" = type opaque
%"class.blink::HeapHashSet.816" = type { %"class.WTF::HashSet.819" }
%"class.WTF::HashSet.819" = type { %"class.WTF::HashTable.820" }
%"class.WTF::HashTable.820" = type <{ %"class.blink::WeakMember.822"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.822" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.833" = type { %"class.WTF::HashMap.836" }
%"class.WTF::HashMap.836" = type { %"class.WTF::HashTable.837" }
%"class.WTF::HashTable.837" = type <{ %"struct.WTF::KeyValuePair.839"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.839" = type opaque
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.851" = type { %"class.WTF::Vector.854" }
%"class.WTF::Vector.854" = type { %"class.WTF::VectorBuffer.855" }
%"class.WTF::VectorBuffer.855" = type { %"class.WTF::VectorBufferBase.856" }
%"class.WTF::VectorBufferBase.856" = type { %"class.blink::Member.857"*, i32, i32 }
%"class.blink::Member.857" = type opaque
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.865" = type { %"class.WTF::HashSet.868" }
%"class.WTF::HashSet.868" = type { %"class.WTF::HashTable.869" }
%"class.WTF::HashTable.869" = type <{ %"class.blink::WeakMember.871"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.871" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.872", i32, [4 x i8] }>
%"class.WTF::Vector.872" = type { %"class.WTF::VectorBuffer.873" }
%"class.WTF::VectorBuffer.873" = type { %"class.WTF::VectorBufferBase.874" }
%"class.WTF::VectorBufferBase.874" = type { %"struct.std::__1::pair.875"*, i32, i32 }
%"struct.std::__1::pair.875" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.880" = type { %"class.WTF::VectorBuffer.881" }
%"class.WTF::VectorBuffer.881" = type { %"class.WTF::VectorBufferBase.882" }
%"class.WTF::VectorBufferBase.882" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.529" = type { %"class.WTF::Vector.532" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534" }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::Member.312"*, i32, i32 }
%"class.blink::HeapVector.891" = type { %"class.WTF::Vector.894" }
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896" }
%"class.WTF::VectorBufferBase.896" = type { %"class.blink::Member.897"*, i32, i32 }
%"class.blink::Member.897" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.512" }
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.909" = type { %"class.WTF::HashTable.910" }
%"class.WTF::HashTable.910" = type <{ %"struct.WTF::KeyValuePair.913"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.913" = type opaque
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.797", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.795, %"class.base::WeakPtrFactory.796" }
%class.scoped_refptr.795 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.796" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.797" = type { %"class.blink::MemberBase.513" }
%"class.blink::HeapHashSet.922" = type { %"class.WTF::HashSet.925" }
%"class.WTF::HashSet.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"class.blink::Member.928"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.928" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.964" = type { %"class.WTF::HashMap.967" }
%"class.WTF::HashMap.967" = type { %"class.WTF::HashTable.968" }
%"class.WTF::HashTable.968" = type <{ %"struct.WTF::KeyValuePair.970"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.970" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.983" = type { %"class.WTF::HashMap.986" }
%"class.WTF::HashMap.986" = type { %"class.WTF::HashTable.987" }
%"class.WTF::HashTable.987" = type <{ %"struct.WTF::KeyValuePair.989"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.989" = type opaque
%"class.blink::HeapObserverSet.990" = type { i32, [4 x i8], %"class.blink::HeapHashSet.991" }
%"class.blink::HeapHashSet.991" = type { %"class.WTF::HashSet.994" }
%"class.WTF::HashSet.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"class.blink::WeakMember.997"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.997" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.512", %"class.blink::HeapHashSet.1007", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1014", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1007" = type { %"class.WTF::HashSet.1010" }
%"class.WTF::HashSet.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"class.blink::Member.1013"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1013" = type opaque
%"class.blink::HeapTaskRunnerTimer.1014" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1015", { i64, i64 } }
%"class.blink::WeakMember.1015" = type { %"class.blink::MemberBase.1001" }
%"class.blink::WeakMember.1002" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::Node"* }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.518" }
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type { %"class.WTF::AtomicString", %"class.blink::Member.525" }
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.312", i32, %"class.blink::HeapVector.529" }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.542" }
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::HeapHashMap.544"* }
%"class.blink::HeapHashMap.544" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.547" = type { %"class.WTF::Vector.550" }
%"class.WTF::Vector.550" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552" }
%"class.WTF::VectorBufferBase.552" = type { %"class.blink::Member.553"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.323" }
%"class.base::RefCounted.323" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.328", %"class.blink::Member.330", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.328" = type { %"class.WTF::SingleThreadedBitField.329" }
%"class.WTF::SingleThreadedBitField.329" = type { i32 }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.332 }
%class.scoped_refptr.332 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.333", %"class.WTF::AtomicString", %"class.WTF::Vector.335" }
%"class.WTF::RefCounted.333" = type { %"class.base::RefCounted.334" }
%"class.base::RefCounted.334" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337", [32 x i8] }
%"class.WTF::VectorBufferBase.337" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::XRDOMOverlayState"* }
%"class.blink::XRDOMOverlayState" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.241" }
%"class.WTF::HashSet.241" = type { %"class.WTF::HashTable.242" }
%"class.WTF::HashTable.242" = type <{ %"class.blink::Member.31"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.342" = type { %"class.WTF::Vector.345" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::Member.348"*, i32, i32 }
%"class.blink::Member.348" = type opaque
%"class.mojo::StructPtr.350" = type { %"class.std::__1::unique_ptr.351" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.device::mojom::blink::VRStageParameters"* }
%"class.device::mojom::blink::VRStageParameters" = type { %"class.gfx::Transform", %"class.absl::optional.354" }
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.WTF::Vector.359" }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.361" }
%"class.WTF::VectorBufferBase.361" = type { %"class.gfx::Point3F"*, i32, i32 }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.367" }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.369" }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.base::OnceCallback.374"*, i32, i32 }
%"class.base::OnceCallback.374" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::XRFrameRequestCallbackCollection"* }
%"class.blink::XRFrameRequestCallbackCollection" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.381", %"class.WTF::HashMap.388", %"class.WTF::Vector.393", %"class.blink::HeapHashMap.381", %"class.WTF::HashMap.388", i32, %"class.blink::Member.398" }
%"class.WTF::Vector.393" = type { %"class.WTF::VectorBuffer.394" }
%"class.WTF::VectorBuffer.394" = type { %"class.WTF::VectorBufferBase.395" }
%"class.WTF::VectorBufferBase.395" = type { i32*, i32, i32 }
%"class.blink::HeapHashMap.381" = type { %"class.WTF::HashMap.384" }
%"class.WTF::HashMap.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"struct.WTF::KeyValuePair.387"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.387" = type opaque
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.392"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.392" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::XRSessionViewportScaler"* }
%"class.blink::XRSessionViewportScaler" = type opaque
%"class.device::mojom::blink::XRPlaneDetectionData" = type { %"class.WTF::Vector.1022", %"class.WTF::Vector.1027" }
%"class.WTF::Vector.1022" = type { %"class.WTF::VectorBuffer.1023" }
%"class.WTF::VectorBuffer.1023" = type { %"class.WTF::VectorBufferBase.1024" }
%"class.WTF::VectorBufferBase.1024" = type { i64*, i32, i32 }
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.mojo::StructPtr.1030"*, i32, i32 }
%"class.mojo::StructPtr.1030" = type { %"class.std::__1::unique_ptr.1031" }
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.device::mojom::blink::XRPlaneData"* }
%"class.device::mojom::blink::XRPlaneData" = type { i64, i32, [4 x i8], %"class.absl::optional.434", %"class.WTF::Vector.1034" }
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { %"class.mojo::InlinedStructPtr.1037"*, i32, i32 }
%"class.mojo::InlinedStructPtr.1037" = type { %"class.device::mojom::blink::XRPlanePointData", i32 }
%"class.device::mojom::blink::XRPlanePointData" = type { float, float }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1056", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1056" = type { %"class.std::__1::__vector_base.1057" }
%"class.std::__1::__vector_base.1057" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1058", i64, i64 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.blink::XRPlaneSet" = type { %"class.blink::ScriptWrappable", %"class.blink::XRSetlike", %"class.blink::HeapHashSet.1045" }
%"class.blink::XRSetlike" = type { %"class.blink::SetlikeIterable" }
%"class.blink::SetlikeIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapHashSet.1045" = type { %"class.WTF::HashSet.1048" }
%"class.WTF::HashSet.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"class.blink::Member.419"*, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.1102" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZNK3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERmRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERmPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKmRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_10XRPlaneSetEE4CallIJRNS_11HeapHashSetINS_6MemberINS_7XRPlaneEEEN3WTF10MemberHashIS6_EENS8_10HashTraitsIS7_EEEEEEEPS1_DpOT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@__FUNCTION__._ZN5blink14XRPlaneManager23ProcessPlaneInformationEPKN6device5mojom5blink20XRPlaneDetectionDataEd = private unnamed_addr constant [24 x i8] c"ProcessPlaneInformation\00", align 1
@.str = private unnamed_addr constant [17 x i8] c"Plane statistics\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"All planes\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"Updated planes\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.7 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableImNS_12KeyValuePairImNS1_6MemberINS1_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [394 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<unsigned long, WTF::KeyValuePair<unsigned long, blink::Member<blink::XRPlane> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<unsigned long>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned long>, WTF::HashTraits<blink::Member<blink::XRPlane> > >, WTF::HashTraits<unsigned long>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7XRPlaneEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [331 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::XRPlane>, blink::Member<blink::XRPlane>, WTF::IdentityExtractor, WTF::MemberHash<blink::XRPlane>, WTF::HashTraits<blink::Member<blink::XRPlane> >, WTF::HashTraits<blink::Member<blink::XRPlane> >, blink::HeapAllocator> >]\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1

@_ZN5blink14XRPlaneManagerC1EN4base7PassKeyINS_9XRSessionEEEPS3_ = hidden unnamed_addr alias void (%"class.blink::XRPlaneManager"*, %"class.blink::XRSession"*), void (%"class.blink::XRPlaneManager"*, %"class.blink::XRSession"*)* @_ZN5blink14XRPlaneManagerC2EN4base7PassKeyINS_9XRSessionEEEPS3_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XRPlaneManagerC2EN4base7PassKeyINS_9XRSessionEEEPS3_(%"class.blink::XRPlaneManager"* nocapture, %"class.blink::XRSession"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::XRSession"* %1, %"class.blink::XRSession"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::HeapHashMap.412"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XRPlaneManager23ProcessPlaneInformationEPKN6device5mojom5blink20XRPlaneDetectionDataEd(%"class.blink::XRPlaneManager"*, %"class.device::mojom::blink::XRPlaneDetectionData"* readonly, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::HeapHashMap.412", align 8
  %8 = alloca %"class.blink::XRPlane"*, align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 143, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %3
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %14 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 143, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__._ZN5blink14XRPlaneManager23ProcessPlaneInformationEPKN6device5mojom5blink20XRPlaneDetectionDataEd, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 143, i32 0), %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__._ZN5blink14XRPlaneManager23ProcessPlaneInformationEPKN6device5mojom5blink20XRPlaneDetectionDataEd, i64 0, i64 0), %12 ]
  %21 = phi i64 [ -6148914691236517206, %3 ], [ %17, %12 ]
  %22 = icmp eq %"class.device::mojom::blink::XRPlaneDetectionData"* %1, null
  br i1 %22, label %23, label %34

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 1
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0
  %26 = getelementptr inbounds %"class.WTF::HashMap.415", %"class.WTF::HashMap.415"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %26, align 8
  %28 = icmp eq %"struct.WTF::KeyValuePair.418"* %27, null
  br i1 %28, label %162, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.WTF::KeyValuePair.418"* %27 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %31) #6
  %32 = bitcast %"class.WTF::HashMap.415"* %25 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store i32 0, i32* %30, align 8
  %33 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  store i32 0, i32* %33, align 4
  br label %162

34:                                               ; preds = %18
  %35 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 143, i32 0), align 16
  %36 = and i8 %35, 25
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38, !prof !2

38:                                               ; preds = %34
  %39 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneDetectionData", %"class.device::mojom::blink::XRPlaneDetectionData"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %5, align 4
  %42 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #6
  %43 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneDetectionData", %"class.device::mojom::blink::XRPlaneDetectionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %6, align 4
  %45 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 67, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 143, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32* nonnull dereferenceable(4) %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #6
  br label %46

46:                                               ; preds = %34, %38
  %47 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 1
  store i8 0, i8* %47, align 8
  %48 = bitcast %"class.blink::HeapHashMap.412"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #6
  %49 = getelementptr inbounds %"class.blink::HeapHashMap.412", %"class.blink::HeapHashMap.412"* %7, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::HeapHashMap.412", %"class.blink::HeapHashMap.412"* %7, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.blink::HeapHashMap.412", %"class.blink::HeapHashMap.412"* %7, i64 0, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.blink::HeapHashMap.412", %"class.blink::HeapHashMap.412"* %7, i64 0, i32 0, i32 0, i32 3
  %53 = bitcast %"class.blink::HeapHashMap.412"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 20, i1 false) #6
  %54 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneDetectionData", %"class.device::mojom::blink::XRPlaneDetectionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.mojo::StructPtr.1030"*, %"class.mojo::StructPtr.1030"** %54, align 8
  %56 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneDetectionData", %"class.device::mojom::blink::XRPlaneDetectionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.mojo::StructPtr.1030", %"class.mojo::StructPtr.1030"* %55, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %70, label %61

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0
  %63 = getelementptr inbounds %"class.WTF::HashMap.415", %"class.WTF::HashMap.415"* %62, i64 0, i32 0
  %64 = getelementptr inbounds %"class.WTF::HashMap.415", %"class.WTF::HashMap.415"* %62, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.blink::HeapHashMap.412", %"class.blink::HeapHashMap.412"* %7, i64 0, i32 0, i32 0
  %67 = bitcast %"class.blink::XRPlane"** %8 to i8*
  %68 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::XRPlane"** %8 to i8**
  br label %81

70:                                               ; preds = %111, %46
  %71 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneDetectionData", %"class.device::mojom::blink::XRPlaneDetectionData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneDetectionData", %"class.device::mojom::blink::XRPlaneDetectionData"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i64, i64* %72, i64 %75
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %114, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::HeapHashMap.412", %"class.blink::HeapHashMap.412"* %7, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0
  br label %145

81:                                               ; preds = %61, %111
  %82 = phi %"class.mojo::StructPtr.1030"* [ %55, %61 ], [ %112, %111 ]
  %83 = getelementptr inbounds %"class.mojo::StructPtr.1030", %"class.mojo::StructPtr.1030"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.device::mojom::blink::XRPlaneData"*, %"class.device::mojom::blink::XRPlaneData"** %83, align 8
  %85 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneData", %"class.device::mojom::blink::XRPlaneData"* %84, i64 0, i32 0
  %86 = call { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.416"* %63, i64* dereferenceable(8) %85) #6
  %87 = extractvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %86, 0
  %88 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %64, align 8
  %89 = load i32, i32* %65, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %88, i64 %90
  %92 = icmp eq %"struct.WTF::KeyValuePair.418"* %87, %91
  %93 = load %"class.device::mojom::blink::XRPlaneData"*, %"class.device::mojom::blink::XRPlaneData"** %83, align 8
  %94 = getelementptr inbounds %"class.device::mojom::blink::XRPlaneData", %"class.device::mojom::blink::XRPlaneData"* %93, i64 0, i32 0
  br i1 %92, label %101, label %95

95:                                               ; preds = %81
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 1
  %97 = call { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERmRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.416"* nonnull %66, i64* dereferenceable(8) %94, %"class.blink::Member.419"* dereferenceable(8) %96) #6
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.blink::XRPlane"*, %"class.blink::XRPlane"** %98, align 8
  %100 = load %"class.device::mojom::blink::XRPlaneData"*, %"class.device::mojom::blink::XRPlaneData"** %83, align 8
  call void @_ZN5blink7XRPlane6UpdateERKN6device5mojom5blink11XRPlaneDataEd(%"class.blink::XRPlane"* %99, %"class.device::mojom::blink::XRPlaneData"* dereferenceable(160) %100, double %2) #6
  br label %111

101:                                              ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #6
  %102 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #6
  %103 = bitcast i8* %102 to %"class.blink::XRPlane"*
  %104 = load i64, i64* %94, align 8
  %105 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %68, align 8
  call void @_ZN5blink7XRPlaneC1EmPNS_9XRSessionERKN6device5mojom5blink11XRPlaneDataEd(%"class.blink::XRPlane"* %103, i64 %104, %"class.blink::XRSession"* %105, %"class.device::mojom::blink::XRPlaneData"* dereferenceable(160) %93, double %2) #6
  %106 = getelementptr inbounds i8, i8* %102, i64 -4
  %107 = bitcast i8* %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = or i16 %108, 1
  store atomic i16 %109, i16* %107 release, align 2
  store i8* %102, i8** %69, align 8
  %110 = call { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERmPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.416"* nonnull %66, i64* dereferenceable(8) %94, %"class.blink::XRPlane"** nonnull dereferenceable(8) %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #6
  br label %111

111:                                              ; preds = %101, %95
  %112 = getelementptr inbounds %"class.mojo::StructPtr.1030", %"class.mojo::StructPtr.1030"* %82, i64 1
  %113 = icmp eq %"class.mojo::StructPtr.1030"* %112, %59
  br i1 %113, label %70, label %81

114:                                              ; preds = %159, %70
  %115 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0
  %116 = bitcast %"class.blink::HeapHashMap.412"* %7 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.WTF::HashMap.415"* %115 to i64*
  %119 = load i64, i64* %118, align 8
  store atomic i64 %119, i64* %116 monotonic, align 8
  store atomic i64 %117, i64* %118 monotonic, align 8
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %114
  %123 = inttoptr i64 %117 to i8*
  %124 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %123) #6
  br label %125

125:                                              ; preds = %122, %114
  %126 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.blink::HeapHashMap.412"* %7 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %130) #6
  br label %132

132:                                              ; preds = %125, %128
  %133 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = load i32, i32* %50, align 8
  store i32 %135, i32* %133, align 4
  store i32 %134, i32* %50, align 8
  %136 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %51, align 4
  store i32 %138, i32* %136, align 4
  store i32 %137, i32* %51, align 4
  %139 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = load i32, i32* %52, align 8
  %142 = and i32 %141, 2147483647
  %143 = and i32 %140, -2147483648
  %144 = or i32 %142, %143
  store i32 %144, i32* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #6
  br label %162

145:                                              ; preds = %78, %159
  %146 = phi i64* [ %72, %78 ], [ %160, %159 ]
  %147 = call { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZNK3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.416"* nonnull %79, i64* dereferenceable(8) %146) #6
  %148 = extractvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %147, 0
  %149 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %49, align 8
  %150 = load i32, i32* %50, align 8
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %149, i64 %151
  %153 = icmp eq %"struct.WTF::KeyValuePair.418"* %148, %152
  br i1 %153, label %154, label %159

154:                                              ; preds = %145
  %155 = call { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.416"* %80, i64* dereferenceable(8) %146) #6
  %156 = extractvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %155, 0
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %156, i64 0, i32 1
  %158 = call { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKmRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.416"* nonnull %79, i64* dereferenceable(8) %146, %"class.blink::Member.419"* dereferenceable(8) %157) #6
  br label %159

159:                                              ; preds = %145, %154
  %160 = getelementptr inbounds i64, i64* %146, i64 1
  %161 = icmp eq i64* %160, %76
  br i1 %161, label %114, label %145

162:                                              ; preds = %29, %23, %132
  %163 = icmp eq i8* %19, null
  br i1 %163, label %168, label %164

164:                                              ; preds = %162
  %165 = load i8, i8* %19, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %168, label %167

167:                                              ; preds = %164
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %20, i64 %21) #6
  br label %168

168:                                              ; preds = %162, %164, %167
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #2 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #6
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504638, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #6
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #6
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #6
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #6
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #6
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #7
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  ret i64 %28
}

declare void @_ZN5blink7XRPlane6UpdateERKN6device5mojom5blink11XRPlaneDataEd(%"class.blink::XRPlane"*, %"class.device::mojom::blink::XRPlaneData"* dereferenceable(160), double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRPlaneSet"* @_ZNK5blink14XRPlaneManager17GetDetectedPlanesEv(%"class.blink::XRPlaneManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapHashSet.1045", align 8
  %3 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %53

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::HeapHashSet.1045"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #6
  %8 = bitcast %"class.blink::HeapHashSet.1045"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #6
  %9 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %13, i64 %16
  br i1 %11, label %34, label %18

18:                                               ; preds = %6
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %18, %26
  %21 = phi %"struct.WTF::KeyValuePair.418"* [ %27, %26 ], [ %13, %18 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %21, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %21, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair.418"* %27, %17
  br i1 %28, label %34, label %20

29:                                               ; preds = %20, %18
  %30 = phi %"struct.WTF::KeyValuePair.418"* [ %13, %18 ], [ %21, %20 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair.418"* %30, %17
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::HeapHashSet.1045", %"class.blink::HeapHashSet.1045"* %2, i64 0, i32 0, i32 0
  br label %36

34:                                               ; preds = %26, %36, %51, %48, %6, %29
  %35 = call %"class.blink::XRPlaneSet"* @_ZN5blink25MakeGarbageCollectedTraitINS_10XRPlaneSetEE4CallIJRNS_11HeapHashSetINS_6MemberINS_7XRPlaneEEEN3WTF10MemberHashIS6_EENS8_10HashTraitsIS7_EEEEEEEPS1_DpOT_(%"class.blink::HeapHashSet.1045"* nonnull dereferenceable(24) %2) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #6
  br label %53

36:                                               ; preds = %32, %51
  %37 = phi %"struct.WTF::KeyValuePair.418"* [ %30, %32 ], [ %43, %51 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %37, i64 0, i32 1
  %39 = call { %"class.blink::Member.419"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1049"* nonnull %33, %"class.blink::Member.419"* dereferenceable(8) %38, %"class.blink::Member.419"* dereferenceable(8) %38) #6
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %37, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair.418"* %40, %17
  br i1 %41, label %34, label %42

42:                                               ; preds = %36, %48
  %43 = phi %"struct.WTF::KeyValuePair.418"* [ %49, %48 ], [ %40, %36 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  %47 = icmp ult i64 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %43, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.418"* %49, %17
  br i1 %50, label %34, label %42

51:                                               ; preds = %42
  %52 = icmp eq %"struct.WTF::KeyValuePair.418"* %43, %17
  br i1 %52, label %34, label %36

53:                                               ; preds = %1, %34
  %54 = phi %"class.blink::XRPlaneSet"* [ %35, %34 ], [ null, %1 ]
  ret %"class.blink::XRPlaneSet"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14XRPlaneManager5TraceEPNS_7VisitorE(%"class.blink::XRPlaneManager"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::XRPlaneManager"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv) #6
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::XRPlaneManager", %"class.blink::XRPlaneManager"* %0, i64 0, i32 3
  %14 = bitcast %"class.blink::HeapHashMap.412"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = bitcast %"class.blink::HeapHashMap.412"* %13 to i8**
  %17 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %18 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %18, i64 11
  %20 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, align 8
  tail call void %20(%"class.blink::Visitor"* %1, i8** %16) #6
  %21 = icmp eq i64 %15, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %15 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #6
  br label %28

28:                                               ; preds = %12, %22
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZNK3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.416"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.418"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.418"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.418"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.418"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.418"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } undef, %"struct.WTF::KeyValuePair.418"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %77, %"struct.WTF::KeyValuePair.418"* %76, 1
  ret { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %78
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.416"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.418"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.418"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.418"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.418"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.418"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } undef, %"struct.WTF::KeyValuePair.418"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %77, %"struct.WTF::KeyValuePair.418"* %76, 1
  ret { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERmRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.416"*, i64* dereferenceable(8), %"class.blink::Member.419"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.418"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* null)
  %9 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.418"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.418"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.418"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %146, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.418"* %58, %"struct.WTF::KeyValuePair.418"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.418"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair.418"* %65 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 16) #6
  %78 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair.418"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 1
  %90 = bitcast %"class.blink::Member.419"* %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.419"* %89 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %85
  %96 = inttoptr i64 %91 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #6
  br label %98

98:                                               ; preds = %85, %95
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %98
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #6
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !4

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #6
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %92 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %98, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* %87)
  br label %146

146:                                              ; preds = %56, %134, %144
  %147 = phi i8 [ 1, %134 ], [ 1, %144 ], [ 0, %56 ]
  %148 = phi %"struct.WTF::KeyValuePair.418"* [ %87, %134 ], [ %145, %144 ], [ %58, %56 ]
  %149 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } undef, %"struct.WTF::KeyValuePair.418"* %148, 0
  %150 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } %149, i8 %147, 1
  ret { %"struct.WTF::KeyValuePair.418"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"*, %"struct.WTF::KeyValuePair.418"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #6
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %23, i8* %24) #6
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #6
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.416"* %0, i32 %35, %"struct.WTF::KeyValuePair.418"* %1, i8* nonnull dereferenceable(1) %4) #6
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #6
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.418"*
  %44 = call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* %43, i32 %40, %"struct.WTF::KeyValuePair.418"* %1) #6
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.418"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.418"* %46
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.416"*, i32, %"struct.WTF::KeyValuePair.418"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #6
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #6
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.418"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.418"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #6
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #6
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.418"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.418"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.416"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #6
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.418"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* %42, i32 %1, %"struct.WTF::KeyValuePair.418"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.418"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.418"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.418"* %64, %"struct.WTF::KeyValuePair.418"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %62, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.418"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %64, i64 0, i32 0
  store i64 %67, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.419"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.419"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.418"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.418"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.416"*, %"struct.WTF::KeyValuePair.418"*, i32, %"struct.WTF::KeyValuePair.418"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.416", align 8
  %6 = bitcast %"class.WTF::HashTable.416"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.416"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.418"* %1, %"struct.WTF::KeyValuePair.418"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.418"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.418"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.416"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.418"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.416"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #6
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.416"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.416"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #6
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #6
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair.418"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.418"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.418"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %59, i64 %62, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  %66 = icmp ult i64 %65, 2
  br i1 %66, label %82, label %67

67:                                               ; preds = %57
  %68 = call { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.416"* nonnull %5, i64* dereferenceable(8) %63) #6
  %69 = extractvalue { %"struct.WTF::KeyValuePair.418"*, i8 } %68, 0
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %69, i64 0, i32 0
  %71 = load i64, i64* %63, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.419"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.419"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.418"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.418"* %69, %"struct.WTF::KeyValuePair.418"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %67
  %83 = phi i32 [ %58, %57 ], [ %81, %67 ]
  %84 = phi %"struct.WTF::KeyValuePair.418"* [ %59, %57 ], [ %77, %67 ]
  %85 = phi %"struct.WTF::KeyValuePair.418"* [ %60, %57 ], [ %80, %67 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.7, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([394 x i8], [394 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableImNS_12KeyValuePairImNS1_6MemberINS1_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #6
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.418"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !4

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #6
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i64, i64* %61 monotonic, align 8
  %64 = add i64 %63, 1
  %65 = icmp ult i64 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.419"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  br label %90

76:                                               ; preds = %59
  %77 = load i64, i64* %61, align 8
  %78 = add i64 %77, 1
  %79 = icmp ult i64 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.419"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_7XRPlaneEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRPlane"*
  %4 = bitcast i8* %1 to void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)**, void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRPlane"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::XRPlane"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.416"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.418"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.418"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.418"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.418"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.418"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.418"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -1
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.418"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.418"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } undef, %"struct.WTF::KeyValuePair.418"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.418"*, i8 } %83
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink7XRPlaneC1EmPNS_9XRSessionERKN6device5mojom5blink11XRPlaneDataEd(%"class.blink::XRPlane"*, i64, %"class.blink::XRSession"*, %"class.device::mojom::blink::XRPlaneData"* dereferenceable(160), double) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #6
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERmPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.416"*, i64* dereferenceable(8), %"class.blink::XRPlane"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.418"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* null)
  %9 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.418"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.418"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.418"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %146, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.418"* %58, %"struct.WTF::KeyValuePair.418"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.418"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair.418"* %65 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 16) #6
  %78 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair.418"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 1
  %90 = load %"class.blink::XRPlane"*, %"class.blink::XRPlane"** %2, align 8
  %91 = ptrtoint %"class.blink::XRPlane"* %90 to i64
  %92 = bitcast %"class.blink::Member.419"* %89 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %85
  %96 = bitcast %"class.blink::XRPlane"* %90 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #6
  br label %98

98:                                               ; preds = %85, %95
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %98
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #6
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !4

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #6
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %92 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %98, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* %87)
  br label %146

146:                                              ; preds = %56, %134, %144
  %147 = phi i8 [ 1, %134 ], [ 1, %144 ], [ 0, %56 ]
  %148 = phi %"struct.WTF::KeyValuePair.418"* [ %87, %134 ], [ %145, %144 ], [ %58, %56 ]
  %149 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } undef, %"struct.WTF::KeyValuePair.418"* %148, 0
  %150 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } %149, i8 %147, 1
  ret { %"struct.WTF::KeyValuePair.418"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKmRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.416"*, i64* dereferenceable(8), %"class.blink::Member.419"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.418"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* null)
  %9 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.418"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.418"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.418"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %146, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.418"* %58, %"struct.WTF::KeyValuePair.418"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.418"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair.418"* %65 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 16) #6
  %78 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair.418"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %87, i64 0, i32 1
  %90 = bitcast %"class.blink::Member.419"* %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.419"* %89 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %85
  %96 = inttoptr i64 %91 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #6
  br label %98

98:                                               ; preds = %85, %95
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %98
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #6
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !4

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #6
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %92 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %98, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.418"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_7XRPlaneEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.416"* %0, %"struct.WTF::KeyValuePair.418"* %87)
  br label %146

146:                                              ; preds = %56, %134, %144
  %147 = phi i8 [ 1, %134 ], [ 1, %144 ], [ 0, %56 ]
  %148 = phi %"struct.WTF::KeyValuePair.418"* [ %87, %134 ], [ %145, %144 ], [ %58, %56 ]
  %149 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } undef, %"struct.WTF::KeyValuePair.418"* %148, 0
  %150 = insertvalue { %"struct.WTF::KeyValuePair.418"*, i8 } %149, i8 %147, 1
  ret { %"struct.WTF::KeyValuePair.418"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.419"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1049"*, %"class.blink::Member.419"* dereferenceable(8), %"class.blink::Member.419"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %4, align 8
  %6 = icmp eq %"class.blink::Member.419"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1049"* %0, %"class.blink::Member.419"* null)
  %9 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.419"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.419"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::XRPlane"*, %"class.blink::XRPlane"** %40, align 8
  %42 = icmp eq %"class.blink::XRPlane"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::XRPlane"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::XRPlane"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.419"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.419"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::XRPlane"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::XRPlane"* %59, inttoptr (i64 -1 to %"class.blink::XRPlane"*)
  %67 = select i1 %66, %"class.blink::Member.419"* %60, %"class.blink::Member.419"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::XRPlane"*, %"class.blink::XRPlane"** %73, align 8
  %75 = icmp eq %"class.blink::XRPlane"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.419"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.419"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #6
  %80 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.419"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::Member.419"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.419"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #6
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.419"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #6
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1049"* %0, %"class.blink::Member.419"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.419"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.419"*, i8 } undef, %"class.blink::Member.419"* %117, 0
  %119 = insertvalue { %"class.blink::Member.419"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.419"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1049"*, %"class.blink::Member.419"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #6
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %23, i8* %24) #6
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #6
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1049"* %0, i32 %35, %"class.blink::Member.419"* %1, i8* nonnull dereferenceable(1) %4) #6
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1102"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #6
  %43 = bitcast %"class.blink::HeapHashTableBacking.1102"* %42 to %"class.blink::Member.419"*
  %44 = call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1049"* %0, %"class.blink::Member.419"* %43, i32 %40, %"class.blink::Member.419"* %1) #6
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.419"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.419"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1049"*, i32, %"class.blink::Member.419"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #6
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #6
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %31, align 8
  %33 = icmp eq %"class.blink::Member.419"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.419"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #6
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1102"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #6
  %45 = bitcast %"class.blink::HeapHashTableBacking.1102"* %44 to %"class.blink::Member.419"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.419"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.419"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.419"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.419"* %61, %"class.blink::Member.419"* %55
  %63 = bitcast %"class.blink::Member.419"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.419"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.419"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.1049"* %0 to %"class.blink::HeapHashTableBacking.1102"**
  store %"class.blink::HeapHashTableBacking.1102"* %44, %"class.blink::HeapHashTableBacking.1102"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1102", %"class.blink::HeapHashTableBacking.1102"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #6
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.419"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1049"* %0, %"class.blink::Member.419"* %42, i32 %1, %"class.blink::Member.419"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.419"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.419"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.419"* %87, %"class.blink::Member.419"* %82
  %89 = bitcast %"class.blink::Member.419"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.419"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.419"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.419"* %99, %"class.blink::Member.419"* %88
  %101 = bitcast %"class.blink::Member.419"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.419"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.419"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.419"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1049"*, %"class.blink::Member.419"*, i32, %"class.blink::Member.419"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.419"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.419"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.419"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #6
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.1049"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.419"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #6
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.419"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.419"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #6
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.419"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.419"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.419"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.419"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.419"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::XRPlane"*, %"class.blink::XRPlane"** %70, align 8
  %72 = icmp eq %"class.blink::XRPlane"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::XRPlane"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.419"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.419"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.419"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.419"* %93, null
  %95 = ptrtoint %"class.blink::Member.419"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::XRPlane"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::XRPlane"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::XRPlane"* %99, inttoptr (i64 -1 to %"class.blink::XRPlane"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.419"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::XRPlane"*, %"class.blink::XRPlane"** %113, align 8
  %115 = icmp eq %"class.blink::XRPlane"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.419"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.419"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.419"* %118, %"class.blink::Member.419"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.419"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.419"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1102"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.7, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1102"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1102"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([331 x i8], [331 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7XRPlaneEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.419"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #6
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.419"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRPlaneEE5TraceEPNS_7VisitorEPKv) #6
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::XRPlaneSet"* @_ZN5blink25MakeGarbageCollectedTraitINS_10XRPlaneSetEE4CallIJRNS_11HeapHashSetINS_6MemberINS_7XRPlaneEEEN3WTF10MemberHashIS6_EENS8_10HashTraitsIS7_EEEEEEEPS1_DpOT_(%"class.blink::HeapHashSet.1045"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::HeapHashSet.1045", align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #6
  %4 = bitcast i8* %3 to %"class.blink::XRPlaneSet"*
  %5 = getelementptr inbounds %"class.blink::HeapHashSet.1045", %"class.blink::HeapHashSet.1045"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapHashSet.1045", %"class.blink::HeapHashSet.1045"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapHashSet.1045"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #6
  %8 = load i32, i32* %6, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %1
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1049"* nonnull %5, i32 %8) #6
  %11 = load i32, i32* %6, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::HeapHashSet.1045", %"class.blink::HeapHashSet.1045"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.419"*, %"class.blink::Member.419"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapHashSet.1045", %"class.blink::HeapHashSet.1045"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %14, i64 %17
  br i1 %12, label %45, label %19

19:                                               ; preds = %10
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"class.blink::Member.419"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"class.blink::Member.419"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %22, i64 1
  %27 = icmp eq %"class.blink::Member.419"* %26, %18
  br i1 %27, label %45, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"class.blink::Member.419"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"class.blink::Member.419"* %29, %18
  br i1 %30, label %45, label %31

31:                                               ; preds = %28, %43
  %32 = phi %"class.blink::Member.419"* [ %37, %43 ], [ %29, %28 ]
  %33 = call { %"class.blink::Member.419"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1049"* nonnull %5, %"class.blink::Member.419"* dereferenceable(8) %32, %"class.blink::Member.419"* dereferenceable(8) %32) #6
  %34 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %32, i64 1
  %35 = icmp eq %"class.blink::Member.419"* %34, %18
  br i1 %35, label %45, label %36

36:                                               ; preds = %31, %40
  %37 = phi %"class.blink::Member.419"* [ %41, %40 ], [ %34, %31 ]
  %38 = bitcast %"class.blink::Member.419"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %43 [
    i64 -1, label %40
    i64 0, label %40
  ]

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"class.blink::Member.419", %"class.blink::Member.419"* %37, i64 1
  %42 = icmp eq %"class.blink::Member.419"* %41, %18
  br i1 %42, label %45, label %36

43:                                               ; preds = %36
  %44 = icmp eq %"class.blink::Member.419"* %37, %18
  br i1 %44, label %45, label %31

45:                                               ; preds = %25, %31, %43, %40, %1, %10, %28
  call void @_ZN5blink10XRPlaneSetC1ENS_11HeapHashSetINS_6MemberINS_7XRPlaneEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEE(%"class.blink::XRPlaneSet"* %4, %"class.blink::HeapHashSet.1045"* nonnull %2) #6
  %46 = getelementptr inbounds i8, i8* %3, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::XRPlaneSet"* %4
}

declare void @_ZN5blink10XRPlaneSetC1ENS_11HeapHashSetINS_6MemberINS_7XRPlaneEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEE(%"class.blink::XRPlaneSet"*, %"class.blink::HeapHashSet.1045"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1049"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.1049", %"class.WTF::HashTable.1049"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0)) #6
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  store i8 -86, i8* %3, align 1
  %32 = call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1049"* %0, i32 %18, %"class.blink::Member.419"* null, i8* nonnull dereferenceable(1) %3) #6
  %33 = load i8, i8* %3, align 1, !range !3
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking.1102"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7XRPlaneEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #6
  %38 = bitcast %"class.blink::HeapHashTableBacking.1102"* %37 to %"class.blink::Member.419"*
  %39 = call %"class.blink::Member.419"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7XRPlaneEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1049"* %0, %"class.blink::Member.419"* %38, i32 %18, %"class.blink::Member.419"* null) #6
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRSession"*
  tail call void @_ZNK5blink9XRSession5TraceEPNS_7VisitorE(%"class.blink::XRSession"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink9XRSession5TraceEPNS_7VisitorE(%"class.blink::XRSession"*, %"class.blink::Visitor"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
