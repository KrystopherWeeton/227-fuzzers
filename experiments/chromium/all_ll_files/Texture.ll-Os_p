; ModuleID = '../../third_party/swiftshader/src/OpenGL/libGLESv2/Texture.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libGLESv2/Texture.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.egl::Image" = type { %"class.sw::Surface.base", [6 x i8], %"class.gl::Object.base", i32, i32, i32, i32, i8, %"class.egl::Texture"* }
%"class.sw::Surface.base" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8 }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"class.egl::Texture" = type { %"class.gl::NamedObject" }
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.es2::Texture" = type { %"class.egl::Texture", i32, i32, i32, i32, i32, float, i32, i32, i32, i8, i32, i32, float, float, i32, i32, i32, i32, %"class.sw::Resource"* }
%"class.es2::Texture2D" = type <{ %"class.es2::Texture", %"class.es2::ImageLevels", %"class.gl::Surface"*, %"class.es2::Renderbuffer"*, i32, [4 x i8] }>
%"class.es2::ImageLevels" = type { [14 x %"class.egl::Image"*] }
%"class.gl::Surface" = type { i32 (...)** }
%"class.es2::Renderbuffer" = type { %"class.gl::NamedObject", %"class.es2::RenderbufferInterface"* }
%"class.es2::RenderbufferInterface" = type { i32 (...)** }
%"class.es2::Texture2DRect" = type { %"class.es2::Texture2D.base", [4 x i8] }
%"class.es2::Texture2D.base" = type <{ %"class.es2::Texture", %"class.es2::ImageLevels", %"class.gl::Surface"*, %"class.es2::Renderbuffer"*, i32 }>
%"class.es2::TextureCubeMap" = type { %"class.es2::Texture", [6 x %"class.es2::ImageLevels"], [6 x %"class.es2::Renderbuffer"*], [6 x i32] }
%"class.es2::Texture3D" = type <{ %"class.es2::Texture", %"class.es2::ImageLevels", %"class.gl::Surface"*, %"class.es2::Renderbuffer"*, i32, [4 x i8] }>
%"class.es2::Texture2DArray" = type { %"class.es2::Texture3D.base", [4 x i8] }
%"class.es2::Texture3D.base" = type <{ %"class.es2::Texture", %"class.es2::ImageLevels", %"class.gl::Surface"*, %"class.es2::Renderbuffer"*, i32 }>
%"class.es2::TextureExternal" = type { %"class.es2::Texture2D.base", [4 x i8] }
%"struct.gl::PixelStorageModes" = type { i32, i32, i32, i32, i32, i32 }
%"struct.sw::SliceRectT" = type { %"struct.sw::RectT", i32 }
%"struct.sw::RectT" = type { i32, i32, i32, i32 }
%"struct.sw::SliceRectT.40" = type { %"struct.sw::RectT.41", i32 }
%"struct.sw::RectT.41" = type { float, float, float, float }
%"class.es2::Device" = type { %"class.sw::Renderer", %"class.sw::Context"*, %"struct.es2::Viewport", %"struct.sw::RectT", i8, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, i8, i32, i8, i32, [264 x [4 x float]], [259 x [4 x float]], [8 x %"class.egl::Image"*], %"class.egl::Image"*, %"class.egl::Image"*, [8 x i8] }
%"class.sw::Renderer" = type { %"class.sw::VertexProcessor.base", [15 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"class.sw::Context"*, %"class.sw::Clipper"*, %"class.sw::Blitter"*, %"struct.sw::Viewport", %"struct.sw::RectT", i32, [16 x %"struct.sw::Triangle"*], [16 x %"struct.sw::Primitive"*], [6 x %"struct.sw::Plane"], [6 x %"struct.sw::Plane"], i8, %"class.sw::AtomicInt", %"class.sw::AtomicInt", [16 x %"class.sw::Thread"*], [16 x %"class.sw::Event"*], [16 x %"class.sw::Event"*], %"class.sw::Event"*, [16 x %"struct.sw::Renderer::PrimitiveProgress"], [16 x %"struct.sw::Renderer::PixelProgress"], [16 x %"struct.sw::Renderer::Task"], [16 x %"struct.sw::DrawCall"*], [16 x %"struct.sw::DrawCall"*], %"class.sw::AtomicInt", %"class.sw::AtomicInt", [32 x %"struct.sw::Renderer::Task"], %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::MutexLock", [16 x %"struct.sw::VertexTask"*], %"class.sw::SwiftConfig"*, %"class.std::__1::list", %"class.sw::Resource"*, %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", %"struct.sw::PixelProcessor::State", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr" }
%"class.sw::VertexProcessor.base" = type <{ i32 (...)**, [8 x i8], [260 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::VertexProcessor::PointSprite", %"struct.sw::VertexProcessor::FixedFunction", [24 x %"struct.sw::VertexProcessor::UniformBufferInfo"], [64 x %"struct.sw::VertexProcessor::TransformFeedbackInfo"], %"class.sw::Context"*, %"class.sw::LRUCache"*, [12 x %"struct.sw::Matrix"], %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", [12 x %"struct.sw::Matrix"], i8, [12 x i8], i8, i8, i8, i8 }>
%"struct.sw::float4" = type { float, float, float, float }
%"struct.sw::int4" = type { i32, i32, i32, i32 }
%"struct.sw::VertexProcessor::PointSprite" = type { %"struct.sw::float4", float, float, float, float, float, [12 x i8] }
%"struct.sw::VertexProcessor::FixedFunction" = type { [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [8 x [4 x %"struct.sw::float4"]], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x float], %"struct.sw::float4", %"struct.sw::float4", float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::VertexProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"struct.sw::VertexProcessor::TransformFeedbackInfo" = type <{ %"class.sw::Resource"*, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.sw::LRUCache" = type opaque
%"struct.sw::Matrix" = type { [4 x [4 x float]] }
%"class.sw::PixelProcessor" = type { i32 (...)**, [8 x [4 x [4 x i16]]], [8 x i8], [264 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [24 x %"struct.sw::PixelProcessor::UniformBufferInfo"], %"class.sw::Context"*, %"class.sw::LRUCache.17"* }
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"struct.sw::PixelProcessor::Fog" = type { %"struct.sw::float4", %"struct.sw::float4", [3 x [4 x i16]], [8 x i8], [3 x %"struct.sw::float4"], %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::PixelProcessor::Factor" = type { [4 x [4 x i16]], [4 x i16], [4 x [4 x i16]], [8 x i8], [4 x %"struct.sw::float4"], [4 x [4 x i16]], [4 x %"struct.sw::float4"] }
%"struct.sw::PixelProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"class.sw::LRUCache.17" = type opaque
%"class.sw::SetupProcessor" = type { %"class.sw::Context"*, %"class.sw::LRUCache.18"* }
%"class.sw::LRUCache.18" = type opaque
%"class.sw::Clipper" = type opaque
%"class.sw::Blitter" = type { i32 (...)**, %"class.sw::LRUCache.19"*, %"class.sw::MutexLock" }
%"class.sw::LRUCache.19" = type opaque
%"struct.sw::Viewport" = type { float, float, float, float, float, float }
%"struct.sw::Triangle" = type opaque
%"struct.sw::Primitive" = type opaque
%"struct.sw::Plane" = type { float, float, float, float }
%"class.sw::Thread" = type <{ i64, i8, [7 x i8] }>
%"struct.sw::Renderer::PrimitiveProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::PixelProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::Task" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::DrawCall" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)*, { i64, i64 }, %"struct.sw::SetupProcessor::State", [32 x %"class.sw::Resource"*], %"class.sw::Resource"*, [8 x %"class.sw::Surface"*], %"class.sw::Surface"*, %"class.sw::Surface"*, [32 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [64 x %"class.sw::Resource"*], i32, i32, i32, i32, i32, i32, %"class.std::__1::list"*, %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"struct.sw::DrawData"* }
%"struct.sw::Vertex" = type { %union.anon.20, i32, i32, float, float, i32, [3 x i32] }
%union.anon.20 = type { [34 x %"struct.sw::float4"] }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [16 x [4 x %"struct.sw::Vertex"]], [16 x i32], i32, [12 x i8] }
%"struct.sw::Polygon" = type opaque
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, [32 x i8*], [32 x i32], [8 x i8], [32 x %"struct.sw::Texture"], i8*, [8 x i8], %union.anon.22, %"struct.sw::DrawData::PS", i32, [12 x i8], %"struct.sw::VertexProcessor::PointSprite", float, [2 x %"struct.sw::PixelProcessor::Stencil"], [8 x i8], %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [16 x i32], [8 x %"struct.sw::TextureStage::Uniforms"], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", float, float, float, float, [6 x %"struct.sw::Plane"], [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::Constants" = type opaque
%"struct.sw::Texture" = type { [14 x %"struct.sw::Mipmap"], float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x [4 x i16]], [4 x %"struct.sw::float4"], float, i32, i32, float, float, [12 x i8] }
%"struct.sw::Mipmap" = type { [6 x i8*], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [8 x i8], %"struct.sw::int4", %"struct.sw::int4" }
%union.anon.22 = type { %"struct.sw::DrawData::VS" }
%"struct.sw::DrawData::VS" = type { [260 x %"struct.sw::float4"], [24 x i8*], [64 x i8*], [64 x i32], [64 x i32], [64 x i32], [64 x i32], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::DrawData::PS" = type { [8 x [4 x [4 x i16]]], [264 x %"struct.sw::float4"], [24 x i8*], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::TextureStage::Uniforms" = type { [4 x [4 x i16]], [2 x [2 x %"struct.sw::float4"]], [2 x [2 x [4 x i16]]], [4 x i16], [4 x i16] }
%"class.sw::SwiftConfig" = type opaque
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"struct.sw::VertexProcessor::State" = type <{ %"struct.sw::VertexProcessor::States", i32, [4 x i8] }>
%"struct.sw::VertexProcessor::States" = type { i64, i48, [9 x i8], [3 x i8], [8 x %"struct.sw::VertexProcessor::States::TextureState"], [16 x %"struct.sw::Sampler::State"], [32 x %"struct.sw::VertexProcessor::States::Input"], [34 x %"struct.sw::VertexProcessor::States::Output"] }
%"struct.sw::VertexProcessor::States::TextureState" = type { i8, i8, [2 x i8] }
%"struct.sw::Sampler::State" = type { [6 x i8], [2 x i8] }
%"struct.sw::VertexProcessor::States::Input" = type { i16, [2 x i8] }
%"struct.sw::VertexProcessor::States::Output" = type { %union.anon.32, %union.anon.34 }
%union.anon.32 = type { i8 }
%union.anon.34 = type { i8 }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States", i32 }
%"struct.sw::SetupProcessor::States" = type { i32, %union.anon.23 }
%union.anon.23 = type { [32 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]] }
%"struct.sw::SetupProcessor::States::Gradient" = type { i8 }
%"struct.sw::PixelProcessor::State" = type { %"struct.sw::PixelProcessor::States", i32 }
%"struct.sw::PixelProcessor::States" = type { i32, i32, i32, i16, i32, [8 x i32], i16, [2 x i8], [16 x %"struct.sw::Sampler::State"], [8 x %"struct.sw::TextureStage::State"], %union.anon.38 }
%"struct.sw::TextureStage::State" = type { [6 x i8], [2 x i8] }
%union.anon.38 = type { [32 x %"struct.sw::PixelProcessor::States::Interpolant"] }
%"struct.sw::PixelProcessor::States::Interpolant" = type { i16 }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.sw::Context" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, [3 x i8], float, float, float, [8 x i8], [8 x %"class.sw::TextureStage"], [32 x %"class.sw::Sampler"], [32 x %"class.sw::Resource"*], [32 x %"struct.sw::Stream"], %"class.sw::Resource"*, i8, [3 x i8], float, float, i8, [16 x i8], [3 x i8], [8 x i32], i8, i8, [2 x i8], [8 x i32], [8 x i8], [4 x i8], [8 x %"class.sw::Surface"*], [8 x i32], %"class.sw::Surface"*, i32, [4 x i8], %"class.sw::Surface"*, i32, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, float, i32, i8, i8, [8 x i8], [2 x i8], [8 x %"struct.sw::Point"], i32, i32, i32, i32, i8, i8, i8, i8, i64, i8, i8, [2 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, i8, [2 x i8], float, [8 x i32], i8, [3 x i8], i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sw::TextureStage" = type { %"struct.sw::TextureStage::Uniforms", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.sw::Sampler"*, %"class.sw::TextureStage"*, [8 x i8] }
%"class.sw::Sampler" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.sw::Texture", float, [12 x i8] }>
%"struct.sw::Stream" = type <{ %"struct.sw::StreamResource", i32, i8, i8, [2 x i8] }>
%"struct.sw::StreamResource" = type { %"class.sw::Resource"*, i8*, i32 }
%"struct.sw::Point" = type { %union.anon.15 }
%union.anon.15 = type { [3 x float] }
%"struct.es2::Viewport" = type { i32, i32, i32, i32, float, float }
%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.3, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon.3 = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.5, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.12, [4 x i8] }>
%union.anon.5 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.10, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.7, i8 }>
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.10 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.12 = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"class.es2::Sampler" = type { %"class.gl::NamedObject", i32, i32, i32, i32, i32, float, float, i32, i32, float }
%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.es2::RenderbufferTexture2D" = type <{ %"class.es2::RenderbufferInterface", %"class.gl::BindingPointer", i32, [4 x i8] }>
%"class.gl::BindingPointer" = type { %"class.es2::Texture2D"* }
%"class.es2::RenderbufferTexture2DRect" = type { %"class.es2::RenderbufferInterface", %"class.gl::BindingPointer.42" }
%"class.gl::BindingPointer.42" = type { %"class.es2::Texture2DRect"* }
%"class.es2::RenderbufferTextureCubeMap" = type { %"class.es2::RenderbufferInterface", %"class.gl::BindingPointer.43", i32, i32 }
%"class.gl::BindingPointer.43" = type { %"class.es2::TextureCubeMap"* }
%"class.es2::RenderbufferTexture3D" = type <{ %"class.es2::RenderbufferInterface", %"class.gl::BindingPointer.44", i32, [4 x i8] }>
%"class.gl::BindingPointer.44" = type { %"class.es2::Texture3D"* }
%"class.egl::ClientBuffer" = type { i32, i32, i32, i8*, i64 }

$_ZN3egl7Texture7releaseEv = comdat any

$_ZN3es213Texture2DRectD0Ev = comdat any

@_ZZN3es211ImageLevels12getNullImageEvE9nullImage = internal global %"class.egl::Image"* null, align 8
@_ZTVN3es27TextureE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::Texture"*)* @_ZN3es27TextureD2Ev to i8*), i8* bitcast (void (%"class.es2::Texture"*)* @_ZN3es27TextureD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.es2::Texture"*, i32, i32)* @_ZNK3es27Texture8getDepthEji to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3es29Texture2DE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD2Ev to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD0Ev to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D15releaseTexImageEv to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D5sweepEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D11addProxyRefEPKNS_12RenderbufferE to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D12releaseProxyEPKNS_12RenderbufferE to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D9getTargetEv to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D8getWidthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D9getHeightEji to i8*), i8* bitcast (i32 (%"class.es2::Texture"*, i32, i32)* @_ZNK3es27Texture8getDepthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D9getFormatEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D11getTopLevelEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D16hasNonBaseLevelsEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D12requiresSyncEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D18isBaseLevelDefinedEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, %"class.es2::Sampler"*)* @_ZNK3es29Texture2D17isSamplerCompleteEPNS_7SamplerE to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D12isCompressedEji to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D7isDepthEji to i8*), i8* bitcast (%"class.es2::Renderbuffer"* (%"class.es2::Texture2D"*, i32, i32)* @_ZN3es29Texture2D15getRenderbufferEji to i8*), i8* bitcast (%"class.egl::Image"* (%"class.es2::Texture2D"*, i32, i32)* @_ZN3es29Texture2D15getRenderTargetEjj to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D8isSharedEjj to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D15generateMipmapsEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D12copySubImageEjiiiiiiiiPNS_12RenderbufferE to i8*)] }, align 8
@_ZTVN3es213Texture2DRectE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD2Ev to i8*), i8* bitcast (void (%"class.es2::Texture2DRect"*)* @_ZN3es213Texture2DRectD0Ev to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D15releaseTexImageEv to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D5sweepEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D11addProxyRefEPKNS_12RenderbufferE to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D12releaseProxyEPKNS_12RenderbufferE to i8*), i8* bitcast (i32 (%"class.es2::Texture2DRect"*)* @_ZNK3es213Texture2DRect9getTargetEv to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D8getWidthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D9getHeightEji to i8*), i8* bitcast (i32 (%"class.es2::Texture"*, i32, i32)* @_ZNK3es27Texture8getDepthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D9getFormatEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D11getTopLevelEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D16hasNonBaseLevelsEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D12requiresSyncEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D18isBaseLevelDefinedEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, %"class.es2::Sampler"*)* @_ZNK3es29Texture2D17isSamplerCompleteEPNS_7SamplerE to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D12isCompressedEji to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D7isDepthEji to i8*), i8* bitcast (%"class.es2::Renderbuffer"* (%"class.es2::Texture2DRect"*, i32, i32)* @_ZN3es213Texture2DRect15getRenderbufferEji to i8*), i8* bitcast (%"class.egl::Image"* (%"class.es2::Texture2D"*, i32, i32)* @_ZN3es29Texture2D15getRenderTargetEjj to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D8isSharedEjj to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D15generateMipmapsEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D12copySubImageEjiiiiiiiiPNS_12RenderbufferE to i8*)] }, align 8
@_ZTVN3es214TextureCubeMapE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*)* @_ZN3es214TextureCubeMapD2Ev to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*)* @_ZN3es214TextureCubeMapD0Ev to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*)* @_ZN3es214TextureCubeMap15releaseTexImageEv to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*)* @_ZN3es214TextureCubeMap5sweepEv to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*, %"class.es2::Renderbuffer"*)* @_ZN3es214TextureCubeMap11addProxyRefEPKNS_12RenderbufferE to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*, %"class.es2::Renderbuffer"*)* @_ZN3es214TextureCubeMap12releaseProxyEPKNS_12RenderbufferE to i8*), i8* bitcast (i32 (%"class.es2::TextureCubeMap"*)* @_ZNK3es214TextureCubeMap9getTargetEv to i8*), i8* bitcast (i32 (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZNK3es214TextureCubeMap8getWidthEji to i8*), i8* bitcast (i32 (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZNK3es214TextureCubeMap9getHeightEji to i8*), i8* bitcast (i32 (%"class.es2::Texture"*, i32, i32)* @_ZNK3es27Texture8getDepthEji to i8*), i8* bitcast (i32 (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZNK3es214TextureCubeMap9getFormatEji to i8*), i8* bitcast (i32 (%"class.es2::TextureCubeMap"*)* @_ZNK3es214TextureCubeMap11getTopLevelEv to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*)* @_ZNK3es214TextureCubeMap16hasNonBaseLevelsEv to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*)* @_ZNK3es214TextureCubeMap12requiresSyncEv to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*)* @_ZNK3es214TextureCubeMap18isBaseLevelDefinedEv to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*, %"class.es2::Sampler"*)* @_ZNK3es214TextureCubeMap17isSamplerCompleteEPNS_7SamplerE to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZNK3es214TextureCubeMap12isCompressedEji to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZNK3es214TextureCubeMap7isDepthEji to i8*), i8* bitcast (%"class.es2::Renderbuffer"* (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZN3es214TextureCubeMap15getRenderbufferEji to i8*), i8* bitcast (%"class.egl::Image"* (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZN3es214TextureCubeMap15getRenderTargetEjj to i8*), i8* bitcast (i1 (%"class.es2::TextureCubeMap"*, i32, i32)* @_ZNK3es214TextureCubeMap8isSharedEjj to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*)* @_ZN3es214TextureCubeMap15generateMipmapsEv to i8*), i8* bitcast (void (%"class.es2::TextureCubeMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*)* @_ZN3es214TextureCubeMap12copySubImageEjiiiiiiiiPNS_12RenderbufferE to i8*)] }, align 8
@_ZTVN3es29Texture3DE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3DD2Ev to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3DD0Ev to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3D15releaseTexImageEv to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3D5sweepEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture3D11addProxyRefEPKNS_12RenderbufferE to i8*), i8* bitcast (void (%"class.es2::Texture3D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture3D12releaseProxyEPKNS_12RenderbufferE to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D9getTargetEv to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D8getWidthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D9getHeightEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D8getDepthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D9getFormatEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D11getTopLevelEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D16hasNonBaseLevelsEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D12requiresSyncEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D18isBaseLevelDefinedEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, %"class.es2::Sampler"*)* @_ZNK3es29Texture3D17isSamplerCompleteEPNS_7SamplerE to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D12isCompressedEji to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D7isDepthEji to i8*), i8* bitcast (%"class.es2::Renderbuffer"* (%"class.es2::Texture3D"*, i32, i32)* @_ZN3es29Texture3D15getRenderbufferEji to i8*), i8* bitcast (%"class.egl::Image"* (%"class.es2::Texture3D"*, i32, i32)* @_ZN3es29Texture3D15getRenderTargetEjj to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D8isSharedEjj to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3D15generateMipmapsEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture3D12copySubImageEjiiiiiiiiPNS_12RenderbufferE to i8*)] }, align 8
@_ZTVN3es214Texture2DArrayE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3DD2Ev to i8*), i8* bitcast (void (%"class.es2::Texture2DArray"*)* @_ZN3es214Texture2DArrayD0Ev to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3D15releaseTexImageEv to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3D5sweepEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture3D11addProxyRefEPKNS_12RenderbufferE to i8*), i8* bitcast (void (%"class.es2::Texture3D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture3D12releaseProxyEPKNS_12RenderbufferE to i8*), i8* bitcast (i32 (%"class.es2::Texture2DArray"*)* @_ZNK3es214Texture2DArray9getTargetEv to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D8getWidthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D9getHeightEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D8getDepthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D9getFormatEji to i8*), i8* bitcast (i32 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D11getTopLevelEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D16hasNonBaseLevelsEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D12requiresSyncEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*)* @_ZNK3es29Texture3D18isBaseLevelDefinedEv to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, %"class.es2::Sampler"*)* @_ZNK3es29Texture3D17isSamplerCompleteEPNS_7SamplerE to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D12isCompressedEji to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D7isDepthEji to i8*), i8* bitcast (%"class.es2::Renderbuffer"* (%"class.es2::Texture3D"*, i32, i32)* @_ZN3es29Texture3D15getRenderbufferEji to i8*), i8* bitcast (%"class.egl::Image"* (%"class.es2::Texture3D"*, i32, i32)* @_ZN3es29Texture3D15getRenderTargetEjj to i8*), i8* bitcast (i1 (%"class.es2::Texture3D"*, i32, i32)* @_ZNK3es29Texture3D8isSharedEjj to i8*), i8* bitcast (void (%"class.es2::Texture2DArray"*)* @_ZN3es214Texture2DArray15generateMipmapsEv to i8*), i8* bitcast (void (%"class.es2::Texture3D"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture3D12copySubImageEjiiiiiiiiPNS_12RenderbufferE to i8*)] }, align 8
@_ZTVN3es215TextureExternalE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::Texture"*)* @_ZN3egl7Texture7releaseEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD2Ev to i8*), i8* bitcast (void (%"class.es2::TextureExternal"*)* @_ZN3es215TextureExternalD0Ev to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D15releaseTexImageEv to i8*), i8* bitcast (%"class.sw::Resource"* (%"class.es2::Texture"*)* @_ZNK3es27Texture11getResourceEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D5sweepEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D11addProxyRefEPKNS_12RenderbufferE to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D12releaseProxyEPKNS_12RenderbufferE to i8*), i8* bitcast (i32 (%"class.es2::TextureExternal"*)* @_ZNK3es215TextureExternal9getTargetEv to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D8getWidthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D9getHeightEji to i8*), i8* bitcast (i32 (%"class.es2::Texture"*, i32, i32)* @_ZNK3es27Texture8getDepthEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D9getFormatEji to i8*), i8* bitcast (i32 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D11getTopLevelEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D16hasNonBaseLevelsEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D12requiresSyncEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*)* @_ZNK3es29Texture2D18isBaseLevelDefinedEv to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, %"class.es2::Sampler"*)* @_ZNK3es29Texture2D17isSamplerCompleteEPNS_7SamplerE to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D12isCompressedEji to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D7isDepthEji to i8*), i8* bitcast (%"class.es2::Renderbuffer"* (%"class.es2::Texture2D"*, i32, i32)* @_ZN3es29Texture2D15getRenderbufferEji to i8*), i8* bitcast (%"class.egl::Image"* (%"class.es2::Texture2D"*, i32, i32)* @_ZN3es29Texture2D15getRenderTargetEjj to i8*), i8* bitcast (i1 (%"class.es2::Texture2D"*, i32, i32)* @_ZNK3es29Texture2D8isSharedEjj to i8*), i8* bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2D15generateMipmapsEv to i8*), i8* bitcast (void (%"class.es2::Texture2D"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*)* @_ZN3es29Texture2D12copySubImageEjiiiiiiiiPNS_12RenderbufferE to i8*)] }, align 8

@_ZN3es27TextureD1Ev = hidden unnamed_addr alias void (%"class.es2::Texture"*), void (%"class.es2::Texture"*)* @_ZN3es27TextureD2Ev
@_ZN3es29Texture2DC1Ej = hidden unnamed_addr alias void (%"class.es2::Texture2D"*, i32), void (%"class.es2::Texture2D"*, i32)* @_ZN3es29Texture2DC2Ej
@_ZN3es29Texture2DD1Ev = hidden unnamed_addr alias void (%"class.es2::Texture2D"*), void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD2Ev
@_ZN3es213Texture2DRectC1Ej = hidden unnamed_addr alias void (%"class.es2::Texture2DRect"*, i32), void (%"class.es2::Texture2DRect"*, i32)* @_ZN3es213Texture2DRectC2Ej
@_ZN3es214TextureCubeMapC1Ej = hidden unnamed_addr alias void (%"class.es2::TextureCubeMap"*, i32), void (%"class.es2::TextureCubeMap"*, i32)* @_ZN3es214TextureCubeMapC2Ej
@_ZN3es214TextureCubeMapD1Ev = hidden unnamed_addr alias void (%"class.es2::TextureCubeMap"*), void (%"class.es2::TextureCubeMap"*)* @_ZN3es214TextureCubeMapD2Ev
@_ZN3es29Texture3DC1Ej = hidden unnamed_addr alias void (%"class.es2::Texture3D"*, i32), void (%"class.es2::Texture3D"*, i32)* @_ZN3es29Texture3DC2Ej
@_ZN3es29Texture3DD1Ev = hidden unnamed_addr alias void (%"class.es2::Texture3D"*), void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3DD2Ev
@_ZN3es214Texture2DArrayC1Ej = hidden unnamed_addr alias void (%"class.es2::Texture2DArray"*, i32), void (%"class.es2::Texture2DArray"*, i32)* @_ZN3es214Texture2DArrayC2Ej
@_ZN3es214Texture2DArrayD2Ev = hidden unnamed_addr alias void (%"class.es2::Texture2DArray"*), bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3DD2Ev to void (%"class.es2::Texture2DArray"*)*)
@_ZN3es214Texture2DArrayD1Ev = hidden unnamed_addr alias void (%"class.es2::Texture2DArray"*), bitcast (void (%"class.es2::Texture3D"*)* @_ZN3es29Texture3DD2Ev to void (%"class.es2::Texture2DArray"*)*)
@_ZN3es215TextureExternalC1Ej = hidden unnamed_addr alias void (%"class.es2::TextureExternal"*, i32), void (%"class.es2::TextureExternal"*, i32)* @_ZN3es215TextureExternalC2Ej
@_ZN3es215TextureExternalD2Ev = hidden unnamed_addr alias void (%"class.es2::TextureExternal"*), bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD2Ev to void (%"class.es2::TextureExternal"*)*)
@_ZN3es215TextureExternalD1Ev = hidden unnamed_addr alias void (%"class.es2::TextureExternal"*), bitcast (void (%"class.es2::Texture2D"*)* @_ZN3es29Texture2DD2Ev to void (%"class.es2::TextureExternal"*)*)

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden nonnull dereferenceable(8) %"class.egl::Image"** @_ZN3es211ImageLevels12getNullImageEv() local_unnamed_addr #0 align 2 {
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  ret %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es27TextureC2Ej(%"class.es2::Texture"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"* %3, i32 %1) #14
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es27TextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 1
  %6 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 9986, i32 9729, i32 10497, i32 10497>, <4 x i32>* %6, align 8
  %7 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 5
  store i32 10497, i32* %7, align 8
  %8 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 6
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 7
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 8
  store i32 515, i32* %10, align 4
  %11 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 9
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 10
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 11
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 12
  store i32 1000, i32* %14, align 4
  %15 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 13
  store float 1.000000e+03, float* %15, align 8
  %16 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 14
  store float -1.000000e+03, float* %16, align 4
  %17 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 15
  store i32 6403, i32* %17, align 8
  %18 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 16
  store i32 6404, i32* %18, align 4
  %19 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 17
  store i32 6405, i32* %19, align 8
  %20 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 18
  store i32 6406, i32* %20, align 4
  %21 = tail call i8* @_Znwm(i64 168) #15
  %22 = bitcast i8* %21 to %"class.sw::Resource"*
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %22, i64 0) #14
  %23 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 19
  %24 = bitcast %"class.sw::Resource"** %23 to i8**
  store i8* %21, i8** %24, align 8
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"*, i64) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es27TextureD2Ev(%"class.es2::Texture"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es27TextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 19
  %4 = load %"class.sw::Resource"*, %"class.sw::Resource"** %3, align 8
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* %4) #14
  %5 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %5) #14
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN3es27TextureD0Ev(%"class.es2::Texture"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.sw::Resource"* @_ZNK3es27Texture11getResourceEv(%"class.es2::Texture"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 19
  %3 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  ret %"class.sw::Resource"* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es27Texture12setMinFilterEj(%"class.es2::Texture"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %18 [
    i32 9984, label %3
    i32 9985, label %3
    i32 9986, label %3
    i32 9987, label %3
    i32 9728, label %16
    i32 9729, label %16
  ]

3:                                                ; preds = %2, %2, %2, %2
  %4 = bitcast %"class.es2::Texture"* %0 to i32 (%"class.es2::Texture"*)***
  %5 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture"* %0) #14
  %9 = icmp eq i32 %8, 36197
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %12 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %11, i64 9
  %13 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %12, align 8
  %14 = tail call i32 %13(%"class.es2::Texture"* %0) #14
  %15 = icmp eq i32 %14, 34037
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %2, %2
  %17 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 1
  store i32 %1, i32* %17, align 8
  br label %18

18:                                               ; preds = %2, %3, %10, %16
  %19 = phi i1 [ true, %16 ], [ false, %10 ], [ false, %3 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture12setMagFilterEj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, -2
  %4 = icmp eq i32 %3, 9728
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 2
  store i32 %1, i32* %6, align 4
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es27Texture8setWrapSEj(%"class.es2::Texture"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %18 [
    i32 10497, label %3
    i32 33648, label %3
    i32 33071, label %16
  ]

3:                                                ; preds = %2, %2
  %4 = bitcast %"class.es2::Texture"* %0 to i32 (%"class.es2::Texture"*)***
  %5 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture"* %0) #14
  %9 = icmp eq i32 %8, 36197
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %12 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %11, i64 9
  %13 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %12, align 8
  %14 = tail call i32 %13(%"class.es2::Texture"* %0) #14
  %15 = icmp eq i32 %14, 34037
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %2
  %17 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 3
  store i32 %1, i32* %17, align 8
  br label %18

18:                                               ; preds = %2, %3, %10, %16
  %19 = phi i1 [ true, %16 ], [ false, %10 ], [ false, %3 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es27Texture8setWrapTEj(%"class.es2::Texture"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %18 [
    i32 10497, label %3
    i32 33648, label %3
    i32 33071, label %16
  ]

3:                                                ; preds = %2, %2
  %4 = bitcast %"class.es2::Texture"* %0 to i32 (%"class.es2::Texture"*)***
  %5 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture"* %0) #14
  %9 = icmp eq i32 %8, 36197
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %12 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %11, i64 9
  %13 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %12, align 8
  %14 = tail call i32 %13(%"class.es2::Texture"* %0) #14
  %15 = icmp eq i32 %14, 34037
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %2
  %17 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 4
  store i32 %1, i32* %17, align 4
  br label %18

18:                                               ; preds = %2, %3, %10, %16
  %19 = phi i1 [ true, %16 ], [ false, %10 ], [ false, %3 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es27Texture8setWrapREj(%"class.es2::Texture"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %18 [
    i32 10497, label %3
    i32 33648, label %3
    i32 33071, label %16
  ]

3:                                                ; preds = %2, %2
  %4 = bitcast %"class.es2::Texture"* %0 to i32 (%"class.es2::Texture"*)***
  %5 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture"* %0) #14
  %9 = icmp eq i32 %8, 36197
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %4, align 8
  %12 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %11, i64 9
  %13 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %12, align 8
  %14 = tail call i32 %13(%"class.es2::Texture"* %0) #14
  %15 = icmp eq i32 %14, 34037
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %2
  %17 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 5
  store i32 %1, i32* %17, align 8
  br label %18

18:                                               ; preds = %2, %3, %10, %16
  %19 = phi i1 [ true, %16 ], [ false, %10 ], [ false, %3 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es27Texture16setMaxAnisotropyEf(%"class.es2::Texture"* nocapture, float) local_unnamed_addr #7 align 2 {
  %3 = fcmp ogt float %1, 1.600000e+01
  %4 = select i1 %3, float 1.600000e+01, float %1
  %5 = fcmp olt float %4, 1.000000e+00
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 6
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %8, %4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store float %4, float* %7, align 4
  br label %11

11:                                               ; preds = %6, %10, %2
  %12 = phi i1 [ false, %2 ], [ true, %10 ], [ true, %6 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture12setBaseLevelEi(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 7
  store i32 %1, i32* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture14setCompareFuncEj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, -8
  %4 = icmp eq i32 %3, 512
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 8
  store i32 %1, i32* %6, align 4
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture14setCompareModeEj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %5 [
    i32 34894, label %3
    i32 0, label %3
  ]

3:                                                ; preds = %2, %2
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 9
  store i32 %1, i32* %4, align 8
  br label %5

5:                                                ; preds = %2, %3
  %6 = phi i1 [ true, %3 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3es27Texture13makeImmutableEi(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 10
  store i8 1, i8* %3, align 4
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 11
  store i32 %1, i32* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture11setMaxLevelEi(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 12
  store i32 %1, i32* %3, align 4
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture9setMaxLODEf(%"class.es2::Texture"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 13
  store float %1, float* %3, align 8
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture9setMinLODEf(%"class.es2::Texture"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 14
  store float %1, float* %3, align 4
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture11setSwizzleREj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %5 [
    i32 6403, label %3
    i32 6404, label %3
    i32 6405, label %3
    i32 6406, label %3
    i32 0, label %3
    i32 1, label %3
  ]

3:                                                ; preds = %2, %2, %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 15
  store i32 %1, i32* %4, align 8
  br label %5

5:                                                ; preds = %2, %3
  %6 = phi i1 [ true, %3 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture11setSwizzleGEj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %5 [
    i32 6403, label %3
    i32 6404, label %3
    i32 6405, label %3
    i32 6406, label %3
    i32 0, label %3
    i32 1, label %3
  ]

3:                                                ; preds = %2, %2, %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 16
  store i32 %1, i32* %4, align 4
  br label %5

5:                                                ; preds = %2, %3
  %6 = phi i1 [ true, %3 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture11setSwizzleBEj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %5 [
    i32 6403, label %3
    i32 6404, label %3
    i32 6405, label %3
    i32 6406, label %3
    i32 0, label %3
    i32 1, label %3
  ]

3:                                                ; preds = %2, %2, %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 17
  store i32 %1, i32* %4, align 8
  br label %5

5:                                                ; preds = %2, %3
  %6 = phi i1 [ true, %3 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden zeroext i1 @_ZN3es27Texture11setSwizzleAEj(%"class.es2::Texture"* nocapture, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %5 [
    i32 6403, label %3
    i32 6404, label %3
    i32 6405, label %3
    i32 6406, label %3
    i32 0, label %3
    i32 1, label %3
  ]

3:                                                ; preds = %2, %2, %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 18
  store i32 %1, i32* %4, align 4
  br label %5

5:                                                ; preds = %2, %3
  %6 = phi i1 [ true, %3 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es27Texture8getDepthEji(%"class.es2::Texture"* nocapture readnone, i32, i32) unnamed_addr #8 align 2 {
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es27Texture17createSharedImageEjj(%"class.es2::Texture"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture"* %0 to %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)***
  %5 = load %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)**, %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)*, %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)** %5, i64 22
  %7 = load %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)*, %"class.egl::Image"* (%"class.es2::Texture"*, i32, i32)** %6, align 8
  %8 = tail call %"class.egl::Image"* %7(%"class.es2::Texture"* %0, i32 %1, i32 %2) #14
  %9 = icmp eq %"class.egl::Image"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %8, i64 0, i32 7
  store i8 1, i8* %11, align 4
  br label %12

12:                                               ; preds = %3, %10
  ret %"class.egl::Image"* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #9

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es27Texture8setImageEjjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"*, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %7 = icmp ne i8* %4, null
  %8 = icmp ne %"class.egl::Image"* %5, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = bitcast %"class.es2::Texture"* %0 to i32 (%"class.es2::Texture"*)***
  %12 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %12, i64 9
  %14 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %13, align 8
  %15 = tail call i32 %14(%"class.es2::Texture"* %0) #14
  %16 = icmp eq i32 %15, 32879
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %11, align 8
  %19 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %18, i64 9
  %20 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %19, align 8
  %21 = tail call i32 %20(%"class.es2::Texture"* %0) #14
  %22 = icmp eq i32 %21, 35866
  br i1 %22, label %23, label %26

23:                                               ; preds = %17, %10
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %5, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %17, %23
  %27 = phi i32 [ %25, %23 ], [ 1, %17 ]
  %28 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %5, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %5, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  tail call void @_ZN3egl5Image13loadImageDataEiiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.egl::Image"* nonnull %5, i32 0, i32 0, i32 0, i32 %29, i32 %31, i32 %27, i32 %1, i32 %2, %"struct.gl::PixelStorageModes"* dereferenceable(24) %3, i8* nonnull %4) #14
  br label %32

32:                                               ; preds = %26, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN3egl5Image13loadImageDataEiiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.egl::Image"*, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es27Texture18setCompressedImageEiPKvPN3egl5ImageE(%"class.es2::Texture"*, i32, i8*, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %5 = icmp ne i8* %2, null
  %6 = icmp ne %"class.egl::Image"* %3, null
  %7 = and i1 %5, %6
  %8 = icmp sgt i32 %1, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %32

10:                                               ; preds = %4
  %11 = bitcast %"class.es2::Texture"* %0 to i32 (%"class.es2::Texture"*)***
  %12 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %12, i64 9
  %14 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %13, align 8
  %15 = tail call i32 %14(%"class.es2::Texture"* %0) #14
  %16 = icmp eq i32 %15, 32879
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = load i32 (%"class.es2::Texture"*)**, i32 (%"class.es2::Texture"*)*** %11, align 8
  %19 = getelementptr inbounds i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %18, i64 9
  %20 = load i32 (%"class.es2::Texture"*)*, i32 (%"class.es2::Texture"*)** %19, align 8
  %21 = tail call i32 %20(%"class.es2::Texture"* %0) #14
  %22 = icmp eq i32 %21, 35866
  br i1 %22, label %23, label %26

23:                                               ; preds = %17, %10
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %3, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %17, %23
  %27 = phi i32 [ %25, %23 ], [ 1, %17 ]
  %28 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %3, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %3, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  tail call void @_ZN3egl5Image18loadCompressedDataEiiiiiiiPKv(%"class.egl::Image"* nonnull %3, i32 0, i32 0, i32 0, i32 %29, i32 %31, i32 %27, i32 %1, i8* nonnull %2) #14
  br label %32

32:                                               ; preds = %26, %4
  ret void
}

; Function Attrs: optsize
declare void @_ZN3egl5Image18loadCompressedDataEiiiiiiiPKv(%"class.egl::Image"*, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es27Texture8subImageEiiiiiijjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* nocapture readnone, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %13 = icmp eq %"class.egl::Image"* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %24

15:                                               ; preds = %12
  %16 = icmp ne i8* %10, null
  %17 = icmp sgt i32 %4, 0
  %18 = and i1 %17, %16
  %19 = icmp sgt i32 %5, 0
  %20 = and i1 %19, %18
  %21 = icmp sgt i32 %6, 0
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  tail call void @_ZN3egl5Image13loadImageDataEiiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.egl::Image"* nonnull %11, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, %"struct.gl::PixelStorageModes"* dereferenceable(24) %9, i8* nonnull %10) #14
  br label %24

24:                                               ; preds = %14, %23, %15
  ret void
}

; Function Attrs: optsize
declare void @_ZN3es25errorEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es27Texture18subImageCompressedEiiiiiijiPKvPN3egl5ImageE(%"class.es2::Texture"* nocapture readnone, i32, i32, i32, i32, i32, i32, i32, i32, i8*, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %12 = icmp eq %"class.egl::Image"* %10, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %19

14:                                               ; preds = %11
  %15 = icmp ne i8* %9, null
  %16 = icmp sgt i32 %8, 0
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZN3egl5Image18loadCompressedDataEiiiiiiiPKv(%"class.egl::Image"* nonnull %10, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %8, i8* nonnull %9) #14
  br label %19

19:                                               ; preds = %13, %18, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* nocapture readnone, %"class.egl::Image"*, %"struct.sw::SliceRectT"* nocapture readonly dereferenceable(20), i32, i32, i32, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %8 = alloca %"struct.sw::SliceRectT", align 4
  %9 = alloca %"struct.sw::SliceRectT.40", align 16
  %10 = tail call %"class.es2::Device"* @_ZN3es29getDeviceEv() #14
  %11 = bitcast %"struct.sw::SliceRectT"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %8, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %8, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %8, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %8, i64 0, i32 0, i32 3
  %16 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %8, i64 0, i32 1
  %17 = bitcast %"struct.sw::SliceRectT"* %2 to <4 x i32>*
  %18 = load <4 x i32>, <4 x i32>* %17, align 4
  %19 = extractelement <4 x i32> %18, i32 2
  %20 = add i32 %19, %3
  %21 = extractelement <4 x i32> %18, i32 0
  %22 = sub i32 %20, %21
  %23 = extractelement <4 x i32> %18, i32 3
  %24 = add i32 %23, %4
  %25 = extractelement <4 x i32> %18, i32 1
  %26 = sub i32 %24, %25
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %22, i32* %14, align 4
  store i32 %26, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  %27 = bitcast %"struct.sw::SliceRectT.40"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"struct.sw::SliceRectT.40", %"struct.sw::SliceRectT.40"* %9, i64 0, i32 1
  %29 = sitofp <4 x i32> %18 to <4 x float>
  %30 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %2, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %"struct.sw::SliceRectT.40"* %9 to <4 x float>*
  store <4 x float> %29, <4 x float>* %32, align 16
  store i32 %31, i32* %28, align 16
  %33 = bitcast %"class.egl::Image"* %1 to %"class.sw::Surface"*
  %34 = bitcast %"class.egl::Image"* %6 to %"class.sw::Surface"*
  %35 = call zeroext i1 @_ZN3es26Device11stretchRectEPN2sw7SurfaceEPKNS1_10SliceRectTIfEES3_PKNS4_IiEEh(%"class.es2::Device"* %10, %"class.sw::Surface"* %33, %"struct.sw::SliceRectT.40"* nonnull %9, %"class.sw::Surface"* %34, %"struct.sw::SliceRectT"* nonnull %8, i8 zeroext 14) #14
  br i1 %35, label %37, label %36

36:                                               ; preds = %7
  call void @_ZN3es25errorEj(i32 1285) #14
  br label %37

37:                                               ; preds = %7, %36
  %38 = phi i1 [ false, %36 ], [ true, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #17
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #17
  ret i1 %38
}

; Function Attrs: optsize
declare %"class.es2::Device"* @_ZN3es29getDeviceEv() local_unnamed_addr #3

; Function Attrs: optsize
declare zeroext i1 @_ZN3es26Device11stretchRectEPN2sw7SurfaceEPKNS1_10SliceRectTIfEES3_PKNS4_IiEEh(%"class.es2::Device"*, %"class.sw::Surface"*, %"struct.sw::SliceRectT.40"*, %"class.sw::Surface"*, %"struct.sw::SliceRectT"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es27Texture16isMipmapFilteredEPNS_7SamplerE(%"class.es2::Texture"* nocapture readonly, %"class.es2::Sampler"* readonly) local_unnamed_addr #6 align 2 {
  %3 = icmp eq %"class.es2::Sampler"* %1, null
  %4 = getelementptr inbounds %"class.es2::Sampler", %"class.es2::Sampler"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.es2::Texture", %"class.es2::Texture"* %0, i64 0, i32 1
  %6 = select i1 %3, i32* %5, i32* %4
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, -4
  %9 = icmp eq i32 %8, 9984
  ret i1 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2DC2Ej(%"class.es2::Texture2D"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0
  tail call void @_ZN3es27TextureC2Ej(%"class.es2::Texture"* %3, i32 %1) #18
  %4 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es29Texture2DE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1
  %6 = bitcast %"class.es2::ImageLevels"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 132, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2DD0Ev(%"class.es2::Texture2D"*) unnamed_addr #1 align 2 {
  tail call void @_ZN3es29Texture2DD2Ev(%"class.es2::Texture2D"* %0) #14
  %2 = bitcast %"class.es2::Texture2D"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D11addProxyRefEPKNS_12RenderbufferE(%"class.es2::Texture2D"* nocapture, %"class.es2::Renderbuffer"* nocapture readnone) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D12releaseProxyEPKNS_12RenderbufferE(%"class.es2::Texture2D"* nocapture, %"class.es2::Renderbuffer"* nocapture readnone) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = add i32 %4, -1
  store i32 %7, i32* %3, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 3
  store %"class.es2::Renderbuffer"* null, %"class.es2::Renderbuffer"** %10, align 8
  br label %11

11:                                               ; preds = %9, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D5sweepEv(%"class.es2::Texture2D"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  br label %3

3:                                                ; preds = %20, %1
  %4 = phi i64 [ 0, %1 ], [ %22, %20 ]
  %5 = phi i32 [ 0, %1 ], [ %21, %20 ]
  %6 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %4
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK3egl5Image9isChildOfEPKNS_7TextureE(%"class.egl::Image"* nonnull %7, %"class.egl::Texture"* %2) #14
  br i1 %10, label %11, label %20

11:                                               ; preds = %9
  %12 = bitcast %"class.egl::Image"** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 208
  %15 = bitcast i8* %14 to i32*
  %16 = load volatile i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %30

18:                                               ; preds = %11
  %19 = add nsw i32 %5, 1
  br label %20

20:                                               ; preds = %3, %9, %18
  %21 = phi i32 [ %19, %18 ], [ %5, %9 ], [ %5, %3 ]
  %22 = add nuw nsw i64 %4, 1
  %23 = icmp eq i64 %22, 14
  br i1 %23, label %24, label %3

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load volatile i32, i32* %25, align 8
  %27 = icmp eq i32 %21, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.es2::Texture2D"* %0 to %"class.gl::Object"*
  tail call void @_ZN2gl6Object7destroyEv(%"class.gl::Object"* %29) #14
  br label %30

30:                                               ; preds = %11, %24, %28
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK3egl5Image9isChildOfEPKNS_7TextureE(%"class.egl::Image"*, %"class.egl::Texture"*) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2gl6Object7destroyEv(%"class.gl::Object"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es29Texture2D9getTargetEv(%"class.es2::Texture2D"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 3553
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture2D8getWidthEji(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*)***
  %5 = load i32 (%"class.es2::Texture2D"*)**, i32 (%"class.es2::Texture2D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture2D9getHeightEji(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*)***
  %5 = load i32 (%"class.es2::Texture2D"*)**, i32 (%"class.es2::Texture2D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture2D9getFormatEji(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*)***
  %5 = load i32 (%"class.es2::Texture2D"*)**, i32 (%"class.es2::Texture2D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3es29Texture2D11getTopLevelEv(%"class.es2::Texture2D"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 14
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %5, %13
  %8 = phi i64 [ %6, %5 ], [ %14, %13 ]
  %9 = phi i32 [ %3, %5 ], [ %15, %13 ]
  %10 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %8
  %11 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  %12 = icmp eq %"class.egl::Image"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = add nsw i64 %8, 1
  %15 = add nuw nsw i32 %9, 1
  %16 = trunc i64 %14 to i32
  %17 = icmp ult i32 %16, 14
  br i1 %17, label %7, label %20

18:                                               ; preds = %7
  %19 = trunc i64 %8 to i32
  br label %20

20:                                               ; preds = %13, %18, %1
  %21 = phi i32 [ %3, %1 ], [ %19, %18 ], [ %15, %13 ]
  %22 = add nsw i32 %21, -1
  ret i32 %22
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D16hasNonBaseLevelsEv(%"class.es2::Texture2D"* nocapture readonly) unnamed_addr #6 align 2 {
  br label %4

2:                                                ; preds = %4
  %3 = icmp eq i64 %9, 14
  br i1 %3, label %10, label %4

4:                                                ; preds = %2, %1
  %5 = phi i64 [ 1, %1 ], [ %9, %2 ]
  %6 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  %9 = add nuw nsw i64 %5, 1
  br i1 %8, label %2, label %10

10:                                               ; preds = %2, %4
  %11 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D12requiresSyncEv(%"class.es2::Texture2D"* nocapture readonly) unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %14, %1
  %3 = phi i64 [ 0, %1 ], [ %15, %14 ]
  %4 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %3
  %5 = load %"class.egl::Image"*, %"class.egl::Image"** %4, align 8
  %6 = icmp eq %"class.egl::Image"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.egl::Image"* %5 to %"class.sw::Surface"*
  %9 = bitcast %"class.egl::Image"* %5 to i1 (%"class.sw::Surface"*)***
  %10 = load i1 (%"class.sw::Surface"*)**, i1 (%"class.sw::Surface"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %10, i64 4
  %12 = load i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.sw::Surface"* nonnull %8) #14
  br i1 %13, label %17, label %14

14:                                               ; preds = %2, %7
  %15 = add nuw nsw i64 %3, 1
  %16 = icmp eq i64 %15, 14
  br i1 %16, label %17, label %2

17:                                               ; preds = %14, %7
  %18 = phi i1 [ true, %7 ], [ false, %14 ]
  ret i1 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D8setImageEiiiijjRKN2gl17PixelStorageModesEPKv(%"class.es2::Texture2D"*, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #1 align 2 {
  %10 = icmp ult i32 %1, 14
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %12
  %14 = load %"class.egl::Image"*, %"class.egl::Image"** %13, align 8
  %15 = icmp eq %"class.egl::Image"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.egl::Image"* %14 to void (%"class.egl::Image"*)***
  %18 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %18, i64 7
  %20 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %19, align 8
  tail call void %20(%"class.egl::Image"* nonnull %14) #14
  br label %24

21:                                               ; preds = %9
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %22 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %23 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %22, i32 %2, i32 %3, i32 %4) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %28

24:                                               ; preds = %11, %16
  %25 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %26 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %25, i32 %2, i32 %3, i32 %4) #14
  store %"class.egl::Image"* %26, %"class.egl::Image"** %13, align 8
  %27 = icmp eq %"class.egl::Image"* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %21, %24
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %31

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0
  tail call void @_ZN3es27Texture8setImageEjjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* %30, i32 %5, i32 %6, %"struct.gl::PixelStorageModes"* dereferenceable(24) %7, i8* %8, %"class.egl::Image"* nonnull %26) #18
  br label %31

31:                                               ; preds = %29, %28
  ret void
}

; Function Attrs: optsize
declare %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D12bindTexImageEPN2gl7SurfaceE(%"class.es2::Texture2D"*, %"class.gl::Surface"*) local_unnamed_addr #1 align 2 {
  br label %3

3:                                                ; preds = %13, %2
  %4 = phi i64 [ 0, %2 ], [ %14, %13 ]
  %5 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %4
  %6 = load %"class.egl::Image"*, %"class.egl::Image"** %5, align 8
  %7 = icmp eq %"class.egl::Image"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.egl::Image"* %6 to void (%"class.egl::Image"*)***
  %10 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %10, i64 7
  %12 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %11, align 8
  tail call void %12(%"class.egl::Image"* nonnull %6) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** %5, align 8
  br label %13

13:                                               ; preds = %8, %3
  %14 = add nuw nsw i64 %4, 1
  %15 = icmp eq i64 %14, 14
  br i1 %15, label %16, label %3

16:                                               ; preds = %13
  %17 = bitcast %"class.gl::Surface"* %1 to %"class.egl::Image"* (%"class.gl::Surface"*)***
  %18 = load %"class.egl::Image"* (%"class.gl::Surface"*)**, %"class.egl::Image"* (%"class.gl::Surface"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.egl::Image"* (%"class.gl::Surface"*)*, %"class.egl::Image"* (%"class.gl::Surface"*)** %18, i64 2
  %20 = load %"class.egl::Image"* (%"class.gl::Surface"*)*, %"class.egl::Image"* (%"class.gl::Surface"*)** %19, align 8
  %21 = tail call %"class.egl::Image"* %20(%"class.gl::Surface"* %1) #14
  %22 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 0
  store %"class.egl::Image"* %21, %"class.egl::Image"** %22, align 8
  %23 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 2
  store %"class.gl::Surface"* %1, %"class.gl::Surface"** %23, align 8
  %24 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %25 = bitcast %"class.gl::Surface"* %1 to void (%"class.gl::Surface"*, %"class.egl::Texture"*)***
  %26 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)**, void (%"class.gl::Surface"*, %"class.egl::Texture"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %26, i64 7
  %28 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %27, align 8
  tail call void %28(%"class.gl::Surface"* %1, %"class.egl::Texture"* %24) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D15releaseTexImageEv(%"class.es2::Texture2D"* nocapture) unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %12, %1
  %3 = phi i64 [ 0, %1 ], [ %13, %12 ]
  %4 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %3
  %5 = load %"class.egl::Image"*, %"class.egl::Image"** %4, align 8
  %6 = icmp eq %"class.egl::Image"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.egl::Image"* %5 to void (%"class.egl::Image"*)***
  %9 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %9, i64 7
  %11 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %10, align 8
  tail call void %11(%"class.egl::Image"* nonnull %5) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** %4, align 8
  br label %12

12:                                               ; preds = %7, %2
  %13 = add nuw nsw i64 %3, 1
  %14 = icmp eq i64 %13, 14
  br i1 %14, label %15, label %2

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 2
  %17 = load %"class.gl::Surface"*, %"class.gl::Surface"** %16, align 8
  %18 = icmp eq %"class.gl::Surface"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.gl::Surface"* %17 to void (%"class.gl::Surface"*, %"class.egl::Texture"*)***
  %21 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)**, void (%"class.gl::Surface"*, %"class.egl::Texture"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %21, i64 7
  %23 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %22, align 8
  tail call void %23(%"class.gl::Surface"* nonnull %17, %"class.egl::Texture"* null) #14
  store %"class.gl::Surface"* null, %"class.gl::Surface"** %16, align 8
  br label %24

24:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D18setCompressedImageEijiiiPKv(%"class.es2::Texture2D"*, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %8 = icmp ult i32 %1, 14
  br i1 %8, label %9, label %19

9:                                                ; preds = %7
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %10
  %12 = load %"class.egl::Image"*, %"class.egl::Image"** %11, align 8
  %13 = icmp eq %"class.egl::Image"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.egl::Image"* %12 to void (%"class.egl::Image"*)***
  %16 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %16, i64 7
  %18 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %17, align 8
  tail call void %18(%"class.egl::Image"* nonnull %12) #14
  br label %22

19:                                               ; preds = %7
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %20 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %21 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %20, i32 %3, i32 %4, i32 %2) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %26

22:                                               ; preds = %9, %14
  %23 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %24 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %23, i32 %3, i32 %4, i32 %2) #14
  store %"class.egl::Image"* %24, %"class.egl::Image"** %11, align 8
  %25 = icmp eq %"class.egl::Image"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %19, %22
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %29

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0
  tail call void @_ZN3es27Texture18setCompressedImageEiPKvPN3egl5ImageE(%"class.es2::Texture"* %28, i32 %5, i8* %6, %"class.egl::Image"* nonnull %24) #18
  br label %29

29:                                               ; preds = %27, %26
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D8subImageEiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.es2::Texture2D"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #1 align 2 {
  %11 = icmp ult i32 %1, 14
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %13
  %15 = load %"class.egl::Image"*, %"class.egl::Image"** %14, align 8
  br label %17

16:                                               ; preds = %10
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %17

17:                                               ; preds = %12, %16
  %18 = phi %"class.egl::Image"* [ %15, %12 ], [ null, %16 ]
  tail call void @_ZN3es27Texture8subImageEiiiiiijjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* undef, i32 %2, i32 %3, i32 0, i32 %4, i32 %5, i32 1, i32 %6, i32 %7, %"struct.gl::PixelStorageModes"* dereferenceable(24) %8, i8* %9, %"class.egl::Image"* %18) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D18subImageCompressedEiiiiijiPKv(%"class.es2::Texture2D"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %10 = icmp ult i32 %1, 14
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %12
  %14 = load %"class.egl::Image"*, %"class.egl::Image"** %13, align 8
  br label %16

15:                                               ; preds = %9
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi %"class.egl::Image"* [ %14, %11 ], [ null, %15 ]
  tail call void @_ZN3es27Texture18subImageCompressedEiiiiiijiPKvPN3egl5ImageE(%"class.es2::Texture"* undef, i32 %2, i32 %3, i32 0, i32 %4, i32 %5, i32 1, i32 undef, i32 %7, i8* %8, %"class.egl::Image"* %17) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D9copyImageEijiiiiPNS_12RenderbufferE(%"class.es2::Texture2D"*, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*) local_unnamed_addr #1 align 2 {
  %9 = alloca %"struct.sw::SliceRectT", align 16
  %10 = icmp ult i32 %1, 14
  br i1 %10, label %11, label %21

11:                                               ; preds = %8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %12
  %14 = load %"class.egl::Image"*, %"class.egl::Image"** %13, align 8
  %15 = icmp eq %"class.egl::Image"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.egl::Image"* %14 to void (%"class.egl::Image"*)***
  %18 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %18, i64 7
  %20 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %19, align 8
  tail call void %20(%"class.egl::Image"* nonnull %14) #14
  br label %24

21:                                               ; preds = %8
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %22 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %23 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %22, i32 %5, i32 %6, i32 %2) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %28

24:                                               ; preds = %11, %16
  %25 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %26 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %25, i32 %5, i32 %6, i32 %2) #14
  store %"class.egl::Image"* %26, %"class.egl::Image"** %13, align 8
  %27 = icmp eq %"class.egl::Image"* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %21, %24
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %61

29:                                               ; preds = %24
  %30 = icmp ne i32 %5, 0
  %31 = icmp ne i32 %6, 0
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %61

33:                                               ; preds = %29
  %34 = tail call %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"* %7) #14
  %35 = icmp eq %"class.egl::Image"* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %61

37:                                               ; preds = %33
  %38 = bitcast %"struct.sw::SliceRectT"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %38) #17
  %39 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %9, i64 0, i32 1
  %40 = add nsw i32 %5, %3
  %41 = add nsw i32 %6, %4
  store i32 0, i32* %39, align 16
  %42 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %34, i64 0, i32 3
  %43 = bitcast i32* %42 to <2 x i32>*
  %44 = load <2 x i32>, <2 x i32>* %43, align 4
  %45 = shufflevector <2 x i32> %44, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %46 = insertelement <4 x i32> undef, i32 %3, i32 0
  %47 = insertelement <4 x i32> %46, i32 %4, i32 1
  %48 = insertelement <4 x i32> %47, i32 %40, i32 2
  %49 = insertelement <4 x i32> %48, i32 %41, i32 3
  %50 = icmp sgt <4 x i32> %49, zeroinitializer
  %51 = select <4 x i1> %50, <4 x i32> %49, <4 x i32> zeroinitializer
  %52 = icmp sgt <4 x i32> %51, %45
  %53 = select <4 x i1> %52, <4 x i32> %45, <4 x i32> %51
  %54 = bitcast %"struct.sw::SliceRectT"* %9 to <4 x i32>*
  store <4 x i32> %53, <4 x i32>* %54, align 16
  %55 = load %"class.egl::Image"*, %"class.egl::Image"** %13, align 8
  %56 = call zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* undef, %"class.egl::Image"* nonnull %34, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %9, i32 0, i32 0, i32 0, %"class.egl::Image"* %55) #18
  %57 = bitcast %"class.egl::Image"* %34 to void (%"class.egl::Image"*)***
  %58 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %58, i64 7
  %60 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %59, align 8
  tail call void %60(%"class.egl::Image"* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %38) #17
  br label %61

61:                                               ; preds = %29, %28, %37, %36
  ret void
}

; Function Attrs: optsize
declare %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D12copySubImageEjiiiiiiiiPNS_12RenderbufferE(%"class.es2::Texture2D"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*) unnamed_addr #1 align 2 {
  %12 = alloca %"struct.sw::SliceRectT", align 16
  %13 = icmp ult i32 %2, 14
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %20

15:                                               ; preds = %11
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %16
  %18 = load %"class.egl::Image"*, %"class.egl::Image"** %17, align 8
  %19 = icmp eq %"class.egl::Image"* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %14, %15
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %66

21:                                               ; preds = %15
  %22 = add nsw i32 %8, %3
  %23 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %18, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = add nsw i32 %9, %4
  %28 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %18, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %27, %29
  %31 = icmp ne i32 %5, 0
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %34

33:                                               ; preds = %26, %21
  tail call void @_ZN3es25errorEj(i32 1281) #14
  br label %66

34:                                               ; preds = %26
  %35 = icmp sgt i32 %8, 0
  %36 = icmp sgt i32 %9, 0
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %66

38:                                               ; preds = %34
  %39 = tail call %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"* %10) #14
  %40 = icmp eq %"class.egl::Image"* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %66

42:                                               ; preds = %38
  %43 = bitcast %"struct.sw::SliceRectT"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43) #17
  %44 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %12, i64 0, i32 1
  %45 = add nsw i32 %8, %6
  %46 = add nsw i32 %9, %7
  store i32 0, i32* %44, align 16
  %47 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %39, i64 0, i32 3
  %48 = bitcast i32* %47 to <2 x i32>*
  %49 = load <2 x i32>, <2 x i32>* %48, align 4
  %50 = shufflevector <2 x i32> %49, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %51 = insertelement <4 x i32> undef, i32 %6, i32 0
  %52 = insertelement <4 x i32> %51, i32 %7, i32 1
  %53 = insertelement <4 x i32> %52, i32 %45, i32 2
  %54 = insertelement <4 x i32> %53, i32 %46, i32 3
  %55 = icmp sgt <4 x i32> %54, zeroinitializer
  %56 = select <4 x i1> %55, <4 x i32> %54, <4 x i32> zeroinitializer
  %57 = icmp sgt <4 x i32> %56, %50
  %58 = select <4 x i1> %57, <4 x i32> %50, <4 x i32> %56
  %59 = bitcast %"struct.sw::SliceRectT"* %12 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %59, align 16
  %60 = load %"class.egl::Image"*, %"class.egl::Image"** %17, align 8
  %61 = call zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* undef, %"class.egl::Image"* nonnull %39, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %12, i32 %3, i32 %4, i32 0, %"class.egl::Image"* %60) #18
  %62 = bitcast %"class.egl::Image"* %39 to void (%"class.egl::Image"*)***
  %63 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %63, i64 7
  %65 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %64, align 8
  tail call void %65(%"class.egl::Image"* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43) #17
  br label %66

66:                                               ; preds = %34, %33, %20, %42, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D14setSharedImageEPN3egl5ImageE(%"class.es2::Texture2D"* nocapture, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load %"class.egl::Image"*, %"class.egl::Image"** %3, align 8
  %5 = icmp eq %"class.egl::Image"* %4, %1
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %1, i64 0, i32 2
  %8 = bitcast %"class.gl::Object.base"* %7 to %"class.gl::Object"*
  %9 = bitcast %"class.gl::Object.base"* %7 to void (%"class.gl::Object"*)***
  %10 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %9, align 8
  %11 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %10, align 8
  tail call void %11(%"class.gl::Object"* %8) #14
  %12 = load %"class.egl::Image"*, %"class.egl::Image"** %3, align 8
  %13 = icmp eq %"class.egl::Image"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.egl::Image"* %12 to void (%"class.egl::Image"*)***
  %16 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %16, i64 7
  %18 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %17, align 8
  tail call void %18(%"class.egl::Image"* nonnull %12) #14
  br label %19

19:                                               ; preds = %6, %14
  store %"class.egl::Image"* %1, %"class.egl::Image"** %3, align 8
  br label %20

20:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D18isBaseLevelDefinedEv(%"class.es2::Texture2D"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 14
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %6
  %8 = load %"class.egl::Image"*, %"class.egl::Image"** %7, align 8
  %9 = icmp eq %"class.egl::Image"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %8, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %8, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %12, 0
  %16 = icmp sgt i32 %14, 0
  %17 = and i1 %15, %16
  br label %18

18:                                               ; preds = %1, %5, %10
  %19 = phi i1 [ %17, %10 ], [ false, %5 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D17isSamplerCompleteEPNS_7SamplerE(%"class.es2::Texture2D"*, %"class.es2::Sampler"* readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 10
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.es2::Texture2D"* %0 to i1 (%"class.es2::Texture2D"*)***
  %8 = load i1 (%"class.es2::Texture2D"*)**, i1 (%"class.es2::Texture2D"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.es2::Texture2D"*)*, i1 (%"class.es2::Texture2D"*)** %8, i64 17
  %10 = load i1 (%"class.es2::Texture2D"*)*, i1 (%"class.es2::Texture2D"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.es2::Texture2D"* %0) #14
  br i1 %11, label %12, label %23

12:                                               ; preds = %6
  %13 = icmp eq %"class.es2::Sampler"* %1, null
  %14 = getelementptr inbounds %"class.es2::Sampler", %"class.es2::Sampler"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 1
  %16 = select i1 %13, i32* %15, i32* %14
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, -4
  %19 = icmp eq i32 %18, 9984
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  %21 = tail call zeroext i1 @_ZNK3es29Texture2D16isMipmapCompleteEv(%"class.es2::Texture2D"* %0) #18
  br i1 %21, label %22, label %23

22:                                               ; preds = %20, %12
  br label %23

23:                                               ; preds = %20, %6, %2, %22
  %24 = phi i1 [ true, %22 ], [ true, %2 ], [ false, %6 ], [ false, %20 ]
  ret i1 %24
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D16isMipmapCompleteEv(%"class.es2::Texture2D"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 12
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %70, label %7

7:                                                ; preds = %1
  %8 = sext i32 %3 to i64
  %9 = icmp ult i32 %3, 14
  br i1 %9, label %10, label %14

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %8
  %12 = load %"class.egl::Image"*, %"class.egl::Image"** %11, align 8
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %12, i64 0, i32 3
  br label %14

14:                                               ; preds = %7, %10
  %15 = phi i32* [ %13, %10 ], [ inttoptr (i64 212 to i32*), %7 ]
  %16 = phi %"class.egl::Image"* [ %12, %10 ], [ null, %7 ]
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %16, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %17, %19
  %21 = select i1 %20, i32 %19, i32 %17
  br label %22

22:                                               ; preds = %22, %14
  %23 = phi i32 [ 0, %14 ], [ %26, %22 ]
  %24 = ashr i32 %21, %23
  %25 = icmp sgt i32 %24, 1
  %26 = add nuw nsw i32 %23, 1
  br i1 %25, label %22, label %27

27:                                               ; preds = %22
  %28 = add nsw i32 %23, %3
  %29 = icmp slt i32 %5, %28
  %30 = select i1 %29, i32 %5, i32 %28
  %31 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %8
  %32 = sext i32 %30 to i64
  br label %33

33:                                               ; preds = %63, %27
  %34 = phi i64 [ %35, %63 ], [ %8, %27 ]
  %35 = add nsw i64 %34, 1
  %36 = icmp slt i64 %34, %32
  br i1 %36, label %37, label %70

37:                                               ; preds = %33
  %38 = trunc i64 %35 to i32
  %39 = icmp ult i32 %38, 14
  br i1 %39, label %40, label %70

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %35
  %42 = load %"class.egl::Image"*, %"class.egl::Image"** %41, align 8
  %43 = icmp eq %"class.egl::Image"* %42, null
  br i1 %43, label %70, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %42, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  br i1 %9, label %47, label %49

47:                                               ; preds = %44
  %48 = load %"class.egl::Image"*, %"class.egl::Image"** %31, align 8
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi %"class.egl::Image"* [ %48, %47 ], [ null, %44 ]
  %51 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %50, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %46, %52
  br i1 %53, label %54, label %70

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %42, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = trunc i64 %35 to i32
  %58 = sub i32 %57, %3
  %59 = ashr i32 %17, %58
  %60 = icmp sgt i32 %59, 1
  %61 = select i1 %60, i32 %59, i32 1
  %62 = icmp eq i32 %56, %61
  br i1 %62, label %63, label %70

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %42, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = ashr i32 %19, %58
  %67 = icmp sgt i32 %66, 1
  %68 = select i1 %67, i32 %66, i32 1
  %69 = icmp eq i32 %65, %68
  br i1 %69, label %33, label %70

70:                                               ; preds = %63, %54, %37, %49, %40, %33, %1
  %71 = phi i1 [ false, %1 ], [ false, %63 ], [ false, %54 ], [ false, %37 ], [ false, %49 ], [ false, %40 ], [ true, %33 ]
  ret i1 %71
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D12isCompressedEji(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*, i32, i32)***
  %5 = load i32 (%"class.es2::Texture2D"*, i32, i32)**, i32 (%"class.es2::Texture2D"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*, i32, i32)*, i32 (%"class.es2::Texture2D"*, i32, i32)** %5, i64 13
  %7 = load i32 (%"class.es2::Texture2D"*, i32, i32)*, i32 (%"class.es2::Texture2D"*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0, i32 %1, i32 %2) #14
  %9 = tail call zeroext i1 @_ZN3es212IsCompressedEi(i32 %8) #14
  ret i1 %9
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3es212IsCompressedEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D7isDepthEji(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*, i32, i32)***
  %5 = load i32 (%"class.es2::Texture2D"*, i32, i32)**, i32 (%"class.es2::Texture2D"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*, i32, i32)*, i32 (%"class.es2::Texture2D"*, i32, i32)** %5, i64 13
  %7 = load i32 (%"class.es2::Texture2D"*, i32, i32)*, i32 (%"class.es2::Texture2D"*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0, i32 %1, i32 %2) #14
  %9 = tail call zeroext i1 @_ZN3es214IsDepthTextureEi(i32 %8) #14
  ret i1 %9
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3es214IsDepthTextureEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2D15generateMipmapsEv(%"class.es2::Texture2D"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = icmp ult i32 %3, 14
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %99

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %4
  %9 = load %"class.egl::Image"*, %"class.egl::Image"** %8, align 8
  %10 = icmp eq %"class.egl::Image"* %9, null
  br i1 %10, label %99, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %99, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %9, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %99, label %19

19:                                               ; preds = %15
  %20 = icmp slt i32 %13, %17
  %21 = select i1 %20, i32 %17, i32 %13
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi i32 [ 0, %19 ], [ %26, %22 ]
  %24 = ashr i32 %21, %23
  %25 = icmp sgt i32 %24, 1
  %26 = add nuw nsw i32 %23, 1
  br i1 %25, label %22, label %27

27:                                               ; preds = %22
  %28 = add nsw i32 %23, %3
  %29 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 12
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, %28
  %32 = select i1 %31, i32 %30, i32 %28
  %33 = icmp slt i32 %3, %32
  br i1 %33, label %34, label %99

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  %36 = sext i32 %32 to i64
  br label %37

37:                                               ; preds = %34, %90
  %38 = phi i64 [ %4, %34 ], [ %39, %90 ]
  %39 = add nsw i64 %38, 1
  %40 = trunc i64 %39 to i32
  %41 = icmp ult i32 %40, 14
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %52

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %39
  %45 = load %"class.egl::Image"*, %"class.egl::Image"** %44, align 8
  %46 = icmp eq %"class.egl::Image"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.egl::Image"* %45 to void (%"class.egl::Image"*)***
  %49 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %49, i64 7
  %51 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %50, align 8
  tail call void %51(%"class.egl::Image"* nonnull %45) #14
  br label %52

52:                                               ; preds = %42, %43, %47
  %53 = load i32, i32* %2, align 8
  %54 = icmp ult i32 %53, 14
  br i1 %54, label %55, label %69

55:                                               ; preds = %52
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %56
  %58 = load %"class.egl::Image"*, %"class.egl::Image"** %57, align 8
  %59 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %58, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = ashr i32 %60, %40
  %62 = icmp sgt i32 %61, 1
  %63 = select i1 %62, i32 %61, i32 1
  %64 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %58, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = ashr i32 %65, %40
  %67 = icmp sgt i32 %66, 1
  %68 = select i1 %67, i32 %66, i32 1
  br label %78

69:                                               ; preds = %52
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %70 = load i32, i32* inttoptr (i64 212 to i32*), align 4
  %71 = ashr i32 %70, %40
  %72 = icmp sgt i32 %71, 1
  %73 = select i1 %72, i32 %71, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %74 = load i32, i32* inttoptr (i64 216 to i32*), align 8
  %75 = ashr i32 %74, %40
  %76 = icmp sgt i32 %75, 1
  %77 = select i1 %76, i32 %75, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %78

78:                                               ; preds = %55, %69
  %79 = phi %"class.egl::Image"* [ %58, %55 ], [ null, %69 ]
  %80 = phi i32 [ %68, %55 ], [ %77, %69 ]
  %81 = phi i32 [ %63, %55 ], [ %73, %69 ]
  %82 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 6
  %83 = load i32, i32* %82, align 8
  %84 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"* %35, i32 %81, i32 %80, i32 %83) #14
  br i1 %41, label %86, label %85

85:                                               ; preds = %78
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %89

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %39
  store %"class.egl::Image"* %84, %"class.egl::Image"** %87, align 8
  %88 = icmp eq %"class.egl::Image"* %84, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %86, %85
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %99

90:                                               ; preds = %86
  %91 = tail call %"class.es2::Device"* @_ZN3es29getDeviceEv() #14
  %92 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %38
  %93 = bitcast %"class.egl::Image"** %87 to %"class.sw::Surface"**
  %94 = load %"class.sw::Surface"*, %"class.sw::Surface"** %93, align 8
  %95 = bitcast %"class.egl::Image"** %92 to %"class.sw::Surface"**
  %96 = load %"class.sw::Surface"*, %"class.sw::Surface"** %95, align 8
  %97 = tail call zeroext i1 @_ZN3es26Device11stretchRectEPN2sw7SurfaceEPKNS1_10SliceRectTIfEES3_PKNS4_IiEEh(%"class.es2::Device"* %91, %"class.sw::Surface"* %96, %"struct.sw::SliceRectT.40"* null, %"class.sw::Surface"* %94, %"struct.sw::SliceRectT"* null, i8 zeroext 15) #14
  %98 = icmp slt i64 %39, %36
  br i1 %98, label %37, label %99

99:                                               ; preds = %90, %27, %89, %6, %7, %11, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es29Texture2D8getImageEj(%"class.es2::Texture2D"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = icmp ult i32 %1, 14
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  br label %9

8:                                                ; preds = %2
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %9

9:                                                ; preds = %4, %8
  %10 = phi %"class.egl::Image"* [ %7, %4 ], [ null, %8 ]
  ret %"class.egl::Image"* %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.es2::Renderbuffer"* @_ZN3es29Texture2D15getRenderbufferEji(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*)***
  %5 = load i32 (%"class.es2::Texture2D"*)**, i32 (%"class.es2::Texture2D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0) #14
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %26

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 3
  %13 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %12, align 8
  %14 = icmp eq %"class.es2::Renderbuffer"* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = tail call i8* @_Znwm(i64 24) #15
  %17 = bitcast i8* %16 to %"class.es2::Renderbuffer"*
  %18 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = tail call i8* @_Znwm(i64 24) #15
  %21 = bitcast i8* %20 to %"class.es2::RenderbufferTexture2D"*
  tail call void @_ZN3es221RenderbufferTexture2DC1EPNS_9Texture2DEi(%"class.es2::RenderbufferTexture2D"* nonnull %21, %"class.es2::Texture2D"* %0, i32 %2) #14
  %22 = bitcast i8* %20 to %"class.es2::RenderbufferInterface"*
  tail call void @_ZN3es212RenderbufferC1EjPNS_21RenderbufferInterfaceE(%"class.es2::Renderbuffer"* nonnull %17, i32 %19, %"class.es2::RenderbufferInterface"* nonnull %22) #14
  %23 = bitcast %"class.es2::Renderbuffer"** %12 to i8**
  store i8* %16, i8** %23, align 8
  br label %26

24:                                               ; preds = %11
  tail call void @_ZN3es212Renderbuffer8setLevelEi(%"class.es2::Renderbuffer"* nonnull %13, i32 %2) #14
  %25 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %12, align 8
  br label %26

26:                                               ; preds = %15, %24, %10
  %27 = phi %"class.es2::Renderbuffer"* [ null, %10 ], [ %25, %24 ], [ %17, %15 ]
  ret %"class.es2::Renderbuffer"* %27
}

; Function Attrs: optsize
declare void @_ZN3es221RenderbufferTexture2DC1EPNS_9Texture2DEi(%"class.es2::RenderbufferTexture2D"*, %"class.es2::Texture2D"*, i32) unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN3es212RenderbufferC1EjPNS_21RenderbufferInterfaceE(%"class.es2::Renderbuffer"*, i32, %"class.es2::RenderbufferInterface"*) unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN3es212Renderbuffer8setLevelEi(%"class.es2::Renderbuffer"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es29Texture2D15getRenderTargetEjj(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*)***
  %5 = load i32 (%"class.es2::Texture2D"*)**, i32 (%"class.es2::Texture2D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = zext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 2
  %17 = bitcast %"class.gl::Object.base"* %16 to %"class.gl::Object"*
  %18 = bitcast %"class.gl::Object.base"* %16 to void (%"class.gl::Object"*)***
  %19 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %18, align 8
  %20 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %19, align 8
  tail call void %20(%"class.gl::Object"* %17) #14
  %21 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  br label %23

22:                                               ; preds = %3
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %23

23:                                               ; preds = %15, %10, %22
  %24 = phi %"class.egl::Image"* [ null, %22 ], [ null, %10 ], [ %21, %15 ]
  ret %"class.egl::Image"* %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture2D8isSharedEjj(%"class.es2::Texture2D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2D"* %0 to i32 (%"class.es2::Texture2D"*)***
  %5 = load i32 (%"class.es2::Texture2D"*)**, i32 (%"class.es2::Texture2D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2D"*)*, i32 (%"class.es2::Texture2D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2D"* %0) #14
  %9 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 2
  %10 = load %"class.gl::Surface"*, %"class.gl::Surface"** %9, align 8
  %11 = icmp eq %"class.gl::Surface"* %10, null
  br i1 %11, label %12, label %23

12:                                               ; preds = %3
  %13 = icmp ult i32 %2, 14
  br i1 %13, label %14, label %23

14:                                               ; preds = %12
  %15 = zext i32 %2 to i64
  %16 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %15
  %17 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  %18 = icmp eq %"class.egl::Image"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %17, i64 0, i32 7
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp ne i8 %21, 0
  br label %23

23:                                               ; preds = %12, %14, %3, %19
  %24 = phi i1 [ %22, %19 ], [ true, %3 ], [ false, %14 ], [ false, %12 ]
  ret i1 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es213Texture2DRectC2Ej(%"class.es2::Texture2DRect"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3es27TextureC2Ej(%"class.es2::Texture"* %3, i32 %1) #14
  %4 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.es2::ImageLevels"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 132, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es213Texture2DRectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 9729, i32 9729, i32 33071, i32 33071>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 0, i32 5
  store i32 33071, i32* %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es213Texture2DRect9getTargetEv(%"class.es2::Texture2DRect"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 34037
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.es2::Renderbuffer"* @_ZN3es213Texture2DRect15getRenderbufferEji(%"class.es2::Texture2DRect"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture2DRect"* %0 to i32 (%"class.es2::Texture2DRect"*)***
  %5 = load i32 (%"class.es2::Texture2DRect"*)**, i32 (%"class.es2::Texture2DRect"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture2DRect"*)*, i32 (%"class.es2::Texture2DRect"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture2DRect"*)*, i32 (%"class.es2::Texture2DRect"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture2DRect"* %0) #14
  %9 = icmp ne i32 %8, %1
  %10 = icmp ne i32 %2, 0
  %11 = or i1 %10, %9
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %26

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 3
  %15 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %14, align 8
  %16 = icmp eq %"class.es2::Renderbuffer"* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 24) #15
  %19 = bitcast i8* %18 to %"class.es2::Renderbuffer"*
  %20 = getelementptr inbounds %"class.es2::Texture2DRect", %"class.es2::Texture2DRect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = tail call i8* @_Znwm(i64 16) #15
  %23 = bitcast i8* %22 to %"class.es2::RenderbufferTexture2DRect"*
  tail call void @_ZN3es225RenderbufferTexture2DRectC1EPNS_13Texture2DRectE(%"class.es2::RenderbufferTexture2DRect"* nonnull %23, %"class.es2::Texture2DRect"* %0) #14
  %24 = bitcast i8* %22 to %"class.es2::RenderbufferInterface"*
  tail call void @_ZN3es212RenderbufferC1EjPNS_21RenderbufferInterfaceE(%"class.es2::Renderbuffer"* nonnull %19, i32 %21, %"class.es2::RenderbufferInterface"* nonnull %24) #14
  %25 = bitcast %"class.es2::Renderbuffer"** %14 to i8**
  store i8* %18, i8** %25, align 8
  br label %26

26:                                               ; preds = %17, %13, %12
  %27 = phi %"class.es2::Renderbuffer"* [ null, %12 ], [ %15, %13 ], [ %19, %17 ]
  ret %"class.es2::Renderbuffer"* %27
}

; Function Attrs: optsize
declare void @_ZN3es225RenderbufferTexture2DRectC1EPNS_13Texture2DRectE(%"class.es2::RenderbufferTexture2DRect"*, %"class.es2::Texture2DRect"*) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMapC2Ej(%"class.es2::TextureCubeMap"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0
  tail call void @_ZN3es27TextureC2Ej(%"class.es2::Texture"* %3, i32 %1) #18
  %4 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es214TextureCubeMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0
  %6 = bitcast %"class.es2::ImageLevels"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 744, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMapD2Ev(%"class.es2::TextureCubeMap"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es214TextureCubeMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  br label %8

4:                                                ; preds = %19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es27TextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 19
  %6 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* %6) #14
  %7 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %7) #14
  ret void

8:                                                ; preds = %19, %1
  %9 = phi i64 [ 0, %1 ], [ %21, %19 ]
  br label %10

10:                                               ; preds = %16, %8
  %11 = phi i64 [ 0, %8 ], [ %17, %16 ]
  %12 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %9, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @_ZN3egl5Image6unbindEPKNS_7TextureE(%"class.egl::Image"* nonnull %13, %"class.egl::Texture"* %3) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** %12, align 8
  br label %16

16:                                               ; preds = %15, %10
  %17 = add nuw nsw i64 %11, 1
  %18 = icmp eq i64 %17, 14
  br i1 %18, label %19, label %10

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 2, i64 %9
  store %"class.es2::Renderbuffer"* null, %"class.es2::Renderbuffer"** %20, align 8
  %21 = add nuw nsw i64 %9, 1
  %22 = icmp eq i64 %21, 6
  br i1 %22, label %4, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMapD0Ev(%"class.es2::TextureCubeMap"*) unnamed_addr #1 align 2 {
  tail call void @_ZN3es214TextureCubeMapD2Ev(%"class.es2::TextureCubeMap"* %0) #14
  %2 = bitcast %"class.es2::TextureCubeMap"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap11addProxyRefEPKNS_12RenderbufferE(%"class.es2::TextureCubeMap"* nocapture, %"class.es2::Renderbuffer"* readnone) unnamed_addr #7 align 2 {
  br label %4

3:                                                ; preds = %13
  ret void

4:                                                ; preds = %13, %2
  %5 = phi i64 [ 0, %2 ], [ %14, %13 ]
  %6 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 2, i64 %5
  %7 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %6, align 8
  %8 = icmp eq %"class.es2::Renderbuffer"* %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 3, i64 %5
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 4
  br label %13

13:                                               ; preds = %4, %9
  %14 = add nuw nsw i64 %5, 1
  %15 = icmp eq i64 %14, 6
  br i1 %15, label %3, label %4
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap12releaseProxyEPKNS_12RenderbufferE(%"class.es2::TextureCubeMap"* nocapture, %"class.es2::Renderbuffer"* readnone) unnamed_addr #7 align 2 {
  br label %4

3:                                                ; preds = %17
  ret void

4:                                                ; preds = %17, %2
  %5 = phi i64 [ 0, %2 ], [ %18, %17 ]
  %6 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 2, i64 %5
  %7 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %6, align 8
  %8 = icmp eq %"class.es2::Renderbuffer"* %7, %1
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 3, i64 %5
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = add i32 %11, -1
  store i32 %14, i32* %10, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %9, %13
  store %"class.es2::Renderbuffer"* null, %"class.es2::Renderbuffer"** %6, align 8
  br label %17

17:                                               ; preds = %4, %16, %13
  %18 = add nuw nsw i64 %5, 1
  %19 = icmp eq i64 %18, 6
  br i1 %19, label %3, label %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap5sweepEv(%"class.es2::TextureCubeMap"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  br label %3

3:                                                ; preds = %27, %1
  %4 = phi i64 [ 0, %1 ], [ %28, %27 ]
  %5 = phi i32 [ 0, %1 ], [ %24, %27 ]
  br label %6

6:                                                ; preds = %23, %3
  %7 = phi i64 [ 0, %3 ], [ %25, %23 ]
  %8 = phi i32 [ %5, %3 ], [ %24, %23 ]
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %4, i32 0, i64 %7
  %10 = load %"class.egl::Image"*, %"class.egl::Image"** %9, align 8
  %11 = icmp eq %"class.egl::Image"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %6
  %13 = tail call zeroext i1 @_ZNK3egl5Image9isChildOfEPKNS_7TextureE(%"class.egl::Image"* nonnull %10, %"class.egl::Texture"* %2) #14
  br i1 %13, label %14, label %23

14:                                               ; preds = %12
  %15 = bitcast %"class.egl::Image"** %9 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 208
  %18 = bitcast i8* %17 to i32*
  %19 = load volatile i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %36

21:                                               ; preds = %14
  %22 = add nsw i32 %8, 1
  br label %23

23:                                               ; preds = %6, %12, %21
  %24 = phi i32 [ %22, %21 ], [ %8, %12 ], [ %8, %6 ]
  %25 = add nuw nsw i64 %7, 1
  %26 = icmp eq i64 %25, 14
  br i1 %26, label %27, label %6

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %4, 1
  %29 = icmp eq i64 %28, 6
  br i1 %29, label %30, label %3

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load volatile i32, i32* %31, align 8
  %33 = icmp eq i32 %24, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %"class.es2::TextureCubeMap"* %0 to %"class.gl::Object"*
  tail call void @_ZN2gl6Object7destroyEv(%"class.gl::Object"* %35) #14
  br label %36

36:                                               ; preds = %14, %30, %34
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es214TextureCubeMap9getTargetEv(%"class.es2::TextureCubeMap"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 34067
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es214TextureCubeMap8getWidthEji(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) unnamed_addr #1 align 2 {
  %4 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %5 = icmp ult i32 %2, 14
  br i1 %5, label %6, label %15

6:                                                ; preds = %3
  %7 = sext i32 %2 to i64
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %8, i32 0, i64 %7
  %10 = load %"class.egl::Image"*, %"class.egl::Image"** %9, align 8
  %11 = icmp eq %"class.egl::Image"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %10, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %3, %6, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %6 ], [ 0, %3 ]
  ret i32 %16
}

; Function Attrs: optsize
declare i32 @_ZN3es213CubeFaceIndexEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es214TextureCubeMap9getHeightEji(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) unnamed_addr #1 align 2 {
  %4 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %5 = icmp ult i32 %2, 14
  br i1 %5, label %6, label %15

6:                                                ; preds = %3
  %7 = sext i32 %2 to i64
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %8, i32 0, i64 %7
  %10 = load %"class.egl::Image"*, %"class.egl::Image"** %9, align 8
  %11 = icmp eq %"class.egl::Image"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %10, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %3, %6, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %6 ], [ 0, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es214TextureCubeMap9getFormatEji(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) unnamed_addr #1 align 2 {
  %4 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %5 = icmp ult i32 %2, 14
  br i1 %5, label %6, label %15

6:                                                ; preds = %3
  %7 = sext i32 %2 to i64
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %8, i32 0, i64 %7
  %10 = load %"class.egl::Image"*, %"class.egl::Image"** %9, align 8
  %11 = icmp eq %"class.egl::Image"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %10, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %3, %6, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %6 ], [ 0, %3 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3es214TextureCubeMap11getTopLevelEv(%"class.es2::TextureCubeMap"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 14
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %5, %13
  %8 = phi i64 [ %6, %5 ], [ %14, %13 ]
  %9 = phi i32 [ %3, %5 ], [ %15, %13 ]
  %10 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %8
  %11 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  %12 = icmp eq %"class.egl::Image"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = add nsw i64 %8, 1
  %15 = add nuw nsw i32 %9, 1
  %16 = trunc i64 %14 to i32
  %17 = icmp ult i32 %16, 14
  br i1 %17, label %7, label %20

18:                                               ; preds = %7
  %19 = trunc i64 %8 to i32
  br label %20

20:                                               ; preds = %13, %18, %1
  %21 = phi i32 [ %3, %1 ], [ %19, %18 ], [ %15, %13 ]
  %22 = add nsw i32 %21, -1
  ret i32 %22
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap16hasNonBaseLevelsEv(%"class.es2::TextureCubeMap"* nocapture readonly) unnamed_addr #6 align 2 {
  br label %2

2:                                                ; preds = %12, %1
  %3 = phi i64 [ 1, %1 ], [ %13, %12 ]
  br label %4

4:                                                ; preds = %2, %9
  %5 = phi i64 [ 0, %2 ], [ %10, %9 ]
  %6 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %5, i32 0, i64 %3
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = add nuw nsw i64 %5, 1
  %11 = icmp eq i64 %10, 6
  br i1 %11, label %12, label %4

12:                                               ; preds = %9
  %13 = add nuw nsw i64 %3, 1
  %14 = icmp eq i64 %13, 14
  br i1 %14, label %15, label %2

15:                                               ; preds = %12, %4
  %16 = phi i1 [ true, %4 ], [ false, %12 ]
  ret i1 %16
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap12requiresSyncEv(%"class.es2::TextureCubeMap"* nocapture readonly) unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %19, %1
  %3 = phi i64 [ 0, %1 ], [ %20, %19 ]
  br label %4

4:                                                ; preds = %2, %16
  %5 = phi i64 [ 0, %2 ], [ %17, %16 ]
  %6 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %5, i32 0, i64 %3
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.egl::Image"* %7 to %"class.sw::Surface"*
  %11 = bitcast %"class.egl::Image"* %7 to i1 (%"class.sw::Surface"*)***
  %12 = load i1 (%"class.sw::Surface"*)**, i1 (%"class.sw::Surface"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %12, i64 4
  %14 = load i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.sw::Surface"* nonnull %10) #14
  br i1 %15, label %22, label %16

16:                                               ; preds = %4, %9
  %17 = add nuw nsw i64 %5, 1
  %18 = icmp eq i64 %17, 6
  br i1 %18, label %19, label %4

19:                                               ; preds = %16
  %20 = add nuw nsw i64 %3, 1
  %21 = icmp eq i64 %20, 14
  br i1 %21, label %22, label %2

22:                                               ; preds = %19, %9
  %23 = phi i1 [ true, %9 ], [ false, %19 ]
  ret i1 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap18setCompressedImageEjijiiiPKv(%"class.es2::TextureCubeMap"*, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %9 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %10 = icmp ult i32 %2, 14
  br i1 %10, label %11, label %22

11:                                               ; preds = %8
  %12 = sext i32 %2 to i64
  %13 = sext i32 %9 to i64
  %14 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %13, i32 0, i64 %12
  %15 = load %"class.egl::Image"*, %"class.egl::Image"** %14, align 8
  %16 = icmp eq %"class.egl::Image"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.egl::Image"* %15 to void (%"class.egl::Image"*)***
  %19 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %19, i64 7
  %21 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %20, align 8
  tail call void %21(%"class.egl::Image"* nonnull %15) #14
  br label %25

22:                                               ; preds = %8
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %23 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %24 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %23, i32 %4, i32 %5, i32 1, i32 1, i32 %3) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %29

25:                                               ; preds = %11, %17
  %26 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %27 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %26, i32 %4, i32 %5, i32 1, i32 1, i32 %3) #14
  store %"class.egl::Image"* %27, %"class.egl::Image"** %14, align 8
  %28 = icmp eq %"class.egl::Image"* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %22, %25
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %32

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0
  tail call void @_ZN3es27Texture18setCompressedImageEiPKvPN3egl5ImageE(%"class.es2::Texture"* %31, i32 %6, i8* %7, %"class.egl::Image"* nonnull %27) #18
  br label %32

32:                                               ; preds = %30, %29
  ret void
}

; Function Attrs: optsize
declare %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"*, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap8subImageEjiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #1 align 2 {
  %12 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %13 = icmp ult i32 %2, 14
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = sext i32 %2 to i64
  %16 = sext i32 %12 to i64
  %17 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %16, i32 0, i64 %15
  %18 = load %"class.egl::Image"*, %"class.egl::Image"** %17, align 8
  br label %20

19:                                               ; preds = %11
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %20

20:                                               ; preds = %14, %19
  %21 = phi %"class.egl::Image"* [ %18, %14 ], [ null, %19 ]
  tail call void @_ZN3es27Texture8subImageEiiiiiijjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* undef, i32 %3, i32 %4, i32 0, i32 %5, i32 %6, i32 1, i32 %7, i32 %8, %"struct.gl::PixelStorageModes"* dereferenceable(24) %9, i8* %10, %"class.egl::Image"* %21) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap18subImageCompressedEjiiiiijiPKv(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %11 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %12 = icmp ult i32 %2, 14
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  %14 = sext i32 %2 to i64
  %15 = sext i32 %11 to i64
  %16 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %15, i32 0, i64 %14
  %17 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  br label %19

18:                                               ; preds = %10
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %19

19:                                               ; preds = %13, %18
  %20 = phi %"class.egl::Image"* [ %17, %13 ], [ null, %18 ]
  tail call void @_ZN3es27Texture18subImageCompressedEiiiiiijiPKvPN3egl5ImageE(%"class.es2::Texture"* undef, i32 %3, i32 %4, i32 0, i32 %5, i32 %6, i32 1, i32 undef, i32 %8, i8* %9, %"class.egl::Image"* %20) #18
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap18isBaseLevelDefinedEv(%"class.es2::TextureCubeMap"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 14
  %5 = sext i32 %3 to i64
  br label %8

6:                                                ; preds = %10
  %7 = icmp eq i64 %14, 6
  br i1 %7, label %15, label %8

8:                                                ; preds = %6, %1
  %9 = phi i64 [ 0, %1 ], [ %14, %6 ]
  br i1 %4, label %10, label %22

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %9, i32 0, i64 %5
  %12 = load %"class.egl::Image"*, %"class.egl::Image"** %11, align 8
  %13 = icmp eq %"class.egl::Image"* %12, null
  %14 = add nuw nsw i64 %9, 1
  br i1 %13, label %22, label %6

15:                                               ; preds = %6
  %16 = sext i32 %3 to i64
  %17 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %16
  %18 = load %"class.egl::Image"*, %"class.egl::Image"** %17, align 8
  %19 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br label %22

22:                                               ; preds = %8, %10, %15
  %23 = phi i1 [ %21, %15 ], [ false, %10 ], [ false, %8 ]
  ret i1 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap17isSamplerCompleteEPNS_7SamplerE(%"class.es2::TextureCubeMap"*, %"class.es2::Sampler"* readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 10
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.es2::TextureCubeMap"* %0 to i1 (%"class.es2::TextureCubeMap"*)***
  %8 = load i1 (%"class.es2::TextureCubeMap"*)**, i1 (%"class.es2::TextureCubeMap"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.es2::TextureCubeMap"*)*, i1 (%"class.es2::TextureCubeMap"*)** %8, i64 17
  %10 = load i1 (%"class.es2::TextureCubeMap"*)*, i1 (%"class.es2::TextureCubeMap"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.es2::TextureCubeMap"* %0) #14
  br i1 %11, label %12, label %25

12:                                               ; preds = %6
  %13 = icmp eq %"class.es2::Sampler"* %1, null
  %14 = getelementptr inbounds %"class.es2::Sampler", %"class.es2::Sampler"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 1
  %16 = select i1 %13, i32* %15, i32* %14
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, -4
  %19 = icmp eq i32 %18, 9984
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  %21 = tail call zeroext i1 @_ZNK3es214TextureCubeMap14isCubeCompleteEv(%"class.es2::TextureCubeMap"* %0) #18
  br i1 %21, label %24, label %25

22:                                               ; preds = %12
  %23 = tail call zeroext i1 @_ZNK3es214TextureCubeMap20isMipmapCubeCompleteEv(%"class.es2::TextureCubeMap"* %0) #18
  br i1 %23, label %24, label %25

24:                                               ; preds = %22, %20
  br label %25

25:                                               ; preds = %22, %20, %6, %2, %24
  %26 = phi i1 [ true, %24 ], [ true, %2 ], [ false, %6 ], [ false, %20 ], [ false, %22 ]
  ret i1 %26
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap14isCubeCompleteEv(%"class.es2::TextureCubeMap"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.es2::TextureCubeMap"* %0 to i1 (%"class.es2::TextureCubeMap"*)***
  %3 = load i1 (%"class.es2::TextureCubeMap"*)**, i1 (%"class.es2::TextureCubeMap"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.es2::TextureCubeMap"*)*, i1 (%"class.es2::TextureCubeMap"*)** %3, i64 17
  %5 = load i1 (%"class.es2::TextureCubeMap"*)*, i1 (%"class.es2::TextureCubeMap"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.es2::TextureCubeMap"* %0) #14
  br i1 %6, label %7, label %77

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = icmp ult i32 %9, 14
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %10
  %14 = load %"class.egl::Image"*, %"class.egl::Image"** %13, align 8
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi %"class.egl::Image"* [ %14, %12 ], [ null, %7 ]
  %17 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %77, label %20

20:                                               ; preds = %15
  br i1 %11, label %21, label %25

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %10
  %23 = load %"class.egl::Image"*, %"class.egl::Image"** %22, align 8
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %23, i64 0, i32 4
  br label %25

25:                                               ; preds = %20, %21
  %26 = phi i32* [ %24, %21 ], [ inttoptr (i64 216 to i32*), %20 ]
  %27 = phi %"class.egl::Image"* [ %23, %21 ], [ null, %20 ]
  %28 = load i32, i32* %26, align 8
  %29 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %27, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %77

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %10
  br label %36

34:                                               ; preds = %69
  %35 = icmp eq i64 %76, 6
  br i1 %35, label %77, label %36

36:                                               ; preds = %34, %32
  %37 = phi i64 [ 1, %32 ], [ %76, %34 ]
  br i1 %11, label %38, label %43

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %37, i32 0, i64 %10
  %40 = load %"class.egl::Image"*, %"class.egl::Image"** %39, align 8
  %41 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %40, i64 0, i32 3
  %42 = load %"class.egl::Image"*, %"class.egl::Image"** %33, align 8
  br label %43

43:                                               ; preds = %36, %38
  %44 = phi i32* [ %41, %38 ], [ inttoptr (i64 212 to i32*), %36 ]
  %45 = phi %"class.egl::Image"* [ %42, %38 ], [ null, %36 ]
  %46 = load i32, i32* %44, align 4
  %47 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %45, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %77

50:                                               ; preds = %43
  br i1 %11, label %51, label %56

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %37, i32 0, i64 %10
  %53 = load %"class.egl::Image"*, %"class.egl::Image"** %52, align 8
  %54 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %53, i64 0, i32 3
  %55 = load %"class.egl::Image"*, %"class.egl::Image"** %33, align 8
  br label %56

56:                                               ; preds = %50, %51
  %57 = phi i32* [ %54, %51 ], [ inttoptr (i64 212 to i32*), %50 ]
  %58 = phi %"class.egl::Image"* [ %55, %51 ], [ null, %50 ]
  %59 = load i32, i32* %57, align 4
  %60 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %58, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %77

63:                                               ; preds = %56
  br i1 %11, label %64, label %69

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %37, i32 0, i64 %10
  %66 = load %"class.egl::Image"*, %"class.egl::Image"** %65, align 8
  %67 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %66, i64 0, i32 6
  %68 = load %"class.egl::Image"*, %"class.egl::Image"** %33, align 8
  br label %69

69:                                               ; preds = %63, %64
  %70 = phi i32* [ %67, %64 ], [ inttoptr (i64 224 to i32*), %63 ]
  %71 = phi %"class.egl::Image"* [ %68, %64 ], [ null, %63 ]
  %72 = load i32, i32* %70, align 8
  %73 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %71, i64 0, i32 6
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %72, %74
  %76 = add nuw nsw i64 %37, 1
  br i1 %75, label %34, label %77

77:                                               ; preds = %43, %56, %69, %34, %1, %25, %15
  %78 = phi i1 [ false, %15 ], [ false, %25 ], [ false, %1 ], [ false, %43 ], [ false, %56 ], [ false, %69 ], [ true, %34 ]
  ret i1 %78
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap20isMipmapCubeCompleteEv(%"class.es2::TextureCubeMap"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 12
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %67, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZNK3es214TextureCubeMap14isCubeCompleteEv(%"class.es2::TextureCubeMap"* %0) #18
  br i1 %8, label %9, label %67

9:                                                ; preds = %7
  %10 = load i32, i32* %2, align 8
  %11 = sext i32 %10 to i64
  %12 = icmp ult i32 %10, 14
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %11
  %15 = load %"class.egl::Image"*, %"class.egl::Image"** %14, align 8
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi %"class.egl::Image"* [ %15, %13 ], [ null, %9 ]
  %18 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %20, %16
  %21 = phi i32 [ 0, %16 ], [ %24, %20 ]
  %22 = ashr i32 %19, %21
  %23 = icmp sgt i32 %22, 1
  %24 = add nuw nsw i32 %21, 1
  br i1 %23, label %20, label %25

25:                                               ; preds = %20
  %26 = add nsw i32 %21, %10
  %27 = load i32, i32* %4, align 4
  %28 = icmp slt i32 %27, %26
  %29 = select i1 %28, i32 %27, i32 %26
  %30 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %11
  %31 = sext i32 %29 to i64
  br label %32

32:                                               ; preds = %64, %25
  %33 = phi i64 [ 0, %25 ], [ %65, %64 ]
  br label %34

34:                                               ; preds = %32, %55
  %35 = phi i64 [ %11, %32 ], [ %36, %55 ]
  %36 = add nsw i64 %35, 1
  %37 = icmp slt i64 %35, %31
  br i1 %37, label %38, label %64

38:                                               ; preds = %34
  %39 = trunc i64 %36 to i32
  %40 = icmp ult i32 %39, 14
  br i1 %40, label %41, label %67

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %33, i32 0, i64 %36
  %43 = load %"class.egl::Image"*, %"class.egl::Image"** %42, align 8
  %44 = icmp eq %"class.egl::Image"* %43, null
  br i1 %44, label %67, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %43, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  br i1 %12, label %48, label %50

48:                                               ; preds = %45
  %49 = load %"class.egl::Image"*, %"class.egl::Image"** %30, align 8
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi %"class.egl::Image"* [ %49, %48 ], [ null, %45 ]
  %52 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %51, i64 0, i32 6
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %47, %53
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %43, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = trunc i64 %36 to i32
  %59 = sub i32 %58, %10
  %60 = ashr i32 %19, %59
  %61 = icmp sgt i32 %60, 1
  %62 = select i1 %61, i32 %60, i32 1
  %63 = icmp eq i32 %57, %62
  br i1 %63, label %34, label %67

64:                                               ; preds = %34
  %65 = add nuw nsw i64 %33, 1
  %66 = icmp eq i64 %65, 6
  br i1 %66, label %67, label %32

67:                                               ; preds = %64, %38, %55, %41, %50, %7, %1
  %68 = phi i1 [ false, %1 ], [ false, %7 ], [ false, %50 ], [ false, %41 ], [ false, %55 ], [ false, %38 ], [ true, %64 ]
  ret i1 %68
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap13updateBordersEi(%"class.es2::TextureCubeMap"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34069) #14
  %4 = sext i32 %1 to i64
  %5 = icmp ult i32 %1, 14
  br i1 %5, label %6, label %41

6:                                                ; preds = %2
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %7, i32 0, i64 %4
  %9 = load %"class.egl::Image"*, %"class.egl::Image"** %8, align 8
  %10 = bitcast %"class.egl::Image"* %9 to %"class.sw::Surface"*
  %11 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34070) #14
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %12, i32 0, i64 %4
  %14 = load %"class.egl::Image"*, %"class.egl::Image"** %13, align 8
  %15 = bitcast %"class.egl::Image"* %14 to %"class.sw::Surface"*
  %16 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34071) #14
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %17, i32 0, i64 %4
  %19 = load %"class.egl::Image"*, %"class.egl::Image"** %18, align 8
  %20 = bitcast %"class.egl::Image"* %19 to %"class.sw::Surface"*
  %21 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34072) #14
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %22, i32 0, i64 %4
  %24 = load %"class.egl::Image"*, %"class.egl::Image"** %23, align 8
  %25 = bitcast %"class.egl::Image"* %24 to %"class.sw::Surface"*
  %26 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34073) #14
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %27, i32 0, i64 %4
  %29 = load %"class.egl::Image"*, %"class.egl::Image"** %28, align 8
  %30 = bitcast %"class.egl::Image"* %29 to %"class.sw::Surface"*
  %31 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34074) #14
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %32, i32 0, i64 %4
  %34 = load %"class.egl::Image"*, %"class.egl::Image"** %33, align 8
  %35 = bitcast %"class.egl::Image"* %34 to %"class.sw::Surface"*
  %36 = icmp ne %"class.egl::Image"* %34, null
  %37 = icmp ne %"class.egl::Image"* %14, null
  %38 = icmp ne %"class.egl::Image"* %19, null
  %39 = icmp ne %"class.egl::Image"* %24, null
  %40 = icmp ne %"class.egl::Image"* %29, null
  br label %47

41:                                               ; preds = %2
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %42 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34070) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %43 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34071) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %44 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34072) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %45 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34073) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %46 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 34074) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %47

47:                                               ; preds = %6, %41
  %48 = phi i1 [ %40, %6 ], [ false, %41 ]
  %49 = phi %"class.sw::Surface"* [ %30, %6 ], [ null, %41 ]
  %50 = phi i1 [ %38, %6 ], [ false, %41 ]
  %51 = phi %"class.sw::Surface"* [ %20, %6 ], [ null, %41 ]
  %52 = phi %"class.egl::Image"* [ %9, %6 ], [ null, %41 ]
  %53 = phi %"class.sw::Surface"* [ %10, %6 ], [ null, %41 ]
  %54 = phi %"class.sw::Surface"* [ %15, %6 ], [ null, %41 ]
  %55 = phi i1 [ %37, %6 ], [ false, %41 ]
  %56 = phi %"class.sw::Surface"* [ %25, %6 ], [ null, %41 ]
  %57 = phi i1 [ %39, %6 ], [ false, %41 ]
  %58 = phi %"class.sw::Surface"* [ %35, %6 ], [ null, %41 ]
  %59 = phi i1 [ %36, %6 ], [ false, %41 ]
  %60 = icmp ne %"class.egl::Image"* %52, null
  %61 = and i1 %60, %55
  %62 = and i1 %61, %50
  %63 = and i1 %62, %57
  %64 = and i1 %63, %48
  %65 = and i1 %64, %59
  br i1 %65, label %66, label %83

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %52, i64 0, i32 0, i32 3, i32 4
  %68 = load i16, i16* %67, align 4
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = tail call zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"* nonnull %53) #14
  br i1 %71, label %72, label %83

72:                                               ; preds = %70
  %73 = tail call zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"* nonnull %51) #14
  br i1 %73, label %74, label %83

74:                                               ; preds = %72
  %75 = tail call zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"* nonnull %49) #14
  br i1 %75, label %76, label %83

76:                                               ; preds = %74
  %77 = tail call zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"* nonnull %54) #14
  br i1 %77, label %78, label %83

78:                                               ; preds = %76
  %79 = tail call zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"* nonnull %56) #14
  br i1 %79, label %80, label %83

80:                                               ; preds = %78
  %81 = tail call zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"* nonnull %58) #14
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %53, i32 1, %"class.sw::Surface"* nonnull %56, i32 2) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %51, i32 1, %"class.sw::Surface"* nonnull %49, i32 0) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %49, i32 1, %"class.sw::Surface"* nonnull %56, i32 0) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %54, i32 1, %"class.sw::Surface"* nonnull %56, i32 3) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %56, i32 1, %"class.sw::Surface"* nonnull %58, i32 1) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %58, i32 1, %"class.sw::Surface"* nonnull %56, i32 1) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %53, i32 0, %"class.sw::Surface"* nonnull %51, i32 2) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %51, i32 0, %"class.sw::Surface"* nonnull %58, i32 0) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %49, i32 0, %"class.sw::Surface"* nonnull %51, i32 1) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %54, i32 0, %"class.sw::Surface"* nonnull %51, i32 3) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %56, i32 0, %"class.sw::Surface"* nonnull %49, i32 1) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %58, i32 0, %"class.sw::Surface"* nonnull %51, i32 0) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %53, i32 2, %"class.sw::Surface"* nonnull %58, i32 3) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %51, i32 2, %"class.sw::Surface"* nonnull %53, i32 0) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %49, i32 2, %"class.sw::Surface"* nonnull %53, i32 3) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %54, i32 2, %"class.sw::Surface"* nonnull %49, i32 3) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %56, i32 2, %"class.sw::Surface"* nonnull %53, i32 1) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %58, i32 2, %"class.sw::Surface"* nonnull %54, i32 3) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %53, i32 3, %"class.sw::Surface"* nonnull %49, i32 2) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %51, i32 3, %"class.sw::Surface"* nonnull %54, i32 0) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %49, i32 3, %"class.sw::Surface"* nonnull %54, i32 2) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %54, i32 3, %"class.sw::Surface"* nonnull %58, i32 2) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %56, i32 3, %"class.sw::Surface"* nonnull %54, i32 1) #14
  tail call void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"* nonnull %58, i32 3, %"class.sw::Surface"* nonnull %53, i32 2) #14
  tail call void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"* nonnull %53) #14
  tail call void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"* nonnull %51) #14
  tail call void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"* nonnull %49) #14
  tail call void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"* nonnull %54) #14
  tail call void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"* nonnull %56) #14
  tail call void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"* nonnull %58) #14
  br label %83

83:                                               ; preds = %70, %72, %74, %76, %78, %80, %66, %47, %82
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Surface16hasDirtyContentsEv(%"class.sw::Surface"*) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2sw7Surface12copyCubeEdgeENS0_4EdgeEPS0_S1_(%"class.sw::Surface"*, i32, %"class.sw::Surface"*, i32) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2sw7Surface17markContentsCleanEv(%"class.sw::Surface"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap12isCompressedEji(%"class.es2::TextureCubeMap"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::TextureCubeMap"* %0 to i32 (%"class.es2::TextureCubeMap"*, i32, i32)***
  %5 = load i32 (%"class.es2::TextureCubeMap"*, i32, i32)**, i32 (%"class.es2::TextureCubeMap"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::TextureCubeMap"*, i32, i32)*, i32 (%"class.es2::TextureCubeMap"*, i32, i32)** %5, i64 13
  %7 = load i32 (%"class.es2::TextureCubeMap"*, i32, i32)*, i32 (%"class.es2::TextureCubeMap"*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::TextureCubeMap"* %0, i32 %1, i32 %2) #14
  %9 = tail call zeroext i1 @_ZN3es212IsCompressedEi(i32 %8) #14
  ret i1 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap7isDepthEji(%"class.es2::TextureCubeMap"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::TextureCubeMap"* %0 to i32 (%"class.es2::TextureCubeMap"*, i32, i32)***
  %5 = load i32 (%"class.es2::TextureCubeMap"*, i32, i32)**, i32 (%"class.es2::TextureCubeMap"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::TextureCubeMap"*, i32, i32)*, i32 (%"class.es2::TextureCubeMap"*, i32, i32)** %5, i64 13
  %7 = load i32 (%"class.es2::TextureCubeMap"*, i32, i32)*, i32 (%"class.es2::TextureCubeMap"*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::TextureCubeMap"* %0, i32 %1, i32 %2) #14
  %9 = tail call zeroext i1 @_ZN3es214IsDepthTextureEi(i32 %8) #14
  ret i1 %9
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3es214TextureCubeMap15releaseTexImageEv(%"class.es2::TextureCubeMap"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap8setImageEjiiiijjRKN2gl17PixelStorageModesEPKv(%"class.es2::TextureCubeMap"*, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #1 align 2 {
  %11 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %12 = icmp ult i32 %2, 14
  br i1 %12, label %13, label %24

13:                                               ; preds = %10
  %14 = sext i32 %2 to i64
  %15 = sext i32 %11 to i64
  %16 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %15, i32 0, i64 %14
  %17 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  %18 = icmp eq %"class.egl::Image"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.egl::Image"* %17 to void (%"class.egl::Image"*)***
  %21 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %21, i64 7
  %23 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %22, align 8
  tail call void %23(%"class.egl::Image"* nonnull %17) #14
  br label %27

24:                                               ; preds = %10
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %25 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %26 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %25, i32 %3, i32 %4, i32 1, i32 1, i32 %5) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %31

27:                                               ; preds = %13, %19
  %28 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %29 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %28, i32 %3, i32 %4, i32 1, i32 1, i32 %5) #14
  store %"class.egl::Image"* %29, %"class.egl::Image"** %16, align 8
  %30 = icmp eq %"class.egl::Image"* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %24, %27
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %34

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0
  tail call void @_ZN3es27Texture8setImageEjjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* %33, i32 %6, i32 %7, %"struct.gl::PixelStorageModes"* dereferenceable(24) %8, i8* %9, %"class.egl::Image"* nonnull %29) #18
  br label %34

34:                                               ; preds = %32, %31
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap9copyImageEjijiiiiPNS_12RenderbufferE(%"class.es2::TextureCubeMap"*, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*) local_unnamed_addr #1 align 2 {
  %10 = alloca %"struct.sw::SliceRectT", align 16
  %11 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %12 = icmp ult i32 %2, 14
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = sext i32 %2 to i64
  %15 = sext i32 %11 to i64
  %16 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %15, i32 0, i64 %14
  %17 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  %18 = icmp eq %"class.egl::Image"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.egl::Image"* %17 to void (%"class.egl::Image"*)***
  %21 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %21, i64 7
  %23 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %22, align 8
  tail call void %23(%"class.egl::Image"* nonnull %17) #14
  br label %27

24:                                               ; preds = %9
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %25 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %26 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %25, i32 %6, i32 %7, i32 1, i32 1, i32 %3) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %31

27:                                               ; preds = %13, %19
  %28 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %29 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %28, i32 %6, i32 %7, i32 1, i32 1, i32 %3) #14
  store %"class.egl::Image"* %29, %"class.egl::Image"** %16, align 8
  %30 = icmp eq %"class.egl::Image"* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %24, %27
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %64

32:                                               ; preds = %27
  %33 = icmp ne i32 %6, 0
  %34 = icmp ne i32 %7, 0
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %64

36:                                               ; preds = %32
  %37 = tail call %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"* %8) #14
  %38 = icmp eq %"class.egl::Image"* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %64

40:                                               ; preds = %36
  %41 = bitcast %"struct.sw::SliceRectT"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %10, i64 0, i32 1
  %43 = add nsw i32 %6, %4
  %44 = add nsw i32 %7, %5
  store i32 0, i32* %42, align 16
  %45 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %37, i64 0, i32 3
  %46 = bitcast i32* %45 to <2 x i32>*
  %47 = load <2 x i32>, <2 x i32>* %46, align 4
  %48 = shufflevector <2 x i32> %47, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %49 = insertelement <4 x i32> undef, i32 %4, i32 0
  %50 = insertelement <4 x i32> %49, i32 %5, i32 1
  %51 = insertelement <4 x i32> %50, i32 %43, i32 2
  %52 = insertelement <4 x i32> %51, i32 %44, i32 3
  %53 = icmp sgt <4 x i32> %52, zeroinitializer
  %54 = select <4 x i1> %53, <4 x i32> %52, <4 x i32> zeroinitializer
  %55 = icmp sgt <4 x i32> %54, %48
  %56 = select <4 x i1> %55, <4 x i32> %48, <4 x i32> %54
  %57 = bitcast %"struct.sw::SliceRectT"* %10 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %57, align 16
  %58 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  %59 = call zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* undef, %"class.egl::Image"* nonnull %37, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %10, i32 0, i32 0, i32 0, %"class.egl::Image"* %58) #18
  %60 = bitcast %"class.egl::Image"* %37 to void (%"class.egl::Image"*)***
  %61 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %61, i64 7
  %63 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %62, align 8
  tail call void %63(%"class.egl::Image"* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %41) #17
  br label %64

64:                                               ; preds = %32, %40, %39, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es214TextureCubeMap8getImageEij(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) local_unnamed_addr #7 align 2 {
  %4 = icmp ult i32 %2, 14
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = zext i32 %2 to i64
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %7, i32 0, i64 %6
  %9 = load %"class.egl::Image"*, %"class.egl::Image"** %8, align 8
  br label %11

10:                                               ; preds = %3
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %11

11:                                               ; preds = %5, %10
  %12 = phi %"class.egl::Image"* [ %9, %5 ], [ null, %10 ]
  ret %"class.egl::Image"* %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es214TextureCubeMap8getImageEjj(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %5 = icmp ult i32 %2, 14
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = zext i32 %2 to i64
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %8, i32 0, i64 %7
  %10 = load %"class.egl::Image"*, %"class.egl::Image"** %9, align 8
  br label %12

11:                                               ; preds = %3
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %12

12:                                               ; preds = %6, %11
  %13 = phi %"class.egl::Image"* [ %10, %6 ], [ null, %11 ]
  ret %"class.egl::Image"* %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap12copySubImageEjiiiiiiiiPNS_12RenderbufferE(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*) unnamed_addr #1 align 2 {
  %12 = alloca %"struct.sw::SliceRectT", align 16
  %13 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %14 = icmp ult i32 %2, 14
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %22

16:                                               ; preds = %11
  %17 = sext i32 %2 to i64
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %18, i32 0, i64 %17
  %20 = load %"class.egl::Image"*, %"class.egl::Image"** %19, align 8
  %21 = icmp eq %"class.egl::Image"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %15, %16
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %66

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %20, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %8, %3
  %27 = icmp sgt i32 %26, %25
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = add nsw i32 %9, %4
  %30 = icmp sgt i32 %29, %25
  %31 = icmp ne i32 %5, 0
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %34

33:                                               ; preds = %28, %23
  tail call void @_ZN3es25errorEj(i32 1281) #14
  br label %66

34:                                               ; preds = %28
  %35 = icmp sgt i32 %8, 0
  %36 = icmp sgt i32 %9, 0
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %66

38:                                               ; preds = %34
  %39 = tail call %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"* %10) #14
  %40 = icmp eq %"class.egl::Image"* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %66

42:                                               ; preds = %38
  %43 = bitcast %"struct.sw::SliceRectT"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43) #17
  %44 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %12, i64 0, i32 1
  %45 = add nsw i32 %8, %6
  %46 = add nsw i32 %9, %7
  store i32 0, i32* %44, align 16
  %47 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %39, i64 0, i32 3
  %48 = bitcast i32* %47 to <2 x i32>*
  %49 = load <2 x i32>, <2 x i32>* %48, align 4
  %50 = shufflevector <2 x i32> %49, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %51 = insertelement <4 x i32> undef, i32 %6, i32 0
  %52 = insertelement <4 x i32> %51, i32 %7, i32 1
  %53 = insertelement <4 x i32> %52, i32 %45, i32 2
  %54 = insertelement <4 x i32> %53, i32 %46, i32 3
  %55 = icmp sgt <4 x i32> %54, zeroinitializer
  %56 = select <4 x i1> %55, <4 x i32> %54, <4 x i32> zeroinitializer
  %57 = icmp sgt <4 x i32> %56, %50
  %58 = select <4 x i1> %57, <4 x i32> %50, <4 x i32> %56
  %59 = bitcast %"struct.sw::SliceRectT"* %12 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %59, align 16
  %60 = load %"class.egl::Image"*, %"class.egl::Image"** %19, align 8
  %61 = call zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* undef, %"class.egl::Image"* nonnull %39, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %12, i32 %3, i32 %4, i32 0, %"class.egl::Image"* %60) #18
  %62 = bitcast %"class.egl::Image"* %39 to void (%"class.egl::Image"*)***
  %63 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %63, i64 7
  %65 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %64, align 8
  tail call void %65(%"class.egl::Image"* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43) #17
  br label %66

66:                                               ; preds = %33, %41, %42, %34, %22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214TextureCubeMap15generateMipmapsEv(%"class.es2::TextureCubeMap"*) unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZNK3es214TextureCubeMap14isCubeCompleteEv(%"class.es2::TextureCubeMap"* %0) #18
  br i1 %2, label %3, label %110

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 14
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 0, i32 0, i64 %8
  %10 = load %"class.egl::Image"*, %"class.egl::Image"** %9, align 8
  br label %12

11:                                               ; preds = %3
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %12

12:                                               ; preds = %7, %11
  %13 = phi %"class.egl::Image"* [ %10, %7 ], [ null, %11 ]
  %14 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %16, %12
  %17 = phi i32 [ 0, %12 ], [ %20, %16 ]
  %18 = ashr i32 %15, %17
  %19 = icmp sgt i32 %18, 1
  %20 = add nuw nsw i32 %17, 1
  br i1 %19, label %16, label %21

21:                                               ; preds = %16
  %22 = add nsw i32 %17, %5
  %23 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 12
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %22
  %26 = select i1 %25, i32 %24, i32 %22
  %27 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0
  %28 = sext i32 %26 to i64
  br label %29

29:                                               ; preds = %108, %21
  %30 = phi i32 [ %5, %21 ], [ %109, %108 ]
  %31 = phi i64 [ 0, %21 ], [ %106, %108 ]
  %32 = icmp ult i32 %30, 14
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %34

34:                                               ; preds = %29, %33
  %35 = icmp slt i32 %30, %26
  br i1 %35, label %36, label %105

36:                                               ; preds = %34
  %37 = sext i32 %30 to i64
  br label %38

38:                                               ; preds = %36, %99
  %39 = phi i64 [ %37, %36 ], [ %40, %99 ]
  %40 = add nsw i64 %39, 1
  %41 = trunc i64 %40 to i32
  %42 = icmp ult i32 %41, 14
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %53

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %31, i32 0, i64 %40
  %46 = load %"class.egl::Image"*, %"class.egl::Image"** %45, align 8
  %47 = icmp eq %"class.egl::Image"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.egl::Image"* %46 to void (%"class.egl::Image"*)***
  %50 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %50, i64 7
  %52 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %51, align 8
  tail call void %52(%"class.egl::Image"* nonnull %46) #14
  br label %53

53:                                               ; preds = %43, %44, %48
  %54 = load i32, i32* %4, align 8
  %55 = icmp ult i32 %54, 14
  br i1 %55, label %56, label %70

56:                                               ; preds = %53
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %31, i32 0, i64 %57
  %59 = load %"class.egl::Image"*, %"class.egl::Image"** %58, align 8
  %60 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = ashr i32 %61, %41
  %63 = icmp sgt i32 %62, 1
  %64 = select i1 %63, i32 %62, i32 1
  %65 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %59, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = ashr i32 %66, %41
  %68 = icmp sgt i32 %67, 1
  %69 = select i1 %68, i32 %67, i32 1
  br label %79

70:                                               ; preds = %53
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %71 = load i32, i32* inttoptr (i64 212 to i32*), align 4
  %72 = ashr i32 %71, %41
  %73 = icmp sgt i32 %72, 1
  %74 = select i1 %73, i32 %72, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %75 = load i32, i32* inttoptr (i64 216 to i32*), align 8
  %76 = ashr i32 %75, %41
  %77 = icmp sgt i32 %76, 1
  %78 = select i1 %77, i32 %76, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %79

79:                                               ; preds = %56, %70
  %80 = phi %"class.egl::Image"* [ %59, %56 ], [ null, %70 ]
  %81 = phi i32 [ %69, %56 ], [ %78, %70 ]
  %82 = phi i32 [ %64, %56 ], [ %74, %70 ]
  %83 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %80, i64 0, i32 6
  %84 = load i32, i32* %83, align 8
  %85 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %27, i32 %82, i32 %81, i32 1, i32 1, i32 %84) #14
  br i1 %42, label %87, label %86

86:                                               ; preds = %79
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %110

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %31, i32 0, i64 %40
  store %"class.egl::Image"* %85, %"class.egl::Image"** %88, align 8
  %89 = icmp eq %"class.egl::Image"* %85, null
  br i1 %89, label %110, label %90

90:                                               ; preds = %87
  %91 = tail call %"class.es2::Device"* @_ZN3es29getDeviceEv() #14
  %92 = trunc i64 %39 to i32
  %93 = icmp ult i32 %92, 14
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %31, i32 0, i64 %39
  %96 = bitcast %"class.egl::Image"** %95 to %"class.sw::Surface"**
  %97 = load %"class.sw::Surface"*, %"class.sw::Surface"** %96, align 8
  br label %99

98:                                               ; preds = %90
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %99

99:                                               ; preds = %94, %98
  %100 = phi %"class.sw::Surface"* [ %97, %94 ], [ null, %98 ]
  %101 = bitcast %"class.egl::Image"** %88 to %"class.sw::Surface"**
  %102 = load %"class.sw::Surface"*, %"class.sw::Surface"** %101, align 8
  %103 = tail call zeroext i1 @_ZN3es26Device11stretchRectEPN2sw7SurfaceEPKNS1_10SliceRectTIfEES3_PKNS4_IiEEh(%"class.es2::Device"* %91, %"class.sw::Surface"* %100, %"struct.sw::SliceRectT.40"* null, %"class.sw::Surface"* %102, %"struct.sw::SliceRectT"* null, i8 zeroext 15) #14
  %104 = icmp slt i64 %40, %28
  br i1 %104, label %38, label %105

105:                                              ; preds = %99, %34
  %106 = add nuw nsw i64 %31, 1
  %107 = icmp eq i64 %106, 6
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = load i32, i32* %4, align 8
  br label %29

110:                                              ; preds = %87, %86, %1
  %111 = phi i32 [ 1282, %1 ], [ 1285, %86 ], [ 1285, %87 ]
  tail call void @_ZN3es25errorEj(i32 %111) #14
  br label %112

112:                                              ; preds = %105, %110
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.es2::Renderbuffer"* @_ZN3es214TextureCubeMap15getRenderbufferEji(%"class.es2::TextureCubeMap"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = tail call zeroext i1 @_ZN3es222IsCubemapTextureTargetEj(i32 %1) #14
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %23

6:                                                ; preds = %3
  %7 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 2, i64 %8
  %10 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %9, align 8
  %11 = icmp eq %"class.es2::Renderbuffer"* %10, null
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = tail call i8* @_Znwm(i64 24) #15
  %14 = bitcast i8* %13 to %"class.es2::Renderbuffer"*
  %15 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = tail call i8* @_Znwm(i64 24) #15
  %18 = bitcast i8* %17 to %"class.es2::RenderbufferTextureCubeMap"*
  tail call void @_ZN3es226RenderbufferTextureCubeMapC1EPNS_14TextureCubeMapEji(%"class.es2::RenderbufferTextureCubeMap"* nonnull %18, %"class.es2::TextureCubeMap"* %0, i32 %1, i32 %2) #14
  %19 = bitcast i8* %17 to %"class.es2::RenderbufferInterface"*
  tail call void @_ZN3es212RenderbufferC1EjPNS_21RenderbufferInterfaceE(%"class.es2::Renderbuffer"* nonnull %14, i32 %16, %"class.es2::RenderbufferInterface"* nonnull %19) #14
  %20 = bitcast %"class.es2::Renderbuffer"** %9 to i8**
  store i8* %13, i8** %20, align 8
  br label %23

21:                                               ; preds = %6
  tail call void @_ZN3es212Renderbuffer8setLevelEi(%"class.es2::Renderbuffer"* nonnull %10, i32 %2) #14
  %22 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %9, align 8
  br label %23

23:                                               ; preds = %12, %21, %5
  %24 = phi %"class.es2::Renderbuffer"* [ null, %5 ], [ %22, %21 ], [ %14, %12 ]
  ret %"class.es2::Renderbuffer"* %24
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3es222IsCubemapTextureTargetEj(i32) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN3es226RenderbufferTextureCubeMapC1EPNS_14TextureCubeMapEji(%"class.es2::RenderbufferTextureCubeMap"*, %"class.es2::TextureCubeMap"*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es214TextureCubeMap15getRenderTargetEjj(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) unnamed_addr #1 align 2 {
  %4 = tail call zeroext i1 @_ZN3es222IsCubemapTextureTargetEj(i32 %1) #14
  %5 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %6 = icmp ult i32 %2, 14
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = zext i32 %2 to i64
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %9, i32 0, i64 %8
  %11 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  %12 = icmp eq %"class.egl::Image"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %11, i64 0, i32 2
  %15 = bitcast %"class.gl::Object.base"* %14 to %"class.gl::Object"*
  %16 = bitcast %"class.gl::Object.base"* %14 to void (%"class.gl::Object"*)***
  %17 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %16, align 8
  %18 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %17, align 8
  tail call void %18(%"class.gl::Object"* %15) #14
  %19 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  br label %21

20:                                               ; preds = %3
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %21

21:                                               ; preds = %13, %7, %20
  %22 = phi %"class.egl::Image"* [ null, %20 ], [ null, %7 ], [ %19, %13 ]
  ret %"class.egl::Image"* %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es214TextureCubeMap8isSharedEjj(%"class.es2::TextureCubeMap"* nocapture readonly, i32, i32) unnamed_addr #1 align 2 {
  %4 = tail call zeroext i1 @_ZN3es222IsCubemapTextureTargetEj(i32 %1) #14
  %5 = tail call i32 @_ZN3es213CubeFaceIndexEj(i32 %1) #14
  %6 = icmp ult i32 %2, 14
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = zext i32 %2 to i64
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds %"class.es2::TextureCubeMap", %"class.es2::TextureCubeMap"* %0, i64 0, i32 1, i64 %9, i32 0, i64 %8
  %11 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  %12 = icmp eq %"class.egl::Image"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %11, i64 0, i32 7
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp ne i8 %15, 0
  br label %17

17:                                               ; preds = %3, %7, %13
  %18 = phi i1 [ %16, %13 ], [ false, %7 ], [ false, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3DC2Ej(%"class.es2::Texture3D"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0
  tail call void @_ZN3es27TextureC2Ej(%"class.es2::Texture"* %3, i32 %1) #18
  %4 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es29Texture3DE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1
  %6 = bitcast %"class.es2::ImageLevels"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 132, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3DD2Ev(%"class.es2::Texture3D"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es29Texture3DE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  br label %4

4:                                                ; preds = %10, %1
  %5 = phi i64 [ 0, %1 ], [ %11, %10 ]
  %6 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void @_ZN3egl5Image6unbindEPKNS_7TextureE(%"class.egl::Image"* nonnull %7, %"class.egl::Texture"* %3) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** %6, align 8
  br label %10

10:                                               ; preds = %9, %4
  %11 = add nuw nsw i64 %5, 1
  %12 = icmp eq i64 %11, 14
  br i1 %12, label %13, label %4

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 2
  %15 = load %"class.gl::Surface"*, %"class.gl::Surface"** %14, align 8
  %16 = icmp eq %"class.gl::Surface"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.gl::Surface"* %15 to void (%"class.gl::Surface"*, %"class.egl::Texture"*)***
  %19 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)**, void (%"class.gl::Surface"*, %"class.egl::Texture"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %19, i64 7
  %21 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %20, align 8
  tail call void %21(%"class.gl::Surface"* nonnull %15, %"class.egl::Texture"* null) #14
  store %"class.gl::Surface"* null, %"class.gl::Surface"** %14, align 8
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 3
  store %"class.es2::Renderbuffer"* null, %"class.es2::Renderbuffer"** %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es27TextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %24 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 19
  %25 = load %"class.sw::Resource"*, %"class.sw::Resource"** %24, align 8
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* %25) #14
  %26 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %26) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3DD0Ev(%"class.es2::Texture3D"*) unnamed_addr #1 align 2 {
  tail call void @_ZN3es29Texture3DD2Ev(%"class.es2::Texture3D"* %0) #14
  %2 = bitcast %"class.es2::Texture3D"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D11addProxyRefEPKNS_12RenderbufferE(%"class.es2::Texture3D"* nocapture, %"class.es2::Renderbuffer"* nocapture readnone) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D12releaseProxyEPKNS_12RenderbufferE(%"class.es2::Texture3D"* nocapture, %"class.es2::Renderbuffer"* nocapture readnone) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = add i32 %4, -1
  store i32 %7, i32* %3, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 3
  store %"class.es2::Renderbuffer"* null, %"class.es2::Renderbuffer"** %10, align 8
  br label %11

11:                                               ; preds = %9, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D5sweepEv(%"class.es2::Texture3D"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  br label %3

3:                                                ; preds = %20, %1
  %4 = phi i64 [ 0, %1 ], [ %22, %20 ]
  %5 = phi i32 [ 0, %1 ], [ %21, %20 ]
  %6 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %4
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK3egl5Image9isChildOfEPKNS_7TextureE(%"class.egl::Image"* nonnull %7, %"class.egl::Texture"* %2) #14
  br i1 %10, label %11, label %20

11:                                               ; preds = %9
  %12 = bitcast %"class.egl::Image"** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 208
  %15 = bitcast i8* %14 to i32*
  %16 = load volatile i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %30

18:                                               ; preds = %11
  %19 = add nsw i32 %5, 1
  br label %20

20:                                               ; preds = %3, %9, %18
  %21 = phi i32 [ %19, %18 ], [ %5, %9 ], [ %5, %3 ]
  %22 = add nuw nsw i64 %4, 1
  %23 = icmp eq i64 %22, 14
  br i1 %23, label %24, label %3

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load volatile i32, i32* %25, align 8
  %27 = icmp eq i32 %21, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.es2::Texture3D"* %0 to %"class.gl::Object"*
  tail call void @_ZN2gl6Object7destroyEv(%"class.gl::Object"* %29) #14
  br label %30

30:                                               ; preds = %11, %24, %28
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es29Texture3D9getTargetEv(%"class.es2::Texture3D"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 32879
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture3D8getWidthEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture3D9getHeightEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture3D8getDepthEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3es29Texture3D9getFormatEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %10 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3es29Texture3D11getTopLevelEv(%"class.es2::Texture3D"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 14
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %5, %13
  %8 = phi i64 [ %6, %5 ], [ %14, %13 ]
  %9 = phi i32 [ %3, %5 ], [ %15, %13 ]
  %10 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %8
  %11 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  %12 = icmp eq %"class.egl::Image"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = add nsw i64 %8, 1
  %15 = add nuw nsw i32 %9, 1
  %16 = trunc i64 %14 to i32
  %17 = icmp ult i32 %16, 14
  br i1 %17, label %7, label %20

18:                                               ; preds = %7
  %19 = trunc i64 %8 to i32
  br label %20

20:                                               ; preds = %13, %18, %1
  %21 = phi i32 [ %3, %1 ], [ %19, %18 ], [ %15, %13 ]
  %22 = add nsw i32 %21, -1
  ret i32 %22
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D16hasNonBaseLevelsEv(%"class.es2::Texture3D"* nocapture readonly) unnamed_addr #6 align 2 {
  br label %4

2:                                                ; preds = %4
  %3 = icmp eq i64 %9, 14
  br i1 %3, label %10, label %4

4:                                                ; preds = %2, %1
  %5 = phi i64 [ 1, %1 ], [ %9, %2 ]
  %6 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  %9 = add nuw nsw i64 %5, 1
  br i1 %8, label %2, label %10

10:                                               ; preds = %2, %4
  %11 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D12requiresSyncEv(%"class.es2::Texture3D"* nocapture readonly) unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %14, %1
  %3 = phi i64 [ 0, %1 ], [ %15, %14 ]
  %4 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %3
  %5 = load %"class.egl::Image"*, %"class.egl::Image"** %4, align 8
  %6 = icmp eq %"class.egl::Image"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.egl::Image"* %5 to %"class.sw::Surface"*
  %9 = bitcast %"class.egl::Image"* %5 to i1 (%"class.sw::Surface"*)***
  %10 = load i1 (%"class.sw::Surface"*)**, i1 (%"class.sw::Surface"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %10, i64 4
  %12 = load i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.sw::Surface"* nonnull %8) #14
  br i1 %13, label %17, label %14

14:                                               ; preds = %2, %7
  %15 = add nuw nsw i64 %3, 1
  %16 = icmp eq i64 %15, 14
  br i1 %16, label %17, label %2

17:                                               ; preds = %14, %7
  %18 = phi i1 [ true, %7 ], [ false, %14 ]
  ret i1 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D8setImageEiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.es2::Texture3D"*, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #1 align 2 {
  %11 = icmp ult i32 %1, 14
  br i1 %11, label %12, label %22

12:                                               ; preds = %10
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %13
  %15 = load %"class.egl::Image"*, %"class.egl::Image"** %14, align 8
  %16 = icmp eq %"class.egl::Image"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.egl::Image"* %15 to void (%"class.egl::Image"*)***
  %19 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %19, i64 7
  %21 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %20, align 8
  tail call void %21(%"class.egl::Image"* nonnull %15) #14
  br label %25

22:                                               ; preds = %10
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %23 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %24 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %23, i32 %2, i32 %3, i32 %4, i32 0, i32 %5) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %29

25:                                               ; preds = %12, %17
  %26 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %27 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %26, i32 %2, i32 %3, i32 %4, i32 0, i32 %5) #14
  store %"class.egl::Image"* %27, %"class.egl::Image"** %14, align 8
  %28 = icmp eq %"class.egl::Image"* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %22, %25
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %32

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0
  tail call void @_ZN3es27Texture8setImageEjjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* %31, i32 %6, i32 %7, %"struct.gl::PixelStorageModes"* dereferenceable(24) %8, i8* %9, %"class.egl::Image"* nonnull %27) #18
  br label %32

32:                                               ; preds = %30, %29
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3es29Texture3D15releaseTexImageEv(%"class.es2::Texture3D"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D18setCompressedImageEijiiiiPKv(%"class.es2::Texture3D"*, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %9 = icmp ult i32 %1, 14
  br i1 %9, label %10, label %20

10:                                               ; preds = %8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.egl::Image"* %13 to void (%"class.egl::Image"*)***
  %17 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %17, i64 7
  %19 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %18, align 8
  tail call void %19(%"class.egl::Image"* nonnull %13) #14
  br label %23

20:                                               ; preds = %8
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %21 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %22 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %21, i32 %3, i32 %4, i32 %5, i32 0, i32 %2) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %27

23:                                               ; preds = %10, %15
  %24 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %25 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %24, i32 %3, i32 %4, i32 %5, i32 0, i32 %2) #14
  store %"class.egl::Image"* %25, %"class.egl::Image"** %12, align 8
  %26 = icmp eq %"class.egl::Image"* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %20, %23
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0
  tail call void @_ZN3es27Texture18setCompressedImageEiPKvPN3egl5ImageE(%"class.es2::Texture"* %29, i32 %6, i8* %7, %"class.egl::Image"* nonnull %25) #18
  br label %30

30:                                               ; preds = %28, %27
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D8subImageEiiiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.es2::Texture3D"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* dereferenceable(24), i8*) local_unnamed_addr #1 align 2 {
  %13 = icmp ult i32 %1, 14
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %15
  %17 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  br label %19

18:                                               ; preds = %12
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %19

19:                                               ; preds = %14, %18
  %20 = phi %"class.egl::Image"* [ %17, %14 ], [ null, %18 ]
  tail call void @_ZN3es27Texture8subImageEiiiiiijjRKN2gl17PixelStorageModesEPKvPN3egl5ImageE(%"class.es2::Texture"* undef, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, %"struct.gl::PixelStorageModes"* dereferenceable(24) %10, i8* %11, %"class.egl::Image"* %20) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D18subImageCompressedEiiiiiiijiPKv(%"class.es2::Texture3D"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %12 = icmp ult i32 %1, 14
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %14
  %16 = load %"class.egl::Image"*, %"class.egl::Image"** %15, align 8
  br label %18

17:                                               ; preds = %11
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %18

18:                                               ; preds = %13, %17
  %19 = phi %"class.egl::Image"* [ %16, %13 ], [ null, %17 ]
  tail call void @_ZN3es27Texture18subImageCompressedEiiiiiijiPKvPN3egl5ImageE(%"class.es2::Texture"* undef, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 undef, i32 %9, i8* %10, %"class.egl::Image"* %19) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D9copyImageEijiiiiiiPNS_12RenderbufferE(%"class.es2::Texture3D"*, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*) local_unnamed_addr #1 align 2 {
  %11 = alloca %"struct.sw::SliceRectT", align 16
  %12 = icmp ult i32 %1, 14
  br i1 %12, label %13, label %23

13:                                               ; preds = %10
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %14
  %16 = load %"class.egl::Image"*, %"class.egl::Image"** %15, align 8
  %17 = icmp eq %"class.egl::Image"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.egl::Image"* %16 to void (%"class.egl::Image"*)***
  %20 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %20, i64 7
  %22 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %21, align 8
  tail call void %22(%"class.egl::Image"* nonnull %16) #14
  br label %26

23:                                               ; preds = %10
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %24 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %25 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %24, i32 %6, i32 %7, i32 %8, i32 0, i32 %2) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %30

26:                                               ; preds = %13, %18
  %27 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %28 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %27, i32 %6, i32 %7, i32 %8, i32 0, i32 %2) #14
  store %"class.egl::Image"* %28, %"class.egl::Image"** %15, align 8
  %29 = icmp eq %"class.egl::Image"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %23, %26
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %73

31:                                               ; preds = %26
  %32 = icmp ne i32 %6, 0
  %33 = icmp ne i32 %7, 0
  %34 = and i1 %32, %33
  %35 = icmp ne i32 %8, 0
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %73

37:                                               ; preds = %31
  %38 = tail call %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"* %9) #14
  %39 = icmp eq %"class.egl::Image"* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %73

41:                                               ; preds = %37
  %42 = bitcast %"struct.sw::SliceRectT"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %42) #17
  %43 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %11, i64 0, i32 1
  %44 = add nsw i32 %6, %3
  %45 = add nsw i32 %7, %4
  store i32 %5, i32* %43, align 16
  %46 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %38, i64 0, i32 3
  %47 = bitcast i32* %46 to <2 x i32>*
  %48 = load <2 x i32>, <2 x i32>* %47, align 4
  %49 = shufflevector <2 x i32> %48, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %50 = insertelement <4 x i32> undef, i32 %3, i32 0
  %51 = insertelement <4 x i32> %50, i32 %4, i32 1
  %52 = insertelement <4 x i32> %51, i32 %44, i32 2
  %53 = insertelement <4 x i32> %52, i32 %45, i32 3
  %54 = icmp sgt <4 x i32> %53, zeroinitializer
  %55 = select <4 x i1> %54, <4 x i32> %53, <4 x i32> zeroinitializer
  %56 = icmp sgt <4 x i32> %55, %49
  %57 = select <4 x i1> %56, <4 x i32> %49, <4 x i32> %55
  %58 = bitcast %"struct.sw::SliceRectT"* %11 to <4 x i32>*
  store <4 x i32> %57, <4 x i32>* %58, align 16
  %59 = icmp sgt i32 %8, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %65, %41
  %61 = bitcast %"class.egl::Image"* %38 to void (%"class.egl::Image"*)***
  %62 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %62, i64 7
  %64 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %63, align 8
  tail call void %64(%"class.egl::Image"* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %42) #17
  br label %73

65:                                               ; preds = %41, %65
  %66 = phi i32 [ %71, %65 ], [ %5, %41 ]
  %67 = phi i32 [ %70, %65 ], [ 0, %41 ]
  %68 = load %"class.egl::Image"*, %"class.egl::Image"** %15, align 8
  %69 = call zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* undef, %"class.egl::Image"* nonnull %38, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %11, i32 0, i32 0, i32 %67, %"class.egl::Image"* %68) #18
  %70 = add nuw nsw i32 %67, 1
  %71 = add nsw i32 %66, 1
  store i32 %71, i32* %43, align 16
  %72 = icmp eq i32 %70, %8
  br i1 %72, label %60, label %65

73:                                               ; preds = %31, %30, %60, %40
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D12copySubImageEjiiiiiiiiPNS_12RenderbufferE(%"class.es2::Texture3D"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.es2::Renderbuffer"*) unnamed_addr #1 align 2 {
  %12 = alloca %"struct.sw::SliceRectT", align 16
  %13 = icmp ult i32 %2, 14
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %20

15:                                               ; preds = %11
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %16
  %18 = load %"class.egl::Image"*, %"class.egl::Image"** %17, align 8
  %19 = icmp eq %"class.egl::Image"* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %14, %15
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %68

21:                                               ; preds = %15
  %22 = add nsw i32 %8, %3
  %23 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %18, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %35, label %26

26:                                               ; preds = %21
  %27 = add nsw i32 %9, %4
  %28 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %18, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %27, %29
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %18, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, %5
  br i1 %34, label %36, label %35

35:                                               ; preds = %31, %26, %21
  tail call void @_ZN3es25errorEj(i32 1281) #14
  br label %68

36:                                               ; preds = %31
  %37 = icmp sgt i32 %8, 0
  %38 = icmp sgt i32 %9, 0
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %68

40:                                               ; preds = %36
  %41 = tail call %"class.egl::Image"* @_ZN3es212Renderbuffer15getRenderTargetEv(%"class.es2::Renderbuffer"* %10) #14
  %42 = icmp eq %"class.egl::Image"* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %68

44:                                               ; preds = %40
  %45 = bitcast %"struct.sw::SliceRectT"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %45) #17
  %46 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %12, i64 0, i32 1
  %47 = add nsw i32 %8, %6
  %48 = add nsw i32 %9, %7
  store i32 0, i32* %46, align 16
  %49 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %41, i64 0, i32 3
  %50 = bitcast i32* %49 to <2 x i32>*
  %51 = load <2 x i32>, <2 x i32>* %50, align 4
  %52 = shufflevector <2 x i32> %51, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %53 = insertelement <4 x i32> undef, i32 %6, i32 0
  %54 = insertelement <4 x i32> %53, i32 %7, i32 1
  %55 = insertelement <4 x i32> %54, i32 %47, i32 2
  %56 = insertelement <4 x i32> %55, i32 %48, i32 3
  %57 = icmp sgt <4 x i32> %56, zeroinitializer
  %58 = select <4 x i1> %57, <4 x i32> %56, <4 x i32> zeroinitializer
  %59 = icmp sgt <4 x i32> %58, %52
  %60 = select <4 x i1> %59, <4 x i32> %52, <4 x i32> %58
  %61 = bitcast %"struct.sw::SliceRectT"* %12 to <4 x i32>*
  store <4 x i32> %60, <4 x i32>* %61, align 16
  %62 = load %"class.egl::Image"*, %"class.egl::Image"** %17, align 8
  %63 = call zeroext i1 @_ZN3es27Texture4copyEPN3egl5ImageERKN2sw10SliceRectTIiEEiiiS3_(%"class.es2::Texture"* undef, %"class.egl::Image"* nonnull %41, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %12, i32 %3, i32 %4, i32 %5, %"class.egl::Image"* %62) #18
  %64 = bitcast %"class.egl::Image"* %41 to void (%"class.egl::Image"*)***
  %65 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %65, i64 7
  %67 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %66, align 8
  tail call void %67(%"class.egl::Image"* nonnull %41) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %45) #17
  br label %68

68:                                               ; preds = %36, %35, %20, %44, %43
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D14setSharedImageEPN3egl5ImageE(%"class.es2::Texture3D"* nocapture, %"class.egl::Image"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %1, i64 0, i32 2
  %4 = bitcast %"class.gl::Object.base"* %3 to %"class.gl::Object"*
  %5 = bitcast %"class.gl::Object.base"* %3 to void (%"class.gl::Object"*)***
  %6 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %5, align 8
  %7 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %6, align 8
  tail call void %7(%"class.gl::Object"* %4) #14
  %8 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 0
  %9 = load %"class.egl::Image"*, %"class.egl::Image"** %8, align 8
  %10 = icmp eq %"class.egl::Image"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.egl::Image"* %9 to void (%"class.egl::Image"*)***
  %13 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %13, i64 7
  %15 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %14, align 8
  tail call void %15(%"class.egl::Image"* nonnull %9) #14
  br label %16

16:                                               ; preds = %2, %11
  store %"class.egl::Image"* %1, %"class.egl::Image"** %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D18isBaseLevelDefinedEv(%"class.es2::Texture3D"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 14
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %6
  %8 = load %"class.egl::Image"*, %"class.egl::Image"** %7, align 8
  %9 = icmp eq %"class.egl::Image"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %8, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %8, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %8, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %12, 1
  %18 = icmp slt i32 %14, 1
  %19 = or i1 %17, %18
  %20 = icmp slt i32 %16, 1
  %21 = or i1 %19, %20
  %22 = xor i1 %21, true
  br label %23

23:                                               ; preds = %1, %5, %10
  %24 = phi i1 [ %22, %10 ], [ false, %5 ], [ false, %1 ]
  ret i1 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D17isSamplerCompleteEPNS_7SamplerE(%"class.es2::Texture3D"*, %"class.es2::Sampler"* readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 10
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.es2::Texture3D"* %0 to i1 (%"class.es2::Texture3D"*)***
  %8 = load i1 (%"class.es2::Texture3D"*)**, i1 (%"class.es2::Texture3D"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.es2::Texture3D"*)*, i1 (%"class.es2::Texture3D"*)** %8, i64 17
  %10 = load i1 (%"class.es2::Texture3D"*)*, i1 (%"class.es2::Texture3D"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.es2::Texture3D"* %0) #14
  br i1 %11, label %12, label %23

12:                                               ; preds = %6
  %13 = icmp eq %"class.es2::Sampler"* %1, null
  %14 = getelementptr inbounds %"class.es2::Sampler", %"class.es2::Sampler"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 1
  %16 = select i1 %13, i32* %15, i32* %14
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, -4
  %19 = icmp eq i32 %18, 9984
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  %21 = tail call zeroext i1 @_ZNK3es29Texture3D16isMipmapCompleteEv(%"class.es2::Texture3D"* %0) #18
  br i1 %21, label %22, label %23

22:                                               ; preds = %20, %12
  br label %23

23:                                               ; preds = %20, %6, %2, %22
  %24 = phi i1 [ true, %22 ], [ true, %2 ], [ false, %6 ], [ false, %20 ]
  ret i1 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D16isMipmapCompleteEv(%"class.es2::Texture3D"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 12
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %120, label %12

12:                                               ; preds = %1
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  store i32 -1431655766, i32* %2, align 4
  %14 = icmp ult i32 %8, 14
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* inttoptr (i64 212 to i32*), align 4
  store i32 %16, i32* %2, align 4
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = load i32, i32* inttoptr (i64 216 to i32*), align 8
  %19 = bitcast i32* %4 to i8*
  br label %30

20:                                               ; preds = %12
  %21 = sext i32 %8 to i64
  %22 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %21
  %23 = load %"class.egl::Image"*, %"class.egl::Image"** %22, align 8
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %2, align 4
  %26 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %23, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = bitcast i32* %4 to i8*
  br label %30

30:                                               ; preds = %15, %20
  %31 = phi i32 [ %18, %15 ], [ %28, %20 ]
  %32 = phi i8* [ %19, %15 ], [ %29, %20 ]
  %33 = phi i32 [ %16, %15 ], [ %25, %20 ]
  %34 = phi i8* [ %17, %15 ], [ %26, %20 ]
  %35 = phi %"class.egl::Image"* [ null, %15 ], [ %23, %20 ]
  store i32 %31, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  %36 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %35, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %4, align 4
  %38 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %39 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %39, i64 9
  %41 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %40, align 8
  %42 = tail call i32 %41(%"class.es2::Texture3D"* %0) #14
  %43 = icmp eq i32 %42, 35866
  %44 = icmp slt i32 %33, %31
  %45 = select i1 %44, i32* %3, i32* %2
  br i1 %43, label %50, label %46

46:                                               ; preds = %30
  %47 = load i32, i32* %45, align 4
  %48 = icmp slt i32 %47, %37
  %49 = select i1 %48, i32* %4, i32* %45
  br label %50

50:                                               ; preds = %30, %46
  %51 = phi i32* [ %49, %46 ], [ %45, %30 ]
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi i32 [ 0, %50 ], [ %57, %53 ]
  %55 = ashr i32 %52, %54
  %56 = icmp sgt i32 %55, 1
  %57 = add nuw nsw i32 %54, 1
  br i1 %56, label %53, label %58

58:                                               ; preds = %53
  %59 = load i32, i32* %7, align 8
  %60 = add nsw i32 %59, %54
  %61 = load i32, i32* %9, align 4
  %62 = icmp slt i32 %61, %60
  %63 = select i1 %62, i32 %61, i32 %60
  %64 = icmp ult i32 %59, 14
  %65 = sext i32 %59 to i64
  %66 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %65
  %67 = bitcast i32* %5 to i8*
  %68 = bitcast i32* %6 to i8*
  %69 = sext i32 %63 to i64
  br label %70

70:                                               ; preds = %112, %58
  %71 = phi i64 [ %72, %112 ], [ %65, %58 ]
  %72 = add nsw i64 %71, 1
  %73 = icmp slt i64 %71, %69
  br i1 %73, label %74, label %118

74:                                               ; preds = %70
  %75 = trunc i64 %72 to i32
  %76 = icmp ult i32 %75, 14
  br i1 %76, label %77, label %118

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %72
  %79 = load %"class.egl::Image"*, %"class.egl::Image"** %78, align 8
  %80 = icmp eq %"class.egl::Image"* %79, null
  br i1 %80, label %118, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 6
  %83 = load i32, i32* %82, align 8
  br i1 %64, label %84, label %86

84:                                               ; preds = %81
  %85 = load %"class.egl::Image"*, %"class.egl::Image"** %66, align 8
  br label %86

86:                                               ; preds = %81, %84
  %87 = phi %"class.egl::Image"* [ %85, %84 ], [ null, %81 ]
  %88 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %87, i64 0, i32 6
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %83, %89
  br i1 %90, label %91, label %118

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = trunc i64 %72 to i32
  %95 = sub i32 %94, %59
  %96 = ashr i32 %33, %95
  %97 = icmp sgt i32 %96, 1
  %98 = select i1 %97, i32 %96, i32 1
  %99 = icmp eq i32 %93, %98
  br i1 %99, label %100, label %118

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 4
  %102 = load i32, i32* %101, align 8
  %103 = ashr i32 %31, %95
  %104 = icmp sgt i32 %103, 1
  %105 = select i1 %104, i32 %103, i32 1
  %106 = icmp eq i32 %102, %105
  br i1 %106, label %107, label %118

107:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  br i1 %43, label %112, label %108

108:                                              ; preds = %107
  store i32 1, i32* %5, align 4
  %109 = ashr i32 %37, %95
  store i32 %109, i32* %6, align 4
  %110 = icmp sgt i32 %109, 1
  %111 = select i1 %110, i32* %6, i32* %5
  br label %112

112:                                              ; preds = %107, %108
  %113 = phi i32* [ %111, %108 ], [ %4, %107 ]
  %114 = load i32, i32* %113, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67)
  %115 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 5
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, %114
  br i1 %117, label %70, label %118

118:                                              ; preds = %100, %91, %112, %74, %86, %77, %70
  %119 = phi i1 [ true, %70 ], [ false, %77 ], [ false, %86 ], [ false, %74 ], [ false, %112 ], [ false, %91 ], [ false, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  br label %120

120:                                              ; preds = %1, %118
  %121 = phi i1 [ %119, %118 ], [ false, %1 ]
  ret i1 %121
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D12isCompressedEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*, i32, i32)***
  %5 = load i32 (%"class.es2::Texture3D"*, i32, i32)**, i32 (%"class.es2::Texture3D"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*, i32, i32)*, i32 (%"class.es2::Texture3D"*, i32, i32)** %5, i64 13
  %7 = load i32 (%"class.es2::Texture3D"*, i32, i32)*, i32 (%"class.es2::Texture3D"*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0, i32 %1, i32 %2) #14
  %9 = tail call zeroext i1 @_ZN3es212IsCompressedEi(i32 %8) #14
  ret i1 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D7isDepthEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*, i32, i32)***
  %5 = load i32 (%"class.es2::Texture3D"*, i32, i32)**, i32 (%"class.es2::Texture3D"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*, i32, i32)*, i32 (%"class.es2::Texture3D"*, i32, i32)** %5, i64 13
  %7 = load i32 (%"class.es2::Texture3D"*, i32, i32)*, i32 (%"class.es2::Texture3D"*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0, i32 %1, i32 %2) #14
  %9 = tail call zeroext i1 @_ZN3es214IsDepthTextureEi(i32 %8) #14
  ret i1 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture3D15generateMipmapsEv(%"class.es2::Texture3D"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = icmp ult i32 %3, 14
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %115

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %4
  %9 = load %"class.egl::Image"*, %"class.egl::Image"** %8, align 8
  %10 = icmp eq %"class.egl::Image"* %9, null
  br i1 %10, label %115, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %115, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %9, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %115, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %9, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %115, label %23

23:                                               ; preds = %19
  %24 = icmp slt i32 %13, %17
  %25 = select i1 %24, i32 %17, i32 %13
  %26 = icmp slt i32 %25, %21
  %27 = select i1 %26, i32 %21, i32 %25
  br label %28

28:                                               ; preds = %28, %23
  %29 = phi i32 [ 0, %23 ], [ %32, %28 ]
  %30 = ashr i32 %27, %29
  %31 = icmp sgt i32 %30, 1
  %32 = add nuw nsw i32 %29, 1
  br i1 %31, label %28, label %33

33:                                               ; preds = %28
  %34 = add nsw i32 %29, %3
  %35 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 12
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %34
  %38 = select i1 %37, i32 %36, i32 %34
  %39 = icmp slt i32 %3, %38
  br i1 %39, label %40, label %115

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0
  %42 = sext i32 %38 to i64
  br label %43

43:                                               ; preds = %40, %106
  %44 = phi i64 [ %4, %40 ], [ %45, %106 ]
  %45 = add nsw i64 %44, 1
  %46 = trunc i64 %45 to i32
  %47 = icmp ult i32 %46, 14
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %58

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %45
  %51 = load %"class.egl::Image"*, %"class.egl::Image"** %50, align 8
  %52 = icmp eq %"class.egl::Image"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.egl::Image"* %51 to void (%"class.egl::Image"*)***
  %55 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %55, i64 7
  %57 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %56, align 8
  tail call void %57(%"class.egl::Image"* nonnull %51) #14
  br label %58

58:                                               ; preds = %48, %49, %53
  %59 = load i32, i32* %2, align 8
  %60 = icmp ult i32 %59, 14
  br i1 %60, label %61, label %80

61:                                               ; preds = %58
  %62 = sext i32 %59 to i64
  %63 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %62
  %64 = load %"class.egl::Image"*, %"class.egl::Image"** %63, align 8
  %65 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = ashr i32 %66, %46
  %68 = icmp sgt i32 %67, 1
  %69 = select i1 %68, i32 %67, i32 1
  %70 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %64, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = ashr i32 %71, %46
  %73 = icmp sgt i32 %72, 1
  %74 = select i1 %73, i32 %72, i32 1
  %75 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %64, i64 0, i32 5
  %76 = load i32, i32* %75, align 4
  %77 = ashr i32 %76, %46
  %78 = icmp sgt i32 %77, 1
  %79 = select i1 %78, i32 %77, i32 1
  br label %93

80:                                               ; preds = %58
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %81 = load i32, i32* inttoptr (i64 212 to i32*), align 4
  %82 = ashr i32 %81, %46
  %83 = icmp sgt i32 %82, 1
  %84 = select i1 %83, i32 %82, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %85 = load i32, i32* inttoptr (i64 216 to i32*), align 8
  %86 = ashr i32 %85, %46
  %87 = icmp sgt i32 %86, 1
  %88 = select i1 %87, i32 %86, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %89 = load i32, i32* inttoptr (i64 220 to i32*), align 4
  %90 = ashr i32 %89, %46
  %91 = icmp sgt i32 %90, 1
  %92 = select i1 %91, i32 %90, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %93

93:                                               ; preds = %61, %80
  %94 = phi %"class.egl::Image"* [ %64, %61 ], [ null, %80 ]
  %95 = phi i32 [ %79, %61 ], [ %92, %80 ]
  %96 = phi i32 [ %69, %61 ], [ %84, %80 ]
  %97 = phi i32 [ %74, %61 ], [ %88, %80 ]
  %98 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %94, i64 0, i32 6
  %99 = load i32, i32* %98, align 8
  %100 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %41, i32 %96, i32 %97, i32 %95, i32 0, i32 %99) #14
  br i1 %47, label %102, label %101

101:                                              ; preds = %93
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %105

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %45
  store %"class.egl::Image"* %100, %"class.egl::Image"** %103, align 8
  %104 = icmp eq %"class.egl::Image"* %100, null
  br i1 %104, label %105, label %106

105:                                              ; preds = %102, %101
  tail call void @_ZN3es25errorEj(i32 1285) #14
  br label %115

106:                                              ; preds = %102
  %107 = tail call %"class.es2::Device"* @_ZN3es29getDeviceEv() #14
  %108 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %44
  %109 = bitcast %"class.egl::Image"** %103 to %"class.sw::Surface"**
  %110 = load %"class.sw::Surface"*, %"class.sw::Surface"** %109, align 8
  %111 = bitcast %"class.egl::Image"** %108 to %"class.sw::Surface"**
  %112 = load %"class.sw::Surface"*, %"class.sw::Surface"** %111, align 8
  %113 = tail call zeroext i1 @_ZN3es26Device11stretchCubeEPN2sw7SurfaceES3_(%"class.es2::Device"* %107, %"class.sw::Surface"* %112, %"class.sw::Surface"* %110) #14
  %114 = icmp slt i64 %45, %42
  br i1 %114, label %43, label %115

115:                                              ; preds = %106, %33, %105, %6, %7, %11, %15, %19
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3es26Device11stretchCubeEPN2sw7SurfaceES3_(%"class.es2::Device"*, %"class.sw::Surface"*, %"class.sw::Surface"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es29Texture3D8getImageEj(%"class.es2::Texture3D"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = icmp ult i32 %1, 14
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  br label %9

8:                                                ; preds = %2
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %9

9:                                                ; preds = %4, %8
  %10 = phi %"class.egl::Image"* [ %7, %4 ], [ null, %8 ]
  ret %"class.egl::Image"* %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.es2::Renderbuffer"* @_ZN3es29Texture3D15getRenderbufferEji(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN3es25errorEj(i32 1282) #14
  br label %26

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 3
  %13 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %12, align 8
  %14 = icmp eq %"class.es2::Renderbuffer"* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = tail call i8* @_Znwm(i64 24) #15
  %17 = bitcast i8* %16 to %"class.es2::Renderbuffer"*
  %18 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = tail call i8* @_Znwm(i64 24) #15
  %21 = bitcast i8* %20 to %"class.es2::RenderbufferTexture3D"*
  tail call void @_ZN3es221RenderbufferTexture3DC1EPNS_9Texture3DEi(%"class.es2::RenderbufferTexture3D"* nonnull %21, %"class.es2::Texture3D"* %0, i32 %2) #14
  %22 = bitcast i8* %20 to %"class.es2::RenderbufferInterface"*
  tail call void @_ZN3es212RenderbufferC1EjPNS_21RenderbufferInterfaceE(%"class.es2::Renderbuffer"* nonnull %17, i32 %19, %"class.es2::RenderbufferInterface"* nonnull %22) #14
  %23 = bitcast %"class.es2::Renderbuffer"** %12 to i8**
  store i8* %16, i8** %23, align 8
  br label %26

24:                                               ; preds = %11
  tail call void @_ZN3es212Renderbuffer8setLevelEi(%"class.es2::Renderbuffer"* nonnull %13, i32 %2) #14
  %25 = load %"class.es2::Renderbuffer"*, %"class.es2::Renderbuffer"** %12, align 8
  br label %26

26:                                               ; preds = %15, %24, %10
  %27 = phi %"class.es2::Renderbuffer"* [ null, %10 ], [ %25, %24 ], [ %17, %15 ]
  ret %"class.es2::Renderbuffer"* %27
}

; Function Attrs: optsize
declare void @_ZN3es221RenderbufferTexture3DC1EPNS_9Texture3DEi(%"class.es2::RenderbufferTexture3D"*, %"class.es2::Texture3D"*, i32) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3es29Texture3D15getRenderTargetEjj(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = icmp ult i32 %2, 14
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = zext i32 %2 to i64
  %12 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  %14 = icmp eq %"class.egl::Image"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %13, i64 0, i32 2
  %17 = bitcast %"class.gl::Object.base"* %16 to %"class.gl::Object"*
  %18 = bitcast %"class.gl::Object.base"* %16 to void (%"class.gl::Object"*)***
  %19 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %18, align 8
  %20 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %19, align 8
  tail call void %20(%"class.gl::Object"* %17) #14
  %21 = load %"class.egl::Image"*, %"class.egl::Image"** %12, align 8
  br label %23

22:                                               ; preds = %3
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %23

23:                                               ; preds = %15, %10, %22
  %24 = phi %"class.egl::Image"* [ null, %22 ], [ null, %10 ], [ %21, %15 ]
  ret %"class.egl::Image"* %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3es29Texture3D8isSharedEjj(%"class.es2::Texture3D"*, i32, i32) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.es2::Texture3D"* %0 to i32 (%"class.es2::Texture3D"*)***
  %5 = load i32 (%"class.es2::Texture3D"*)**, i32 (%"class.es2::Texture3D"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %5, i64 9
  %7 = load i32 (%"class.es2::Texture3D"*)*, i32 (%"class.es2::Texture3D"*)** %6, align 8
  %8 = tail call i32 %7(%"class.es2::Texture3D"* %0) #14
  %9 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 2
  %10 = load %"class.gl::Surface"*, %"class.gl::Surface"** %9, align 8
  %11 = icmp eq %"class.gl::Surface"* %10, null
  br i1 %11, label %12, label %23

12:                                               ; preds = %3
  %13 = icmp ult i32 %2, 14
  br i1 %13, label %14, label %23

14:                                               ; preds = %12
  %15 = zext i32 %2 to i64
  %16 = getelementptr inbounds %"class.es2::Texture3D", %"class.es2::Texture3D"* %0, i64 0, i32 1, i32 0, i64 %15
  %17 = load %"class.egl::Image"*, %"class.egl::Image"** %16, align 8
  %18 = icmp eq %"class.egl::Image"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %17, i64 0, i32 7
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp ne i8 %21, 0
  br label %23

23:                                               ; preds = %12, %14, %3, %19
  %24 = phi i1 [ %22, %19 ], [ true, %3 ], [ false, %14 ], [ false, %12 ]
  ret i1 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214Texture2DArrayC2Ej(%"class.es2::Texture2DArray"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3es27TextureC2Ej(%"class.es2::Texture"* %3, i32 %1) #14
  %4 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.es2::ImageLevels"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 132, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es214Texture2DArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214Texture2DArrayD0Ev(%"class.es2::Texture2DArray"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.es2::Texture2DArray"* %0 to %"class.es2::Texture3D"*
  tail call void @_ZN3es29Texture3DD2Ev(%"class.es2::Texture3D"* %2) #14
  %3 = bitcast %"class.es2::Texture2DArray"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es214Texture2DArray9getTargetEv(%"class.es2::Texture2DArray"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 35866
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es214Texture2DArray15generateMipmapsEv(%"class.es2::Texture2DArray"*) unnamed_addr #1 align 2 {
  %2 = alloca %"struct.sw::SliceRectT.40", align 4
  %3 = alloca %"struct.sw::SliceRectT", align 4
  %4 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = icmp ult i32 %5, 14
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %134

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %6
  %11 = load %"class.egl::Image"*, %"class.egl::Image"** %10, align 8
  %12 = icmp eq %"class.egl::Image"* %11, null
  br i1 %12, label %134, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %11, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %134, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %11, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %134, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %11, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %134, label %25

25:                                               ; preds = %21
  %26 = icmp slt i32 %15, %19
  %27 = select i1 %26, i32 %19, i32 %15
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi i32 [ 0, %25 ], [ %32, %28 ]
  %30 = ashr i32 %27, %29
  %31 = icmp sgt i32 %30, 1
  %32 = add nuw nsw i32 %29, 1
  br i1 %31, label %28, label %33

33:                                               ; preds = %28
  %34 = add nsw i32 %29, %5
  %35 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 0, i32 12
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %34
  %38 = select i1 %37, i32 %36, i32 %34
  %39 = icmp slt i32 %5, %38
  br i1 %39, label %40, label %134

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = icmp sgt i32 %23, 0
  %43 = bitcast %"struct.sw::SliceRectT.40"* %2 to i8*
  %44 = getelementptr inbounds %"struct.sw::SliceRectT.40", %"struct.sw::SliceRectT.40"* %2, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.sw::SliceRectT.40", %"struct.sw::SliceRectT.40"* %2, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.sw::SliceRectT.40", %"struct.sw::SliceRectT.40"* %2, i64 0, i32 0, i32 2
  %47 = getelementptr inbounds %"struct.sw::SliceRectT.40", %"struct.sw::SliceRectT.40"* %2, i64 0, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.sw::SliceRectT.40", %"struct.sw::SliceRectT.40"* %2, i64 0, i32 1
  %49 = bitcast %"struct.sw::SliceRectT"* %3 to i8*
  %50 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %3, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %3, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %3, i64 0, i32 0, i32 2
  %53 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %3, i64 0, i32 0, i32 3
  %54 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %3, i64 0, i32 1
  %55 = sext i32 %38 to i64
  br label %58

56:                                               ; preds = %126, %113
  %57 = icmp slt i64 %60, %55
  br i1 %57, label %58, label %134

58:                                               ; preds = %40, %56
  %59 = phi i64 [ %6, %40 ], [ %60, %56 ]
  %60 = add nsw i64 %59, 1
  %61 = trunc i64 %60 to i32
  %62 = icmp ult i32 %61, 14
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %73

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %60
  %66 = load %"class.egl::Image"*, %"class.egl::Image"** %65, align 8
  %67 = icmp eq %"class.egl::Image"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.egl::Image"* %66 to void (%"class.egl::Image"*)***
  %70 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %70, i64 7
  %72 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %71, align 8
  call void %72(%"class.egl::Image"* nonnull %66) #14
  br label %73

73:                                               ; preds = %63, %64, %68
  %74 = load i32, i32* %4, align 8
  %75 = sext i32 %74 to i64
  %76 = icmp ult i32 %74, 14
  br i1 %76, label %77, label %92

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %75
  %79 = load %"class.egl::Image"*, %"class.egl::Image"** %78, align 8
  %80 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = ashr i32 %81, %61
  %83 = icmp sgt i32 %82, 1
  %84 = select i1 %83, i32 %82, i32 1
  %85 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %79, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = ashr i32 %86, %61
  %88 = icmp sgt i32 %87, 1
  %89 = select i1 %88, i32 %87, i32 1
  %90 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %75
  %91 = load %"class.egl::Image"*, %"class.egl::Image"** %90, align 8
  br label %101

92:                                               ; preds = %73
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  %93 = load i32, i32* inttoptr (i64 212 to i32*), align 4
  %94 = ashr i32 %93, %61
  %95 = icmp sgt i32 %94, 1
  %96 = select i1 %95, i32 %94, i32 1
  %97 = load i32, i32* inttoptr (i64 216 to i32*), align 8
  %98 = ashr i32 %97, %61
  %99 = icmp sgt i32 %98, 1
  %100 = select i1 %99, i32 %98, i32 1
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %101

101:                                              ; preds = %77, %92
  %102 = phi i32 [ %89, %77 ], [ %100, %92 ]
  %103 = phi i32 [ %84, %77 ], [ %96, %92 ]
  %104 = phi %"class.egl::Image"* [ %91, %77 ], [ null, %92 ]
  %105 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %104, i64 0, i32 6
  %106 = load i32, i32* %105, align 8
  %107 = call %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"* %41, i32 %103, i32 %102, i32 %23, i32 0, i32 %106) #14
  br i1 %62, label %109, label %108

108:                                              ; preds = %101
  store %"class.egl::Image"* null, %"class.egl::Image"** @_ZZN3es211ImageLevels12getNullImageEvE9nullImage, align 8
  br label %112

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %60
  store %"class.egl::Image"* %107, %"class.egl::Image"** %110, align 8
  %111 = icmp eq %"class.egl::Image"* %107, null
  br i1 %111, label %112, label %113

112:                                              ; preds = %109, %108
  call void @_ZN3es25errorEj(i32 1285) #14
  br label %134

113:                                              ; preds = %109
  br i1 %42, label %114, label %56

114:                                              ; preds = %113
  %115 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %59
  %116 = load %"class.egl::Image"*, %"class.egl::Image"** %115, align 8
  %117 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %116, i64 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %116, i64 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = sitofp i32 %118 to float
  %122 = sitofp i32 %120 to float
  %123 = getelementptr inbounds %"class.es2::Texture2DArray", %"class.es2::Texture2DArray"* %0, i64 0, i32 0, i32 1, i32 0, i64 %59
  %124 = bitcast %"class.egl::Image"** %123 to %"class.sw::Surface"**
  %125 = bitcast %"class.egl::Image"** %110 to %"class.sw::Surface"**
  br label %126

126:                                              ; preds = %126, %114
  %127 = phi i32 [ 0, %114 ], [ %132, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43) #17
  store float 0.000000e+00, float* %44, align 4
  store float 0.000000e+00, float* %45, align 4
  store float %121, float* %46, align 4
  store float %122, float* %47, align 4
  store i32 %127, i32* %48, align 4
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %49) #17
  store i32 0, i32* %50, align 4
  store i32 0, i32* %51, align 4
  store i32 %103, i32* %52, align 4
  store i32 %102, i32* %53, align 4
  store i32 %127, i32* %54, align 4
  %128 = call %"class.es2::Device"* @_ZN3es29getDeviceEv() #14
  %129 = load %"class.sw::Surface"*, %"class.sw::Surface"** %124, align 8
  %130 = load %"class.sw::Surface"*, %"class.sw::Surface"** %125, align 8
  %131 = call zeroext i1 @_ZN3es26Device11stretchRectEPN2sw7SurfaceEPKNS1_10SliceRectTIfEES3_PKNS4_IiEEh(%"class.es2::Device"* %128, %"class.sw::Surface"* %129, %"struct.sw::SliceRectT.40"* nonnull %2, %"class.sw::Surface"* %130, %"struct.sw::SliceRectT"* nonnull %3, i8 zeroext 15) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %49) #17
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43) #17
  %132 = add nuw nsw i32 %127, 1
  %133 = icmp eq i32 %132, %23
  br i1 %133, label %56, label %126

134:                                              ; preds = %56, %33, %112, %8, %9, %13, %17, %21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es215TextureExternalC2Ej(%"class.es2::TextureExternal"*, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.es2::TextureExternal", %"class.es2::TextureExternal"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3es27TextureC2Ej(%"class.es2::Texture"* %3, i32 %1) #14
  %4 = getelementptr inbounds %"class.es2::TextureExternal", %"class.es2::TextureExternal"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.es2::TextureExternal", %"class.es2::TextureExternal"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.es2::ImageLevels"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 132, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es215TextureExternalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.es2::TextureExternal", %"class.es2::TextureExternal"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 9729, i32 9729, i32 33071, i32 33071>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.es2::TextureExternal", %"class.es2::TextureExternal"* %0, i64 0, i32 0, i32 0, i32 5
  store i32 33071, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es215TextureExternalD0Ev(%"class.es2::TextureExternal"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.es2::TextureExternal"* %0 to %"class.es2::Texture2D"*
  tail call void @_ZN3es29Texture2DD2Ev(%"class.es2::Texture2D"* %2) #14
  %3 = bitcast %"class.es2::TextureExternal"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZNK3es215TextureExternal9getTargetEv(%"class.es2::TextureExternal"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 36197
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_Z16createBackBufferiiN2sw6FormatEi(i32, i32, i32, i32) local_unnamed_addr #1 {
  %5 = icmp sgt i32 %0, 8192
  %6 = icmp sgt i32 %1, 8192
  %7 = or i1 %5, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN5sw2es23ConvertBackBufferFormatEN2sw6FormatE(i32 %2) #14
  %10 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEiiiib(i32 %0, i32 %1, i32 %9, i32 %3, i1 zeroext false) #14
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi %"class.egl::Image"* [ %10, %8 ], [ null, %4 ]
  ret %"class.egl::Image"* %12
}

; Function Attrs: optsize
declare i32 @_ZN5sw2es23ConvertBackBufferFormatEN2sw6FormatE(i32) local_unnamed_addr #3

; Function Attrs: optsize
declare %"class.egl::Image"* @_ZN3egl5Image6createEiiiib(i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_Z32createBackBufferFromClientBufferRKN3egl12ClientBufferE(%"class.egl::ClientBuffer"* dereferenceable(32)) local_unnamed_addr #1 {
  %2 = tail call i32 @_ZNK3egl12ClientBuffer8getWidthEv(%"class.egl::ClientBuffer"* %0) #14
  %3 = icmp sgt i32 %2, 8192
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @_ZNK3egl12ClientBuffer9getHeightEv(%"class.egl::ClientBuffer"* %0) #14
  %6 = icmp sgt i32 %5, 8192
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.egl::Image"* @_ZN3egl5Image6createERKNS_12ClientBufferE(%"class.egl::ClientBuffer"* dereferenceable(32) %0) #14
  br label %9

9:                                                ; preds = %1, %4, %7
  %10 = phi %"class.egl::Image"* [ %8, %7 ], [ null, %4 ], [ null, %1 ]
  ret %"class.egl::Image"* %10
}

; Function Attrs: optsize
declare i32 @_ZNK3egl12ClientBuffer8getWidthEv(%"class.egl::ClientBuffer"*) local_unnamed_addr #3

; Function Attrs: optsize
declare i32 @_ZNK3egl12ClientBuffer9getHeightEv(%"class.egl::ClientBuffer"*) local_unnamed_addr #3

; Function Attrs: optsize
declare %"class.egl::Image"* @_ZN3egl5Image6createERKNS_12ClientBufferE(%"class.egl::ClientBuffer"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_Z18createDepthStenciliiN2sw6FormatEi(i32, i32, i32, i32) local_unnamed_addr #1 {
  %5 = icmp sgt i32 %0, 8192
  %6 = icmp sgt i32 %1, 8192
  %7 = or i1 %5, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = add i32 %2, -102
  %10 = icmp ugt i32 %9, 14
  %11 = trunc i32 %9 to i15
  %12 = lshr i15 -32, %11
  %13 = and i15 %12, 1
  %14 = icmp ne i15 %13, 0
  %15 = or i1 %14, %10
  %16 = tail call i32 @_ZN5sw2es25ConvertDepthStencilFormatEN2sw6FormatE(i32 %2) #14
  %17 = tail call %"class.egl::Image"* @_ZN3egl5Image6createEiiiib(i32 %0, i32 %1, i32 %16, i32 %3, i1 zeroext %15) #14
  br label %18

18:                                               ; preds = %4, %8
  %19 = phi %"class.egl::Image"* [ %17, %8 ], [ null, %4 ]
  ret %"class.egl::Image"* %19
}

; Function Attrs: optsize
declare i32 @_ZN5sw2es25ConvertDepthStencilFormatEN2sw6FormatE(i32) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2gl6Object6addRefEv(%"class.gl::Object"*) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl7Texture7releaseEv(%"class.egl::Texture"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.egl::Texture"* %0 to %"class.gl::Object"*
  %3 = tail call i32 @_ZN2gl6Object11dereferenceEv(%"class.gl::Object"* %2) #14
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = bitcast %"class.egl::Texture"* %0 to void (%"class.egl::Texture"*)***
  %7 = load void (%"class.egl::Texture"*)**, void (%"class.egl::Texture"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %7, i64 6
  %9 = load void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %8, align 8
  tail call void %9(%"class.egl::Texture"* %0) #14
  br label %17

10:                                               ; preds = %1
  %11 = icmp eq %"class.egl::Texture"* %0, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.egl::Texture"* %0 to void (%"class.egl::Texture"*)***
  %14 = load void (%"class.egl::Texture"*)**, void (%"class.egl::Texture"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %14, i64 3
  %16 = load void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %15, align 8
  tail call void %16(%"class.egl::Texture"* nonnull %0) #14
  br label %17

17:                                               ; preds = %10, %12, %5
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29Texture2DD2Ev(%"class.es2::Texture2D"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es29Texture2DE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0
  br label %4

4:                                                ; preds = %10, %1
  %5 = phi i64 [ 0, %1 ], [ %11, %10 ]
  %6 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.egl::Image"*, %"class.egl::Image"** %6, align 8
  %8 = icmp eq %"class.egl::Image"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void @_ZN3egl5Image6unbindEPKNS_7TextureE(%"class.egl::Image"* nonnull %7, %"class.egl::Texture"* %3) #14
  store %"class.egl::Image"* null, %"class.egl::Image"** %6, align 8
  br label %10

10:                                               ; preds = %9, %4
  %11 = add nuw nsw i64 %5, 1
  %12 = icmp eq i64 %11, 14
  br i1 %12, label %13, label %4

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 2
  %15 = load %"class.gl::Surface"*, %"class.gl::Surface"** %14, align 8
  %16 = icmp eq %"class.gl::Surface"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.gl::Surface"* %15 to void (%"class.gl::Surface"*, %"class.egl::Texture"*)***
  %19 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)**, void (%"class.gl::Surface"*, %"class.egl::Texture"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %19, i64 7
  %21 = load void (%"class.gl::Surface"*, %"class.egl::Texture"*)*, void (%"class.gl::Surface"*, %"class.egl::Texture"*)** %20, align 8
  tail call void %21(%"class.gl::Surface"* nonnull %15, %"class.egl::Texture"* null) #14
  store %"class.gl::Surface"* null, %"class.gl::Surface"** %14, align 8
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 3
  store %"class.es2::Renderbuffer"* null, %"class.es2::Renderbuffer"** %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3es27TextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %24 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 19
  %25 = load %"class.sw::Resource"*, %"class.sw::Resource"** %24, align 8
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* %25) #14
  %26 = getelementptr inbounds %"class.es2::Texture2D", %"class.es2::Texture2D"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %26) #14
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3es213Texture2DRectD0Ev(%"class.es2::Texture2DRect"*) unnamed_addr #12 comdat align 2 {
  %2 = bitcast %"class.es2::Texture2DRect"* %0 to %"class.es2::Texture2D"*
  tail call void @_ZN3es29Texture2DD2Ev(%"class.es2::Texture2D"* %2) #14
  %3 = bitcast %"class.es2::Texture2DRect"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"*, i32) unnamed_addr #3

; Function Attrs: nounwind optsize
declare void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"*) unnamed_addr #13

; Function Attrs: optsize
declare void @_ZN3egl5Image6unbindEPKNS_7TextureE(%"class.egl::Image"*, %"class.egl::Texture"*) local_unnamed_addr #3

; Function Attrs: optsize
declare i32 @_ZN2gl6Object11dereferenceEv(%"class.gl::Object"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nounwind }
attributes #10 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind optsize }
attributes #15 = { builtin nounwind optsize }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind }
attributes #18 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
