; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_wnd.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_wnd.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.CPWL_Wnd::CreateParams" = type <{ %class.CFX_FloatRect, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.4", %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::UnownedPtr.6", i32, %struct.CFX_Color, i32, i32, %struct.CFX_Color, %struct.CFX_Color, i32, float, %struct.CPWL_Dash, [4 x i8], %class.CPWL_MsgControl*, i32, [4 x i8] }>
%class.CFX_FloatRect = type { float, float, float, float }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.IPWL_SystemHandler* }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.4" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type opaque
%"class.fxcrt::ObservedPtr.5" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPWL_Wnd::ProviderIface"* }
%"class.CPWL_Wnd::ProviderIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.6" = type { %"class.CPWL_Wnd::FocusHandlerIface"* }
%"class.CPWL_Wnd::FocusHandlerIface" = type { i32 (...)** }
%struct.CFX_Color = type { i32, float, float, float, float }
%struct.CPWL_Dash = type { i32, i32, i32 }
%class.CPWL_MsgControl = type { %"class.fxcrt::Observable", %"class.std::__1::vector", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.13", %"class.fxcrt::UnownedPtr.13" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.fxcrt::UnownedPtr.7" = type { %class.CPWL_Wnd* }
%class.CPWL_Wnd = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.7", %"class.std::__1::vector.17", %"class.fxcrt::UnownedPtr.25", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.IPWL_SystemHandler::PerWindowData"* }
%"class.IPWL_SystemHandler::PerWindowData" = type { i32 (...)** }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CPWL_Wnd* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::unique_ptr.19"* }
%"class.fxcrt::UnownedPtr.25" = type { %class.CPWL_ScrollBar* }
%class.CPWL_ScrollBar = type <{ %class.CPWL_Wnd.base, [5 x i8], %"class.CFX_Timer::CallbackIface", %struct.PWL_SCROLL_INFO, [4 x i8], %"class.fxcrt::UnownedPtr.26", %"class.fxcrt::UnownedPtr.26", %"class.fxcrt::UnownedPtr.26", %"class.std::__1::unique_ptr.27", %struct.PWL_SCROLL_PRIVATEDATA, i8, i8, [2 x i8], float, float, [4 x i8] }>
%class.CPWL_Wnd.base = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.7", %"class.std::__1::vector.17", %"class.fxcrt::UnownedPtr.25", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8 }>
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%struct.PWL_SCROLL_INFO = type { float, float, float, float, float }
%"class.fxcrt::UnownedPtr.26" = type { %class.CPWL_SBButton* }
%class.CPWL_SBButton = type { %class.CPWL_Wnd.base, i8, i8, [3 x i8] }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr.30" }
%"class.fxcrt::UnownedPtr.30" = type { %"class.CFX_Timer::CallbackIface"* }
%struct.PWL_SCROLL_PRIVATEDATA = type { %struct.PWL_FLOATRANGE, float, float, float, float }
%struct.PWL_FLOATRANGE = type { float, float }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.fxcrt::UnownedPtr.7"* }
%"class.fxcrt::UnownedPtr.13" = type { %class.CPWL_Wnd* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.43" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::ObservedPtr.49" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPWL_Wnd* }
%class.CFX_PTemplate = type { float, float }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.50" }
%"class.fxcrt::RetainPtr.50" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFX_VTemplate = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.fxcrt::ObservedPtr.65" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPWL_MsgControl* }

$_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrI8CPWL_WndED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEE21OnObservableDestroyedEv = comdat any

$_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEE21OnObservableDestroyedEv = comdat any

$_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlE21OnObservableDestroyedEv = comdat any

$_ZN5fxcrt11ObservedPtrI8CPWL_WndED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrI8CPWL_WndE21OnObservableDestroyedEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI8CPWL_WndNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE = comdat any

$_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE = comdat any

$_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE = comdat any

$_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE = comdat any

@_ZTV8CPWL_Wnd = hidden unnamed_addr constant { [43 x i8*] } { [43 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_WndD2Ev to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_WndD0Ev to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)* @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd9OnKeyDownEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd6OnCharEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)* @_ZN8CPWL_Wnd13SetScrollInfoERK15PWL_SCROLL_INFO to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd17SetScrollPositionEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd8SetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9KillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9SetCursorEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i1)* @_ZN8CPWL_Wnd10SetVisibleEb to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd11SetFontSizeEf to i8*), i8* bitcast (float (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd11GetFontSizeEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7GetTextEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd15GetSelectedTextEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.fxcrt::WideString"*)* @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13SelectAllTextEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanUndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanRedoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4UndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4RedoEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd12GetFocusRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd13GetClientRectEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd10OnSetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd11OnKillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)* @_ZN8CPWL_Wnd14CreateChildWndERKNS_12CreateParamsE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13RePosChildWndEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)* @_ZN8CPWL_Wnd18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnCreatedEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnDestroyEv to i8*)] }, align 8
@__const._ZN8CPWL_Wnd16CreateVScrollBarERKNS_12CreateParamsE.scp = private unnamed_addr constant %"class.CPWL_Wnd::CreateParams" <{ %class.CFX_FloatRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::ObservedPtr" { %"class.fxcrt::Observable::ObserverIface" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.CFX_Timer::HandlerIface"* inttoptr (i64 -6148914691236517206 to %"class.CFX_Timer::HandlerIface"*) }, %"class.fxcrt::UnownedPtr" { %class.IPWL_SystemHandler* inttoptr (i64 -6148914691236517206 to %class.IPWL_SystemHandler*) }, %"class.fxcrt::UnownedPtr.4" { %class.IPVT_FontMap* inttoptr (i64 -6148914691236517206 to %class.IPVT_FontMap*) }, %"class.fxcrt::ObservedPtr.5" { %"class.fxcrt::Observable::ObserverIface" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.CPWL_Wnd::ProviderIface"* inttoptr (i64 -6148914691236517206 to %"class.CPWL_Wnd::ProviderIface"*) }, %"class.fxcrt::UnownedPtr.6" { %"class.CPWL_Wnd::FocusHandlerIface"* inttoptr (i64 -6148914691236517206 to %"class.CPWL_Wnd::FocusHandlerIface"*) }, i32 -1431655766, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, float 0xFFFFFFFFE0000000, %struct.CPWL_Dash { i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.CPWL_MsgControl* inttoptr (i64 -6148914691236517206 to %class.CPWL_MsgControl*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr"*)* @_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr"*)* @_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr"*)* @_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEE21OnObservableDestroyedEv to i8*)] }, comdat, align 8
@_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr.5"*)* @_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.5"*)* @_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.5"*)* @_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEE21OnObservableDestroyedEv to i8*)] }, comdat, align 8
@_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr.65"*)* @_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.65"*)* @_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.65"*)* @_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlE21OnObservableDestroyedEv to i8*)] }, comdat, align 8
@_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr.49"*)* @_ZN5fxcrt11ObservedPtrI8CPWL_WndED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.49"*)* @_ZN5fxcrt11ObservedPtrI8CPWL_WndED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.49"*)* @_ZN5fxcrt11ObservedPtrI8CPWL_WndE21OnObservableDestroyedEv to i8*)] }, comdat, align 8

@_ZN8CPWL_Wnd12CreateParamsC1Ev = hidden unnamed_addr alias void (%"class.CPWL_Wnd::CreateParams"*), void (%"class.CPWL_Wnd::CreateParams"*)* @_ZN8CPWL_Wnd12CreateParamsC2Ev
@_ZN8CPWL_Wnd12CreateParamsC1ERKS0_ = hidden unnamed_addr alias void (%"class.CPWL_Wnd::CreateParams"*, %"class.CPWL_Wnd::CreateParams"*), void (%"class.CPWL_Wnd::CreateParams"*, %"class.CPWL_Wnd::CreateParams"*)* @_ZN8CPWL_Wnd12CreateParamsC2ERKS0_
@_ZN8CPWL_Wnd12CreateParamsD1Ev = hidden unnamed_addr alias void (%"class.CPWL_Wnd::CreateParams"*), void (%"class.CPWL_Wnd::CreateParams"*)* @_ZN8CPWL_Wnd12CreateParamsD2Ev
@_ZN8CPWL_WndC1ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE = hidden unnamed_addr alias void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*), void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*)* @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE
@_ZN8CPWL_WndD1Ev = hidden unnamed_addr alias void (%class.CPWL_Wnd*), void (%class.CPWL_Wnd*)* @_ZN8CPWL_WndD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd12CreateParamsC2Ev(%"class.CPWL_Wnd::CreateParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.CPWL_Wnd::CreateParams"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false) #13
  %3 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 1, i32 1
  %5 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = bitcast %"class.CFX_Timer::HandlerIface"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 4, i32 1
  %8 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 9
  %9 = bitcast %"class.CPWL_Wnd::ProviderIface"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 44, i1 false)
  store i32 1, i32* %8, align 4
  %10 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 10, i32 0
  %11 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 12
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 40, i1 false)
  store i32 255, i32* %11, align 8
  %13 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 13
  store float 9.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 14, i32 0
  store i32 3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 14, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 14, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 16
  store %class.CPWL_MsgControl* null, %class.CPWL_MsgControl** %17, align 8
  %18 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 17
  store i32 0, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd12CreateParamsC2ERKS0_(%"class.CPWL_Wnd::CreateParams"*, %"class.CPWL_Wnd::CreateParams"* nocapture readonly dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.CPWL_Wnd::CreateParams"* %0 to i8*
  %4 = bitcast %"class.CPWL_Wnd::CreateParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 1, i32 1
  %7 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %6, align 8
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 1, i32 1
  store %"class.CFX_Timer::HandlerIface"* %7, %"class.CFX_Timer::HandlerIface"** %9, align 8
  %10 = icmp eq %"class.CFX_Timer::HandlerIface"* %7, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %7, i64 0, i32 1
  tail call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %13, %"class.fxcrt::Observable::ObserverIface"* %12) #13
  br label %14

14:                                               ; preds = %2, %11
  %15 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 2
  %17 = bitcast %"class.fxcrt::UnownedPtr"* %15 to i8*
  %18 = bitcast %"class.fxcrt::UnownedPtr"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 4, i32 1
  %21 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %20, align 8
  %22 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 4, i32 1
  store %"class.CPWL_Wnd::ProviderIface"* %21, %"class.CPWL_Wnd::ProviderIface"** %23, align 8
  %24 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %21, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %19, i64 0, i32 0
  %27 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %21, i64 0, i32 1
  tail call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %27, %"class.fxcrt::Observable::ObserverIface"* %26) #13
  br label %28

28:                                               ; preds = %14, %25
  %29 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 5
  %31 = bitcast %"class.fxcrt::UnownedPtr.6"* %29 to i8*
  %32 = bitcast %"class.fxcrt::UnownedPtr.6"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 116, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd12CreateParamsD2Ev(%"class.CPWL_Wnd::CreateParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 4, i32 1
  %5 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %4, align 8
  %6 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %2, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %8, %"class.fxcrt::Observable::ObserverIface"* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %0, i64 0, i32 1, i32 1
  %14 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %13, align 8
  %15 = icmp eq %"class.CFX_Timer::HandlerIface"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %14, i64 0, i32 1
  %18 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %11, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %17, %"class.fxcrt::Observable::ObserverIface"* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEED2Ev(%"class.fxcrt::ObservedPtr.5"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 1
  %4 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %3, align 8
  %5 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEED2Ev(%"class.fxcrt::ObservedPtr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 1
  %4 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %3, align 8
  %5 = icmp eq %"class.CFX_Timer::HandlerIface"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32) local_unnamed_addr #2 align 2 {
  %2 = and i32 %0, 1
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd13IsCTRLKeyDownEj(i32) local_unnamed_addr #2 align 2 {
  %2 = and i32 %0, 2
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd12IsALTKeyDownEj(i32) local_unnamed_addr #2 align 2 {
  %2 = and i32 %0, 4
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd13IsMETAKeyDownEj(i32) local_unnamed_addr #2 align 2 {
  %2 = and i32 %0, 8
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd21IsPlatformShortcutKeyEj(i32) local_unnamed_addr #2 align 2 {
  %2 = and i32 %0, 2
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* nocapture readonly dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.IPWL_SystemHandler::PerWindowData"* %2 to i64
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %5) #13
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [43 x i8*] }, { [43 x i8*] }* @_ZTV8CPWL_Wnd, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2
  %8 = bitcast %"class.CPWL_Wnd::CreateParams"* %7 to i8*
  %9 = bitcast %"class.CPWL_Wnd::CreateParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #13
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 1
  %11 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 1, i32 1
  %12 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %11, align 8
  %13 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 1, i32 1
  store %"class.CFX_Timer::HandlerIface"* %12, %"class.CFX_Timer::HandlerIface"** %14, align 8
  %15 = icmp eq %"class.CFX_Timer::HandlerIface"* %12, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %10, i64 0, i32 0
  %18 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %12, i64 0, i32 1
  tail call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %18, %"class.fxcrt::Observable::ObserverIface"* %17) #13
  br label %19

19:                                               ; preds = %16, %3
  %20 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 2
  %21 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 2
  %22 = bitcast %"class.fxcrt::UnownedPtr"* %20 to i8*
  %23 = bitcast %"class.fxcrt::UnownedPtr"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false) #13
  %24 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4
  %25 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 4, i32 1
  %26 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %25, align 8
  %27 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %24, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 1
  store %"class.CPWL_Wnd::ProviderIface"* %26, %"class.CPWL_Wnd::ProviderIface"** %28, align 8
  %29 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %26, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %24, i64 0, i32 0
  %32 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %26, i64 0, i32 1
  tail call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %32, %"class.fxcrt::Observable::ObserverIface"* %31) #13
  br label %33

33:                                               ; preds = %30, %19
  %34 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 5
  %35 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 5
  %36 = bitcast %"class.fxcrt::UnownedPtr.6"* %34 to i8*
  %37 = bitcast %"class.fxcrt::UnownedPtr.6"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 116, i1 false) #13
  %38 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3
  %39 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  store i64 %4, i64* %39, align 8
  %40 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 4, i32 0
  %41 = bitcast %class.CPWL_Wnd** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 75, i1 false)
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [43 x i8*] }, { [43 x i8*] }* @_ZTV8CPWL_Wnd, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.19"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.19"* %5 to i8*
  %9 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.19"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.19"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %15, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %15, align 8
  %17 = icmp eq %class.CPWL_Wnd* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %class.CPWL_Wnd* %16 to void (%class.CPWL_Wnd*)***
  %20 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %20, i64 1
  %22 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %21, align 8
  tail call void %22(%class.CPWL_Wnd* nonnull %16) #13
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.19"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.17"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.19"* %5, %"class.std::__1::unique_ptr.19"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %31, align 8
  store %"class.IPWL_SystemHandler::PerWindowData"* null, %"class.IPWL_SystemHandler::PerWindowData"** %31, align 8
  %33 = icmp eq %"class.IPWL_SystemHandler::PerWindowData"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.IPWL_SystemHandler::PerWindowData"* %32 to void (%"class.IPWL_SystemHandler::PerWindowData"*)***
  %36 = load void (%"class.IPWL_SystemHandler::PerWindowData"*)**, void (%"class.IPWL_SystemHandler::PerWindowData"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.IPWL_SystemHandler::PerWindowData"*)*, void (%"class.IPWL_SystemHandler::PerWindowData"*)** %36, i64 1
  %38 = load void (%"class.IPWL_SystemHandler::PerWindowData"*)*, void (%"class.IPWL_SystemHandler::PerWindowData"*)** %37, align 8
  tail call void %38(%"class.IPWL_SystemHandler::PerWindowData"* nonnull %32) #13
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4
  %41 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %40, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 1
  %43 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %42, align 8
  %44 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %43, i64 0, i32 1
  %47 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %40, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %46, %"class.fxcrt::Observable::ObserverIface"* %47) #13
  br label %48

48:                                               ; preds = %45, %39
  %49 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 1
  %50 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %49, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 1, i32 1
  %52 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %51, align 8
  %53 = icmp eq %"class.CFX_Timer::HandlerIface"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %52, i64 0, i32 1
  %56 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %49, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %55, %"class.fxcrt::Observable::ObserverIface"* %56) #13
  br label %57

57:                                               ; preds = %48, %54
  %58 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %58) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_WndD0Ev(%class.CPWL_Wnd*) unnamed_addr #0 align 2 {
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %0) #13
  %2 = bitcast %class.CPWL_Wnd* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.CPWL_Wnd::CreateParams", align 8
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %3, i64 0, i32 0
  tail call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* %4) #13
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %6 = bitcast %class.CFX_FloatRect* %5 to i8*
  %7 = bitcast %"class.CPWL_Wnd::CreateParams"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8
  %9 = bitcast %class.CFX_FloatRect* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %7, i64 16, i1 false)
  %10 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %8, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8, i32 2
  %13 = load float, float* %12, align 4
  %14 = fcmp ult float %11, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8, i32 3
  %19 = load float, float* %18, align 4
  %20 = fcmp ult float %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  tail call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* %8, float 1.000000e+00, float 1.000000e+00) #13
  tail call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* %8) #13
  br label %22

22:                                               ; preds = %15, %1, %21
  %23 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %24 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %23, align 8
  %25 = icmp eq %class.CPWL_MsgControl* %24, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 88) #14
  %28 = bitcast i8* %27 to %"class.fxcrt::Observable"*
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* nonnull %28) #13
  %29 = getelementptr inbounds i8, i8* %27, i64 24
  %30 = getelementptr inbounds i8, i8* %27, i64 72
  %31 = bitcast i8* %30 to %class.CPWL_Wnd**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 48, i1 false) #13
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 80
  %33 = bitcast i8* %32 to %class.CPWL_Wnd**
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %33, align 8
  %34 = bitcast %class.CPWL_MsgControl** %23 to i8**
  store i8* %27, i8** %34, align 8
  br label %35

35:                                               ; preds = %22, %26
  %36 = bitcast %"class.CPWL_Wnd::CreateParams"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %36) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 bitcast (%"class.CPWL_Wnd::CreateParams"* @__const._ZN8CPWL_Wnd16CreateVScrollBarERKNS_12CreateParamsE.scp to i8*), i64 184, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %7, i64 16, i1 false) #13
  %37 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 1
  %38 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 1, i32 1
  %39 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %38, align 8
  %40 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %37, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 1, i32 1
  store %"class.CFX_Timer::HandlerIface"* %39, %"class.CFX_Timer::HandlerIface"** %41, align 8
  %42 = icmp eq %"class.CFX_Timer::HandlerIface"* %39, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %37, i64 0, i32 0
  %45 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %39, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %45, %"class.fxcrt::Observable::ObserverIface"* %44) #13
  br label %46

46:                                               ; preds = %43, %35
  %47 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 2
  %48 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 2
  %49 = bitcast %"class.fxcrt::UnownedPtr"* %47 to i8*
  %50 = bitcast %"class.fxcrt::UnownedPtr"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #13
  %51 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 4
  %52 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 1
  %53 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %52, align 8
  %54 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %51, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 4, i32 1
  store %"class.CPWL_Wnd::ProviderIface"* %53, %"class.CPWL_Wnd::ProviderIface"** %55, align 8
  %56 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %53, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %51, i64 0, i32 0
  %59 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %53, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %59, %"class.fxcrt::Observable::ObserverIface"* %58) #13
  br label %60

60:                                               ; preds = %46, %57
  %61 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 5
  %62 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 5
  %63 = bitcast %"class.fxcrt::UnownedPtr.6"* %61 to i8*
  %64 = bitcast %"class.fxcrt::UnownedPtr.6"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 116, i1 false) #13
  %65 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %2, i64 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, -65536
  store i32 %67, i32* %65, align 8
  call void @_ZN8CPWL_Wnd16CreateVScrollBarERKNS_12CreateParamsE(%class.CPWL_Wnd* %0, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %2) #13
  %68 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)***
  %69 = load void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)**, void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)*, void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)** %69, i64 36
  %71 = load void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)*, void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)** %70, align 8
  call void %71(%class.CPWL_Wnd* %0, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %2) #13
  %72 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %75 = lshr i32 %73, 26
  %76 = trunc i32 %75 to i8
  %77 = and i8 %76, 1
  store i8 %77, i8* %74, align 1
  %78 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %79 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %79, i64 39
  %81 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %80, align 8
  call void %81(%class.CPWL_Wnd* %0) #13
  %82 = bitcast %class.CPWL_Wnd* %0 to i1 (%class.CPWL_Wnd*)***
  %83 = load i1 (%class.CPWL_Wnd*)**, i1 (%class.CPWL_Wnd*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %83, i64 37
  %85 = load i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %84, align 8
  %86 = call zeroext i1 %85(%class.CPWL_Wnd* %0) #13
  br i1 %86, label %87, label %89

87:                                               ; preds = %60
  %88 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  store i8 1, i8* %88, align 8
  br label %89

89:                                               ; preds = %60, %87
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %90 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %55, align 8
  %91 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %90, i64 0, i32 1
  %94 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %51, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %93, %"class.fxcrt::Observable::ObserverIface"* %94) #13
  br label %95

95:                                               ; preds = %92, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %96 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %41, align 8
  %97 = icmp eq %"class.CFX_Timer::HandlerIface"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %96, i64 0, i32 1
  %100 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %37, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %99, %"class.fxcrt::Observable::ObserverIface"* %100) #13
  br label %101

101:                                              ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %36) #13
  ret void
}

declare void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect*) local_unnamed_addr #3

declare void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd16CreateMsgControlEv(%class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  %4 = icmp eq %class.CPWL_MsgControl* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 88) #14
  %7 = bitcast i8* %6 to %"class.fxcrt::Observable"*
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* nonnull %7) #13
  %8 = getelementptr inbounds i8, i8* %6, i64 24
  %9 = getelementptr inbounds i8, i8* %6, i64 72
  %10 = bitcast i8* %9 to %class.CPWL_Wnd**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #13
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 80
  %12 = bitcast i8* %11 to %class.CPWL_Wnd**
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %12, align 8
  %13 = bitcast %class.CPWL_MsgControl** %2 to i8**
  store i8* %6, i8** %13, align 8
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd15CreateScrollBarERKNS_12CreateParamsE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8CPWL_Wnd16CreateVScrollBarERKNS_12CreateParamsE(%class.CPWL_Wnd* %0, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, %1
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd9OnCreatedEv(%class.CPWL_Wnd* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd9OnDestroyEv(%class.CPWL_Wnd* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd22InvalidateFocusHandlerEPNS_17FocusHandlerIfaceE(%class.CPWL_Wnd* nocapture, %"class.CPWL_Wnd::FocusHandlerIface"* readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 5, i32 0
  %4 = load %"class.CPWL_Wnd::FocusHandlerIface"*, %"class.CPWL_Wnd::FocusHandlerIface"** %3, align 8
  %5 = icmp eq %"class.CPWL_Wnd::FocusHandlerIface"* %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store %"class.CPWL_Wnd::FocusHandlerIface"* null, %"class.CPWL_Wnd::FocusHandlerIface"** %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd18InvalidateProviderEPNS_13ProviderIfaceE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::ProviderIface"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 1
  %4 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %3, align 8
  %5 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %4, %1
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %9, %"class.fxcrt::Observable::ObserverIface"* %10) #13
  br label %11

11:                                               ; preds = %6, %8
  store %"class.CPWL_Wnd::ProviderIface"* null, %"class.CPWL_Wnd::ProviderIface"** %3, align 8
  br label %12

12:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd7DestroyEv(%class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %3 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %3, i64 19
  %5 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %4, align 8
  tail call void %5(%class.CPWL_Wnd* %0) #13
  %6 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %2, align 8
  %7 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %6, i64 40
  %8 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %7, align 8
  tail call void %8(%class.CPWL_Wnd* %0) #13
  %9 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %111, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 6, i32 0
  store %class.CPWL_ScrollBar* null, %class.CPWL_ScrollBar** %13, align 8
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %14, align 8
  %16 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.19"* %15, %17
  br i1 %18, label %44, label %19

19:                                               ; preds = %12, %40
  %20 = phi %"class.std::__1::unique_ptr.19"* [ %42, %40 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %20, i64 -1, i32 0, i32 0, i32 0
  %22 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %21, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %21, align 8
  %23 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %16, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %23, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %25, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %25, align 8
  %27 = icmp eq %class.CPWL_Wnd* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = bitcast %class.CPWL_Wnd* %26 to void (%class.CPWL_Wnd*)***
  %30 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %30, i64 1
  %32 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %31, align 8
  tail call void %32(%class.CPWL_Wnd* nonnull %26) #13
  br label %33

33:                                               ; preds = %19, %28
  store %"class.std::__1::unique_ptr.19"* %24, %"class.std::__1::unique_ptr.19"** %16, align 8
  tail call void @_ZN8CPWL_Wnd7DestroyEv(%class.CPWL_Wnd* %22)
  %34 = icmp eq %class.CPWL_Wnd* %22, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = bitcast %class.CPWL_Wnd* %22 to void (%class.CPWL_Wnd*)***
  %37 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %37, i64 1
  %39 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %38, align 8
  tail call void %39(%class.CPWL_Wnd* nonnull %22) #13
  br label %40

40:                                               ; preds = %33, %35
  %41 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %14, align 8
  %42 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %16, align 8
  %43 = icmp eq %"class.std::__1::unique_ptr.19"* %41, %42
  br i1 %43, label %44, label %19

44:                                               ; preds = %40, %12
  %45 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 4, i32 0
  %46 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %45, align 8
  %47 = icmp eq %class.CPWL_Wnd* %46, null
  br i1 %47, label %110, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %46, i64 0, i32 5, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %49, align 8
  %51 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %46, i64 0, i32 5, i32 0, i32 1
  %52 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %51, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr.19"* %50, %52
  br i1 %53, label %62, label %54

54:                                               ; preds = %48, %59
  %55 = phi %"class.std::__1::unique_ptr.19"* [ %60, %59 ], [ %50, %48 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %56, align 8
  %58 = icmp eq %class.CPWL_Wnd* %57, %0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %55, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.19"* %60, %52
  br i1 %61, label %110, label %54

62:                                               ; preds = %54, %48
  %63 = phi %"class.std::__1::unique_ptr.19"* [ %50, %48 ], [ %55, %54 ]
  %64 = icmp eq %"class.std::__1::unique_ptr.19"* %63, %52
  br i1 %64, label %110, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %63, i64 0, i32 0, i32 0, i32 0
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %63, i64 1
  %68 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %51, align 8
  %69 = icmp eq %"class.std::__1::unique_ptr.19"* %67, %68
  br i1 %69, label %92, label %70

70:                                               ; preds = %65, %85
  %71 = phi %"class.std::__1::unique_ptr.19"* [ %87, %85 ], [ %63, %65 ]
  %72 = phi %"class.std::__1::unique_ptr.19"* [ %86, %85 ], [ %67, %65 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::unique_ptr.19"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %73, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %71, i64 0, i32 0, i32 0, i32 0
  %77 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %76, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.19"* %71 to i64*
  store i64 %75, i64* %78, align 8
  %79 = icmp eq %class.CPWL_Wnd* %77, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %70
  %81 = bitcast %class.CPWL_Wnd* %77 to void (%class.CPWL_Wnd*)***
  %82 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %82, i64 1
  %84 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %83, align 8
  tail call void %84(%class.CPWL_Wnd* nonnull %77) #13
  br label %85

85:                                               ; preds = %80, %70
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %72, i64 1
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %71, i64 1
  %88 = icmp eq %"class.std::__1::unique_ptr.19"* %86, %68
  br i1 %88, label %89, label %70

89:                                               ; preds = %85
  %90 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %51, align 8
  %91 = icmp eq %"class.std::__1::unique_ptr.19"* %90, %87
  br i1 %91, label %108, label %92

92:                                               ; preds = %89, %65
  %93 = phi %"class.std::__1::unique_ptr.19"* [ %87, %89 ], [ %63, %65 ]
  %94 = phi %"class.std::__1::unique_ptr.19"* [ %90, %89 ], [ %67, %65 ]
  br label %95

95:                                               ; preds = %106, %92
  %96 = phi %"class.std::__1::unique_ptr.19"* [ %97, %106 ], [ %94, %92 ]
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %96, i64 -1
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %98, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %98, align 8
  %100 = icmp eq %class.CPWL_Wnd* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = bitcast %class.CPWL_Wnd* %99 to void (%class.CPWL_Wnd*)***
  %103 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %103, i64 1
  %105 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %104, align 8
  tail call void %105(%class.CPWL_Wnd* nonnull %99) #13
  br label %106

106:                                              ; preds = %101, %95
  %107 = icmp eq %"class.std::__1::unique_ptr.19"* %97, %93
  br i1 %107, label %108, label %95

108:                                              ; preds = %106, %89
  %109 = phi %"class.std::__1::unique_ptr.19"* [ %87, %89 ], [ %93, %106 ]
  store %"class.std::__1::unique_ptr.19"* %109, %"class.std::__1::unique_ptr.19"** %51, align 8
  br label %110

110:                                              ; preds = %59, %44, %108, %62
  store i8 0, i8* %9, align 8
  br label %111

111:                                              ; preds = %1, %110
  %112 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %113 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %112, align 8
  %114 = icmp eq %class.CPWL_MsgControl* %113, null
  br i1 %114, label %140, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %113, i64 0, i32 3, i32 0
  %117 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %116, align 8
  %118 = icmp eq %class.CPWL_Wnd* %117, %0
  br i1 %118, label %119, label %140

119:                                              ; preds = %115
  %120 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %113, i64 0, i32 2, i32 0, i32 0
  %121 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %120, align 8
  %122 = icmp eq %"class.fxcrt::UnownedPtr.7"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %121 to i64
  %125 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %113, i64 0, i32 2, i32 0, i32 1
  %126 = bitcast %"class.fxcrt::UnownedPtr.7"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = bitcast %"class.fxcrt::UnownedPtr.7"* %121 to i8*
  tail call void @_ZdlPv(i8* %127) #14
  br label %128

128:                                              ; preds = %123, %119
  %129 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %113, i64 0, i32 1, i32 0, i32 0
  %130 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %129, align 8
  %131 = icmp eq %"class.fxcrt::UnownedPtr.7"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %130 to i64
  %134 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %113, i64 0, i32 1, i32 0, i32 1
  %135 = bitcast %"class.fxcrt::UnownedPtr.7"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.fxcrt::UnownedPtr.7"* %130 to i8*
  tail call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %132, %128
  %138 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %113, i64 0, i32 0
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %138) #13
  %139 = bitcast %class.CPWL_MsgControl* %113 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %111, %115, %137
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd11RemoveChildEPS_(%class.CPWL_Wnd* nocapture, %class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.19"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.std::__1::unique_ptr.19"* [ %14, %13 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %10, align 8
  %12 = icmp eq %class.CPWL_Wnd* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %9, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.19"* %14, %6
  br i1 %15, label %64, label %8

16:                                               ; preds = %8, %2
  %17 = phi %"class.std::__1::unique_ptr.19"* [ %4, %2 ], [ %9, %8 ]
  %18 = icmp eq %"class.std::__1::unique_ptr.19"* %17, %6
  br i1 %18, label %64, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %17, i64 0, i32 0, i32 0, i32 0
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %17, i64 1
  %22 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %5, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr.19"* %21, %22
  br i1 %23, label %46, label %24

24:                                               ; preds = %19, %39
  %25 = phi %"class.std::__1::unique_ptr.19"* [ %41, %39 ], [ %17, %19 ]
  %26 = phi %"class.std::__1::unique_ptr.19"* [ %40, %39 ], [ %21, %19 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.19"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.19"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %class.CPWL_Wnd* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = bitcast %class.CPWL_Wnd* %31 to void (%class.CPWL_Wnd*)***
  %36 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %36, i64 1
  %38 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %37, align 8
  tail call void %38(%class.CPWL_Wnd* nonnull %31) #13
  br label %39

39:                                               ; preds = %34, %24
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %25, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr.19"* %40, %22
  br i1 %42, label %43, label %24

43:                                               ; preds = %39
  %44 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %5, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr.19"* %44, %41
  br i1 %45, label %62, label %46

46:                                               ; preds = %43, %19
  %47 = phi %"class.std::__1::unique_ptr.19"* [ %41, %43 ], [ %17, %19 ]
  %48 = phi %"class.std::__1::unique_ptr.19"* [ %44, %43 ], [ %21, %19 ]
  br label %49

49:                                               ; preds = %60, %46
  %50 = phi %"class.std::__1::unique_ptr.19"* [ %51, %60 ], [ %48, %46 ]
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %50, i64 -1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %52, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %52, align 8
  %54 = icmp eq %class.CPWL_Wnd* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = bitcast %class.CPWL_Wnd* %53 to void (%class.CPWL_Wnd*)***
  %57 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %57, i64 1
  %59 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %58, align 8
  tail call void %59(%class.CPWL_Wnd* nonnull %53) #13
  br label %60

60:                                               ; preds = %55, %49
  %61 = icmp eq %"class.std::__1::unique_ptr.19"* %51, %47
  br i1 %61, label %62, label %49

62:                                               ; preds = %60, %43
  %63 = phi %"class.std::__1::unique_ptr.19"* [ %41, %43 ], [ %47, %60 ]
  store %"class.std::__1::unique_ptr.19"* %63, %"class.std::__1::unique_ptr.19"** %5, align 8
  br label %64

64:                                               ; preds = %13, %16, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd17DestroyMsgControlEv(%class.CPWL_Wnd* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  %4 = icmp eq %class.CPWL_MsgControl* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 3, i32 0
  %7 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %6, align 8
  %8 = icmp eq %class.CPWL_Wnd* %7, %0
  br i1 %8, label %9, label %30

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %10, align 8
  %12 = icmp eq %"class.fxcrt::UnownedPtr.7"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %11 to i64
  %15 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.fxcrt::UnownedPtr.7"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.fxcrt::UnownedPtr.7"* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %13, %9
  %19 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %19, align 8
  %21 = icmp eq %"class.fxcrt::UnownedPtr.7"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %20 to i64
  %24 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.fxcrt::UnownedPtr.7"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.fxcrt::UnownedPtr.7"* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 0
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %28) #13
  %29 = bitcast %class.CPWL_MsgControl* %3 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %1, %27, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd*, %class.CFX_FloatRect* dereferenceable(16), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_FloatRect, align 8
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %11 = bitcast %class.CFX_FloatRect* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 8
  %13 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 8
  %16 = bitcast %class.CFX_FloatRect* %10 to i8*
  %17 = bitcast %class.CFX_FloatRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false)
  tail call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* %10) #13
  br i1 %2, label %18, label %44

18:                                               ; preds = %9
  %19 = extractelement <2 x float> %12, i32 0
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %19, %21
  br i1 %22, label %38, label %23

23:                                               ; preds = %18
  %24 = extractelement <2 x float> %15, i32 0
  %25 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %26 = load float, float* %25, align 4
  %27 = fcmp une float %24, %26
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = extractelement <2 x float> %15, i32 1
  %30 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %31 = load float, float* %30, align 4
  %32 = fcmp une float %29, %31
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = extractelement <2 x float> %12, i32 1
  %35 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 1
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %33, %28, %23, %18
  %39 = bitcast %class.CPWL_Wnd* %0 to i1 (%class.CPWL_Wnd*)***
  %40 = load i1 (%class.CPWL_Wnd*)**, i1 (%class.CPWL_Wnd*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %40, i64 37
  %42 = load i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %41, align 8
  %43 = tail call zeroext i1 %42(%class.CPWL_Wnd* %0) #13
  br i1 %43, label %44, label %58

44:                                               ; preds = %33, %38, %9
  br i1 %3, label %45, label %55

45:                                               ; preds = %44
  %46 = bitcast %class.CFX_FloatRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = bitcast %class.CFX_FloatRect* %5 to <2 x float>*
  store <2 x float> %12, <2 x float>* %47, align 8
  %48 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 2
  %49 = bitcast float* %48 to <2 x float>*
  store <2 x float> %15, <2 x float>* %49, align 8
  call void @_ZN13CFX_FloatRect5UnionERKS_(%class.CFX_FloatRect* nonnull %5, %class.CFX_FloatRect* dereferenceable(16) %1) #13
  %50 = bitcast %class.CPWL_Wnd* %0 to i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)***
  %51 = load i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)**, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)** %51, i64 2
  %53 = load i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)** %52, align 8
  %54 = call zeroext i1 %53(%class.CPWL_Wnd* %0, %class.CFX_FloatRect* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  br i1 %54, label %55, label %58

55:                                               ; preds = %45, %44
  %56 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 0
  %57 = bitcast %class.CFX_FloatRect* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %16, i64 16, i1 false)
  br label %58

58:                                               ; preds = %4, %55, %38, %45
  %59 = phi i1 [ true, %4 ], [ true, %55 ], [ false, %38 ], [ false, %45 ]
  ret i1 %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %3 = bitcast %class.CFX_FloatRect* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 8
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd18InvalidateRectMoveERK13CFX_FloatRectS2_(%class.CPWL_Wnd*, %class.CFX_FloatRect* nocapture readonly dereferenceable(16), %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_FloatRect, align 4
  %5 = bitcast %class.CFX_FloatRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = bitcast %class.CFX_FloatRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %6, i64 16, i1 false)
  call void @_ZN13CFX_FloatRect5UnionERKS_(%class.CFX_FloatRect* nonnull %4, %class.CFX_FloatRect* dereferenceable(16) %2) #13
  %7 = bitcast %class.CPWL_Wnd* %0 to i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)***
  %8 = load i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)**, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)** %8, i64 2
  %10 = load i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)** %9, align 8
  %11 = call zeroext i1 %10(%class.CPWL_Wnd* %0, %class.CFX_FloatRect* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret i1 %11
}

declare void @_ZN13CFX_FloatRect5UnionERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd14DrawAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)***
  %13 = load void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)**, void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)*, void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)** %13, i64 38
  %15 = load void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)*, void (%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)** %14, align 8
  tail call void %15(%class.CPWL_Wnd* %0, %class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2) #13
  %16 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %16, align 8
  %18 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.19"* %17, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %11, %21
  %22 = phi %"class.std::__1::unique_ptr.19"* [ %25, %21 ], [ %17, %11 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %23, align 8
  tail call void @_ZN8CPWL_Wnd14DrawAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd* %24, %class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2) #13
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %22, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr.19"* %25, %19
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %11, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd19DrawChildAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd* nocapture readonly, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %4, align 8
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.19"* %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %3, %10
  %11 = phi %"class.std::__1::unique_ptr.19"* [ %14, %10 ], [ %5, %3 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %12, align 8
  tail call void @_ZN8CPWL_Wnd14DrawAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd* %13, %class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2)
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %11, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.19"* %14, %7
  br i1 %15, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd* nocapture readonly, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.CFX_Color, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %class.CFX_FloatRect*
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_FloatRect*
  %9 = alloca %struct.CFX_Color, align 4
  %10 = alloca %struct.CFX_Color, align 4
  %11 = alloca %struct.CFX_Color, align 4
  %12 = alloca %struct.CFX_Color, align 4
  %13 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %15 = bitcast %class.CFX_FloatRect* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7, i32 2
  %18 = bitcast float* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast { <2 x float>, <2 x float> }* %5 to i64*
  store i64 %16, i64* %20, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %22 = bitcast <2 x float>* %21 to i64*
  store i64 %19, i64* %22, align 8
  %23 = trunc i64 %16 to i32
  %24 = bitcast i32 %23 to float
  %25 = trunc i64 %19 to i32
  %26 = bitcast i32 %25 to float
  %27 = fcmp ult float %24, %26
  br i1 %27, label %28, label %100

28:                                               ; preds = %3
  %29 = lshr i64 %19, 32
  %30 = trunc i64 %29 to i32
  %31 = bitcast i32 %30 to float
  %32 = lshr i64 %16, 32
  %33 = trunc i64 %32 to i32
  %34 = bitcast i32 %33 to float
  %35 = fcmp ult float %34, %31
  br i1 %35, label %36, label %100

36:                                               ; preds = %28
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 536870912
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %36
  %42 = and i32 %38, 1073741824
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 9
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi float [ %47, %44 ], [ 0.000000e+00, %41 ]
  %50 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #13
  %51 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %6, float %49, float %49) #13
  %52 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %53 = extractvalue { <2 x float>, <2 x float> } %51, 0
  store <2 x float> %53, <2 x float>* %52, align 8
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %55 = extractvalue { <2 x float>, <2 x float> } %51, 1
  store <2 x float> %55, <2 x float>* %54, align 8
  %56 = bitcast %struct.CFX_Color* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %56) #13
  %57 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 7
  %58 = bitcast %struct.CFX_Color* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 %58, i64 20, i1 false) #13
  %59 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 12
  %60 = load i32, i32* %59, align 8
  call void @_ZN16CFX_RenderDevice12DrawFillRectEPK10CFX_MatrixRK13CFX_FloatRectRK9CFX_Colori(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %8, %struct.CFX_Color* nonnull dereferenceable(20) %9, i32 %60) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #13
  %61 = load i32, i32* %37, align 8
  br label %62

62:                                               ; preds = %36, %48
  %63 = phi i32 [ %38, %36 ], [ %61, %48 ]
  %64 = and i32 %63, 1073741824
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %100, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 9
  %68 = load i32, i32* %67, align 4
  %69 = sitofp i32 %68 to float
  %70 = bitcast %struct.CFX_Color* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %70) #13
  %71 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 10
  %72 = bitcast %struct.CFX_Color* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %70, i8* align 8 %72, i64 20, i1 false) #13
  %73 = bitcast %struct.CFX_Color* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %73) #13
  %74 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 8
  %75 = load i32, i32* %74, align 8
  switch i32 %75, label %93 [
    i32 2, label %76
    i32 3, label %85
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %11, i64 0, i32 0
  store i32 1, i32* %77, align 4, !alias.scope !3
  %78 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %11, i64 0, i32 1
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %79, align 4, !alias.scope !3
  %80 = bitcast %struct.CFX_Color* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %80) #13
  %81 = bitcast %struct.CFX_Color* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %81) #13, !noalias !6
  %82 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 7
  %83 = bitcast %struct.CFX_Color* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %81, i8* align 4 %83, i64 20, i1 false) #13, !noalias !6
  call void @_ZNK9CFX_ColordvEf(%struct.CFX_Color* nonnull sret %12, %struct.CFX_Color* nonnull %4, float 2.000000e+00) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %81) #13, !noalias !6
  %84 = load i32, i32* %74, align 8
  br label %95

85:                                               ; preds = %66
  %86 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %11, i64 0, i32 0
  store i32 1, i32* %86, align 4, !alias.scope !3
  %87 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %11, i64 0, i32 1
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %88, align 4, !alias.scope !3
  %89 = bitcast %struct.CFX_Color* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %89) #13
  %90 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %12, i64 0, i32 0
  store i32 1, i32* %90, align 4, !alias.scope !6
  %91 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %12, i64 0, i32 1
  %92 = bitcast float* %91 to <4 x float>*
  store <4 x float> <float 7.500000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %92, align 4, !alias.scope !6
  br label %95

93:                                               ; preds = %66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %73, i8 0, i64 20, i1 false) #13, !alias.scope !3
  %94 = bitcast %struct.CFX_Color* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %94) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %94, i8 0, i64 20, i1 false) #13, !alias.scope !6
  br label %95

95:                                               ; preds = %76, %85, %93
  %96 = phi i32 [ %84, %76 ], [ 3, %85 ], [ %75, %93 ]
  %97 = phi i8* [ %80, %76 ], [ %89, %85 ], [ %94, %93 ]
  %98 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 12
  %99 = load i32, i32* %98, align 8
  call void @_ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %6, float %69, %struct.CFX_Color* nonnull dereferenceable(20) %10, %struct.CFX_Color* nonnull dereferenceable(20) %11, %struct.CFX_Color* nonnull dereferenceable(20) %12, i32 %96, i32 %99) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %73) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %70) #13
  br label %100

100:                                              ; preds = %62, %28, %3, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1073741824
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 9
  %8 = load i32, i32* %7, align 4
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %1 ]
  ret i32 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* nocapture readnone) local_unnamed_addr #2 align 2 {
  ret i32 0
}

declare void @_ZN16CFX_RenderDevice12DrawFillRectEPK10CFX_MatrixRK13CFX_FloatRectRK9CFX_Colori(%class.CFX_RenderDevice*, %class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), %struct.CFX_Color* dereferenceable(20), i32) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPWL_Wnd18GetBackgroundColorEv(%struct.CFX_Color* noalias nocapture sret, %class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 2, i32 7
  %4 = bitcast %struct.CFX_Color* %0 to i8*
  %5 = bitcast %struct.CFX_Color* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 12
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei(%class.CFX_RenderDevice*, %class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), float, %struct.CFX_Color* dereferenceable(20), %struct.CFX_Color* dereferenceable(20), %struct.CFX_Color* dereferenceable(20), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPWL_Wnd14GetBorderColorEv(%struct.CFX_Color* noalias nocapture sret, %class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 2, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1073741824
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 2, i32 10
  %9 = bitcast %struct.CFX_Color* %0 to i8*
  %10 = bitcast %struct.CFX_Color* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 20, i1 false)
  br label %13

11:                                               ; preds = %2
  %12 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 20, i1 false)
  br label %13

13:                                               ; preds = %11, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK8CPWL_Wnd21GetBorderLeftTopColorE11BorderStyle(%struct.CFX_Color* noalias nocapture sret, %class.CPWL_Wnd* nocapture readnone, i32) local_unnamed_addr #8 align 2 {
  switch i32 %2, label %12 [
    i32 2, label %4
    i32 3, label %8
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  %7 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %7, align 4
  br label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %11, align 4
  br label %14

12:                                               ; preds = %3
  %13 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false)
  br label %14

14:                                               ; preds = %12, %8, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8CPWL_Wnd14GetBorderStyleEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPWL_Wnd25GetBorderRightBottomColorE11BorderStyle(%struct.CFX_Color* noalias sret, %class.CPWL_Wnd* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.CFX_Color, align 4
  switch i32 %2, label %13 [
    i32 2, label %5
    i32 3, label %9
  ]

5:                                                ; preds = %3
  %6 = bitcast %struct.CFX_Color* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 2, i32 7
  %8 = bitcast %struct.CFX_Color* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %8, i64 20, i1 false) #13
  call void @_ZNK9CFX_ColordvEf(%struct.CFX_Color* sret %0, %struct.CFX_Color* nonnull %4, float 2.000000e+00) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #13
  br label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 7.500000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 4
  br label %15

13:                                               ; preds = %3
  %14 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 20, i1 false)
  br label %15

15:                                               ; preds = %13, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect* readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_Matrix, align 16
  %4 = alloca %class.CFX_Matrix, align 16
  %5 = alloca %"class.fxcrt::ObservedPtr.49", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %class.CFX_FloatRect*
  %8 = alloca %class.CFX_FloatRect, align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %class.CFX_FloatRect*
  %11 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %111, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.fxcrt::ObservedPtr.49"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %5, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %17, align 8
  %18 = icmp eq %class.CPWL_Wnd* %0, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %21, %"class.fxcrt::Observable::ObserverIface"* nonnull %20) #13
  br label %22

22:                                               ; preds = %14, %19
  %23 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = icmp eq %class.CFX_FloatRect* %1, null
  %25 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -1, i64 16, i1 false)
  br i1 %24, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.CFX_FloatRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %23, i8* nonnull align 4 %27, i64 16, i1 false)
  br label %32

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %30 = bitcast %class.CFX_FloatRect* %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  store <2 x i64> %31, <2 x i64>* %6, align 16
  br label %32

32:                                               ; preds = %28, %26
  %33 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 2097152
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %54

37:                                               ; preds = %32
  %38 = bitcast %class.CFX_FloatRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %39 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %8, i64 0, i32 0
  %40 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %8, i64 0, i32 2
  %41 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8
  %42 = bitcast %class.CFX_FloatRect* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %42, i64 16, i1 false)
  %43 = load float, float* %39, align 4
  %44 = load float, float* %40, align 4
  %45 = fcmp ult float %43, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %37
  %47 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %8, i64 0, i32 3
  %48 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %8, i64 0, i32 1
  %49 = load float, float* %48, align 4
  %50 = load float, float* %47, align 4
  %51 = fcmp ult float %49, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  call void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect* nonnull %7, %class.CFX_FloatRect* nonnull dereferenceable(16) %8) #13
  br label %53

53:                                               ; preds = %46, %37, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  br label %54

54:                                               ; preds = %32, %53
  %55 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #13
  %56 = bitcast %class.CFX_Matrix* %4 to i8*
  %57 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #13
  %58 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %59 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %60 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %60, align 16, !alias.scope !9
  store float 0.000000e+00, float* %58, align 16, !alias.scope !9
  store float 0.000000e+00, float* %59, align 4, !alias.scope !9
  %61 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 1
  %62 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %61, align 8, !noalias !9
  %63 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %62, null
  br i1 %63, label %90, label %64

64:                                               ; preds = %54
  %65 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #13, !noalias !9
  %66 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %66, align 8, !noalias !9
  %68 = bitcast %"class.CPWL_Wnd::ProviderIface"* %62 to void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)***
  %69 = load void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)**, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*** %68, align 8, !noalias !9
  %70 = getelementptr inbounds void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)** %69, i64 2
  %71 = load void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)** %70, align 8, !noalias !9
  call void %71(%class.CFX_Matrix* nonnull sret %3, %"class.CPWL_Wnd::ProviderIface"* nonnull %62, %"class.IPWL_SystemHandler::PerWindowData"* %67) #13, !noalias !9
  %72 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 16, !noalias !12
  %74 = fmul <4 x float> %73, zeroinitializer
  %75 = shufflevector <4 x float> %74, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %76 = fadd <4 x float> %73, %75
  %77 = extractelement <4 x float> %74, i32 2
  %78 = extractelement <4 x float> %74, i32 0
  %79 = fadd float %78, %77
  %80 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %81 = load float, float* %80, align 16, !noalias !12
  %82 = fadd float %79, %81
  %83 = extractelement <4 x float> %74, i32 3
  %84 = extractelement <4 x float> %74, i32 1
  %85 = fadd float %84, %83
  %86 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %87 = load float, float* %86, align 4, !noalias !12
  %88 = fadd float %85, %87
  %89 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> %76, <4 x float>* %89, align 16, !alias.scope !9
  store float %82, float* %58, align 16, !alias.scope !9
  store float %88, float* %59, align 4, !alias.scope !9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #13, !noalias !9
  br label %90

90:                                               ; preds = %54, %64
  %91 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %4, %class.CFX_FloatRect* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #13
  %92 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %93 = extractvalue { <2 x float>, <2 x float> } %91, 0
  store <2 x float> %93, <2 x float>* %92, align 8
  %94 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %95 = extractvalue { <2 x float>, <2 x float> } %91, 1
  store <2 x float> %95, <2 x float>* %94, align 8
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %10, float 1.000000e+00, float 1.000000e+00) #13
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %10) #13
  %96 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 2, i32 0
  %97 = load %class.IPWL_SystemHandler*, %class.IPWL_SystemHandler** %96, align 8
  %98 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %98, align 8
  %100 = bitcast %class.IPWL_SystemHandler* %97 to void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)***
  %101 = load void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)**, void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)*, void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)** %101, i64 2
  %103 = load void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)*, void (%class.IPWL_SystemHandler*, %"class.IPWL_SystemHandler::PerWindowData"*, %class.CFX_FloatRect*)** %102, align 8
  call void %103(%class.IPWL_SystemHandler* %97, %"class.IPWL_SystemHandler::PerWindowData"* %99, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #13
  %104 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %17, align 8
  %105 = icmp ne %class.CPWL_Wnd* %104, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %106 = icmp eq %class.CPWL_Wnd* %104, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %90
  %108 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %104, i64 0, i32 1
  %109 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %5, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %108, %"class.fxcrt::Observable::ObserverIface"* nonnull %109) #13
  br label %110

110:                                              ; preds = %90, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  br label %111

111:                                              ; preds = %2, %110
  %112 = phi i1 [ %105, %110 ], [ true, %2 ]
  ret i1 %112
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %class.CFX_FloatRect* @_ZNK8CPWL_Wnd11GetClipRectEv(%class.CPWL_Wnd* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8
  ret %class.CFX_FloatRect* %2
}

declare void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd8PWLtoWndERK13CFX_FloatRect(%class.CPWL_Wnd* nocapture readonly, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_Matrix, align 16
  %4 = alloca %class.CFX_Matrix, align 16
  %5 = bitcast %class.CFX_Matrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %7 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %8 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %8, align 16, !alias.scope !15
  store float 0.000000e+00, float* %6, align 16, !alias.scope !15
  store float 0.000000e+00, float* %7, align 4, !alias.scope !15
  %9 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 4, i32 1
  %10 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %9, align 8, !noalias !15
  %11 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %10, null
  br i1 %11, label %38, label %12

12:                                               ; preds = %2
  %13 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13, !noalias !15
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %14, align 8, !noalias !15
  %16 = bitcast %"class.CPWL_Wnd::ProviderIface"* %10 to void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)***
  %17 = load void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)**, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*** %16, align 8, !noalias !15
  %18 = getelementptr inbounds void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)** %17, i64 2
  %19 = load void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)** %18, align 8, !noalias !15
  call void %19(%class.CFX_Matrix* nonnull sret %3, %"class.CPWL_Wnd::ProviderIface"* nonnull %10, %"class.IPWL_SystemHandler::PerWindowData"* %15) #13, !noalias !15
  %20 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !noalias !18
  %22 = fmul <4 x float> %21, zeroinitializer
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %24 = fadd <4 x float> %21, %23
  %25 = extractelement <4 x float> %22, i32 2
  %26 = extractelement <4 x float> %22, i32 0
  %27 = fadd float %26, %25
  %28 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %29 = load float, float* %28, align 16, !noalias !18
  %30 = fadd float %27, %29
  %31 = extractelement <4 x float> %22, i32 3
  %32 = extractelement <4 x float> %22, i32 1
  %33 = fadd float %32, %31
  %34 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %35 = load float, float* %34, align 4, !noalias !18
  %36 = fadd float %33, %35
  %37 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> %24, <4 x float>* %37, align 16, !alias.scope !15
  store float %30, float* %6, align 16, !alias.scope !15
  store float %36, float* %7, align 4, !alias.scope !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13, !noalias !15
  br label %38

38:                                               ; preds = %2, %12
  %39 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %4, %class.CFX_FloatRect* dereferenceable(16) %1) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret { <2 x float>, <2 x float> } %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI8CPWL_WndED2Ev(%"class.fxcrt::ObservedPtr.49"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 1
  %4 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %3, align 8
  %5 = icmp eq %class.CPWL_Wnd* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd9OnKeyDownEtj(%class.CPWL_Wnd* readonly, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %66, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %13 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %12, align 8
  %14 = icmp eq %class.CPWL_MsgControl* %13, null
  %15 = icmp eq %class.CPWL_Wnd* %0, null
  %16 = or i1 %15, %14
  br i1 %16, label %66, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %13, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %18, align 8
  %20 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %13, i64 0, i32 2, i32 0, i32 1
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %20, align 8
  %22 = icmp eq %"class.fxcrt::UnownedPtr.7"* %19, %21
  br i1 %22, label %31, label %23

23:                                               ; preds = %17, %28
  %24 = phi %"class.fxcrt::UnownedPtr.7"* [ %29, %28 ], [ %19, %17 ]
  %25 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %24, i64 0, i32 0
  %26 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %25, align 8
  %27 = icmp eq %class.CPWL_Wnd* %26, %0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %24, i64 1
  %30 = icmp eq %"class.fxcrt::UnownedPtr.7"* %29, %21
  br i1 %30, label %66, label %23

31:                                               ; preds = %23, %17
  %32 = phi %"class.fxcrt::UnownedPtr.7"* [ %19, %17 ], [ %24, %23 ]
  %33 = icmp eq %"class.fxcrt::UnownedPtr.7"* %32, %21
  br i1 %33, label %66, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %35, align 8
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr.19"* %36, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %34, %57
  %41 = phi %"class.std::__1::unique_ptr.19"* [ %58, %57 ], [ %36, %34 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %42, align 8
  %44 = icmp eq %class.CPWL_Wnd* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %40
  br i1 %22, label %54, label %46

46:                                               ; preds = %45, %51
  %47 = phi %"class.fxcrt::UnownedPtr.7"* [ %52, %51 ], [ %19, %45 ]
  %48 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %47, i64 0, i32 0
  %49 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %48, align 8
  %50 = icmp eq %class.CPWL_Wnd* %49, %43
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %47, i64 1
  %53 = icmp eq %"class.fxcrt::UnownedPtr.7"* %52, %21
  br i1 %53, label %57, label %46

54:                                               ; preds = %46, %45
  %55 = phi %"class.fxcrt::UnownedPtr.7"* [ %19, %45 ], [ %47, %46 ]
  %56 = icmp eq %"class.fxcrt::UnownedPtr.7"* %55, %21
  br i1 %56, label %57, label %60

57:                                               ; preds = %51, %54, %40
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %41, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr.19"* %58, %38
  br i1 %59, label %66, label %40

60:                                               ; preds = %54
  %61 = bitcast %class.CPWL_Wnd* %43 to i1 (%class.CPWL_Wnd*, i16, i32)***
  %62 = load i1 (%class.CPWL_Wnd*, i16, i32)**, i1 (%class.CPWL_Wnd*, i16, i32)*** %61, align 8
  %63 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i16, i32)*, i1 (%class.CPWL_Wnd*, i16, i32)** %62, i64 3
  %64 = load i1 (%class.CPWL_Wnd*, i16, i32)*, i1 (%class.CPWL_Wnd*, i16, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%class.CPWL_Wnd* nonnull %43, i16 zeroext %1, i32 %2) #13
  br label %66

66:                                               ; preds = %28, %57, %34, %31, %7, %3, %11, %60
  %67 = phi i1 [ %65, %60 ], [ false, %11 ], [ false, %31 ], [ false, %3 ], [ false, %7 ], [ false, %34 ], [ false, %57 ], [ false, %28 ]
  ret i1 %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd20IsWndCaptureKeyboardEPKS_(%class.CPWL_Wnd* nocapture readonly, %class.CPWL_Wnd* readnone) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %4 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %3, align 8
  %5 = icmp eq %class.CPWL_MsgControl* %4, null
  %6 = icmp eq %class.CPWL_Wnd* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %9, align 8
  %11 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 1
  %12 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %11, align 8
  %13 = icmp eq %"class.fxcrt::UnownedPtr.7"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8, %19
  %15 = phi %"class.fxcrt::UnownedPtr.7"* [ %20, %19 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %15, i64 0, i32 0
  %17 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %16, align 8
  %18 = icmp eq %class.CPWL_Wnd* %17, %1
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %15, i64 1
  %21 = icmp eq %"class.fxcrt::UnownedPtr.7"* %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %14, %8
  %23 = phi %"class.fxcrt::UnownedPtr.7"* [ %10, %8 ], [ %15, %14 ], [ %12, %19 ]
  %24 = icmp ne %"class.fxcrt::UnownedPtr.7"* %23, %12
  br label %25

25:                                               ; preds = %22, %2
  %26 = phi i1 [ false, %2 ], [ %24, %22 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd6OnCharEtj(%class.CPWL_Wnd* readonly, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %66, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %13 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %12, align 8
  %14 = icmp eq %class.CPWL_MsgControl* %13, null
  %15 = icmp eq %class.CPWL_Wnd* %0, null
  %16 = or i1 %15, %14
  br i1 %16, label %66, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %13, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %18, align 8
  %20 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %13, i64 0, i32 2, i32 0, i32 1
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %20, align 8
  %22 = icmp eq %"class.fxcrt::UnownedPtr.7"* %19, %21
  br i1 %22, label %31, label %23

23:                                               ; preds = %17, %28
  %24 = phi %"class.fxcrt::UnownedPtr.7"* [ %29, %28 ], [ %19, %17 ]
  %25 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %24, i64 0, i32 0
  %26 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %25, align 8
  %27 = icmp eq %class.CPWL_Wnd* %26, %0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %24, i64 1
  %30 = icmp eq %"class.fxcrt::UnownedPtr.7"* %29, %21
  br i1 %30, label %66, label %23

31:                                               ; preds = %23, %17
  %32 = phi %"class.fxcrt::UnownedPtr.7"* [ %19, %17 ], [ %24, %23 ]
  %33 = icmp eq %"class.fxcrt::UnownedPtr.7"* %32, %21
  br i1 %33, label %66, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %35, align 8
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr.19"* %36, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %34, %57
  %41 = phi %"class.std::__1::unique_ptr.19"* [ %58, %57 ], [ %36, %34 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %42, align 8
  %44 = icmp eq %class.CPWL_Wnd* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %40
  br i1 %22, label %54, label %46

46:                                               ; preds = %45, %51
  %47 = phi %"class.fxcrt::UnownedPtr.7"* [ %52, %51 ], [ %19, %45 ]
  %48 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %47, i64 0, i32 0
  %49 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %48, align 8
  %50 = icmp eq %class.CPWL_Wnd* %49, %43
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %47, i64 1
  %53 = icmp eq %"class.fxcrt::UnownedPtr.7"* %52, %21
  br i1 %53, label %57, label %46

54:                                               ; preds = %46, %45
  %55 = phi %"class.fxcrt::UnownedPtr.7"* [ %19, %45 ], [ %47, %46 ]
  %56 = icmp eq %"class.fxcrt::UnownedPtr.7"* %55, %21
  br i1 %56, label %57, label %60

57:                                               ; preds = %51, %54, %40
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %41, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr.19"* %58, %38
  br i1 %59, label %66, label %40

60:                                               ; preds = %54
  %61 = bitcast %class.CPWL_Wnd* %43 to i1 (%class.CPWL_Wnd*, i16, i32)***
  %62 = load i1 (%class.CPWL_Wnd*, i16, i32)**, i1 (%class.CPWL_Wnd*, i16, i32)*** %61, align 8
  %63 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i16, i32)*, i1 (%class.CPWL_Wnd*, i16, i32)** %62, i64 4
  %64 = load i1 (%class.CPWL_Wnd*, i16, i32)*, i1 (%class.CPWL_Wnd*, i16, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%class.CPWL_Wnd* nonnull %43, i16 zeroext %1, i32 %2) #13
  br label %66

66:                                               ; preds = %28, %57, %34, %31, %7, %3, %11, %60
  %67 = phi i1 [ %65, %60 ], [ false, %11 ], [ false, %31 ], [ false, %3 ], [ false, %7 ], [ false, %34 ], [ false, %57 ], [ false, %28 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %131, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %131, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %15 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %14, align 8
  %16 = icmp eq %class.CPWL_MsgControl* %15, null
  %17 = icmp eq %class.CPWL_Wnd* %0, null
  %18 = or i1 %17, %16
  br i1 %18, label %73, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %20, align 8
  %22 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 1
  %23 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %22, align 8
  %24 = icmp eq %"class.fxcrt::UnownedPtr.7"* %21, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %19, %30
  %26 = phi %"class.fxcrt::UnownedPtr.7"* [ %31, %30 ], [ %21, %19 ]
  %27 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 0, i32 0
  %28 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %27, align 8
  %29 = icmp eq %class.CPWL_Wnd* %28, %0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 1
  %32 = icmp eq %"class.fxcrt::UnownedPtr.7"* %31, %23
  br i1 %32, label %73, label %25

33:                                               ; preds = %25, %19
  %34 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %19 ], [ %26, %25 ]
  %35 = icmp eq %"class.fxcrt::UnownedPtr.7"* %34, %23
  br i1 %35, label %73, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %37, align 8
  %39 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.19"* %38, %40
  br i1 %41, label %68, label %42

42:                                               ; preds = %36, %59
  %43 = phi %"class.std::__1::unique_ptr.19"* [ %60, %59 ], [ %38, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %44, align 8
  %46 = icmp eq %class.CPWL_Wnd* %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %42
  br i1 %24, label %56, label %48

48:                                               ; preds = %47, %53
  %49 = phi %"class.fxcrt::UnownedPtr.7"* [ %54, %53 ], [ %21, %47 ]
  %50 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 0, i32 0
  %51 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %50, align 8
  %52 = icmp eq %class.CPWL_Wnd* %51, %45
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 1
  %55 = icmp eq %"class.fxcrt::UnownedPtr.7"* %54, %23
  br i1 %55, label %59, label %48

56:                                               ; preds = %48, %47
  %57 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %47 ], [ %49, %48 ]
  %58 = icmp eq %"class.fxcrt::UnownedPtr.7"* %57, %23
  br i1 %58, label %59, label %62

59:                                               ; preds = %53, %56, %42
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.19"* %60, %40
  br i1 %61, label %68, label %42

62:                                               ; preds = %56
  %63 = bitcast %class.CPWL_Wnd* %45 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %64 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %64, i64 5
  %66 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %65, align 8
  %67 = tail call zeroext i1 %66(%class.CPWL_Wnd* nonnull %45, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

68:                                               ; preds = %59, %36
  %69 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %70 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %70, i64 20
  %72 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %71, align 8
  tail call void %72(%class.CPWL_Wnd* %0) #13
  br label %131

73:                                               ; preds = %30, %13, %33
  %74 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %74, align 8
  %76 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.19"* %75, %77
  br i1 %78, label %112, label %79

79:                                               ; preds = %73
  %80 = bitcast <2 x i64>* %4 to %class.CFX_FloatRect*
  %81 = bitcast <2 x i64>* %4 to i8*
  br label %82

82:                                               ; preds = %79, %99
  %83 = phi %"class.std::__1::unique_ptr.19"* [ %75, %79 ], [ %100, %99 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %84, align 8
  %86 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 9
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 10
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 7
  %96 = bitcast %class.CFX_FloatRect* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8
  store <2 x i64> %97, <2 x i64>* %4, align 16
  %98 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %80, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %93
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 1
  %101 = icmp eq %"class.std::__1::unique_ptr.19"* %100, %77
  br i1 %101, label %110, label %82

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %104 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %103, align 8
  %105 = bitcast %class.CPWL_Wnd* %104 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %106 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %106, i64 5
  %108 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %107, align 8
  %109 = call zeroext i1 %108(%class.CPWL_Wnd* %104, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

110:                                              ; preds = %99
  %111 = load i8, i8* %6, align 8, !range !2
  br label %112

112:                                              ; preds = %110, %73
  %113 = phi i8 [ %111, %110 ], [ %7, %73 ]
  %114 = bitcast <2 x i64>* %5 to %class.CFX_FloatRect*
  %115 = icmp eq i8 %113, 0
  %116 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %115, label %120, label %117

117:                                              ; preds = %112
  %118 = load i8, i8* %10, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br label %131

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %123 = bitcast %class.CFX_FloatRect* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8
  store <2 x i64> %124, <2 x i64>* %5, align 16
  %125 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %114, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %128 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %128, i64 20
  %130 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %129, align 8
  call void %130(%class.CPWL_Wnd* %0) #13
  br label %131

131:                                              ; preds = %9, %3, %120, %102, %62, %121, %126, %68
  %132 = phi i1 [ false, %68 ], [ %67, %62 ], [ %109, %102 ], [ false, %9 ], [ false, %3 ], [ false, %126 ], [ false, %121 ], [ false, %120 ]
  ret i1 %132
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd17IsWndCaptureMouseEPKS_(%class.CPWL_Wnd* nocapture readonly, %class.CPWL_Wnd* readnone) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %4 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %3, align 8
  %5 = icmp eq %class.CPWL_MsgControl* %4, null
  %6 = icmp eq %class.CPWL_Wnd* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %9, align 8
  %11 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 1, i32 0, i32 1
  %12 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %11, align 8
  %13 = icmp eq %"class.fxcrt::UnownedPtr.7"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8, %19
  %15 = phi %"class.fxcrt::UnownedPtr.7"* [ %20, %19 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %15, i64 0, i32 0
  %17 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %16, align 8
  %18 = icmp eq %class.CPWL_Wnd* %17, %1
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %15, i64 1
  %21 = icmp eq %"class.fxcrt::UnownedPtr.7"* %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %14, %8
  %23 = phi %"class.fxcrt::UnownedPtr.7"* [ %10, %8 ], [ %15, %14 ], [ %12, %19 ]
  %24 = icmp ne %"class.fxcrt::UnownedPtr.7"* %23, %12
  br label %25

25:                                               ; preds = %22, %2
  %26 = phi i1 [ false, %2 ], [ %24, %22 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd10WndHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd* nocapture readonly, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %class.CFX_FloatRect*
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  br i1 %7, label %18, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %15 = bitcast %class.CFX_FloatRect* %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  store <2 x i64> %16, <2 x i64>* %3, align 16
  %17 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %4, %class.CFX_PTemplate* dereferenceable(8) %1) #13
  br label %18

18:                                               ; preds = %9, %2, %13
  %19 = phi i1 [ false, %9 ], [ false, %2 ], [ %17, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %131, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %131, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %15 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %14, align 8
  %16 = icmp eq %class.CPWL_MsgControl* %15, null
  %17 = icmp eq %class.CPWL_Wnd* %0, null
  %18 = or i1 %17, %16
  br i1 %18, label %73, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %20, align 8
  %22 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 1
  %23 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %22, align 8
  %24 = icmp eq %"class.fxcrt::UnownedPtr.7"* %21, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %19, %30
  %26 = phi %"class.fxcrt::UnownedPtr.7"* [ %31, %30 ], [ %21, %19 ]
  %27 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 0, i32 0
  %28 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %27, align 8
  %29 = icmp eq %class.CPWL_Wnd* %28, %0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 1
  %32 = icmp eq %"class.fxcrt::UnownedPtr.7"* %31, %23
  br i1 %32, label %73, label %25

33:                                               ; preds = %25, %19
  %34 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %19 ], [ %26, %25 ]
  %35 = icmp eq %"class.fxcrt::UnownedPtr.7"* %34, %23
  br i1 %35, label %73, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %37, align 8
  %39 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.19"* %38, %40
  br i1 %41, label %68, label %42

42:                                               ; preds = %36, %59
  %43 = phi %"class.std::__1::unique_ptr.19"* [ %60, %59 ], [ %38, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %44, align 8
  %46 = icmp eq %class.CPWL_Wnd* %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %42
  br i1 %24, label %56, label %48

48:                                               ; preds = %47, %53
  %49 = phi %"class.fxcrt::UnownedPtr.7"* [ %54, %53 ], [ %21, %47 ]
  %50 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 0, i32 0
  %51 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %50, align 8
  %52 = icmp eq %class.CPWL_Wnd* %51, %45
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 1
  %55 = icmp eq %"class.fxcrt::UnownedPtr.7"* %54, %23
  br i1 %55, label %59, label %48

56:                                               ; preds = %48, %47
  %57 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %47 ], [ %49, %48 ]
  %58 = icmp eq %"class.fxcrt::UnownedPtr.7"* %57, %23
  br i1 %58, label %59, label %62

59:                                               ; preds = %53, %56, %42
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.19"* %60, %40
  br i1 %61, label %68, label %42

62:                                               ; preds = %56
  %63 = bitcast %class.CPWL_Wnd* %45 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %64 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %64, i64 6
  %66 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %65, align 8
  %67 = tail call zeroext i1 %66(%class.CPWL_Wnd* nonnull %45, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

68:                                               ; preds = %59, %36
  %69 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %70 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %70, i64 20
  %72 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %71, align 8
  tail call void %72(%class.CPWL_Wnd* %0) #13
  br label %131

73:                                               ; preds = %30, %13, %33
  %74 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %74, align 8
  %76 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.19"* %75, %77
  br i1 %78, label %112, label %79

79:                                               ; preds = %73
  %80 = bitcast <2 x i64>* %4 to %class.CFX_FloatRect*
  %81 = bitcast <2 x i64>* %4 to i8*
  br label %82

82:                                               ; preds = %79, %99
  %83 = phi %"class.std::__1::unique_ptr.19"* [ %75, %79 ], [ %100, %99 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %84, align 8
  %86 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 9
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 10
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 7
  %96 = bitcast %class.CFX_FloatRect* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8
  store <2 x i64> %97, <2 x i64>* %4, align 16
  %98 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %80, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %93
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 1
  %101 = icmp eq %"class.std::__1::unique_ptr.19"* %100, %77
  br i1 %101, label %110, label %82

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %104 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %103, align 8
  %105 = bitcast %class.CPWL_Wnd* %104 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %106 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %106, i64 6
  %108 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %107, align 8
  %109 = call zeroext i1 %108(%class.CPWL_Wnd* %104, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

110:                                              ; preds = %99
  %111 = load i8, i8* %6, align 8, !range !2
  br label %112

112:                                              ; preds = %110, %73
  %113 = phi i8 [ %111, %110 ], [ %7, %73 ]
  %114 = bitcast <2 x i64>* %5 to %class.CFX_FloatRect*
  %115 = icmp eq i8 %113, 0
  %116 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %115, label %120, label %117

117:                                              ; preds = %112
  %118 = load i8, i8* %10, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br label %131

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %123 = bitcast %class.CFX_FloatRect* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8
  store <2 x i64> %124, <2 x i64>* %5, align 16
  %125 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %114, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %128 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %128, i64 20
  %130 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %129, align 8
  call void %130(%class.CPWL_Wnd* %0) #13
  br label %131

131:                                              ; preds = %9, %3, %120, %102, %62, %121, %126, %68
  %132 = phi i1 [ false, %68 ], [ %67, %62 ], [ %109, %102 ], [ false, %9 ], [ false, %3 ], [ false, %126 ], [ false, %121 ], [ false, %120 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %131, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %131, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %15 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %14, align 8
  %16 = icmp eq %class.CPWL_MsgControl* %15, null
  %17 = icmp eq %class.CPWL_Wnd* %0, null
  %18 = or i1 %17, %16
  br i1 %18, label %73, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %20, align 8
  %22 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 1
  %23 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %22, align 8
  %24 = icmp eq %"class.fxcrt::UnownedPtr.7"* %21, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %19, %30
  %26 = phi %"class.fxcrt::UnownedPtr.7"* [ %31, %30 ], [ %21, %19 ]
  %27 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 0, i32 0
  %28 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %27, align 8
  %29 = icmp eq %class.CPWL_Wnd* %28, %0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 1
  %32 = icmp eq %"class.fxcrt::UnownedPtr.7"* %31, %23
  br i1 %32, label %73, label %25

33:                                               ; preds = %25, %19
  %34 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %19 ], [ %26, %25 ]
  %35 = icmp eq %"class.fxcrt::UnownedPtr.7"* %34, %23
  br i1 %35, label %73, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %37, align 8
  %39 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.19"* %38, %40
  br i1 %41, label %68, label %42

42:                                               ; preds = %36, %59
  %43 = phi %"class.std::__1::unique_ptr.19"* [ %60, %59 ], [ %38, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %44, align 8
  %46 = icmp eq %class.CPWL_Wnd* %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %42
  br i1 %24, label %56, label %48

48:                                               ; preds = %47, %53
  %49 = phi %"class.fxcrt::UnownedPtr.7"* [ %54, %53 ], [ %21, %47 ]
  %50 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 0, i32 0
  %51 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %50, align 8
  %52 = icmp eq %class.CPWL_Wnd* %51, %45
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 1
  %55 = icmp eq %"class.fxcrt::UnownedPtr.7"* %54, %23
  br i1 %55, label %59, label %48

56:                                               ; preds = %48, %47
  %57 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %47 ], [ %49, %48 ]
  %58 = icmp eq %"class.fxcrt::UnownedPtr.7"* %57, %23
  br i1 %58, label %59, label %62

59:                                               ; preds = %53, %56, %42
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.19"* %60, %40
  br i1 %61, label %68, label %42

62:                                               ; preds = %56
  %63 = bitcast %class.CPWL_Wnd* %45 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %64 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %64, i64 7
  %66 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %65, align 8
  %67 = tail call zeroext i1 %66(%class.CPWL_Wnd* nonnull %45, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

68:                                               ; preds = %59, %36
  %69 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %70 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %70, i64 20
  %72 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %71, align 8
  tail call void %72(%class.CPWL_Wnd* %0) #13
  br label %131

73:                                               ; preds = %30, %13, %33
  %74 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %74, align 8
  %76 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.19"* %75, %77
  br i1 %78, label %112, label %79

79:                                               ; preds = %73
  %80 = bitcast <2 x i64>* %4 to %class.CFX_FloatRect*
  %81 = bitcast <2 x i64>* %4 to i8*
  br label %82

82:                                               ; preds = %79, %99
  %83 = phi %"class.std::__1::unique_ptr.19"* [ %75, %79 ], [ %100, %99 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %84, align 8
  %86 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 9
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 10
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 7
  %96 = bitcast %class.CFX_FloatRect* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8
  store <2 x i64> %97, <2 x i64>* %4, align 16
  %98 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %80, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %93
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 1
  %101 = icmp eq %"class.std::__1::unique_ptr.19"* %100, %77
  br i1 %101, label %110, label %82

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %104 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %103, align 8
  %105 = bitcast %class.CPWL_Wnd* %104 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %106 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %106, i64 7
  %108 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %107, align 8
  %109 = call zeroext i1 %108(%class.CPWL_Wnd* %104, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

110:                                              ; preds = %99
  %111 = load i8, i8* %6, align 8, !range !2
  br label %112

112:                                              ; preds = %110, %73
  %113 = phi i8 [ %111, %110 ], [ %7, %73 ]
  %114 = bitcast <2 x i64>* %5 to %class.CFX_FloatRect*
  %115 = icmp eq i8 %113, 0
  %116 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %115, label %120, label %117

117:                                              ; preds = %112
  %118 = load i8, i8* %10, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br label %131

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %123 = bitcast %class.CFX_FloatRect* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8
  store <2 x i64> %124, <2 x i64>* %5, align 16
  %125 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %114, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %128 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %128, i64 20
  %130 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %129, align 8
  call void %130(%class.CPWL_Wnd* %0) #13
  br label %131

131:                                              ; preds = %9, %3, %120, %102, %62, %121, %126, %68
  %132 = phi i1 [ false, %68 ], [ %67, %62 ], [ %109, %102 ], [ false, %9 ], [ false, %3 ], [ false, %126 ], [ false, %121 ], [ false, %120 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %131, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %131, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %15 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %14, align 8
  %16 = icmp eq %class.CPWL_MsgControl* %15, null
  %17 = icmp eq %class.CPWL_Wnd* %0, null
  %18 = or i1 %17, %16
  br i1 %18, label %73, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %20, align 8
  %22 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %15, i64 0, i32 1, i32 0, i32 1
  %23 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %22, align 8
  %24 = icmp eq %"class.fxcrt::UnownedPtr.7"* %21, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %19, %30
  %26 = phi %"class.fxcrt::UnownedPtr.7"* [ %31, %30 ], [ %21, %19 ]
  %27 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 0, i32 0
  %28 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %27, align 8
  %29 = icmp eq %class.CPWL_Wnd* %28, %0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %26, i64 1
  %32 = icmp eq %"class.fxcrt::UnownedPtr.7"* %31, %23
  br i1 %32, label %73, label %25

33:                                               ; preds = %25, %19
  %34 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %19 ], [ %26, %25 ]
  %35 = icmp eq %"class.fxcrt::UnownedPtr.7"* %34, %23
  br i1 %35, label %73, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %37, align 8
  %39 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.19"* %38, %40
  br i1 %41, label %68, label %42

42:                                               ; preds = %36, %59
  %43 = phi %"class.std::__1::unique_ptr.19"* [ %60, %59 ], [ %38, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %44, align 8
  %46 = icmp eq %class.CPWL_Wnd* %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %42
  br i1 %24, label %56, label %48

48:                                               ; preds = %47, %53
  %49 = phi %"class.fxcrt::UnownedPtr.7"* [ %54, %53 ], [ %21, %47 ]
  %50 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 0, i32 0
  %51 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %50, align 8
  %52 = icmp eq %class.CPWL_Wnd* %51, %45
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %49, i64 1
  %55 = icmp eq %"class.fxcrt::UnownedPtr.7"* %54, %23
  br i1 %55, label %59, label %48

56:                                               ; preds = %48, %47
  %57 = phi %"class.fxcrt::UnownedPtr.7"* [ %21, %47 ], [ %49, %48 ]
  %58 = icmp eq %"class.fxcrt::UnownedPtr.7"* %57, %23
  br i1 %58, label %59, label %62

59:                                               ; preds = %53, %56, %42
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %43, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.19"* %60, %40
  br i1 %61, label %68, label %42

62:                                               ; preds = %56
  %63 = bitcast %class.CPWL_Wnd* %45 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %64 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %64, i64 10
  %66 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %65, align 8
  %67 = tail call zeroext i1 %66(%class.CPWL_Wnd* nonnull %45, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

68:                                               ; preds = %59, %36
  %69 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %70 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %70, i64 20
  %72 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %71, align 8
  tail call void %72(%class.CPWL_Wnd* %0) #13
  br label %131

73:                                               ; preds = %30, %13, %33
  %74 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %74, align 8
  %76 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.19"* %75, %77
  br i1 %78, label %112, label %79

79:                                               ; preds = %73
  %80 = bitcast <2 x i64>* %4 to %class.CFX_FloatRect*
  %81 = bitcast <2 x i64>* %4 to i8*
  br label %82

82:                                               ; preds = %79, %99
  %83 = phi %"class.std::__1::unique_ptr.19"* [ %75, %79 ], [ %100, %99 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %84, align 8
  %86 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 9
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 10
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %85, i64 0, i32 7
  %96 = bitcast %class.CFX_FloatRect* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8
  store <2 x i64> %97, <2 x i64>* %4, align 16
  %98 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %80, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %93
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 1
  %101 = icmp eq %"class.std::__1::unique_ptr.19"* %100, %77
  br i1 %101, label %110, label %82

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %83, i64 0, i32 0, i32 0, i32 0
  %104 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %103, align 8
  %105 = bitcast %class.CPWL_Wnd* %104 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)***
  %106 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %106, i64 10
  %108 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)** %107, align 8
  %109 = call zeroext i1 %108(%class.CPWL_Wnd* %104, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  br label %131

110:                                              ; preds = %99
  %111 = load i8, i8* %6, align 8, !range !2
  br label %112

112:                                              ; preds = %110, %73
  %113 = phi i8 [ %111, %110 ], [ %7, %73 ]
  %114 = bitcast <2 x i64>* %5 to %class.CFX_FloatRect*
  %115 = icmp eq i8 %113, 0
  %116 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %115, label %120, label %117

117:                                              ; preds = %112
  %118 = load i8, i8* %10, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br label %131

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %123 = bitcast %class.CFX_FloatRect* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8
  store <2 x i64> %124, <2 x i64>* %5, align 16
  %125 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %114, %class.CFX_PTemplate* dereferenceable(8) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %128 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %128, i64 20
  %130 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %129, align 8
  call void %130(%class.CPWL_Wnd* %0) #13
  br label %131

131:                                              ; preds = %9, %3, %120, %102, %62, %121, %126, %68
  %132 = phi i1 [ false, %68 ], [ %67, %62 ], [ %109, %102 ], [ false, %9 ], [ false, %3 ], [ false, %126 ], [ false, %121 ], [ false, %120 ]
  ret i1 %132
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* nocapture readnone, i32, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* nocapture readnone, i32, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd7GetTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_Wnd* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd15GetSelectedTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_Wnd* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_Wnd* nocapture, %"class.fxcrt::WideString"* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd13SelectAllTextEv(%class.CPWL_Wnd* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd7CanUndoEv(%class.CPWL_Wnd* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd7CanRedoEv(%class.CPWL_Wnd* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd4UndoEv(%class.CPWL_Wnd* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd4RedoEv(%class.CPWL_Wnd* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %71, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %8
  %13 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %14 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %14, i64 20
  %16 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %15, align 8
  tail call void %16(%class.CPWL_Wnd* %0) #13
  %17 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %18 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %17, align 8
  %19 = icmp eq %class.CPWL_MsgControl* %18, null
  %20 = icmp eq %class.CPWL_Wnd* %0, null
  %21 = or i1 %20, %19
  br i1 %21, label %71, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %18, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %23, align 8
  %25 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %18, i64 0, i32 2, i32 0, i32 1
  %26 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %25, align 8
  %27 = icmp eq %"class.fxcrt::UnownedPtr.7"* %24, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %22, %33
  %29 = phi %"class.fxcrt::UnownedPtr.7"* [ %34, %33 ], [ %24, %22 ]
  %30 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %29, i64 0, i32 0
  %31 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %30, align 8
  %32 = icmp eq %class.CPWL_Wnd* %31, %0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %29, i64 1
  %35 = icmp eq %"class.fxcrt::UnownedPtr.7"* %34, %26
  br i1 %35, label %71, label %28

36:                                               ; preds = %28, %22
  %37 = phi %"class.fxcrt::UnownedPtr.7"* [ %24, %22 ], [ %29, %28 ]
  %38 = icmp eq %"class.fxcrt::UnownedPtr.7"* %37, %26
  br i1 %38, label %71, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %40, align 8
  %42 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %43 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %42, align 8
  %44 = icmp eq %"class.std::__1::unique_ptr.19"* %41, %43
  br i1 %44, label %71, label %45

45:                                               ; preds = %39, %62
  %46 = phi %"class.std::__1::unique_ptr.19"* [ %63, %62 ], [ %41, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %47, align 8
  %49 = icmp eq %class.CPWL_Wnd* %48, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %45
  br i1 %27, label %59, label %51

51:                                               ; preds = %50, %56
  %52 = phi %"class.fxcrt::UnownedPtr.7"* [ %57, %56 ], [ %24, %50 ]
  %53 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %52, i64 0, i32 0
  %54 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %53, align 8
  %55 = icmp eq %class.CPWL_Wnd* %54, %48
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %52, i64 1
  %58 = icmp eq %"class.fxcrt::UnownedPtr.7"* %57, %26
  br i1 %58, label %62, label %51

59:                                               ; preds = %51, %50
  %60 = phi %"class.fxcrt::UnownedPtr.7"* [ %24, %50 ], [ %52, %51 ]
  %61 = icmp eq %"class.fxcrt::UnownedPtr.7"* %60, %26
  br i1 %61, label %62, label %65

62:                                               ; preds = %56, %59, %45
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %46, i64 1
  %64 = icmp eq %"class.std::__1::unique_ptr.19"* %63, %43
  br i1 %64, label %71, label %45

65:                                               ; preds = %59
  %66 = bitcast %class.CPWL_Wnd* %48 to i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)***
  %67 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)**, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)*** %66, align 8
  %68 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)** %67, i64 11
  %69 = load i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)*, i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)** %68, align 8
  %70 = tail call zeroext i1 %69(%class.CPWL_Wnd* nonnull %48, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2, %class.CFX_VTemplate* %3) #13
  br label %71

71:                                               ; preds = %33, %62, %39, %36, %8, %4, %12, %65
  %72 = phi i1 [ %70, %65 ], [ false, %12 ], [ false, %36 ], [ false, %4 ], [ false, %8 ], [ false, %39 ], [ false, %62 ], [ false, %33 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd*, %class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.19", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %3, i64 0, i32 0, i32 0, i32 0
  store %class.CPWL_Wnd* %1, %class.CPWL_Wnd** %4, align 8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 4, i32 0
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %5, align 8
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %6, align 8
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %8, align 8
  %10 = icmp ult %"class.std::__1::unique_ptr.19"* %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = ptrtoint %class.CPWL_Wnd* %1 to i64
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %4, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.19"* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %7, i64 1
  %15 = ptrtoint %"class.std::__1::unique_ptr.19"* %14 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.19"** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %19

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorINS_10unique_ptrI8CPWL_WndNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.17"* %18, %"class.std::__1::unique_ptr.19"* nonnull dereferenceable(8) %3) #13
  br label %19

19:                                               ; preds = %11, %17
  %20 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %4, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %4, align 8
  %21 = icmp eq %class.CPWL_Wnd* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = bitcast %class.CPWL_Wnd* %20 to void (%class.CPWL_Wnd*)***
  %24 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %24, i64 1
  %26 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %25, align 8
  call void %26(%class.CPWL_Wnd* nonnull %20) #13
  br label %27

27:                                               ; preds = %19, %22
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Wnd* nocapture, %struct.PWL_SCROLL_INFO* nocapture dereferenceable(20)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd17SetScrollPositionEf(%class.CPWL_Wnd* nocapture, float) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf(%class.CPWL_Wnd* nocapture, float) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd* nocapture, %class.CPWL_Wnd* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd* nocapture, %class.CPWL_Wnd* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd* nocapture, %class.CPWL_Wnd* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %class.CFX_FloatRect*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %6 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %8 = bitcast %class.CFX_FloatRect* %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store <2 x i64> %9, <2 x i64>* %2, align 16
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1073741824
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 9
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  br label %18

18:                                               ; preds = %1, %14
  %19 = phi float [ %17, %14 ], [ 0.000000e+00, %1 ]
  %20 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %22 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %3, float %19, float %19) #13
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %24 = extractvalue { <2 x float>, <2 x float> } %22, 0
  store <2 x float> %24, <2 x float>* %23, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %26 = extractvalue { <2 x float>, <2 x float> } %22, 1
  store <2 x float> %26, <2 x float>* %25, align 8
  %27 = load i32, i32* %10, align 8
  %28 = and i32 %27, 134217728
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 6, i32 0
  %32 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %31, align 8
  %33 = icmp eq %class.CPWL_ScrollBar* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = call float @_ZNK14CPWL_ScrollBar17GetScrollBarWidthEv(%class.CPWL_ScrollBar* nonnull %32) #13
  %36 = load float, float* %21, align 8
  %37 = fsub float %36, %35
  store float %37, float* %21, align 8
  br label %38

38:                                               ; preds = %18, %30, %34
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %5) #13
  %39 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERKS_(%class.CFX_FloatRect* nonnull %3, %class.CFX_FloatRect* nonnull dereferenceable(16) %5) #13
  %40 = load <2 x float>, <2 x float>* %23, align 8
  %41 = load <2 x float>, <2 x float>* %25, align 8
  %42 = select i1 %39, <2 x float> %41, <2 x float> zeroinitializer
  %43 = select i1 %39, <2 x float> %40, <2 x float> zeroinitializer
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  %44 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %45 = insertvalue { <2 x float>, <2 x float> } %44, <2 x float> %42, 1
  ret { <2 x float>, <2 x float> } %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 134217728
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 6, i32 0
  %8 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %class.CPWL_ScrollBar* [ %8, %6 ], [ null, %1 ]
  ret %class.CPWL_ScrollBar* %10
}

declare float @_ZNK14CPWL_ScrollBar17GetScrollBarWidthEv(%class.CPWL_ScrollBar*) local_unnamed_addr #3

declare zeroext i1 @_ZNK13CFX_FloatRect8ContainsERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPWL_Wnd14GetCenterPointEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPWL_Wnd* %1 to { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)***
  %4 = load { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)**, { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)*** %3, align 8
  %5 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)*, { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)** %4, i64 33
  %6 = load { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)*, { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)** %5, align 8
  %7 = tail call { <2 x float>, <2 x float> } %6(%class.CPWL_Wnd* %1) #13
  %8 = extractvalue { <2 x float>, <2 x float> } %7, 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 1
  %10 = extractelement <2 x float> %8, i32 0
  %11 = extractelement <2 x float> %9, i32 0
  %12 = fadd float %10, %11
  %13 = fmul float %12, 5.000000e-01
  %14 = extractelement <2 x float> %9, i32 1
  %15 = extractelement <2 x float> %8, i32 1
  %16 = fadd float %14, %15
  %17 = fmul float %16, 5.000000e-01
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %13, float* %18, align 4
  %19 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %17, float* %19, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd10RemoveFlagEj(%class.CPWL_Wnd* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd7AddFlagEj(%class.CPWL_Wnd* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd18SetBackgroundColorERK9CFX_Color(%class.CPWL_Wnd* nocapture, %struct.CFX_Color* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 7
  %4 = bitcast %struct.CFX_Color* %3 to i8*
  %5 = bitcast %struct.CFX_Color* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPWL_Wnd12GetTextColorEv(%struct.CFX_Color* noalias nocapture sret, %class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 2, i32 11
  %4 = bitcast %struct.CFX_Color* %0 to i8*
  %5 = bitcast %struct.CFX_Color* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(12) %struct.CPWL_Dash* @_ZNK8CPWL_Wnd13GetBorderDashEv(%class.CPWL_Wnd* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 14
  ret %struct.CPWL_Dash* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd16CreateVScrollBarERKNS_12CreateParamsE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.19", align 8
  %4 = alloca %"class.CPWL_Wnd::CreateParams", align 8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 6, i32 0
  %6 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %5, align 8
  %7 = icmp eq %class.CPWL_ScrollBar* %6, null
  br i1 %7, label %8, label %105

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 134217728
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %105, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.CPWL_Wnd::CreateParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %14) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%"class.CPWL_Wnd::CreateParams"* @__const._ZN8CPWL_Wnd16CreateVScrollBarERKNS_12CreateParamsE.scp to i8*), i64 184, i1 false)
  %15 = bitcast %"class.CPWL_Wnd::CreateParams"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 16, i1 false) #13
  %16 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 1, i32 1
  %18 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %17, align 8
  %19 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 1, i32 1
  store %"class.CFX_Timer::HandlerIface"* %18, %"class.CFX_Timer::HandlerIface"** %20, align 8
  %21 = icmp eq %"class.CFX_Timer::HandlerIface"* %18, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %16, i64 0, i32 0
  %24 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %18, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %24, %"class.fxcrt::Observable::ObserverIface"* %23) #13
  br label %25

25:                                               ; preds = %22, %13
  %26 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 2
  %27 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 2
  %28 = bitcast %"class.fxcrt::UnownedPtr"* %26 to i8*
  %29 = bitcast %"class.fxcrt::UnownedPtr"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #13
  %30 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 4
  %31 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 4, i32 1
  %32 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %31, align 8
  %33 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %30, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 4, i32 1
  store %"class.CPWL_Wnd::ProviderIface"* %32, %"class.CPWL_Wnd::ProviderIface"** %34, align 8
  %35 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %32, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %30, i64 0, i32 0
  %38 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %32, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %38, %"class.fxcrt::Observable::ObserverIface"* %37) #13
  br label %39

39:                                               ; preds = %25, %36
  %40 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 5
  %41 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %1, i64 0, i32 5
  %42 = bitcast %"class.fxcrt::UnownedPtr.6"* %40 to i8*
  %43 = bitcast %"class.fxcrt::UnownedPtr.6"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 112, i1 false) #13
  %44 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 6
  store i32 543162368, i32* %44, align 8
  %45 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 7, i32 0
  store i32 1, i32* %45, align 4
  %46 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 7, i32 1
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %47, align 4
  %48 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 17
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 12
  store i32 150, i32* %49, align 8
  %50 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %50, align 8
  %52 = icmp eq %"class.IPWL_SystemHandler::PerWindowData"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %39
  %54 = bitcast %"class.IPWL_SystemHandler::PerWindowData"* %51 to %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)***
  %55 = load %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)**, %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)*, %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)** %55, i64 2
  %57 = load %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)*, %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)** %56, align 8
  %58 = call %"class.IPWL_SystemHandler::PerWindowData"* %57(%"class.IPWL_SystemHandler::PerWindowData"* nonnull %51) #13
  br label %59

59:                                               ; preds = %53, %39
  %60 = phi %"class.IPWL_SystemHandler::PerWindowData"* [ %58, %53 ], [ null, %39 ]
  %61 = call i8* @_Znwm(i64 408) #14
  %62 = bitcast i8* %61 to %class.CPWL_ScrollBar*
  call void @_ZN14CPWL_ScrollBarC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_ScrollBar* nonnull %62, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %4, %"class.IPWL_SystemHandler::PerWindowData"* %60) #13
  %63 = bitcast %class.CPWL_ScrollBar** %5 to i8**
  store i8* %61, i8** %63, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.19"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.19"* %3 to i8**
  store i8* %61, i8** %66, align 8
  %67 = getelementptr inbounds i8, i8* %61, i64 224
  %68 = bitcast i8* %67 to %class.CPWL_Wnd**
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %68, align 8
  %69 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %70 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %69, align 8
  %71 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %72 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %71, align 8
  %73 = icmp ult %"class.std::__1::unique_ptr.19"* %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %59
  %75 = ptrtoint i8* %61 to i64
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %65, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.19"* %70 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr.19"* %77 to i64
  %79 = bitcast %"class.std::__1::unique_ptr.19"** %69 to i64*
  store i64 %78, i64* %79, align 8
  br label %82

80:                                               ; preds = %59
  %81 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorINS_10unique_ptrI8CPWL_WndNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.17"* %81, %"class.std::__1::unique_ptr.19"* nonnull dereferenceable(8) %3) #13
  br label %82

82:                                               ; preds = %80, %74
  %83 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %65, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %65, align 8
  %84 = icmp eq %class.CPWL_Wnd* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = bitcast %class.CPWL_Wnd* %83 to void (%class.CPWL_Wnd*)***
  %87 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %87, i64 1
  %89 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %88, align 8
  call void %89(%class.CPWL_Wnd* nonnull %83) #13
  br label %90

90:                                               ; preds = %85, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  %91 = bitcast %class.CPWL_ScrollBar** %5 to %class.CPWL_Wnd**
  %92 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %91, align 8
  call void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd* %92)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %93 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %34, align 8
  %94 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %93, i64 0, i32 1
  %97 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %30, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %96, %"class.fxcrt::Observable::ObserverIface"* %97) #13
  br label %98

98:                                               ; preds = %95, %90
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %99 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %20, align 8
  %100 = icmp eq %"class.CFX_Timer::HandlerIface"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %99, i64 0, i32 1
  %103 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %16, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %102, %"class.fxcrt::Observable::ObserverIface"* %103) #13
  br label %104

104:                                              ; preds = %98, %101
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %14) #13
  br label %105

105:                                              ; preds = %8, %2, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %2, align 8
  %4 = icmp eq %"class.IPWL_SystemHandler::PerWindowData"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.IPWL_SystemHandler::PerWindowData"* %3 to %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)***
  %7 = load %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)**, %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)*, %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)** %7, i64 2
  %9 = load %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)*, %"class.IPWL_SystemHandler::PerWindowData"* (%"class.IPWL_SystemHandler::PerWindowData"*)** %8, align 8
  %10 = tail call %"class.IPWL_SystemHandler::PerWindowData"* %9(%"class.IPWL_SystemHandler::PerWindowData"* nonnull %3) #13
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.IPWL_SystemHandler::PerWindowData"* [ %10, %5 ], [ null, %1 ]
  ret %"class.IPWL_SystemHandler::PerWindowData"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd10SetCaptureEv(%class.CPWL_Wnd*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  %4 = icmp eq %class.CPWL_MsgControl* %3, null
  br i1 %4, label %259, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.fxcrt::UnownedPtr.7"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = icmp eq %class.CPWL_Wnd* %0, null
  br i1 %11, label %259, label %12

12:                                               ; preds = %5
  %13 = inttoptr i64 %8 to %"class.fxcrt::UnownedPtr.7"*
  %14 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.fxcrt::UnownedPtr.7"** %14 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %257, %12
  %18 = phi %"class.fxcrt::UnownedPtr.7"* [ %258, %257 ], [ %13, %12 ]
  %19 = phi %class.CPWL_Wnd* [ %255, %257 ], [ %0, %12 ]
  %20 = ptrtoint %class.CPWL_Wnd* %19 to i64
  %21 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %14, align 8
  %22 = icmp ult %"class.fxcrt::UnownedPtr.7"* %18, %21
  %23 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %21 to i64
  br i1 %22, label %24, label %28

24:                                               ; preds = %17
  %25 = bitcast %"class.fxcrt::UnownedPtr.7"* %18 to i64*
  store i64 %20, i64* %25, align 8
  %26 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %18, i64 1
  %27 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %26 to i64
  store i64 %27, i64* %10, align 8
  br label %253

28:                                               ; preds = %17
  %29 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %18 to i64
  %30 = load i64, i64* %7, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #15
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %23, %30
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %37
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %37 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #14
  %53 = bitcast i8* %52 to %"class.fxcrt::UnownedPtr.7"*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"class.fxcrt::UnownedPtr.7"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %56, i64 %32
  %58 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %56, i64 %55
  %59 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %58 to i64
  %60 = bitcast %"class.fxcrt::UnownedPtr.7"* %57 to i64*
  store i64 %20, i64* %60, align 8
  %61 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %57, i64 1
  %62 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %61 to i64
  %63 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %16, align 8
  %64 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %63 to i64
  %65 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %9, align 8
  %66 = icmp eq %"class.fxcrt::UnownedPtr.7"* %65, %63
  br i1 %66, label %246, label %67

67:                                               ; preds = %54
  %68 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 -1
  %69 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %68 to i64
  %70 = sub i64 %69, %64
  %71 = lshr i64 %70, 3
  %72 = add nuw nsw i64 %71, 1
  %73 = icmp ult i64 %72, 4
  br i1 %73, label %173, label %74

74:                                               ; preds = %67
  %75 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 -1
  %76 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 -1
  %77 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %76 to i64
  %78 = sub i64 %77, %64
  %79 = lshr i64 %78, 3
  %80 = sub nsw i64 0, %79
  %81 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %75, i64 %80
  %82 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %56, i64 -1
  %83 = sub nsw i64 %32, %79
  %84 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %82, i64 %83
  %85 = icmp ult %"class.fxcrt::UnownedPtr.7"* %81, %57
  %86 = icmp ult %"class.fxcrt::UnownedPtr.7"* %84, %65
  %87 = and i1 %85, %86
  br i1 %87, label %173, label %88

88:                                               ; preds = %74
  %89 = and i64 %72, 4611686018427387900
  %90 = sub nsw i64 0, %89
  %91 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %57, i64 %90
  %92 = sub nsw i64 0, %89
  %93 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 %92
  %94 = add nsw i64 %89, -4
  %95 = lshr exact i64 %94, 2
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %94, 0
  br i1 %98, label %147, label %99

99:                                               ; preds = %88
  %100 = sub nuw nsw i64 %96, %97
  %101 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %57, i64 -1
  %102 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 -1
  %103 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %57, i64 -1
  %104 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 -1
  br label %105

105:                                              ; preds = %105, %99
  %106 = phi i64 [ 0, %99 ], [ %144, %105 ]
  %107 = phi i64 [ %100, %99 ], [ %145, %105 ]
  %108 = sub i64 0, %106
  %109 = sub i64 0, %106
  %110 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 %108
  %111 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %102, i64 %109
  %112 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %111, i64 -1
  %113 = bitcast %"class.fxcrt::UnownedPtr.7"* %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8, !alias.scope !21, !noalias !24
  %115 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %111, i64 -2
  %116 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %115, i64 -1
  %117 = bitcast %"class.fxcrt::UnownedPtr.7"* %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 8, !alias.scope !21, !noalias !24
  %119 = bitcast %"class.fxcrt::UnownedPtr.7"* %112 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %119, align 8, !alias.scope !21, !noalias !24
  %120 = bitcast %"class.fxcrt::UnownedPtr.7"* %116 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %120, align 8, !alias.scope !21, !noalias !24
  %121 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %110, i64 -1
  %122 = bitcast %"class.fxcrt::UnownedPtr.7"* %121 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %122, align 8, !alias.scope !24
  %123 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %110, i64 -2
  %124 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %123, i64 -1
  %125 = bitcast %"class.fxcrt::UnownedPtr.7"* %124 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %125, align 8, !alias.scope !24
  %126 = sub nuw nsw i64 -4, %106
  %127 = sub nuw nsw i64 -4, %106
  %128 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %103, i64 %126
  %129 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %104, i64 %127
  %130 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %129, i64 -1
  %131 = bitcast %"class.fxcrt::UnownedPtr.7"* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !21, !noalias !24
  %133 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %129, i64 -2
  %134 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %133, i64 -1
  %135 = bitcast %"class.fxcrt::UnownedPtr.7"* %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !21, !noalias !24
  %137 = bitcast %"class.fxcrt::UnownedPtr.7"* %130 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %137, align 8, !alias.scope !21, !noalias !24
  %138 = bitcast %"class.fxcrt::UnownedPtr.7"* %134 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %138, align 8, !alias.scope !21, !noalias !24
  %139 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %128, i64 -1
  %140 = bitcast %"class.fxcrt::UnownedPtr.7"* %139 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %140, align 8, !alias.scope !24
  %141 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %128, i64 -2
  %142 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %141, i64 -1
  %143 = bitcast %"class.fxcrt::UnownedPtr.7"* %142 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %143, align 8, !alias.scope !24
  %144 = add i64 %106, 8
  %145 = add i64 %107, -2
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %105, !llvm.loop !26

147:                                              ; preds = %105, %88
  %148 = phi i64 [ 0, %88 ], [ %144, %105 ]
  %149 = icmp eq i64 %97, 0
  br i1 %149, label %171, label %150

150:                                              ; preds = %147
  %151 = sub i64 0, %148
  %152 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %57, i64 -1
  %153 = sub i64 0, %148
  %154 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %65, i64 -1
  %155 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %152, i64 %151
  %156 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %154, i64 %153
  %157 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %156, i64 -1
  %158 = bitcast %"class.fxcrt::UnownedPtr.7"* %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !21, !noalias !24
  %160 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %156, i64 -2
  %161 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %160, i64 -1
  %162 = bitcast %"class.fxcrt::UnownedPtr.7"* %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !21, !noalias !24
  %164 = bitcast %"class.fxcrt::UnownedPtr.7"* %157 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %164, align 8, !alias.scope !21, !noalias !24
  %165 = bitcast %"class.fxcrt::UnownedPtr.7"* %161 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %165, align 8, !alias.scope !21, !noalias !24
  %166 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %155, i64 -1
  %167 = bitcast %"class.fxcrt::UnownedPtr.7"* %166 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %167, align 8, !alias.scope !24
  %168 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %155, i64 -2
  %169 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %168, i64 -1
  %170 = bitcast %"class.fxcrt::UnownedPtr.7"* %169 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %170, align 8, !alias.scope !24
  br label %171

171:                                              ; preds = %147, %150
  %172 = icmp eq i64 %72, %89
  br i1 %172, label %243, label %173

173:                                              ; preds = %171, %74, %67
  %174 = phi %"class.fxcrt::UnownedPtr.7"* [ %57, %74 ], [ %57, %67 ], [ %91, %171 ]
  %175 = phi %"class.fxcrt::UnownedPtr.7"* [ %65, %74 ], [ %65, %67 ], [ %93, %171 ]
  %176 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %175, i64 -1
  %177 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %176 to i64
  %178 = sub i64 %177, %64
  %179 = lshr i64 %178, 3
  %180 = add nuw nsw i64 %179, 1
  %181 = and i64 %180, 7
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %173, %183
  %184 = phi %"class.fxcrt::UnownedPtr.7"* [ %187, %183 ], [ %174, %173 ]
  %185 = phi %"class.fxcrt::UnownedPtr.7"* [ %188, %183 ], [ %175, %173 ]
  %186 = phi i64 [ %192, %183 ], [ %181, %173 ]
  %187 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %184, i64 -1
  %188 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %185, i64 -1
  %189 = bitcast %"class.fxcrt::UnownedPtr.7"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 0, i64* %189, align 8
  %191 = bitcast %"class.fxcrt::UnownedPtr.7"* %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %183, !llvm.loop !28

194:                                              ; preds = %183, %173
  %195 = phi %"class.fxcrt::UnownedPtr.7"* [ undef, %173 ], [ %187, %183 ]
  %196 = phi %"class.fxcrt::UnownedPtr.7"* [ %174, %173 ], [ %187, %183 ]
  %197 = phi %"class.fxcrt::UnownedPtr.7"* [ %175, %173 ], [ %188, %183 ]
  %198 = icmp ult i64 %178, 56
  br i1 %198, label %243, label %199

199:                                              ; preds = %194, %199
  %200 = phi %"class.fxcrt::UnownedPtr.7"* [ %237, %199 ], [ %196, %194 ]
  %201 = phi %"class.fxcrt::UnownedPtr.7"* [ %238, %199 ], [ %197, %194 ]
  %202 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -1
  %203 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -1
  %204 = bitcast %"class.fxcrt::UnownedPtr.7"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 0, i64* %204, align 8
  %206 = bitcast %"class.fxcrt::UnownedPtr.7"* %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -2
  %208 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -2
  %209 = bitcast %"class.fxcrt::UnownedPtr.7"* %208 to i64*
  %210 = load i64, i64* %209, align 8
  store i64 0, i64* %209, align 8
  %211 = bitcast %"class.fxcrt::UnownedPtr.7"* %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -3
  %213 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -3
  %214 = bitcast %"class.fxcrt::UnownedPtr.7"* %213 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 0, i64* %214, align 8
  %216 = bitcast %"class.fxcrt::UnownedPtr.7"* %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -4
  %218 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -4
  %219 = bitcast %"class.fxcrt::UnownedPtr.7"* %218 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 0, i64* %219, align 8
  %221 = bitcast %"class.fxcrt::UnownedPtr.7"* %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -5
  %223 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -5
  %224 = bitcast %"class.fxcrt::UnownedPtr.7"* %223 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 0, i64* %224, align 8
  %226 = bitcast %"class.fxcrt::UnownedPtr.7"* %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -6
  %228 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -6
  %229 = bitcast %"class.fxcrt::UnownedPtr.7"* %228 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 0, i64* %229, align 8
  %231 = bitcast %"class.fxcrt::UnownedPtr.7"* %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -7
  %233 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -7
  %234 = bitcast %"class.fxcrt::UnownedPtr.7"* %233 to i64*
  %235 = load i64, i64* %234, align 8
  store i64 0, i64* %234, align 8
  %236 = bitcast %"class.fxcrt::UnownedPtr.7"* %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %200, i64 -8
  %238 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %201, i64 -8
  %239 = bitcast %"class.fxcrt::UnownedPtr.7"* %238 to i64*
  %240 = load i64, i64* %239, align 8
  store i64 0, i64* %239, align 8
  %241 = bitcast %"class.fxcrt::UnownedPtr.7"* %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = icmp eq %"class.fxcrt::UnownedPtr.7"* %238, %63
  br i1 %242, label %243, label %199, !llvm.loop !30

243:                                              ; preds = %194, %199, %171
  %244 = phi %"class.fxcrt::UnownedPtr.7"* [ %91, %171 ], [ %195, %194 ], [ %237, %199 ]
  %245 = load i64, i64* %7, align 8
  br label %246

246:                                              ; preds = %54, %243
  %247 = phi %"class.fxcrt::UnownedPtr.7"* [ %244, %243 ], [ %57, %54 ]
  %248 = phi i64 [ %245, %243 ], [ %64, %54 ]
  %249 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %247 to i64
  store i64 %249, i64* %7, align 8
  store i64 %62, i64* %10, align 8
  store i64 %59, i64* %15, align 8
  %250 = icmp eq i64 %248, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %246
  %252 = inttoptr i64 %248 to i8*
  tail call void @_ZdlPv(i8* %252) #14
  br label %253

253:                                              ; preds = %24, %246, %251
  %254 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %19, i64 0, i32 4, i32 0
  %255 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %254, align 8
  %256 = icmp eq %class.CPWL_Wnd* %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %253
  %258 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %9, align 8
  br label %17

259:                                              ; preds = %253, %5, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CPWL_MsgControl* @_ZNK8CPWL_Wnd13GetMsgControlEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  ret %class.CPWL_MsgControl* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.19"* %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %11, %1
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %9 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %8, align 8
  %10 = icmp eq %class.CPWL_MsgControl* %9, null
  br i1 %10, label %23, label %17

11:                                               ; preds = %1, %11
  %12 = phi %"class.std::__1::unique_ptr.19"* [ %15, %11 ], [ %3, %1 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %13, align 8
  tail call void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd* %14)
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %12, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr.19"* %15, %5
  br i1 %16, label %7, label %11

17:                                               ; preds = %7
  %18 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %9, i64 0, i32 1
  %19 = bitcast %"class.std::__1::vector"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %9, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.fxcrt::UnownedPtr.7"** %21 to i64*
  store i64 %20, i64* %22, align 8
  br label %23

23:                                               ; preds = %7, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ObservedPtr.65", align 8
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %4 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %3, align 8
  %5 = icmp eq %class.CPWL_MsgControl* %4, null
  br i1 %5, label %300, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 4, i32 0
  %8 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %7, align 8
  %9 = icmp eq %class.CPWL_Wnd* %8, %0
  br i1 %9, label %41, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.fxcrt::ObservedPtr.65"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %2, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store %class.CPWL_MsgControl* %4, %class.CPWL_MsgControl** %13, align 8
  %14 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 0
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %15, %"class.fxcrt::Observable::ObserverIface"* nonnull %14) #13
  %16 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %17, align 8
  %19 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 1
  %20 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %19, align 8
  %21 = icmp eq %"class.fxcrt::UnownedPtr.7"* %18, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %18, i64 0, i32 0
  %24 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %23, align 8
  %25 = icmp eq %class.CPWL_Wnd* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.CPWL_Wnd* %24 to void (%class.CPWL_Wnd*)***
  %28 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %28, i64 35
  %30 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %29, align 8
  call void %30(%class.CPWL_Wnd* nonnull %24) #13
  br label %31

31:                                               ; preds = %26, %22, %10
  %32 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %13, align 8
  %33 = icmp eq %class.CPWL_MsgControl* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  br label %40

35:                                               ; preds = %31
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %7, align 8
  %36 = bitcast %"class.std::__1::vector"* %16 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.fxcrt::UnownedPtr.7"** %19 to i64*
  store i64 %37, i64* %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %39 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %32, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %39, %"class.fxcrt::Observable::ObserverIface"* nonnull %14) #13
  br label %40

40:                                               ; preds = %34, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  br label %41

41:                                               ; preds = %40, %6
  %42 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2
  %43 = bitcast %"class.std::__1::vector"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.fxcrt::UnownedPtr.7"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = icmp eq %class.CPWL_Wnd* %0, null
  br i1 %47, label %300, label %48

48:                                               ; preds = %41
  %49 = inttoptr i64 %44 to %"class.fxcrt::UnownedPtr.7"*
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %7, align 8
  %50 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"class.fxcrt::UnownedPtr.7"** %50 to i64*
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %293, %48
  %54 = phi %"class.fxcrt::UnownedPtr.7"* [ %49, %48 ], [ %294, %293 ]
  %55 = phi %class.CPWL_Wnd* [ %0, %48 ], [ %291, %293 ]
  %56 = ptrtoint %class.CPWL_Wnd* %55 to i64
  %57 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %50, align 8
  %58 = icmp ult %"class.fxcrt::UnownedPtr.7"* %54, %57
  %59 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %57 to i64
  br i1 %58, label %60, label %64

60:                                               ; preds = %53
  %61 = bitcast %"class.fxcrt::UnownedPtr.7"* %54 to i64*
  store i64 %56, i64* %61, align 8
  %62 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %54, i64 1
  %63 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %62 to i64
  store i64 %63, i64* %46, align 8
  br label %289

64:                                               ; preds = %53
  %65 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %54 to i64
  %66 = load i64, i64* %43, align 8
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 3
  %69 = add nsw i64 %68, 1
  %70 = icmp ugt i64 %69, 2305843009213693951
  br i1 %70, label %71, label %73

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::vector"* %42 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %72) #15
  unreachable

73:                                               ; preds = %64
  %74 = sub i64 %59, %66
  %75 = ashr exact i64 %74, 3
  %76 = icmp ult i64 %75, 1152921504606846975
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = ashr exact i64 %74, 2
  %79 = icmp ult i64 %78, %69
  %80 = select i1 %79, i64 %69, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = icmp ugt i64 %80, 2305843009213693951
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  call void @abort() #15
  unreachable

85:                                               ; preds = %82, %73
  %86 = phi i64 [ %80, %82 ], [ 2305843009213693951, %73 ]
  %87 = shl i64 %86, 3
  %88 = call i8* @_Znwm(i64 %87) #14
  %89 = bitcast i8* %88 to %"class.fxcrt::UnownedPtr.7"*
  br label %90

90:                                               ; preds = %85, %77
  %91 = phi i64 [ %86, %85 ], [ 0, %77 ]
  %92 = phi %"class.fxcrt::UnownedPtr.7"* [ %89, %85 ], [ null, %77 ]
  %93 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %92, i64 %68
  %94 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %92, i64 %91
  %95 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %94 to i64
  %96 = bitcast %"class.fxcrt::UnownedPtr.7"* %93 to i64*
  store i64 %56, i64* %96, align 8
  %97 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %93, i64 1
  %98 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %97 to i64
  %99 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %52, align 8
  %100 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %99 to i64
  %101 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %45, align 8
  %102 = icmp eq %"class.fxcrt::UnownedPtr.7"* %101, %99
  br i1 %102, label %282, label %103

103:                                              ; preds = %90
  %104 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 -1
  %105 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %104 to i64
  %106 = sub i64 %105, %100
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = icmp ult i64 %108, 4
  br i1 %109, label %209, label %110

110:                                              ; preds = %103
  %111 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 -1
  %112 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 -1
  %113 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %112 to i64
  %114 = sub i64 %113, %100
  %115 = lshr i64 %114, 3
  %116 = sub nsw i64 0, %115
  %117 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %111, i64 %116
  %118 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %92, i64 -1
  %119 = sub nsw i64 %68, %115
  %120 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %118, i64 %119
  %121 = icmp ult %"class.fxcrt::UnownedPtr.7"* %117, %93
  %122 = icmp ult %"class.fxcrt::UnownedPtr.7"* %120, %101
  %123 = and i1 %121, %122
  br i1 %123, label %209, label %124

124:                                              ; preds = %110
  %125 = and i64 %108, 4611686018427387900
  %126 = sub nsw i64 0, %125
  %127 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %93, i64 %126
  %128 = sub nsw i64 0, %125
  %129 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 %128
  %130 = add nsw i64 %125, -4
  %131 = lshr exact i64 %130, 2
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 1
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %183, label %135

135:                                              ; preds = %124
  %136 = sub nuw nsw i64 %132, %133
  %137 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %93, i64 -1
  %138 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 -1
  %139 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %93, i64 -1
  %140 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 -1
  br label %141

141:                                              ; preds = %141, %135
  %142 = phi i64 [ 0, %135 ], [ %180, %141 ]
  %143 = phi i64 [ %136, %135 ], [ %181, %141 ]
  %144 = sub i64 0, %142
  %145 = sub i64 0, %142
  %146 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %137, i64 %144
  %147 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %138, i64 %145
  %148 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %147, i64 -1
  %149 = bitcast %"class.fxcrt::UnownedPtr.7"* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !31, !noalias !34
  %151 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %147, i64 -2
  %152 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %151, i64 -1
  %153 = bitcast %"class.fxcrt::UnownedPtr.7"* %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !31, !noalias !34
  %155 = bitcast %"class.fxcrt::UnownedPtr.7"* %148 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %155, align 8, !alias.scope !31, !noalias !34
  %156 = bitcast %"class.fxcrt::UnownedPtr.7"* %152 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %156, align 8, !alias.scope !31, !noalias !34
  %157 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %146, i64 -1
  %158 = bitcast %"class.fxcrt::UnownedPtr.7"* %157 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %158, align 8, !alias.scope !34
  %159 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %146, i64 -2
  %160 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %159, i64 -1
  %161 = bitcast %"class.fxcrt::UnownedPtr.7"* %160 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %161, align 8, !alias.scope !34
  %162 = sub nuw nsw i64 -4, %142
  %163 = sub nuw nsw i64 -4, %142
  %164 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %139, i64 %162
  %165 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %140, i64 %163
  %166 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %165, i64 -1
  %167 = bitcast %"class.fxcrt::UnownedPtr.7"* %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 8, !alias.scope !31, !noalias !34
  %169 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %165, i64 -2
  %170 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %169, i64 -1
  %171 = bitcast %"class.fxcrt::UnownedPtr.7"* %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !31, !noalias !34
  %173 = bitcast %"class.fxcrt::UnownedPtr.7"* %166 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %173, align 8, !alias.scope !31, !noalias !34
  %174 = bitcast %"class.fxcrt::UnownedPtr.7"* %170 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %174, align 8, !alias.scope !31, !noalias !34
  %175 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %164, i64 -1
  %176 = bitcast %"class.fxcrt::UnownedPtr.7"* %175 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %176, align 8, !alias.scope !34
  %177 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %164, i64 -2
  %178 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %177, i64 -1
  %179 = bitcast %"class.fxcrt::UnownedPtr.7"* %178 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %179, align 8, !alias.scope !34
  %180 = add i64 %142, 8
  %181 = add i64 %143, -2
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %141, !llvm.loop !36

183:                                              ; preds = %141, %124
  %184 = phi i64 [ 0, %124 ], [ %180, %141 ]
  %185 = icmp eq i64 %133, 0
  br i1 %185, label %207, label %186

186:                                              ; preds = %183
  %187 = sub i64 0, %184
  %188 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %93, i64 -1
  %189 = sub i64 0, %184
  %190 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %101, i64 -1
  %191 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %188, i64 %187
  %192 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %190, i64 %189
  %193 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %192, i64 -1
  %194 = bitcast %"class.fxcrt::UnownedPtr.7"* %193 to <2 x i64>*
  %195 = load <2 x i64>, <2 x i64>* %194, align 8, !alias.scope !31, !noalias !34
  %196 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %192, i64 -2
  %197 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %196, i64 -1
  %198 = bitcast %"class.fxcrt::UnownedPtr.7"* %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !31, !noalias !34
  %200 = bitcast %"class.fxcrt::UnownedPtr.7"* %193 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %200, align 8, !alias.scope !31, !noalias !34
  %201 = bitcast %"class.fxcrt::UnownedPtr.7"* %197 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %201, align 8, !alias.scope !31, !noalias !34
  %202 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %191, i64 -1
  %203 = bitcast %"class.fxcrt::UnownedPtr.7"* %202 to <2 x i64>*
  store <2 x i64> %195, <2 x i64>* %203, align 8, !alias.scope !34
  %204 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %191, i64 -2
  %205 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %204, i64 -1
  %206 = bitcast %"class.fxcrt::UnownedPtr.7"* %205 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %206, align 8, !alias.scope !34
  br label %207

207:                                              ; preds = %183, %186
  %208 = icmp eq i64 %108, %125
  br i1 %208, label %279, label %209

209:                                              ; preds = %207, %110, %103
  %210 = phi %"class.fxcrt::UnownedPtr.7"* [ %93, %110 ], [ %93, %103 ], [ %127, %207 ]
  %211 = phi %"class.fxcrt::UnownedPtr.7"* [ %101, %110 ], [ %101, %103 ], [ %129, %207 ]
  %212 = getelementptr %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %211, i64 -1
  %213 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %212 to i64
  %214 = sub i64 %213, %100
  %215 = lshr i64 %214, 3
  %216 = add nuw nsw i64 %215, 1
  %217 = and i64 %216, 7
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %219
  %220 = phi %"class.fxcrt::UnownedPtr.7"* [ %223, %219 ], [ %210, %209 ]
  %221 = phi %"class.fxcrt::UnownedPtr.7"* [ %224, %219 ], [ %211, %209 ]
  %222 = phi i64 [ %228, %219 ], [ %217, %209 ]
  %223 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %220, i64 -1
  %224 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %221, i64 -1
  %225 = bitcast %"class.fxcrt::UnownedPtr.7"* %224 to i64*
  %226 = load i64, i64* %225, align 8
  store i64 0, i64* %225, align 8
  %227 = bitcast %"class.fxcrt::UnownedPtr.7"* %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = add i64 %222, -1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %219, !llvm.loop !37

230:                                              ; preds = %219, %209
  %231 = phi %"class.fxcrt::UnownedPtr.7"* [ undef, %209 ], [ %223, %219 ]
  %232 = phi %"class.fxcrt::UnownedPtr.7"* [ %210, %209 ], [ %223, %219 ]
  %233 = phi %"class.fxcrt::UnownedPtr.7"* [ %211, %209 ], [ %224, %219 ]
  %234 = icmp ult i64 %214, 56
  br i1 %234, label %279, label %235

235:                                              ; preds = %230, %235
  %236 = phi %"class.fxcrt::UnownedPtr.7"* [ %273, %235 ], [ %232, %230 ]
  %237 = phi %"class.fxcrt::UnownedPtr.7"* [ %274, %235 ], [ %233, %230 ]
  %238 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -1
  %239 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -1
  %240 = bitcast %"class.fxcrt::UnownedPtr.7"* %239 to i64*
  %241 = load i64, i64* %240, align 8
  store i64 0, i64* %240, align 8
  %242 = bitcast %"class.fxcrt::UnownedPtr.7"* %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -2
  %244 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -2
  %245 = bitcast %"class.fxcrt::UnownedPtr.7"* %244 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 0, i64* %245, align 8
  %247 = bitcast %"class.fxcrt::UnownedPtr.7"* %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -3
  %249 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -3
  %250 = bitcast %"class.fxcrt::UnownedPtr.7"* %249 to i64*
  %251 = load i64, i64* %250, align 8
  store i64 0, i64* %250, align 8
  %252 = bitcast %"class.fxcrt::UnownedPtr.7"* %248 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -4
  %254 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -4
  %255 = bitcast %"class.fxcrt::UnownedPtr.7"* %254 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 0, i64* %255, align 8
  %257 = bitcast %"class.fxcrt::UnownedPtr.7"* %253 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -5
  %259 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -5
  %260 = bitcast %"class.fxcrt::UnownedPtr.7"* %259 to i64*
  %261 = load i64, i64* %260, align 8
  store i64 0, i64* %260, align 8
  %262 = bitcast %"class.fxcrt::UnownedPtr.7"* %258 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -6
  %264 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -6
  %265 = bitcast %"class.fxcrt::UnownedPtr.7"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  store i64 0, i64* %265, align 8
  %267 = bitcast %"class.fxcrt::UnownedPtr.7"* %263 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -7
  %269 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -7
  %270 = bitcast %"class.fxcrt::UnownedPtr.7"* %269 to i64*
  %271 = load i64, i64* %270, align 8
  store i64 0, i64* %270, align 8
  %272 = bitcast %"class.fxcrt::UnownedPtr.7"* %268 to i64*
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %236, i64 -8
  %274 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %237, i64 -8
  %275 = bitcast %"class.fxcrt::UnownedPtr.7"* %274 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 0, i64* %275, align 8
  %277 = bitcast %"class.fxcrt::UnownedPtr.7"* %273 to i64*
  store i64 %276, i64* %277, align 8
  %278 = icmp eq %"class.fxcrt::UnownedPtr.7"* %274, %99
  br i1 %278, label %279, label %235, !llvm.loop !38

279:                                              ; preds = %230, %235, %207
  %280 = phi %"class.fxcrt::UnownedPtr.7"* [ %127, %207 ], [ %231, %230 ], [ %273, %235 ]
  %281 = load i64, i64* %43, align 8
  br label %282

282:                                              ; preds = %90, %279
  %283 = phi %"class.fxcrt::UnownedPtr.7"* [ %280, %279 ], [ %93, %90 ]
  %284 = phi i64 [ %281, %279 ], [ %100, %90 ]
  %285 = ptrtoint %"class.fxcrt::UnownedPtr.7"* %283 to i64
  store i64 %285, i64* %43, align 8
  store i64 %98, i64* %46, align 8
  store i64 %95, i64* %51, align 8
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %282
  %288 = inttoptr i64 %284 to i8*
  call void @_ZdlPv(i8* %288) #14
  br label %289

289:                                              ; preds = %60, %282, %287
  %290 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %55, i64 0, i32 4, i32 0
  %291 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %290, align 8
  %292 = icmp eq %class.CPWL_Wnd* %291, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %289
  %294 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %45, align 8
  br label %53

295:                                              ; preds = %289
  %296 = bitcast %class.CPWL_Wnd* %0 to void (%class.CPWL_Wnd*)***
  %297 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %296, align 8
  %298 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %297, i64 34
  %299 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %298, align 8
  call void %299(%class.CPWL_Wnd* nonnull %0) #13
  br label %300

300:                                              ; preds = %295, %41, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd9KillFocusEv(%class.CPWL_Wnd* readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ObservedPtr.65", align 8
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %4 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %3, align 8
  %5 = icmp eq %class.CPWL_MsgControl* %4, null
  %6 = icmp eq %class.CPWL_Wnd* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %56, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %9, align 8
  %11 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2, i32 0, i32 1
  %12 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %11, align 8
  %13 = icmp eq %"class.fxcrt::UnownedPtr.7"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8, %19
  %15 = phi %"class.fxcrt::UnownedPtr.7"* [ %20, %19 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %15, i64 0, i32 0
  %17 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %16, align 8
  %18 = icmp eq %class.CPWL_Wnd* %17, %0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %15, i64 1
  %21 = icmp eq %"class.fxcrt::UnownedPtr.7"* %20, %12
  br i1 %21, label %56, label %14

22:                                               ; preds = %14, %8
  %23 = phi %"class.fxcrt::UnownedPtr.7"* [ %10, %8 ], [ %15, %14 ]
  %24 = icmp eq %"class.fxcrt::UnownedPtr.7"* %23, %12
  br i1 %24, label %56, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.fxcrt::ObservedPtr.65"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %2, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %2, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  store %class.CPWL_MsgControl* %4, %class.CPWL_MsgControl** %28, align 8
  %29 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %2, i64 0, i32 0
  %30 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 0
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %30, %"class.fxcrt::Observable::ObserverIface"* nonnull %29) #13
  %31 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 2
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %32, align 8
  %34 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %11, align 8
  %35 = icmp eq %"class.fxcrt::UnownedPtr.7"* %33, %34
  br i1 %35, label %45, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %33, i64 0, i32 0
  %38 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %37, align 8
  %39 = icmp eq %class.CPWL_Wnd* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %class.CPWL_Wnd* %38 to void (%class.CPWL_Wnd*)***
  %42 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %42, i64 35
  %44 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %43, align 8
  call void %44(%class.CPWL_Wnd* nonnull %38) #13
  br label %45

45:                                               ; preds = %40, %36, %25
  %46 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %28, align 8
  %47 = icmp eq %class.CPWL_MsgControl* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  br label %55

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 4, i32 0
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %50, align 8
  %51 = bitcast %"class.std::__1::vector"* %31 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.fxcrt::UnownedPtr.7"** %11 to i64*
  store i64 %52, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %54 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %46, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %54, %"class.fxcrt::Observable::ObserverIface"* nonnull %29) #13
  br label %55

55:                                               ; preds = %48, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  br label %56

56:                                               ; preds = %19, %22, %1, %55
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd10OnSetFocusEv(%class.CPWL_Wnd* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd11OnKillFocusEv(%class.CPWL_Wnd* nocapture) unnamed_addr #2 align 2 {
  ret void
}

declare zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd13ClientHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  br i1 %7, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = bitcast %class.CPWL_Wnd* %0 to { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)***
  %15 = load { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)**, { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)*** %14, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)*, { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)** %15, i64 33
  %17 = load { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)*, { <2 x float>, <2 x float> } (%class.CPWL_Wnd*)** %16, align 8
  %18 = tail call { <2 x float>, <2 x float> } %17(%class.CPWL_Wnd* %0) #13
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 0
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %22 = extractvalue { <2 x float>, <2 x float> } %18, 1
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %4, %class.CFX_PTemplate* dereferenceable(8) %1) #13
  br label %24

24:                                               ; preds = %9, %2, %13
  %25 = phi i1 [ false, %9 ], [ false, %2 ], [ %23, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ObservedPtr.49", align 8
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %65, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.fxcrt::ObservedPtr.49"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %3, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %11, align 8
  %12 = icmp eq %class.CPWL_Wnd* %0, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %15, %"class.fxcrt::Observable::ObserverIface"* nonnull %14) #13
  br label %16

16:                                               ; preds = %8, %13
  %17 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %17, align 8
  %19 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.19"* %18, %20
  br i1 %21, label %37, label %24

22:                                               ; preds = %24
  %23 = icmp eq %"class.std::__1::unique_ptr.19"* %35, %20
  br i1 %23, label %37, label %24

24:                                               ; preds = %16, %22
  %25 = phi %"class.std::__1::unique_ptr.19"* [ %35, %22 ], [ %18, %16 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %26, align 8
  %28 = bitcast %class.CPWL_Wnd* %27 to i1 (%class.CPWL_Wnd*, i1)***
  %29 = load i1 (%class.CPWL_Wnd*, i1)**, i1 (%class.CPWL_Wnd*, i1)*** %28, align 8
  %30 = getelementptr inbounds i1 (%class.CPWL_Wnd*, i1)*, i1 (%class.CPWL_Wnd*, i1)** %29, i64 21
  %31 = load i1 (%class.CPWL_Wnd*, i1)*, i1 (%class.CPWL_Wnd*, i1)** %30, align 8
  %32 = call zeroext i1 %31(%class.CPWL_Wnd* %27, i1 zeroext %1) #13
  %33 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %11, align 8
  %34 = icmp eq %class.CPWL_Wnd* %33, null
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %25, i64 1
  br i1 %34, label %36, label %22

36:                                               ; preds = %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  br label %63

37:                                               ; preds = %22, %16
  %38 = zext i1 %1 to i32
  %39 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 10
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %38, %41
  br i1 %42, label %55, label %43

43:                                               ; preds = %37
  store i8 %4, i8* %39, align 1
  %44 = bitcast %class.CPWL_Wnd* %0 to i1 (%class.CPWL_Wnd*)***
  %45 = load i1 (%class.CPWL_Wnd*)**, i1 (%class.CPWL_Wnd*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %45, i64 37
  %47 = load i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %46, align 8
  %48 = call zeroext i1 %47(%class.CPWL_Wnd* %0) #13
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = bitcast %class.CPWL_Wnd* %0 to i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)***
  %51 = load i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)**, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)** %51, i64 2
  %53 = load i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)*, i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)** %52, align 8
  %54 = call zeroext i1 %53(%class.CPWL_Wnd* %0, %class.CFX_FloatRect* null) #13
  br i1 %54, label %55, label %56

55:                                               ; preds = %37, %49
  br label %56

56:                                               ; preds = %49, %43, %55
  %57 = phi i1 [ false, %49 ], [ false, %43 ], [ true, %55 ]
  %58 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %59 = icmp eq %class.CPWL_Wnd* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %58, i64 0, i32 1
  %62 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %3, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %61, %"class.fxcrt::Observable::ObserverIface"* nonnull %62) #13
  br label %63

63:                                               ; preds = %36, %56, %60
  %64 = phi i1 [ false, %36 ], [ %57, %56 ], [ %57, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br label %65

65:                                               ; preds = %2, %63
  %66 = phi i1 [ %64, %63 ], [ true, %2 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd11SetClipRectERK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 8
  %4 = bitcast %class.CFX_FloatRect* %3 to i8*
  %5 = bitcast %class.CFX_FloatRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 16, i1 false)
  tail call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* %3) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16777216
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPWL_Wnd13RePosChildWndEv(%class.CPWL_Wnd*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %4 = alloca %"class.fxcrt::ObservedPtr.49", align 8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 134217728
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %109, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 6, i32 0
  %11 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %10, align 8
  %12 = icmp eq %class.CPWL_ScrollBar* %11, null
  br i1 %12, label %109, label %13

13:                                               ; preds = %9
  %14 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  %18 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %19 = bitcast %class.CFX_FloatRect* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7, i32 2
  %22 = bitcast float* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast { <2 x float>, <2 x float> }* %2 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %26 = bitcast <2 x float>* %25 to i64*
  store i64 %23, i64* %26, align 8
  %27 = trunc i64 %20 to i32
  %28 = bitcast i32 %27 to float
  %29 = trunc i64 %23 to i32
  %30 = bitcast i32 %29 to float
  %31 = fcmp ult float %28, %30
  %32 = lshr i64 %20, 32
  %33 = trunc i64 %32 to i32
  %34 = bitcast i32 %33 to float
  %35 = lshr i64 %23, 32
  %36 = trunc i64 %35 to i32
  %37 = bitcast i32 %36 to float
  %38 = fcmp ult float %34, %37
  %39 = and i1 %31, %38
  br i1 %39, label %40, label %52

40:                                               ; preds = %13
  %41 = and i32 %6, 1073741824
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 9
  %45 = load i32, i32* %44, align 4
  %46 = sitofp i32 %45 to float
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi float [ %46, %43 ], [ 0.000000e+00, %40 ]
  call void @_ZN13CFX_FloatRect7DeflateEff(%class.CFX_FloatRect* nonnull %3, float %48, float %48) #13
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #13
  %49 = load float, float* %16, align 8
  %50 = load float, float* %15, align 4
  %51 = load float, float* %17, align 4
  br label %52

52:                                               ; preds = %13, %47
  %53 = phi float [ %37, %13 ], [ %51, %47 ]
  %54 = phi float [ %34, %13 ], [ %50, %47 ]
  %55 = phi float [ %30, %13 ], [ %49, %47 ]
  %56 = fadd float %55, -1.200000e+01
  %57 = fadd float %55, -1.000000e+00
  %58 = bitcast %"class.fxcrt::ObservedPtr.49"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %4, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  store %class.CPWL_Wnd* %0, %class.CPWL_Wnd** %60, align 8
  %61 = icmp eq %class.CPWL_Wnd* %0, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %4, i64 0, i32 0
  %64 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %64, %"class.fxcrt::Observable::ObserverIface"* nonnull %63) #13
  br label %65

65:                                               ; preds = %52, %62
  %66 = bitcast %class.CPWL_ScrollBar* %11 to %class.CPWL_Wnd*
  %67 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 9
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %101, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 7
  %72 = bitcast %class.CFX_FloatRect* %71 to <2 x float>*
  %73 = load <2 x float>, <2 x float>* %72, align 8
  %74 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 7, i32 2
  %75 = bitcast float* %74 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 8
  %77 = bitcast %class.CFX_FloatRect* %71 to i8*
  %78 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 7, i32 0
  store float %56, float* %78, align 8
  %79 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 7, i32 1
  store float %54, float* %79, align 4
  store float %57, float* %74, align 8
  %80 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 7, i32 3
  store float %53, float* %80, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* %71) #13
  %81 = extractelement <2 x float> %73, i32 0
  %82 = fcmp une float %81, %56
  %83 = extractelement <2 x float> %76, i32 0
  %84 = fcmp une float %83, %57
  %85 = or i1 %82, %84
  %86 = extractelement <2 x float> %76, i32 1
  %87 = fcmp une float %86, %53
  %88 = or i1 %87, %85
  %89 = extractelement <2 x float> %73, i32 1
  %90 = fcmp une float %89, %54
  %91 = or i1 %90, %88
  br i1 %91, label %92, label %98

92:                                               ; preds = %70
  %93 = bitcast %class.CPWL_ScrollBar* %11 to i1 (%class.CPWL_Wnd*)***
  %94 = load i1 (%class.CPWL_Wnd*)**, i1 (%class.CPWL_Wnd*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %94, i64 37
  %96 = load i1 (%class.CPWL_Wnd*)*, i1 (%class.CPWL_Wnd*)** %95, align 8
  %97 = call zeroext i1 %96(%class.CPWL_Wnd* nonnull %66) #13
  br i1 %97, label %98, label %101

98:                                               ; preds = %70, %92
  %99 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %11, i64 0, i32 0, i32 2, i32 0
  %100 = bitcast %class.CFX_FloatRect* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 4 %77, i64 16, i1 false) #13
  br label %101

101:                                              ; preds = %65, %92, %98
  %102 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %60, align 8
  %103 = icmp ne %class.CPWL_Wnd* %102, null
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %104 = icmp eq %class.CPWL_Wnd* %102, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %102, i64 0, i32 1
  %107 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %4, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %106, %"class.fxcrt::Observable::ObserverIface"* nonnull %107) #13
  br label %108

108:                                              ; preds = %101, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br label %109

109:                                              ; preds = %1, %9, %108
  %110 = phi i1 [ %103, %108 ], [ true, %9 ], [ true, %1 ]
  ret i1 %110
}

declare void @_ZN13CFX_FloatRect7DeflateEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CPWL_Wnd14CreateChildWndERKNS_12CreateParamsE(%class.CPWL_Wnd* nocapture, %"class.CPWL_Wnd::CreateParams"* nocapture dereferenceable(184)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd9SetCursorEv(%class.CPWL_Wnd* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 2, i32 0
  %7 = load %class.IPWL_SystemHandler*, %class.IPWL_SystemHandler** %6, align 8
  %8 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 17
  %9 = load i32, i32* %8, align 8
  %10 = bitcast %class.IPWL_SystemHandler* %7 to void (%class.IPWL_SystemHandler*, i32)***
  %11 = load void (%class.IPWL_SystemHandler*, i32)**, void (%class.IPWL_SystemHandler*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%class.IPWL_SystemHandler*, i32)*, void (%class.IPWL_SystemHandler*, i32)** %11, i64 5
  %13 = load void (%class.IPWL_SystemHandler*, i32)*, void (%class.IPWL_SystemHandler*, i32)** %12, align 8
  tail call void %13(%class.IPWL_SystemHandler* %7, i32 %9) #13
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd14IsCaptureMouseEv(%class.CPWL_Wnd* readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  %4 = icmp eq %class.CPWL_MsgControl* %3, null
  %5 = icmp eq %class.CPWL_Wnd* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %8, align 8
  %10 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.fxcrt::UnownedPtr.7"*, %"class.fxcrt::UnownedPtr.7"** %10, align 8
  %12 = icmp eq %"class.fxcrt::UnownedPtr.7"* %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %7, %18
  %14 = phi %"class.fxcrt::UnownedPtr.7"* [ %19, %18 ], [ %9, %7 ]
  %15 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %14, i64 0, i32 0
  %16 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %15, align 8
  %17 = icmp eq %class.CPWL_Wnd* %16, %0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.7"* %14, i64 1
  %20 = icmp eq %"class.fxcrt::UnownedPtr.7"* %19, %11
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %7
  %22 = phi %"class.fxcrt::UnownedPtr.7"* [ %9, %7 ], [ %11, %18 ], [ %14, %13 ]
  %23 = icmp ne %"class.fxcrt::UnownedPtr.7"* %22, %11
  br label %24

24:                                               ; preds = %1, %21
  %25 = phi i1 [ false, %1 ], [ %23, %21 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPWL_Wnd9IsFocusedEv(%class.CPWL_Wnd* readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  %4 = icmp eq %class.CPWL_MsgControl* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 4, i32 0
  %7 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %6, align 8
  %8 = icmp eq %class.CPWL_Wnd* %7, %0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd12GetFocusRectEv(%class.CPWL_Wnd* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %4 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7
  %5 = bitcast %class.CFX_FloatRect* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 7, i32 2
  %8 = bitcast float* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %11 = bitcast { <2 x float>, <2 x float> }* %2 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %13 = bitcast <2 x float>* %12 to i64*
  store i64 %9, i64* %13, align 8
  %14 = trunc i64 %6 to i32
  %15 = bitcast i32 %14 to float
  %16 = trunc i64 %9 to i32
  %17 = bitcast i32 %16 to float
  %18 = fcmp ult float %15, %17
  %19 = bitcast i64 %6 to <2 x float>
  %20 = bitcast i64 %9 to <2 x float>
  br i1 %18, label %21, label %32

21:                                               ; preds = %1
  %22 = lshr i64 %9, 32
  %23 = trunc i64 %22 to i32
  %24 = bitcast i32 %23 to float
  %25 = lshr i64 %6, 32
  %26 = trunc i64 %25 to i32
  %27 = bitcast i32 %26 to float
  %28 = fcmp ult float %27, %24
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %3, float 1.000000e+00, float 1.000000e+00) #13
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #13
  %30 = load <2 x float>, <2 x float>* %10, align 8
  %31 = load <2 x float>, <2 x float>* %12, align 8
  br label %32

32:                                               ; preds = %21, %1, %29
  %33 = phi <2 x float> [ %20, %21 ], [ %20, %1 ], [ %31, %29 ]
  %34 = phi <2 x float> [ %19, %21 ], [ %19, %1 ], [ %30, %29 ]
  %35 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %34, 0
  %36 = insertvalue { <2 x float>, <2 x float> } %35, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK8CPWL_Wnd11GetFontSizeEv(%class.CPWL_Wnd* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 13
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8CPWL_Wnd11SetFontSizeEf(%class.CPWL_Wnd* nocapture, float) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 13
  store float %1, float* %3, align 4
  ret void
}

declare void @_ZNK9CFX_ColordvEf(%struct.CFX_Color* sret, %struct.CFX_Color*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  %5 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.19"* %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %10, %2
  %9 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 12
  store i32 %1, i32* %9, align 8
  ret void

10:                                               ; preds = %2, %10
  %11 = phi %"class.std::__1::unique_ptr.19"* [ %14, %10 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %12, align 8
  tail call void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd* %13, i32 %1)
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %11, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.19"* %14, %6
  br i1 %15, label %8, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPWL_Wnd15GetWindowMatrixEv(%class.CFX_Matrix* noalias nocapture sret, %class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_Matrix, align 16
  %4 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 5
  %6 = bitcast %class.CFX_Matrix* %0 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %6, align 4
  store float 0.000000e+00, float* %4, align 4
  store float 0.000000e+00, float* %5, align 4
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 2, i32 4, i32 1
  %8 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %7, align 8
  %9 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %12, align 8
  %14 = bitcast %"class.CPWL_Wnd::ProviderIface"* %8 to void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)***
  %15 = load void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)**, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)** %15, i64 2
  %17 = load void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)*, void (%class.CFX_Matrix*, %"class.CPWL_Wnd::ProviderIface"*, %"class.IPWL_SystemHandler::PerWindowData"*)** %16, align 8
  call void %17(%class.CFX_Matrix* nonnull sret %3, %"class.CPWL_Wnd::ProviderIface"* nonnull %8, %"class.IPWL_SystemHandler::PerWindowData"* %13) #13
  %18 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !noalias !39
  %20 = fmul <4 x float> %19, zeroinitializer
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %22 = fadd <4 x float> %19, %21
  %23 = extractelement <4 x float> %20, i32 2
  %24 = extractelement <4 x float> %20, i32 0
  %25 = fadd float %24, %23
  %26 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %27 = load float, float* %26, align 16, !noalias !39
  %28 = fadd float %25, %27
  %29 = extractelement <4 x float> %20, i32 3
  %30 = extractelement <4 x float> %20, i32 1
  %31 = fadd float %30, %29
  %32 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %33 = load float, float* %32, align 4, !noalias !39
  %34 = fadd float %31, %33
  %35 = bitcast %class.CFX_Matrix* %0 to <4 x float>*
  store <4 x float> %22, <4 x float>* %35, align 4
  store float %28, float* %4, align 4
  store float %34, float* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %36

36:                                               ; preds = %2, %10
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CPWL_Wnd* @_ZNK8CPWL_Wnd10GetFocusedEv(%class.CPWL_Wnd* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %0, i64 0, i32 2, i32 16
  %3 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %2, align 8
  %4 = icmp eq %class.CPWL_MsgControl* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %3, i64 0, i32 4, i32 0
  %7 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.CPWL_Wnd* [ %7, %5 ], [ null, %1 ]
  ret %class.CPWL_Wnd* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEED0Ev(%"class.fxcrt::ObservedPtr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 1
  %4 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %3, align 8
  %5 = icmp eq %"class.CFX_Timer::HandlerIface"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.CFX_Timer::HandlerIface", %"class.CFX_Timer::HandlerIface"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrIN9CFX_Timer12HandlerIfaceEE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 1
  store %"class.CFX_Timer::HandlerIface"* null, %"class.CFX_Timer::HandlerIface"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEED0Ev(%"class.fxcrt::ObservedPtr.5"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 1
  %4 = load %"class.CPWL_Wnd::ProviderIface"*, %"class.CPWL_Wnd::ProviderIface"** %3, align 8
  %5 = icmp eq %"class.CPWL_Wnd::ProviderIface"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.CPWL_Wnd::ProviderIface", %"class.CPWL_Wnd::ProviderIface"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr.5"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrIN8CPWL_Wnd13ProviderIfaceEE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr.5"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::ObservedPtr.5"* %0, i64 0, i32 1
  store %"class.CPWL_Wnd::ProviderIface"* null, %"class.CPWL_Wnd::ProviderIface"** %2, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlED2Ev(%"class.fxcrt::ObservedPtr.65"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 1
  %4 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %3, align 8
  %5 = icmp eq %class.CPWL_MsgControl* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlED0Ev(%"class.fxcrt::ObservedPtr.65"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI15CPWL_MsgControlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 1
  %4 = load %class.CPWL_MsgControl*, %class.CPWL_MsgControl** %3, align 8
  %5 = icmp eq %class.CPWL_MsgControl* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_MsgControl, %class.CPWL_MsgControl* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr.65"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI15CPWL_MsgControlE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr.65"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.65", %"class.fxcrt::ObservedPtr.65"* %0, i64 0, i32 1
  store %class.CPWL_MsgControl* null, %class.CPWL_MsgControl** %2, align 8
  ret void
}

declare void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI8CPWL_WndED0Ev(%"class.fxcrt::ObservedPtr.49"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 1
  %4 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %3, align 8
  %5 = icmp eq %class.CPWL_Wnd* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr.49"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI8CPWL_WndE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr.49"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.49", %"class.fxcrt::ObservedPtr.49"* %0, i64 0, i32 1
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI8CPWL_WndNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.17"*, %"class.std::__1::unique_ptr.19"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.19"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.19"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.19"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.19"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.19"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.19"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.19"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.19"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.19"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.19"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CPWL_Wnd** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.19"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.19"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.19"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.19"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !42

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.19"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.19"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.19"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.19"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.19"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.19"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.19"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.19"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.19"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.19"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.19"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.19"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.19"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.19"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.19"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.19"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.19"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.19"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.19"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.19"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.19"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.19"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.19"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.19"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.19"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.19"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.19"*
  %138 = icmp eq %"class.std::__1::unique_ptr.19"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.19"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %142, align 8
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %142, align 8
  %144 = icmp eq %class.CPWL_Wnd* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %class.CPWL_Wnd* %143 to void (%class.CPWL_Wnd*)***
  %147 = load void (%class.CPWL_Wnd*)**, void (%class.CPWL_Wnd*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %147, i64 1
  %149 = load void (%class.CPWL_Wnd*)*, void (%class.CPWL_Wnd*)** %148, align 8
  tail call void %149(%class.CPWL_Wnd* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.19"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN14CPWL_ScrollBarC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK8CPWL_Wnd21GetBorderLeftTopColorE11BorderStyle: argument 0"}
!5 = distinct !{!5, !"_ZNK8CPWL_Wnd21GetBorderLeftTopColorE11BorderStyle"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK8CPWL_Wnd25GetBorderRightBottomColorE11BorderStyle: argument 0"}
!8 = distinct !{!8, !"_ZNK8CPWL_Wnd25GetBorderRightBottomColorE11BorderStyle"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK8CPWL_Wnd15GetWindowMatrixEv: argument 0"}
!11 = distinct !{!11, !"_ZNK8CPWL_Wnd15GetWindowMatrixEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!14 = distinct !{!14, !"_ZNK10CFX_MatrixmlERKS_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK8CPWL_Wnd15GetWindowMatrixEv: argument 0"}
!17 = distinct !{!17, !"_ZNK8CPWL_Wnd15GetWindowMatrixEv"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!20 = distinct !{!20, !"_ZNK10CFX_MatrixmlERKS_"}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !27}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !27}
!37 = distinct !{!37, !29}
!38 = distinct !{!38, !27}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!41 = distinct !{!41, !"_ZNK10CFX_MatrixmlERKS_"}
!42 = distinct !{!42, !29}
