; ModuleID = '../../third_party/blink/renderer/platform/bindings/exception_state.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/exception_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::Value" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NonThrowableExceptionState" = type <{ %"class.blink::ExceptionState", i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }

@_ZN5blink14ExceptionState28s_create_dom_exception_func_E = hidden local_unnamed_addr global %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* null, align 8
@.str = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/bindings/exception_state.cc\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"exception_code\00", align 1
@_ZTVN5blink26NonThrowableExceptionStateE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonThrowableExceptionState"*, i32, %"class.WTF::String"*)* @_ZN5blink26NonThrowableExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::NonThrowableExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink26NonThrowableExceptionState18ThrowSecurityErrorERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::NonThrowableExceptionState"*, %"class.WTF::String"*)* @_ZN5blink26NonThrowableExceptionState15ThrowRangeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::NonThrowableExceptionState"*, %"class.WTF::String"*)* @_ZN5blink26NonThrowableExceptionState14ThrowTypeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::NonThrowableExceptionState"*, %"class.WTF::String"*)* @_ZN5blink26NonThrowableExceptionState21ThrowWasmCompileErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::NonThrowableExceptionState"*, %"class.v8::Value"*)* @_ZN5blink26NonThrowableExceptionState18RethrowV8ExceptionEN2v85LocalINS1_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*)* @_ZN5blink14ExceptionState14ClearExceptionEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN5blink14ExceptionStateE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)* @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink14ExceptionState18ThrowSecurityErrorERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)* @_ZN5blink14ExceptionState15ThrowRangeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)* @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)* @_ZN5blink14ExceptionState21ThrowWasmCompileErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)* @_ZN5blink14ExceptionState18RethrowV8ExceptionEN2v85LocalINS1_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*)* @_ZN5blink14ExceptionState14ClearExceptionEv to i8*)] }, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DummyExceptionStateForTesting"*, i32, %"class.WTF::String"*)* @_ZN5blink29DummyExceptionStateForTesting17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink29DummyExceptionStateForTesting18ThrowSecurityErrorERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"*)* @_ZN5blink29DummyExceptionStateForTesting15ThrowRangeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"*)* @_ZN5blink29DummyExceptionStateForTesting14ThrowTypeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"*)* @_ZN5blink29DummyExceptionStateForTesting21ThrowWasmCompileErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DummyExceptionStateForTesting"*, %"class.v8::Value"*)* @_ZN5blink29DummyExceptionStateForTesting18RethrowV8ExceptionEN2v85LocalINS1_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::ExceptionState"*)* @_ZN5blink14ExceptionState14ClearExceptionEv to i8*)] }, align 8

@_ZN5blink26NonThrowableExceptionStateC1Ev = hidden unnamed_addr alias void (%"class.blink::NonThrowableExceptionState"*), void (%"class.blink::NonThrowableExceptionState"*)* @_ZN5blink26NonThrowableExceptionStateC2Ev
@_ZN5blink26NonThrowableExceptionStateC1EPKci = hidden unnamed_addr alias void (%"class.blink::NonThrowableExceptionState"*, i8*, i32), void (%"class.blink::NonThrowableExceptionState"*, i8*, i32)* @_ZN5blink26NonThrowableExceptionStateC2EPKci

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14ExceptionState29SetCreateDOMExceptionFunctionEPFN2v85LocalINS1_5ValueEEEPNS1_7IsolateENS_16DOMExceptionCodeERKN3WTF6StringESB_E(%"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)*) local_unnamed_addr #0 align 2 {
  store %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* %0, %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)** @_ZN5blink14ExceptionState28s_create_dom_exception_func_E, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  switch i32 %1, label %30 [
    i32 1000, label %10
    i32 1001, label %14
    i32 1002, label %18
    i32 1003, label %22
    i32 1004, label %26
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException11CreateErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  br label %76

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  %17 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException16CreateRangeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  br label %76

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %21 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException20CreateReferenceErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %20, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  br label %76

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %24 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  %25 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException17CreateSyntaxErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %24, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  br label %76

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %28, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  br label %76

30:                                               ; preds = %3
  %31 = add i32 %1, -1
  %32 = icmp ult i32 %31, 41
  %33 = load %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)** @_ZN5blink14ExceptionState28s_create_dom_exception_func_E, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  br i1 %32, label %36, label %56

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = call %"class.v8::Value"* %33(%"class.v8::Isolate"* %35, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %36, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %76

56:                                               ; preds = %30
  %57 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %59 = call %"class.v8::Value"* %33(%"class.v8::Isolate"* %35, i32 28, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %56, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  br label %76

76:                                               ; preds = %55, %75, %26, %22, %18, %14, %10
  %77 = phi %"class.v8::Value"* [ %39, %55 ], [ %59, %75 ], [ %29, %26 ], [ %25, %22 ], [ %21, %18 ], [ %17, %14 ], [ %13, %10 ]
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.v8::Value"* %77)
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #10
  br label %93

93:                                               ; preds = %76, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %98, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %29

11:                                               ; preds = %7
  %12 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %98

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %98

29:                                               ; preds = %7
  %30 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #10
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %29, %46
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 2
  %50 = load %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %51 = icmp eq %"class.blink::ExceptionState::ContextScope"* %50, null
  %52 = bitcast %"class.WTF::String"* %3 to i64*
  br i1 %51, label %53, label %74

53:                                               ; preds = %94, %48
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 1
  %55 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_119AddContextToMessageERKN3WTF6StringERKNS_16ExceptionContextE(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::ExceptionContext"* dereferenceable(24) %54)
  %56 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %56, i64* %52, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  %73 = load i64, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %98

74:                                               ; preds = %48, %94
  %75 = phi %"class.blink::ExceptionState::ContextScope"* [ %96, %94 ], [ %50, %48 ]
  %76 = getelementptr inbounds %"class.blink::ExceptionState::ContextScope", %"class.blink::ExceptionState::ContextScope"* %75, i64 0, i32 2
  %77 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_119AddContextToMessageERKN3WTF6StringERKNS_16ExceptionContextE(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::ExceptionContext"* dereferenceable(24) %76)
  %78 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %78, i64* %52, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #10
  br label %94

94:                                               ; preds = %93, %90, %74
  %95 = getelementptr inbounds %"class.blink::ExceptionState::ContextScope", %"class.blink::ExceptionState::ContextScope"* %75, i64 0, i32 1
  %96 = load %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionState::ContextScope"** %95, align 8
  %97 = icmp eq %"class.blink::ExceptionState::ContextScope"* %96, null
  br i1 %97, label %53, label %74

98:                                               ; preds = %2, %27, %11, %72
  %99 = phi i64 [ %73, %72 ], [ %12, %11 ], [ %12, %27 ], [ 0, %2 ]
  %100 = inttoptr i64 %99 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %100
}

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException11CreateErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException16CreateRangeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException20CreateReferenceErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException17CreateSyntaxErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str, i64 0, i64 0), i32 172, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %10

10:                                               ; preds = %4, %7
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 4
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #10
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  call void @llvm.trap() #10
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %10
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %33, %48, %51
  %53 = icmp eq %"class.v8::Value"* %3, null
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 6
  br i1 %53, label %55, label %61

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %57, null
  br i1 %58, label %77, label %59

59:                                               ; preds = %55
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %57) #10
  %60 = bitcast %"class.blink::TraceWrapperV8Reference"* %54 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %77

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %63 = bitcast %"class.v8::Isolate"** %62 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.blink::TraceWrapperV8Reference"* %54 to i64*
  br label %72

70:                                               ; preds = %61
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %66) #10
  %71 = bitcast %"class.blink::TraceWrapperV8Reference"* %54 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  br label %72

72:                                               ; preds = %68, %70
  %73 = phi i64* [ %69, %68 ], [ %71, %70 ]
  %74 = bitcast %"class.v8::Value"* %3 to i64*
  %75 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %64, i64* nonnull %74, i64* %73, i1 zeroext false) #10
  %76 = ptrtoint i64* %75 to i64
  store atomic i64 %76, i64* %73 monotonic, align 8
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %54) #10
  br label %77

77:                                               ; preds = %59, %55, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::ExceptionState"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = load %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)** @_ZN5blink14ExceptionState28s_create_dom_exception_func_E, align 8
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = call %"class.v8::Value"* %9(%"class.v8::Isolate"* %11, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.v8::Value"* %14)
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %3, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %30, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState18ThrowSecurityErrorERKN3WTF6StringES4_(%"class.blink::ExceptionState"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = load %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, %"class.v8::Value"* (%"class.v8::Isolate"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)** @_ZN5blink14ExceptionState28s_create_dom_exception_func_E, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = call %"class.v8::Value"* %12(%"class.v8::Isolate"* %14, i32 18, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 18, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.v8::Value"* %15)
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %3, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %47

47:                                               ; preds = %31, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState15ThrowRangeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException16CreateRangeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 1001, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* %9)
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #10
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 1004, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* %9)
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #10
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState21ThrowWasmCompileErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 3
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ExceptionState19AddExceptionContextERKN3WTF6StringE(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException22CreateWasmCompileErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 1005, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* %9)
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #10
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException22CreateWasmCompileErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = icmp eq i8* %2, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @strlen(i8* nonnull %2) #11
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %2, i64 %10) #10
  %11 = bitcast %"class.blink::ExceptionState"* %0 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %12 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %11, align 8
  %13 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %12, align 8
  call void %13(%"class.blink::ExceptionState"* %0, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %9, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"*, i8*, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = icmp eq i8* %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %1) #11
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %1, i64 %11) #10
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = icmp eq i8* %2, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = call i64 @strlen(i8* nonnull %2) #11
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %10 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %2, i64 %17) #10
  %18 = bitcast %"class.blink::ExceptionState"* %0 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)***
  %19 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)** %19, i64 1
  %21 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)** %20, align 8
  call void %21(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #10
  br label %38

38:                                               ; preds = %16, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %38, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = icmp eq i8* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %1) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %1, i64 %9) #10
  %10 = bitcast %"class.blink::ExceptionState"* %0 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %11, i64 2
  %13 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %12, align 8
  call void %13(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %8, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = icmp eq i8* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %1) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %1, i64 %9) #10
  %10 = bitcast %"class.blink::ExceptionState"* %0 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %11, i64 3
  %13 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %12, align 8
  call void %13(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %8, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState21ThrowWasmCompileErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = icmp eq i8* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %1) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %1, i64 %9) #10
  %10 = bitcast %"class.blink::ExceptionState"* %0 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %11, i64 4
  %13 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %12, align 8
  call void %13(%"class.blink::ExceptionState"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %8, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState18RethrowV8ExceptionEN2v85LocalINS1_5ValueEEE(%"class.blink::ExceptionState"*, %"class.v8::Value"*) unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %0, i32 2000, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.v8::Value"* %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 4
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 5
  %4 = bitcast %"class.WTF::String"* %3 to i64*
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #10
  br label %21

21:                                               ; preds = %20, %17, %1
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %24) #10
  %27 = bitcast %"class.blink::TraceWrapperV8Reference"* %22 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  br label %28

28:                                               ; preds = %21, %26
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState16SetExceptionCodeEi(%"class.blink::ExceptionState"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str, i64 0, i64 0), i32 185, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  br label %8

8:                                                ; preds = %2, %5
  %9 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 4
  store i32 %1, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState16PushContextScopeEPNS0_12ContextScopeE(%"class.blink::ExceptionState"* nocapture, %"class.blink::ExceptionState::ContextScope"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::ExceptionState::ContextScope"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExceptionState::ContextScope", %"class.blink::ExceptionState::ContextScope"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::ExceptionState::ContextScope"** %6 to i64*
  store i64 %5, i64* %7, align 8
  store %"class.blink::ExceptionState::ContextScope"* %1, %"class.blink::ExceptionState::ContextScope"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14ExceptionState15PopContextScopeEv(%"class.blink::ExceptionState"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 2
  %3 = load %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionState::ContextScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ExceptionState::ContextScope", %"class.blink::ExceptionState::ContextScope"* %3, i64 0, i32 1
  %5 = bitcast %"class.blink::ExceptionState::ContextScope"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::ExceptionState::ContextScope"** %2 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_119AddContextToMessageERKN3WTF6StringERKNS_16ExceptionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionContext"* nocapture readonly dereferenceable(24)) unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.blink::ExceptionContext", %"class.blink::ExceptionContext"* %1, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ExceptionContext", %"class.blink::ExceptionContext"* %1, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ExceptionContext", %"class.blink::ExceptionContext"* %1, i64 0, i32 0
  %8 = load i16, i16* %7, align 8
  switch i16 %8, label %31 [
    i16 5, label %9
    i16 6, label %11
    i16 2, label %13
    i16 3, label %15
    i16 18, label %17
    i16 16, label %29
    i16 7, label %19
    i16 8, label %21
    i16 10, label %23
    i16 13, label %25
    i16 14, label %27
  ]

9:                                                ; preds = %2
  %10 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToConstructEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

11:                                               ; preds = %2
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages15FailedToExecuteEPKcS2_RKN3WTF6StringE(i8* %6, i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

13:                                               ; preds = %2
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages11FailedToGetEPKcS2_RKN3WTF6StringE(i8* %6, i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

15:                                               ; preds = %2
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages11FailedToSetEPKcS2_RKN3WTF6StringE(i8* %6, i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

17:                                               ; preds = %2
  %18 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToEnumerateEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

19:                                               ; preds = %2
  %20 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18FailedToGetIndexedEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

21:                                               ; preds = %2
  %22 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18FailedToSetIndexedEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

23:                                               ; preds = %2
  %24 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages21FailedToDeleteIndexedEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

25:                                               ; preds = %2
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages16FailedToGetNamedEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

27:                                               ; preds = %2
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages16FailedToSetNamedEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

29:                                               ; preds = %2
  %30 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages19FailedToDeleteNamedEPKcRKN3WTF6StringE(i8* %4, %"class.WTF::String"* dereferenceable(8) %0) #10
  br label %52

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #10
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #10
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %31, %29, %27, %25, %23, %21, %19, %17, %15, %13, %11, %9
  %53 = phi %"class.WTF::StringImpl"* [ %28, %27 ], [ %26, %25 ], [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ %30, %29 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ null, %31 ], [ %33, %35 ], [ %33, %50 ]
  ret %"class.WTF::StringImpl"* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionStateC2Ev(%"class.blink::NonThrowableExceptionState"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %3, align 8
  %4 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %4, align 2
  %5 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 1, i32 2
  %6 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %7 = bitcast %"class.WTF::StringImpl"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 36, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink26NonThrowableExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionStateC2EPKci(%"class.blink::NonThrowableExceptionState"* nocapture, i8*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %6, align 2
  %7 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 1, i32 2
  %8 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %9 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10
  %10 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 36, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink26NonThrowableExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %11 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 1
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %0, i64 0, i32 2
  store i32 %2, i32* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::NonThrowableExceptionState"* nocapture, i32, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionState15ThrowRangeErrorERKN3WTF6StringE(%"class.blink::NonThrowableExceptionState"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionState18ThrowSecurityErrorERKN3WTF6StringES4_(%"class.blink::NonThrowableExceptionState"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8), %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::NonThrowableExceptionState"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionState21ThrowWasmCompileErrorERKN3WTF6StringE(%"class.blink::NonThrowableExceptionState"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink26NonThrowableExceptionState18RethrowV8ExceptionEN2v85LocalINS1_5ValueEEE(%"class.blink::NonThrowableExceptionState"* nocapture, %"class.v8::Value"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DummyExceptionStateForTesting17ThrowDOMExceptionENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::DummyExceptionStateForTesting"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %4, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.v8::Value"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DummyExceptionStateForTesting15ThrowRangeErrorERKN3WTF6StringE(%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %3, i32 1001, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DummyExceptionStateForTesting18ThrowSecurityErrorERKN3WTF6StringES4_(%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %4, i32 18, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DummyExceptionStateForTesting14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %3, i32 1004, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DummyExceptionStateForTesting21ThrowWasmCompileErrorERKN3WTF6StringE(%"class.blink::DummyExceptionStateForTesting"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %3, i32 1005, %"class.WTF::String"* dereferenceable(8) %1, %"class.v8::Value"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DummyExceptionStateForTesting18RethrowV8ExceptionEN2v85LocalINS1_5ValueEEE(%"class.blink::DummyExceptionStateForTesting"*, %"class.v8::Value"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  call void @_ZN5blink14ExceptionState12SetExceptionEiRKN3WTF6StringEN2v85LocalINS5_5ValueEEE(%"class.blink::ExceptionState"* %4, i32 2000, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.v8::Value"* null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToConstructEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages15FailedToExecuteEPKcS2_RKN3WTF6StringE(i8*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages11FailedToGetEPKcS2_RKN3WTF6StringE(i8*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages11FailedToSetEPKcS2_RKN3WTF6StringE(i8*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToEnumerateEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18FailedToGetIndexedEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18FailedToSetIndexedEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages21FailedToDeleteIndexedEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages16FailedToGetNamedEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages16FailedToSetNamedEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages19FailedToDeleteNamedEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #3

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #3

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
