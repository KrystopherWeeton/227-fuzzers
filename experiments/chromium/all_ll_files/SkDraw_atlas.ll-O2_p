; ModuleID = '../../third_party/skia/src/core/SkDraw_atlas.cpp'
source_filename = "../../third_party/skia/src/core/SkDraw_atlas.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.6, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.6 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.8 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkPreConcatMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider*, %class.SkMatrix }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkDraw = type { %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkPixmap, %class.SkMatrixProvider*, %class.SkRasterClip*, %class.SkPixmap* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.6 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkRSXform = type { float, float, float, float }
%struct.SkRect = type { float, float, float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%struct.SkPoint = type { float, float }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [256 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%class.SkPath = type <{ %class.sk_sp.12, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.12 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.13, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.14, %class.SkTDArray.15, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.14 = type { i8*, i32, i32 }
%class.SkTDArray.15 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.16 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.16 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.17", [3 x i8] }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkStageUpdater = type { i32 (...)** }
%struct.SkRasterPipeline_UniformColorCtx = type { float, float, float, float, [4 x i16] }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN25SkPreConcatMatrixProviderD0Ev = comdat any

$_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZTV25SkPreConcatMatrixProvider = comdat any

@__const._ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint.p = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.7 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.6 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.8 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.9 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.10 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint.matrixProvider = private unnamed_addr constant %class.SkPreConcatMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*), %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@__const._ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint.steps = private unnamed_addr constant { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] } { %"struct.SkColorSpaceXformSteps::Flags" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, [3 x i8] c"\AA\AA\AA", %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 4
@_ZTV6SkDraw = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTV25SkPreConcatMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkPreConcatMatrixProvider*)* @_ZN25SkPreConcatMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*)* @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*)* @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32* readonly, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.SkM44, align 4
  %11 = alloca %class.SkM44, align 4
  %12 = alloca %struct.SkRect, align 4
  %13 = alloca [4 x %struct.SkPoint], align 16
  %14 = alloca %class.sk_sp.6, align 8
  %15 = alloca %class.SkPaint, align 8
  %16 = alloca %class.sk_sp.6, align 8
  %17 = alloca %class.sk_sp.8, align 8
  %18 = alloca %class.SkSTArenaAlloc, align 8
  %19 = alloca %class.SkRasterPipeline, align 8
  %20 = alloca %struct.SkStageRec, align 8
  %21 = alloca %class.SkDraw, align 8
  %22 = alloca %class.sk_sp.6, align 8
  %23 = alloca %class.sk_sp.6, align 8
  %24 = alloca %class.sk_sp.6, align 8
  %25 = alloca %class.sk_sp.6, align 8
  %26 = alloca %class.SkMatrix, align 16
  %27 = alloca %class.SkPreConcatMatrixProvider, align 8
  %28 = alloca %struct.SkColorSpaceXformSteps, align 4
  %29 = alloca %class.sk_sp.6, align 8
  %30 = alloca %class.SkPath, align 8
  %31 = alloca { <2 x float>, <2 x float> }, align 8
  %32 = bitcast { <2 x float>, <2 x float> }* %31 to %struct.SkRGBA4f*
  %33 = alloca %class.SkMatrix, align 16
  %34 = bitcast %class.sk_sp.6* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %14, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %35, align 8
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.6* nonnull sret %14, %class.SkImage* %1, i32 0, i32 0, %struct.SkSamplingOptions* dereferenceable(20) %7, %class.SkMatrix* null) #7
  %36 = load %class.SkShader*, %class.SkShader** %35, align 8
  %37 = icmp eq %class.SkShader* %36, null
  br i1 %37, label %567, label %38

38:                                               ; preds = %9
  %39 = bitcast %class.SkPaint* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%class.SkPaint* @__const._ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint.p to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %15, %class.SkPaint* dereferenceable(72) %8) #7
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %15, i64 0, i32 8, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, -2
  store i32 %42, i32* %40, align 8
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %15, i8 zeroext 0) #7
  %43 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %16, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %43, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %15, %class.sk_sp.6* nonnull %16) #7
  %44 = load %class.SkShader*, %class.SkShader** %43, align 8
  %45 = icmp eq %class.SkShader* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %class.SkShader, %class.SkShader* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkShader* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkShader* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #7
  br label %56

56:                                               ; preds = %38, %46, %50
  %57 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %17, i64 0, i32 0
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %57, align 8
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %15, %class.sk_sp.8* nonnull %17) #7
  %58 = load %class.SkMaskFilter*, %class.SkMaskFilter** %57, align 8
  %59 = icmp eq %class.SkMaskFilter* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkMaskFilter* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkMaskFilter* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #7
  br label %70

70:                                               ; preds = %56, %60, %64
  %71 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %18, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %71) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 288, i1 false)
  %72 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %18, i64 0, i32 0, i32 0, i64 256
  %73 = bitcast i8* %72 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %73, i8* nonnull %71, i64 256, i64 256) #7
  %74 = bitcast %class.SkRasterPipeline* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #7
  %75 = bitcast %class.SkRasterPipeline* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 24, i1 false)
  call void @_ZN16SkRasterPipelineC1EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %19, %class.SkArenaAlloc* %73) #7
  %76 = bitcast %struct.SkStageRec* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %76) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false)
  %77 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 0
  store %class.SkRasterPipeline* %19, %class.SkRasterPipeline** %77, align 8
  %78 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 1
  %79 = bitcast %class.SkArenaAlloc** %78 to i8**
  store i8* %72, i8** %79, align 8
  %80 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 2
  %81 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %82 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  store i32 %83, i32* %80, align 8
  %84 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 3
  %85 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %86 = bitcast %class.SkColorSpace** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.SkColorSpace** %84 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 4
  store %class.SkPaint* %15, %class.SkPaint** %89, align 8
  %90 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 5
  store %class.SkMatrix* null, %class.SkMatrix** %90, align 8
  %91 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %20, i64 0, i32 6
  %92 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %93 = bitcast %class.SkMatrixProvider** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %class.SkMatrixProvider** %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = bitcast %class.sk_sp.6* %14 to %class.SkShaderBase**
  %97 = load %class.SkShaderBase*, %class.SkShaderBase** %96, align 8
  %98 = bitcast %class.SkShaderBase* %97 to %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)***
  %99 = load %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)**, %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)*** %98, align 8
  %100 = getelementptr inbounds %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)*, %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)** %99, i64 17
  %101 = load %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)*, %class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)** %100, align 8
  %102 = call %class.SkStageUpdater* %101(%class.SkShaderBase* %97, %struct.SkStageRec* nonnull dereferenceable(56) %20) #7
  %103 = icmp eq %class.SkStageUpdater* %102, null
  br i1 %103, label %104, label %335

104:                                              ; preds = %70
  %105 = bitcast %class.SkDraw* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %105) #7
  %106 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1, i32 2
  %107 = bitcast %struct.SkImageInfo* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 48, i1 false)
  %108 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1
  %110 = bitcast %class.SkPixmap* %109 to i8*
  %111 = bitcast %class.SkPixmap* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #7
  %112 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %113 = load %class.SkColorSpace*, %class.SkColorSpace** %85, align 8
  %114 = icmp eq %class.SkColorSpace* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %104
  %116 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 1 monotonic
  br label %118

118:                                              ; preds = %104, %115
  store %class.SkColorSpace* %113, %class.SkColorSpace** %112, align 8
  %119 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1, i32 2, i32 0, i32 1
  %120 = bitcast i32* %82 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8
  %122 = bitcast i32* %119 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %122, align 8
  %123 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 2
  %124 = bitcast %class.SkMatrixProvider** %123 to i8*
  %125 = bitcast %class.SkMatrixProvider** %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false) #7
  %126 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %22, i64 0, i32 0
  %127 = load %class.SkShader*, %class.SkShader** %35, align 8
  %128 = icmp eq %class.SkShader* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %class.SkShader, %class.SkShader* %127, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 1 monotonic
  br label %132

132:                                              ; preds = %118, %129
  store %class.SkShader* %127, %class.SkShader** %126, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %15, %class.sk_sp.6* nonnull %22) #7
  %133 = load %class.SkShader*, %class.SkShader** %126, align 8
  %134 = icmp eq %class.SkShader* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %class.SkShader, %class.SkShader* %133, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = bitcast %class.SkShader* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkShader* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8
  call void %144(%class.SkRefCntBase* nonnull %140) #7
  br label %145

145:                                              ; preds = %132, %135, %139
  %146 = icmp sgt i32 %5, 0
  br i1 %146, label %147, label %242

147:                                              ; preds = %145
  %148 = icmp eq i32* %4, null
  %149 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %25, i64 0, i32 0
  %150 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %23, i64 0, i32 0
  %151 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %24, i64 0, i32 0
  %152 = bitcast %class.SkMatrix* %26 to i8*
  %153 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 1
  %154 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 1
  %155 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 2
  %156 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 3
  %157 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 4
  %158 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 5
  %159 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 6
  %160 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 7
  %161 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 8
  %162 = bitcast %class.SkPreConcatMatrixProvider* %27 to i8*
  %163 = bitcast %class.SkM44* %10 to i8*
  %164 = bitcast %class.SkM44* %11 to i8*
  %165 = bitcast %class.SkMatrix* %26 to i32*
  %166 = bitcast float* %154 to i32*
  %167 = bitcast float* %155 to i32*
  %168 = bitcast float* %156 to i32*
  %169 = bitcast float* %157 to i32*
  %170 = bitcast float* %158 to i32*
  %171 = bitcast float* %159 to i32*
  %172 = bitcast float* %160 to i32*
  %173 = bitcast float* %161 to i32*
  %174 = bitcast %class.SkM44* %11 to i32*
  %175 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 1
  %176 = bitcast float* %175 to i32*
  %177 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 2
  %178 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 3
  %179 = bitcast float* %178 to i32*
  %180 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 4
  %181 = bitcast float* %180 to i32*
  %182 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 5
  %183 = bitcast float* %182 to i32*
  %184 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 6
  %185 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 7
  %186 = bitcast float* %185 to i32*
  %187 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 8
  %188 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 12
  %189 = bitcast float* %188 to i32*
  %190 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 13
  %191 = bitcast float* %190 to i32*
  %192 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 14
  %193 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 15
  %194 = bitcast float* %193 to i32*
  %195 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 0
  %196 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 1
  %197 = bitcast %class.SkM44* %196 to i8*
  %198 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2
  %199 = bitcast %class.SkM44* %10 to i32*
  %200 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 4
  %201 = bitcast float* %200 to i32*
  %202 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 12
  %203 = bitcast float* %202 to i32*
  %204 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 1
  %205 = bitcast float* %204 to i32*
  %206 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 5
  %207 = bitcast float* %206 to i32*
  %208 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 13
  %209 = bitcast float* %208 to i32*
  %210 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 3
  %211 = bitcast float* %210 to i32*
  %212 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 7
  %213 = bitcast float* %212 to i32*
  %214 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 15
  %215 = bitcast float* %214 to i32*
  %216 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 1
  %217 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 1
  %218 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 2
  %219 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 3
  %220 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 4
  %221 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 5
  %222 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 6
  %223 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 7
  %224 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0, i32 2, i32 0, i64 8
  %225 = bitcast %class.SkMatrix* %198 to i32*
  %226 = bitcast float* %217 to i32*
  %227 = bitcast float* %218 to i32*
  %228 = bitcast float* %219 to i32*
  %229 = bitcast float* %220 to i32*
  %230 = bitcast float* %221 to i32*
  %231 = bitcast float* %222 to i32*
  %232 = bitcast float* %223 to i32*
  %233 = bitcast float* %224 to i32*
  %234 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 1
  %235 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 2
  %236 = bitcast %class.SkMatrix* %235 to i8*
  %237 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %27, i64 0, i32 0
  %238 = zext i32 %5 to i64
  %239 = bitcast %class.SkMatrix* %26 to <4 x float>*
  %240 = bitcast float* %157 to <4 x float>*
  %241 = bitcast float* %187 to <4 x float>*
  br label %252

242:                                              ; preds = %301, %145
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %243 = load %class.SkColorSpace*, %class.SkColorSpace** %112, align 8
  %244 = icmp eq %class.SkColorSpace* %243, null
  br i1 %244, label %251, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = atomicrmw add i32* %246, i32 -1 acq_rel
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %251

249:                                              ; preds = %245
  %250 = bitcast %class.SkColorSpace* %243 to i8*
  call void @_ZdlPv(i8* %250) #8
  br label %251

251:                                              ; preds = %242, %245, %249
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %105) #7
  br label %554

252:                                              ; preds = %301, %147
  %253 = phi i64 [ 0, %147 ], [ %333, %301 ]
  br i1 %148, label %301, label %254

254:                                              ; preds = %252
  %255 = getelementptr inbounds i32, i32* %4, i64 %253
  %256 = load i32, i32* %255, align 4
  call void @_ZN9SkShaders5ColorEj(%class.sk_sp.6* nonnull sret %24, i32 %256) #7
  %257 = load %class.SkShader*, %class.SkShader** %35, align 8
  %258 = icmp eq %class.SkShader* %257, null
  br i1 %258, label %262, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %class.SkShader, %class.SkShader* %257, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = atomicrmw add i32* %260, i32 1 monotonic
  br label %262

262:                                              ; preds = %254, %259
  store %class.SkShader* %257, %class.SkShader** %149, align 8
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.6* nonnull sret %23, i32 %6, %class.sk_sp.6* nonnull %24, %class.sk_sp.6* nonnull %25) #7
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %15, %class.sk_sp.6* nonnull %23) #7
  %263 = load %class.SkShader*, %class.SkShader** %150, align 8
  %264 = icmp eq %class.SkShader* %263, null
  br i1 %264, label %275, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %class.SkShader, %class.SkShader* %263, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = atomicrmw add i32* %266, i32 -1 acq_rel
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %269, label %275

269:                                              ; preds = %265
  %270 = bitcast %class.SkShader* %263 to %class.SkRefCntBase*
  %271 = bitcast %class.SkShader* %263 to void (%class.SkRefCntBase*)***
  %272 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %271, align 8
  %273 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %272, i64 2
  %274 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %273, align 8
  call void %274(%class.SkRefCntBase* nonnull %270) #7
  br label %275

275:                                              ; preds = %262, %265, %269
  %276 = load %class.SkShader*, %class.SkShader** %149, align 8
  %277 = icmp eq %class.SkShader* %276, null
  br i1 %277, label %288, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %class.SkShader, %class.SkShader* %276, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = atomicrmw add i32* %279, i32 -1 acq_rel
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %282, label %288

282:                                              ; preds = %278
  %283 = bitcast %class.SkShader* %276 to %class.SkRefCntBase*
  %284 = bitcast %class.SkShader* %276 to void (%class.SkRefCntBase*)***
  %285 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %284, align 8
  %286 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %285, i64 2
  %287 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %286, align 8
  call void %287(%class.SkRefCntBase* nonnull %283) #7
  br label %288

288:                                              ; preds = %275, %278, %282
  %289 = load %class.SkShader*, %class.SkShader** %151, align 8
  %290 = icmp eq %class.SkShader* %289, null
  br i1 %290, label %301, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %class.SkShader, %class.SkShader* %289, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = atomicrmw add i32* %292, i32 -1 acq_rel
  %294 = icmp eq i32 %293, 1
  br i1 %294, label %295, label %301

295:                                              ; preds = %291
  %296 = bitcast %class.SkShader* %289 to %class.SkRefCntBase*
  %297 = bitcast %class.SkShader* %289 to void (%class.SkRefCntBase*)***
  %298 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %297, align 8
  %299 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %298, i64 2
  %300 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %299, align 8
  call void %300(%class.SkRefCntBase* nonnull %296) #7
  br label %301

301:                                              ; preds = %295, %291, %288, %252
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #7
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %239, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %240, align 16
  store float 1.000000e+00, float* %161, align 16
  store i32 16, i32* %153, align 4
  %302 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %253
  %303 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %26, %struct.SkRSXform* dereferenceable(16) %302) #7
  %304 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %253
  %305 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %304, i64 0, i32 0
  %306 = load float, float* %305, align 4
  %307 = fsub float -0.000000e+00, %306
  %308 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %253, i32 1
  %309 = load float, float* %308, align 4
  %310 = fsub float -0.000000e+00, %309
  %311 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %26, float %307, float %310) #7
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %162) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %162, i8* align 8 bitcast (%class.SkPreConcatMatrixProvider* @__const._ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint.matrixProvider to i8*), i64 160, i1 false)
  %312 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %92, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %163) #7
  %313 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %312, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %164) #7
  %314 = load i32, i32* %165, align 16
  %315 = load i32, i32* %166, align 4
  %316 = load i32, i32* %167, align 8
  %317 = load i32, i32* %168, align 4
  %318 = load i32, i32* %169, align 16
  %319 = load i32, i32* %170, align 4
  %320 = load i32, i32* %171, align 8
  %321 = load i32, i32* %172, align 4
  %322 = load i32, i32* %173, align 16
  store i32 %314, i32* %174, align 4
  store i32 %317, i32* %176, align 4
  store float 0.000000e+00, float* %177, align 4
  store i32 %320, i32* %179, align 4
  store i32 %315, i32* %181, align 4
  store i32 %318, i32* %183, align 4
  store float 0.000000e+00, float* %184, align 4
  store i32 %321, i32* %186, align 4
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %241, align 4
  store i32 %316, i32* %189, align 4
  store i32 %319, i32* %191, align 4
  store float 0.000000e+00, float* %192, align 4
  store i32 %322, i32* %194, align 4
  %323 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %10, %class.SkM44* dereferenceable(64) %313, %class.SkM44* nonnull dereferenceable(64) %11) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* nonnull align 4 %163, i64 64, i1 false) #7
  %324 = load i32, i32* %199, align 4, !noalias !2
  %325 = load i32, i32* %201, align 4, !noalias !2
  %326 = load i32, i32* %203, align 4, !noalias !2
  %327 = load i32, i32* %205, align 4, !noalias !2
  %328 = load i32, i32* %207, align 4, !noalias !2
  %329 = load i32, i32* %209, align 4, !noalias !2
  %330 = load i32, i32* %211, align 4, !noalias !2
  %331 = load i32, i32* %213, align 4, !noalias !2
  %332 = load i32, i32* %215, align 4, !noalias !2
  store i32 %324, i32* %225, align 8, !alias.scope !5
  store i32 %325, i32* %226, align 4, !alias.scope !5
  store i32 %326, i32* %227, align 8, !alias.scope !5
  store i32 %327, i32* %228, align 4, !alias.scope !5
  store i32 %328, i32* %229, align 8, !alias.scope !5
  store i32 %329, i32* %230, align 4, !alias.scope !5
  store i32 %330, i32* %231, align 8, !alias.scope !5
  store i32 %331, i32* %232, align 4, !alias.scope !5
  store i32 %332, i32* %233, align 8, !alias.scope !5
  store i32 128, i32* %216, align 4, !alias.scope !5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %164) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %163) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  store %class.SkMatrixProvider* %312, %class.SkMatrixProvider** %234, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* nonnull align 16 %152, i64 40, i1 false) #7
  store %class.SkMatrixProvider* %237, %class.SkMatrixProvider** %123, align 8
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* nonnull %21, %struct.SkRect* dereferenceable(16) %304, %class.SkPaint* nonnull dereferenceable(72) %15, %class.SkMatrix* null, %struct.SkRect* null) #7
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %162) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %152) #7
  %333 = add nuw nsw i64 %253, 1
  %334 = icmp eq i64 %333, %238
  br i1 %334, label %242, label %252

335:                                              ; preds = %70
  %336 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %28, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %336) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %336, i8* align 4 getelementptr inbounds ({ %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }, { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }* @__const._ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint.steps, i64 0, i32 0, i32 0), i64 100, i1 false)
  %337 = call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #7
  %338 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %28, %class.SkColorSpace* %337, i32 3, %class.SkColorSpace* %338, i32 3) #7
  %339 = icmp ne i32* %4, null
  br i1 %339, label %340, label %366

340:                                              ; preds = %335
  %341 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %18, i64 0, i32 0, i32 0, i64 264
  %342 = bitcast i8* %341 to i8**
  %343 = bitcast i8* %341 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = sub i64 0, %344
  %346 = and i64 %345, 3
  %347 = or i64 %346, 24
  %348 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %18, i64 0, i32 0, i32 0, i64 272
  %349 = bitcast i8* %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = sub i64 %350, %344
  %352 = icmp ugt i64 %347, %351
  br i1 %352, label %353, label %357

353:                                              ; preds = %340
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %73, i32 24, i32 4) #7
  %354 = load i64, i64* %343, align 8
  %355 = sub i64 0, %354
  %356 = and i64 %355, 3
  br label %357

357:                                              ; preds = %353, %340
  %358 = phi i64 [ %354, %353 ], [ %344, %340 ]
  %359 = phi i64 [ %356, %353 ], [ %346, %340 ]
  %360 = inttoptr i64 %358 to i8*
  %361 = getelementptr inbounds i8, i8* %360, i64 %359
  %362 = getelementptr inbounds i8, i8* %361, i64 24
  store i8* %362, i8** %342, align 8
  %363 = bitcast i8* %361 to %struct.SkRasterPipeline_UniformColorCtx*
  call void @llvm.memset.p0i8.i64(i8* align 4 %361, i8 0, i64 24, i1 false) #7
  %364 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %77, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %364, i32 20, i8* %361) #7
  %365 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %77, align 8
  call void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32 %6, %class.SkRasterPipeline* %365) #7
  br label %373

366:                                              ; preds = %335
  %367 = load %class.SkShader*, %class.SkShader** %35, align 8
  %368 = bitcast %class.SkShader* %367 to i1 (%class.SkShader*)***
  %369 = load i1 (%class.SkShader*)**, i1 (%class.SkShader*)*** %368, align 8
  %370 = getelementptr inbounds i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %369, i64 7
  %371 = load i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %370, align 8
  %372 = call zeroext i1 %371(%class.SkShader* %367) #7
  br label %373

373:                                              ; preds = %357, %366
  %374 = phi %struct.SkRasterPipeline_UniformColorCtx* [ null, %366 ], [ %363, %357 ]
  %375 = phi i1 [ %372, %366 ], [ false, %357 ]
  %376 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %15, i64 0, i32 5, i32 3
  %377 = load float, float* %376, align 4
  %378 = fcmp une float %377, 1.000000e+00
  br i1 %378, label %379, label %404

379:                                              ; preds = %373
  %380 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %77, align 8
  %381 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %18, i64 0, i32 0, i32 0, i64 264
  %382 = bitcast i8* %381 to i8**
  %383 = bitcast i8* %381 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = sub i64 0, %384
  %386 = and i64 %385, 3
  %387 = or i64 %386, 4
  %388 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %18, i64 0, i32 0, i32 0, i64 272
  %389 = bitcast i8* %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = sub i64 %390, %384
  %392 = icmp ugt i64 %387, %391
  br i1 %392, label %393, label %397

393:                                              ; preds = %379
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %73, i32 4, i32 4) #7
  %394 = load i64, i64* %383, align 8
  %395 = sub i64 0, %394
  %396 = and i64 %395, 3
  br label %397

397:                                              ; preds = %379, %393
  %398 = phi i64 [ %394, %393 ], [ %384, %379 ]
  %399 = phi i64 [ %396, %393 ], [ %386, %379 ]
  %400 = inttoptr i64 %398 to i8*
  %401 = getelementptr inbounds i8, i8* %400, i64 %399
  %402 = getelementptr inbounds i8, i8* %401, i64 4
  store i8* %402, i8** %382, align 8
  %403 = bitcast i8* %401 to float*
  store float %377, float* %403, align 4
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %380, i32 91, i8* %401) #7
  br label %404

404:                                              ; preds = %397, %373
  %405 = phi i1 [ false, %397 ], [ %375, %373 ]
  %406 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %407 = load %class.SkRasterClip*, %class.SkRasterClip** %406, align 8
  %408 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %29, i64 0, i32 0
  %409 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %407, i64 0, i32 6, i32 0
  %410 = load %class.SkShader*, %class.SkShader** %409, align 8, !noalias !8
  %411 = icmp eq %class.SkShader* %410, null
  br i1 %411, label %415, label %412

412:                                              ; preds = %404
  %413 = getelementptr inbounds %class.SkShader, %class.SkShader* %410, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = atomicrmw add i32* %413, i32 1 monotonic, !noalias !8
  br label %415

415:                                              ; preds = %404, %412
  store %class.SkShader* %410, %class.SkShader** %408, align 8, !alias.scope !8
  %416 = call %class.SkBlitter* @_Z29SkCreateRasterPipelineBlitterRK8SkPixmapRK7SkPaintRK16SkRasterPipelinebP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %81, %class.SkPaint* nonnull dereferenceable(72) %15, %class.SkRasterPipeline* nonnull dereferenceable(24) %19, i1 zeroext %405, %class.SkArenaAlloc* %73, %class.sk_sp.6* nonnull %29) #7
  %417 = load %class.SkShader*, %class.SkShader** %408, align 8
  %418 = icmp eq %class.SkShader* %417, null
  br i1 %418, label %429, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds %class.SkShader, %class.SkShader* %417, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = atomicrmw add i32* %420, i32 -1 acq_rel
  %422 = icmp eq i32 %421, 1
  br i1 %422, label %423, label %429

423:                                              ; preds = %419
  %424 = bitcast %class.SkShader* %417 to %class.SkRefCntBase*
  %425 = bitcast %class.SkShader* %417 to void (%class.SkRefCntBase*)***
  %426 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %425, align 8
  %427 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %426, i64 2
  %428 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %427, align 8
  call void %428(%class.SkRefCntBase* nonnull %424) #7
  br label %429

429:                                              ; preds = %415, %419, %423
  %430 = icmp eq %class.SkBlitter* %416, null
  br i1 %430, label %553, label %431

431:                                              ; preds = %429
  %432 = bitcast %class.SkPath* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %432) #7
  %433 = bitcast %class.SkPath* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %433, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %30) #7
  %434 = icmp sgt i32 %5, 0
  br i1 %434, label %435, label %463

435:                                              ; preds = %431
  %436 = bitcast { <2 x float>, <2 x float> }* %31 to i8*
  %437 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %31, i64 0, i32 0, i64 0
  %438 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %32, i64 0, i32 1
  %439 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %31, i64 0, i32 1, i64 0
  %440 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %32, i64 0, i32 3
  %441 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %31, i64 0, i32 0
  %442 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %31, i64 0, i32 1
  %443 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 4, i64 0
  %444 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 0
  %445 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 4, i64 1
  %446 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 1
  %447 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 4, i64 2
  %448 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 2
  %449 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 4, i64 3
  %450 = getelementptr inbounds %struct.SkRasterPipeline_UniformColorCtx, %struct.SkRasterPipeline_UniformColorCtx* %374, i64 0, i32 3
  %451 = bitcast %class.SkMatrix* %33 to i8*
  %452 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %33, i64 0, i32 1
  %453 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %33, i64 0, i32 0, i64 4
  %454 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %33, i64 0, i32 0, i64 8
  %455 = bitcast %class.SkStageUpdater* %102 to i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)***
  %456 = bitcast %struct.SkRect* %12 to i8*
  %457 = bitcast [4 x %struct.SkPoint]* %13 to i8*
  %458 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0
  %459 = zext i32 %5 to i64
  %460 = bitcast { <2 x float>, <2 x float> }* %31 to i8*
  %461 = bitcast %class.SkMatrix* %33 to <4 x float>*
  %462 = bitcast float* %453 to <4 x float>*
  br label %464

463:                                              ; preds = %550, %431
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %432) #7
  br label %553

464:                                              ; preds = %550, %435
  %465 = phi i64 [ 0, %435 ], [ %551, %550 ]
  br i1 %339, label %466, label %515

466:                                              ; preds = %464
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %436) #7
  %467 = getelementptr inbounds i32, i32* %4, i64 %465
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 -1, i64 16, i1 false)
  %468 = load i32, i32* %467, align 4
  %469 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %468) #7
  %470 = extractvalue { <2 x float>, <2 x float> } %469, 0
  store <2 x float> %470, <2 x float>* %441, align 8
  %471 = extractvalue { <2 x float>, <2 x float> } %469, 1
  store <2 x float> %471, <2 x float>* %442, align 8
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %28, float* nonnull %437) #7
  %472 = load float, float* %437, align 8
  %473 = load float, float* %440, align 4
  %474 = fmul float %472, %473
  %475 = load float, float* %438, align 4
  %476 = fmul float %473, %475
  %477 = load float, float* %439, align 8
  %478 = fmul float %473, %477
  %479 = fmul float %474, 2.550000e+02
  %480 = fadd float %479, 5.000000e-01
  %481 = call float @llvm.floor.f32(float %480) #7
  %482 = fcmp olt float %481, 0x41DFFFFFE0000000
  %483 = select i1 %482, float %481, float 0x41DFFFFFE0000000
  %484 = fcmp ogt float %483, 0xC1DFFFFFE0000000
  %485 = select i1 %484, float %483, float 0xC1DFFFFFE0000000
  %486 = fptosi float %485 to i32
  %487 = trunc i32 %486 to i16
  store i16 %487, i16* %443, align 4
  store float %474, float* %444, align 4
  %488 = fmul float %476, 2.550000e+02
  %489 = fadd float %488, 5.000000e-01
  %490 = call float @llvm.floor.f32(float %489) #7
  %491 = fcmp olt float %490, 0x41DFFFFFE0000000
  %492 = select i1 %491, float %490, float 0x41DFFFFFE0000000
  %493 = fcmp ogt float %492, 0xC1DFFFFFE0000000
  %494 = select i1 %493, float %492, float 0xC1DFFFFFE0000000
  %495 = fptosi float %494 to i32
  %496 = trunc i32 %495 to i16
  store i16 %496, i16* %445, align 2
  store float %476, float* %446, align 4
  %497 = fmul float %478, 2.550000e+02
  %498 = fadd float %497, 5.000000e-01
  %499 = call float @llvm.floor.f32(float %498) #7
  %500 = fcmp olt float %499, 0x41DFFFFFE0000000
  %501 = select i1 %500, float %499, float 0x41DFFFFFE0000000
  %502 = fcmp ogt float %501, 0xC1DFFFFFE0000000
  %503 = select i1 %502, float %501, float 0xC1DFFFFFE0000000
  %504 = fptosi float %503 to i32
  %505 = trunc i32 %504 to i16
  store i16 %505, i16* %447, align 4
  store float %478, float* %448, align 4
  %506 = fmul float %473, 2.550000e+02
  %507 = fadd float %506, 5.000000e-01
  %508 = call float @llvm.floor.f32(float %507) #7
  %509 = fcmp olt float %508, 0x41DFFFFFE0000000
  %510 = select i1 %509, float %508, float 0x41DFFFFFE0000000
  %511 = fcmp ogt float %510, 0xC1DFFFFFE0000000
  %512 = select i1 %511, float %510, float 0xC1DFFFFFE0000000
  %513 = fptosi float %512 to i32
  %514 = trunc i32 %513 to i16
  store i16 %514, i16* %449, align 2
  store float %473, float* %450, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %436) #7
  br label %515

515:                                              ; preds = %466, %464
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %451) #7
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %461, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %462, align 16
  store float 1.000000e+00, float* %454, align 16
  store i32 16, i32* %452, align 4
  %516 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %465
  %517 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %33, %struct.SkRSXform* dereferenceable(16) %516) #7
  %518 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %465
  %519 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %518, i64 0, i32 0
  %520 = load float, float* %519, align 4
  %521 = fsub float -0.000000e+00, %520
  %522 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %465, i32 1
  %523 = load float, float* %522, align 4
  %524 = fsub float -0.000000e+00, %523
  %525 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %33, float %521, float %524) #7
  %526 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %92, align 8
  %527 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %526, i64 0, i32 2
  %528 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %33, %class.SkMatrix* dereferenceable(40) %527) #7
  %529 = load i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)**, i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)*** %455, align 8
  %530 = getelementptr inbounds i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)*, i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)** %529, i64 2
  %531 = load i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)*, i1 (%class.SkStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)** %530, align 8
  %532 = call zeroext i1 %531(%class.SkStageUpdater* nonnull %102, %class.SkMatrix* nonnull dereferenceable(40) %33, %class.SkMatrix* null) #7
  br i1 %532, label %533, label %550

533:                                              ; preds = %515
  %534 = load %class.SkRasterClip*, %class.SkRasterClip** %406, align 8
  %535 = load i32, i32* %452, align 4
  %536 = trunc i32 %535 to i8
  %537 = icmp slt i8 %536, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %533
  %539 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %33) #7
  %540 = zext i8 %539 to i32
  store i32 %540, i32* %452, align 4
  br label %541

541:                                              ; preds = %538, %533
  %542 = phi i32 [ %540, %538 ], [ %535, %533 ]
  %543 = and i32 %542, 16
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %547, label %545

545:                                              ; preds = %541
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %456) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %456, i8 -1, i64 16, i1 false) #7
  %546 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %33, %struct.SkRect* nonnull %12, %struct.SkRect* dereferenceable(16) %518, i32 1) #7
  call void @_ZN6SkScan8FillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %12, %class.SkRasterClip* dereferenceable(72) %534, %class.SkBlitter* nonnull %416) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %456) #7
  br label %550

547:                                              ; preds = %541
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %457) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %457, i8 -1, i64 32, i1 false) #7
  call void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect* %518, %struct.SkPoint* nonnull %458) #7
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %33, %struct.SkPoint* nonnull %458, %struct.SkPoint* nonnull %458, i32 4) #7
  %548 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* nonnull %30) #7
  %549 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* nonnull %30, %struct.SkPoint* nonnull %458, i32 4, i1 zeroext true) #7
  call void @_ZN6SkScan8FillPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* nonnull dereferenceable(16) %30, %class.SkRasterClip* dereferenceable(72) %534, %class.SkBlitter* nonnull %416) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %457) #7
  br label %550

550:                                              ; preds = %547, %545, %515
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %451) #7
  %551 = add nuw nsw i64 %465, 1
  %552 = icmp eq i64 %551, %459
  br i1 %552, label %463, label %464

553:                                              ; preds = %429, %463
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %336) #7
  br label %554

554:                                              ; preds = %251, %553
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %76) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #7
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %73) #7
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %71) #7
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #7
  %555 = load %class.SkShader*, %class.SkShader** %35, align 8
  %556 = icmp eq %class.SkShader* %555, null
  br i1 %556, label %567, label %557

557:                                              ; preds = %554
  %558 = getelementptr inbounds %class.SkShader, %class.SkShader* %555, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = atomicrmw add i32* %558, i32 -1 acq_rel
  %560 = icmp eq i32 %559, 1
  br i1 %560, label %561, label %567

561:                                              ; preds = %557
  %562 = bitcast %class.SkShader* %555 to %class.SkRefCntBase*
  %563 = bitcast %class.SkShader* %555 to void (%class.SkRefCntBase*)***
  %564 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %563, align 8
  %565 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %564, i64 2
  %566 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %565, align 8
  call void %566(%class.SkRefCntBase* nonnull %562) #7
  br label %567

567:                                              ; preds = %9, %554, %557, %561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.6*) local_unnamed_addr #2

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16SkRasterPipelineC1EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #2

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.6* sret, i32, %class.sk_sp.6*, %class.sk_sp.6*) local_unnamed_addr #2

declare void @_ZN9SkShaders5ColorEj(%class.sk_sp.6* sret, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix*, %struct.SkRSXform* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #2

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #2

declare void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32, %class.SkRasterPipeline*) local_unnamed_addr #2

declare %class.SkBlitter* @_Z29SkCreateRasterPipelineBlitterRK8SkPixmapRK7SkPaintRK16SkRasterPipelinebP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkRasterPipeline* dereferenceable(24), i1 zeroext, %class.SkArenaAlloc*, %class.sk_sp.6*) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.6* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkPreConcatMatrixProviderD0Ev(%class.SkPreConcatMatrixProvider*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.SkPreConcatMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #7
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = icmp eq %class.SkM44* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 2
  %15 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44* nonnull %2, %class.SkMatrix* dereferenceable(40) %14) #7
  br label %16

16:                                               ; preds = %3, %13, %11
  %17 = phi i1 [ true, %11 ], [ true, %13 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkPreConcatMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN6SkScan8FillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect*, %struct.SkPoint*) local_unnamed_addr #2

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN6SkScan8FillPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5SkM445asM33Ev: argument 0"}
!4 = distinct !{!4, !"_ZNK5SkM445asM33Ev"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!7 = distinct !{!7, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!10 = distinct !{!10, !"_ZNK12SkRasterClip10clipShaderEv"}
