; ModuleID = '../../third_party/blink/renderer/modules/service_worker/service_worker_event_queue.cc'
source_filename = "../../third_party/blink/renderer/modules/service_worker/service_worker_event_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.blink::ServiceWorkerEventQueue::StayAwakeToken" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.blink::ServiceWorkerEventQueue" = type { %class.scoped_refptr.6, %"class.WTF::HashMap", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.11", %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.base::TimeDelta", i8, %"class.std::__1::map", %"class.std::__1::map", i8, i32, i32, %"class.base::RepeatingTimer", %"class.base::TickClock"*, i32, %"class.base::WeakPtrFactory.20" }
%class.scoped_refptr.6 = type { %"class.base::SequencedTaskRunner"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ServiceWorkerEventQueue::EventInfo"* }
%"struct.blink::ServiceWorkerEventQueue::EventInfo" = type { %"class.base::TimeTicks", %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.11" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.11" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.6, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.20" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7" }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::ServiceWorkerEventQueue::Event" = type { i32, i32, %"class.base::OnceCallback.21", %"class.base::OnceCallback.22", %"class.absl::optional" }
%"class.base::OnceCallback.21" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.22" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.39 }
%union.anon.39 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::OnceCallback.36" = type { %"class.base::internal::CallbackBase" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.29" }
%"struct.std::__1::pair.29" = type { i32, %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.blink::ServiceWorkerEventQueue::Event"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE5eraseEPKSA_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

@_ZN5blink23ServiceWorkerEventQueue13kEventTimeoutE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 300000000 }, align 8
@_ZN5blink23ServiceWorkerEventQueue15kUpdateIntervalE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 10000000 }, align 8
@.str = private unnamed_addr constant [6 x i8] c"Start\00", align 1
@.str.1 = private unnamed_addr constant [86 x i8] c"../../third_party/blink/renderer/modules/service_worker/service_worker_event_queue.cc\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"ScheduleIdleCallback\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"next_event_id_ < std::numeric_limits<int>::max()\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [206 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, std::__1::unique_ptr<blink::ServiceWorkerEventQueue::EventInfo, std::__1::default_delete<blink::ServiceWorkerEventQueue::EventInfo> > >]\00", align 1

@_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenC1EN4base7WeakPtrIS0_EE = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.base::WeakPtr"*), void (%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.base::WeakPtr"*)* @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenC2EN4base7WeakPtrIS0_EE
@_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD1Ev = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*), void (%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*)* @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD2Ev
@_ZN5blink23ServiceWorkerEventQueueC1EN4base17RepeatingCallbackIFvbEEENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerEventQueue"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.11"*, %"class.base::SequencedTaskRunner"*), void (%"class.blink::ServiceWorkerEventQueue"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.11"*, %"class.base::SequencedTaskRunner"*)* @_ZN5blink23ServiceWorkerEventQueueC2EN4base17RepeatingCallbackIFvbEEENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEE
@_ZN5blink23ServiceWorkerEventQueueC1EN4base17RepeatingCallbackIFvbEEENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEPKNS1_9TickClockE = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerEventQueue"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.11"*, %"class.base::SequencedTaskRunner"*, %"class.base::TickClock"*), void (%"class.blink::ServiceWorkerEventQueue"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.11"*, %"class.base::SequencedTaskRunner"*, %"class.base::TickClock"*)* @_ZN5blink23ServiceWorkerEventQueueC2EN4base17RepeatingCallbackIFvbEEENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEPKNS1_9TickClockE
@_ZN5blink23ServiceWorkerEventQueueD1Ev = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerEventQueue"*), void (%"class.blink::ServiceWorkerEventQueue"*)* @_ZN5blink23ServiceWorkerEventQueueD2Ev
@_ZN5blink23ServiceWorkerEventQueue5EventC1EiNS1_4TypeEN4base12OnceCallbackIFviEEENS4_IFviNS_5mojom24ServiceWorkerEventStatusEEEEN4absl8optionalINS3_9TimeDeltaEEE = hidden unnamed_addr alias void (%"struct.blink::ServiceWorkerEventQueue::Event"*, i32, i32, %"class.base::OnceCallback.21"*, %"class.base::OnceCallback.22"*, %"class.absl::optional"*), void (%"struct.blink::ServiceWorkerEventQueue::Event"*, i32, i32, %"class.base::OnceCallback.21"*, %"class.base::OnceCallback.22"*, %"class.absl::optional"*)* @_ZN5blink23ServiceWorkerEventQueue5EventC2EiNS1_4TypeEN4base12OnceCallbackIFviEEENS4_IFviNS_5mojom24ServiceWorkerEventStatusEEEEN4absl8optionalINS3_9TimeDeltaEEE
@_ZN5blink23ServiceWorkerEventQueue5EventD1Ev = hidden unnamed_addr alias void (%"struct.blink::ServiceWorkerEventQueue::Event"*), void (%"struct.blink::ServiceWorkerEventQueue::Event"*)* @_ZN5blink23ServiceWorkerEventQueue5EventD2Ev
@_ZN5blink23ServiceWorkerEventQueue9EventInfoC1EN4base9TimeTicksENS2_12OnceCallbackIFvNS_5mojom24ServiceWorkerEventStatusEEEE = hidden unnamed_addr alias void (%"struct.blink::ServiceWorkerEventQueue::EventInfo"*, i64, %"class.base::OnceCallback"*), void (%"struct.blink::ServiceWorkerEventQueue::EventInfo"*, i64, %"class.base::OnceCallback"*)* @_ZN5blink23ServiceWorkerEventQueue9EventInfoC2EN4base9TimeTicksENS2_12OnceCallbackIFvNS_5mojom24ServiceWorkerEventStatusEEEE
@_ZN5blink23ServiceWorkerEventQueue9EventInfoD1Ev = hidden unnamed_addr alias void (%"struct.blink::ServiceWorkerEventQueue::EventInfo"*), void (%"struct.blink::ServiceWorkerEventQueue::EventInfo"*)* @_ZN5blink23ServiceWorkerEventQueue9EventInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenC2EN4base7WeakPtrIS0_EE(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue::StayAwakeToken", %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %5, %"class.base::internal::WeakReference"* dereferenceable(8) %6) #10
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue::StayAwakeToken", %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %14

14:                                               ; preds = %11, %2
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %15, label %16, label %19

16:                                               ; preds = %14
  %17 = bitcast i64* %7 to %"class.blink::ServiceWorkerEventQueue"**
  %18 = load %"class.blink::ServiceWorkerEventQueue"*, %"class.blink::ServiceWorkerEventQueue"** %17, align 8
  br label %19

19:                                               ; preds = %14, %16
  %20 = phi %"class.blink::ServiceWorkerEventQueue"* [ %18, %16 ], [ null, %14 ]
  %21 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %20, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %20, i64 0, i32 4
  call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %22) #10
  %23 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %20, i64 0, i32 7
  store i8 0, i8* %23, align 8
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %28

28:                                               ; preds = %25, %19
  %29 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = bitcast i64* %7 to %"class.blink::ServiceWorkerEventQueue"**
  %32 = load %"class.blink::ServiceWorkerEventQueue"*, %"class.blink::ServiceWorkerEventQueue"** %31, align 8
  br label %33

33:                                               ; preds = %28, %30
  %34 = phi %"class.blink::ServiceWorkerEventQueue"* [ %32, %30 ], [ null, %28 ]
  %35 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %34, i64 0, i32 12
  %36 = load i32, i32* %35, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue16ResetIdleTimeoutEv(%"class.blink::ServiceWorkerEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  tail call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %3) #10
  %4 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 7
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenD2Ev(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue::StayAwakeToken", %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %6, label %7, label %60

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue::StayAwakeToken", %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to %"class.blink::ServiceWorkerEventQueue"**
  %10 = load %"class.blink::ServiceWorkerEventQueue"*, %"class.blink::ServiceWorkerEventQueue"** %9, align 8
  %11 = icmp eq %"class.blink::ServiceWorkerEventQueue"* %10, null
  br i1 %11, label %60, label %12

12:                                               ; preds = %7
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %14, %12
  %18 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = load %"class.blink::ServiceWorkerEventQueue"*, %"class.blink::ServiceWorkerEventQueue"** %9, align 8
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi %"class.blink::ServiceWorkerEventQueue"* [ %20, %19 ], [ null, %17 ]
  %23 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %22, i64 0, i32 12
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %23, align 8
  %26 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %27, %21
  %31 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = load %"class.blink::ServiceWorkerEventQueue"*, %"class.blink::ServiceWorkerEventQueue"** %9, align 8
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi %"class.blink::ServiceWorkerEventQueue"* [ %33, %32 ], [ null, %30 ]
  %36 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %35, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %35, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  %41 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %35, i64 0, i32 1, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp eq i64 %40, %43
  br i1 %44, label %45, label %60

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %35, i64 0, i32 12
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %45
  %50 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %50, label %54, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %51, %49
  %55 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = load %"class.blink::ServiceWorkerEventQueue"*, %"class.blink::ServiceWorkerEventQueue"** %9, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.blink::ServiceWorkerEventQueue"* [ %57, %56 ], [ null, %54 ]
  call void @_ZN5blink23ServiceWorkerEventQueue17OnNoInflightEventEv(%"class.blink::ServiceWorkerEventQueue"* %59)
  br label %60

60:                                               ; preds = %7, %34, %1, %45, %58
  %61 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue::StayAwakeToken", %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %61) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ServiceWorkerEventQueue16HasInflightEventEv(%"class.blink::ServiceWorkerEventQueue"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %3
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = icmp eq i64 %6, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br label %15

15:                                               ; preds = %1, %11
  %16 = phi i1 [ true, %1 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue17OnNoInflightEventEv(%"class.blink::ServiceWorkerEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::TaskHandle", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.36", align 8
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9
  %11 = select i1 %9, %"class.std::__1::map"* %10, %"class.std::__1::map"* %6
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  tail call void @_ZN5blink23ServiceWorkerEventQueue13ProcessEventsEv(%"class.blink::ServiceWorkerEventQueue"* %0)
  br label %43

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 14
  %18 = load %"class.base::TickClock"*, %"class.base::TickClock"** %17, align 8
  %19 = bitcast %"class.base::TickClock"* %18 to i64 (%"class.base::TickClock"*)***
  %20 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, i64 2
  %22 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::TickClock"* %18) #10
  %24 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 6, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback.36"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.blink::TaskHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 0, i32 0
  %30 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %29, align 8
  %31 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0), i32 302) #10
  %32 = ptrtoint %"class.blink::ServiceWorkerEventQueue"* %0 to i64
  %33 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ServiceWorkerEventQueue"*)* @_ZN5blink23ServiceWorkerEventQueue19TriggerIdleCallbackEv to i64), i64 0>, <2 x i64>* %36, align 8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = bitcast i8* %37 to i64*
  store i64 %32, i64* %38, align 8, !noalias !2
  %39 = bitcast %"class.base::OnceCallback.36"* %4 to i8**
  store i8* %33, i8** %39, align 8, !alias.scope !2
  call void @_ZN5blink26PostDelayedCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEENS0_9TimeDeltaE(%"class.blink::TaskHandle"* nonnull sret %2, %"class.base::SequencedTaskRunner"* dereferenceable(16) %30, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.36"* nonnull %4, i64 %26) #10
  %40 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  %41 = call dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* %40, %"class.blink::TaskHandle"* nonnull dereferenceable(8) %2) #10
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* nonnull %2) #10
  %42 = getelementptr inbounds %"class.base::OnceCallback.36", %"class.base::OnceCallback.36"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  br label %43

43:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueueC2EN4base17RepeatingCallbackIFvbEEENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEE(%"class.blink::ServiceWorkerEventQueue"*, %"class.base::RepeatingCallback"* nocapture, %"class.base::RepeatingCallback.11"* nocapture, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.base::RepeatingCallback.11", align 8
  %7 = ptrtoint %"class.base::SequencedTaskRunner"* %3 to i64
  %8 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.11", %"class.base::RepeatingCallback.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::RepeatingCallback.11"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %14 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %15 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %14, i64 0, i32 0
  %16 = bitcast %"class.blink::ServiceWorkerEventQueue"* %0 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1
  %18 = bitcast %"class.WTF::HashMap"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #10
  %19 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::RepeatingCallback"* %19 to i64*
  store i64 %10, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.base::RepeatingCallback.11", %"class.base::RepeatingCallback.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::RepeatingCallback.11"* %22 to i64*
  store i64 %13, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  tail call void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"* %25) #10
  %26 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 5, i32 0, i32 0
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 0, i64 30000000>, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 7
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_node_base"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_node_base"** %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 10
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 13
  tail call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* %40) #10
  %41 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 14
  store %"class.base::TickClock"* %15, %"class.base::TickClock"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 15
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 16, i32 0
  %44 = ptrtoint %"class.blink::ServiceWorkerEventQueue"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %43, i64 %44) #10
  %45 = getelementptr inbounds %"class.base::RepeatingCallback.11", %"class.base::RepeatingCallback.11"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #10
  %46 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #10
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueueC2EN4base17RepeatingCallbackIFvbEEENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEPKNS1_9TickClockE(%"class.blink::ServiceWorkerEventQueue"*, %"class.base::RepeatingCallback"* nocapture, %"class.base::RepeatingCallback.11"* nocapture, %"class.base::SequencedTaskRunner"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.base::SequencedTaskRunner"* %3 to i64
  %7 = bitcast %"class.blink::ServiceWorkerEventQueue"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::HashMap"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::RepeatingCallback"* %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.base::RepeatingCallback.11", %"class.base::RepeatingCallback.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::RepeatingCallback.11"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::RepeatingCallback.11"* %15 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  tail call void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"* %20) #10
  %21 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 0, i64 30000000>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 7
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_node_base"** %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %25, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node_base"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 10
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 13
  tail call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* %35) #10
  %36 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 14
  store %"class.base::TickClock"* %4, %"class.base::TickClock"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 15
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 16, i32 0
  %39 = ptrtoint %"class.blink::ServiceWorkerEventQueue"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %38, i64 %39) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"*) unnamed_addr #3

declare void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueueD2Ev(%"class.blink::ServiceWorkerEventQueue"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %30, label %12

12:                                               ; preds = %1
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %12, %20
  %15 = phi %"struct.WTF::KeyValuePair"* [ %21, %20 ], [ %7, %12 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %11
  br i1 %22, label %30, label %14

23:                                               ; preds = %14, %12
  %24 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %11
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %28 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %81

30:                                               ; preds = %20, %81, %104, %101, %1, %23
  %31 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 16, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %31) #10
  %32 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 13
  call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %32) #10
  %33 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0
  %34 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node"**
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %35, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %33, %"class.std::__1::__tree_node"* %36) #10
  %37 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0
  %38 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %39, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %37, %"class.std::__1::__tree_node"* %40) #10
  %41 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* %41) #10
  %42 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 3, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %42) #10
  %43 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %43) #10
  %44 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  br i1 %45, label %68, label %46, !prof !9

46:                                               ; preds = %30
  %47 = load i32, i32* %8, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %46
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %63, %49
  %52 = phi i64 [ 0, %49 ], [ %64, %63 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %52, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %63, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %52, i32 1, i32 0, i32 0, i32 0
  %58 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %57, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %57, align 8
  %59 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %58, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %61) #10
  %62 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %58 to i8*
  call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %60, %56, %51
  %64 = add nuw nsw i64 %52, 1
  %65 = icmp eq i64 %64, %50
  br i1 %65, label %66, label %51

66:                                               ; preds = %63, %46
  %67 = bitcast %"struct.WTF::KeyValuePair"* %44 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %68

68:                                               ; preds = %30, %66
  %69 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 0, i32 0
  %70 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %69, align 8
  %71 = icmp eq %"class.base::SequencedTaskRunner"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %70, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %73, i64 -2
  %79 = bitcast %"class.base::RefCountedThreadSafe.7"* %78 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %79) #10
  br label %80

80:                                               ; preds = %68, %72, %77
  ret void

81:                                               ; preds = %26, %104
  %82 = phi %"struct.WTF::KeyValuePair"* [ %24, %26 ], [ %96, %104 ]
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %84, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.base::OnceCallback"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %86, align 8
  %89 = inttoptr i64 %88 to %"class.base::internal::BindStateBase"*
  %90 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %89, i64 0, i32 1
  %91 = bitcast void ()** %90 to void (%"class.base::internal::BindStateBase"*, i32)**
  %92 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %91, align 8
  call void %92(%"class.base::internal::BindStateBase"* %89, i32 2) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 1
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %93, %11
  br i1 %94, label %30, label %95

95:                                               ; preds = %81, %101
  %96 = phi %"struct.WTF::KeyValuePair"* [ %102, %101 ], [ %93, %81 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, 1
  %100 = icmp ult i32 %99, 2
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 1
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %102, %11
  br i1 %103, label %30, label %95

104:                                              ; preds = %95
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %96, %11
  br i1 %105, label %30, label %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue5StartEv(%"class.blink::ServiceWorkerEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::RepeatingCallback.11", align 8
  %4 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  %9 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = icmp eq i64 %8, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  %19 = tail call zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"* %18) #10
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZN5blink23ServiceWorkerEventQueue17OnNoInflightEventEv(%"class.blink::ServiceWorkerEventQueue"* %0)
  br label %21

21:                                               ; preds = %1, %20, %17, %13
  %22 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 13
  %23 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0), i32 73) #10
  %24 = ptrtoint %"class.blink::ServiceWorkerEventQueue"* %0 to i64
  %25 = call i8* @_Znwm(i64 56) #11, !noalias !10
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !10
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ServiceWorkerEventQueue"*)* @_ZN5blink23ServiceWorkerEventQueue12UpdateStatusEv to i64), i64 0>, <2 x i64>* %28, align 8, !noalias !10
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to i64*
  store i64 %24, i64* %30, align 8, !noalias !10
  %31 = bitcast %"class.base::RepeatingCallback.11"* %3 to i8**
  store i8* %25, i8** %31, align 8, !alias.scope !10
  call void @_ZN4base14RepeatingTimer5StartERKNS_8LocationENS_9TimeDeltaENS_17RepeatingCallbackIFvvEEE(%"class.base::RepeatingTimer"* %22, %"class.base::Location"* nonnull dereferenceable(32) %2, i64 10000000, %"class.base::RepeatingCallback.11"* nonnull %3) #10
  %32 = getelementptr inbounds %"class.base::RepeatingCallback.11", %"class.base::RepeatingCallback.11"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ServiceWorkerEventQueue24HasScheduledIdleCallbackEv(%"class.blink::ServiceWorkerEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  %3 = tail call zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"* %2) #10
  ret i1 %3
}

declare void @_ZN4base14RepeatingTimer5StartERKNS_8LocationENS_9TimeDeltaENS_17RepeatingCallbackIFvvEEE(%"class.base::RepeatingTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::RepeatingCallback.11"*) unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue12UpdateStatusEv(%"class.blink::ServiceWorkerEventQueue"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::HashMap", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 14
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #10
  %12 = bitcast %"class.WTF::HashMap"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 3
  %17 = bitcast %"class.WTF::HashMap"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 20, i1 false) #10
  %18 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %18, i64 0, i32 0, i32 0
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %26
  %28 = ptrtoint %"struct.WTF::KeyValuePair"* %23 to i64
  br i1 %21, label %43, label %29

29:                                               ; preds = %1
  %30 = icmp eq i32 %25, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %29, %37
  %32 = phi %"struct.WTF::KeyValuePair"* [ %38, %37 ], [ %23, %29 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 1
  %36 = icmp ult i32 %35, 2
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %38, %27
  br i1 %39, label %43, label %31

40:                                               ; preds = %31, %29
  %41 = phi %"struct.WTF::KeyValuePair"* [ %23, %29 ], [ %32, %31 ]
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %27
  br i1 %42, label %43, label %46

43:                                               ; preds = %37, %1, %40
  %44 = bitcast %"class.WTF::HashMap"* %3 to i64*
  %45 = bitcast %"class.WTF::HashMap"* %18 to i64*
  br label %68

46:                                               ; preds = %40
  %47 = bitcast i32* %4 to i8*
  %48 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0
  %49 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0
  %52 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node"**
  %54 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %55 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %56 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %57 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  br label %90

58:                                               ; preds = %167, %180, %177
  %59 = bitcast %"class.WTF::HashMap"* %3 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.WTF::HashMap"* %18 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load i32, i32* %24, align 4
  %64 = load i32, i32* %14, align 8
  %65 = load i32, i32* %19, align 4
  %66 = load i32, i32* %15, align 4
  %67 = load i32, i32* %16, align 8
  br label %68

68:                                               ; preds = %43, %58
  %69 = phi i64* [ %45, %43 ], [ %61, %58 ]
  %70 = phi i64* [ %44, %43 ], [ %59, %58 ]
  %71 = phi i32 [ 0, %43 ], [ %67, %58 ]
  %72 = phi i32 [ 0, %43 ], [ %66, %58 ]
  %73 = phi i32 [ %20, %43 ], [ %65, %58 ]
  %74 = phi i32 [ 0, %43 ], [ %64, %58 ]
  %75 = phi i32 [ %25, %43 ], [ %63, %58 ]
  %76 = phi i64 [ %28, %43 ], [ %62, %58 ]
  %77 = phi i64 [ 0, %43 ], [ %60, %58 ]
  %78 = phi i8 [ 0, %43 ], [ %168, %58 ]
  store atomic i64 %76, i64* %70 monotonic, align 8
  store atomic i64 %77, i64* %69 monotonic, align 8
  store i32 %74, i32* %24, align 4
  store i32 %75, i32* %14, align 8
  store i32 %72, i32* %19, align 4
  store i32 %73, i32* %15, align 4
  %79 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 2147483647
  %82 = and i32 %71, 2147483647
  %83 = and i32 %80, -2147483648
  %84 = or i32 %82, %83
  store i32 %84, i32* %79, align 8
  %85 = and i32 %71, -2147483648
  %86 = or i32 %85, %81
  store i32 %86, i32* %16, align 8
  %87 = and i8 %78, 1
  %88 = icmp eq i8 %87, 0
  %89 = inttoptr i64 %76 to %"struct.WTF::KeyValuePair"*
  br i1 %88, label %197, label %182

90:                                               ; preds = %46, %180
  %91 = phi i8 [ 0, %46 ], [ %168, %180 ]
  %92 = phi %"struct.WTF::KeyValuePair"* [ %41, %46 ], [ %172, %180 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #10
  store i32 -1431655766, i32* %4, align 4
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 8
  store i32 %94, i32* %4, align 4
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %96, align 8
  %98 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp sgt i64 %99, %11
  br i1 %100, label %101, label %103

101:                                              ; preds = %90
  %102 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %57, i32* nonnull dereferenceable(4) %4, %"class.std::__1::unique_ptr"* dereferenceable(8) %95) #10
  br label %167

103:                                              ; preds = %90
  %104 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %50, align 8
  %105 = icmp eq %"class.std::__1::__tree_node"* %104, null
  br i1 %105, label %129, label %106

106:                                              ; preds = %103, %106
  %107 = phi %"class.std::__1::__tree_end_node"* [ %117, %106 ], [ %49, %103 ]
  %108 = phi %"class.std::__1::__tree_node"* [ %118, %106 ], [ %104, %103 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %108, i64 0, i32 1, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %110, %94
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %108, i64 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::__tree_node_base"** %112 to %"class.std::__1::__tree_node"**
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %108, i64 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::__tree_node"* %108 to %"class.std::__1::__tree_node"**
  %116 = select i1 %111, %"class.std::__1::__tree_node"** %113, %"class.std::__1::__tree_node"** %115
  %117 = select i1 %111, %"class.std::__1::__tree_end_node"* %107, %"class.std::__1::__tree_end_node"* %114
  %118 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %116, align 8
  %119 = icmp eq %"class.std::__1::__tree_node"* %118, null
  br i1 %119, label %120, label %106

120:                                              ; preds = %106
  %121 = icmp eq %"class.std::__1::__tree_end_node"* %117, %49
  br i1 %121, label %129, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 4
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %94, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %122
  %128 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %48, %"class.std::__1::__tree_end_node"* %117) #10
  br label %129

129:                                              ; preds = %103, %120, %122, %127
  %130 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %131 = icmp eq %"class.std::__1::__tree_node"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %129
  %133 = load i32, i32* %4, align 4
  br label %134

134:                                              ; preds = %134, %132
  %135 = phi %"class.std::__1::__tree_end_node"* [ %52, %132 ], [ %145, %134 ]
  %136 = phi %"class.std::__1::__tree_node"* [ %130, %132 ], [ %146, %134 ]
  %137 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %138, %133
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %136, i64 0, i32 0, i32 1
  %141 = bitcast %"class.std::__1::__tree_node_base"** %140 to %"class.std::__1::__tree_node"**
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %136, i64 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::__tree_node"* %136 to %"class.std::__1::__tree_node"**
  %144 = select i1 %139, %"class.std::__1::__tree_node"** %141, %"class.std::__1::__tree_node"** %143
  %145 = select i1 %139, %"class.std::__1::__tree_end_node"* %135, %"class.std::__1::__tree_end_node"* %142
  %146 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %144, align 8
  %147 = icmp eq %"class.std::__1::__tree_node"* %146, null
  br i1 %147, label %148, label %134

148:                                              ; preds = %134
  %149 = icmp eq %"class.std::__1::__tree_end_node"* %145, %52
  br i1 %149, label %157, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 4
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = icmp slt i32 %133, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %150
  %156 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %51, %"class.std::__1::__tree_end_node"* %145) #10
  br label %157

157:                                              ; preds = %129, %148, %150, %155
  %158 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %96, align 8
  %159 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %158, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %160 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.base::OnceCallback"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %55, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %160, align 8
  %163 = inttoptr i64 %162 to %"class.base::internal::BindStateBase"*
  %164 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %163, i64 0, i32 1
  %165 = bitcast void ()** %164 to void (%"class.base::internal::BindStateBase"*, i32)**
  %166 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %165, align 8
  call void %166(%"class.base::internal::BindStateBase"* %163, i32 3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %167

167:                                              ; preds = %157, %101
  %168 = phi i8 [ %91, %101 ], [ 1, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #10
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 1
  %170 = icmp eq %"struct.WTF::KeyValuePair"* %169, %27
  br i1 %170, label %58, label %171

171:                                              ; preds = %167, %177
  %172 = phi %"struct.WTF::KeyValuePair"* [ %178, %177 ], [ %169, %167 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %172, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = add i32 %174, 1
  %176 = icmp ult i32 %175, 2
  br i1 %176, label %177, label %180

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %172, i64 1
  %179 = icmp eq %"struct.WTF::KeyValuePair"* %178, %27
  br i1 %179, label %58, label %171

180:                                              ; preds = %171
  %181 = icmp eq %"struct.WTF::KeyValuePair"* %172, %27
  br i1 %181, label %58, label %90

182:                                              ; preds = %68
  %183 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %186, %184
  %188 = zext i32 %72 to i64
  %189 = icmp eq i64 %187, %188
  br i1 %189, label %190, label %195

190:                                              ; preds = %182
  %191 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  %192 = load i32, i32* %191, align 8
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %195, label %194

194:                                              ; preds = %190
  call void @_ZN5blink23ServiceWorkerEventQueue17OnNoInflightEventEv(%"class.blink::ServiceWorkerEventQueue"* %0)
  br label %195

195:                                              ; preds = %182, %194, %190
  call void @_ZN5blink23ServiceWorkerEventQueue12SetIdleDelayEN4base9TimeDeltaE(%"class.blink::ServiceWorkerEventQueue"* %0, i64 0)
  %196 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  br label %197

197:                                              ; preds = %68, %195
  %198 = phi %"struct.WTF::KeyValuePair"* [ %89, %68 ], [ %196, %195 ]
  %199 = icmp eq %"struct.WTF::KeyValuePair"* %198, null
  br i1 %199, label %222, label %200, !prof !9

200:                                              ; preds = %197
  %201 = load i32, i32* %14, align 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %220, label %203

203:                                              ; preds = %200
  %204 = zext i32 %201 to i64
  br label %205

205:                                              ; preds = %217, %203
  %206 = phi i64 [ 0, %203 ], [ %218, %217 ]
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %198, i64 %206, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, -1
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %198, i64 %206, i32 1, i32 0, i32 0, i32 0
  %212 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %211, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %211, align 8
  %213 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %212, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %215) #10
  %216 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %212 to i8*
  call void @_ZdlPv(i8* %216) #11
  br label %217

217:                                              ; preds = %214, %210, %205
  %218 = add nuw nsw i64 %206, 1
  %219 = icmp eq i64 %218, %204
  br i1 %219, label %220, label %205

220:                                              ; preds = %217, %200
  %221 = bitcast %"struct.WTF::KeyValuePair"* %198 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %221) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %13, align 8
  br label %222

222:                                              ; preds = %197, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue13EnqueueNormalEiN4base12OnceCallbackIFviEEENS2_IFviNS_5mojom24ServiceWorkerEventStatusEEEEN4absl8optionalINS1_9TimeDeltaEEE(%"class.blink::ServiceWorkerEventQueue"*, i32, %"class.base::OnceCallback.21"* nocapture, %"class.base::OnceCallback.22"* nocapture, i8, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback.21", align 8
  %8 = alloca %"class.base::OnceCallback.22", align 8
  %9 = bitcast %"class.base::OnceCallback.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = bitcast %"class.base::OnceCallback.22"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = tail call i8* @_Znwm(i64 40) #11
  %12 = bitcast i8* %11 to %"struct.blink::ServiceWorkerEventQueue::Event"*
  %13 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.21"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.22"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast i8* %11 to i32*
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %11, i64 8
  %23 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %22 to i64*
  store i64 %15, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 16
  %26 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %8, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast i8* %25 to i64*
  store i64 %18, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 24
  store i8 %4, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %11, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN5blink23ServiceWorkerEventQueue12EnqueueEventENSt3__110unique_ptrINS0_5EventENS1_14default_deleteIS3_EEEE(%"class.blink::ServiceWorkerEventQueue"* %0, %"struct.blink::ServiceWorkerEventQueue::Event"* nonnull %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue12EnqueueEventENSt3__110unique_ptrINS0_5EventENS1_14default_deleteIS3_EEEE(%"class.blink::ServiceWorkerEventQueue"*, %"struct.blink::ServiceWorkerEventQueue::Event"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = ptrtoint %"struct.blink::ServiceWorkerEventQueue::Event"* %1 to i64
  %9 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 8, !range !17
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 1
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi i1 [ false, %2 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 14
  %21 = load %"class.base::TickClock"*, %"class.base::TickClock"** %20, align 8
  %22 = bitcast %"class.base::TickClock"* %21 to i64 (%"class.base::TickClock"*)***
  %23 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %23, i64 2
  %25 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %24, align 8
  %26 = tail call i64 %25(%"class.base::TickClock"* %21) #10
  %27 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !17
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = select i1 %29, %"class.base::TimeDelta"* @_ZN5blink23ServiceWorkerEventQueue13kEventTimeoutE, %"class.base::TimeDelta"* %30
  %32 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %31, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, -9223372036854775807
  %35 = icmp ult i64 %34, 2
  br i1 %35, label %43, label %36

36:                                               ; preds = %16
  %37 = icmp slt i64 %33, 0
  %38 = select i1 %37, i64 -9223372036854775808, i64 9223372036854775807
  %39 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %26, i64 %33) #10
  %40 = extractvalue { i64, i1 } %39, 1
  %41 = extractvalue { i64, i1 } %39, 0
  %42 = select i1 %40, i64 %38, i64 %41, !prof !18
  br label %51

43:                                               ; preds = %16
  %44 = add i64 %26, -9223372036854775807
  %45 = icmp ugt i64 %44, 1
  %46 = icmp eq i64 %26, %33
  %47 = or i1 %45, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #10
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  br label %51

51:                                               ; preds = %36, %43, %48
  %52 = phi i64 [ %42, %36 ], [ %33, %43 ], [ %33, %48 ]
  %53 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 3
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %55, align 8, !alias.scope !19
  %56 = call i8* @_Znwm(i64 48) #11, !noalias !22
  %57 = bitcast i8* %56 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %57, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !22
  %58 = getelementptr inbounds i8, i8* %56, i64 32
  %59 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %54, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.base::OnceCallback.22"* %54 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !22
  %62 = bitcast i8* %58 to i64*
  store i64 %61, i64* %62, align 8, !noalias !22
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8, !noalias !22
  %63 = getelementptr inbounds i8, i8* %56, i64 40
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %18, align 4, !noalias !22
  store i32 %65, i32* %64, align 4, !noalias !22
  %66 = icmp eq i64 %61, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %51
  %68 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10, !noalias !22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)) #10, !noalias !22
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10, !noalias !22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10, !noalias !22
  br label %70

70:                                               ; preds = %51, %67
  %71 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71)
  %72 = call i8* @_Znwm(i64 16) #11
  %73 = ptrtoint i8* %56 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %74 = bitcast i8* %72 to i64*
  store i64 %52, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %72, i64 8
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast i8* %75 to i64*
  store i64 %73, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %76, align 8
  %78 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71)
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %72, i8** %80, align 8
  %81 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0
  %82 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %81, i32* dereferenceable(4) %18, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #10
  %83 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %79, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %79, align 8
  %84 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %83, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %86) #10
  %87 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %83 to i8*
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %70, %85
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %90 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 2
  %93 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9
  %94 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8
  %95 = select i1 %92, %"class.std::__1::map"* %93, %"class.std::__1::map"* %94
  %96 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 1, i32 0, i32 0
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.std::__1::__tree_node"**
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %129, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = load i32, i32* %18, align 4
  br label %103

103:                                              ; preds = %125, %100
  %104 = phi %"class.std::__1::__tree_node"* [ %128, %125 ], [ %98, %100 ]
  %105 = phi %"class.std::__1::__tree_node_base"** [ %127, %125 ], [ %101, %100 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 1, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %102, %107
  br i1 %108, label %109, label %115

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %125

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0
  br label %131

115:                                              ; preds = %103
  %116 = icmp slt i32 %107, %102
  br i1 %116, label %117, label %123

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 1
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0
  br label %131

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0
  br label %131

125:                                              ; preds = %117, %109
  %126 = phi %"class.std::__1::__tree_node_base"* [ %111, %109 ], [ %119, %117 ]
  %127 = phi %"class.std::__1::__tree_node_base"** [ %110, %109 ], [ %118, %117 ]
  %128 = bitcast %"class.std::__1::__tree_node_base"* %126 to %"class.std::__1::__tree_node"*
  br label %103

129:                                              ; preds = %88
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  br label %131

131:                                              ; preds = %129, %123, %121, %113
  %132 = phi %"class.std::__1::__tree_end_node"* [ %96, %129 ], [ %114, %113 ], [ %122, %121 ], [ %124, %123 ]
  %133 = phi %"class.std::__1::__tree_node_base"** [ %130, %129 ], [ %110, %113 ], [ %118, %121 ], [ %105, %123 ]
  %134 = bitcast %"class.std::__1::__tree_node_base"** %133 to %"class.std::__1::__tree_node"**
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node"* %135, null
  br i1 %136, label %137, label %164

137:                                              ; preds = %131
  %138 = call i8* @_Znwm(i64 48) #11, !noalias !27
  %139 = getelementptr inbounds i8, i8* %138, i64 32
  %140 = bitcast i8* %139 to i32*
  %141 = load i32, i32* %18, align 4, !noalias !27
  store i32 %141, i32* %140, align 8, !noalias !27
  %142 = getelementptr inbounds i8, i8* %138, i64 40
  %143 = bitcast i8* %142 to i64*
  store i64 %8, i64* %143, align 8, !noalias !27
  %144 = bitcast i8* %138 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds i8, i8* %138, i64 16
  %146 = bitcast i8* %145 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %132, %"class.std::__1::__tree_end_node"** %146, align 8
  %147 = bitcast %"class.std::__1::__tree_node_base"** %133 to i8**
  store i8* %138, i8** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %137
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %151 to i64
  %155 = bitcast %"class.std::__1::map"* %95 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  br label %157

157:                                              ; preds = %153, %137
  %158 = phi %"class.std::__1::__tree_node_base"* [ %144, %137 ], [ %156, %153 ]
  %159 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %160, %"class.std::__1::__tree_node_base"* %158) #10
  %161 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 2, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %161, align 8
  br label %164

164:                                              ; preds = %131, %157
  %165 = phi i64 [ 0, %157 ], [ %8, %131 ]
  br i1 %17, label %166, label %170

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %167, align 8
  %168 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %168) #10
  %169 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 7
  store i8 0, i8* %169, align 8
  call void @_ZN5blink23ServiceWorkerEventQueue13ProcessEventsEv(%"class.blink::ServiceWorkerEventQueue"* %0)
  br label %170

170:                                              ; preds = %164, %166
  %171 = inttoptr i64 %165 to %"struct.blink::ServiceWorkerEventQueue::Event"*
  %172 = icmp eq i64 %165, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %171, i64 0, i32 3, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %174) #10
  %175 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %171, i64 0, i32 2, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %175) #10
  %176 = inttoptr i64 %165 to i8*
  call void @_ZdlPv(i8* %176) #11
  br label %177

177:                                              ; preds = %170, %173
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue14EnqueuePendingEiN4base12OnceCallbackIFviEEENS2_IFviNS_5mojom24ServiceWorkerEventStatusEEEEN4absl8optionalINS1_9TimeDeltaEEE(%"class.blink::ServiceWorkerEventQueue"*, i32, %"class.base::OnceCallback.21"* nocapture, %"class.base::OnceCallback.22"* nocapture, i8, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback.21", align 8
  %8 = alloca %"class.base::OnceCallback.22", align 8
  %9 = bitcast %"class.base::OnceCallback.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = bitcast %"class.base::OnceCallback.22"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = tail call i8* @_Znwm(i64 40) #11
  %12 = bitcast i8* %11 to %"struct.blink::ServiceWorkerEventQueue::Event"*
  %13 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.21"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.22"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast i8* %11 to i32*
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %11, i64 8
  %23 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %22 to i64*
  store i64 %15, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 16
  %26 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %8, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast i8* %25 to i64*
  store i64 %18, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 24
  store i8 %4, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %11, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN5blink23ServiceWorkerEventQueue12EnqueueEventENSt3__110unique_ptrINS0_5EventENS1_14default_deleteIS3_EEEE(%"class.blink::ServiceWorkerEventQueue"* %0, %"struct.blink::ServiceWorkerEventQueue::Event"* nonnull %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue14EnqueueOfflineEiN4base12OnceCallbackIFviEEENS2_IFviNS_5mojom24ServiceWorkerEventStatusEEEEN4absl8optionalINS1_9TimeDeltaEEE(%"class.blink::ServiceWorkerEventQueue"*, i32, %"class.base::OnceCallback.21"* nocapture, %"class.base::OnceCallback.22"* nocapture, i8, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback.21", align 8
  %8 = alloca %"class.base::OnceCallback.22", align 8
  %9 = bitcast %"class.base::OnceCallback.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = bitcast %"class.base::OnceCallback.22"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = tail call i8* @_Znwm(i64 40) #11
  %12 = bitcast i8* %11 to %"struct.blink::ServiceWorkerEventQueue::Event"*
  %13 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.21"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.22"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast i8* %11 to i32*
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 2, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %11, i64 8
  %23 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %22 to i64*
  store i64 %15, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 16
  %26 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %8, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast i8* %25 to i64*
  store i64 %18, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 24
  store i8 %4, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %11, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN5blink23ServiceWorkerEventQueue12EnqueueEventENSt3__110unique_ptrINS0_5EventENS1_14default_deleteIS3_EEEE(%"class.blink::ServiceWorkerEventQueue"* %0, %"struct.blink::ServiceWorkerEventQueue::Event"* nonnull %12)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ServiceWorkerEventQueue13CanStartEventERKNS0_5EventE(%"class.blink::ServiceWorkerEventQueue"* nocapture readonly, %"struct.blink::ServiceWorkerEventQueue::Event"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = icmp eq i32 %4, 2
  br label %14

12:                                               ; preds = %6
  %13 = icmp eq i32 %4, 1
  br label %14

14:                                               ; preds = %2, %12, %10
  %15 = phi i1 [ %11, %10 ], [ %13, %12 ], [ true, %2 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::map"* @_ZN5blink23ServiceWorkerEventQueue19GetActiveEventQueueEv(%"class.blink::ServiceWorkerEventQueue"* readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %13 [
    i32 0, label %4
    i32 2, label %11
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9
  %10 = select i1 %8, %"class.std::__1::map"* %9, %"class.std::__1::map"* %5
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9
  br label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8
  br label %15

15:                                               ; preds = %13, %11, %4
  %16 = phi %"class.std::__1::map"* [ %10, %4 ], [ %12, %11 ], [ %14, %13 ]
  ret %"class.std::__1::map"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue13ProcessEventsEv(%"class.blink::ServiceWorkerEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.21", align 8
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 10
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 0, label %6
    i32 2, label %13
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9
  %12 = select i1 %10, %"class.std::__1::map"* %11, %"class.std::__1::map"* %7
  br label %17

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9
  br label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8
  br label %17

17:                                               ; preds = %6, %13, %15
  %18 = phi %"class.std::__1::map"* [ %12, %6 ], [ %14, %13 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %80, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::map"* %18 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback.21"* %2 to i8*
  %28 = bitcast %"class.base::OnceCallback.21"* %2 to i64*
  %29 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %2, i64 0, i32 0
  br label %30

30:                                               ; preds = %78, %22
  %31 = phi i32 [ %79, %78 ], [ %5, %22 ]
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = icmp eq i32 %31, 0
  %35 = load %"struct.blink::ServiceWorkerEventQueue::Event"*, %"struct.blink::ServiceWorkerEventQueue::Event"** %33, align 8
  br i1 %34, label %44, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %35, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = icmp eq i32 %31, 2
  br i1 %41, label %44, label %80

42:                                               ; preds = %36
  %43 = icmp eq i32 %31, 1
  br i1 %43, label %44, label %80

44:                                               ; preds = %30, %40, %42
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  store %"struct.blink::ServiceWorkerEventQueue::Event"* null, %"struct.blink::ServiceWorkerEventQueue::Event"** %33, align 8
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %48 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %25, %"class.std::__1::__tree_end_node"* %47) #10
  %49 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %35, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 2
  %52 = select i1 %51, i32 2, i32 1
  store i32 %52, i32* %4, align 4
  %53 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %54 = icmp eq %"class.base::internal::BindStateBase"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %44
  %56 = load i32, i32* %49, align 4
  %57 = icmp eq i32 %56, 2
  %58 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %53, i64 0, i32 1
  %59 = bitcast void ()** %58 to void (%"class.base::internal::BindStateBase"*, i1)**
  %60 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %59, align 8
  call void %60(%"class.base::internal::BindStateBase"* nonnull %53, i1 zeroext %57) #10
  br label %61

61:                                               ; preds = %55, %44
  %62 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %35, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %63 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::OnceCallback.21"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %66 = inttoptr i64 %65 to %"class.base::internal::BindStateBase"*
  %67 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %66, i64 0, i32 1
  %68 = bitcast void ()** %67 to void (%"class.base::internal::BindStateBase"*, i32)**
  %69 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %68, align 8
  call void %69(%"class.base::internal::BindStateBase"* %66, i32 %46) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %70 = icmp eq %"struct.blink::ServiceWorkerEventQueue::Event"* %35, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %35, i64 0, i32 3, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %72) #10
  %73 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %35, i64 0, i32 2, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %73) #10
  %74 = bitcast %"struct.blink::ServiceWorkerEventQueue::Event"* %35 to i8*
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %71, %61
  %76 = load i64, i64* %19, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %4, align 4
  br label %30

80:                                               ; preds = %42, %40, %75, %17
  store i8 0, i8* %3, align 8
  %81 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, %82
  %86 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  %89 = icmp eq i64 %85, %88
  br i1 %89, label %90, label %95

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  %92 = load i32, i32* %91, align 8
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  call void @_ZN5blink23ServiceWorkerEventQueue17OnNoInflightEventEv(%"class.blink::ServiceWorkerEventQueue"* %0)
  br label %95

95:                                               ; preds = %80, %94, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue10StartEventEiNSt3__110unique_ptrINS0_5EventENS1_14default_deleteIS3_EEEE(%"class.blink::ServiceWorkerEventQueue"* nocapture, i32, %"struct.blink::ServiceWorkerEventQueue::Event"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.21", align 8
  %5 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  %8 = select i1 %7, i32 2, i32 1
  %9 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 11
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, 2
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*, i1)**
  %18 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* nonnull %11, i1 zeroext %15) #10
  br label %19

19:                                               ; preds = %3, %13
  %20 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %2, i64 0, i32 2
  %21 = bitcast %"class.base::OnceCallback.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.21"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.21"* %4 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %4, i64 0, i32 0
  %27 = inttoptr i64 %24 to %"class.base::internal::BindStateBase"*
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %29 = bitcast void ()** %28 to void (%"class.base::internal::BindStateBase"*, i32)**
  %30 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %29, align 8
  tail call void %30(%"class.base::internal::BindStateBase"* %27, i32 %1) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  %31 = icmp eq %"struct.blink::ServiceWorkerEventQueue::Event"* %2, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %19
  %33 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %2, i64 0, i32 3, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %33) #10
  %34 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %2, i64 0, i32 2, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %34) #10
  %35 = bitcast %"struct.blink::ServiceWorkerEventQueue::Event"* %2 to i8*
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %19, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue8EndEventEi(%"class.blink::ServiceWorkerEventQueue"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %64, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i32 %1, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %13, %1
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %10, %24
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %1
  br i1 %30, label %59, label %31

31:                                               ; preds = %9
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %11
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %9
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %9 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %8 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %8 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %65
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %68
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, %69
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable"* %73, %"struct.WTF::KeyValuePair"* %69) #10
  br label %74

74:                                               ; preds = %67, %72
  %75 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 10
  %76 = load i8, i8* %75, align 8, !range !17
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %93

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %80
  %84 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = icmp eq i64 %83, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  tail call void @_ZN5blink23ServiceWorkerEventQueue17OnNoInflightEventEv(%"class.blink::ServiceWorkerEventQueue"* %0)
  br label %93

93:                                               ; preds = %78, %74, %92, %88
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ServiceWorkerEventQueue8HasEventEi(%"class.blink::ServiceWorkerEventQueue"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %63, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %58, label %30

30:                                               ; preds = %8
  %31 = xor i32 %23, -1
  %32 = lshr i32 %21, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %56, %49 ]
  %46 = phi i64 [ %25, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %58, label %44

58:                                               ; preds = %49, %8
  %59 = phi %"struct.WTF::KeyValuePair"* [ %26, %8 ], [ %54, %49 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = zext i32 %7 to i64
  br label %66

63:                                               ; preds = %44, %58, %2
  %64 = zext i32 %7 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %64
  br label %66

66:                                               ; preds = %61, %63
  %67 = phi i64 [ %62, %61 ], [ %64, %63 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %59, %61 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %67
  %70 = icmp ne %"struct.WTF::KeyValuePair"* %68, %69
  ret i1 %70
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ServiceWorkerEventQueue15HasEventInQueueEi(%"class.blink::ServiceWorkerEventQueue"* readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %58

28:                                               ; preds = %23, %21, %2
  %29 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node"* %31, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %28, %33
  %34 = phi %"class.std::__1::__tree_end_node"* [ %44, %33 ], [ %29, %28 ]
  %35 = phi %"class.std::__1::__tree_node"* [ %45, %33 ], [ %31, %28 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %1
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node"* %35 to %"class.std::__1::__tree_node"**
  %43 = select i1 %38, %"class.std::__1::__tree_node"** %40, %"class.std::__1::__tree_node"** %42
  %44 = select i1 %38, %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"* %41
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %33

47:                                               ; preds = %33
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %44, %29
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %1
  br i1 %53, label %54, label %55

54:                                               ; preds = %49, %47, %28
  br label %55

55:                                               ; preds = %49, %54
  %56 = phi %"class.std::__1::__tree_end_node"* [ %29, %54 ], [ %44, %49 ]
  %57 = icmp ne %"class.std::__1::__tree_end_node"* %56, %29
  br label %58

58:                                               ; preds = %23, %55
  %59 = phi i1 [ %57, %55 ], [ true, %23 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* @_ZN5blink23ServiceWorkerEventQueue20CreateStayAwakeTokenEv(%"class.blink::ServiceWorkerEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10, !noalias !30
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 16, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %7) #10, !noalias !30
  %8 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 16, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !30
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %9) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10, !noalias !30
  %11 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = call i8* @_Znwm(i64 16) #11
  %13 = bitcast i8* %12 to %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"*
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %14, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %15) #10
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %16, align 8
  call void @_ZN5blink23ServiceWorkerEventQueue14StayAwakeTokenC2EN4base7WeakPtrIS0_EE(%"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* nonnull %13, %"class.base::WeakPtr"* nonnull %2) #10
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret %"class.blink::ServiceWorkerEventQueue::StayAwakeToken"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue12SetIdleDelayEN4base9TimeDeltaE(%"class.blink::ServiceWorkerEventQueue"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::TaskHandle", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.36", align 8
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 6, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  %13 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = icmp eq i64 %12, %15
  br i1 %16, label %17, label %79

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 12
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %79, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 7
  %23 = load i8, i8* %22, align 8, !range !17
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %79

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  tail call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %26) #10
  %27 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %1, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  %32 = icmp slt i64 %1, 0
  %33 = select i1 %32, i64 -9223372036854775808, i64 9223372036854775807
  %34 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %28, i64 %1) #10
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 %33, i64 %36, !prof !18
  br label %46

38:                                               ; preds = %25
  %39 = add i64 %28, -9223372036854775807
  %40 = icmp ugt i64 %39, 1
  %41 = icmp eq i64 %28, %1
  %42 = or i1 %41, %40
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %46

46:                                               ; preds = %31, %38, %43
  %47 = phi i64 [ %37, %31 ], [ %1, %38 ], [ %1, %43 ]
  %48 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 14
  %49 = load %"class.base::TickClock"*, %"class.base::TickClock"** %48, align 8
  %50 = bitcast %"class.base::TickClock"* %49 to i64 (%"class.base::TickClock"*)***
  %51 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %51, i64 2
  %53 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %52, align 8
  %54 = call i64 %53(%"class.base::TickClock"* %49) #10
  %55 = sub nsw i64 %47, %54
  %56 = icmp slt i64 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %46
  store i8 1, i8* %22, align 8
  %58 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %58, align 8
  %60 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %59, i64 0, i32 1
  %61 = bitcast void ()** %60 to void (%"class.base::internal::BindStateBase"*)**
  %62 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %61, align 8
  call void %62(%"class.base::internal::BindStateBase"* %59) #10
  br label %79

63:                                               ; preds = %46
  %64 = bitcast %"class.base::OnceCallback.36"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.blink::TaskHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  %66 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %66, align 8
  %68 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0), i32 302) #10
  %69 = ptrtoint %"class.blink::ServiceWorkerEventQueue"* %0 to i64
  %70 = call i8* @_Znwm(i64 56) #11, !noalias !33
  %71 = bitcast i8* %70 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %71, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !33
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ServiceWorkerEventQueue"*)* @_ZN5blink23ServiceWorkerEventQueue19TriggerIdleCallbackEv to i64), i64 0>, <2 x i64>* %73, align 8, !noalias !33
  %74 = getelementptr inbounds i8, i8* %70, i64 48
  %75 = bitcast i8* %74 to i64*
  store i64 %69, i64* %75, align 8, !noalias !33
  %76 = bitcast %"class.base::OnceCallback.36"* %6 to i8**
  store i8* %70, i8** %76, align 8, !alias.scope !33
  call void @_ZN5blink26PostDelayedCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEENS0_9TimeDeltaE(%"class.blink::TaskHandle"* nonnull sret %4, %"class.base::SequencedTaskRunner"* dereferenceable(16) %67, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.36"* nonnull %6, i64 %55) #10
  %77 = call dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* %26, %"class.blink::TaskHandle"* nonnull dereferenceable(8) %4) #10
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* nonnull %4) #10
  %78 = getelementptr inbounds %"class.base::OnceCallback.36", %"class.base::OnceCallback.36"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  br label %79

79:                                               ; preds = %21, %2, %57, %63, %17
  ret void
}

declare void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue19TriggerIdleCallbackEv(%"class.blink::ServiceWorkerEventQueue"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 7
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %6 = bitcast void ()** %5 to void (%"class.base::internal::BindStateBase"*)**
  %7 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, align 8
  tail call void %7(%"class.base::internal::BindStateBase"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue20ScheduleIdleCallbackEN4base9TimeDeltaE(%"class.blink::ServiceWorkerEventQueue"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TaskHandle", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.36", align 8
  %6 = bitcast %"class.blink::TaskHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %7, align 8
  %9 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0), i32 302) #10
  %10 = ptrtoint %"class.blink::ServiceWorkerEventQueue"* %0 to i64
  %11 = call i8* @_Znwm(i64 56) #11, !noalias !40
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !40
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ServiceWorkerEventQueue"*)* @_ZN5blink23ServiceWorkerEventQueue19TriggerIdleCallbackEv to i64), i64 0>, <2 x i64>* %14, align 8, !noalias !40
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8, !noalias !40
  %17 = bitcast %"class.base::OnceCallback.36"* %5 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !40
  call void @_ZN5blink26PostDelayedCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEENS0_9TimeDeltaE(%"class.blink::TaskHandle"* nonnull sret %3, %"class.base::SequencedTaskRunner"* dereferenceable(16) %8, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.36"* nonnull %5, i64 %1) #10
  %18 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 4
  %19 = call dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* %18, %"class.blink::TaskHandle"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* nonnull %3) #10
  %20 = getelementptr inbounds %"class.base::OnceCallback.36", %"class.base::OnceCallback.36"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare void @_ZN5blink26PostDelayedCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEENS0_9TimeDeltaE(%"class.blink::TaskHandle"* sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.36"*, i64) local_unnamed_addr #3

declare dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"*, %"class.blink::TaskHandle"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23ServiceWorkerEventQueue11NextEventIdEv(%"class.blink::ServiceWorkerEventQueue"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerEventQueue", %"class.blink::ServiceWorkerEventQueue"* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp eq i32 %8, 2147483647
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %21

12:                                               ; preds = %1
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 2147483647) #10
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 2147483647) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i8* %13, i8* %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %6, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0), i32 350, %"class.logging::CheckOpResult"* nonnull %3) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %22 = load i32, i32* %7, align 8
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %7, align 8
  ret i32 %22
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue5EventC2EiNS1_4TypeEN4base12OnceCallbackIFviEEENS4_IFviNS_5mojom24ServiceWorkerEventStatusEEEEN4absl8optionalINS3_9TimeDeltaEEE(%"struct.blink::ServiceWorkerEventQueue::Event"* nocapture, i32, i32, %"class.base::OnceCallback.21"* nocapture, %"class.base::OnceCallback.22"* nocapture, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.21"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.21"* %9 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.22"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.22"* %14 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %20, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue5EventD2Ev(%"struct.blink::ServiceWorkerEventQueue::Event"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #10
  %3 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue9EventInfoC2EN4base9TimeTicksENS2_12OnceCallbackIFvNS_5mojom24ServiceWorkerEventStatusEEEE(%"struct.blink::ServiceWorkerEventQueue::EventInfo"* nocapture, i64, %"class.base::OnceCallback"* nocapture) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ServiceWorkerEventQueue9EventInfoD2Ev(%"struct.blink::ServiceWorkerEventQueue::EventInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::ServiceWorkerEventQueue::Event"*, %"struct.blink::ServiceWorkerEventQueue::Event"** %10, align 8
  store %"struct.blink::ServiceWorkerEventQueue::Event"* null, %"struct.blink::ServiceWorkerEventQueue::Event"** %10, align 8
  %12 = icmp eq %"struct.blink::ServiceWorkerEventQueue::Event"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %11, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #10
  %15 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %11, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #10
  %16 = bitcast %"struct.blink::ServiceWorkerEventQueue::Event"* %11 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %4, %13
  %18 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ServiceWorkerEventQueue"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ServiceWorkerEventQueue"*)**
  %21 = load void (%"class.blink::ServiceWorkerEventQueue"*)*, void (%"class.blink::ServiceWorkerEventQueue"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ServiceWorkerEventQueue"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ServiceWorkerEventQueue"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ServiceWorkerEventQueue"* %12) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.22", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"class.base::OnceCallback.22"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::BindStateBase"**
  %10 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.22"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %3, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i32, i32)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i32, i32)*, void (%"class.base::internal::BindStateBase"*, i32, i32)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i32 %7, i32 %1) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #10
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #10
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %106, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %88, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %88, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %92) #10
  %93 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %88 to i8*
  tail call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %79, %91
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %94
  %105 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %106

106:                                              ; preds = %50, %94, %104
  %107 = phi i8 [ 1, %94 ], [ 1, %104 ], [ 0, %50 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %81, %94 ], [ %105, %104 ], [ %52, %50 ]
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([206 x i8], [206 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %52

18:                                               ; preds = %150
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %151, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %154, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %152, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %43, %29
  %32 = phi i64 [ 0, %29 ], [ %44, %43 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %37, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %37, align 8
  %39 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %38, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %41) #10
  %42 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %38 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %40, %36, %31
  %44 = add nuw nsw i64 %32, 1
  %45 = icmp eq i64 %44, %30
  br i1 %45, label %46, label %31

46:                                               ; preds = %43, %27
  %47 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #10
  br label %48

48:                                               ; preds = %20, %46
  %49 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -2147483648
  store i32 %51, i32* %49, align 8
  ret %"struct.WTF::KeyValuePair"* %23

52:                                               ; preds = %13, %150
  %53 = phi i64 [ %17, %13 ], [ %151, %150 ]
  %54 = phi i32 [ %7, %13 ], [ %152, %150 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %153, %150 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %154, %150 ]
  %57 = phi i32 [ 0, %13 ], [ %155, %150 ]
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %58, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, 1
  %62 = icmp ult i32 %61, 2
  br i1 %62, label %150, label %63

63:                                               ; preds = %52
  %64 = shl i32 %60, 15
  %65 = xor i32 %64, -1
  %66 = add i32 %60, %65
  %67 = lshr i32 %66, 10
  %68 = xor i32 %67, %66
  %69 = mul i32 %68, 9
  %70 = lshr i32 %69, 6
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 11
  %73 = xor i32 %72, -1
  %74 = add i32 %71, %73
  %75 = lshr i32 %74, 16
  %76 = xor i32 %75, %74
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %101, label %84

84:                                               ; preds = %63
  %85 = xor i32 %76, -1
  %86 = lshr i32 %74, 23
  %87 = add i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %107

98:                                               ; preds = %114
  %99 = ptrtoint %"struct.WTF::KeyValuePair"* %121 to i64
  %100 = inttoptr i64 %116 to %"struct.WTF::KeyValuePair"*
  br label %101

101:                                              ; preds = %98, %63
  %102 = phi i64 [ %99, %98 ], [ %80, %63 ]
  %103 = phi %"struct.WTF::KeyValuePair"* [ %100, %98 ], [ null, %63 ]
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %103, null
  %105 = ptrtoint %"struct.WTF::KeyValuePair"* %103 to i64
  %106 = select i1 %104, i64 %102, i64 %105
  br label %126

107:                                              ; preds = %114, %84
  %108 = phi i64 [ 0, %84 ], [ %116, %114 ]
  %109 = phi i32 [ %82, %84 ], [ %124, %114 ]
  %110 = phi i64 [ %80, %84 ], [ %122, %114 ]
  %111 = phi i64 [ %78, %84 ], [ %120, %114 ]
  %112 = phi i64 [ 0, %84 ], [ %118, %114 ]
  %113 = icmp eq i32 %109, %60
  br i1 %113, label %126, label %114

114:                                              ; preds = %107
  %115 = icmp eq i32 %109, -1
  %116 = select i1 %115, i64 %110, i64 %108
  %117 = icmp eq i64 %112, 0
  %118 = select i1 %117, i64 %97, i64 %112
  %119 = add i64 %118, %111
  %120 = and i64 %119, %15
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %120
  %122 = ptrtoint %"struct.WTF::KeyValuePair"* %121 to i64
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %121, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %98, label %107

126:                                              ; preds = %107, %101
  %127 = phi i64 [ %106, %101 ], [ %110, %107 ]
  %128 = inttoptr i64 %127 to %"struct.WTF::KeyValuePair"*
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %129, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %129, align 8
  %131 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %130, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %133) #10
  %134 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %130 to i8*
  tail call void @_ZdlPv(i8* %134) #11
  br label %135

135:                                              ; preds = %126, %132
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 0
  %137 = load i32, i32* %59, align 8
  store i32 %137, i32* %136, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 1
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %58, i32 1
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.std::__1::unique_ptr"* %139 to i64*
  %142 = load i64, i64* %141, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %140, align 8
  %143 = bitcast %"class.std::__1::unique_ptr"* %138 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %144, i64 %58
  %146 = icmp eq %"struct.WTF::KeyValuePair"* %145, %3
  %147 = select i1 %146, %"struct.WTF::KeyValuePair"* %128, %"struct.WTF::KeyValuePair"* %56
  %148 = load i32, i32* %6, align 8
  %149 = ptrtoint %"struct.WTF::KeyValuePair"* %144 to i64
  br label %150

150:                                              ; preds = %52, %135
  %151 = phi i64 [ %53, %52 ], [ %149, %135 ]
  %152 = phi i32 [ %54, %52 ], [ %148, %135 ]
  %153 = phi %"struct.WTF::KeyValuePair"* [ %55, %52 ], [ %144, %135 ]
  %154 = phi %"struct.WTF::KeyValuePair"* [ %56, %52 ], [ %147, %135 ]
  %155 = add i32 %57, 1
  %156 = icmp eq i32 %155, %152
  br i1 %156, label %18, label %52
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !17
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !17
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !17
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #10
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.blink::ServiceWorkerEventQueue::Event"**
  %47 = load %"struct.blink::ServiceWorkerEventQueue::Event"*, %"struct.blink::ServiceWorkerEventQueue::Event"** %46, align 8
  store %"struct.blink::ServiceWorkerEventQueue::Event"* null, %"struct.blink::ServiceWorkerEventQueue::Event"** %46, align 8
  %48 = icmp eq %"struct.blink::ServiceWorkerEventQueue::Event"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %47, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %50) #10
  %51 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::Event", %"struct.blink::ServiceWorkerEventQueue::Event"* %47, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %51) #10
  %52 = bitcast %"struct.blink::ServiceWorkerEventQueue::Event"* %47 to i8*
  tail call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %38, %49
  %54 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !17
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !17
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !17
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !17
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !17
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !17
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !17
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !17
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !17
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !17
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !17
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !17
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !17
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %3, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %3, align 8
  %5 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %4, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #10
  %8 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  %14 = and i32 %13, 2147483647
  %15 = and i32 %12, -2147483648
  %16 = or i32 %14, %15
  store i32 %16, i32* %11, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 4
  %20 = mul i32 %19, 6
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %20, %22
  %24 = icmp ugt i32 %22, 8
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %9
  %27 = lshr i32 %22, 1
  %28 = zext i32 %27 to i64
  %29 = shl nuw nsw i64 %28, 4
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([206 x i8], [206 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %30, i8 0, i64 %29, i1 false) #10
  %31 = bitcast i8* %30 to %"struct.WTF::KeyValuePair"*
  %32 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %31, i32 %27, %"struct.WTF::KeyValuePair"* null) #10
  br label %33

33:                                               ; preds = %26, %9
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %106, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"struct.blink::ServiceWorkerEventQueue::EventInfo"* null, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::ServiceWorkerEventQueue::EventInfo"*, %"struct.blink::ServiceWorkerEventQueue::EventInfo"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %88, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"struct.blink::ServiceWorkerEventQueue::EventInfo", %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %88, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %92) #10
  %93 = bitcast %"struct.blink::ServiceWorkerEventQueue::EventInfo"* %88 to i8*
  tail call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %79, %91
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %94
  %105 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink23ServiceWorkerEventQueue9EventInfoENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %106

106:                                              ; preds = %50, %94, %104
  %107 = phi i8 [ 1, %94 ], [ 1, %104 ], [ 0, %50 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %81, %94 ], [ %105, %104 ], [ %52, %50 ]
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ServiceWorkerEventQueue"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ServiceWorkerEventQueue"*)**
  %21 = load void (%"class.blink::ServiceWorkerEventQueue"*)*, void (%"class.blink::ServiceWorkerEventQueue"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ServiceWorkerEventQueue"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ServiceWorkerEventQueue"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ServiceWorkerEventQueue"* %12) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5, !7}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = distinct !{!7, !8, !"_ZN3WTF4BindIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF4BindIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base13BindRepeatingIRMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13BindRepeatingIRMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!15 = distinct !{!15, !16, !"_ZN3WTF13BindRepeatingIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF13BindRepeatingIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!17 = !{i8 0, i8 2}
!18 = !{!"branch_weights", i32 1, i32 2000}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTF4BindIN4base12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJRKiEFvS5_EEENS2_IT1_EEOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF4BindIN4base12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJRKiEFvS5_EEENS2_IT1_EEOT_DpOT0_"}
!22 = !{!23, !25, !20}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFviN5blink5mojom24ServiceWorkerEventStatusEEEEJRKiEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFviN5blink5mojom24ServiceWorkerEventStatusEEEEJRKiEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJRKiEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceINS_12OnceCallbackIFviN5blink5mojom24ServiceWorkerEventStatusEEEEJRKiEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKiS8_EEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISM_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN5blink23ServiceWorkerEventQueue5EventENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKiS8_EEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISM_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4base14WeakPtrFactoryIN5blink23ServiceWorkerEventQueueEE10GetWeakPtrEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4base14WeakPtrFactoryIN5blink23ServiceWorkerEventQueueEE10GetWeakPtrEv"}
!33 = !{!34, !36, !38}
!34 = distinct !{!34, !35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!36 = distinct !{!36, !37, !"_ZN4base8BindOnceIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8BindOnceIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!38 = distinct !{!38, !39, !"_ZN3WTF4BindIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF4BindIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!40 = !{!41, !43, !45}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base8BindOnceIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8BindOnceIMN5blink23ServiceWorkerEventQueueEFvvEJN3WTF17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!45 = distinct !{!45, !46, !"_ZN3WTF4BindIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF4BindIMN5blink23ServiceWorkerEventQueueEFvvEJNS_17UnretainedWrapperIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
