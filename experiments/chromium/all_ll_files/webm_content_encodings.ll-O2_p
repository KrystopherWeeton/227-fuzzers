; ModuleID = '../../media/formats/webm/webm_content_encodings.cc'
source_filename = "../../media/formats/webm/webm_content_encodings.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::ContentEncoding" = type <{ i64, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN5media15ContentEncodingC1Ev = hidden unnamed_addr alias void (%"class.media::ContentEncoding"*), void (%"class.media::ContentEncoding"*)* @_ZN5media15ContentEncodingC2Ev
@_ZN5media15ContentEncodingD1Ev = hidden unnamed_addr alias void (%"class.media::ContentEncoding"*), void (%"class.media::ContentEncoding"*)* @_ZN5media15ContentEncodingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15ContentEncodingC2Ev(%"class.media::ContentEncoding"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 0
  store i64 -1, i64* %2, align 8
  %3 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 3
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15ContentEncodingD2Ev(%"class.media::ContentEncoding"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #5
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15ContentEncoding18SetEncryptionKeyIdEPKhi(%"class.media::ContentEncoding"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 5
  %5 = sext i32 %2 to i64
  %6 = tail call i1 @llvm.is.constant.i64(i64 %5) #6
  %7 = icmp ult i32 %2, 23
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %27

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.media::ContentEncoding", %"class.media::ContentEncoding"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br label %21

18:                                               ; preds = %9
  %19 = trunc i32 %2 to i8
  store i8 %19, i8* %11, align 1
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i8* [ %17, %14 ], [ %20, %18 ]
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %1, i64 %5, i1 false) #6
  br label %25

25:                                               ; preds = %24, %21
  %26 = getelementptr inbounds i8, i8* %22, i64 %5
  store i8 0, i8* %26, align 1
  br label %29

27:                                               ; preds = %3
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* %1, i64 %5) #6
  br label %29

29:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
