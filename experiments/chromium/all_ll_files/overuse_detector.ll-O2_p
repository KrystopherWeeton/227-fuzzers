; ModuleID = '../../third_party/webrtc/modules/remote_bitrate_estimator/overuse_detector.cc'
source_filename = "../../third_party/webrtc/modules/remote_bitrate_estimator/overuse_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::OveruseDetector" = type { i32 (...)**, i8, double, double, double, double, i64, double, double, i32, i32 }
%"class.webrtc::WebRtcKeyValueConfig" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator" = type { i8 }

@_ZN6webrtcL28kAdaptiveThresholdExperimentE = internal constant [28 x i8] c"WebRTC-AdaptiveBweThreshold\00", align 16
@_ZN6webrtcL15kDisabledPrefixE = internal constant [9 x i8] c"Disabled\00", align 1
@_ZN6webrtcL14kEnabledPrefixE = internal constant [8 x i8] c"Enabled\00", align 1
@.str = private unnamed_addr constant [8 x i8] c"%lf,%lf\00", align 1
@_ZTVN6webrtc15OveruseDetectorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::OveruseDetector"*)* @_ZN6webrtc15OveruseDetectorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::OveruseDetector"*)* @_ZN6webrtc15OveruseDetectorD0Ev to i8*)] }, align 8

@_ZN6webrtc15OveruseDetectorC1EPKNS_20WebRtcKeyValueConfigE = hidden unnamed_addr alias void (%"class.webrtc::OveruseDetector"*, %"class.webrtc::WebRtcKeyValueConfig"*), void (%"class.webrtc::OveruseDetector"*, %"class.webrtc::WebRtcKeyValueConfig"*)* @_ZN6webrtc15OveruseDetectorC2EPKNS_20WebRtcKeyValueConfigE
@_ZN6webrtc15OveruseDetectorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::OveruseDetector"*), void (%"class.webrtc::OveruseDetector"*)* @_ZN6webrtc15OveruseDetectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc37AdaptiveThresholdExperimentIsDisabledERKNS_20WebRtcKeyValueConfigE(%"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.webrtc::WebRtcKeyValueConfig"* %0 to void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)***
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)**, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*** %7, align 8
  %10 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)** %9, i64 2
  %11 = load void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)** %10, align 8
  call void %11(%"class.std::__1::basic_string"* nonnull sret %2, %"class.webrtc::WebRtcKeyValueConfig"* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN6webrtcL28kAdaptiveThresholdExperimentE, i64 0, i64 0), i64 27) #9
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %14 to i64
  %18 = select i1 %15, i64 %16, i64 %17
  %19 = icmp ult i64 %18, 8
  br i1 %19, label %45, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i64 0, i64 8, %"class.std::__1::allocator"* nonnull dereferenceable(1) %22) #9
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 8
  br i1 %31, label %32, label %36

32:                                               ; preds = %20
  %33 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN6webrtcL15kDisabledPrefixE, i64 0, i64 0), i64 8) #9
  %34 = icmp eq i32 %33, 0
  %35 = load i8, i8* %24, align 1
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi i8 [ %35, %32 ], [ %25, %20 ]
  %38 = phi i1 [ %34, %32 ], [ false, %20 ]
  %39 = icmp slt i8 %37, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %44 = load i8, i8* %13, align 1
  br label %45

45:                                               ; preds = %1, %43
  %46 = phi i8 [ %44, %43 ], [ %14, %1 ]
  %47 = phi i1 [ %38, %43 ], [ false, %1 ]
  %48 = icmp slt i8 %46, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc23ReadExperimentConstantsERKNS_20WebRtcKeyValueConfigEPdS3_(%"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8), double*, double*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.webrtc::WebRtcKeyValueConfig"* %0 to void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)***
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)**, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*** %10, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)** %12, i64 2
  %14 = load void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)*, void (%"class.std::__1::basic_string"*, %"class.webrtc::WebRtcKeyValueConfig"*, i8*, i64)** %13, align 8
  call void %14(%"class.std::__1::basic_string"* nonnull sret %4, %"class.webrtc::WebRtcKeyValueConfig"* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN6webrtcL28kAdaptiveThresholdExperimentE, i64 0, i64 0), i64 27) #9
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = load i64, i64* %9, align 8
  %20 = zext i8 %17 to i64
  %21 = select i1 %18, i64 %19, i64 %20
  %22 = icmp ult i64 %21, 10
  br i1 %22, label %63, label %23

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 0, i64 7, %"class.std::__1::allocator"* nonnull dereferenceable(1) %25) #9
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %33, 7
  br i1 %34, label %35, label %39

35:                                               ; preds = %23
  %36 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN6webrtcL14kEnabledPrefixE, i64 0, i64 0), i64 7) #9
  %37 = icmp ne i32 %36, 0
  %38 = load i8, i8* %27, align 1
  br label %39

39:                                               ; preds = %23, %35
  %40 = phi i8 [ %28, %23 ], [ %38, %35 ]
  %41 = phi i1 [ true, %23 ], [ %37, %35 ]
  %42 = icmp slt i8 %40, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %43, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  br i1 %41, label %63, label %47

47:                                               ; preds = %46
  %48 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 8, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %25) #9
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %48
  %56 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double* %1, double* %2) #9
  %57 = icmp eq i32 %56, 2
  %58 = load i8, i8* %50, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %47
  %61 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %47, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #9
  br label %63

63:                                               ; preds = %3, %46, %62
  %64 = phi i1 [ %57, %62 ], [ false, %46 ], [ false, %3 ]
  %65 = load i8, i8* %16, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret i1 %64
}

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15OveruseDetectorC2EPKNS_20WebRtcKeyValueConfigE(%"class.webrtc::OveruseDetector"* nocapture, %"class.webrtc::WebRtcKeyValueConfig"*) unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc15OveruseDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 1
  %7 = tail call zeroext i1 @_ZN6webrtc37AdaptiveThresholdExperimentIsDisabledERKNS_20WebRtcKeyValueConfigE(%"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8) %1)
  %8 = xor i1 %7, true
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %6, align 8
  %10 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 3
  %12 = bitcast double* %10 to <2 x double>*
  store <2 x double> <double 0x3F81D14E3BCD35A8, double 3.900000e-02>, <2 x double>* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 4
  %14 = bitcast double* %13 to <2 x double>*
  store <2 x double> <double 1.000000e+02, double 1.250000e+01>, <2 x double>* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 6
  store i64 -1, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 7
  %17 = bitcast double* %16 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double -1.000000e+00>, <2 x double>* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 9
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 10
  store i32 0, i32* %19, align 4
  %20 = tail call zeroext i1 @_ZN6webrtc37AdaptiveThresholdExperimentIsDisabledERKNS_20WebRtcKeyValueConfigE(%"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8) %1)
  br i1 %20, label %33, label %21

21:                                               ; preds = %2
  %22 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store double 0.000000e+00, double* %3, align 8
  %23 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  store double 0.000000e+00, double* %4, align 8
  store double 1.000000e+01, double* %13, align 8
  %24 = call zeroext i1 @_ZN6webrtc23ReadExperimentConstantsERKNS_20WebRtcKeyValueConfigEPdS3_(%"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8) %1, double* nonnull %3, double* nonnull %4) #9
  br i1 %24, label %25, label %32

25:                                               ; preds = %21
  %26 = bitcast double* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast double* %10 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast double* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast double* %11 to i64*
  store i64 %30, i64* %31, align 8
  br label %32

32:                                               ; preds = %21, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %33

33:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15OveruseDetector20InitializeExperimentERKNS_20WebRtcKeyValueConfigE(%"class.webrtc::OveruseDetector"* nocapture, %"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store double 0.000000e+00, double* %3, align 8
  %6 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store double 0.000000e+00, double* %4, align 8
  %7 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 4
  store double 1.000000e+01, double* %7, align 8
  %8 = call zeroext i1 @_ZN6webrtc23ReadExperimentConstantsERKNS_20WebRtcKeyValueConfigEPdS3_(%"class.webrtc::WebRtcKeyValueConfig"* dereferenceable(8) %1, double* nonnull %3, double* nonnull %4)
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = bitcast double* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 2
  %13 = bitcast double* %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast double* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 3
  %17 = bitcast double* %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %18

18:                                               ; preds = %9, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc15OveruseDetectorD2Ev(%"class.webrtc::OveruseDetector"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15OveruseDetectorD0Ev(%"class.webrtc::OveruseDetector"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.webrtc::OveruseDetector"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc15OveruseDetector5StateEv(%"class.webrtc::OveruseDetector"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15OveruseDetector6DetectEddil(%"class.webrtc::OveruseDetector"* nocapture, double, double, i32, i64) local_unnamed_addr #6 align 2 {
  %6 = icmp slt i32 %3, 2
  br i1 %6, label %81, label %7

7:                                                ; preds = %5
  %8 = icmp slt i32 %3, 60
  %9 = select i1 %8, i32 %3, i32 60
  %10 = sitofp i32 %9 to double
  %11 = fmul double %10, %1
  %12 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 5
  %13 = load double, double* %12, align 8
  %14 = fcmp ogt double %11, %13
  br i1 %14, label %15, label %36

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 8
  %17 = load double, double* %16, align 8
  %18 = fcmp oeq double %17, -1.000000e+00
  %19 = fadd double %17, %2
  %20 = fmul double %2, 5.000000e-01
  %21 = select i1 %18, double %20, double %19
  store double %21, double* %16, align 8
  %22 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 4
  %26 = load double, double* %25, align 8
  %27 = fcmp ogt double %21, %26
  %28 = icmp sgt i32 %23, 0
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %44

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 7
  %32 = load double, double* %31, align 8
  %33 = fcmp ugt double %32, %1
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  store double 0.000000e+00, double* %16, align 8
  store i32 0, i32* %22, align 8
  %35 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 10
  store i32 2, i32* %35, align 4
  br label %44

36:                                               ; preds = %7
  %37 = fsub double -0.000000e+00, %13
  %38 = fcmp olt double %11, %37
  %39 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 8
  store double -1.000000e+00, double* %39, align 8
  %40 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 9
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 10
  br i1 %38, label %42, label %43

42:                                               ; preds = %36
  store i32 1, i32* %41, align 4
  br label %44

43:                                               ; preds = %36
  store i32 0, i32* %41, align 4
  br label %44

44:                                               ; preds = %30, %42, %43, %15, %34
  %45 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 7
  store double %1, double* %45, align 8
  %46 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 1
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 6
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store i64 %4, i64* %50, align 8
  br label %54

54:                                               ; preds = %53, %49
  %55 = phi i64 [ %4, %53 ], [ %51, %49 ]
  %56 = tail call double @llvm.fabs.f64(double %11) #9
  %57 = fadd double %13, 1.500000e+01
  %58 = fcmp ogt double %56, %57
  br i1 %58, label %77, label %59

59:                                               ; preds = %54
  %60 = fcmp olt double %56, %13
  %61 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 2
  %63 = select i1 %60, double* %61, double* %62
  %64 = load double, double* %63, align 8
  %65 = sub nsw i64 %4, %55
  %66 = icmp slt i64 %65, 100
  %67 = select i1 %66, i64 %65, i64 100
  %68 = fsub double %56, %13
  %69 = fmul double %68, %64
  %70 = sitofp i64 %67 to double
  %71 = fmul double %69, %70
  %72 = fadd double %13, %71
  %73 = fcmp ugt double %72, 6.000000e+00
  %74 = fcmp oge double %72, 6.000000e+02
  %75 = select i1 %74, double 6.000000e+02, double %72
  %76 = select i1 %73, double %75, double 6.000000e+00
  store double %76, double* %12, align 8
  br label %77

77:                                               ; preds = %54, %59
  store i64 %4, i64* %50, align 8
  br label %78

78:                                               ; preds = %77, %44
  %79 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 10
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %5, %78
  %82 = phi i32 [ %80, %78 ], [ 0, %5 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15OveruseDetector15UpdateThresholdEdl(%"class.webrtc::OveruseDetector"* nocapture, double, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %38, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i64 %2, i64* %8, align 8
  br label %12

12:                                               ; preds = %11, %7
  %13 = phi i64 [ %2, %11 ], [ %9, %7 ]
  %14 = tail call double @llvm.fabs.f64(double %1)
  %15 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 5
  %16 = load double, double* %15, align 8
  %17 = fadd double %16, 1.500000e+01
  %18 = fcmp ogt double %14, %17
  br i1 %18, label %37, label %19

19:                                               ; preds = %12
  %20 = fcmp olt double %14, %16
  %21 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.webrtc::OveruseDetector", %"class.webrtc::OveruseDetector"* %0, i64 0, i32 2
  %23 = select i1 %20, double* %21, double* %22
  %24 = load double, double* %23, align 8
  %25 = sub nsw i64 %2, %13
  %26 = icmp slt i64 %25, 100
  %27 = select i1 %26, i64 %25, i64 100
  %28 = fsub double %14, %16
  %29 = fmul double %28, %24
  %30 = sitofp i64 %27 to double
  %31 = fmul double %29, %30
  %32 = fadd double %16, %31
  %33 = fcmp ugt double %32, 6.000000e+00
  %34 = fcmp oge double %32, 6.000000e+02
  %35 = select i1 %34, double 6.000000e+02, double %32
  %36 = select i1 %33, double %35, double 6.000000e+00
  store double %36, double* %15, align 8
  br label %37

37:                                               ; preds = %12, %19
  store i64 %2, i64* %8, align 8
  br label %38

38:                                               ; preds = %37, %3
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
