; ModuleID = '../../third_party/blink/renderer/platform/bindings/parkable_string_manager.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/parkable_string_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ParkableStringManagerDumpProvider" = type { %"class.base::trace_event::MemoryDumpProvider" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::ParkableStringManager>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::ParkableStringManager>::InstanceStorage" = type { %"class.blink::ParkableStringManager"* }
%"class.blink::ParkableStringManager" = type { i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.std::__1::unique_ptr.54" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::Vector"*, %"class.blink::ParkableStringImpl"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.32" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.45", %"class.WTF::Vector", i8, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.WTF::Vector.38"* }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::DiskDataAllocator"* }
%"class.blink::DiskDataAllocator" = type <{ %"class.blink::mojom::blink::DiskAllocator", %"class.mojo::Receiver", %"class.base::File", %"class.WTF::Mutex", %"class.std::__1::map.235", i64, i64, i8, [7 x i8] }>
%"class.blink::mojom::blink::DiskAllocator" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::DiskAllocatorStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.57, %"class.std::__1::unique_ptr.184", %"class.base::WeakPtrFactory.234" }
%class.scoped_refptr.57 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.63, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.151", %"class.absl::optional.156", %"class.absl::optional.109", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.175", i8, [7 x i8], %class.scoped_refptr.63, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.58" }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i32 }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.78", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.63, %"class.std::__1::unique_ptr.86", %"class.absl::optional.95", %"struct.std::__1::atomic.105", i8, i8, i8, i8, i32, i32, %"class.absl::optional.109", %"class.std::__1::unique_ptr.114", i8, i64, %class.scoped_refptr.147, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.150" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.85", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.63, i8, %"class.mojo::ScopedHandleBase.89", %class.scoped_refptr.90, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.91" }
%"class.mojo::ScopedHandleBase.89" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.90 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.91" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.100", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.100" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i8 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.117", i8, i64, %class.scoped_refptr.118, %class.scoped_refptr.143 }
%"class.base::RepeatingCallback.117" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.118 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.119", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.121", %"class.std::__1::map.132", i8, [7 x i8] }>
%"class.base::RefCounted.119" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.121" = type { %"class.std::__1::__tree.122" }
%"class.std::__1::__tree.122" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.143 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.147 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.249", [4 x i8], %"class.base::RepeatingCallback.187", %class.scoped_refptr.63, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.249" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.187" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.150" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.151" = type { %"class.absl::optional_internal::optional_data.152" }
%"class.absl::optional_internal::optional_data.152" = type { %"class.absl::optional_internal::optional_data_base.153" }
%"class.absl::optional_internal::optional_data_base.153" = type { %"class.absl::optional_internal::optional_data_dtor_base.154" }
%"class.absl::optional_internal::optional_data_dtor_base.154" = type { i8, %union.anon.155 }
%union.anon.155 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.156" = type { %"class.absl::optional_internal::optional_data.157" }
%"class.absl::optional_internal::optional_data.157" = type { %"class.absl::optional_internal::optional_data_base.158" }
%"class.absl::optional_internal::optional_data_base.158" = type { %"class.absl::optional_internal::optional_data_dtor_base.159" }
%"class.absl::optional_internal::optional_data_dtor_base.159" = type { i8, [7 x i8], %union.anon.160 }
%union.anon.160 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.161 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.161 = type { %"class.std::__1::map.163" }
%"class.std::__1::map.163" = type { %"class.std::__1::__tree.164" }
%"class.std::__1::__tree.164" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.174"*, i64 }
%"class.std::__1::unique_ptr.174" = type opaque
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.63 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.64" }>
%"class.base::RefCountedThreadSafe.64" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.187", %"class.base::OnceCallback.188", %"class.absl::optional.189", %"class.absl::optional.194", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.201", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.209", %"class.std::__1::map.220", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.229", i8, %class.scoped_refptr.63, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.230" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.188" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.189" = type { %"class.absl::optional_internal::optional_data.190" }
%"class.absl::optional_internal::optional_data.190" = type { %"class.absl::optional_internal::optional_data_base.191" }
%"class.absl::optional_internal::optional_data_base.191" = type { %"class.absl::optional_internal::optional_data_dtor_base.192" }
%"class.absl::optional_internal::optional_data_dtor_base.192" = type { i8, %union.anon.193 }
%union.anon.193 = type { %"class.base::TimeDelta" }
%"class.absl::optional.194" = type { %"class.absl::optional_internal::optional_data.195" }
%"class.absl::optional_internal::optional_data.195" = type { %"class.absl::optional_internal::optional_data_base.196" }
%"class.absl::optional_internal::optional_data_base.196" = type { %"class.absl::optional_internal::optional_data_dtor_base.197" }
%"class.absl::optional_internal::optional_data_dtor_base.197" = type { i8, %union.anon.198 }
%union.anon.198 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.63, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.199" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.199" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.204", %class.scoped_refptr.205 }
%"class.base::RepeatingCallback.204" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.205 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.209" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.229" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.230" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.234" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::DiskAllocatorStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::DiskAllocator"* }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.std::__1::map.235" = type { %"class.std::__1::__tree.236" }
%"class.std::__1::__tree.236" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.305", i32, [4 x i8], %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.443", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.460", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.105", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.423", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__atomic_base.343" }
%"struct.std::__1::__atomic_base.343" = type { %"struct.std::__1::__cxx_atomic_impl.344" }
%"struct.std::__1::__cxx_atomic_impl.344" = type { %"struct.std::__1::__cxx_atomic_base_impl.345" }
%"struct.std::__1::__cxx_atomic_base_impl.345" = type { i64 }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::Worklist.352"* }
%"class.blink::Worklist.352" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::Worklist.359"* }
%"class.blink::Worklist.359" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::Worklist.366"* }
%"class.blink::Worklist.366" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::Worklist.373"* }
%"class.blink::Worklist.373" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::Worklist.380"* }
%"class.blink::Worklist.380" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::Worklist.387"* }
%"class.blink::Worklist.387" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::Worklist.394"* }
%"class.blink::Worklist.394" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.401", %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.416", [4 x i8] }>
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403", %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { float }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.426", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.435" }
%"class.WTF::Vector.435" = type { %"class.WTF::VectorBuffer.436" }
%"class.WTF::VectorBuffer.436" = type { %"class.WTF::VectorBufferBase.437" }
%"class.WTF::VectorBufferBase.437" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"struct.std::__1::pair.453"*, i32, i32 }
%"struct.std::__1::pair.453" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.466" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.352"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.359"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.366"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.373"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.380"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.469", i64 }
%"class.std::__1::vector.469" = type { %"class.std::__1::__vector_base.470" }
%"class.std::__1::__vector_base.470" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.471" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.491 }
%class.scoped_refptr.491 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.4", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.22 }
%union.anon.22 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.23" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.blink::ParkableStringManager::Statistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::MemoryPressureListenerRegistry" = type { %"class.blink::HeapHashSet", %"class.WTF::HashSet.263", %"class.WTF::Mutex" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.WTF::HashSet.263" = type { %"class.WTF::HashTable.264" }
%"class.WTF::HashTable.264" = type <{ %"class.blink::Thread"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.64", [4 x i8] }>
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.blink::ParkableStringImpl"**, i32, i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::(anonymous namespace)::OnPurgeMemoryListener" = type { %"class.blink::MemoryPressureListener" }

$_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6insertINS_17HashMapTranslatorISI_SD_S2_EES5_RS9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18ParkableStringImplEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink18ParkableStringImplELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_ = comdat any

$_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6insertINS_17HashMapTranslatorISI_SD_S2_EES5_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink22MemoryPressureListener16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE = comdat any

$_ZN5blink22MemoryPressureListenerD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"parkable_strings\00", align 1
@_ZN5blink21ParkableStringManager18kAllocatorDumpNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), align 8
@_ZZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance = internal global %"class.blink::ParkableStringManagerDumpProvider" zeroinitializer, align 8
@_ZGVZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance = internal global i64 0, align 8
@_ZTVN5blink33ParkableStringManagerDumpProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ParkableStringManagerDumpProvider"*)* @_ZN5blink33ParkableStringManagerDumpProviderD2Ev to i8*), i8* bitcast (void (%"class.blink::ParkableStringManagerDumpProvider"*)* @_ZN5blink33ParkableStringManagerDumpProviderD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ParkableStringManagerDumpProvider"*, %"struct.base::trace_event::MemoryDumpArgs"*, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN5blink33ParkableStringManagerDumpProvider12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE to i8*)] }, align 8
@_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"original_size\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"uncompressed_size\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"compressed_size\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"metadata_size\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"overhead_size\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"savings_size\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"on_disk_size\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"on_disk_footprint\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"on_disk_free_chunks\00", align 1
@_ZN3WTF10Partitions24kAllocatedObjectPoolNameE = external local_unnamed_addr constant i8*, align 8
@.str.12 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/bindings/parkable_string_manager.cc\00", align 1
@.str.14 = private unnamed_addr constant [42 x i8] c"Memory.ParkableString.MainThreadTime.5min\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"Memory.ParkableString.ParkingThreadTime.5min\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"Memory.ParkableString.TotalSizeKb.5min\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"Memory.ParkableString.CompressedSizeKb.5min\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"Memory.ParkableString.SavingsKb.5min\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"Memory.ParkableString.CompressionRatio.5min\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"Memory.ParkableString.DiskIsUsable.5min\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"Memory.ParkableString.DiskWriteTime.5min\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"Memory.ParkableString.DiskReadTime.5min\00", align 1
@.str.23 = private unnamed_addr constant [43 x i8] c"Memory.ParkableString.MemorySavingsKb.5min\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"Memory.ParkableString.OnDiskSizeKb.5min\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"Memory.ParkableString.OnDiskFootprintKb.5min\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.26 = private unnamed_addr constant [41 x i8] c"ParkableStringManager::AgeStringsAndPark\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"ScheduleAgingTaskIfNeeded\00", align 1
@_ZN5blink8features24kCompressParkableStringsE = external global %"struct.base::Feature", align 8
@.str.28 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.29 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEEPN5blink18ParkableStringImplEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const WTF::Vector<unsigned char, 32, WTF::PartitionAllocator> *, blink::ParkableStringImpl *>]\00", align 1
@.str.32 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.33 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18ParkableStringImplEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ParkableStringImpl *]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@.str.37 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_121OnPurgeMemoryListenerE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MemoryPressureListener"*)* @_ZN5blink22MemoryPressureListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)* @_ZN5blink12_GLOBAL__N_121OnPurgeMemoryListenerD0Ev to i8*), i8* bitcast (void (%"class.blink::MemoryPressureListener"*, i32)* @_ZN5blink22MemoryPressureListener16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)* @_ZN5blink12_GLOBAL__N_121OnPurgeMemoryListener13OnPurgeMemoryEv to i8*)] }, align 8

@_ZN5blink33ParkableStringManagerDumpProviderD1Ev = hidden unnamed_addr alias void (%"class.blink::ParkableStringManagerDumpProvider"*), void (%"class.blink::ParkableStringManagerDumpProvider"*)* @_ZN5blink33ParkableStringManagerDumpProviderD2Ev
@_ZN5blink33ParkableStringManagerDumpProviderC1Ev = hidden unnamed_addr alias void (%"class.blink::ParkableStringManagerDumpProvider"*), void (%"class.blink::ParkableStringManagerDumpProvider"*)* @_ZN5blink33ParkableStringManagerDumpProviderC2Ev
@_ZN5blink21ParkableStringManagerD1Ev = hidden unnamed_addr alias void (%"class.blink::ParkableStringManager"*), void (%"class.blink::ParkableStringManager"*)* @_ZN5blink21ParkableStringManagerD2Ev
@_ZN5blink21ParkableStringManagerC1Ev = hidden unnamed_addr alias void (%"class.blink::ParkableStringManager"*), void (%"class.blink::ParkableStringManager"*)* @_ZN5blink21ParkableStringManagerC2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden nonnull %"class.blink::ParkableStringManagerDumpProvider"* @_ZN5blink33ParkableStringManagerDumpProvider8InstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance) #18
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink33ParkableStringManagerDumpProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.blink::ParkableStringManagerDumpProvider", %"class.blink::ParkableStringManagerDumpProvider"* @_ZZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance, i64 0, i32 0, i32 0), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance) #18
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.blink::ParkableStringManagerDumpProvider"* @_ZZN5blink33ParkableStringManagerDumpProvider8InstanceEvE8instance
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink33ParkableStringManagerDumpProvider12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.blink::ParkableStringManagerDumpProvider"* nocapture readnone, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readnone dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #2 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance) #18
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %6
  %10 = tail call noalias i8* @malloc(i64 120) #18
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %10, i64 2
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = getelementptr inbounds i8, i8* %10, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #18
  %15 = getelementptr inbounds i8, i8* %10, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #18
  %16 = getelementptr inbounds i8, i8* %10, i64 112
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 52, i1 false) #18
  store i8* %10, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance) #18
  br label %18

18:                                               ; preds = %3, %6, %9
  %19 = load %"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringManager"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance, i64 0, i32 0, i32 0), align 8
  %20 = tail call zeroext i1 @_ZN5blink21ParkableStringManager12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpE(%"class.blink::ParkableStringManager"* %19, %"class.base::trace_event::ProcessMemoryDump"* %2)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %15, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance) #18
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 120) #18
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds i8, i8* %7, i64 2
  store i8 0, i8* %9, align 2
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = getelementptr inbounds i8, i8* %7, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #18
  %12 = getelementptr inbounds i8, i8* %7, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #18
  %13 = getelementptr inbounds i8, i8* %7, i64 112
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 52, i1 false) #18
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance) #18
  br label %15

15:                                               ; preds = %3, %6, %0
  %16 = load %"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringManager"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::ParkableStringManager"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ParkableStringManager12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpE(%"class.blink::ParkableStringManager"* nocapture readonly, %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.blink::ParkableStringManager::Statistics", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = load i8*, i8** @_ZN5blink21ParkableStringManager18kAllocatorDumpNameE, align 8
  %8 = tail call i64 @strlen(i8* %7) #18
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %11) #19
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #20
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %28

23:                                               ; preds = %12
  %24 = trunc i64 %8 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23, %14
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %23 ], [ %22, %14 ]
  %30 = phi i8* [ %6, %23 ], [ %17, %14 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 %7, i64 %8, i1 false) #18
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %23 ], [ %29, %28 ]
  %33 = phi i8* [ %6, %23 ], [ %30, %28 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %8
  store i8 0, i8* %34, align 1
  %35 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #18
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %31, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  %43 = bitcast %"struct.blink::ParkableStringManager::Statistics"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 72, i1 false)
  call void @_ZNK5blink21ParkableStringManager17ComputeStatisticsEv(%"struct.blink::ParkableStringManager::Statistics"* nonnull sret %4, %"class.blink::ParkableStringManager"* %0)
  %44 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 6
  %45 = load i64, i64* %44, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %45) #18
  %46 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %47) #18
  %48 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %49) #18
  %50 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 3
  %51 = load i64, i64* %50, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %51) #18
  %52 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 4
  %53 = load i64, i64* %52, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %53) #18
  %54 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 5
  %55 = load i64, i64* %54, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %55) #18
  %56 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 7
  %57 = load i64, i64* %56, align 8
  %58 = icmp sgt i64 %57, 0
  %59 = select i1 %58, i64 %57, i64 0
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %59) #18
  %60 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %4, i64 0, i32 8
  %61 = load i64, i64* %60, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %61) #18
  %62 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %63 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %62, align 8
  %64 = icmp eq %"class.blink::DiskDataAllocator"* %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %42
  %66 = call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #18
  br label %67

67:                                               ; preds = %42, %65
  %68 = phi %"class.blink::DiskDataAllocator"* [ %66, %65 ], [ %63, %42 ]
  %69 = getelementptr inbounds %"class.blink::DiskDataAllocator", %"class.blink::DiskDataAllocator"* %68, i64 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #18
  %70 = getelementptr inbounds %"class.blink::DiskDataAllocator", %"class.blink::DiskDataAllocator"* %68, i64 0, i32 6
  %71 = load i64, i64* %70, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #18
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %71) #18
  %72 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %62, align 8
  %73 = icmp eq %"class.blink::DiskDataAllocator"* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #18
  br label %76

76:                                               ; preds = %67, %74
  %77 = phi %"class.blink::DiskDataAllocator"* [ %75, %74 ], [ %72, %67 ]
  %78 = getelementptr inbounds %"class.blink::DiskDataAllocator", %"class.blink::DiskDataAllocator"* %77, i64 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %78) #18
  %79 = getelementptr inbounds %"class.blink::DiskDataAllocator", %"class.blink::DiskDataAllocator"* %77, i64 0, i32 5
  %80 = load i64, i64* %79, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %78) #18
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %35, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %80) #18
  %81 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %35, i64 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #18
  %83 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %84 = call i64 @strlen(i8* %83) #18
  %85 = icmp ugt i64 %84, -17
  br i1 %85, label %86, label %88

86:                                               ; preds = %76
  %87 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %87) #19
  unreachable

88:                                               ; preds = %76
  %89 = icmp ult i64 %84, 23
  br i1 %89, label %99, label %90

90:                                               ; preds = %88
  %91 = add nuw i64 %84, 16
  %92 = and i64 %91, -16
  %93 = call i8* @_Znwm(i64 %92) #20
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %93, i8** %94, align 8
  %95 = or i64 %92, -9223372036854775808
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %84, i64* %97, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %104

99:                                               ; preds = %88
  %100 = trunc i64 %84 to i8
  %101 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 %100, i8* %102, align 1
  %103 = icmp eq i64 %84, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %99, %90
  %105 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %101, %99 ], [ %98, %90 ]
  %106 = phi i8* [ %82, %99 ], [ %93, %90 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %106, i8* align 1 %83, i64 %84, i1 false) #18
  br label %107

107:                                              ; preds = %99, %104
  %108 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %101, %99 ], [ %105, %104 ]
  %109 = phi i8* [ %82, %99 ], [ %106, %104 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %84
  store i8 0, i8* %110, align 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %81, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #18
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #20
  br label %117

117:                                              ; preds = %107, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #18
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink33ParkableStringManagerDumpProviderD2Ev(%"class.blink::ParkableStringManagerDumpProvider"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ParkableStringManagerDumpProviderD0Ev(%"class.blink::ParkableStringManagerDumpProvider"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::ParkableStringManagerDumpProvider"* %0 to i8*
  tail call void @free(i8* %2) #18
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink33ParkableStringManagerDumpProviderC2Ev(%"class.blink::ParkableStringManagerDumpProvider"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringManagerDumpProvider", %"class.blink::ParkableStringManagerDumpProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink33ParkableStringManagerDumpProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManagerD2Ev(%"class.blink::ParkableStringManager"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %2, align 8
  store %"class.blink::DiskDataAllocator"* null, %"class.blink::DiskDataAllocator"** %2, align 8
  %4 = icmp eq %"class.blink::DiskDataAllocator"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::DiskDataAllocator"* %3 to void (%"class.blink::DiskDataAllocator"*)***
  %7 = load void (%"class.blink::DiskDataAllocator"*)**, void (%"class.blink::DiskDataAllocator"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %7, i64 1
  %9 = load void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %8, align 8
  tail call void %9(%"class.blink::DiskDataAllocator"* nonnull %3) #18
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, null
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %10
  %15 = bitcast %"struct.WTF::KeyValuePair"* %12 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #18
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %11, align 8
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, null
  br i1 %19, label %22, label %20, !prof !3

20:                                               ; preds = %16
  %21 = bitcast %"struct.WTF::KeyValuePair"* %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #18
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %17, align 8
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %23, align 8
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, null
  br i1 %25, label %28, label %26, !prof !3

26:                                               ; preds = %22
  %27 = bitcast %"struct.WTF::KeyValuePair"* %24 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #18
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %23, align 8
  br label %28

28:                                               ; preds = %22, %26
  ret void
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21ParkableStringManager17ComputeStatisticsEv(%"struct.blink::ParkableStringManager::Statistics"* noalias sret, %"class.blink::ParkableStringManager"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"struct.blink::ParkableStringManager::Statistics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 72, i1 false)
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 7, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 7, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 7, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %35, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %12
  br i1 %21, label %35, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %12
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 5
  %28 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 8
  %29 = bitcast %"struct.blink::ParkableStringManager::Statistics"* %0 to <2 x i64>*
  %30 = bitcast %"struct.blink::ParkableStringManager::Statistics"* %0 to <2 x i64>*
  br label %65

31:                                               ; preds = %106
  %32 = extractelement <2 x i64> %74, i32 0
  br label %35

33:                                               ; preds = %109, %99
  %34 = extractelement <2 x i64> %74, i32 0
  br label %35

35:                                               ; preds = %19, %33, %31, %2, %22
  %36 = phi i64 [ 0, %22 ], [ 0, %2 ], [ %32, %31 ], [ %34, %33 ], [ 0, %19 ]
  %37 = phi i64 [ 0, %22 ], [ 0, %2 ], [ %76, %31 ], [ %76, %33 ], [ 0, %19 ]
  %38 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 8, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 8, i32 0, i32 0
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 8, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %45
  br i1 %40, label %111, label %47

47:                                               ; preds = %35
  %48 = icmp eq i32 %44, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %47, %53
  %50 = phi %"struct.WTF::KeyValuePair"* [ %54, %53 ], [ %42, %47 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  switch i64 %52, label %56 [
    i64 -1, label %53
    i64 0, label %53
  ]

53:                                               ; preds = %49, %49
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %54, %46
  br i1 %55, label %111, label %49

56:                                               ; preds = %49, %47
  %57 = phi %"struct.WTF::KeyValuePair"* [ %42, %47 ], [ %50, %49 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, %46
  br i1 %58, label %111, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 2
  %61 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 3
  %63 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 8
  br label %139

65:                                               ; preds = %25, %109
  %66 = phi %"struct.WTF::KeyValuePair"* [ %23, %25 ], [ %103, %109 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1
  %68 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %67, align 8
  %69 = tail call i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"* %68) #18
  %70 = zext i32 %69 to i64
  %71 = load <2 x i64>, <2 x i64>* %29, align 8
  %72 = insertelement <2 x i64> undef, i64 %70, i32 0
  %73 = shufflevector <2 x i64> %72, <2 x i64> undef, <2 x i32> zeroinitializer
  %74 = add <2 x i64> %71, %73
  store <2 x i64> %74, <2 x i64>* %30, align 8
  %75 = load i64, i64* %26, align 8
  %76 = add i64 %75, 144
  store i64 %76, i64* %26, align 8
  %77 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %78, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::Vector.38"*, %"class.WTF::Vector.38"** %79, align 8
  %81 = icmp eq %"class.WTF::Vector.38"* %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %80, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = load i64, i64* %27, align 8
  %87 = add i64 %86, %85
  store i64 %87, i64* %27, align 8
  %88 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %77, align 8
  br label %89

89:                                               ; preds = %65, %82
  %90 = phi %"struct.blink::ParkableStringImpl::ParkableMetadata"* [ %78, %65 ], [ %88, %82 ]
  %91 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %90, i64 0, i32 5, i32 0, i32 0, i32 0
  %92 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %91, align 8
  %93 = icmp eq %"class.blink::DiskDataMetadata"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::DiskDataMetadata", %"class.blink::DiskDataMetadata"* %92, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = load i64, i64* %28, align 8
  %98 = add i64 %97, %96
  store i64 %98, i64* %28, align 8
  br label %99

99:                                               ; preds = %89, %94
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %101 = icmp eq %"struct.WTF::KeyValuePair"* %100, %12
  br i1 %101, label %33, label %102

102:                                              ; preds = %99, %106
  %103 = phi %"struct.WTF::KeyValuePair"* [ %107, %106 ], [ %100, %99 ]
  %104 = bitcast %"struct.WTF::KeyValuePair"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  switch i64 %105, label %109 [
    i64 -1, label %106
    i64 0, label %106
  ]

106:                                              ; preds = %102, %102
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 1
  %108 = icmp eq %"struct.WTF::KeyValuePair"* %107, %12
  br i1 %108, label %31, label %102

109:                                              ; preds = %102
  %110 = icmp eq %"struct.WTF::KeyValuePair"* %103, %12
  br i1 %110, label %33, label %65

111:                                              ; preds = %53, %169, %179, %176, %35, %56
  %112 = phi i64 [ %36, %56 ], [ %36, %35 ], [ %148, %176 ], [ %148, %179 ], [ %148, %169 ], [ %36, %53 ]
  %113 = phi i64 [ %37, %56 ], [ %37, %35 ], [ %159, %176 ], [ %159, %179 ], [ %159, %169 ], [ %37, %53 ]
  %114 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 9, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 9, i32 0, i32 0
  %118 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %1, i64 0, i32 9, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 %121
  br i1 %116, label %181, label %123

123:                                              ; preds = %111
  %124 = icmp eq i32 %120, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %123, %129
  %126 = phi %"struct.WTF::KeyValuePair"* [ %130, %129 ], [ %118, %123 ]
  %127 = bitcast %"struct.WTF::KeyValuePair"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  switch i64 %128, label %132 [
    i64 -1, label %129
    i64 0, label %129
  ]

129:                                              ; preds = %125, %125
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 1
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %130, %122
  br i1 %131, label %181, label %125

132:                                              ; preds = %125, %123
  %133 = phi %"struct.WTF::KeyValuePair"* [ %118, %123 ], [ %126, %125 ]
  %134 = icmp eq %"struct.WTF::KeyValuePair"* %133, %122
  br i1 %134, label %181, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 0
  %137 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 4
  %138 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 8
  br label %196

139:                                              ; preds = %59, %179
  %140 = phi %"struct.WTF::KeyValuePair"* [ %57, %59 ], [ %173, %179 ]
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 0, i32 1
  %142 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %141, align 8
  %143 = tail call i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"* %142) #18
  %144 = zext i32 %143 to i64
  %145 = load i64, i64* %60, align 8
  %146 = add i64 %145, %144
  store i64 %146, i64* %60, align 8
  %147 = load i64, i64* %61, align 8
  %148 = add i64 %147, %144
  store i64 %148, i64* %61, align 8
  %149 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0
  %150 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %149, align 8
  %151 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %150, i64 0, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::Vector.38"*, %"class.WTF::Vector.38"** %151, align 8
  %153 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %152, i64 0, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  %156 = load i64, i64* %62, align 8
  %157 = add i64 %156, %155
  store i64 %157, i64* %62, align 8
  %158 = load i64, i64* %63, align 8
  %159 = add i64 %158, 144
  store i64 %159, i64* %63, align 8
  %160 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %149, align 8
  %161 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %160, i64 0, i32 5, i32 0, i32 0, i32 0
  %162 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %161, align 8
  %163 = icmp eq %"class.blink::DiskDataMetadata"* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %139
  %165 = getelementptr inbounds %"class.blink::DiskDataMetadata", %"class.blink::DiskDataMetadata"* %162, i64 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = load i64, i64* %64, align 8
  %168 = add i64 %167, %166
  store i64 %168, i64* %64, align 8
  br label %169

169:                                              ; preds = %139, %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 1
  %171 = icmp eq %"struct.WTF::KeyValuePair"* %170, %46
  br i1 %171, label %111, label %172

172:                                              ; preds = %169, %176
  %173 = phi %"struct.WTF::KeyValuePair"* [ %177, %176 ], [ %170, %169 ]
  %174 = bitcast %"struct.WTF::KeyValuePair"* %173 to i64*
  %175 = load i64, i64* %174, align 8
  switch i64 %175, label %179 [
    i64 -1, label %176
    i64 0, label %176
  ]

176:                                              ; preds = %172, %172
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %173, i64 1
  %178 = icmp eq %"struct.WTF::KeyValuePair"* %177, %46
  br i1 %178, label %111, label %172

179:                                              ; preds = %172
  %180 = icmp eq %"struct.WTF::KeyValuePair"* %173, %46
  br i1 %180, label %111, label %139

181:                                              ; preds = %129, %196, %223, %220, %111, %132
  %182 = phi i64 [ %112, %132 ], [ %112, %111 ], [ %203, %220 ], [ %203, %223 ], [ %203, %196 ], [ %112, %129 ]
  %183 = phi i64 [ %113, %132 ], [ %113, %111 ], [ %205, %220 ], [ %205, %223 ], [ %205, %196 ], [ %113, %129 ]
  %184 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 3
  %187 = load i64, i64* %186, align 8
  %188 = add i64 %187, %185
  %189 = add i64 %188, %183
  %190 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 5
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %189, %191
  %193 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 6
  store i64 %192, i64* %193, align 8
  %194 = sub i64 %182, %192
  %195 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %0, i64 0, i32 7
  store i64 %194, i64* %195, align 8
  ret void

196:                                              ; preds = %135, %223
  %197 = phi %"struct.WTF::KeyValuePair"* [ %133, %135 ], [ %217, %223 ]
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 0, i32 1
  %199 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %198, align 8
  %200 = tail call i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"* %199) #18
  %201 = zext i32 %200 to i64
  %202 = load i64, i64* %136, align 8
  %203 = add i64 %202, %201
  store i64 %203, i64* %136, align 8
  %204 = load i64, i64* %137, align 8
  %205 = add i64 %204, 144
  store i64 %205, i64* %137, align 8
  %206 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0
  %207 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %206, align 8
  %208 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %207, i64 0, i32 5, i32 0, i32 0, i32 0
  %209 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::DiskDataMetadata", %"class.blink::DiskDataMetadata"* %209, i64 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = load i64, i64* %138, align 8
  %213 = add i64 %212, %211
  store i64 %213, i64* %138, align 8
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 1
  %215 = icmp eq %"struct.WTF::KeyValuePair"* %214, %122
  br i1 %215, label %181, label %216

216:                                              ; preds = %196, %220
  %217 = phi %"struct.WTF::KeyValuePair"* [ %221, %220 ], [ %214, %196 ]
  %218 = bitcast %"struct.WTF::KeyValuePair"* %217 to i64*
  %219 = load i64, i64* %218, align 8
  switch i64 %219, label %223 [
    i64 -1, label %220
    i64 0, label %220
  ]

220:                                              ; preds = %216, %216
  %221 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %217, i64 1
  %222 = icmp eq %"struct.WTF::KeyValuePair"* %221, %122
  br i1 %222, label %181, label %216

223:                                              ; preds = %216
  %224 = icmp eq %"struct.WTF::KeyValuePair"* %217, %122
  br i1 %224, label %181, label %196
}

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #6

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ParkableStringManager10ShouldParkERKN3WTF10StringImplE(%"class.WTF::StringImpl"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp ugt i32 %3, 10000
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #18
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features24kCompressParkableStringsE) #18
  br label %9

9:                                                ; preds = %7, %5, %1
  %10 = phi i1 [ false, %5 ], [ false, %1 ], [ %8, %7 ]
  ret i1 %10
}

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ParkableStringImpl"* @_ZN5blink21ParkableStringManager3AddEO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableStringManager"*, %class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca %"class.WTF::Vector"*, align 8
  %5 = alloca %"class.blink::ParkableStringImpl"*, align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  tail call void @_ZN5blink21ParkableStringManager25ScheduleAgingTaskIfNeededEv(%"class.blink::ParkableStringManager"* %0)
  %8 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #18
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %18
  tail call void @llvm.trap() #18
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %31

31:                                               ; preds = %2, %13, %28
  %32 = phi %"class.WTF::StringImpl"* [ null, %2 ], [ %11, %13 ], [ %30, %28 ]
  %33 = tail call %"class.WTF::Vector"* @_ZN5blink18ParkableStringImpl10HashStringEPN3WTF10StringImplE(%"class.WTF::StringImpl"* %32) #18
  %34 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  %35 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %34, i64 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %35, align 8
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, null
  %38 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  br i1 %37, label %97, label %40

40:                                               ; preds = %31
  %41 = add i32 %39, -1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::Vector"* %33 to i32**
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, %41
  %47 = zext i32 %46 to i64
  %48 = xor i32 %45, -1
  %49 = lshr i32 %45, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  %61 = bitcast i32* %44 to i8*
  br label %62

62:                                               ; preds = %88, %40
  %63 = phi i64 [ 0, %40 ], [ %90, %88 ]
  %64 = phi i64 [ %47, %40 ], [ %92, %88 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 0
  %67 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %66, align 8
  %68 = ptrtoint %"class.WTF::Vector"* %67 to i64
  switch i64 %68, label %69 [
    i64 0, label %97
    i64 -1, label %88
  ]

69:                                               ; preds = %62
  %70 = icmp eq %"class.WTF::Vector"* %67, %33
  br i1 %70, label %93, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %67, i64 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %470, %71
  %75 = phi i8* [ %61, %71 ], [ %472, %470 ]
  %76 = phi i64 [ 0, %71 ], [ %471, %470 ]
  %77 = getelementptr inbounds i8, i8* %73, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = load i8, i8* %75, align 1
  %80 = icmp eq i8 %78, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = or i64 %76, 1
  %83 = getelementptr inbounds i8, i8* %75, i64 1
  %84 = getelementptr inbounds i8, i8* %73, i64 %82
  %85 = load i8, i8* %84, align 1
  %86 = load i8, i8* %83, align 1
  %87 = icmp eq i8 %85, %86
  br i1 %87, label %456, label %88

88:                                               ; preds = %74, %81, %456, %463, %62
  %89 = icmp eq i64 %63, 0
  %90 = select i1 %89, i64 %60, i64 %63
  %91 = add i64 %90, %64
  %92 = and i64 %91, %42
  br label %62

93:                                               ; preds = %69, %470
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = zext i32 %39 to i64
  br label %100

97:                                               ; preds = %62, %93, %31
  %98 = zext i32 %39 to i64
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %98
  br label %100

100:                                              ; preds = %95, %97
  %101 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %102 = phi %"struct.WTF::KeyValuePair"* [ %65, %95 ], [ %99, %97 ]
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %101
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %102, %103
  br i1 %104, label %112, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %102, i64 0, i32 1
  %107 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %106, align 8
  %108 = ptrtoint %"class.blink::ParkableStringImpl"* %107 to i64
  %109 = icmp eq %"class.blink::ParkableStringImpl"* %107, null
  br i1 %109, label %384, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %107, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %111) #18
  br label %384

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 0
  %114 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %113, align 8
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %114, null
  %116 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  br i1 %115, label %175, label %118

118:                                              ; preds = %112
  %119 = add i32 %117, -1
  %120 = zext i32 %119 to i64
  %121 = bitcast %"class.WTF::Vector"* %33 to i32**
  %122 = load i32*, i32** %121, align 8
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, %119
  %125 = zext i32 %124 to i64
  %126 = xor i32 %123, -1
  %127 = lshr i32 %123, 23
  %128 = add i32 %127, %126
  %129 = shl i32 %128, 12
  %130 = xor i32 %129, %128
  %131 = lshr i32 %130, 7
  %132 = xor i32 %131, %130
  %133 = shl i32 %132, 2
  %134 = xor i32 %133, %132
  %135 = lshr i32 %134, 20
  %136 = xor i32 %135, %134
  %137 = or i32 %136, 1
  %138 = zext i32 %137 to i64
  %139 = bitcast i32* %122 to i8*
  br label %140

140:                                              ; preds = %166, %118
  %141 = phi i64 [ 0, %118 ], [ %168, %166 ]
  %142 = phi i64 [ %125, %118 ], [ %170, %166 ]
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %142
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %143, i64 0, i32 0
  %145 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %144, align 8
  %146 = ptrtoint %"class.WTF::Vector"* %145 to i64
  switch i64 %146, label %147 [
    i64 0, label %175
    i64 -1, label %166
  ]

147:                                              ; preds = %140
  %148 = icmp eq %"class.WTF::Vector"* %145, %33
  br i1 %148, label %171, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %145, i64 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  br label %152

152:                                              ; preds = %452, %149
  %153 = phi i8* [ %139, %149 ], [ %454, %452 ]
  %154 = phi i64 [ 0, %149 ], [ %453, %452 ]
  %155 = getelementptr inbounds i8, i8* %151, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = load i8, i8* %153, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %159, label %166

159:                                              ; preds = %152
  %160 = or i64 %154, 1
  %161 = getelementptr inbounds i8, i8* %153, i64 1
  %162 = getelementptr inbounds i8, i8* %151, i64 %160
  %163 = load i8, i8* %162, align 1
  %164 = load i8, i8* %161, align 1
  %165 = icmp eq i8 %163, %164
  br i1 %165, label %438, label %166

166:                                              ; preds = %152, %159, %438, %445, %140
  %167 = icmp eq i64 %141, 0
  %168 = select i1 %167, i64 %138, i64 %141
  %169 = add i64 %168, %142
  %170 = and i64 %169, %120
  br label %140

171:                                              ; preds = %147, %452
  %172 = icmp eq %"struct.WTF::KeyValuePair"* %143, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = zext i32 %117 to i64
  br label %178

175:                                              ; preds = %140, %171, %112
  %176 = zext i32 %117 to i64
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %176
  br label %178

178:                                              ; preds = %173, %175
  %179 = phi i64 [ %174, %173 ], [ %176, %175 ]
  %180 = phi %"struct.WTF::KeyValuePair"* [ %143, %173 ], [ %177, %175 ]
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %179
  %182 = icmp eq %"struct.WTF::KeyValuePair"* %180, %181
  br i1 %182, label %190, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %180, i64 0, i32 1
  %185 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %184, align 8
  %186 = ptrtoint %"class.blink::ParkableStringImpl"* %185 to i64
  %187 = icmp eq %"class.blink::ParkableStringImpl"* %185, null
  br i1 %187, label %384, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %185, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %189) #18
  br label %384

190:                                              ; preds = %178
  %191 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9, i32 0, i32 0
  %192 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %191, align 8
  %193 = icmp eq %"struct.WTF::KeyValuePair"* %192, null
  %194 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9, i32 0, i32 1
  %195 = load i32, i32* %194, align 8
  br i1 %193, label %253, label %196

196:                                              ; preds = %190
  %197 = add i32 %195, -1
  %198 = zext i32 %197 to i64
  %199 = bitcast %"class.WTF::Vector"* %33 to i32**
  %200 = load i32*, i32** %199, align 8
  %201 = load i32, i32* %200, align 4
  %202 = and i32 %201, %197
  %203 = zext i32 %202 to i64
  %204 = xor i32 %201, -1
  %205 = lshr i32 %201, 23
  %206 = add i32 %205, %204
  %207 = shl i32 %206, 12
  %208 = xor i32 %207, %206
  %209 = lshr i32 %208, 7
  %210 = xor i32 %209, %208
  %211 = shl i32 %210, 2
  %212 = xor i32 %211, %210
  %213 = lshr i32 %212, 20
  %214 = xor i32 %213, %212
  %215 = or i32 %214, 1
  %216 = zext i32 %215 to i64
  %217 = bitcast i32* %200 to i8*
  br label %218

218:                                              ; preds = %244, %196
  %219 = phi i64 [ 0, %196 ], [ %246, %244 ]
  %220 = phi i64 [ %203, %196 ], [ %248, %244 ]
  %221 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %192, i64 %220
  %222 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %221, i64 0, i32 0
  %223 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %222, align 8
  %224 = ptrtoint %"class.WTF::Vector"* %223 to i64
  switch i64 %224, label %225 [
    i64 0, label %253
    i64 -1, label %244
  ]

225:                                              ; preds = %218
  %226 = icmp eq %"class.WTF::Vector"* %223, %33
  br i1 %226, label %249, label %227

227:                                              ; preds = %225
  %228 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %223, i64 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  br label %230

230:                                              ; preds = %434, %227
  %231 = phi i8* [ %217, %227 ], [ %436, %434 ]
  %232 = phi i64 [ 0, %227 ], [ %435, %434 ]
  %233 = getelementptr inbounds i8, i8* %229, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %231, align 1
  %236 = icmp eq i8 %234, %235
  br i1 %236, label %237, label %244

237:                                              ; preds = %230
  %238 = or i64 %232, 1
  %239 = getelementptr inbounds i8, i8* %231, i64 1
  %240 = getelementptr inbounds i8, i8* %229, i64 %238
  %241 = load i8, i8* %240, align 1
  %242 = load i8, i8* %239, align 1
  %243 = icmp eq i8 %241, %242
  br i1 %243, label %420, label %244

244:                                              ; preds = %230, %237, %420, %427, %218
  %245 = icmp eq i64 %219, 0
  %246 = select i1 %245, i64 %216, i64 %219
  %247 = add i64 %246, %220
  %248 = and i64 %247, %198
  br label %218

249:                                              ; preds = %225, %434
  %250 = icmp eq %"struct.WTF::KeyValuePair"* %221, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %249
  %252 = zext i32 %195 to i64
  br label %256

253:                                              ; preds = %218, %249, %190
  %254 = zext i32 %195 to i64
  %255 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %192, i64 %254
  br label %256

256:                                              ; preds = %251, %253
  %257 = phi i64 [ %252, %251 ], [ %254, %253 ]
  %258 = phi %"struct.WTF::KeyValuePair"* [ %221, %251 ], [ %255, %253 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %192, i64 %257
  %260 = icmp eq %"struct.WTF::KeyValuePair"* %258, %259
  br i1 %260, label %268, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %258, i64 0, i32 1
  %263 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %262, align 8
  %264 = ptrtoint %"class.blink::ParkableStringImpl"* %263 to i64
  %265 = icmp eq %"class.blink::ParkableStringImpl"* %263, null
  br i1 %265, label %384, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %263, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %267) #18
  br label %384

268:                                              ; preds = %256
  %269 = call %"class.blink::ParkableStringImpl"* @_ZN5blink18ParkableStringImpl12MakeParkableEO13scoped_refptrIN3WTF10StringImplEENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS6_14default_deleteISA_EEEE(%class.scoped_refptr* nonnull dereferenceable(8) %3, %"class.WTF::Vector"* %33) #18
  %270 = ptrtoint %"class.blink::ParkableStringImpl"* %269 to i64
  %271 = bitcast %"class.WTF::Vector"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #18
  %272 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0
  %273 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %272, align 8
  %274 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %273, i64 0, i32 6
  store %"class.WTF::Vector"* %274, %"class.WTF::Vector"** %4, align 8
  %275 = bitcast %"class.blink::ParkableStringImpl"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #18
  store %"class.blink::ParkableStringImpl"* %269, %"class.blink::ParkableStringImpl"** %5, align 8
  %276 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %34, i64 0, i32 0
  %277 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6insertINS_17HashMapTranslatorISI_SD_S2_EES5_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %276, %"class.WTF::Vector"** nonnull dereferenceable(8) %4, %"class.blink::ParkableStringImpl"** nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #18
  %278 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 2
  %279 = load i8, i8* %278, align 2, !range !5
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %349

281:                                              ; preds = %268
  %282 = call dereferenceable(88) %"class.blink::MemoryPressureListenerRegistry"* @_ZN5blink30MemoryPressureListenerRegistry8InstanceEv() #18
  %283 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %284 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %283, i64 0, i32 1
  %285 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %284) #18
  %286 = icmp eq i8* %285, null
  br i1 %286, label %287, label %289, !prof !4

287:                                              ; preds = %281
  %288 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %284, i8* %288) #18
  br label %289

289:                                              ; preds = %287, %281
  %290 = phi i8* [ %288, %287 ], [ %285, %281 ]
  %291 = bitcast i8* %290 to %"class.blink::ThreadState"**
  %292 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %292, i64 0, i32 0, i32 0, i32 0, i32 0
  %294 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %293, align 8
  %295 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %289
  %298 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %299 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %298, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %300

300:                                              ; preds = %297, %289
  %301 = phi i32 [ %295, %289 ], [ %299, %297 ]
  %302 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %294, i64 0, i32 19, i64 0
  %303 = bitcast %"class.blink::BaseArena"** %302 to %"class.blink::NormalPageArena"**
  %304 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %304, i64 0, i32 4
  %306 = load i64, i64* %305, align 8
  %307 = icmp ult i64 %306, 16
  br i1 %307, label %338, label %308, !prof !4

308:                                              ; preds = %300
  %309 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %304, i64 0, i32 3
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 16
  store i8* %311, i8** %309, align 8
  %312 = add i64 %306, -16
  store i64 %312, i64* %305, align 8
  %313 = bitcast i8* %310 to i32*
  store i32 0, i32* %313, align 4
  %314 = getelementptr inbounds i8, i8* %310, i64 4
  %315 = bitcast i8* %314 to i16*
  %316 = trunc i32 %301 to i16
  %317 = shl i16 %316, 2
  store atomic i16 %317, i16* %315 monotonic, align 2
  %318 = getelementptr inbounds i8, i8* %310, i64 6
  %319 = bitcast i8* %318 to i16*
  store i16 8, i16* %319, align 2
  %320 = ptrtoint i8* %310 to i64
  %321 = and i64 %320, -131072
  %322 = inttoptr i64 %321 to i8*
  %323 = getelementptr inbounds i8, i8* %322, i64 4400
  %324 = bitcast i8* %323 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %325 = bitcast i8* %323 to i64*
  %326 = load i64, i64* %325, align 16
  %327 = sub i64 %320, %326
  %328 = lshr i64 %327, 3
  %329 = lshr i64 %327, 6
  %330 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %324, i64 0, i32 0, i32 1, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = trunc i64 %328 to i32
  %333 = and i32 %332, 7
  %334 = shl i32 1, %333
  %335 = trunc i32 %334 to i8
  %336 = or i8 %331, %335
  store atomic i8 %336, i8* %330 release, align 1
  %337 = getelementptr inbounds i8, i8* %310, i64 8
  br label %341

338:                                              ; preds = %300
  %339 = zext i32 %301 to i64
  %340 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %304, i64 16, i64 %339) #18
  br label %341

341:                                              ; preds = %308, %338
  %342 = phi i8* [ %337, %308 ], [ %340, %338 ]
  %343 = bitcast i8* %342 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121OnPurgeMemoryListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %343, align 8
  %344 = getelementptr inbounds i8, i8* %342, i64 -4
  %345 = bitcast i8* %344 to i16*
  %346 = load atomic i16, i16* %345 monotonic, align 2
  %347 = or i16 %346, 1
  store atomic i16 %347, i16* %345 release, align 2
  %348 = bitcast i8* %342 to %"class.blink::MemoryPressureListener"*
  call void @_ZN5blink30MemoryPressureListenerRegistry14RegisterClientEPNS_22MemoryPressureListenerE(%"class.blink::MemoryPressureListenerRegistry"* %282, %"class.blink::MemoryPressureListener"* %348) #18
  store i8 1, i8* %278, align 2
  br label %349

349:                                              ; preds = %268, %341
  %350 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 1
  %351 = load i8, i8* %350, align 1, !range !5
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %353, label %401

353:                                              ; preds = %349
  %354 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #18
  %355 = bitcast %"class.blink::Thread"* %354 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %356 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %355, align 8
  %357 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %356, i64 3
  %358 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %357, align 8
  %359 = call %"class.base::SingleThreadTaskRunner"* %358(%"class.blink::Thread"* %354) #18
  %360 = bitcast %"class.base::SingleThreadTaskRunner"* %359 to %"class.base::TaskRunner"*
  %361 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %361) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 212) #18
  %362 = ptrtoint %"class.blink::ParkableStringManager"* %0 to i64
  %363 = call i8* @_Znwm(i64 56) #20, !noalias !6
  %364 = bitcast i8* %363 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %364, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !6
  %365 = getelementptr inbounds i8, i8* %363, i64 32
  %366 = bitcast i8* %365 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ParkableStringManager"*)* @_ZNK5blink21ParkableStringManager29RecordStatisticsAfter5MinutesEv to i64), i64 0>, <2 x i64>* %366, align 8, !noalias !6
  %367 = getelementptr inbounds i8, i8* %363, i64 48
  %368 = bitcast i8* %367 to i64*
  store i64 %362, i64* %368, align 8, !noalias !6
  %369 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %363, i8** %369, align 8, !alias.scope !6
  %370 = bitcast %"class.base::SingleThreadTaskRunner"* %359 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %371 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %370, align 8
  %372 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %371, align 8
  %373 = call zeroext i1 %372(%"class.base::TaskRunner"* %360, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %7, i64 300000000) #18
  %374 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %374) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %361) #18
  store i8 1, i8* %350, align 1
  %375 = icmp eq %"class.base::SingleThreadTaskRunner"* %359, null
  br i1 %375, label %401, label %376

376:                                              ; preds = %353
  %377 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %359, i64 0, i32 0, i32 0, i32 1
  %378 = getelementptr inbounds %"class.base::RefCountedThreadSafe.64", %"class.base::RefCountedThreadSafe.64"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = atomicrmw sub i32* %378, i32 1 acq_rel
  %380 = icmp eq i32 %379, 1
  br i1 %380, label %381, label %401

381:                                              ; preds = %376
  %382 = getelementptr inbounds %"class.base::RefCountedThreadSafe.64", %"class.base::RefCountedThreadSafe.64"* %377, i64 -2
  %383 = bitcast %"class.base::RefCountedThreadSafe.64"* %382 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %383) #18
  br label %401

384:                                              ; preds = %266, %261, %188, %183, %110, %105
  %385 = phi i64 [ %108, %105 ], [ %108, %110 ], [ %186, %183 ], [ %186, %188 ], [ %264, %261 ], [ %264, %266 ]
  %386 = icmp eq %"class.WTF::Vector"* %33, null
  br i1 %386, label %401, label %387

387:                                              ; preds = %384
  %388 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 2
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %392, label %391, !prof !4

391:                                              ; preds = %387
  store i32 0, i32* %388, align 4
  br label %392

392:                                              ; preds = %391, %387
  %393 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 1, i64 0
  %396 = icmp eq i8* %395, %394
  br i1 %396, label %399, label %397, !prof !3

397:                                              ; preds = %392
  %398 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %398, i8* %394) #18
  br label %399

399:                                              ; preds = %397, %392
  store i8* null, i8** %393, align 8
  %400 = bitcast %"class.WTF::Vector"* %33 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %400) #18
  br label %401

401:                                              ; preds = %381, %376, %353, %349, %384, %399
  %402 = phi i64 [ %385, %384 ], [ %385, %399 ], [ %270, %349 ], [ %270, %353 ], [ %270, %376 ], [ %270, %381 ]
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %403, null
  br i1 %404, label %418, label %405

405:                                              ; preds = %401
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load atomic i32, i32* %406 monotonic, align 4
  %408 = and i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  br i1 %409, label %412, label %414

412:                                              ; preds = %405
  %413 = add i32 %411, -1
  store i32 %413, i32* %410, align 4
  br label %414

414:                                              ; preds = %412, %405
  %415 = phi i32 [ %413, %412 ], [ %411, %405 ]
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %418

417:                                              ; preds = %414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %403) #18
  br label %418

418:                                              ; preds = %401, %414, %417
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  %419 = inttoptr i64 %402 to %"class.blink::ParkableStringImpl"*
  ret %"class.blink::ParkableStringImpl"* %419

420:                                              ; preds = %237
  %421 = or i64 %232, 2
  %422 = getelementptr inbounds i8, i8* %231, i64 2
  %423 = getelementptr inbounds i8, i8* %229, i64 %421
  %424 = load i8, i8* %423, align 1
  %425 = load i8, i8* %422, align 1
  %426 = icmp eq i8 %424, %425
  br i1 %426, label %427, label %244

427:                                              ; preds = %420
  %428 = or i64 %232, 3
  %429 = getelementptr inbounds i8, i8* %231, i64 3
  %430 = getelementptr inbounds i8, i8* %229, i64 %428
  %431 = load i8, i8* %430, align 1
  %432 = load i8, i8* %429, align 1
  %433 = icmp eq i8 %431, %432
  br i1 %433, label %434, label %244

434:                                              ; preds = %427
  %435 = add nuw nsw i64 %232, 4
  %436 = getelementptr inbounds i8, i8* %231, i64 4
  %437 = icmp eq i64 %435, 32
  br i1 %437, label %249, label %230

438:                                              ; preds = %159
  %439 = or i64 %154, 2
  %440 = getelementptr inbounds i8, i8* %153, i64 2
  %441 = getelementptr inbounds i8, i8* %151, i64 %439
  %442 = load i8, i8* %441, align 1
  %443 = load i8, i8* %440, align 1
  %444 = icmp eq i8 %442, %443
  br i1 %444, label %445, label %166

445:                                              ; preds = %438
  %446 = or i64 %154, 3
  %447 = getelementptr inbounds i8, i8* %153, i64 3
  %448 = getelementptr inbounds i8, i8* %151, i64 %446
  %449 = load i8, i8* %448, align 1
  %450 = load i8, i8* %447, align 1
  %451 = icmp eq i8 %449, %450
  br i1 %451, label %452, label %166

452:                                              ; preds = %445
  %453 = add nuw nsw i64 %154, 4
  %454 = getelementptr inbounds i8, i8* %153, i64 4
  %455 = icmp eq i64 %453, 32
  br i1 %455, label %171, label %152

456:                                              ; preds = %81
  %457 = or i64 %76, 2
  %458 = getelementptr inbounds i8, i8* %75, i64 2
  %459 = getelementptr inbounds i8, i8* %73, i64 %457
  %460 = load i8, i8* %459, align 1
  %461 = load i8, i8* %458, align 1
  %462 = icmp eq i8 %460, %461
  br i1 %462, label %463, label %88

463:                                              ; preds = %456
  %464 = or i64 %76, 3
  %465 = getelementptr inbounds i8, i8* %75, i64 3
  %466 = getelementptr inbounds i8, i8* %73, i64 %464
  %467 = load i8, i8* %466, align 1
  %468 = load i8, i8* %465, align 1
  %469 = icmp eq i8 %467, %468
  br i1 %469, label %470, label %88

470:                                              ; preds = %463
  %471 = add nuw nsw i64 %76, 4
  %472 = getelementptr inbounds i8, i8* %75, i64 4
  %473 = icmp eq i64 %471, 32
  br i1 %473, label %93, label %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager25ScheduleAgingTaskIfNeededEv(%"class.blink::ParkableStringManager"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features24kCompressParkableStringsE) #18
  br i1 %4, label %5, label %40

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %5
  %10 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #18
  %11 = bitcast %"class.blink::Thread"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %12, i64 3
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* %14(%"class.blink::Thread"* %10) #18
  %16 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::TaskRunner"*
  %17 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 398) #18
  %18 = ptrtoint %"class.blink::ParkableStringManager"* %0 to i64
  %19 = call i8* @_Znwm(i64 56) #20, !noalias !11
  %20 = bitcast i8* %19 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %20, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !11
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ParkableStringManager"*)* @_ZN5blink21ParkableStringManager17AgeStringsAndParkEv to i64), i64 0>, <2 x i64>* %22, align 8, !noalias !11
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = bitcast i8* %23 to i64*
  store i64 %18, i64* %24, align 8, !noalias !11
  %25 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %19, i8** %25, align 8, !alias.scope !11
  %26 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %27 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %26, align 8
  %28 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %27, align 8
  %29 = call zeroext i1 %28(%"class.base::TaskRunner"* %16, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3, i64 2000000) #18
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #18
  store i8 1, i8* %6, align 8
  %31 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %9
  %33 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.64", %"class.base::RefCountedThreadSafe.64"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.64", %"class.base::RefCountedThreadSafe.64"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe.64"* %38 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %39) #18
  br label %40

40:                                               ; preds = %37, %32, %9, %5, %1
  ret void
}

declare %"class.WTF::Vector"* @_ZN5blink18ParkableStringImpl10HashStringEPN3WTF10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare %"class.blink::ParkableStringImpl"* @_ZN5blink18ParkableStringImpl12MakeParkableEO13scoped_refptrIN3WTF10StringImplEENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS6_14default_deleteISA_EEEE(%class.scoped_refptr* dereferenceable(8), %"class.WTF::Vector"*) local_unnamed_addr #6

declare dereferenceable(88) %"class.blink::MemoryPressureListenerRegistry"* @_ZN5blink30MemoryPressureListenerRegistry8InstanceEv() local_unnamed_addr #6

declare void @_ZN5blink30MemoryPressureListenerRegistry14RegisterClientEPNS_22MemoryPressureListenerE(%"class.blink::MemoryPressureListenerRegistry"*, %"class.blink::MemoryPressureListener"*) local_unnamed_addr #6

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #6

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21ParkableStringManager29RecordStatisticsAfter5MinutesEv(%"class.blink::ParkableStringManager"* nocapture readonly) #2 align 2 {
  %2 = alloca %"struct.blink::ParkableStringManager::Statistics", align 8
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 3, i32 0
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i64 %4) #18
  %5 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 4, i32 0
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i64 %6) #18
  %7 = bitcast %"struct.blink::ParkableStringManager::Statistics"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 72, i1 false)
  call void @_ZNK5blink21ParkableStringManager17ComputeStatisticsEv(%"struct.blink::ParkableStringManager::Statistics"* nonnull sret %2, %"class.blink::ParkableStringManager"* %0)
  %8 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = udiv i64 %9, 1000
  %11 = trunc i64 %10 to i32
  call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0), i32 %11) #18
  %12 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %2, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = udiv i64 %13, 1000
  %15 = trunc i64 %14 to i32
  call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i32 %15) #18
  %16 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %2, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %12, align 8
  %19 = sub i64 %17, %18
  %20 = udiv i64 %19, 1000
  %21 = trunc i64 %20 to i32
  call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i32 %21) #18
  %22 = load i64, i64* %16, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %1
  %25 = load i64, i64* %12, align 8
  %26 = mul i64 %25, 100
  %27 = udiv i64 %26, %22
  %28 = trunc i64 %27 to i32
  call void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0), i32 %28) #18
  br label %29

29:                                               ; preds = %1, %24
  %30 = call zeroext i1 @_ZN5blink8features30IsParkableStringsToDiskEnabledEv() #18
  br i1 %30, label %31, label %40

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %33 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %32, align 8
  %34 = icmp eq %"class.blink::DiskDataAllocator"* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #18
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %"class.blink::DiskDataAllocator"* [ %36, %35 ], [ %33, %31 ]
  %39 = call zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"* %38) #18
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0), i1 zeroext %39) #18
  br label %40

40:                                               ; preds = %37, %29
  %41 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %42 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %41, align 8
  %43 = icmp eq %"class.blink::DiskDataAllocator"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #18
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi %"class.blink::DiskDataAllocator"* [ %45, %44 ], [ %42, %40 ]
  %48 = call zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"* %47) #18
  br i1 %48, label %49, label %75

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 6, i32 0
  %51 = load i64, i64* %50, align 8
  call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0), i64 %51) #18
  %52 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 5, i32 0
  %53 = load i64, i64* %52, align 8
  call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0), i64 %53) #18
  %54 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %2, i64 0, i32 7
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  %59 = udiv i32 %58, 1000
  call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23, i64 0, i64 0), i32 %59) #18
  %60 = getelementptr inbounds %"struct.blink::ParkableStringManager::Statistics", %"struct.blink::ParkableStringManager::Statistics"* %2, i64 0, i32 8
  %61 = load i64, i64* %60, align 8
  %62 = udiv i64 %61, 1000
  %63 = trunc i64 %62 to i32
  call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 %63) #18
  %64 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %41, align 8
  %65 = icmp eq %"class.blink::DiskDataAllocator"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %49
  %67 = call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #18
  br label %68

68:                                               ; preds = %49, %66
  %69 = phi %"class.blink::DiskDataAllocator"* [ %67, %66 ], [ %64, %49 ]
  %70 = getelementptr inbounds %"class.blink::DiskDataAllocator", %"class.blink::DiskDataAllocator"* %69, i64 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %70) #18
  %71 = getelementptr inbounds %"class.blink::DiskDataAllocator", %"class.blink::DiskDataAllocator"* %69, i64 0, i32 6
  %72 = load i64, i64* %71, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %70) #18
  %73 = trunc i64 %72 to i32
  %74 = sdiv i32 %73, 1000
  call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i64 0, i64 0), i32 %74) #18
  br label %75

75:                                               ; preds = %68, %46
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager6RemoveEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink18ParkableStringImpl10is_on_diskEv(%"class.blink::ParkableStringImpl"* %1) #18
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9
  br label %12

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink18ParkableStringImpl9is_parkedEv(%"class.blink::ParkableStringImpl"* %1) #18
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  br label %12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  br label %12

12:                                               ; preds = %8, %10, %4
  %13 = phi %"class.WTF::HashMap"* [ %5, %4 ], [ %9, %8 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %15, i64 0, i32 6
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, null
  %20 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  br i1 %19, label %79, label %22

22:                                               ; preds = %12
  %23 = add i32 %21, -1
  %24 = zext i32 %23 to i64
  %25 = bitcast %"class.WTF::Vector"* %16 to i32**
  %26 = load i32*, i32** %25, align 8
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, %23
  %29 = zext i32 %28 to i64
  %30 = xor i32 %27, -1
  %31 = lshr i32 %27, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast i32* %26 to i8*
  br label %44

44:                                               ; preds = %70, %22
  %45 = phi i64 [ 0, %22 ], [ %72, %70 ]
  %46 = phi i64 [ %29, %22 ], [ %74, %70 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %46
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 0, i32 0
  %49 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %48, align 8
  %50 = ptrtoint %"class.WTF::Vector"* %49 to i64
  switch i64 %50, label %51 [
    i64 0, label %79
    i64 -1, label %70
  ]

51:                                               ; preds = %44
  %52 = icmp eq %"class.WTF::Vector"* %49, %16
  br i1 %52, label %75, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %49, i64 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %126, %53
  %57 = phi i8* [ %43, %53 ], [ %128, %126 ]
  %58 = phi i64 [ 0, %53 ], [ %127, %126 ]
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = load i8, i8* %57, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %63, label %70

63:                                               ; preds = %56
  %64 = or i64 %58, 1
  %65 = getelementptr inbounds i8, i8* %57, i64 1
  %66 = getelementptr inbounds i8, i8* %55, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = load i8, i8* %65, align 1
  %69 = icmp eq i8 %67, %68
  br i1 %69, label %112, label %70

70:                                               ; preds = %56, %63, %112, %119, %44
  %71 = icmp eq i64 %45, 0
  %72 = select i1 %71, i64 %42, i64 %45
  %73 = add i64 %72, %46
  %74 = and i64 %73, %24
  br label %44

75:                                               ; preds = %51, %126
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %47, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = zext i32 %21 to i64
  br label %82

79:                                               ; preds = %44, %75, %12
  %80 = zext i32 %21 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %80
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi i64 [ %78, %77 ], [ %80, %79 ]
  %84 = phi %"struct.WTF::KeyValuePair"* [ %47, %77 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %83
  %87 = icmp eq %"struct.WTF::KeyValuePair"* %86, %84
  br i1 %87, label %111, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0
  store %"class.WTF::Vector"* inttoptr (i64 -1 to %"class.WTF::Vector"*), %"class.WTF::Vector"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 1
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, -1
  store i32 %98, i32* %96, align 4
  %99 = mul i32 %98, 6
  %100 = load i32, i32* %20, align 8
  %101 = icmp ult i32 %99, %100
  %102 = icmp ugt i32 %100, 8
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %111

104:                                              ; preds = %88
  %105 = lshr i32 %100, 1
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 4
  %108 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEEPN5blink18ParkableStringImplEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %107, i1 false) #18
  %109 = bitcast i8* %108 to %"struct.WTF::KeyValuePair"*
  %110 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %85, %"struct.WTF::KeyValuePair"* %109, i32 %105, %"struct.WTF::KeyValuePair"* null) #18
  br label %111

111:                                              ; preds = %82, %88, %104
  ret void

112:                                              ; preds = %63
  %113 = or i64 %58, 2
  %114 = getelementptr inbounds i8, i8* %57, i64 2
  %115 = getelementptr inbounds i8, i8* %55, i64 %113
  %116 = load i8, i8* %115, align 1
  %117 = load i8, i8* %114, align 1
  %118 = icmp eq i8 %116, %117
  br i1 %118, label %119, label %70

119:                                              ; preds = %112
  %120 = or i64 %58, 3
  %121 = getelementptr inbounds i8, i8* %57, i64 3
  %122 = getelementptr inbounds i8, i8* %55, i64 %120
  %123 = load i8, i8* %122, align 1
  %124 = load i8, i8* %121, align 1
  %125 = icmp eq i8 %123, %124
  br i1 %125, label %126, label %70

126:                                              ; preds = %119
  %127 = add nuw nsw i64 %58, 4
  %128 = getelementptr inbounds i8, i8* %57, i64 4
  %129 = icmp eq i64 %127, 32
  br i1 %129, label %75, label %56
}

declare zeroext i1 @_ZNK5blink18ParkableStringImpl10is_on_diskEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink18ParkableStringImpl9is_parkedEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_110MoveStringEPNS_18ParkableStringImplEPN3WTF7HashMapIPKNS3_6VectorIhLj32ENS3_18PartitionAllocatorEEES2_NS_21ParkableStringManager16SecureDigestHashENS3_10HashTraitsIS9_EENSC_IS2_EES6_EESG_(%"class.blink::ParkableStringImpl"* %1, %"class.WTF::HashMap"* %3, %"class.WTF::HashMap"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_110MoveStringEPNS_18ParkableStringImplEPN3WTF7HashMapIPKNS3_6VectorIhLj32ENS3_18PartitionAllocatorEEES2_NS_21ParkableStringManager16SecureDigestHashENS3_10HashTraitsIS9_EENSC_IS2_EES6_EESG_(%"class.blink::ParkableStringImpl"*, %"class.WTF::HashMap"*, %"class.WTF::HashMap"*) unnamed_addr #2 {
  %4 = alloca %"class.blink::ParkableStringImpl"*, align 8
  %5 = alloca %"class.WTF::Vector"*, align 8
  store %"class.blink::ParkableStringImpl"* %0, %"class.blink::ParkableStringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 6
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  br i1 %11, label %71, label %14

14:                                               ; preds = %3
  %15 = add i32 %13, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %8 to i32**
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, %15
  %21 = zext i32 %20 to i64
  %22 = xor i32 %19, -1
  %23 = lshr i32 %19, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = bitcast i32* %18 to i8*
  br label %36

36:                                               ; preds = %62, %14
  %37 = phi i64 [ 0, %14 ], [ %64, %62 ]
  %38 = phi i64 [ %21, %14 ], [ %66, %62 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %40, align 8
  %42 = ptrtoint %"class.WTF::Vector"* %41 to i64
  switch i64 %42, label %43 [
    i64 0, label %71
    i64 -1, label %62
  ]

43:                                               ; preds = %36
  %44 = icmp eq %"class.WTF::Vector"* %41, %8
  br i1 %44, label %67, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %125, %45
  %49 = phi i8* [ %35, %45 ], [ %127, %125 ]
  %50 = phi i64 [ 0, %45 ], [ %126, %125 ]
  %51 = getelementptr inbounds i8, i8* %47, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = load i8, i8* %49, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %55, label %62

55:                                               ; preds = %48
  %56 = or i64 %50, 1
  %57 = getelementptr inbounds i8, i8* %49, i64 1
  %58 = getelementptr inbounds i8, i8* %47, i64 %56
  %59 = load i8, i8* %58, align 1
  %60 = load i8, i8* %57, align 1
  %61 = icmp eq i8 %59, %60
  br i1 %61, label %111, label %62

62:                                               ; preds = %48, %55, %111, %118, %36
  %63 = icmp eq i64 %37, 0
  %64 = select i1 %63, i64 %34, i64 %37
  %65 = add i64 %64, %38
  %66 = and i64 %65, %16
  br label %36

67:                                               ; preds = %43, %125
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = zext i32 %13 to i64
  br label %74

71:                                               ; preds = %36, %67, %3
  %72 = zext i32 %13 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %72
  br label %74

74:                                               ; preds = %69, %71
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %39, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %75
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %78, %76
  br i1 %79, label %103, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0
  store %"class.WTF::Vector"* inttoptr (i64 -1 to %"class.WTF::Vector"*), %"class.WTF::Vector"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  %88 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, -1
  store i32 %90, i32* %88, align 4
  %91 = mul i32 %90, 6
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  %94 = icmp ugt i32 %92, 8
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %103

96:                                               ; preds = %80
  %97 = lshr i32 %92, 1
  %98 = zext i32 %97 to i64
  %99 = shl nuw nsw i64 %98, 4
  %100 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %99, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEEPN5blink18ParkableStringImplEEEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %100, i8 0, i64 %99, i1 false) #18
  %101 = bitcast i8* %100 to %"struct.WTF::KeyValuePair"*
  %102 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %77, %"struct.WTF::KeyValuePair"* %101, i32 %97, %"struct.WTF::KeyValuePair"* null) #18
  br label %103

103:                                              ; preds = %74, %80, %96
  %104 = bitcast %"class.WTF::Vector"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #18
  %105 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %4, align 8
  %106 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %106, align 8
  %108 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %107, i64 0, i32 6
  store %"class.WTF::Vector"* %108, %"class.WTF::Vector"** %5, align 8
  %109 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0
  %110 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6insertINS_17HashMapTranslatorISI_SD_S2_EES5_RS9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %109, %"class.WTF::Vector"** nonnull dereferenceable(8) %5, %"class.blink::ParkableStringImpl"** nonnull dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #18
  ret void

111:                                              ; preds = %55
  %112 = or i64 %50, 2
  %113 = getelementptr inbounds i8, i8* %49, i64 2
  %114 = getelementptr inbounds i8, i8* %47, i64 %112
  %115 = load i8, i8* %114, align 1
  %116 = load i8, i8* %113, align 1
  %117 = icmp eq i8 %115, %116
  br i1 %117, label %118, label %62

118:                                              ; preds = %111
  %119 = or i64 %50, 3
  %120 = getelementptr inbounds i8, i8* %49, i64 3
  %121 = getelementptr inbounds i8, i8* %47, i64 %119
  %122 = load i8, i8* %121, align 1
  %123 = load i8, i8* %120, align 1
  %124 = icmp eq i8 %122, %123
  br i1 %124, label %125, label %62

125:                                              ; preds = %118
  %126 = add nuw nsw i64 %50, 4
  %127 = getelementptr inbounds i8, i8* %49, i64 4
  %128 = icmp eq i64 %126, 32
  br i1 %128, label %67, label %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager15OnWrittenToDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9
  tail call fastcc void @_ZN5blink12_GLOBAL__N_110MoveStringEPNS_18ParkableStringImplEPN3WTF7HashMapIPKNS3_6VectorIhLj32ENS3_18PartitionAllocatorEEES2_NS_21ParkableStringManager16SecureDigestHashENS3_10HashTraitsIS9_EENSC_IS2_EES6_EESG_(%"class.blink::ParkableStringImpl"* %1, %"class.WTF::HashMap"* %3, %"class.WTF::HashMap"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager14OnReadFromDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  tail call fastcc void @_ZN5blink12_GLOBAL__N_110MoveStringEPNS_18ParkableStringImplEPN3WTF7HashMapIPKNS3_6VectorIhLj32ENS3_18PartitionAllocatorEEES2_NS_21ParkableStringManager16SecureDigestHashENS3_10HashTraitsIS9_EENSC_IS2_EES6_EESG_(%"class.blink::ParkableStringImpl"* %1, %"class.WTF::HashMap"* %3, %"class.WTF::HashMap"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager10OnUnparkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  tail call fastcc void @_ZN5blink12_GLOBAL__N_110MoveStringEPNS_18ParkableStringImplEPN3WTF7HashMapIPKNS3_6VectorIhLj32ENS3_18PartitionAllocatorEEES2_NS_21ParkableStringManager16SecureDigestHashENS3_10HashTraitsIS9_EENSC_IS2_EES6_EESG_(%"class.blink::ParkableStringImpl"* %1, %"class.WTF::HashMap"* %3, %"class.WTF::HashMap"* %4)
  tail call void @_ZN5blink21ParkableStringManager25ScheduleAgingTaskIfNeededEv(%"class.blink::ParkableStringManager"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager7ParkAllENS_18ParkableStringImpl11ParkingModeE(%"class.blink::ParkableStringManager"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::Vector.270", align 8
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %25, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %12
  br i1 %21, label %25, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %12
  br i1 %24, label %25, label %36

25:                                               ; preds = %19, %36, %50, %47, %2, %22
  %26 = bitcast %"class.WTF::Vector.270"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #18
  %27 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %3, i64 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  %30 = bitcast %"class.WTF::Vector.270"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_116EnumerateStringsERKN3WTF7HashMapIPKNS1_6VectorIhLj32ENS1_18PartitionAllocatorEEEPNS_18ParkableStringImplENS_21ParkableStringManager16SecureDigestHashENS1_10HashTraitsIS7_EENSC_IS9_EES4_EE(%"class.WTF::Vector.270"* nonnull sret %3, %"class.WTF::HashMap"* dereferenceable(24) %29)
  %31 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %27, align 8
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %54, label %64

36:                                               ; preds = %22, %50
  %37 = phi %"struct.WTF::KeyValuePair"* [ %44, %50 ], [ %23, %22 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 1
  %39 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %38, align 8
  %40 = tail call i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"* %39) #18
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %12
  br i1 %42, label %25, label %43

43:                                               ; preds = %36, %47
  %44 = phi %"struct.WTF::KeyValuePair"* [ %48, %47 ], [ %41, %36 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  switch i64 %46, label %50 [
    i64 -1, label %47
    i64 0, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, %12
  br i1 %49, label %25, label %43

50:                                               ; preds = %43
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %44, %12
  br i1 %51, label %25, label %36

52:                                               ; preds = %64
  %53 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %27, align 8
  br label %54

54:                                               ; preds = %52, %25
  %55 = phi %"class.blink::ParkableStringImpl"** [ %53, %52 ], [ %31, %25 ]
  %56 = icmp eq %"class.blink::ParkableStringImpl"** %55, null
  %57 = bitcast %"class.blink::ParkableStringImpl"** %55 to i8*
  br i1 %56, label %63, label %58, !prof !3

58:                                               ; preds = %54
  %59 = load i32, i32* %28, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !4

61:                                               ; preds = %58
  store i32 0, i32* %28, align 4
  br label %62

62:                                               ; preds = %61, %58
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #18
  store %"class.blink::ParkableStringImpl"** null, %"class.blink::ParkableStringImpl"*** %27, align 8
  br label %63

63:                                               ; preds = %54, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #18
  ret void

64:                                               ; preds = %25, %64
  %65 = phi %"class.blink::ParkableStringImpl"** [ %69, %64 ], [ %31, %25 ]
  %66 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %65, align 8
  %67 = call zeroext i1 @_ZN5blink18ParkableStringImpl4ParkENS0_11ParkingModeE(%"class.blink::ParkableStringImpl"* %66, i32 %1) #18
  %68 = call i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"* %66) #18
  %69 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %65, i64 1
  %70 = icmp eq %"class.blink::ParkableStringImpl"** %69, %34
  br i1 %70, label %52, label %64
}

declare i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_116EnumerateStringsERKN3WTF7HashMapIPKNS1_6VectorIhLj32ENS1_18PartitionAllocatorEEEPNS_18ParkableStringImplENS_21ParkableStringManager16SecureDigestHashENS1_10HashTraitsIS7_EENSC_IS9_EES4_EE(%"class.WTF::Vector.270"* noalias sret, %"class.WTF::HashMap"* nocapture readonly dereferenceable(24)) unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.270"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #18
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %20, label %10, !prof !4

10:                                               ; preds = %2
  %11 = zext i32 %8 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18ParkableStringImplEEEmm(i64 %11) #18
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %12, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18ParkableStringImplEEEPKcv, i64 0, i64 0)) #18
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load i32, i32* %7, align 4
  %17 = lshr i64 %12, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %4, align 8
  %19 = icmp eq i32 %16, 0
  br label %20

20:                                               ; preds = %2, %10
  %21 = phi i32 [ %18, %10 ], [ 0, %2 ]
  %22 = phi i1 [ %19, %10 ], [ true, %2 ]
  %23 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 %27
  br i1 %22, label %41, label %29

29:                                               ; preds = %20
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %35
  %32 = phi %"struct.WTF::KeyValuePair"* [ %36, %35 ], [ %24, %29 ]
  %33 = bitcast %"struct.WTF::KeyValuePair"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %38 [
    i64 -1, label %35
    i64 0, label %35
  ]

35:                                               ; preds = %31, %31
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %28
  br i1 %37, label %41, label %31

38:                                               ; preds = %31, %29
  %39 = phi %"struct.WTF::KeyValuePair"* [ %24, %29 ], [ %32, %31 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, %28
  br i1 %40, label %41, label %42

41:                                               ; preds = %35, %58, %68, %65, %20, %38
  ret void

42:                                               ; preds = %38, %70
  %43 = phi i32 [ %71, %70 ], [ %21, %38 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ %62, %70 ], [ %39, %38 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 1
  %46 = load i32, i32* %5, align 4
  %47 = icmp eq i32 %46, %43
  br i1 %47, label %57, label %48, !prof !4

48:                                               ; preds = %42
  %49 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %3, align 8
  %50 = zext i32 %46 to i64
  %51 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %49, i64 %50
  %52 = bitcast %"class.blink::ParkableStringImpl"** %45 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::ParkableStringImpl"** %51 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load i32, i32* %5, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %5, align 4
  br label %58

57:                                               ; preds = %42
  tail call void @_ZN3WTF6VectorIPN5blink18ParkableStringImplELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.270"* %0, %"class.blink::ParkableStringImpl"** dereferenceable(8) %45) #18
  br label %58

58:                                               ; preds = %48, %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %28
  br i1 %60, label %41, label %61

61:                                               ; preds = %58, %65
  %62 = phi %"struct.WTF::KeyValuePair"* [ %66, %65 ], [ %59, %58 ]
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %68 [
    i64 -1, label %65
    i64 0, label %65
  ]

65:                                               ; preds = %61, %61
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 1
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, %28
  br i1 %67, label %41, label %61

68:                                               ; preds = %61
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %62, %28
  br i1 %69, label %41, label %70

70:                                               ; preds = %68
  %71 = load i32, i32* %4, align 8
  br label %42
}

declare zeroext i1 @_ZN5blink18ParkableStringImpl4ParkENS0_11ParkingModeE(%"class.blink::ParkableStringImpl"*, i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink21ParkableStringManager4SizeEv(%"class.blink::ParkableStringManager"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = zext i32 %6 to i64
  ret i64 %7
}

declare void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8*, i64) local_unnamed_addr #6

declare void @_ZN4base24UmaHistogramCounts100000EPKci(i8*, i32) local_unnamed_addr #6

declare void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseEPKci(i8*, i32) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink8features30IsParkableStringsToDiskEnabledEv() local_unnamed_addr #6

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager17AgeStringsAndParkEv(%"class.blink::ParkableStringManager"*) #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.WTF::Vector.270", align 8
  %4 = alloca %"class.WTF::Vector.270", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !3

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %10 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 0
  store i8 0, i8* %18, align 8
  %19 = bitcast %"class.WTF::Vector.270"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %3, i64 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  %23 = bitcast %"class.WTF::Vector.270"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_116EnumerateStringsERKN3WTF7HashMapIPKNS1_6VectorIhLj32ENS1_18PartitionAllocatorEEEPNS_18ParkableStringImplENS_21ParkableStringManager16SecureDigestHashENS1_10HashTraitsIS7_EENSC_IS9_EES4_EE(%"class.WTF::Vector.270"* nonnull sret %3, %"class.WTF::HashMap"* dereferenceable(24) %22)
  %24 = bitcast %"class.WTF::Vector.270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %4, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  %28 = bitcast %"class.WTF::Vector.270"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_116EnumerateStringsERKN3WTF7HashMapIPKNS1_6VectorIhLj32ENS1_18PartitionAllocatorEEEPNS_18ParkableStringImplENS_21ParkableStringManager16SecureDigestHashENS1_10HashTraitsIS7_EENSC_IS9_EES4_EE(%"class.WTF::Vector.270"* nonnull sret %4, %"class.WTF::HashMap"* dereferenceable(24) %27)
  %29 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %20, align 8
  %30 = load i32, i32* %21, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %41, %14
  %35 = phi i8 [ 0, %14 ], [ %47, %41 ]
  %36 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %25, align 8
  %37 = load i32, i32* %26, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %50, label %55

41:                                               ; preds = %14, %41
  %42 = phi i8 [ %47, %41 ], [ 0, %14 ]
  %43 = phi %"class.blink::ParkableStringImpl"** [ %48, %41 ], [ %29, %14 ]
  %44 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %43, align 8
  %45 = call i32 @_ZN5blink18ParkableStringImpl20MaybeAgeOrParkStringEv(%"class.blink::ParkableStringImpl"* %44) #18
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i8 1, i8 %42
  %48 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %43, i64 1
  %49 = icmp eq %"class.blink::ParkableStringImpl"** %48, %32
  br i1 %49, label %34, label %41

50:                                               ; preds = %55, %34
  %51 = phi i8 [ %35, %34 ], [ %61, %55 ]
  %52 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %68

55:                                               ; preds = %34, %55
  %56 = phi %"class.blink::ParkableStringImpl"** [ %62, %55 ], [ %36, %34 ]
  %57 = phi i8 [ %61, %55 ], [ %35, %34 ]
  %58 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %56, align 8
  %59 = call i32 @_ZN5blink18ParkableStringImpl20MaybeAgeOrParkStringEv(%"class.blink::ParkableStringImpl"* %58) #18
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, i8 1, i8 %57
  %62 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %56, i64 1
  %63 = icmp eq %"class.blink::ParkableStringImpl"** %62, %39
  br i1 %63, label %50, label %55

64:                                               ; preds = %50
  %65 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %64, %50
  %69 = and i8 %51, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  call void @_ZN5blink21ParkableStringManager25ScheduleAgingTaskIfNeededEv(%"class.blink::ParkableStringManager"* %0)
  br label %72

72:                                               ; preds = %68, %64, %71
  %73 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %25, align 8
  %74 = icmp eq %"class.blink::ParkableStringImpl"** %73, null
  %75 = bitcast %"class.blink::ParkableStringImpl"** %73 to i8*
  br i1 %74, label %81, label %76, !prof !3

76:                                               ; preds = %72
  %77 = load i32, i32* %26, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79, !prof !4

79:                                               ; preds = %76
  store i32 0, i32* %26, align 4
  br label %80

80:                                               ; preds = %79, %76
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %75) #18
  store %"class.blink::ParkableStringImpl"** null, %"class.blink::ParkableStringImpl"*** %25, align 8
  br label %81

81:                                               ; preds = %72, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  %82 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %20, align 8
  %83 = icmp eq %"class.blink::ParkableStringImpl"** %82, null
  %84 = bitcast %"class.blink::ParkableStringImpl"** %82 to i8*
  br i1 %83, label %90, label %85, !prof !3

85:                                               ; preds = %81
  %86 = load i32, i32* %21, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !4

88:                                               ; preds = %85
  store i32 0, i32* %21, align 4
  br label %89

89:                                               ; preds = %88, %85
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %84) #18
  store %"class.blink::ParkableStringImpl"** null, %"class.blink::ParkableStringImpl"*** %20, align 8
  br label %90

90:                                               ; preds = %81, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #18
  %91 = icmp eq i8* %17, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %90
  %93 = load i8, i8* %17, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #18
  br label %96

96:                                               ; preds = %90, %92, %95
  ret void
}

declare i32 @_ZN5blink18ParkableStringImpl20MaybeAgeOrParkStringEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager11PurgeMemoryEv(%"class.blink::ParkableStringManager"* nocapture readonly) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5blink21ParkableStringManager7ParkAllENS_18ParkableStringImpl11ParkingModeE(%"class.blink::ParkableStringManager"* %0, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManager15ResetForTestingEv(%"class.blink::ParkableStringManager"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %8 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7, i32 0, i32 1
  %13 = bitcast %"struct.WTF::KeyValuePair"* %9 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #18
  %14 = bitcast %"class.WTF::HashMap"* %6 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store i32 0, i32* %12, align 8
  %15 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 7, i32 0, i32 2
  store i32 0, i32* %15, align 4
  br label %16

16:                                               ; preds = %1, %11
  %17 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %18, align 8
  %20 = icmp eq %"struct.WTF::KeyValuePair"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 1
  %23 = bitcast %"struct.WTF::KeyValuePair"* %19 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #18
  %24 = bitcast %"class.WTF::HashMap"* %17 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store i32 0, i32* %22, align 8
  %25 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8, i32 0, i32 2
  store i32 0, i32* %25, align 4
  br label %26

26:                                               ; preds = %16, %21
  %27 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9
  %28 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %27, i64 0, i32 0, i32 0
  %29 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9, i32 0, i32 1
  %33 = bitcast %"struct.WTF::KeyValuePair"* %29 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #18
  %34 = bitcast %"class.WTF::HashMap"* %27 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  store i32 0, i32* %32, align 8
  %35 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9, i32 0, i32 2
  store i32 0, i32* %35, align 4
  br label %36

36:                                               ; preds = %26, %31
  %37 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %38 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %37, align 8
  store %"class.blink::DiskDataAllocator"* null, %"class.blink::DiskDataAllocator"** %37, align 8
  %39 = icmp eq %"class.blink::DiskDataAllocator"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::DiskDataAllocator"* %38 to void (%"class.blink::DiskDataAllocator"*)***
  %42 = load void (%"class.blink::DiskDataAllocator"*)**, void (%"class.blink::DiskDataAllocator"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %42, i64 1
  %44 = load void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %43, align 8
  tail call void %44(%"class.blink::DiskDataAllocator"* nonnull %38) #18
  br label %45

45:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParkableStringManagerC2Ev(%"class.blink::ParkableStringManager"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 8
  %7 = bitcast %"class.WTF::HashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #18
  %8 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 9
  %9 = bitcast %"class.WTF::HashMap"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #18
  %10 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %0, i64 0, i32 10
  %11 = bitcast %"class.std::__1::unique_ptr.54"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 52, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

declare dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() local_unnamed_addr #6

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #6

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6insertINS_17HashMapTranslatorISI_SD_S2_EES5_RS9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::Vector"** dereferenceable(8), %"class.blink::ParkableStringImpl"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.WTF::Vector"** %1 to i32***
  %17 = load i32**, i32*** %16, align 8
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, %14
  %21 = zext i32 %20 to i64
  %22 = bitcast i32** %17 to %"class.WTF::Vector"*
  %23 = xor i32 %19, -1
  %24 = lshr i32 %19, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  %36 = ptrtoint i32** %17 to i64
  %37 = bitcast i32* %18 to i8*
  br label %38

38:                                               ; preds = %65, %10
  %39 = phi i64 [ 0, %10 ], [ %68, %65 ]
  %40 = phi i64 [ %21, %10 ], [ %70, %65 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %66, %65 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  %44 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %43, align 8
  %45 = ptrtoint %"class.WTF::Vector"* %44 to i64
  switch i64 %45, label %46 [
    i64 0, label %71
    i64 -1, label %65
  ]

46:                                               ; preds = %38
  %47 = icmp eq %"class.WTF::Vector"* %44, %22
  br i1 %47, label %102, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %44, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %121, %48
  %52 = phi i8* [ %37, %48 ], [ %123, %121 ]
  %53 = phi i64 [ 0, %48 ], [ %122, %121 ]
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = load i8, i8* %52, align 1
  %57 = icmp eq i8 %55, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = or i64 %53, 1
  %60 = getelementptr inbounds i8, i8* %52, i64 1
  %61 = getelementptr inbounds i8, i8* %50, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = load i8, i8* %60, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %107, label %65

65:                                               ; preds = %51, %58, %107, %114, %38
  %66 = phi %"struct.WTF::KeyValuePair"* [ %42, %38 ], [ %41, %114 ], [ %41, %107 ], [ %41, %58 ], [ %41, %51 ]
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %35, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %15
  br label %38

71:                                               ; preds = %38
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %71
  %74 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 16, i1 false) #18
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = bitcast %"class.WTF::Vector"** %1 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %71, %73
  %84 = phi i64 [ %82, %73 ], [ %36, %71 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %41, %73 ], [ %42, %71 ]
  %86 = bitcast %"struct.WTF::KeyValuePair"* %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %88 = bitcast %"class.blink::ParkableStringImpl"** %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::ParkableStringImpl"** %87 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, %93
  %97 = shl i32 %96, 1
  %98 = load i32, i32* %12, align 8
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %83
  %101 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %85)
  br label %102

102:                                              ; preds = %46, %121, %83, %100
  %103 = phi i8 [ 1, %83 ], [ 1, %100 ], [ 0, %121 ], [ 0, %46 ]
  %104 = phi %"struct.WTF::KeyValuePair"* [ %85, %83 ], [ %101, %100 ], [ %42, %121 ], [ %42, %46 ]
  %105 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %104, 0
  %106 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %105, i8 %103, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %106

107:                                              ; preds = %58
  %108 = or i64 %53, 2
  %109 = getelementptr inbounds i8, i8* %52, i64 2
  %110 = getelementptr inbounds i8, i8* %50, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = load i8, i8* %109, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %114, label %65

114:                                              ; preds = %107
  %115 = or i64 %53, 3
  %116 = getelementptr inbounds i8, i8* %52, i64 3
  %117 = getelementptr inbounds i8, i8* %50, i64 %115
  %118 = load i8, i8* %117, align 1
  %119 = load i8, i8* %116, align 1
  %120 = icmp eq i8 %118, %119
  br i1 %120, label %121, label %65

121:                                              ; preds = %114
  %122 = add nuw nsw i64 %53, 4
  %123 = getelementptr inbounds i8, i8* %52, i64 4
  %124 = icmp eq i64 %122, 32
  br i1 %124, label %102, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i8* %22, i8* %23) #18
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.29, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEEPN5blink18ParkableStringImplEEEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #18
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #18
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E8RehashToEPSA_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %108
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %109, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %112, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #18
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %108
  %32 = phi i64 [ %17, %13 ], [ %109, %108 ]
  %33 = phi i32 [ %7, %13 ], [ %110, %108 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %111, %108 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %112, %108 ]
  %36 = phi i32 [ 0, %13 ], [ %113, %108 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = bitcast %"struct.WTF::KeyValuePair"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %108
    i64 0, label %108
  ]

41:                                               ; preds = %31
  %42 = inttoptr i64 %40 to i32**
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, %14
  %46 = zext i32 %45 to i64
  %47 = xor i32 %44, -1
  %48 = lshr i32 %44, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  %60 = inttoptr i64 %40 to %"class.WTF::Vector"*
  %61 = bitcast i32* %43 to i8*
  br label %62

62:                                               ; preds = %92, %41
  %63 = phi %"struct.WTF::KeyValuePair"* [ null, %41 ], [ %93, %92 ]
  %64 = phi i64 [ 0, %41 ], [ %95, %92 ]
  %65 = phi i64 [ %46, %41 ], [ %97, %92 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %68 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %67, align 8
  %69 = ptrtoint %"class.WTF::Vector"* %68 to i64
  switch i64 %69, label %73 [
    i64 0, label %70
    i64 -1, label %92
  ]

70:                                               ; preds = %62
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %63, null
  %72 = select i1 %71, %"struct.WTF::KeyValuePair"* %66, %"struct.WTF::KeyValuePair"* %63
  br label %98

73:                                               ; preds = %62
  %74 = icmp eq %"class.WTF::Vector"* %68, %60
  br i1 %74, label %98, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %68, i64 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %129, %75
  %79 = phi i8* [ %61, %75 ], [ %131, %129 ]
  %80 = phi i64 [ 0, %75 ], [ %130, %129 ]
  %81 = getelementptr inbounds i8, i8* %77, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = load i8, i8* %79, align 1
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %85, label %92

85:                                               ; preds = %78
  %86 = or i64 %80, 1
  %87 = getelementptr inbounds i8, i8* %79, i64 1
  %88 = getelementptr inbounds i8, i8* %77, i64 %86
  %89 = load i8, i8* %88, align 1
  %90 = load i8, i8* %87, align 1
  %91 = icmp eq i8 %89, %90
  br i1 %91, label %115, label %92

92:                                               ; preds = %78, %85, %115, %122, %62
  %93 = phi %"struct.WTF::KeyValuePair"* [ %66, %62 ], [ %63, %122 ], [ %63, %115 ], [ %63, %85 ], [ %63, %78 ]
  %94 = icmp eq i64 %64, 0
  %95 = select i1 %94, i64 %59, i64 %64
  %96 = add i64 %95, %65
  %97 = and i64 %96, %15
  br label %62

98:                                               ; preds = %73, %129, %70
  %99 = phi %"struct.WTF::KeyValuePair"* [ %72, %70 ], [ %66, %129 ], [ %66, %73 ]
  %100 = bitcast %"struct.WTF::KeyValuePair"* %99 to i8*
  %101 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #18
  %102 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %102, i64 %37
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %103, %3
  %105 = select i1 %104, %"struct.WTF::KeyValuePair"* %99, %"struct.WTF::KeyValuePair"* %35
  %106 = load i32, i32* %6, align 8
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %102 to i64
  br label %108

108:                                              ; preds = %31, %31, %98
  %109 = phi i64 [ %32, %31 ], [ %107, %98 ], [ %32, %31 ]
  %110 = phi i32 [ %33, %31 ], [ %106, %98 ], [ %33, %31 ]
  %111 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %102, %98 ], [ %34, %31 ]
  %112 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %105, %98 ], [ %35, %31 ]
  %113 = add i32 %36, 1
  %114 = icmp eq i32 %113, %110
  br i1 %114, label %18, label %31

115:                                              ; preds = %85
  %116 = or i64 %80, 2
  %117 = getelementptr inbounds i8, i8* %79, i64 2
  %118 = getelementptr inbounds i8, i8* %77, i64 %116
  %119 = load i8, i8* %118, align 1
  %120 = load i8, i8* %117, align 1
  %121 = icmp eq i8 %119, %120
  br i1 %121, label %122, label %92

122:                                              ; preds = %115
  %123 = or i64 %80, 3
  %124 = getelementptr inbounds i8, i8* %79, i64 3
  %125 = getelementptr inbounds i8, i8* %77, i64 %123
  %126 = load i8, i8* %125, align 1
  %127 = load i8, i8* %124, align 1
  %128 = icmp eq i8 %126, %127
  br i1 %128, label %129, label %92

129:                                              ; preds = %122
  %130 = add nuw nsw i64 %80, 4
  %131 = getelementptr inbounds i8, i8* %79, i64 4
  %132 = icmp eq i64 %130, 32
  br i1 %132, label %98, label %78
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18ParkableStringImplEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.33, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink18ParkableStringImplELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.270"*, %"class.blink::ParkableStringImpl"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %6, align 8
  %8 = icmp ugt %"class.blink::ParkableStringImpl"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %7, i64 %10
  %12 = icmp ugt %"class.blink::ParkableStringImpl"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::ParkableStringImpl"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18ParkableStringImplEEEmm(i64 %26) #18
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18ParkableStringImplEEEPKcv, i64 0, i64 0)) #18
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::ParkableStringImpl"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::ParkableStringImpl"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::ParkableStringImpl"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.270"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #18
  %51 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::ParkableStringImpl"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::ParkableStringImpl"** %1 to i64
  %56 = ptrtoint %"class.blink::ParkableStringImpl"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::ParkableStringImpl"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18ParkableStringImplEEEmm(i64 %71) #18
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18ParkableStringImplEEEPKcv, i64 0, i64 0)) #18
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::ParkableStringImpl"**, %"class.blink::ParkableStringImpl"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::ParkableStringImpl"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::ParkableStringImpl"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #18
  %87 = bitcast %"class.WTF::Vector.270"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #18
  %91 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::ParkableStringImpl"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::ParkableStringImpl"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::ParkableStringImpl"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::ParkableStringImpl"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %100, i64 %103
  %105 = bitcast %"class.blink::ParkableStringImpl"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::ParkableStringImpl"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #6

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #6

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #12

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #16

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #10 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #18
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6insertINS_17HashMapTranslatorISI_SD_S2_EES5_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::Vector"** dereferenceable(8), %"class.blink::ParkableStringImpl"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.WTF::Vector"** %1 to i32***
  %17 = load i32**, i32*** %16, align 8
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, %14
  %21 = zext i32 %20 to i64
  %22 = bitcast i32** %17 to %"class.WTF::Vector"*
  %23 = xor i32 %19, -1
  %24 = lshr i32 %19, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  %36 = ptrtoint i32** %17 to i64
  %37 = bitcast i32* %18 to i8*
  br label %38

38:                                               ; preds = %65, %10
  %39 = phi i64 [ 0, %10 ], [ %68, %65 ]
  %40 = phi i64 [ %21, %10 ], [ %70, %65 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %66, %65 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  %44 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %43, align 8
  %45 = ptrtoint %"class.WTF::Vector"* %44 to i64
  switch i64 %45, label %46 [
    i64 0, label %71
    i64 -1, label %65
  ]

46:                                               ; preds = %38
  %47 = icmp eq %"class.WTF::Vector"* %44, %22
  br i1 %47, label %102, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %44, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %121, %48
  %52 = phi i8* [ %37, %48 ], [ %123, %121 ]
  %53 = phi i64 [ 0, %48 ], [ %122, %121 ]
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = load i8, i8* %52, align 1
  %57 = icmp eq i8 %55, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = or i64 %53, 1
  %60 = getelementptr inbounds i8, i8* %52, i64 1
  %61 = getelementptr inbounds i8, i8* %50, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = load i8, i8* %60, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %107, label %65

65:                                               ; preds = %51, %58, %107, %114, %38
  %66 = phi %"struct.WTF::KeyValuePair"* [ %42, %38 ], [ %41, %114 ], [ %41, %107 ], [ %41, %58 ], [ %41, %51 ]
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %35, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %15
  br label %38

71:                                               ; preds = %38
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %71
  %74 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 16, i1 false) #18
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = bitcast %"class.WTF::Vector"** %1 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %71, %73
  %84 = phi i64 [ %82, %73 ], [ %36, %71 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %41, %73 ], [ %42, %71 ]
  %86 = bitcast %"struct.WTF::KeyValuePair"* %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %88 = bitcast %"class.blink::ParkableStringImpl"** %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::ParkableStringImpl"** %87 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, %93
  %97 = shl i32 %96, 1
  %98 = load i32, i32* %12, align 8
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %83
  %101 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKNS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS5_PN5blink18ParkableStringImplEEENS_24KeyValuePairKeyExtractorENS7_21ParkableStringManager16SecureDigestHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_S2_E6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %85)
  br label %102

102:                                              ; preds = %46, %121, %83, %100
  %103 = phi i8 [ 1, %83 ], [ 1, %100 ], [ 0, %121 ], [ 0, %46 ]
  %104 = phi %"struct.WTF::KeyValuePair"* [ %85, %83 ], [ %101, %100 ], [ %42, %121 ], [ %42, %46 ]
  %105 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %104, 0
  %106 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %105, i8 %103, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %106

107:                                              ; preds = %58
  %108 = or i64 %53, 2
  %109 = getelementptr inbounds i8, i8* %52, i64 2
  %110 = getelementptr inbounds i8, i8* %50, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = load i8, i8* %109, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %114, label %65

114:                                              ; preds = %107
  %115 = or i64 %53, 3
  %116 = getelementptr inbounds i8, i8* %52, i64 3
  %117 = getelementptr inbounds i8, i8* %50, i64 %115
  %118 = load i8, i8* %117, align 1
  %119 = load i8, i8* %116, align 1
  %120 = icmp eq i8 %118, %119
  br i1 %120, label %121, label %65

121:                                              ; preds = %114
  %122 = add nuw nsw i64 %53, 4
  %123 = getelementptr inbounds i8, i8* %52, i64 4
  %124 = icmp eq i64 %122, 32
  br i1 %124, label %102, label %51
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #6

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #6

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #6

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::GarbageCollectedMixin"*
  %4 = bitcast i8* %1 to void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)**, void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)*, void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::GarbageCollectedMixin"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE8FinalizeEPv(i8*) #2 align 2 {
  %2 = bitcast i8* %0 to %"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*
  %3 = bitcast i8* %0 to void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)***
  %4 = load void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)**, void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)*, void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)** %4, i64 1
  %6 = load void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)*, void (%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"*)** %5, align 8
  tail call void %6(%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"* %2) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_121OnPurgeMemoryListenerEE7GetNameEPKv(i8* nocapture readnone) #3 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121OnPurgeMemoryListenerD0Ev(%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"* nocapture) unnamed_addr #17 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22MemoryPressureListener16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.blink::MemoryPressureListener"*, i32) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121OnPurgeMemoryListener13OnPurgeMemoryEv(%"class.blink::(anonymous namespace)::OnPurgeMemoryListener"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features24kCompressParkableStringsE) #18
  br i1 %2, label %3, label %20

3:                                                ; preds = %1
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance) #18
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %6
  %10 = tail call noalias i8* @malloc(i64 120) #18
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %10, i64 2
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = getelementptr inbounds i8, i8* %10, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #18
  %15 = getelementptr inbounds i8, i8* %10, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #18
  %16 = getelementptr inbounds i8, i8* %10, i64 112
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 52, i1 false) #18
  store i8* %10, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink21ParkableStringManager8InstanceEvE10s_instance) #18
  br label %18

18:                                               ; preds = %3, %6, %9
  %19 = load %"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringManager"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink21ParkableStringManager8InstanceEvE10s_instance, i64 0, i32 0, i32 0), align 8
  tail call void @_ZN5blink21ParkableStringManager7ParkAllENS_18ParkableStringImpl11ParkingModeE(%"class.blink::ParkableStringManager"* %19, i32 1) #18
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22MemoryPressureListenerD2Ev(%"class.blink::MemoryPressureListener"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ParkableStringManager"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ParkableStringManager"*)**
  %21 = load void (%"class.blink::ParkableStringManager"*)*, void (%"class.blink::ParkableStringManager"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ParkableStringManager"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ParkableStringManager"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ParkableStringManager"* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ParkableStringManager"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ParkableStringManager"*)**
  %21 = load void (%"class.blink::ParkableStringManager"*)*, void (%"class.blink::ParkableStringManager"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ParkableStringManager"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ParkableStringManager"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ParkableStringManager"* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ParkableStringManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN5blink21ParkableStringManagerEKFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN5blink21ParkableStringManagerEKFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ParkableStringManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN5blink21ParkableStringManagerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN5blink21ParkableStringManagerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
