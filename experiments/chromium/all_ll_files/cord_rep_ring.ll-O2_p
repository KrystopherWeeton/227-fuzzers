; ModuleID = '../../third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc'
source_filename = "../../third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.absl::cord_internal::CordRepRing" = type { %"struct.absl::cord_internal::CordRep.base", i32, i32, i32, i64, [8 x i8] }
%"struct.absl::cord_internal::CordRep.base" = type <{ i64, %"class.absl::cord_internal::Refcount", i8, [1 x i8] }>
%"class.absl::cord_internal::Refcount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.absl::cord_internal::CordRep" = type <{ i64, %"class.absl::cord_internal::Refcount", i8, [1 x i8], [2 x i8] }>
%"struct.absl::cord_internal::CordRepExternal" = type { %"struct.absl::cord_internal::CordRep.base", i8*, void (%"struct.absl::cord_internal::CordRepExternal"*)* }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.17" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.17" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Allocated", [944 x i8] }
%"struct.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Allocated" = type { %struct.Entry*, i64 }
%struct.Entry = type { %"struct.absl::cord_internal::CordRep"*, i64, i64 }
%"class.absl::InlinedVector.25" = type { %"class.absl::inlined_vector_internal::Storage.26" }
%"class.absl::inlined_vector_internal::Storage.26" = type { %"class.absl::container_internal::CompressedTuple.27", %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.32" }
%"class.absl::container_internal::CompressedTuple.27" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.17" }
%"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.32" = type { %"struct.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Allocated.33", [944 x i8] }
%"struct.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Allocated.33" = type { %struct.Entry.34*, i64 }
%struct.Entry.34 = type { %"struct.absl::cord_internal::CordRep"*, i64, i64 }
%"class.absl::cord_internal::CordRepRing::Filler" = type { %"class.absl::cord_internal::CordRepRing"*, i32, i32 }
%class.anon.13 = type { %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing"**, i64* }
%class.anon.14 = type { %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing::Filler"*, i64* }
%"class.absl::InlinedVector.49" = type { %"class.absl::inlined_vector_internal::Storage.50" }
%"class.absl::inlined_vector_internal::Storage.50" = type { %"class.absl::container_internal::CompressedTuple.51", %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.56" }
%"class.absl::container_internal::CompressedTuple.51" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.52" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.52" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.17" }
%"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.56" = type { %"struct.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Allocated.57", [944 x i8] }
%"struct.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Allocated.57" = type { %struct.Entry.58*, i64 }
%struct.Entry.58 = type { %"struct.absl::cord_internal::CordRep"*, i64, i64 }
%class.anon.47 = type { %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing"**, i64* }
%class.anon.48 = type { %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing::Filler"*, i64* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE0EEEPS1_S4_S4_mm = comdat any

$_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE1EEEPS1_S4_S4_mm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE0EEEPS1_S5_S5_mmEUljE_EEvjjOT_ = comdat any

$_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE0EEEPS1_S5_S5_mmEUljE0_EEvjjOT_ = comdat any

$_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE1EEEPS1_S5_S5_mmEUljE_EEvjjOT_ = comdat any

$_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE1EEEPS1_S5_S5_mmEUljE0_EEvjjOT_ = comdat any

@.str = private unnamed_addr constant [15 x i8] c"  CordRepRing(\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c", length = \00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c", head = \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c", tail = \00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c", cap = \00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c", rc = \00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c", begin_pos_ = \00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c") {\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c" entry[\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"] length = \00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c", child \00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c", clen = \00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c", tag = \00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c", offset = \00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c", end_pos = \00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@_ZN4absl13cord_internal11CordRepRing12kMaxCapacityE = hidden local_unnamed_addr constant i64 4294967295, align 8
@.str.17 = private unnamed_addr constant [14 x i8] c"capacity == 0\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"head \00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c" and/or tail \00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"exceed capacity \00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"length \00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c" does not match positional length \00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c" from begin_pos \00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c" and entry[\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"].end_pos \00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"entry[\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"] has an invalid length \00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c" and end_pos \00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"].child == nullptr\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"].child has an invalid tag \00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"] has offset \00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c" and entry length \00", align 1
@.str.33 = private unnamed_addr constant [45 x i8] c" which are outside of the child's length of \00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"Maximum capacity exceeded\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4absl13cord_internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_11CordRepRingE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.absl::cord_internal::CordRepRing"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 14) #12
  %4 = bitcast %"class.absl::cord_internal::CordRepRing"* %1 to i8*
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %3, i8* %4) #12
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %6, i64 %8) #12
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #12
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %10, i32 %12) #12
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #12
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %14, i32 %16) #12
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #12
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %18, i32 %20) #12
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #12
  %23 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = ashr i32 %24, 1
  %26 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %22, i32 %25) #12
  %27 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 15) #12
  %28 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %27, i64 %29) #12
  %31 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #12
  %32 = load i32, i32* %11, align 8
  %33 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %34 = bitcast i8* %33 to i64*
  %35 = load i32, i32* %19, align 8
  br label %36

36:                                               ; preds = %58, %2
  %37 = phi i32 [ %35, %2 ], [ %96, %58 ]
  %38 = phi i32 [ %32, %2 ], [ %98, %58 ]
  %39 = zext i32 %37 to i64
  %40 = shl nuw nsw i64 %39, 3
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 %40
  %42 = bitcast i8* %41 to %"struct.absl::cord_internal::CordRep"**
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %42, i64 %43
  %45 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %44, align 8
  %46 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7) #12
  %47 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %46, i32 %38) #12
  %48 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #12
  %49 = load i32, i32* %11, align 8
  %50 = icmp eq i32 %49, %38
  br i1 %50, label %58, label %51

51:                                               ; preds = %36
  %52 = icmp eq i32 %38, 0
  %53 = load i32, i32* %19, align 8
  %54 = select i1 %52, i32 %53, i32 %38
  %55 = add i32 %54, -1
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %34, i64 %56
  br label %58

58:                                               ; preds = %36, %51
  %59 = phi i64* [ %57, %51 ], [ %28, %36 ]
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i64, i64* %34, i64 %43
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %48, i64 %63) #12
  %65 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #12
  %66 = bitcast %"struct.absl::cord_internal::CordRep"* %45 to i8*
  %67 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %65, i8* %66) #12
  %68 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9) #12
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %68, i64 %70) #12
  %72 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i64 8) #12
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 0, i32 2
  %74 = load i8, i8* %73, align 4
  %75 = zext i8 %74 to i32
  %76 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %72, i32 %75) #12
  %77 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #12
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 acquire, align 4
  %80 = ashr i32 %79, 1
  %81 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %77, i32 %80) #12
  %82 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), i64 11) #12
  %83 = load i32, i32* %19, align 8
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 4
  %86 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 %85
  %87 = bitcast i8* %86 to i32*
  %88 = getelementptr inbounds i32, i32* %87, i64 %43
  %89 = load i32, i32* %88, align 4
  %90 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %82, i32 %89) #12
  %91 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #12
  %92 = load i64, i64* %61, align 8
  %93 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %91, i64 %92) #12
  %94 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #12
  %95 = add i32 %38, 1
  %96 = load i32, i32* %19, align 8
  %97 = icmp eq i32 %95, %96
  %98 = select i1 %97, i32 0, i32 %95
  %99 = load i32, i32* %15, align 4
  %100 = icmp eq i32 %98, %99
  br i1 %100, label %101, label %36

101:                                              ; preds = %58
  %102 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #12
  ret %"class.std::__1::basic_ostream"* %102
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal11CordRepRing13AddDataOffsetEjm(%"class.absl::cord_internal::CordRepRing"* nocapture, i32, i64) local_unnamed_addr #3 align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 4
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %8
  %10 = bitcast i8* %9 to i32*
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, %4
  store i32 %14, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal11CordRepRing9SubLengthEjm(%"class.absl::cord_internal::CordRepRing"* nocapture, i32, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %5 = bitcast i8* %4 to i64*
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds i64, i64* %5, i64 %6
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %2
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl13cord_internal11CordRepRing7IsValidERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.absl::cord_internal::CordRepRing"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i64 13) #12
  br label %130

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, %4
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, %4
  br i1 %15, label %27, label %16

16:                                               ; preds = %12, %8
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5) #12
  %18 = load i32, i32* %9, align 8
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %17, i32 %18) #12
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0), i64 13) #12
  %21 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %20, i32 %22) #12
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i64 16) #12
  %25 = load i32, i32* %3, align 8
  %26 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %24, i32 %25) #12
  br label %130

27:                                               ; preds = %12
  %28 = icmp eq i32 %14, 0
  %29 = select i1 %28, i32 %4, i32 %14
  %30 = add i32 %29, -1
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %34 = bitcast i8* %33 to i64*
  %35 = zext i32 %30 to i64
  %36 = getelementptr inbounds i64, i64* %34, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %32
  %39 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %42, label %50

42:                                               ; preds = %27
  %43 = zext i32 %4 to i64
  %44 = shl nuw nsw i64 %43, 3
  %45 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %44
  %46 = bitcast i8* %45 to %"struct.absl::cord_internal::CordRep"**
  %47 = shl nuw nsw i64 %43, 4
  %48 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %47
  %49 = bitcast i8* %48 to i32*
  br label %64

50:                                               ; preds = %27
  %51 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i64 7) #12
  %52 = load i64, i64* %39, align 8
  %53 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %51, i64 %52) #12
  %54 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i64 34) #12
  %55 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %54, i64 %38) #12
  %56 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i64 16) #12
  %57 = load i64, i64* %31, align 8
  %58 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %56, i64 %57) #12
  %59 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i64 11) #12
  %60 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %59, i32 %30) #12
  %61 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %60, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i64 10) #12
  %62 = load i64, i64* %36, align 8
  %63 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %61, i64 %62) #12
  br label %130

64:                                               ; preds = %42, %125
  %65 = phi i32 [ %128, %125 ], [ %10, %42 ]
  %66 = phi i64 [ %69, %125 ], [ %32, %42 ]
  %67 = zext i32 %65 to i64
  %68 = getelementptr inbounds i64, i64* %34, i64 %67
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %69, %66
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %81

72:                                               ; preds = %64
  %73 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6) #12
  %74 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %73, i32 %65) #12
  %75 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24) #12
  %76 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %75, i64 0) #12
  %77 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i64 16) #12
  %78 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %77, i64 %66) #12
  %79 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i64 13) #12
  %80 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %79, i64 %69) #12
  br label %130

81:                                               ; preds = %64
  %82 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %46, i64 %67
  %83 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %82, align 8
  %84 = icmp eq %"struct.absl::cord_internal::CordRep"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6) #12
  %87 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %86, i32 %65) #12
  %88 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 18) #12
  br label %130

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 0, i32 2
  %91 = load i8, i8* %90, align 4
  %92 = icmp ugt i8 %91, 3
  %93 = icmp eq i8 %91, 1
  %94 = or i1 %92, %93
  br i1 %94, label %103, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 0, i32 2
  %97 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6) #12
  %98 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %97, i32 %65) #12
  %99 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %98, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i64 0, i64 0), i64 27) #12
  %100 = load i8, i8* %96, align 4
  %101 = zext i8 %100 to i32
  %102 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %99, i32 %101) #12
  br label %130

103:                                              ; preds = %89
  %104 = getelementptr inbounds i32, i32* %49, i64 %67
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp ule i64 %108, %106
  %110 = sub i64 %108, %106
  %111 = icmp ugt i64 %70, %110
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %125

113:                                              ; preds = %103
  %114 = zext i32 %105 to i64
  %115 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 0, i32 0
  %116 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6) #12
  %117 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %116, i32 %65) #12
  %118 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %117, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), i64 13) #12
  %119 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %118, i64 %114) #12
  %120 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0), i64 18) #12
  %121 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %120, i64 %70) #12
  %122 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %121, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.33, i64 0, i64 0), i64 44) #12
  %123 = load i64, i64* %115, align 8
  %124 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %122, i64 %123) #12
  br label %130

125:                                              ; preds = %103
  %126 = add i32 %65, 1
  %127 = icmp eq i32 %126, %4
  %128 = select i1 %127, i32 0, i32 %126
  %129 = icmp eq i32 %128, %14
  br i1 %129, label %130, label %64

130:                                              ; preds = %125, %113, %95, %85, %72, %50, %16, %6
  %131 = phi i1 [ false, %6 ], [ false, %16 ], [ false, %50 ], [ false, %72 ], [ false, %85 ], [ false, %95 ], [ false, %113 ], [ true, %125 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing3NewEmm(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = sub i64 4294967295, %0
  %4 = icmp ult i64 %3, %1
  br i1 %4, label %5, label %6, !prof !2

5:                                                ; preds = %2
  tail call void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #13
  unreachable

6:                                                ; preds = %2
  %7 = add i64 %1, %0
  %8 = mul i64 %7, 20
  %9 = add i64 %8, 40
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = bitcast i8* %10 to %"class.absl::cord_internal::CordRepRing"*
  %12 = trunc i64 %7 to i32
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 2, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %10, i64 24
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %10, i64 12
  store i8 3, i8* %17, align 4
  store i32 %12, i32* %16, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 0, i64* %19, align 8
  ret %"class.absl::cord_internal::CordRepRing"* %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal11CordRepRing21SetCapacityForTestingEm(%"class.absl::cord_internal::CordRepRing"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = shl i64 %1, 3
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %3
  %5 = bitcast i8* %4 to %"struct.absl::cord_internal::CordRep"**
  %6 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %5, i64 %8
  %10 = bitcast %"struct.absl::cord_internal::CordRep"** %9 to i8*
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 3
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %14
  %16 = bitcast i8* %15 to %"struct.absl::cord_internal::CordRep"**
  %17 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, i64 %8
  %18 = bitcast %"struct.absl::cord_internal::CordRep"** %17 to i8*
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sub i32 %20, %7
  %22 = icmp ugt i32 %20, %7
  %23 = select i1 %22, i32 0, i32 %12
  %24 = add i32 %21, %23
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %18, i64 %26, i1 false)
  %27 = shl i64 %1, 4
  %28 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %6, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = bitcast i32* %32 to i8*
  %34 = load i32, i32* %11, align 4
  %35 = zext i32 %34 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %36
  %38 = bitcast i8* %37 to i32*
  %39 = getelementptr inbounds i32, i32* %38, i64 %31
  %40 = bitcast i32* %39 to i8*
  %41 = load i32, i32* %19, align 4
  %42 = sub i32 %41, %30
  %43 = icmp ugt i32 %41, %30
  %44 = select i1 %43, i32 0, i32 %34
  %45 = add i32 %42, %44
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %40, i64 %47, i1 false)
  %48 = trunc i64 %1 to i32
  store i32 %48, i32* %11, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal11CordRepRing6DeleteEPS1_(%"class.absl::cord_internal::CordRepRing"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal11CordRepRing7DestroyEPS1_(%"class.absl::cord_internal::CordRepRing"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %0, i32 %3, i32 %5)
  %6 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"*, i32, i32) unnamed_addr #0 {
  %4 = icmp ugt i32 %2, %1
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  br label %20

14:                                               ; preds = %46, %8
  %15 = icmp ne i32 %2, 0
  %16 = xor i1 %4, %15
  br i1 %16, label %17, label %79

17:                                               ; preds = %14
  %18 = zext i32 %2 to i64
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  br label %50

20:                                               ; preds = %46, %11
  %21 = phi i64 [ %12, %11 ], [ %47, %46 ]
  %22 = load i32, i32* %13, align 8
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %24
  %26 = bitcast i8* %25 to %"struct.absl::cord_internal::CordRep"**
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, i64 %21
  %28 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %29 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %35, label %32

32:                                               ; preds = %20
  %33 = atomicrmw sub i32* %29, i32 2 acq_rel
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %35, label %46

35:                                               ; preds = %32, %20
  %36 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 0, i32 2
  %37 = load i8, i8* %36, align 4
  %38 = icmp ugt i8 %37, 3
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %"struct.absl::cord_internal::CordRep"* %28 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %46

41:                                               ; preds = %35
  %42 = bitcast %"struct.absl::cord_internal::CordRep"* %28 to %"struct.absl::cord_internal::CordRepExternal"*
  %43 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 1, i32 1
  %44 = bitcast %"class.absl::cord_internal::Refcount"* %43 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  %45 = load void (%"struct.absl::cord_internal::CordRepExternal"*)*, void (%"struct.absl::cord_internal::CordRepExternal"*)** %44, align 8
  tail call void %45(%"struct.absl::cord_internal::CordRepExternal"* %42) #12
  br label %46

46:                                               ; preds = %41, %39, %32
  %47 = add nuw nsw i64 %21, 1
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %9, %48
  br i1 %49, label %14, label %20

50:                                               ; preds = %76, %17
  %51 = phi i64 [ 0, %17 ], [ %77, %76 ]
  %52 = load i32, i32* %19, align 8
  %53 = zext i32 %52 to i64
  %54 = shl nuw nsw i64 %53, 3
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %54
  %56 = bitcast i8* %55 to %"struct.absl::cord_internal::CordRep"**
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %56, i64 %51
  %58 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %57, align 8
  %59 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %65, label %62

62:                                               ; preds = %50
  %63 = atomicrmw sub i32* %59, i32 2 acq_rel
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %76

65:                                               ; preds = %62, %50
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 2
  %67 = load i8, i8* %66, align 4
  %68 = icmp ugt i8 %67, 3
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = bitcast %"struct.absl::cord_internal::CordRep"* %58 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  br label %76

71:                                               ; preds = %65
  %72 = bitcast %"struct.absl::cord_internal::CordRep"* %58 to %"struct.absl::cord_internal::CordRepExternal"*
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 1, i32 1
  %74 = bitcast %"class.absl::cord_internal::Refcount"* %73 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  %75 = load void (%"struct.absl::cord_internal::CordRepExternal"*)*, void (%"struct.absl::cord_internal::CordRepExternal"*)** %74, align 8
  tail call void %75(%"struct.absl::cord_internal::CordRepExternal"* %72) #12
  br label %76

76:                                               ; preds = %71, %69, %62
  %77 = add nuw nsw i64 %51, 1
  %78 = icmp ult i64 %77, %18
  br i1 %78, label %50, label %79

79:                                               ; preds = %76, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing4CopyEPS1_jjm(%"class.absl::cord_internal::CordRepRing"*, i32, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = sub i32 %2, %1
  %6 = icmp ugt i32 %2, %1
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %4, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %4 ]
  %12 = add i32 %11, %5
  %13 = zext i32 %12 to i64
  %14 = xor i64 %13, 4294967295
  %15 = icmp ult i64 %14, %3
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %10
  tail call void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %10
  %18 = add i64 %13, %3
  %19 = mul i64 %18, 20
  %20 = add i64 %19, 40
  %21 = tail call i8* @_Znwm(i64 %20) #12
  %22 = bitcast i8* %21 to %"class.absl::cord_internal::CordRepRing"*
  %23 = trunc i64 %18 to i32
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 2, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %21, i64 24
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %21, i64 12
  store i8 3, i8* %28, align 4
  store i32 %23, i32* %27, align 8
  %29 = getelementptr inbounds i8, i8* %21, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8* %21 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %21, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 8
  br i1 %6, label %39, label %36

36:                                               ; preds = %17
  %37 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %36, %17
  %40 = phi i32 [ %38, %36 ], [ 0, %17 ]
  %41 = add i32 %40, %5
  %42 = icmp ult i32 %41, %23
  %43 = select i1 %42, i32 0, i32 %23
  %44 = sub i32 %41, %43
  %45 = getelementptr inbounds i8, i8* %21, i64 20
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 4
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %30, align 8
  %49 = getelementptr inbounds i8, i8* %21, i64 40
  %50 = bitcast i8* %49 to i64*
  %51 = and i64 %18, 4294967295
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %22, i64 0, i32 5, i64 %52
  %54 = bitcast i8* %53 to %"struct.absl::cord_internal::CordRep"**
  %55 = shl nuw nsw i64 %51, 4
  %56 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %22, i64 0, i32 5, i64 %55
  %57 = bitcast i8* %56 to i32*
  br i1 %6, label %61, label %58

58:                                               ; preds = %39
  %59 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  br label %61

61:                                               ; preds = %58, %39
  %62 = phi i32 [ %60, %58 ], [ %2, %39 ]
  %63 = icmp ugt i32 %62, %1
  br i1 %63, label %64, label %110

64:                                               ; preds = %61
  %65 = zext i32 %1 to i64
  %66 = zext i32 %62 to i64
  %67 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %68 = bitcast i8* %67 to i64*
  %69 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %70 = sub nsw i64 %66, %65
  %71 = xor i64 %65, -1
  %72 = and i64 %70, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %100, label %74

74:                                               ; preds = %64
  %75 = getelementptr inbounds i64, i64* %68, i64 %65
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %21, i64 48
  %78 = bitcast i8* %77 to i64*
  store i64 %76, i64* %50, align 8
  %79 = load i32, i32* %69, align 8
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 3
  %82 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %81
  %83 = bitcast i8* %82 to %"struct.absl::cord_internal::CordRep"**
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %83, i64 %65
  %85 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %84, align 8
  %86 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %85, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 2 monotonic
  %88 = getelementptr inbounds i8, i8* %53, i64 8
  %89 = bitcast i8* %88 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %85, %"struct.absl::cord_internal::CordRep"** %54, align 8
  %90 = load i32, i32* %69, align 8
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 4
  %93 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %92
  %94 = bitcast i8* %93 to i32*
  %95 = getelementptr inbounds i32, i32* %94, i64 %65
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds i8, i8* %56, i64 4
  %98 = bitcast i8* %97 to i32*
  store i32 %96, i32* %57, align 4
  %99 = add nuw nsw i64 %65, 1
  br label %100

100:                                              ; preds = %64, %74
  %101 = phi i64* [ undef, %64 ], [ %78, %74 ]
  %102 = phi %"struct.absl::cord_internal::CordRep"** [ undef, %64 ], [ %89, %74 ]
  %103 = phi i32* [ undef, %64 ], [ %98, %74 ]
  %104 = phi i64* [ %50, %64 ], [ %78, %74 ]
  %105 = phi %"struct.absl::cord_internal::CordRep"** [ %54, %64 ], [ %89, %74 ]
  %106 = phi i32* [ %57, %64 ], [ %98, %74 ]
  %107 = phi i64 [ %65, %64 ], [ %99, %74 ]
  %108 = sub nsw i64 0, %66
  %109 = icmp eq i64 %71, %108
  br i1 %109, label %110, label %121

110:                                              ; preds = %100, %121, %61
  %111 = phi i64* [ %50, %61 ], [ %101, %100 ], [ %150, %121 ]
  %112 = phi %"struct.absl::cord_internal::CordRep"** [ %54, %61 ], [ %102, %100 ], [ %160, %121 ]
  %113 = phi i32* [ %57, %61 ], [ %103, %100 ], [ %168, %121 ]
  %114 = icmp ne i32 %2, 0
  %115 = xor i1 %6, %114
  br i1 %115, label %116, label %199

116:                                              ; preds = %110
  %117 = zext i32 %2 to i64
  %118 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %119 = bitcast i8* %118 to i64*
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  br label %171

121:                                              ; preds = %100, %121
  %122 = phi i64* [ %150, %121 ], [ %104, %100 ]
  %123 = phi %"struct.absl::cord_internal::CordRep"** [ %160, %121 ], [ %105, %100 ]
  %124 = phi i32* [ %168, %121 ], [ %106, %100 ]
  %125 = phi i64 [ %169, %121 ], [ %107, %100 ]
  %126 = getelementptr inbounds i64, i64* %68, i64 %125
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds i64, i64* %122, i64 1
  store i64 %127, i64* %122, align 8
  %129 = load i32, i32* %69, align 8
  %130 = zext i32 %129 to i64
  %131 = shl nuw nsw i64 %130, 3
  %132 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %131
  %133 = bitcast i8* %132 to %"struct.absl::cord_internal::CordRep"**
  %134 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %133, i64 %125
  %135 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %134, align 8
  %136 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 2 monotonic
  %138 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %123, i64 1
  store %"struct.absl::cord_internal::CordRep"* %135, %"struct.absl::cord_internal::CordRep"** %123, align 8
  %139 = load i32, i32* %69, align 8
  %140 = zext i32 %139 to i64
  %141 = shl nuw nsw i64 %140, 4
  %142 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %141
  %143 = bitcast i8* %142 to i32*
  %144 = getelementptr inbounds i32, i32* %143, i64 %125
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds i32, i32* %124, i64 1
  store i32 %145, i32* %124, align 4
  %147 = add nuw nsw i64 %125, 1
  %148 = getelementptr inbounds i64, i64* %68, i64 %147
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds i64, i64* %122, i64 2
  store i64 %149, i64* %128, align 8
  %151 = load i32, i32* %69, align 8
  %152 = zext i32 %151 to i64
  %153 = shl nuw nsw i64 %152, 3
  %154 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %153
  %155 = bitcast i8* %154 to %"struct.absl::cord_internal::CordRep"**
  %156 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %155, i64 %147
  %157 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %156, align 8
  %158 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %157, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 2 monotonic
  %160 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %123, i64 2
  store %"struct.absl::cord_internal::CordRep"* %157, %"struct.absl::cord_internal::CordRep"** %138, align 8
  %161 = load i32, i32* %69, align 8
  %162 = zext i32 %161 to i64
  %163 = shl nuw nsw i64 %162, 4
  %164 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %163
  %165 = bitcast i8* %164 to i32*
  %166 = getelementptr inbounds i32, i32* %165, i64 %147
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds i32, i32* %124, i64 2
  store i32 %167, i32* %146, align 4
  %169 = add nuw nsw i64 %125, 2
  %170 = icmp eq i64 %169, %66
  br i1 %170, label %110, label %121

171:                                              ; preds = %171, %116
  %172 = phi i64* [ %111, %116 ], [ %178, %171 ]
  %173 = phi %"struct.absl::cord_internal::CordRep"** [ %112, %116 ], [ %188, %171 ]
  %174 = phi i32* [ %113, %116 ], [ %196, %171 ]
  %175 = phi i64 [ 0, %116 ], [ %197, %171 ]
  %176 = getelementptr inbounds i64, i64* %119, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds i64, i64* %172, i64 1
  store i64 %177, i64* %172, align 8
  %179 = load i32, i32* %120, align 8
  %180 = zext i32 %179 to i64
  %181 = shl nuw nsw i64 %180, 3
  %182 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %181
  %183 = bitcast i8* %182 to %"struct.absl::cord_internal::CordRep"**
  %184 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %183, i64 %175
  %185 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %184, align 8
  %186 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %185, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw add i32* %186, i32 2 monotonic
  %188 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %173, i64 1
  store %"struct.absl::cord_internal::CordRep"* %185, %"struct.absl::cord_internal::CordRep"** %173, align 8
  %189 = load i32, i32* %120, align 8
  %190 = zext i32 %189 to i64
  %191 = shl nuw nsw i64 %190, 4
  %192 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %191
  %193 = bitcast i8* %192 to i32*
  %194 = getelementptr inbounds i32, i32* %193, i64 %175
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds i32, i32* %174, i64 1
  store i32 %195, i32* %174, align 4
  %197 = add nuw nsw i64 %175, 1
  %198 = icmp ult i64 %197, %117
  br i1 %198, label %171, label %199

199:                                              ; preds = %171, %110
  %200 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = atomicrmw sub i32* %200, i32 2 acq_rel
  %202 = icmp eq i32 %201, 2
  br i1 %202, label %203, label %205, !prof !2

203:                                              ; preds = %199
  %204 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to %"struct.absl::cord_internal::CordRep"*
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %204) #12
  br label %205

205:                                              ; preds = %199, %203
  ret %"class.absl::cord_internal::CordRepRing"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = sub i32 %6, %4
  %8 = icmp ugt i32 %6, %4
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %2 ]
  %14 = add i32 %7, %13
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = load i32, i32* %3, align 8
  %21 = load i32, i32* %5, align 4
  %22 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing4CopyEPS1_jjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %20, i32 %21, i64 %1)
  br label %223

23:                                               ; preds = %12
  %24 = add i64 %15, %1
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp ugt i64 %24, %27
  br i1 %28, label %29, label %223

29:                                               ; preds = %23
  %30 = lshr i32 %26, 1
  %31 = add i32 %30, %26
  %32 = zext i32 %31 to i64
  %33 = sub nsw i64 %32, %15
  %34 = icmp ugt i64 %33, %1
  %35 = select i1 %34, i64 %33, i64 %1
  %36 = xor i64 %15, 4294967295
  %37 = icmp ult i64 %36, %35
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #13
  unreachable

39:                                               ; preds = %29
  %40 = add i64 %35, %15
  %41 = mul i64 %40, 20
  %42 = add i64 %41, 40
  %43 = tail call i8* @_Znwm(i64 %42) #12
  %44 = bitcast i8* %43 to %"class.absl::cord_internal::CordRepRing"*
  %45 = trunc i64 %40 to i32
  %46 = getelementptr inbounds i8, i8* %43, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 2, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %43, i64 24
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds i8, i8* %43, i64 12
  store i8 3, i8* %50, align 4
  store i32 %45, i32* %49, align 8
  %51 = getelementptr inbounds i8, i8* %43, i64 32
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = load i32, i32* %3, align 8
  %54 = load i32, i32* %5, align 4
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8* %43 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %43, i64 16
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 8
  %60 = sub i32 %54, %53
  %61 = icmp ugt i32 %54, %53
  br i1 %61, label %64, label %62

62:                                               ; preds = %39
  %63 = load i32, i32* %25, align 8
  br label %64

64:                                               ; preds = %62, %39
  %65 = phi i32 [ %63, %62 ], [ 0, %39 ]
  %66 = add i32 %65, %60
  %67 = icmp ult i32 %66, %45
  %68 = select i1 %67, i32 0, i32 %45
  %69 = sub i32 %66, %68
  %70 = getelementptr inbounds i8, i8* %43, i64 20
  %71 = bitcast i8* %70 to i32*
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %52, align 8
  %74 = getelementptr inbounds i8, i8* %43, i64 40
  %75 = bitcast i8* %74 to i64*
  %76 = and i64 %40, 4294967295
  %77 = shl nuw nsw i64 %76, 3
  %78 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %44, i64 0, i32 5, i64 %77
  %79 = bitcast i8* %78 to %"struct.absl::cord_internal::CordRep"**
  %80 = shl nuw nsw i64 %76, 4
  %81 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %44, i64 0, i32 5, i64 %80
  %82 = bitcast i8* %81 to i32*
  br i1 %61, label %85, label %83

83:                                               ; preds = %64
  %84 = load i32, i32* %25, align 8
  br label %85

85:                                               ; preds = %83, %64
  %86 = phi i32 [ %84, %83 ], [ %54, %64 ]
  %87 = icmp ugt i32 %86, %53
  br i1 %87, label %88, label %133

88:                                               ; preds = %85
  %89 = zext i32 %53 to i64
  %90 = zext i32 %86 to i64
  %91 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %92 = bitcast i8* %91 to i64*
  %93 = sub nsw i64 %90, %89
  %94 = xor i64 %89, -1
  %95 = and i64 %93, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %123, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds i64, i64* %92, i64 %89
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i8, i8* %43, i64 48
  %101 = bitcast i8* %100 to i64*
  store i64 %99, i64* %75, align 8
  %102 = load i32, i32* %25, align 8
  %103 = zext i32 %102 to i64
  %104 = shl nuw nsw i64 %103, 3
  %105 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %104
  %106 = bitcast i8* %105 to %"struct.absl::cord_internal::CordRep"**
  %107 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %106, i64 %89
  %108 = bitcast %"struct.absl::cord_internal::CordRep"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds i8, i8* %78, i64 8
  %111 = bitcast i8* %110 to %"struct.absl::cord_internal::CordRep"**
  %112 = bitcast i8* %78 to i64*
  store i64 %109, i64* %112, align 8
  %113 = load i32, i32* %25, align 8
  %114 = zext i32 %113 to i64
  %115 = shl nuw nsw i64 %114, 4
  %116 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %115
  %117 = bitcast i8* %116 to i32*
  %118 = getelementptr inbounds i32, i32* %117, i64 %89
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds i8, i8* %81, i64 4
  %121 = bitcast i8* %120 to i32*
  store i32 %119, i32* %82, align 4
  %122 = add nuw nsw i64 %89, 1
  br label %123

123:                                              ; preds = %88, %97
  %124 = phi i64* [ undef, %88 ], [ %101, %97 ]
  %125 = phi %"struct.absl::cord_internal::CordRep"** [ undef, %88 ], [ %111, %97 ]
  %126 = phi i32* [ undef, %88 ], [ %121, %97 ]
  %127 = phi i64* [ %75, %88 ], [ %101, %97 ]
  %128 = phi %"struct.absl::cord_internal::CordRep"** [ %79, %88 ], [ %111, %97 ]
  %129 = phi i32* [ %82, %88 ], [ %121, %97 ]
  %130 = phi i64 [ %89, %88 ], [ %122, %97 ]
  %131 = sub nsw i64 0, %90
  %132 = icmp eq i64 %94, %131
  br i1 %132, label %133, label %143

133:                                              ; preds = %123, %143, %85
  %134 = phi i64* [ %75, %85 ], [ %124, %123 ], [ %172, %143 ]
  %135 = phi %"struct.absl::cord_internal::CordRep"** [ %79, %85 ], [ %125, %123 ], [ %181, %143 ]
  %136 = phi i32* [ %82, %85 ], [ %126, %123 ], [ %190, %143 ]
  %137 = icmp ne i32 %54, 0
  %138 = xor i1 %61, %137
  br i1 %138, label %139, label %221

139:                                              ; preds = %133
  %140 = zext i32 %54 to i64
  %141 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %142 = bitcast i8* %141 to i64*
  br label %193

143:                                              ; preds = %123, %143
  %144 = phi i64* [ %172, %143 ], [ %127, %123 ]
  %145 = phi %"struct.absl::cord_internal::CordRep"** [ %181, %143 ], [ %128, %123 ]
  %146 = phi i32* [ %190, %143 ], [ %129, %123 ]
  %147 = phi i64 [ %191, %143 ], [ %130, %123 ]
  %148 = getelementptr inbounds i64, i64* %92, i64 %147
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds i64, i64* %144, i64 1
  store i64 %149, i64* %144, align 8
  %151 = load i32, i32* %25, align 8
  %152 = zext i32 %151 to i64
  %153 = shl nuw nsw i64 %152, 3
  %154 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %153
  %155 = bitcast i8* %154 to %"struct.absl::cord_internal::CordRep"**
  %156 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %155, i64 %147
  %157 = bitcast %"struct.absl::cord_internal::CordRep"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %145, i64 1
  %160 = bitcast %"struct.absl::cord_internal::CordRep"** %145 to i64*
  store i64 %158, i64* %160, align 8
  %161 = load i32, i32* %25, align 8
  %162 = zext i32 %161 to i64
  %163 = shl nuw nsw i64 %162, 4
  %164 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %163
  %165 = bitcast i8* %164 to i32*
  %166 = getelementptr inbounds i32, i32* %165, i64 %147
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds i32, i32* %146, i64 1
  store i32 %167, i32* %146, align 4
  %169 = add nuw nsw i64 %147, 1
  %170 = getelementptr inbounds i64, i64* %92, i64 %169
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds i64, i64* %144, i64 2
  store i64 %171, i64* %150, align 8
  %173 = load i32, i32* %25, align 8
  %174 = zext i32 %173 to i64
  %175 = shl nuw nsw i64 %174, 3
  %176 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %175
  %177 = bitcast i8* %176 to %"struct.absl::cord_internal::CordRep"**
  %178 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %177, i64 %169
  %179 = bitcast %"struct.absl::cord_internal::CordRep"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %145, i64 2
  %182 = bitcast %"struct.absl::cord_internal::CordRep"** %159 to i64*
  store i64 %180, i64* %182, align 8
  %183 = load i32, i32* %25, align 8
  %184 = zext i32 %183 to i64
  %185 = shl nuw nsw i64 %184, 4
  %186 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %185
  %187 = bitcast i8* %186 to i32*
  %188 = getelementptr inbounds i32, i32* %187, i64 %169
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds i32, i32* %146, i64 2
  store i32 %189, i32* %168, align 4
  %191 = add nuw nsw i64 %147, 2
  %192 = icmp eq i64 %191, %90
  br i1 %192, label %133, label %143

193:                                              ; preds = %193, %139
  %194 = phi i64* [ %134, %139 ], [ %200, %193 ]
  %195 = phi %"struct.absl::cord_internal::CordRep"** [ %135, %139 ], [ %209, %193 ]
  %196 = phi i32* [ %136, %139 ], [ %218, %193 ]
  %197 = phi i64 [ 0, %139 ], [ %219, %193 ]
  %198 = getelementptr inbounds i64, i64* %142, i64 %197
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds i64, i64* %194, i64 1
  store i64 %199, i64* %194, align 8
  %201 = load i32, i32* %25, align 8
  %202 = zext i32 %201 to i64
  %203 = shl nuw nsw i64 %202, 3
  %204 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %203
  %205 = bitcast i8* %204 to %"struct.absl::cord_internal::CordRep"**
  %206 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %205, i64 %197
  %207 = bitcast %"struct.absl::cord_internal::CordRep"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %195, i64 1
  %210 = bitcast %"struct.absl::cord_internal::CordRep"** %195 to i64*
  store i64 %208, i64* %210, align 8
  %211 = load i32, i32* %25, align 8
  %212 = zext i32 %211 to i64
  %213 = shl nuw nsw i64 %212, 4
  %214 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %213
  %215 = bitcast i8* %214 to i32*
  %216 = getelementptr inbounds i32, i32* %215, i64 %197
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds i32, i32* %196, i64 1
  store i32 %217, i32* %196, align 4
  %219 = add nuw nsw i64 %197, 1
  %220 = icmp ult i64 %219, %140
  br i1 %220, label %193, label %221

221:                                              ; preds = %193, %133
  %222 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to i8*
  tail call void @_ZdlPv(i8* %222) #12
  br label %223

223:                                              ; preds = %23, %221, %19
  %224 = phi %"class.absl::cord_internal::CordRepRing"* [ %44, %221 ], [ %22, %19 ], [ %0, %23 ]
  ret %"class.absl::cord_internal::CordRepRing"* %224
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4absl13cord_internal11CordRepRing15GetAppendBufferEm(%"class.absl::cord_internal::CordRepRing"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = select i1 %5, i32 %7, i32 %4
  %9 = add i32 %8, -1
  %10 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 3
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %12
  %14 = bitcast i8* %13 to %"struct.absl::cord_internal::CordRep"**
  %15 = zext i32 %9 to i64
  %16 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %14, i64 %15
  %17 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, align 8
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 4
  %20 = icmp ugt i8 %19, 3
  br i1 %20, label %21, label %75

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %75

25:                                               ; preds = %21
  %26 = load i8, i8* %18, align 4
  %27 = zext i8 %26 to i32
  %28 = icmp ult i8 %26, -127
  %29 = shl nuw nsw i32 %27, 3
  %30 = shl nuw nsw i32 %27, 5
  %31 = add nsw i32 %30, -3072
  %32 = select i1 %28, i32 %29, i32 %31
  %33 = add nsw i32 %32, -13
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %36 = bitcast i8* %35 to i64*
  %37 = getelementptr inbounds i64, i64* %36, i64 %15
  %38 = load i64, i64* %37, align 8
  %39 = load i32, i32* %10, align 8
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 4
  %42 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %41
  %43 = bitcast i8* %42 to i32*
  %44 = getelementptr inbounds i32, i32* %43, i64 %15
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, %9
  br i1 %49, label %50, label %52

50:                                               ; preds = %25
  %51 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  br label %58

52:                                               ; preds = %25
  %53 = icmp eq i32 %9, 0
  %54 = select i1 %53, i32 %39, i32 %9
  %55 = add i32 %54, -1
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %36, i64 %56
  br label %58

58:                                               ; preds = %50, %52
  %59 = phi i64* [ %51, %50 ], [ %57, %52 ]
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %38, %60
  %62 = add i64 %61, %46
  %63 = sub i64 %34, %62
  %64 = icmp ugt i64 %63, %1
  %65 = select i1 %64, i64 %1, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %58
  %68 = add i64 %65, %62
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 0
  store i64 %68, i64* %69, align 8
  %70 = add i64 %65, %38
  store i64 %70, i64* %37, align 8
  %71 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %65
  store i64 %73, i64* %71, align 8
  %74 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 3, i64 %62
  br label %75

75:                                               ; preds = %58, %2, %21, %67
  %76 = phi i8* [ %74, %67 ], [ null, %21 ], [ null, %2 ], [ null, %58 ]
  %77 = phi i64 [ %65, %67 ], [ 0, %21 ], [ 0, %2 ], [ 0, %58 ]
  %78 = insertvalue { i8*, i64 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i64 } %78, i64 %77, 1
  ret { i8*, i64 } %79
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4absl13cord_internal11CordRepRing16GetPrependBufferEm(%"class.absl::cord_internal::CordRepRing"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 3
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %8
  %10 = bitcast i8* %9 to %"struct.absl::cord_internal::CordRep"**
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %10, i64 %11
  %13 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %12, align 8
  %14 = shl nuw nsw i64 %7, 4
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %14
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i32, i32* %16, i64 %11
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %49, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %49

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %13, i64 0, i32 2
  %27 = load i8, i8* %26, align 4
  %28 = icmp ugt i8 %27, 3
  br i1 %28, label %29, label %49

29:                                               ; preds = %25
  %30 = icmp ugt i64 %19, %1
  %31 = select i1 %30, i64 %1, i64 %19
  %32 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %31
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %31
  store i64 %37, i64* %35, align 8
  %38 = sub nsw i64 %19, %31
  %39 = trunc i64 %38 to i32
  %40 = load i32, i32* %5, align 8
  %41 = zext i32 %40 to i64
  %42 = shl nuw nsw i64 %41, 4
  %43 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %42
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %3, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  store i32 %39, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %13, i64 0, i32 3, i64 %38
  br label %49

49:                                               ; preds = %21, %25, %2, %29
  %50 = phi i8* [ %48, %29 ], [ null, %2 ], [ null, %25 ], [ null, %21 ]
  %51 = phi i64 [ %31, %29 ], [ 0, %2 ], [ 0, %25 ], [ 0, %21 ]
  %52 = insertvalue { i8*, i64 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i64 } %52, i64 %51, 1
  ret { i8*, i64 } %53
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing14CreateFromLeafEPNS0_7CordRepEmmm(%"struct.absl::cord_internal::CordRep"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp ugt i64 %3, 4294967294
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %4
  tail call void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #13
  unreachable

7:                                                ; preds = %4
  %8 = add nuw nsw i64 %3, 1
  %9 = mul i64 %8, 20
  %10 = add nuw nsw i64 %9, 40
  %11 = tail call i8* @_Znwm(i64 %10) #12
  %12 = bitcast i8* %11 to %"class.absl::cord_internal::CordRepRing"*
  %13 = trunc i64 %8 to i32
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 2, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 24
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %11, i64 12
  store i8 3, i8* %18, align 4
  store i32 %13, i32* %17, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 16
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = icmp ne i32 %13, 1
  %24 = zext i1 %23 to i32
  %25 = getelementptr inbounds i8, i8* %11, i64 20
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = bitcast i8* %11 to i64*
  store i64 %2, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 40
  %29 = bitcast i8* %28 to i64*
  store i64 %2, i64* %29, align 8
  %30 = and i64 %8, 4294967295
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %12, i64 0, i32 5, i64 %31
  %33 = bitcast i8* %32 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %0, %"struct.absl::cord_internal::CordRep"** %33, align 8
  %34 = trunc i64 %1 to i32
  %35 = shl nuw nsw i64 %30, 4
  %36 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %12, i64 0, i32 5, i64 %35
  %37 = bitcast i8* %36 to i32*
  store i32 %34, i32* %37, align 4
  ret %"class.absl::cord_internal::CordRepRing"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing10CreateSlowEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::InlinedVector", align 8
  %4 = alloca %struct.Entry, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.absl::InlinedVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 968, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 960, i1 false) #12
  %10 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = bitcast %struct.Entry* %4 to i8*
  %12 = getelementptr inbounds %struct.Entry, %struct.Entry* %4, i64 0, i32 0
  %13 = getelementptr inbounds %struct.Entry, %struct.Entry* %4, i64 0, i32 1
  %14 = getelementptr inbounds %struct.Entry, %struct.Entry* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data"* %8 to i64
  %17 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %struct.Entry** %17 to i64*
  %19 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0
  %20 = bitcast %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data"* %8 to %struct.Entry*
  %21 = icmp ugt i64 %1, 4294967294
  %22 = add nuw nsw i64 %1, 1
  %23 = mul i64 %22, 20
  %24 = add nuw nsw i64 %23, 40
  %25 = trunc i64 %22 to i32
  %26 = icmp ne i32 %25, 1
  %27 = zext i1 %26 to i32
  %28 = and i64 %22, 4294967295
  %29 = shl nuw nsw i64 %28, 3
  %30 = shl nuw nsw i64 %28, 4
  br label %31

31:                                               ; preds = %149, %2
  %32 = phi %"class.absl::cord_internal::CordRepRing"* [ %132, %149 ], [ null, %2 ]
  %33 = phi i64 [ %157, %149 ], [ %6, %2 ]
  %34 = phi i64 [ %155, %149 ], [ 0, %2 ]
  %35 = phi %"struct.absl::cord_internal::CordRep"* [ %154, %149 ], [ %0, %2 ]
  br label %36

36:                                               ; preds = %31, %266
  %37 = phi i64 [ %33, %31 ], [ %240, %266 ]
  %38 = phi i64 [ %34, %31 ], [ %53, %266 ]
  %39 = phi %"struct.absl::cord_internal::CordRep"* [ %35, %31 ], [ %196, %266 ]
  br label %40

40:                                               ; preds = %190, %36
  %41 = phi i64 [ %38, %36 ], [ %162, %190 ]
  %42 = phi %"struct.absl::cord_internal::CordRep"* [ %39, %36 ], [ %165, %190 ]
  %43 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %42, i64 0, i32 2
  %44 = load i8, i8* %43, align 4
  %45 = icmp ugt i8 %44, 3
  br i1 %45, label %46, label %50

46:                                               ; preds = %40, %267
  %47 = phi i64 [ %268, %267 ], [ %41, %40 ]
  %48 = phi %"struct.absl::cord_internal::CordRep"* [ %269, %267 ], [ %42, %40 ]
  %49 = icmp eq %"class.absl::cord_internal::CordRepRing"* %32, null
  br i1 %49, label %89, label %58

50:                                               ; preds = %40, %267
  %51 = phi i8 [ %271, %267 ], [ %44, %40 ]
  %52 = phi %"struct.absl::cord_internal::CordRep"* [ %269, %267 ], [ %42, %40 ]
  %53 = phi i64 [ %268, %267 ], [ %41, %40 ]
  switch i8 %51, label %273 [
    i8 3, label %54
    i8 1, label %54
    i8 2, label %159
    i8 0, label %191
  ]

54:                                               ; preds = %50, %50
  %55 = icmp eq i8 %51, 1
  %56 = icmp ne %"class.absl::cord_internal::CordRepRing"* %32, null
  br i1 %55, label %57, label %115

57:                                               ; preds = %54
  br i1 %56, label %58, label %89

58:                                               ; preds = %57, %46
  %59 = phi i64 [ %47, %46 ], [ %53, %57 ]
  %60 = phi %"struct.absl::cord_internal::CordRep"* [ %48, %46 ], [ %52, %57 ]
  %61 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* nonnull %32, i64 1) #12
  %62 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 4
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i32 %63, 1
  %69 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %68, %70
  %72 = select i1 %71, i32 0, i32 %68
  store i32 %72, i32* %62, align 4
  %73 = add i64 %67, %37
  store i64 %73, i64* %66, align 8
  %74 = add i64 %73, %65
  %75 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 0
  %76 = bitcast i8* %75 to i64*
  %77 = zext i32 %63 to i64
  %78 = getelementptr inbounds i64, i64* %76, i64 %77
  store i64 %74, i64* %78, align 8
  %79 = zext i32 %70 to i64
  %80 = shl nuw nsw i64 %79, 3
  %81 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 %80
  %82 = bitcast i8* %81 to %"struct.absl::cord_internal::CordRep"**
  %83 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %82, i64 %77
  store %"struct.absl::cord_internal::CordRep"* %60, %"struct.absl::cord_internal::CordRep"** %83, align 8
  %84 = trunc i64 %59 to i32
  %85 = shl nuw nsw i64 %79, 4
  %86 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 %85
  %87 = bitcast i8* %86 to i32*
  %88 = getelementptr inbounds i32, i32* %87, i64 %77
  store i32 %84, i32* %88, align 4
  br label %131

89:                                               ; preds = %57, %46
  %90 = phi i64 [ %47, %46 ], [ %53, %57 ]
  %91 = phi %"struct.absl::cord_internal::CordRep"* [ %48, %46 ], [ %52, %57 ]
  br i1 %21, label %92, label %93, !prof !2

92:                                               ; preds = %89
  call void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #13
  unreachable

93:                                               ; preds = %89
  %94 = call i8* @_Znwm(i64 %24) #12
  %95 = bitcast i8* %94 to %"class.absl::cord_internal::CordRepRing"*
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  %97 = bitcast i8* %96 to i32*
  store i32 2, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %94, i64 24
  %99 = bitcast i8* %98 to i32*
  %100 = getelementptr inbounds i8, i8* %94, i64 12
  store i8 3, i8* %100, align 4
  store i32 %25, i32* %99, align 8
  %101 = getelementptr inbounds i8, i8* %94, i64 32
  %102 = bitcast i8* %101 to i64*
  store i64 0, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %94, i64 16
  %104 = bitcast i8* %103 to i32*
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds i8, i8* %94, i64 20
  %106 = bitcast i8* %105 to i32*
  store i32 %27, i32* %106, align 4
  %107 = bitcast i8* %94 to i64*
  store i64 %37, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %94, i64 40
  %109 = bitcast i8* %108 to i64*
  store i64 %37, i64* %109, align 8
  %110 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %95, i64 0, i32 5, i64 %29
  %111 = bitcast i8* %110 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %91, %"struct.absl::cord_internal::CordRep"** %111, align 8
  %112 = trunc i64 %90 to i32
  %113 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %95, i64 0, i32 5, i64 %30
  %114 = bitcast i8* %113 to i32*
  store i32 %112, i32* %114, align 4
  br label %131

115:                                              ; preds = %54
  br i1 %56, label %116, label %119

116:                                              ; preds = %115
  %117 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to %"class.absl::cord_internal::CordRepRing"*
  %118 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE0EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"* nonnull %32, %"class.absl::cord_internal::CordRepRing"* %117, i64 %53, i64 %37) #12
  br label %131

119:                                              ; preds = %115
  %120 = icmp eq i64 %53, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, %37
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to %"class.absl::cord_internal::CordRepRing"*
  %127 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %126, i64 %1) #12
  br label %131

128:                                              ; preds = %121, %119
  %129 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to %"class.absl::cord_internal::CordRepRing"*
  %130 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7SubRingEPS1_mmm(%"class.absl::cord_internal::CordRepRing"* %129, i64 %53, i64 %37, i64 %1) #12
  br label %131

131:                                              ; preds = %58, %93, %128, %125, %116
  %132 = phi %"class.absl::cord_internal::CordRepRing"* [ %118, %116 ], [ %127, %125 ], [ %130, %128 ], [ %61, %58 ], [ %95, %93 ]
  %133 = load i64, i64* %10, align 8
  %134 = icmp ult i64 %133, 2
  br i1 %134, label %275, label %135

135:                                              ; preds = %131
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load %struct.Entry*, %struct.Entry** %17, align 8
  %140 = lshr i64 %133, 1
  %141 = add nsw i64 %140, -1
  %142 = getelementptr inbounds %struct.Entry, %struct.Entry* %139, i64 %141, i32 0
  %143 = getelementptr inbounds %struct.Entry, %struct.Entry* %139, i64 %141, i32 1
  br label %149

144:                                              ; preds = %135
  %145 = lshr i64 %133, 1
  %146 = add nsw i64 %145, -1
  %147 = getelementptr inbounds %struct.Entry, %struct.Entry* %20, i64 %146, i32 0
  %148 = getelementptr inbounds %struct.Entry, %struct.Entry* %20, i64 %146, i32 1
  br label %149

149:                                              ; preds = %144, %138
  %150 = phi i64* [ %143, %138 ], [ %148, %144 ]
  %151 = phi i64 [ %141, %138 ], [ %146, %144 ]
  %152 = phi %"struct.absl::cord_internal::CordRep"** [ %142, %138 ], [ %147, %144 ]
  %153 = phi %struct.Entry* [ %139, %138 ], [ %20, %144 ]
  %154 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %152, align 8
  %155 = load i64, i64* %150, align 8
  %156 = getelementptr inbounds %struct.Entry, %struct.Entry* %153, i64 %151, i32 2
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %133, -2
  store i64 %158, i64* %10, align 8
  br label %31

159:                                              ; preds = %50
  %160 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, %53
  %163 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1, i32 1
  %164 = bitcast %"class.absl::cord_internal::Refcount"* %163 to %"struct.absl::cord_internal::CordRep"**
  %165 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %164, align 8
  %166 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 acquire, align 4
  %168 = icmp eq i32 %167, 2
  br i1 %168, label %169, label %173

169:                                              ; preds = %159
  %170 = icmp eq %"struct.absl::cord_internal::CordRep"* %52, null
  br i1 %170, label %190, label %171

171:                                              ; preds = %169
  %172 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to i8*
  call void @_ZdlPv(i8* %172) #14
  br label %190

173:                                              ; preds = %159
  %174 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %165, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 2 monotonic
  %176 = load atomic i32, i32* %166 acquire, align 4
  %177 = icmp eq i32 %176, 2
  br i1 %177, label %181, label %178, !prof !3

178:                                              ; preds = %173
  %179 = atomicrmw sub i32* %166, i32 2 acq_rel
  %180 = icmp eq i32 %179, 2
  br i1 %180, label %181, label %190, !prof !2

181:                                              ; preds = %178, %173
  %182 = load atomic i32, i32* %174 acquire, align 4
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = atomicrmw sub i32* %174, i32 2 acq_rel
  br label %186

186:                                              ; preds = %184, %181
  %187 = icmp eq %"struct.absl::cord_internal::CordRep"* %52, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to i8*
  call void @_ZdlPv(i8* %189) #14
  br label %190

190:                                              ; preds = %188, %186, %178, %171, %169
  br label %40

191:                                              ; preds = %50
  %192 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1
  %193 = bitcast %"struct.absl::cord_internal::CordRep"* %192 to %"struct.absl::cord_internal::CordRep"**
  %194 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1, i32 1
  %195 = bitcast %"class.absl::cord_internal::Refcount"* %194 to %"struct.absl::cord_internal::CordRep"**
  %196 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %193, align 8
  %197 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %195, align 8
  %198 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 acquire, align 4
  %200 = icmp eq i32 %199, 2
  br i1 %200, label %201, label %205

201:                                              ; preds = %191
  %202 = icmp eq %"struct.absl::cord_internal::CordRep"* %52, null
  br i1 %202, label %229, label %203

203:                                              ; preds = %201
  %204 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to i8*
  call void @_ZdlPv(i8* %204) #14
  br label %229

205:                                              ; preds = %191
  %206 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %196, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw add i32* %206, i32 2 monotonic
  %208 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %197, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = atomicrmw add i32* %208, i32 2 monotonic
  %210 = load atomic i32, i32* %198 acquire, align 4
  %211 = icmp eq i32 %210, 2
  br i1 %211, label %215, label %212, !prof !3

212:                                              ; preds = %205
  %213 = atomicrmw sub i32* %198, i32 2 acq_rel
  %214 = icmp eq i32 %213, 2
  br i1 %214, label %215, label %229, !prof !2

215:                                              ; preds = %212, %205
  %216 = load atomic i32, i32* %206 acquire, align 4
  %217 = icmp eq i32 %216, 2
  br i1 %217, label %220, label %218

218:                                              ; preds = %215
  %219 = atomicrmw sub i32* %206, i32 2 acq_rel
  br label %220

220:                                              ; preds = %218, %215
  %221 = load atomic i32, i32* %208 acquire, align 4
  %222 = icmp eq i32 %221, 2
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = atomicrmw sub i32* %208, i32 2 acq_rel
  br label %225

225:                                              ; preds = %223, %220
  %226 = icmp eq %"struct.absl::cord_internal::CordRep"* %52, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %225
  %228 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to i8*
  call void @_ZdlPv(i8* %228) #14
  br label %229

229:                                              ; preds = %227, %225, %212, %203, %201
  %230 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %196, i64 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = icmp ugt i64 %231, %53
  br i1 %232, label %239, label %233

233:                                              ; preds = %229
  %234 = sub i64 %53, %231
  %235 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %196, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw sub i32* %235, i32 2 acq_rel
  %237 = icmp eq i32 %236, 2
  br i1 %237, label %238, label %267, !prof !2

238:                                              ; preds = %233
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %196) #12
  br label %267

239:                                              ; preds = %229
  %240 = sub i64 %231, %53
  %241 = icmp ugt i64 %37, %240
  br i1 %241, label %247, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %197, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = atomicrmw sub i32* %243, i32 2 acq_rel
  %245 = icmp eq i32 %244, 2
  br i1 %245, label %246, label %267, !prof !2

246:                                              ; preds = %242
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %197) #12
  br label %267

247:                                              ; preds = %239
  %248 = sub i64 %37, %240
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  store %"struct.absl::cord_internal::CordRep"* %197, %"struct.absl::cord_internal::CordRep"** %12, align 8
  store i64 0, i64* %13, align 8
  store i64 %248, i64* %14, align 8
  %249 = load i64, i64* %10, align 8, !noalias !4
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %250, 0
  %252 = load i64, i64* %15, align 8
  %253 = select i1 %251, i64 40, i64 %252
  %254 = lshr i64 %249, 1
  %255 = icmp eq i64 %254, %253
  br i1 %255, label %264, label %256, !prof !2

256:                                              ; preds = %247
  %257 = load i64, i64* %18, align 8
  %258 = select i1 %251, i64 %16, i64 %257
  %259 = inttoptr i64 %258 to %struct.Entry*
  %260 = getelementptr inbounds %struct.Entry, %struct.Entry* %259, i64 %254
  %261 = bitcast %struct.Entry* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %11, i64 24, i1 false) #12
  %262 = load i64, i64* %10, align 8
  %263 = add i64 %262, 2
  store i64 %263, i64* %10, align 8
  br label %266

264:                                              ; preds = %247
  %265 = call fastcc dereferenceable(24) %struct.Entry* @"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10CreateSlowEPNS2_7CordRepEmE3$_0EEvNS3_9DirectionES7_OT_E5EntryLm40ENSt3__19allocatorISC_EEE15EmplaceBackSlowIJSC_EEERSC_DpOT_"(%"class.absl::inlined_vector_internal::Storage"* nonnull %19, %struct.Entry* nonnull dereferenceable(24) %4) #12
  br label %266

266:                                              ; preds = %264, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %36

267:                                              ; preds = %246, %242, %238, %233
  %268 = phi i64 [ %234, %233 ], [ %234, %238 ], [ %53, %242 ], [ %53, %246 ]
  %269 = phi %"struct.absl::cord_internal::CordRep"* [ %197, %233 ], [ %197, %238 ], [ %196, %242 ], [ %196, %246 ]
  %270 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %269, i64 0, i32 2
  %271 = load i8, i8* %270, align 4
  %272 = icmp ugt i8 %271, 3
  br i1 %272, label %46, label %50

273:                                              ; preds = %50
  %274 = load i64, i64* %10, align 8
  br label %275

275:                                              ; preds = %131, %273
  %276 = phi %"class.absl::cord_internal::CordRepRing"* [ %32, %273 ], [ %132, %131 ]
  %277 = phi i64 [ %274, %273 ], [ %133, %131 ]
  %278 = and i64 %277, 1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %283, label %280

280:                                              ; preds = %275
  %281 = bitcast %struct.Entry** %17 to i8**
  %282 = load i8*, i8** %281, align 8
  call void @_ZdlPv(i8* %282) #14
  br label %283

283:                                              ; preds = %275, %280
  call void @llvm.lifetime.end.p0i8(i64 968, i8* nonnull %7) #12
  ret %"class.absl::cord_internal::CordRepRing"* %276
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = icmp ugt i8 %6, 3
  %8 = icmp eq i8 %6, 1
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %43

10:                                               ; preds = %2
  %11 = icmp ugt i64 %1, 4294967294
  br i1 %11, label %12, label %13, !prof !2

12:                                               ; preds = %10
  tail call void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #13
  unreachable

13:                                               ; preds = %10
  %14 = add nuw nsw i64 %1, 1
  %15 = mul i64 %14, 20
  %16 = add nuw nsw i64 %15, 40
  %17 = tail call i8* @_Znwm(i64 %16) #12
  %18 = bitcast i8* %17 to %"class.absl::cord_internal::CordRepRing"*
  %19 = trunc i64 %14 to i32
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 2, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %17, i64 24
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %17, i64 12
  store i8 3, i8* %24, align 4
  store i32 %19, i32* %23, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = icmp ne i32 %19, 1
  %30 = zext i1 %29 to i32
  %31 = getelementptr inbounds i8, i8* %17, i64 20
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = bitcast i8* %17 to i64*
  store i64 %4, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %17, i64 40
  %35 = bitcast i8* %34 to i64*
  store i64 %4, i64* %35, align 8
  %36 = and i64 %14, 4294967295
  %37 = shl nuw nsw i64 %36, 3
  %38 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %18, i64 0, i32 5, i64 %37
  %39 = bitcast i8* %38 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %0, %"struct.absl::cord_internal::CordRep"** %39, align 8
  %40 = shl nuw nsw i64 %36, 4
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %18, i64 0, i32 5, i64 %40
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  br label %50

43:                                               ; preds = %2
  %44 = icmp eq i8 %6, 3
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = bitcast %"struct.absl::cord_internal::CordRep"* %0 to %"class.absl::cord_internal::CordRepRing"*
  %47 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %46, i64 %1)
  br label %50

48:                                               ; preds = %43
  %49 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing10CreateSlowEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* %0, i64 %1)
  br label %50

50:                                               ; preds = %48, %45, %13
  %51 = phi %"class.absl::cord_internal::CordRepRing"* [ %18, %13 ], [ %47, %45 ], [ %49, %48 ]
  ret %"class.absl::cord_internal::CordRepRing"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing10AppendSlowEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::InlinedVector.25", align 8
  %4 = alloca %struct.Entry.34, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.absl::InlinedVector.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 968, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.32"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 960, i1 false) #12
  %10 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = bitcast %struct.Entry.34* %4 to i8*
  %12 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %4, i64 0, i32 0
  %13 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %4, i64 0, i32 1
  %14 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.32"* %8 to i64
  %17 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %struct.Entry.34** %17 to i64*
  %19 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %3, i64 0, i32 0
  %20 = bitcast %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.32"* %8 to %struct.Entry.34*
  br label %21

21:                                               ; preds = %92, %2
  %22 = phi %"class.absl::cord_internal::CordRepRing"* [ %75, %92 ], [ %0, %2 ]
  %23 = phi i64 [ %100, %92 ], [ %6, %2 ]
  %24 = phi i64 [ %98, %92 ], [ 0, %2 ]
  %25 = phi %"struct.absl::cord_internal::CordRep"* [ %97, %92 ], [ %1, %2 ]
  br label %26

26:                                               ; preds = %21, %209
  %27 = phi i64 [ %23, %21 ], [ %183, %209 ]
  %28 = phi i64 [ %24, %21 ], [ %39, %209 ]
  %29 = phi %"struct.absl::cord_internal::CordRep"* [ %25, %21 ], [ %139, %209 ]
  br label %30

30:                                               ; preds = %133, %26
  %31 = phi i64 [ %28, %26 ], [ %105, %133 ]
  %32 = phi %"struct.absl::cord_internal::CordRep"* [ %29, %26 ], [ %108, %133 ]
  %33 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 4
  %35 = icmp ugt i8 %34, 3
  br i1 %35, label %43, label %36

36:                                               ; preds = %30, %210
  %37 = phi i8 [ %214, %210 ], [ %34, %30 ]
  %38 = phi %"struct.absl::cord_internal::CordRep"* [ %212, %210 ], [ %32, %30 ]
  %39 = phi i64 [ %211, %210 ], [ %31, %30 ]
  switch i8 %37, label %216 [
    i8 0, label %134
    i8 2, label %102
    i8 3, label %40
    i8 1, label %43
  ]

40:                                               ; preds = %36
  %41 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to %"class.absl::cord_internal::CordRepRing"*
  %42 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE0EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"* %22, %"class.absl::cord_internal::CordRepRing"* %41, i64 %39, i64 %27) #12
  br label %74

43:                                               ; preds = %30, %36, %210
  %44 = phi i64 [ %39, %36 ], [ %211, %210 ], [ %31, %30 ]
  %45 = phi %"struct.absl::cord_internal::CordRep"* [ %38, %36 ], [ %212, %210 ], [ %32, %30 ]
  %46 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %22, i64 1) #12
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i32 %48, 1
  %54 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %53, %55
  %57 = select i1 %56, i32 0, i32 %53
  store i32 %57, i32* %47, align 4
  %58 = add i64 %52, %27
  store i64 %58, i64* %51, align 8
  %59 = add i64 %58, %50
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 5, i64 0
  %61 = bitcast i8* %60 to i64*
  %62 = zext i32 %48 to i64
  %63 = getelementptr inbounds i64, i64* %61, i64 %62
  store i64 %59, i64* %63, align 8
  %64 = zext i32 %55 to i64
  %65 = shl nuw nsw i64 %64, 3
  %66 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 5, i64 %65
  %67 = bitcast i8* %66 to %"struct.absl::cord_internal::CordRep"**
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %67, i64 %62
  store %"struct.absl::cord_internal::CordRep"* %45, %"struct.absl::cord_internal::CordRep"** %68, align 8
  %69 = trunc i64 %44 to i32
  %70 = shl nuw nsw i64 %64, 4
  %71 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %46, i64 0, i32 5, i64 %70
  %72 = bitcast i8* %71 to i32*
  %73 = getelementptr inbounds i32, i32* %72, i64 %62
  store i32 %69, i32* %73, align 4
  br label %74

74:                                               ; preds = %43, %40
  %75 = phi %"class.absl::cord_internal::CordRepRing"* [ %46, %43 ], [ %42, %40 ]
  %76 = load i64, i64* %10, align 8
  %77 = icmp ult i64 %76, 2
  br i1 %77, label %218, label %78

78:                                               ; preds = %74
  %79 = and i64 %76, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = load %struct.Entry.34*, %struct.Entry.34** %17, align 8
  %83 = lshr i64 %76, 1
  %84 = add nsw i64 %83, -1
  %85 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %82, i64 %84, i32 0
  %86 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %82, i64 %84, i32 1
  br label %92

87:                                               ; preds = %78
  %88 = lshr i64 %76, 1
  %89 = add nsw i64 %88, -1
  %90 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %20, i64 %89, i32 0
  %91 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %20, i64 %89, i32 1
  br label %92

92:                                               ; preds = %87, %81
  %93 = phi i64* [ %86, %81 ], [ %91, %87 ]
  %94 = phi i64 [ %84, %81 ], [ %89, %87 ]
  %95 = phi %"struct.absl::cord_internal::CordRep"** [ %85, %81 ], [ %90, %87 ]
  %96 = phi %struct.Entry.34* [ %82, %81 ], [ %20, %87 ]
  %97 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %95, align 8
  %98 = load i64, i64* %93, align 8
  %99 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %96, i64 %94, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %76, -2
  store i64 %101, i64* %10, align 8
  br label %21

102:                                              ; preds = %36
  %103 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, %39
  %106 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1
  %107 = bitcast %"class.absl::cord_internal::Refcount"* %106 to %"struct.absl::cord_internal::CordRep"**
  %108 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %107, align 8
  %109 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = icmp eq i32 %110, 2
  br i1 %111, label %112, label %116

112:                                              ; preds = %102
  %113 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %113, label %133, label %114

114:                                              ; preds = %112
  %115 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %115) #14
  br label %133

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 2 monotonic
  %119 = load atomic i32, i32* %109 acquire, align 4
  %120 = icmp eq i32 %119, 2
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %116
  %122 = atomicrmw sub i32* %109, i32 2 acq_rel
  %123 = icmp eq i32 %122, 2
  br i1 %123, label %124, label %133, !prof !2

124:                                              ; preds = %121, %116
  %125 = load atomic i32, i32* %117 acquire, align 4
  %126 = icmp eq i32 %125, 2
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = atomicrmw sub i32* %117, i32 2 acq_rel
  br label %129

129:                                              ; preds = %127, %124
  %130 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %132) #14
  br label %133

133:                                              ; preds = %131, %129, %121, %114, %112
  br label %30

134:                                              ; preds = %36
  %135 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1
  %136 = bitcast %"struct.absl::cord_internal::CordRep"* %135 to %"struct.absl::cord_internal::CordRep"**
  %137 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1
  %138 = bitcast %"class.absl::cord_internal::Refcount"* %137 to %"struct.absl::cord_internal::CordRep"**
  %139 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %136, align 8
  %140 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %138, align 8
  %141 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 acquire, align 4
  %143 = icmp eq i32 %142, 2
  br i1 %143, label %144, label %148

144:                                              ; preds = %134
  %145 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %145, label %172, label %146

146:                                              ; preds = %144
  %147 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %147) #14
  br label %172

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 2 monotonic
  %151 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %140, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw add i32* %151, i32 2 monotonic
  %153 = load atomic i32, i32* %141 acquire, align 4
  %154 = icmp eq i32 %153, 2
  br i1 %154, label %158, label %155, !prof !3

155:                                              ; preds = %148
  %156 = atomicrmw sub i32* %141, i32 2 acq_rel
  %157 = icmp eq i32 %156, 2
  br i1 %157, label %158, label %172, !prof !2

158:                                              ; preds = %155, %148
  %159 = load atomic i32, i32* %149 acquire, align 4
  %160 = icmp eq i32 %159, 2
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = atomicrmw sub i32* %149, i32 2 acq_rel
  br label %163

163:                                              ; preds = %161, %158
  %164 = load atomic i32, i32* %151 acquire, align 4
  %165 = icmp eq i32 %164, 2
  br i1 %165, label %168, label %166

166:                                              ; preds = %163
  %167 = atomicrmw sub i32* %151, i32 2 acq_rel
  br label %168

168:                                              ; preds = %166, %163
  %169 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %170, %168, %155, %146, %144
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp ugt i64 %174, %39
  br i1 %175, label %182, label %176

176:                                              ; preds = %172
  %177 = sub i64 %39, %174
  %178 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw sub i32* %178, i32 2 acq_rel
  %180 = icmp eq i32 %179, 2
  br i1 %180, label %181, label %210, !prof !2

181:                                              ; preds = %176
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %139) #12
  br label %210

182:                                              ; preds = %172
  %183 = sub i64 %174, %39
  %184 = icmp ugt i64 %27, %183
  br i1 %184, label %190, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %140, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw sub i32* %186, i32 2 acq_rel
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %189, label %210, !prof !2

189:                                              ; preds = %185
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %140) #12
  br label %210

190:                                              ; preds = %182
  %191 = sub i64 %27, %183
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  store %"struct.absl::cord_internal::CordRep"* %140, %"struct.absl::cord_internal::CordRep"** %12, align 8
  store i64 0, i64* %13, align 8
  store i64 %191, i64* %14, align 8
  %192 = load i64, i64* %10, align 8, !noalias !7
  %193 = and i64 %192, 1
  %194 = icmp eq i64 %193, 0
  %195 = load i64, i64* %15, align 8
  %196 = select i1 %194, i64 40, i64 %195
  %197 = lshr i64 %192, 1
  %198 = icmp eq i64 %197, %196
  br i1 %198, label %207, label %199, !prof !2

199:                                              ; preds = %190
  %200 = load i64, i64* %18, align 8
  %201 = select i1 %194, i64 %16, i64 %200
  %202 = inttoptr i64 %201 to %struct.Entry.34*
  %203 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %202, i64 %197
  %204 = bitcast %struct.Entry.34* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* nonnull align 8 %11, i64 24, i1 false) #12
  %205 = load i64, i64* %10, align 8
  %206 = add i64 %205, 2
  store i64 %206, i64* %10, align 8
  br label %209

207:                                              ; preds = %190
  %208 = call fastcc dereferenceable(24) %struct.Entry.34* @"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10AppendSlowEPS5_PNS2_7CordRepEE3$_1EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15EmplaceBackSlowIJSD_EEERSD_DpOT_"(%"class.absl::inlined_vector_internal::Storage.26"* nonnull %19, %struct.Entry.34* nonnull dereferenceable(24) %4) #12
  br label %209

209:                                              ; preds = %207, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %26

210:                                              ; preds = %189, %185, %181, %176
  %211 = phi i64 [ %177, %176 ], [ %177, %181 ], [ %39, %185 ], [ %39, %189 ]
  %212 = phi %"struct.absl::cord_internal::CordRep"* [ %140, %176 ], [ %140, %181 ], [ %139, %185 ], [ %139, %189 ]
  %213 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %212, i64 0, i32 2
  %214 = load i8, i8* %213, align 4
  %215 = icmp ugt i8 %214, 3
  br i1 %215, label %43, label %36

216:                                              ; preds = %36
  %217 = load i64, i64* %10, align 8
  br label %218

218:                                              ; preds = %74, %216
  %219 = phi %"class.absl::cord_internal::CordRepRing"* [ %22, %216 ], [ %75, %74 ]
  %220 = phi i64 [ %217, %216 ], [ %76, %74 ]
  %221 = and i64 %220, 1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = bitcast %struct.Entry.34** %17 to i8**
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #14
  br label %226

226:                                              ; preds = %218, %223
  call void @llvm.lifetime.end.p0i8(i64 968, i8* nonnull %7) #12
  ret %"class.absl::cord_internal::CordRepRing"* %219
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing10AppendLeafEPS1_PNS0_7CordRepEmm(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 1)
  %6 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i32 %7, 1
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  %16 = select i1 %15, i32 0, i32 %12
  store i32 %16, i32* %6, align 4
  %17 = add i64 %11, %3
  store i64 %17, i64* %10, align 8
  %18 = add i64 %17, %9
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 5, i64 0
  %20 = bitcast i8* %19 to i64*
  %21 = zext i32 %7 to i64
  %22 = getelementptr inbounds i64, i64* %20, i64 %21
  store i64 %18, i64* %22, align 8
  %23 = zext i32 %14 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 5, i64 %24
  %26 = bitcast i8* %25 to %"struct.absl::cord_internal::CordRep"**
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, i64 %21
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %28 = trunc i64 %2 to i32
  %29 = shl nuw nsw i64 %23, 4
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 5, i64 %29
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i32, i32* %31, i64 %21
  store i32 %28, i32* %32, align 4
  ret %"class.absl::cord_internal::CordRepRing"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = icmp ugt i8 %6, 3
  %8 = icmp eq i8 %6, 1
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %38

10:                                               ; preds = %2
  %11 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 1) #12
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i32 %13, 1
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  %22 = select i1 %21, i32 0, i32 %18
  store i32 %22, i32* %12, align 4
  %23 = add i64 %17, %4
  store i64 %23, i64* %16, align 8
  %24 = add i64 %23, %15
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 5, i64 0
  %26 = bitcast i8* %25 to i64*
  %27 = zext i32 %13 to i64
  %28 = getelementptr inbounds i64, i64* %26, i64 %27
  store i64 %24, i64* %28, align 8
  %29 = zext i32 %20 to i64
  %30 = shl nuw nsw i64 %29, 3
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 5, i64 %30
  %32 = bitcast i8* %31 to %"struct.absl::cord_internal::CordRep"**
  %33 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %32, i64 %27
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %33, align 8
  %34 = shl nuw nsw i64 %29, 4
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 5, i64 %34
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds i32, i32* %36, i64 %27
  store i32 0, i32* %37, align 4
  br label %45

38:                                               ; preds = %2
  %39 = icmp eq i8 %6, 3
  br i1 %39, label %40, label %43

40:                                               ; preds = %38
  %41 = bitcast %"struct.absl::cord_internal::CordRep"* %1 to %"class.absl::cord_internal::CordRepRing"*
  %42 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE0EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"* %0, %"class.absl::cord_internal::CordRepRing"* %41, i64 0, i64 %4)
  br label %45

43:                                               ; preds = %38
  %44 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing10AppendSlowEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"* %0, %"struct.absl::cord_internal::CordRep"* %1)
  br label %45

45:                                               ; preds = %43, %40, %10
  %46 = phi %"class.absl::cord_internal::CordRepRing"* [ %11, %10 ], [ %42, %40 ], [ %44, %43 ]
  ret %"class.absl::cord_internal::CordRepRing"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE0EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.absl::cord_internal::CordRepRing"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.absl::cord_internal::CordRepRing::Filler", align 8
  %8 = alloca %class.anon.13, align 8
  %9 = alloca %class.anon.14, align 8
  store %"class.absl::cord_internal::CordRepRing"* %1, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  %10 = icmp eq i64 %2, 0
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %17, label %13

13:                                               ; preds = %4
  %14 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %1, i32 %12, i64 %2) #12
  %15 = extractvalue { i32, i64 } %14, 0
  %16 = extractvalue { i32, i64 } %14, 1
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi i32 [ %15, %13 ], [ %12, %4 ]
  %19 = phi i64 [ %16, %13 ], [ 0, %4 ]
  %20 = add i64 %3, %2
  %21 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %20
  %24 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %101, label %26

26:                                               ; preds = %17
  %27 = add i64 %20, -1
  %28 = icmp ugt i32 %25, %18
  br i1 %28, label %29, label %51

29:                                               ; preds = %26
  %30 = sub i32 %25, %18
  %31 = icmp ugt i32 %30, 32
  br i1 %31, label %32, label %81

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %36 = bitcast i8* %35 to i64*
  br label %37

37:                                               ; preds = %37, %32
  %38 = phi i32 [ %30, %32 ], [ %41, %37 ]
  %39 = phi i32 [ %18, %32 ], [ %49, %37 ]
  %40 = add i32 %38, -1
  %41 = lshr i32 %40, 1
  %42 = add i32 %41, %39
  %43 = add i32 %42, 1
  %44 = zext i32 %42 to i64
  %45 = getelementptr inbounds i64, i64* %36, i64 %44
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %34
  %48 = icmp ugt i64 %47, %27
  %49 = select i1 %48, i32 %39, i32 %43
  %50 = icmp ugt i32 %40, 17
  br i1 %50, label %37, label %81, !prof !10

51:                                               ; preds = %26
  %52 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = sub i32 %25, %18
  %55 = add i32 %53, %54
  %56 = icmp ugt i32 %55, 32
  br i1 %56, label %57, label %81

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %61 = bitcast i8* %60 to i64*
  br label %62

62:                                               ; preds = %62, %57
  %63 = phi i32 [ %55, %57 ], [ %66, %62 ]
  %64 = phi i32 [ %18, %57 ], [ %79, %62 ]
  %65 = add i32 %63, -1
  %66 = lshr i32 %65, 1
  %67 = add i32 %66, %64
  %68 = icmp ult i32 %67, %53
  %69 = select i1 %68, i32 0, i32 %53
  %70 = sub i32 %67, %69
  %71 = add i32 %70, 1
  %72 = icmp eq i32 %71, %53
  %73 = select i1 %72, i32 0, i32 %71
  %74 = zext i32 %70 to i64
  %75 = getelementptr inbounds i64, i64* %61, i64 %74
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %59
  %78 = icmp ugt i64 %77, %27
  %79 = select i1 %78, i32 %64, i32 %73
  %80 = icmp ugt i32 %65, 17
  br i1 %80, label %62, label %81, !prof !10

81:                                               ; preds = %62, %37, %51, %29
  %82 = phi i32 [ %18, %29 ], [ %18, %51 ], [ %49, %37 ], [ %79, %62 ]
  %83 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %86 = bitcast i8* %85 to i64*
  %87 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  br label %89

89:                                               ; preds = %89, %81
  %90 = phi i32 [ %82, %81 ], [ %98, %89 ]
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i64, i64* %86, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %93, %84
  %95 = icmp ult i64 %27, %94
  %96 = add i32 %90, 1
  %97 = icmp eq i32 %96, %88
  %98 = select i1 %97, i32 0, i32 %96
  br i1 %95, label %99, label %89

99:                                               ; preds = %89
  %100 = sub i64 %94, %20
  br label %101

101:                                              ; preds = %17, %99
  %102 = phi i32 [ %98, %99 ], [ %25, %17 ]
  %103 = phi i64 [ %100, %99 ], [ 0, %17 ]
  %104 = sub i32 %102, %18
  %105 = icmp ugt i32 %102, %18
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  br label %109

109:                                              ; preds = %101, %106
  %110 = phi i32 [ %108, %106 ], [ 0, %101 ]
  %111 = add i32 %104, %110
  %112 = zext i32 %111 to i64
  %113 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 %112)
  %114 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %115 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 4
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = load i32, i32* %11, align 8
  %120 = icmp eq i32 %119, %18
  br i1 %120, label %121, label %123

121:                                              ; preds = %109
  %122 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  br label %135

123:                                              ; preds = %109
  %124 = icmp eq i32 %18, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  br label %128

128:                                              ; preds = %125, %123
  %129 = phi i32 [ %127, %125 ], [ %18, %123 ]
  %130 = add i32 %129, -1
  %131 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %132 = bitcast i8* %131 to i64*
  %133 = zext i32 %130 to i64
  %134 = getelementptr inbounds i64, i64* %132, i64 %133
  br label %135

135:                                              ; preds = %121, %128
  %136 = phi i64* [ %122, %121 ], [ %134, %128 ]
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %116, %19
  %139 = add i64 %138, %118
  %140 = sub i64 %139, %137
  store i64 %140, i64* %6, align 8
  %141 = bitcast %"class.absl::cord_internal::CordRepRing::Filler"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #12
  %142 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %7, i64 0, i32 0
  %143 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %7, i64 0, i32 1
  %144 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %7, i64 0, i32 2
  %145 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 2
  %146 = load i32, i32* %145, align 4
  store %"class.absl::cord_internal::CordRepRing"* %113, %"class.absl::cord_internal::CordRepRing"** %142, align 8
  store i32 %146, i32* %143, align 8
  store i32 %146, i32* %144, align 4
  %147 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 acquire, align 4
  %149 = icmp eq i32 %148, 2
  %150 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  br i1 %149, label %151, label %174

151:                                              ; preds = %135
  %152 = bitcast %class.anon.13* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #12
  %153 = getelementptr inbounds %class.anon.13, %class.anon.13* %8, i64 0, i32 0
  store %"class.absl::cord_internal::CordRepRing::Filler"* %7, %"class.absl::cord_internal::CordRepRing::Filler"** %153, align 8
  %154 = getelementptr inbounds %class.anon.13, %class.anon.13* %8, i64 0, i32 1
  store %"class.absl::cord_internal::CordRepRing"** %5, %"class.absl::cord_internal::CordRepRing"*** %154, align 8
  %155 = getelementptr inbounds %class.anon.13, %class.anon.13* %8, i64 0, i32 2
  store i64* %6, i64** %155, align 8
  call void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE0EEEPS1_S5_S5_mmEUljE_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"* %150, i32 %18, i32 %102, %class.anon.13* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #12
  %156 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  %157 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %156, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %18, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %151
  call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %156, i32 %158, i32 %18)
  %161 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  br label %162

162:                                              ; preds = %151, %160
  %163 = phi %"class.absl::cord_internal::CordRepRing"* [ %156, %151 ], [ %161, %160 ]
  %164 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %163, i64 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %102, %165
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  %168 = bitcast %"class.absl::cord_internal::CordRepRing"* %163 to i8*
  br label %172

169:                                              ; preds = %162
  call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %163, i32 %102, i32 %165)
  %170 = bitcast %"class.absl::cord_internal::CordRepRing"** %5 to i8**
  %171 = load i8*, i8** %170, align 8
  br label %172

172:                                              ; preds = %167, %169
  %173 = phi i8* [ %168, %167 ], [ %171, %169 ]
  call void @_ZdlPv(i8* %173) #12
  br label %185

174:                                              ; preds = %135
  %175 = bitcast %"class.absl::cord_internal::CordRepRing"** %5 to %"struct.absl::cord_internal::CordRep"**
  %176 = bitcast %class.anon.14* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #12
  %177 = getelementptr inbounds %class.anon.14, %class.anon.14* %9, i64 0, i32 0
  store %"class.absl::cord_internal::CordRepRing"** %5, %"class.absl::cord_internal::CordRepRing"*** %177, align 8
  %178 = getelementptr inbounds %class.anon.14, %class.anon.14* %9, i64 0, i32 1
  store %"class.absl::cord_internal::CordRepRing::Filler"* %7, %"class.absl::cord_internal::CordRepRing::Filler"** %178, align 8
  %179 = getelementptr inbounds %class.anon.14, %class.anon.14* %9, i64 0, i32 2
  store i64* %6, i64** %179, align 8
  call void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE0EEEPS1_S5_S5_mmEUljE0_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"* %150, i32 %18, i32 %102, %class.anon.14* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #12
  %180 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %175, align 8
  %181 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %180, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw sub i32* %181, i32 2 acq_rel
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %174
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %180) #12
  br label %185

185:                                              ; preds = %184, %174, %172
  %186 = icmp eq i64 %19, 0
  br i1 %186, label %200, label %187

187:                                              ; preds = %185
  %188 = load i32, i32* %143, align 8
  %189 = trunc i64 %19 to i32
  %190 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %191 = load i32, i32* %190, align 8
  %192 = zext i32 %191 to i64
  %193 = shl nuw nsw i64 %192, 4
  %194 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %193
  %195 = bitcast i8* %194 to i32*
  %196 = zext i32 %188 to i64
  %197 = getelementptr inbounds i32, i32* %195, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %198, %189
  store i32 %199, i32* %197, align 4
  br label %200

200:                                              ; preds = %185, %187
  %201 = icmp eq i64 %103, 0
  br i1 %201, label %217, label %202

202:                                              ; preds = %200
  %203 = load i32, i32* %144, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %207 = load i32, i32* %206, align 8
  br label %208

208:                                              ; preds = %202, %205
  %209 = phi i32 [ %207, %205 ], [ %203, %202 ]
  %210 = add i32 %209, -1
  %211 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 0
  %212 = bitcast i8* %211 to i64*
  %213 = zext i32 %210 to i64
  %214 = getelementptr inbounds i64, i64* %212, i64 %213
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %215, %103
  store i64 %216, i64* %214, align 8
  br label %217

217:                                              ; preds = %200, %208
  %218 = load i64, i64* %117, align 8
  %219 = add i64 %218, %3
  store i64 %219, i64* %117, align 8
  %220 = load i32, i32* %144, align 4
  store i32 %220, i32* %145, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #12
  ret %"class.absl::cord_internal::CordRepRing"* %113
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing11PrependSlowEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::InlinedVector.49", align 8
  %4 = alloca %struct.Entry.58, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.absl::InlinedVector.49"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 968, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.absl::InlinedVector.49", %"class.absl::InlinedVector.49"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.56"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 960, i1 false) #12
  %10 = getelementptr inbounds %"class.absl::InlinedVector.49", %"class.absl::InlinedVector.49"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = bitcast %struct.Entry.58* %4 to i8*
  %12 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %4, i64 0, i32 0
  %13 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %4, i64 0, i32 1
  %14 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"class.absl::InlinedVector.49", %"class.absl::InlinedVector.49"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.56"* %8 to i64
  %17 = getelementptr inbounds %"class.absl::InlinedVector.49", %"class.absl::InlinedVector.49"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %struct.Entry.58** %17 to i64*
  %19 = getelementptr inbounds %"class.absl::InlinedVector.49", %"class.absl::InlinedVector.49"* %3, i64 0, i32 0
  %20 = bitcast %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.56"* %8 to %struct.Entry.58*
  br label %21

21:                                               ; preds = %92, %2
  %22 = phi %"class.absl::cord_internal::CordRepRing"* [ %75, %92 ], [ %0, %2 ]
  %23 = phi i64 [ %100, %92 ], [ %6, %2 ]
  %24 = phi i64 [ %98, %92 ], [ 0, %2 ]
  %25 = phi %"struct.absl::cord_internal::CordRep"* [ %97, %92 ], [ %1, %2 ]
  br label %26

26:                                               ; preds = %21, %209
  %27 = phi i64 [ %23, %21 ], [ %191, %209 ]
  %28 = phi i64 [ %24, %21 ], [ 0, %209 ]
  %29 = phi %"struct.absl::cord_internal::CordRep"* [ %25, %21 ], [ %140, %209 ]
  br label %30

30:                                               ; preds = %133, %26
  %31 = phi i64 [ %28, %26 ], [ %105, %133 ]
  %32 = phi %"struct.absl::cord_internal::CordRep"* [ %29, %26 ], [ %108, %133 ]
  %33 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 4
  %35 = icmp ugt i8 %34, 3
  br i1 %35, label %40, label %36

36:                                               ; preds = %30, %210
  %37 = phi i8 [ %214, %210 ], [ %34, %30 ]
  %38 = phi %"struct.absl::cord_internal::CordRep"* [ %212, %210 ], [ %32, %30 ]
  %39 = phi i64 [ %211, %210 ], [ %31, %30 ]
  switch i8 %37, label %216 [
    i8 0, label %134
    i8 2, label %102
    i8 1, label %40
    i8 3, label %71
  ]

40:                                               ; preds = %30, %36, %210
  %41 = phi i64 [ %39, %36 ], [ %211, %210 ], [ %31, %30 ]
  %42 = phi %"struct.absl::cord_internal::CordRep"* [ %38, %36 ], [ %212, %210 ], [ %32, %30 ]
  %43 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %22, i64 1) #12
  %44 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = select i1 %46, i32 %48, i32 %45
  %50 = add i32 %49, -1
  %51 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  store i32 %50, i32* %44, align 8
  %53 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %27
  store i64 %55, i64* %53, align 8
  %56 = sub i64 %52, %27
  store i64 %56, i64* %51, align 8
  %57 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 5, i64 0
  %58 = bitcast i8* %57 to i64*
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds i64, i64* %58, i64 %59
  store i64 %52, i64* %60, align 8
  %61 = zext i32 %48 to i64
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 5, i64 %62
  %64 = bitcast i8* %63 to %"struct.absl::cord_internal::CordRep"**
  %65 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %64, i64 %59
  store %"struct.absl::cord_internal::CordRep"* %42, %"struct.absl::cord_internal::CordRep"** %65, align 8
  %66 = trunc i64 %41 to i32
  %67 = shl nuw nsw i64 %61, 4
  %68 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %43, i64 0, i32 5, i64 %67
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds i32, i32* %69, i64 %59
  store i32 %66, i32* %70, align 4
  br label %74

71:                                               ; preds = %36
  %72 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to %"class.absl::cord_internal::CordRepRing"*
  %73 = call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE1EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"* %22, %"class.absl::cord_internal::CordRepRing"* %72, i64 %39, i64 %27) #12
  br label %74

74:                                               ; preds = %71, %40
  %75 = phi %"class.absl::cord_internal::CordRepRing"* [ %43, %40 ], [ %73, %71 ]
  %76 = load i64, i64* %10, align 8
  %77 = icmp ult i64 %76, 2
  br i1 %77, label %218, label %78

78:                                               ; preds = %74
  %79 = and i64 %76, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = load %struct.Entry.58*, %struct.Entry.58** %17, align 8
  %83 = lshr i64 %76, 1
  %84 = add nsw i64 %83, -1
  %85 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %82, i64 %84, i32 0
  %86 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %82, i64 %84, i32 1
  br label %92

87:                                               ; preds = %78
  %88 = lshr i64 %76, 1
  %89 = add nsw i64 %88, -1
  %90 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %20, i64 %89, i32 0
  %91 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %20, i64 %89, i32 1
  br label %92

92:                                               ; preds = %87, %81
  %93 = phi i64* [ %86, %81 ], [ %91, %87 ]
  %94 = phi i64 [ %84, %81 ], [ %89, %87 ]
  %95 = phi %"struct.absl::cord_internal::CordRep"** [ %85, %81 ], [ %90, %87 ]
  %96 = phi %struct.Entry.58* [ %82, %81 ], [ %20, %87 ]
  %97 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %95, align 8
  %98 = load i64, i64* %93, align 8
  %99 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %96, i64 %94, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %76, -2
  store i64 %101, i64* %10, align 8
  br label %21

102:                                              ; preds = %36
  %103 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, %39
  %106 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1
  %107 = bitcast %"class.absl::cord_internal::Refcount"* %106 to %"struct.absl::cord_internal::CordRep"**
  %108 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %107, align 8
  %109 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = icmp eq i32 %110, 2
  br i1 %111, label %112, label %116

112:                                              ; preds = %102
  %113 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %113, label %133, label %114

114:                                              ; preds = %112
  %115 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %115) #14
  br label %133

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 2 monotonic
  %119 = load atomic i32, i32* %109 acquire, align 4
  %120 = icmp eq i32 %119, 2
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %116
  %122 = atomicrmw sub i32* %109, i32 2 acq_rel
  %123 = icmp eq i32 %122, 2
  br i1 %123, label %124, label %133, !prof !2

124:                                              ; preds = %121, %116
  %125 = load atomic i32, i32* %117 acquire, align 4
  %126 = icmp eq i32 %125, 2
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = atomicrmw sub i32* %117, i32 2 acq_rel
  br label %129

129:                                              ; preds = %127, %124
  %130 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %132) #14
  br label %133

133:                                              ; preds = %131, %129, %121, %114, %112
  br label %30

134:                                              ; preds = %36
  %135 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1
  %136 = bitcast %"struct.absl::cord_internal::CordRep"* %135 to %"struct.absl::cord_internal::CordRep"**
  %137 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1
  %138 = bitcast %"class.absl::cord_internal::Refcount"* %137 to %"struct.absl::cord_internal::CordRep"**
  %139 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %136, align 8
  %140 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %138, align 8
  %141 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 acquire, align 4
  %143 = icmp eq i32 %142, 2
  br i1 %143, label %144, label %148

144:                                              ; preds = %134
  %145 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %145, label %172, label %146

146:                                              ; preds = %144
  %147 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %147) #14
  br label %172

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 2 monotonic
  %151 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %140, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw add i32* %151, i32 2 monotonic
  %153 = load atomic i32, i32* %141 acquire, align 4
  %154 = icmp eq i32 %153, 2
  br i1 %154, label %158, label %155, !prof !3

155:                                              ; preds = %148
  %156 = atomicrmw sub i32* %141, i32 2 acq_rel
  %157 = icmp eq i32 %156, 2
  br i1 %157, label %158, label %172, !prof !2

158:                                              ; preds = %155, %148
  %159 = load atomic i32, i32* %149 acquire, align 4
  %160 = icmp eq i32 %159, 2
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = atomicrmw sub i32* %149, i32 2 acq_rel
  br label %163

163:                                              ; preds = %161, %158
  %164 = load atomic i32, i32* %151 acquire, align 4
  %165 = icmp eq i32 %164, 2
  br i1 %165, label %168, label %166

166:                                              ; preds = %163
  %167 = atomicrmw sub i32* %151, i32 2 acq_rel
  br label %168

168:                                              ; preds = %166, %163
  %169 = icmp eq %"struct.absl::cord_internal::CordRep"* %38, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to i8*
  call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %170, %168, %155, %146, %144
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp ugt i64 %174, %39
  br i1 %175, label %182, label %176

176:                                              ; preds = %172
  %177 = sub i64 %39, %174
  %178 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw sub i32* %178, i32 2 acq_rel
  %180 = icmp eq i32 %179, 2
  br i1 %180, label %181, label %210, !prof !2

181:                                              ; preds = %176
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %139) #12
  br label %210

182:                                              ; preds = %172
  %183 = sub i64 %174, %39
  %184 = icmp ugt i64 %27, %183
  br i1 %184, label %190, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %140, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw sub i32* %186, i32 2 acq_rel
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %189, label %210, !prof !2

189:                                              ; preds = %185
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %140) #12
  br label %210

190:                                              ; preds = %182
  %191 = sub i64 %27, %183
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  store %"struct.absl::cord_internal::CordRep"* %139, %"struct.absl::cord_internal::CordRep"** %12, align 8
  store i64 %39, i64* %13, align 8
  store i64 %183, i64* %14, align 8
  %192 = load i64, i64* %10, align 8, !noalias !11
  %193 = and i64 %192, 1
  %194 = icmp eq i64 %193, 0
  %195 = load i64, i64* %15, align 8
  %196 = select i1 %194, i64 40, i64 %195
  %197 = lshr i64 %192, 1
  %198 = icmp eq i64 %197, %196
  br i1 %198, label %207, label %199, !prof !2

199:                                              ; preds = %190
  %200 = load i64, i64* %18, align 8
  %201 = select i1 %194, i64 %16, i64 %200
  %202 = inttoptr i64 %201 to %struct.Entry.58*
  %203 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %202, i64 %197
  %204 = bitcast %struct.Entry.58* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* nonnull align 8 %11, i64 24, i1 false) #12
  %205 = load i64, i64* %10, align 8
  %206 = add i64 %205, 2
  store i64 %206, i64* %10, align 8
  br label %209

207:                                              ; preds = %190
  %208 = call fastcc dereferenceable(24) %struct.Entry.58* @"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing11PrependSlowEPS5_PNS2_7CordRepEE3$_2EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15EmplaceBackSlowIJSD_EEERSD_DpOT_"(%"class.absl::inlined_vector_internal::Storage.50"* nonnull %19, %struct.Entry.58* nonnull dereferenceable(24) %4) #12
  br label %209

209:                                              ; preds = %207, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %26

210:                                              ; preds = %189, %185, %181, %176
  %211 = phi i64 [ %177, %176 ], [ %177, %181 ], [ %39, %185 ], [ %39, %189 ]
  %212 = phi %"struct.absl::cord_internal::CordRep"* [ %140, %176 ], [ %140, %181 ], [ %139, %185 ], [ %139, %189 ]
  %213 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %212, i64 0, i32 2
  %214 = load i8, i8* %213, align 4
  %215 = icmp ugt i8 %214, 3
  br i1 %215, label %40, label %36

216:                                              ; preds = %36
  %217 = load i64, i64* %10, align 8
  br label %218

218:                                              ; preds = %74, %216
  %219 = phi %"class.absl::cord_internal::CordRepRing"* [ %22, %216 ], [ %75, %74 ]
  %220 = phi i64 [ %217, %216 ], [ %76, %74 ]
  %221 = and i64 %220, 1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = bitcast %struct.Entry.58** %17 to i8**
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #14
  br label %226

226:                                              ; preds = %218, %223
  call void @llvm.lifetime.end.p0i8(i64 968, i8* nonnull %7) #12
  ret %"class.absl::cord_internal::CordRepRing"* %219
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing11PrependLeafEPS1_PNS0_7CordRepEmm(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 1)
  %6 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = select i1 %8, i32 %10, i32 %7
  %12 = add i32 %11, -1
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  store i32 %12, i32* %6, align 8
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %3
  store i64 %17, i64* %15, align 8
  %18 = sub i64 %14, %3
  store i64 %18, i64* %13, align 8
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 5, i64 0
  %20 = bitcast i8* %19 to i64*
  %21 = zext i32 %12 to i64
  %22 = getelementptr inbounds i64, i64* %20, i64 %21
  store i64 %14, i64* %22, align 8
  %23 = zext i32 %10 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 5, i64 %24
  %26 = bitcast i8* %25 to %"struct.absl::cord_internal::CordRep"**
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, i64 %21
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %28 = trunc i64 %2 to i32
  %29 = shl nuw nsw i64 %23, 4
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %5, i64 0, i32 5, i64 %29
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i32, i32* %31, i64 %21
  store i32 %28, i32* %32, align 4
  ret %"class.absl::cord_internal::CordRepRing"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7PrependEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = icmp ugt i8 %6, 3
  %8 = icmp eq i8 %6, 1
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %38

10:                                               ; preds = %2
  %11 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 1) #12
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = select i1 %14, i32 %16, i32 %13
  %18 = add i32 %17, -1
  %19 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  store i32 %18, i32* %12, align 8
  %21 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %4
  store i64 %23, i64* %21, align 8
  %24 = sub i64 %20, %4
  store i64 %24, i64* %19, align 8
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 5, i64 0
  %26 = bitcast i8* %25 to i64*
  %27 = zext i32 %18 to i64
  %28 = getelementptr inbounds i64, i64* %26, i64 %27
  store i64 %20, i64* %28, align 8
  %29 = zext i32 %16 to i64
  %30 = shl nuw nsw i64 %29, 3
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 5, i64 %30
  %32 = bitcast i8* %31 to %"struct.absl::cord_internal::CordRep"**
  %33 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %32, i64 %27
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %33, align 8
  %34 = shl nuw nsw i64 %29, 4
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %11, i64 0, i32 5, i64 %34
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds i32, i32* %36, i64 %27
  store i32 0, i32* %37, align 4
  br label %45

38:                                               ; preds = %2
  %39 = icmp eq i8 %6, 3
  br i1 %39, label %40, label %43

40:                                               ; preds = %38
  %41 = bitcast %"struct.absl::cord_internal::CordRep"* %1 to %"class.absl::cord_internal::CordRepRing"*
  %42 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE1EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"* %0, %"class.absl::cord_internal::CordRepRing"* %41, i64 0, i64 %4)
  br label %45

43:                                               ; preds = %38
  %44 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing11PrependSlowEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"* %0, %"struct.absl::cord_internal::CordRep"* %1)
  br label %45

45:                                               ; preds = %43, %40, %10
  %46 = phi %"class.absl::cord_internal::CordRepRing"* [ %11, %10 ], [ %42, %40 ], [ %44, %43 ]
  ret %"class.absl::cord_internal::CordRepRing"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7AddRingILNS1_7AddModeE1EEEPS1_S4_S4_mm(%"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.absl::cord_internal::CordRepRing"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.absl::cord_internal::CordRepRing::Filler", align 8
  %8 = alloca %class.anon.47, align 8
  %9 = alloca %class.anon.48, align 8
  store %"class.absl::cord_internal::CordRepRing"* %1, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  %10 = icmp eq i64 %2, 0
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %17, label %13

13:                                               ; preds = %4
  %14 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %1, i32 %12, i64 %2) #12
  %15 = extractvalue { i32, i64 } %14, 0
  %16 = extractvalue { i32, i64 } %14, 1
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi i32 [ %15, %13 ], [ %12, %4 ]
  %19 = phi i64 [ %16, %13 ], [ 0, %4 ]
  %20 = add i64 %3, %2
  %21 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %20
  %24 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %101, label %26

26:                                               ; preds = %17
  %27 = add i64 %20, -1
  %28 = icmp ugt i32 %25, %18
  br i1 %28, label %29, label %51

29:                                               ; preds = %26
  %30 = sub i32 %25, %18
  %31 = icmp ugt i32 %30, 32
  br i1 %31, label %32, label %81

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %36 = bitcast i8* %35 to i64*
  br label %37

37:                                               ; preds = %37, %32
  %38 = phi i32 [ %30, %32 ], [ %41, %37 ]
  %39 = phi i32 [ %18, %32 ], [ %49, %37 ]
  %40 = add i32 %38, -1
  %41 = lshr i32 %40, 1
  %42 = add i32 %41, %39
  %43 = add i32 %42, 1
  %44 = zext i32 %42 to i64
  %45 = getelementptr inbounds i64, i64* %36, i64 %44
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %34
  %48 = icmp ugt i64 %47, %27
  %49 = select i1 %48, i32 %39, i32 %43
  %50 = icmp ugt i32 %40, 17
  br i1 %50, label %37, label %81, !prof !10

51:                                               ; preds = %26
  %52 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = sub i32 %25, %18
  %55 = add i32 %53, %54
  %56 = icmp ugt i32 %55, 32
  br i1 %56, label %57, label %81

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %61 = bitcast i8* %60 to i64*
  br label %62

62:                                               ; preds = %62, %57
  %63 = phi i32 [ %55, %57 ], [ %66, %62 ]
  %64 = phi i32 [ %18, %57 ], [ %79, %62 ]
  %65 = add i32 %63, -1
  %66 = lshr i32 %65, 1
  %67 = add i32 %66, %64
  %68 = icmp ult i32 %67, %53
  %69 = select i1 %68, i32 0, i32 %53
  %70 = sub i32 %67, %69
  %71 = add i32 %70, 1
  %72 = icmp eq i32 %71, %53
  %73 = select i1 %72, i32 0, i32 %71
  %74 = zext i32 %70 to i64
  %75 = getelementptr inbounds i64, i64* %61, i64 %74
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %59
  %78 = icmp ugt i64 %77, %27
  %79 = select i1 %78, i32 %64, i32 %73
  %80 = icmp ugt i32 %65, 17
  br i1 %80, label %62, label %81, !prof !10

81:                                               ; preds = %62, %37, %51, %29
  %82 = phi i32 [ %18, %29 ], [ %18, %51 ], [ %49, %37 ], [ %79, %62 ]
  %83 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %86 = bitcast i8* %85 to i64*
  %87 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  br label %89

89:                                               ; preds = %89, %81
  %90 = phi i32 [ %82, %81 ], [ %98, %89 ]
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i64, i64* %86, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %93, %84
  %95 = icmp ult i64 %27, %94
  %96 = add i32 %90, 1
  %97 = icmp eq i32 %96, %88
  %98 = select i1 %97, i32 0, i32 %96
  br i1 %95, label %99, label %89

99:                                               ; preds = %89
  %100 = sub i64 %94, %20
  br label %101

101:                                              ; preds = %17, %99
  %102 = phi i32 [ %98, %99 ], [ %25, %17 ]
  %103 = phi i64 [ %100, %99 ], [ 0, %17 ]
  %104 = sub i32 %102, %18
  %105 = icmp ugt i32 %102, %18
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  br label %109

109:                                              ; preds = %101, %106
  %110 = phi i32 [ %108, %106 ], [ 0, %101 ]
  %111 = add i32 %110, %104
  %112 = zext i32 %111 to i64
  %113 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 %112)
  %114 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %115 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 4
  %116 = load i64, i64* %115, align 8
  %117 = load i32, i32* %11, align 8
  %118 = icmp eq i32 %117, %18
  br i1 %118, label %119, label %121

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 4
  br label %133

121:                                              ; preds = %109
  %122 = icmp eq i32 %18, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  br label %126

126:                                              ; preds = %123, %121
  %127 = phi i32 [ %125, %123 ], [ %18, %121 ]
  %128 = add i32 %127, -1
  %129 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 5, i64 0
  %130 = bitcast i8* %129 to i64*
  %131 = zext i32 %128 to i64
  %132 = getelementptr inbounds i64, i64* %130, i64 %131
  br label %133

133:                                              ; preds = %119, %126
  %134 = phi i64* [ %120, %119 ], [ %132, %126 ]
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %19, %3
  %137 = sub i64 %116, %136
  %138 = sub i64 %137, %135
  store i64 %138, i64* %6, align 8
  %139 = bitcast %"class.absl::cord_internal::CordRepRing::Filler"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #12
  %140 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %7, i64 0, i32 0
  %141 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %7, i64 0, i32 1
  %142 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %7, i64 0, i32 2
  %143 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 1
  %144 = bitcast %"class.absl::cord_internal::CordRepRing::Filler"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 16, i1 false)
  %145 = load i32, i32* %143, align 8
  %146 = icmp ult i32 %145, %111
  br i1 %146, label %149, label %147

147:                                              ; preds = %133
  %148 = sub i32 %145, %111
  br label %154

149:                                              ; preds = %133
  %150 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %151 = load i32, i32* %150, align 8
  %152 = sub i32 %145, %111
  %153 = add i32 %152, %151
  br label %154

154:                                              ; preds = %147, %149
  %155 = phi i32 [ %148, %147 ], [ %153, %149 ]
  store %"class.absl::cord_internal::CordRepRing"* %113, %"class.absl::cord_internal::CordRepRing"** %140, align 8
  store i32 %155, i32* %141, align 8
  store i32 %155, i32* %142, align 4
  %156 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 acquire, align 4
  %158 = icmp eq i32 %157, 2
  %159 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  br i1 %158, label %160, label %183

160:                                              ; preds = %154
  %161 = bitcast %class.anon.47* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #12
  %162 = getelementptr inbounds %class.anon.47, %class.anon.47* %8, i64 0, i32 0
  store %"class.absl::cord_internal::CordRepRing::Filler"* %7, %"class.absl::cord_internal::CordRepRing::Filler"** %162, align 8
  %163 = getelementptr inbounds %class.anon.47, %class.anon.47* %8, i64 0, i32 1
  store %"class.absl::cord_internal::CordRepRing"** %5, %"class.absl::cord_internal::CordRepRing"*** %163, align 8
  %164 = getelementptr inbounds %class.anon.47, %class.anon.47* %8, i64 0, i32 2
  store i64* %6, i64** %164, align 8
  call void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE1EEEPS1_S5_S5_mmEUljE_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"* %159, i32 %18, i32 %102, %class.anon.47* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #12
  %165 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  %166 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %165, i64 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %18, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %160
  call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %165, i32 %167, i32 %18)
  %170 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %5, align 8
  br label %171

171:                                              ; preds = %160, %169
  %172 = phi %"class.absl::cord_internal::CordRepRing"* [ %165, %160 ], [ %170, %169 ]
  %173 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %172, i64 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %102, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  %177 = bitcast %"class.absl::cord_internal::CordRepRing"* %172 to i8*
  br label %181

178:                                              ; preds = %171
  call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %172, i32 %102, i32 %174)
  %179 = bitcast %"class.absl::cord_internal::CordRepRing"** %5 to i8**
  %180 = load i8*, i8** %179, align 8
  br label %181

181:                                              ; preds = %176, %178
  %182 = phi i8* [ %177, %176 ], [ %180, %178 ]
  call void @_ZdlPv(i8* %182) #12
  br label %194

183:                                              ; preds = %154
  %184 = bitcast %"class.absl::cord_internal::CordRepRing"** %5 to %"struct.absl::cord_internal::CordRep"**
  %185 = bitcast %class.anon.48* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #12
  %186 = getelementptr inbounds %class.anon.48, %class.anon.48* %9, i64 0, i32 0
  store %"class.absl::cord_internal::CordRepRing"** %5, %"class.absl::cord_internal::CordRepRing"*** %186, align 8
  %187 = getelementptr inbounds %class.anon.48, %class.anon.48* %9, i64 0, i32 1
  store %"class.absl::cord_internal::CordRepRing::Filler"* %7, %"class.absl::cord_internal::CordRepRing::Filler"** %187, align 8
  %188 = getelementptr inbounds %class.anon.48, %class.anon.48* %9, i64 0, i32 2
  store i64* %6, i64** %188, align 8
  call void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE1EEEPS1_S5_S5_mmEUljE0_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"* %159, i32 %18, i32 %102, %class.anon.48* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #12
  %189 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %184, align 8
  %190 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %189, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw sub i32* %190, i32 2 acq_rel
  %192 = icmp eq i32 %191, 2
  br i1 %192, label %193, label %194, !prof !2

193:                                              ; preds = %183
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %189) #12
  br label %194

194:                                              ; preds = %193, %183, %181
  %195 = icmp eq i64 %19, 0
  br i1 %195, label %209, label %196

196:                                              ; preds = %194
  %197 = load i32, i32* %141, align 8
  %198 = trunc i64 %19 to i32
  %199 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %200 = load i32, i32* %199, align 8
  %201 = zext i32 %200 to i64
  %202 = shl nuw nsw i64 %201, 4
  %203 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %202
  %204 = bitcast i8* %203 to i32*
  %205 = zext i32 %197 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = add i32 %207, %198
  store i32 %208, i32* %206, align 4
  br label %209

209:                                              ; preds = %194, %196
  %210 = icmp eq i64 %103, 0
  br i1 %210, label %226, label %211

211:                                              ; preds = %209
  %212 = load i32, i32* %142, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %216 = load i32, i32* %215, align 8
  br label %217

217:                                              ; preds = %211, %214
  %218 = phi i32 [ %216, %214 ], [ %212, %211 ]
  %219 = add i32 %218, -1
  %220 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 0
  %221 = bitcast i8* %220 to i64*
  %222 = zext i32 %219 to i64
  %223 = getelementptr inbounds i64, i64* %221, i64 %222
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %224, %103
  store i64 %225, i64* %223, align 8
  br label %226

226:                                              ; preds = %209, %217
  %227 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 0, i32 0
  %228 = load i64, i64* %227, align 8
  %229 = add i64 %228, %3
  store i64 %229, i64* %227, align 8
  %230 = load i32, i32* %141, align 8
  store i32 %230, i32* %143, align 8
  %231 = load i64, i64* %115, align 8
  %232 = sub i64 %231, %3
  store i64 %232, i64* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #12
  ret %"class.absl::cord_internal::CordRepRing"* %113
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_NS_11string_viewEm(%"class.absl::cord_internal::CordRepRing"*, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %82

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = select i1 %11, i32 %13, i32 %10
  %15 = add i32 %14, -1
  %16 = zext i32 %13 to i64
  %17 = shl nuw nsw i64 %16, 3
  %18 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %17
  %19 = bitcast i8* %18 to %"struct.absl::cord_internal::CordRep"**
  %20 = zext i32 %15 to i64
  %21 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %19, i64 %20
  %22 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %21, align 8
  %23 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 4
  %25 = icmp ugt i8 %24, 3
  br i1 %25, label %26, label %82

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %30, label %82

30:                                               ; preds = %26
  %31 = load i8, i8* %23, align 4
  %32 = zext i8 %31 to i32
  %33 = icmp ult i8 %31, -127
  %34 = shl nuw nsw i32 %32, 3
  %35 = shl nuw nsw i32 %32, 5
  %36 = add nsw i32 %35, -3072
  %37 = select i1 %33, i32 %34, i32 %36
  %38 = add nsw i32 %37, -13
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %41 = bitcast i8* %40 to i64*
  %42 = getelementptr inbounds i64, i64* %41, i64 %20
  %43 = load i64, i64* %42, align 8
  %44 = load i32, i32* %12, align 8
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = getelementptr inbounds i32, i32* %48, i64 %20
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, %15
  br i1 %54, label %55, label %57

55:                                               ; preds = %30
  %56 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  br label %63

57:                                               ; preds = %30
  %58 = icmp eq i32 %15, 0
  %59 = select i1 %58, i32 %44, i32 %15
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i64, i64* %41, i64 %61
  br label %63

63:                                               ; preds = %57, %55
  %64 = phi i64* [ %56, %55 ], [ %62, %57 ]
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %43, %65
  %67 = add i64 %66, %51
  %68 = sub i64 %39, %67
  %69 = icmp ugt i64 %68, %2
  %70 = select i1 %69, i64 %2, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %63
  %73 = add i64 %70, %67
  %74 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %22, i64 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = add i64 %70, %43
  store i64 %75, i64* %42, align 8
  %76 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %70
  store i64 %78, i64* %76, align 8
  %79 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %22, i64 0, i32 3, i64 %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %1, i64 %70, i1 false)
  %80 = getelementptr inbounds i8, i8* %1, i64 %70
  %81 = sub i64 %2, %70
  br label %82

82:                                               ; preds = %63, %8, %26, %72, %4
  %83 = phi i8* [ %1, %4 ], [ %80, %72 ], [ %1, %26 ], [ %1, %8 ], [ %1, %63 ]
  %84 = phi i64 [ %2, %4 ], [ %81, %72 ], [ %2, %26 ], [ %2, %8 ], [ %2, %63 ]
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %190, label %86

86:                                               ; preds = %82
  %87 = add i64 %84, -1
  %88 = udiv i64 %87, 4083
  %89 = add nuw nsw i64 %88, 1
  %90 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 %89)
  %91 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 4
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, %94
  %98 = icmp ugt i64 %84, 4082
  br i1 %98, label %99, label %136

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 5, i64 0
  %101 = bitcast i8* %100 to i64*
  %102 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 3
  br label %103

103:                                              ; preds = %99, %103
  %104 = phi i64 [ %97, %99 ], [ %114, %103 ]
  %105 = phi i64 [ %84, %99 ], [ %132, %103 ]
  %106 = phi i32 [ %92, %99 ], [ %130, %103 ]
  %107 = phi i8* [ %83, %99 ], [ %131, %103 ]
  %108 = tail call i8* @_Znwm(i64 4096) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #12
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  %110 = bitcast i8* %109 to i32*
  store i32 2, i32* %110, align 4
  %111 = getelementptr inbounds i8, i8* %108, i64 12
  store i8 -32, i8* %111, align 4
  %112 = bitcast i8* %108 to i64*
  store i64 4083, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %108, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %113, i8* align 1 %107, i64 4083, i1 false) #12
  %114 = add i64 %104, 4083
  %115 = zext i32 %106 to i64
  %116 = getelementptr inbounds i64, i64* %101, i64 %115
  store i64 %114, i64* %116, align 8
  %117 = load i32, i32* %102, align 8
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 3
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 5, i64 %119
  %121 = bitcast i8* %120 to %"struct.absl::cord_internal::CordRep"**
  %122 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %121, i64 %115
  %123 = bitcast %"struct.absl::cord_internal::CordRep"** %122 to i8**
  store i8* %108, i8** %123, align 8
  %124 = shl nuw nsw i64 %118, 4
  %125 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 5, i64 %124
  %126 = bitcast i8* %125 to i32*
  %127 = getelementptr inbounds i32, i32* %126, i64 %115
  store i32 0, i32* %127, align 4
  %128 = add i32 %106, 1
  %129 = icmp eq i32 %128, %117
  %130 = select i1 %129, i32 0, i32 %128
  %131 = getelementptr inbounds i8, i8* %107, i64 4083
  %132 = add i64 %105, -4083
  %133 = icmp ugt i64 %132, 4082
  br i1 %133, label %103, label %134

134:                                              ; preds = %103
  %135 = icmp eq i64 %132, 0
  br i1 %135, label %185, label %136

136:                                              ; preds = %86, %134
  %137 = phi i64 [ %114, %134 ], [ %97, %86 ]
  %138 = phi i64 [ %132, %134 ], [ %84, %86 ]
  %139 = phi i32 [ %130, %134 ], [ %92, %86 ]
  %140 = phi i8* [ %131, %134 ], [ %83, %86 ]
  %141 = add i64 %138, %3
  %142 = icmp ult i64 %141, 20
  %143 = icmp ult i64 %141, 4083
  %144 = select i1 %143, i64 %141, i64 4083
  %145 = add nuw nsw i64 %144, 13
  %146 = select i1 %142, i64 32, i64 %145
  %147 = icmp ult i64 %146, 1025
  %148 = select i1 %147, i64 8, i64 32
  %149 = add nsw i64 %146, -1
  %150 = add nuw nsw i64 %149, %148
  %151 = sub nsw i64 0, %148
  %152 = and i64 %150, %151
  %153 = tail call i8* @_Znwm(i64 %152) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 0, i64 16, i1 false) #12
  %154 = getelementptr inbounds i8, i8* %153, i64 8
  %155 = bitcast i8* %154 to i32*
  store i32 2, i32* %155, align 4
  %156 = icmp ult i64 %152, 1025
  %157 = lshr exact i64 %152, 3
  %158 = lshr i64 %152, 5
  %159 = add nuw nsw i64 %158, 96
  %160 = select i1 %156, i64 %157, i64 %159
  %161 = trunc i64 %160 to i8
  %162 = getelementptr inbounds i8, i8* %153, i64 12
  store i8 %161, i8* %162, align 4
  %163 = bitcast i8* %153 to i64*
  store i64 %138, i64* %163, align 8
  %164 = getelementptr inbounds i8, i8* %153, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %140, i64 %138, i1 false) #12
  %165 = add i64 %137, %138
  %166 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 5, i64 0
  %167 = bitcast i8* %166 to i64*
  %168 = zext i32 %139 to i64
  %169 = getelementptr inbounds i64, i64* %167, i64 %168
  store i64 %165, i64* %169, align 8
  %170 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 3
  %171 = load i32, i32* %170, align 8
  %172 = zext i32 %171 to i64
  %173 = shl nuw nsw i64 %172, 3
  %174 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 5, i64 %173
  %175 = bitcast i8* %174 to %"struct.absl::cord_internal::CordRep"**
  %176 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %175, i64 %168
  %177 = bitcast %"struct.absl::cord_internal::CordRep"** %176 to i8**
  store i8* %153, i8** %177, align 8
  %178 = shl nuw nsw i64 %172, 4
  %179 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %90, i64 0, i32 5, i64 %178
  %180 = bitcast i8* %179 to i32*
  %181 = getelementptr inbounds i32, i32* %180, i64 %168
  store i32 0, i32* %181, align 4
  %182 = add i32 %139, 1
  %183 = icmp eq i32 %182, %171
  %184 = select i1 %183, i32 0, i32 %182
  br label %185

185:                                              ; preds = %134, %136
  %186 = phi i32 [ %130, %134 ], [ %184, %136 ]
  %187 = phi i64 [ %114, %134 ], [ %165, %136 ]
  %188 = load i64, i64* %93, align 8
  %189 = sub i64 %187, %188
  store i64 %189, i64* %95, align 8
  store i32 %186, i32* %91, align 4
  br label %190

190:                                              ; preds = %82, %185
  %191 = phi %"class.absl::cord_internal::CordRepRing"* [ %90, %185 ], [ %0, %82 ]
  ret %"class.absl::cord_internal::CordRepRing"* %191
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7PrependEPS1_NS_11string_viewEm(%"class.absl::cord_internal::CordRepRing"*, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %61

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 3
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %14
  %16 = bitcast i8* %15 to %"struct.absl::cord_internal::CordRep"**
  %17 = zext i32 %10 to i64
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, i64 %17
  %19 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %18, align 8
  %20 = shl nuw nsw i64 %13, 4
  %21 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %20
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds i32, i32* %22, i64 %17
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 acquire, align 4
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %31, label %61

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %19, i64 0, i32 2
  %33 = load i8, i8* %32, align 4
  %34 = icmp ugt i8 %33, 3
  br i1 %34, label %35, label %61

35:                                               ; preds = %31
  %36 = icmp ugt i64 %25, %2
  %37 = select i1 %36, i64 %2, i64 %25
  %38 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %37
  store i64 %43, i64* %41, align 8
  %44 = sub nsw i64 %25, %37
  %45 = trunc i64 %44 to i32
  %46 = load i32, i32* %11, align 8
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 4
  %49 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %48
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %9, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  store i32 %45, i32* %53, align 4
  %54 = icmp eq i64 %37, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %35
  %56 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %19, i64 0, i32 3, i64 %44
  %57 = getelementptr inbounds i8, i8* %1, i64 %2
  %58 = sub nsw i64 0, %37
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %59, i64 %37, i1 false)
  %60 = sub i64 %2, %37
  br label %61

61:                                               ; preds = %27, %31, %8, %35, %55, %4
  %62 = phi i64 [ %2, %4 ], [ %2, %35 ], [ %60, %55 ], [ %2, %8 ], [ %2, %31 ], [ %2, %27 ]
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %180, label %64

64:                                               ; preds = %61
  %65 = add i64 %62, -1
  %66 = udiv i64 %65, 4083
  %67 = add nuw nsw i64 %66, 1
  %68 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7MutableEPS1_m(%"class.absl::cord_internal::CordRepRing"* %0, i64 %67)
  %69 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = trunc i64 %67 to i32
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %64
  %76 = sub i32 %72, %73
  br label %82

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = sub i32 %72, %73
  %81 = add i32 %80, %79
  br label %82

82:                                               ; preds = %75, %77
  %83 = phi i32 [ %76, %75 ], [ %81, %77 ]
  %84 = mul i64 %66, -4083
  %85 = add i64 %84, %62
  %86 = add i64 %85, %3
  %87 = icmp ult i64 %86, 20
  %88 = icmp ult i64 %86, 4083
  %89 = select i1 %88, i64 %86, i64 4083
  %90 = add nuw nsw i64 %89, 13
  %91 = select i1 %87, i64 32, i64 %90
  %92 = icmp ult i64 %91, 1025
  %93 = select i1 %92, i64 8, i64 32
  %94 = add nsw i64 %91, -1
  %95 = add nuw nsw i64 %94, %93
  %96 = sub nsw i64 0, %93
  %97 = and i64 %95, %96
  %98 = tail call i8* @_Znwm(i64 %97) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 16, i1 false) #12
  %99 = getelementptr inbounds i8, i8* %98, i64 8
  %100 = bitcast i8* %99 to i32*
  store i32 2, i32* %100, align 4
  %101 = icmp ult i64 %97, 1025
  %102 = lshr exact i64 %97, 3
  %103 = lshr i64 %97, 5
  %104 = add nuw nsw i64 %103, 96
  %105 = select i1 %101, i64 %102, i64 %104
  %106 = trunc i64 %105 to i8
  %107 = getelementptr inbounds i8, i8* %98, i64 12
  store i8 %106, i8* %107, align 4
  %108 = bitcast i8* %98 to i64*
  store i64 %86, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %98, i64 13
  %110 = getelementptr inbounds i8, i8* %109, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %1, i64 %85, i1 false)
  %111 = icmp ult i64 %62, %85
  br i1 %111, label %112, label %113, !prof !2

112:                                              ; preds = %82
  tail call void @llvm.trap() #12
  unreachable

113:                                              ; preds = %82
  %114 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 5, i64 0
  %115 = bitcast i8* %114 to i64*
  %116 = zext i32 %83 to i64
  %117 = getelementptr inbounds i64, i64* %115, i64 %116
  store i64 %70, i64* %117, align 8
  %118 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 5, i64 %121
  %123 = bitcast i8* %122 to %"struct.absl::cord_internal::CordRep"**
  %124 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %123, i64 %116
  %125 = bitcast %"struct.absl::cord_internal::CordRep"** %124 to i8**
  store i8* %98, i8** %125, align 8
  %126 = trunc i64 %3 to i32
  %127 = shl nuw nsw i64 %120, 4
  %128 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 5, i64 %127
  %129 = bitcast i8* %128 to i32*
  %130 = getelementptr inbounds i32, i32* %129, i64 %116
  store i32 %126, i32* %130, align 4
  %131 = add i32 %83, 1
  %132 = sub i64 %70, %85
  %133 = icmp eq i64 %84, 0
  br i1 %133, label %173, label %134

134:                                              ; preds = %113
  %135 = icmp eq i32 %131, %119
  %136 = select i1 %135, i32 0, i32 %131
  %137 = sub i64 0, %84
  %138 = getelementptr inbounds i8, i8* %1, i64 %85
  br label %139

139:                                              ; preds = %134, %166
  %140 = phi i64 [ %167, %166 ], [ %132, %134 ]
  %141 = phi i32 [ %169, %166 ], [ %136, %134 ]
  %142 = phi i8* [ %170, %166 ], [ %138, %134 ]
  %143 = phi i64 [ %171, %166 ], [ %137, %134 ]
  %144 = tail call i8* @_Znwm(i64 4096) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 16, i1 false) #12
  %145 = getelementptr inbounds i8, i8* %144, i64 8
  %146 = bitcast i8* %145 to i32*
  store i32 2, i32* %146, align 4
  %147 = getelementptr inbounds i8, i8* %144, i64 12
  store i8 -32, i8* %147, align 4
  %148 = bitcast i8* %144 to i64*
  store i64 4083, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %144, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 1 %142, i64 4083, i1 false) #12
  %150 = zext i32 %141 to i64
  %151 = getelementptr inbounds i64, i64* %115, i64 %150
  store i64 %140, i64* %151, align 8
  %152 = load i32, i32* %118, align 8
  %153 = zext i32 %152 to i64
  %154 = shl nuw nsw i64 %153, 3
  %155 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 5, i64 %154
  %156 = bitcast i8* %155 to %"struct.absl::cord_internal::CordRep"**
  %157 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %156, i64 %150
  %158 = bitcast %"struct.absl::cord_internal::CordRep"** %157 to i8**
  store i8* %144, i8** %158, align 8
  %159 = shl nuw nsw i64 %153, 4
  %160 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 5, i64 %159
  %161 = bitcast i8* %160 to i32*
  %162 = getelementptr inbounds i32, i32* %161, i64 %150
  store i32 0, i32* %162, align 4
  %163 = add i32 %141, 1
  %164 = icmp ult i64 %143, 4083
  br i1 %164, label %165, label %166, !prof !2

165:                                              ; preds = %139
  tail call void @llvm.trap() #12
  unreachable

166:                                              ; preds = %139
  %167 = add i64 %140, -4083
  %168 = icmp eq i32 %163, %152
  %169 = select i1 %168, i32 0, i32 %163
  %170 = getelementptr inbounds i8, i8* %142, i64 4083
  %171 = add i64 %143, -4083
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %139

173:                                              ; preds = %166, %113
  %174 = phi i64 [ %132, %113 ], [ %167, %166 ]
  store i32 %83, i32* %71, align 8
  %175 = load i64, i64* %69, align 8
  %176 = sub i64 %175, %174
  %177 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %68, i64 0, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = add i64 %176, %178
  store i64 %179, i64* %177, align 8
  store i64 %174, i64* %69, align 8
  br label %180

180:                                              ; preds = %61, %173
  %181 = phi %"class.absl::cord_internal::CordRepRing"* [ %68, %173 ], [ %0, %61 ]
  ret %"class.absl::cord_internal::CordRepRing"* %181
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* nocapture readonly, i32, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %29

7:                                                ; preds = %3
  %8 = sub i32 %5, %1
  %9 = icmp ugt i32 %8, 32
  br i1 %9, label %10, label %59

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %14 = bitcast i8* %13 to i64*
  br label %15

15:                                               ; preds = %15, %10
  %16 = phi i32 [ %8, %10 ], [ %19, %15 ]
  %17 = phi i32 [ %1, %10 ], [ %27, %15 ]
  %18 = add i32 %16, -1
  %19 = lshr i32 %18, 1
  %20 = add i32 %19, %17
  %21 = add i32 %20, 1
  %22 = zext i32 %20 to i64
  %23 = getelementptr inbounds i64, i64* %14, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %12
  %26 = icmp ugt i64 %25, %2
  %27 = select i1 %26, i32 %17, i32 %21
  %28 = icmp ugt i32 %18, 17
  br i1 %28, label %15, label %59, !prof !10

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = sub i32 %5, %1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 32
  br i1 %34, label %35, label %59

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %39 = bitcast i8* %38 to i64*
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i32 [ %33, %35 ], [ %44, %40 ]
  %42 = phi i32 [ %1, %35 ], [ %57, %40 ]
  %43 = add i32 %41, -1
  %44 = lshr i32 %43, 1
  %45 = add i32 %44, %42
  %46 = icmp ult i32 %45, %31
  %47 = select i1 %46, i32 0, i32 %31
  %48 = sub i32 %45, %47
  %49 = add i32 %48, 1
  %50 = icmp eq i32 %49, %31
  %51 = select i1 %50, i32 0, i32 %49
  %52 = zext i32 %48 to i64
  %53 = getelementptr inbounds i64, i64* %39, i64 %52
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %37
  %56 = icmp ugt i64 %55, %2
  %57 = select i1 %56, i32 %42, i32 %51
  %58 = icmp ugt i32 %43, 17
  br i1 %58, label %40, label %59, !prof !10

59:                                               ; preds = %40, %15, %29, %7
  %60 = phi i32 [ %1, %7 ], [ %1, %29 ], [ %27, %15 ], [ %57, %40 ]
  %61 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, %60
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  br label %78

66:                                               ; preds = %59
  %67 = icmp eq i32 %60, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  br label %71

71:                                               ; preds = %68, %66
  %72 = phi i32 [ %70, %68 ], [ %60, %66 ]
  %73 = add i32 %72, -1
  %74 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %75 = bitcast i8* %74 to i64*
  %76 = zext i32 %73 to i64
  %77 = getelementptr inbounds i64, i64* %75, i64 %76
  br label %78

78:                                               ; preds = %64, %71
  %79 = phi i64* [ %65, %64 ], [ %77, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %82 = bitcast i8* %81 to i64*
  %83 = zext i32 %60 to i64
  %84 = getelementptr inbounds i64, i64* %82, i64 %83
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = icmp ugt i64 %88, %2
  br i1 %89, label %104, label %90

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  br label %93

93:                                               ; preds = %90, %93
  %94 = phi i64 [ %85, %90 ], [ %101, %93 ]
  %95 = phi i32 [ %60, %90 ], [ %98, %93 ]
  %96 = add i32 %95, 1
  %97 = icmp eq i32 %96, %92
  %98 = select i1 %97, i32 0, i32 %96
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i64, i64* %82, i64 %99
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %101, %87
  %103 = icmp ugt i64 %102, %2
  br i1 %103, label %104, label %93

104:                                              ; preds = %93, %78
  %105 = phi i32 [ %60, %78 ], [ %98, %93 ]
  %106 = phi i64 [ %80, %78 ], [ %94, %93 ]
  %107 = sub i64 %2, %106
  %108 = add i64 %107, %87
  %109 = insertvalue { i32, i64 } undef, i32 %105, 0
  %110 = insertvalue { i32, i64 } %109, i64 %108, 1
  ret { i32, i64 } %110
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing12FindTailSlowEjm(%"class.absl::cord_internal::CordRepRing"* nocapture readonly, i32, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i64 %2, -1
  %7 = icmp ugt i32 %5, %1
  br i1 %7, label %8, label %30

8:                                                ; preds = %3
  %9 = sub i32 %5, %1
  %10 = icmp ugt i32 %9, 32
  br i1 %10, label %11, label %60

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %15 = bitcast i8* %14 to i64*
  br label %16

16:                                               ; preds = %16, %11
  %17 = phi i32 [ %9, %11 ], [ %20, %16 ]
  %18 = phi i32 [ %1, %11 ], [ %28, %16 ]
  %19 = add i32 %17, -1
  %20 = lshr i32 %19, 1
  %21 = add i32 %20, %18
  %22 = add i32 %21, 1
  %23 = zext i32 %21 to i64
  %24 = getelementptr inbounds i64, i64* %15, i64 %23
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %13
  %27 = icmp ugt i64 %26, %6
  %28 = select i1 %27, i32 %18, i32 %22
  %29 = icmp ugt i32 %19, 17
  br i1 %29, label %16, label %60, !prof !10

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = sub i32 %5, %1
  %34 = add i32 %33, %32
  %35 = icmp ugt i32 %34, 32
  br i1 %35, label %36, label %60

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %40 = bitcast i8* %39 to i64*
  br label %41

41:                                               ; preds = %41, %36
  %42 = phi i32 [ %34, %36 ], [ %45, %41 ]
  %43 = phi i32 [ %1, %36 ], [ %58, %41 ]
  %44 = add i32 %42, -1
  %45 = lshr i32 %44, 1
  %46 = add i32 %45, %43
  %47 = icmp ult i32 %46, %32
  %48 = select i1 %47, i32 0, i32 %32
  %49 = sub i32 %46, %48
  %50 = add i32 %49, 1
  %51 = icmp eq i32 %50, %32
  %52 = select i1 %51, i32 0, i32 %50
  %53 = zext i32 %49 to i64
  %54 = getelementptr inbounds i64, i64* %40, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %38
  %57 = icmp ugt i64 %56, %6
  %58 = select i1 %57, i32 %43, i32 %52
  %59 = icmp ugt i32 %44, 17
  br i1 %59, label %41, label %60, !prof !10

60:                                               ; preds = %41, %16, %30, %8
  %61 = phi i32 [ %1, %8 ], [ %1, %30 ], [ %28, %16 ], [ %58, %41 ]
  %62 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %65 = bitcast i8* %64 to i64*
  %66 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %68, %60
  %69 = phi i32 [ %61, %60 ], [ %77, %68 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i64, i64* %65, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %72, %63
  %74 = icmp ult i64 %6, %73
  %75 = add i32 %69, 1
  %76 = icmp eq i32 %75, %67
  %77 = select i1 %76, i32 0, i32 %75
  br i1 %74, label %78, label %68

78:                                               ; preds = %68
  %79 = sub i64 %73, %2
  %80 = insertvalue { i32, i64 } undef, i32 %77, 0
  %81 = insertvalue { i32, i64 } %80, i64 %79, 1
  ret { i32, i64 } %81
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK4absl13cord_internal11CordRepRing12GetCharacterEm(%"class.absl::cord_internal::CordRepRing"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i64 %1, 0
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  br i1 %3, label %10, label %6

6:                                                ; preds = %2
  %7 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %5, i64 %1) #12
  %8 = extractvalue { i32, i64 } %7, 0
  %9 = extractvalue { i32, i64 } %7, 1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %8, %6 ], [ %5, %2 ]
  %12 = phi i64 [ %9, %6 ], [ 0, %2 ]
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl nuw nsw i64 %15, 4
  %17 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %16
  %18 = bitcast i8* %17 to i32*
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = add i64 %12, %22
  %24 = shl nuw nsw i64 %15, 3
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 %24
  %26 = bitcast i8* %25 to %"struct.absl::cord_internal::CordRep"**
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, i64 %19
  %28 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %29 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 0, i32 2
  %30 = load i8, i8* %29, align 4
  %31 = icmp ugt i8 %30, 3
  br i1 %31, label %32, label %34

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 0, i32 3, i64 0
  br label %58

34:                                               ; preds = %10
  %35 = icmp eq i8 %30, 1
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 1
  %38 = bitcast %"struct.absl::cord_internal::CordRep"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %58

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 1, i32 1
  %42 = bitcast %"class.absl::cord_internal::Refcount"* %41 to %"struct.absl::cord_internal::CordRep"**
  %43 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %42, align 8
  %44 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 4
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 3, i64 0
  br label %53

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 1
  %51 = bitcast %"struct.absl::cord_internal::CordRep"* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i8* [ %48, %47 ], [ %52, %49 ]
  %55 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 1, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  br label %58

58:                                               ; preds = %32, %36, %53
  %59 = phi i8* [ %33, %32 ], [ %39, %36 ], [ %57, %53 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %23
  %61 = load i8, i8* %60, align 1
  ret i8 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7SubRingEPS1_mmm(%"class.absl::cord_internal::CordRepRing"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 2 acq_rel
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %177, !prof !2

10:                                               ; preds = %6
  %11 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to %"struct.absl::cord_internal::CordRep"*
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %11) #12
  br label %177

12:                                               ; preds = %4
  %13 = icmp eq i64 %1, 0
  %14 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  br i1 %13, label %20, label %16

16:                                               ; preds = %12
  %17 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %15, i64 %1) #12
  %18 = extractvalue { i32, i64 } %17, 0
  %19 = extractvalue { i32, i64 } %17, 1
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i32 [ %18, %16 ], [ %15, %12 ]
  %22 = phi i64 [ %19, %16 ], [ 0, %12 ]
  %23 = add i64 %2, %1
  %24 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, %23
  %27 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %104, label %29

29:                                               ; preds = %20
  %30 = add i64 %23, -1
  %31 = icmp ugt i32 %28, %21
  br i1 %31, label %32, label %54

32:                                               ; preds = %29
  %33 = sub i32 %28, %21
  %34 = icmp ugt i32 %33, 32
  br i1 %34, label %35, label %84

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %39 = bitcast i8* %38 to i64*
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i32 [ %33, %35 ], [ %44, %40 ]
  %42 = phi i32 [ %21, %35 ], [ %52, %40 ]
  %43 = add i32 %41, -1
  %44 = lshr i32 %43, 1
  %45 = add i32 %44, %42
  %46 = add i32 %45, 1
  %47 = zext i32 %45 to i64
  %48 = getelementptr inbounds i64, i64* %39, i64 %47
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %49, %37
  %51 = icmp ugt i64 %50, %30
  %52 = select i1 %51, i32 %42, i32 %46
  %53 = icmp ugt i32 %43, 17
  br i1 %53, label %40, label %84, !prof !10

54:                                               ; preds = %29
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = sub i32 %28, %21
  %58 = add i32 %56, %57
  %59 = icmp ugt i32 %58, 32
  br i1 %59, label %60, label %84

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %64 = bitcast i8* %63 to i64*
  br label %65

65:                                               ; preds = %65, %60
  %66 = phi i32 [ %58, %60 ], [ %69, %65 ]
  %67 = phi i32 [ %21, %60 ], [ %82, %65 ]
  %68 = add i32 %66, -1
  %69 = lshr i32 %68, 1
  %70 = add i32 %69, %67
  %71 = icmp ult i32 %70, %56
  %72 = select i1 %71, i32 0, i32 %56
  %73 = sub i32 %70, %72
  %74 = add i32 %73, 1
  %75 = icmp eq i32 %74, %56
  %76 = select i1 %75, i32 0, i32 %74
  %77 = zext i32 %73 to i64
  %78 = getelementptr inbounds i64, i64* %64, i64 %77
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %62
  %81 = icmp ugt i64 %80, %30
  %82 = select i1 %81, i32 %67, i32 %76
  %83 = icmp ugt i32 %68, 17
  br i1 %83, label %65, label %84, !prof !10

84:                                               ; preds = %65, %40, %54, %32
  %85 = phi i32 [ %21, %32 ], [ %21, %54 ], [ %52, %40 ], [ %82, %65 ]
  %86 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %89 = bitcast i8* %88 to i64*
  %90 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  br label %92

92:                                               ; preds = %92, %84
  %93 = phi i32 [ %85, %84 ], [ %101, %92 ]
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i64, i64* %89, i64 %94
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %96, %87
  %98 = icmp ult i64 %30, %97
  %99 = add i32 %93, 1
  %100 = icmp eq i32 %99, %91
  %101 = select i1 %100, i32 0, i32 %99
  br i1 %98, label %102, label %92

102:                                              ; preds = %92
  %103 = sub i64 %97, %23
  br label %104

104:                                              ; preds = %20, %102
  %105 = phi i32 [ %101, %102 ], [ %28, %20 ]
  %106 = phi i64 [ %103, %102 ], [ 0, %20 ]
  %107 = sub i32 %105, %21
  %108 = icmp ugt i32 %105, %21
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %104, %109
  %113 = phi i32 [ %111, %109 ], [ 0, %104 ]
  %114 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = icmp eq i32 %115, 2
  br i1 %116, label %117, label %134

117:                                              ; preds = %112
  %118 = add i32 %107, %113
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = zext i32 %121 to i64
  %123 = sub nsw i64 %122, %119
  %124 = icmp ult i64 %123, %3
  br i1 %124, label %134, label %125

125:                                              ; preds = %117
  %126 = load i32, i32* %14, align 8
  %127 = icmp eq i32 %21, %126
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  tail call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %0, i32 %126, i32 %21)
  br label %129

129:                                              ; preds = %125, %128
  %130 = load i32, i32* %27, align 4
  %131 = icmp eq i32 %105, %130
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  tail call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %0, i32 %105, i32 %130)
  br label %133

133:                                              ; preds = %129, %132
  store i32 %21, i32* %14, align 8
  store i32 %105, i32* %27, align 4
  br label %140

134:                                              ; preds = %117, %112
  %135 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing4CopyEPS1_jjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %21, i32 %105, i64 %3)
  %136 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %135, i64 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %135, i64 0, i32 2
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %134, %133
  %141 = phi %"class.absl::cord_internal::CordRepRing"* [ %0, %133 ], [ %135, %134 ]
  %142 = phi i32 [ %21, %133 ], [ %137, %134 ]
  %143 = phi i32 [ %105, %133 ], [ %139, %134 ]
  %144 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %141, i64 0, i32 0, i32 0
  store i64 %2, i64* %144, align 8
  %145 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %141, i64 0, i32 4
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, %1
  store i64 %147, i64* %145, align 8
  %148 = icmp eq i64 %22, 0
  br i1 %148, label %161, label %149

149:                                              ; preds = %140
  %150 = trunc i64 %22 to i32
  %151 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %141, i64 0, i32 3
  %152 = load i32, i32* %151, align 8
  %153 = zext i32 %152 to i64
  %154 = shl nuw nsw i64 %153, 4
  %155 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %141, i64 0, i32 5, i64 %154
  %156 = bitcast i8* %155 to i32*
  %157 = zext i32 %142 to i64
  %158 = getelementptr inbounds i32, i32* %156, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, %150
  store i32 %160, i32* %158, align 4
  br label %161

161:                                              ; preds = %140, %149
  %162 = icmp eq i64 %106, 0
  br i1 %162, label %177, label %163

163:                                              ; preds = %161
  %164 = icmp eq i32 %143, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %141, i64 0, i32 3
  %167 = load i32, i32* %166, align 8
  br label %168

168:                                              ; preds = %163, %165
  %169 = phi i32 [ %167, %165 ], [ %143, %163 ]
  %170 = add i32 %169, -1
  %171 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %141, i64 0, i32 5, i64 0
  %172 = bitcast i8* %171 to i64*
  %173 = zext i32 %170 to i64
  %174 = getelementptr inbounds i64, i64* %172, i64 %173
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %175, %106
  store i64 %176, i64* %174, align 8
  br label %177

177:                                              ; preds = %168, %161, %10, %6
  %178 = phi %"class.absl::cord_internal::CordRepRing"* [ null, %6 ], [ null, %10 ], [ %141, %161 ], [ %141, %168 ]
  ret %"class.absl::cord_internal::CordRepRing"* %178
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing12RemovePrefixEPS1_mm(%"class.absl::cord_internal::CordRepRing"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 2 acq_rel
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %60, !prof !2

11:                                               ; preds = %7
  %12 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to %"struct.absl::cord_internal::CordRep"*
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %12) #12
  br label %60

13:                                               ; preds = %3
  %14 = icmp eq i64 %1, 0
  %15 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  br i1 %14, label %21, label %17

17:                                               ; preds = %13
  %18 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %16, i64 %1) #12
  %19 = extractvalue { i32, i64 } %18, 0
  %20 = extractvalue { i32, i64 } %18, 1
  br label %21

21:                                               ; preds = %13, %17
  %22 = phi i32 [ %19, %17 ], [ %16, %13 ]
  %23 = phi i64 [ %20, %17 ], [ 0, %13 ]
  %24 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = load i32, i32* %15, align 8
  %29 = icmp eq i32 %22, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %0, i32 %28, i32 %22)
  br label %31

31:                                               ; preds = %27, %30
  store i32 %22, i32* %15, align 8
  br label %38

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing4CopyEPS1_jjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %22, i32 %34, i64 %2)
  %36 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  br label %38

38:                                               ; preds = %32, %31
  %39 = phi %"class.absl::cord_internal::CordRepRing"* [ %0, %31 ], [ %35, %32 ]
  %40 = phi i32 [ %22, %31 ], [ %37, %32 ]
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %39, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %39, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %23, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %38
  %49 = trunc i64 %23 to i32
  %50 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 4
  %54 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %39, i64 0, i32 5, i64 %53
  %55 = bitcast i8* %54 to i32*
  %56 = zext i32 %40 to i64
  %57 = getelementptr inbounds i32, i32* %55, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, %49
  store i32 %59, i32* %57, align 4
  br label %60

60:                                               ; preds = %48, %38, %11, %7
  %61 = phi %"class.absl::cord_internal::CordRepRing"* [ null, %7 ], [ null, %11 ], [ %39, %38 ], [ %39, %48 ]
  ret %"class.absl::cord_internal::CordRepRing"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing12RemoveSuffixEPS1_mm(%"class.absl::cord_internal::CordRepRing"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 2 acq_rel
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %137, !prof !2

11:                                               ; preds = %7
  %12 = bitcast %"class.absl::cord_internal::CordRepRing"* %0 to %"struct.absl::cord_internal::CordRep"*
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %12) #12
  br label %137

13:                                               ; preds = %3
  %14 = sub i64 %5, %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %98

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add i64 %14, -1
  %25 = icmp ugt i32 %23, %21
  br i1 %25, label %26, label %48

26:                                               ; preds = %19
  %27 = sub i32 %23, %21
  %28 = icmp ugt i32 %27, 32
  br i1 %28, label %29, label %78

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %33 = bitcast i8* %32 to i64*
  br label %34

34:                                               ; preds = %34, %29
  %35 = phi i32 [ %27, %29 ], [ %38, %34 ]
  %36 = phi i32 [ %21, %29 ], [ %46, %34 ]
  %37 = add i32 %35, -1
  %38 = lshr i32 %37, 1
  %39 = add i32 %38, %36
  %40 = add i32 %39, 1
  %41 = zext i32 %39 to i64
  %42 = getelementptr inbounds i64, i64* %33, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %31
  %45 = icmp ugt i64 %44, %24
  %46 = select i1 %45, i32 %36, i32 %40
  %47 = icmp ugt i32 %37, 17
  br i1 %47, label %34, label %78, !prof !10

48:                                               ; preds = %19
  %49 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = sub i32 %23, %21
  %52 = add i32 %50, %51
  %53 = icmp ugt i32 %52, 32
  br i1 %53, label %54, label %78

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %58 = bitcast i8* %57 to i64*
  br label %59

59:                                               ; preds = %59, %54
  %60 = phi i32 [ %52, %54 ], [ %63, %59 ]
  %61 = phi i32 [ %21, %54 ], [ %76, %59 ]
  %62 = add i32 %60, -1
  %63 = lshr i32 %62, 1
  %64 = add i32 %63, %61
  %65 = icmp ult i32 %64, %50
  %66 = select i1 %65, i32 0, i32 %50
  %67 = sub i32 %64, %66
  %68 = add i32 %67, 1
  %69 = icmp eq i32 %68, %50
  %70 = select i1 %69, i32 0, i32 %68
  %71 = zext i32 %67 to i64
  %72 = getelementptr inbounds i64, i64* %58, i64 %71
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %73, %56
  %75 = icmp ugt i64 %74, %24
  %76 = select i1 %75, i32 %61, i32 %70
  %77 = icmp ugt i32 %62, 17
  br i1 %77, label %59, label %78, !prof !10

78:                                               ; preds = %59, %34, %48, %26
  %79 = phi i32 [ %21, %26 ], [ %21, %48 ], [ %46, %34 ], [ %76, %59 ]
  %80 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 4
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 5, i64 0
  %83 = bitcast i8* %82 to i64*
  %84 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  br label %86

86:                                               ; preds = %86, %78
  %87 = phi i32 [ %79, %78 ], [ %95, %86 ]
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i64, i64* %83, i64 %88
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, %81
  %92 = icmp ult i64 %24, %91
  %93 = add i32 %87, 1
  %94 = icmp eq i32 %93, %85
  %95 = select i1 %94, i32 0, i32 %93
  br i1 %92, label %96, label %86

96:                                               ; preds = %86
  %97 = sub i64 %91, %14
  br label %98

98:                                               ; preds = %16, %96
  %99 = phi i32 [ %18, %16 ], [ %95, %96 ]
  %100 = phi i64 [ 0, %16 ], [ %97, %96 ]
  %101 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 acquire, align 4
  %103 = icmp eq i32 %102, 2
  br i1 %103, label %104, label %110

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %99, %106
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call fastcc void @_ZN4absl13cord_internal12_GLOBAL__N_112UnrefEntriesEPKNS0_11CordRepRingEjj(%"class.absl::cord_internal::CordRepRing"* %0, i32 %99, i32 %106)
  br label %109

109:                                              ; preds = %104, %108
  store i32 %99, i32* %105, align 4
  br label %116

110:                                              ; preds = %98
  %111 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing4CopyEPS1_jjm(%"class.absl::cord_internal::CordRepRing"* %0, i32 %112, i32 %99, i64 %2)
  %114 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  br label %116

116:                                              ; preds = %110, %109
  %117 = phi %"class.absl::cord_internal::CordRepRing"* [ %0, %109 ], [ %113, %110 ]
  %118 = phi i32 [ %99, %109 ], [ %115, %110 ]
  %119 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %120, %1
  store i64 %121, i64* %119, align 8
  %122 = icmp eq i64 %100, 0
  br i1 %122, label %137, label %123

123:                                              ; preds = %116
  %124 = icmp eq i32 %118, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  br label %128

128:                                              ; preds = %123, %125
  %129 = phi i32 [ %127, %125 ], [ %118, %123 ]
  %130 = add i32 %129, -1
  %131 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 5, i64 0
  %132 = bitcast i8* %131 to i64*
  %133 = zext i32 %130 to i64
  %134 = getelementptr inbounds i64, i64* %132, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %135, %100
  store i64 %136, i64* %134, align 8
  br label %137

137:                                              ; preds = %128, %116, %11, %7
  %138 = phi %"class.absl::cord_internal::CordRepRing"* [ null, %7 ], [ null, %11 ], [ %117, %116 ], [ %117, %128 ]
  ret %"class.absl::cord_internal::CordRepRing"* %138
}

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal19ThrowStdLengthErrorEPKc(i8*) local_unnamed_addr #7

declare void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !14
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE0EEEPS1_S5_S5_mmEUljE_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"*, i32, i32, %class.anon.13* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt i32 %2, %1
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32 [ %8, %6 ], [ %2, %4 ]
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.anon.13, %class.anon.13* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.anon.13, %class.anon.13* %3, i64 0, i32 1
  %15 = getelementptr inbounds %class.anon.13, %class.anon.13* %3, i64 0, i32 2
  %16 = zext i32 %1 to i64
  %17 = zext i32 %10 to i64
  br label %26

18:                                               ; preds = %26, %9
  %19 = icmp ne i32 %2, 0
  %20 = xor i1 %5, %19
  br i1 %20, label %21, label %154

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.anon.13, %class.anon.13* %3, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.13, %class.anon.13* %3, i64 0, i32 1
  %24 = getelementptr inbounds %class.anon.13, %class.anon.13* %3, i64 0, i32 2
  %25 = zext i32 %2 to i64
  br label %90

26:                                               ; preds = %26, %12
  %27 = phi i64 [ %16, %12 ], [ %88, %26 ]
  %28 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %13, align 8
  %29 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %14, align 8
  %30 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %29, align 8
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 5, i64 %34
  %36 = bitcast i8* %35 to %"struct.absl::cord_internal::CordRep"**
  %37 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %36, i64 %27
  %38 = bitcast %"struct.absl::cord_internal::CordRep"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = shl nuw nsw i64 %33, 4
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 5, i64 %40
  %42 = bitcast i8* %41 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %27
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 5, i64 0
  %46 = bitcast i8* %45 to i64*
  %47 = getelementptr inbounds i64, i64* %46, i64 %27
  %48 = load i64, i64* %47, align 8
  %49 = load i64*, i64** %15, align 8
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %48
  %52 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %28, i64 0, i32 0
  %53 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %54 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %53, i64 0, i32 5, i64 0
  %55 = bitcast i8* %54 to i64*
  %56 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %28, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i64, i64* %55, i64 %58
  store i64 %51, i64* %59, align 8
  %60 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %61 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = shl nuw nsw i64 %63, 3
  %65 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %60, i64 0, i32 5, i64 %64
  %66 = bitcast i8* %65 to %"struct.absl::cord_internal::CordRep"**
  %67 = load i32, i32* %56, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %66, i64 %68
  %70 = bitcast %"struct.absl::cord_internal::CordRep"** %69 to i64*
  store i64 %39, i64* %70, align 8
  %71 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %72 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %71, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = shl nuw nsw i64 %74, 4
  %76 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %71, i64 0, i32 5, i64 %75
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %56, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  store i32 %44, i32* %80, align 4
  %81 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %82 = load i32, i32* %56, align 4
  %83 = add i32 %82, 1
  %84 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %81, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %83, %85
  %87 = select i1 %86, i32 0, i32 %83
  store i32 %87, i32* %56, align 4
  %88 = add nuw nsw i64 %27, 1
  %89 = icmp eq i64 %88, %17
  br i1 %89, label %18, label %26

90:                                               ; preds = %21, %90
  %91 = phi i64 [ 0, %21 ], [ %152, %90 ]
  %92 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %22, align 8
  %93 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %23, align 8
  %94 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %93, align 8
  %95 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 3
  %99 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 5, i64 %98
  %100 = bitcast i8* %99 to %"struct.absl::cord_internal::CordRep"**
  %101 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %100, i64 %91
  %102 = bitcast %"struct.absl::cord_internal::CordRep"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = shl nuw nsw i64 %97, 4
  %105 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 5, i64 %104
  %106 = bitcast i8* %105 to i32*
  %107 = getelementptr inbounds i32, i32* %106, i64 %91
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 5, i64 0
  %110 = bitcast i8* %109 to i64*
  %111 = getelementptr inbounds i64, i64* %110, i64 %91
  %112 = load i64, i64* %111, align 8
  %113 = load i64*, i64** %24, align 8
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, %112
  %116 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %92, i64 0, i32 0
  %117 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %118 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 5, i64 0
  %119 = bitcast i8* %118 to i64*
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %92, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i64, i64* %119, i64 %122
  store i64 %115, i64* %123, align 8
  %124 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %125 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %124, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = zext i32 %126 to i64
  %128 = shl nuw nsw i64 %127, 3
  %129 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %124, i64 0, i32 5, i64 %128
  %130 = bitcast i8* %129 to %"struct.absl::cord_internal::CordRep"**
  %131 = load i32, i32* %120, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %130, i64 %132
  %134 = bitcast %"struct.absl::cord_internal::CordRep"** %133 to i64*
  store i64 %103, i64* %134, align 8
  %135 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %136 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %135, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = shl nuw nsw i64 %138, 4
  %140 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %135, i64 0, i32 5, i64 %139
  %141 = bitcast i8* %140 to i32*
  %142 = load i32, i32* %120, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i32, i32* %141, i64 %143
  store i32 %108, i32* %144, align 4
  %145 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %146 = load i32, i32* %120, align 4
  %147 = add i32 %146, 1
  %148 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %145, i64 0, i32 3
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %147, %149
  %151 = select i1 %150, i32 0, i32 %147
  store i32 %151, i32* %120, align 4
  %152 = add nuw nsw i64 %91, 1
  %153 = icmp ult i64 %152, %25
  br i1 %153, label %90, label %154

154:                                              ; preds = %90, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE0EEEPS1_S5_S5_mmEUljE0_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"*, i32, i32, %class.anon.14* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt i32 %2, %1
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32 [ %8, %6 ], [ %2, %4 ]
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.anon.14, %class.anon.14* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.anon.14, %class.anon.14* %3, i64 0, i32 1
  %15 = getelementptr inbounds %class.anon.14, %class.anon.14* %3, i64 0, i32 2
  %16 = zext i32 %1 to i64
  %17 = zext i32 %10 to i64
  br label %26

18:                                               ; preds = %26, %9
  %19 = icmp ne i32 %2, 0
  %20 = xor i1 %5, %19
  br i1 %20, label %21, label %154

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.anon.14, %class.anon.14* %3, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.14, %class.anon.14* %3, i64 0, i32 1
  %24 = getelementptr inbounds %class.anon.14, %class.anon.14* %3, i64 0, i32 2
  %25 = zext i32 %2 to i64
  br label %90

26:                                               ; preds = %26, %12
  %27 = phi i64 [ %16, %12 ], [ %88, %26 ]
  %28 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %13, align 8
  %29 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %28, align 8
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 5, i64 %33
  %35 = bitcast i8* %34 to %"struct.absl::cord_internal::CordRep"**
  %36 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %35, i64 %27
  %37 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %36, align 8
  %38 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %14, align 8
  %39 = shl nuw nsw i64 %32, 4
  %40 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 5, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds i32, i32* %41, i64 %27
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 5, i64 0
  %45 = bitcast i8* %44 to i64*
  %46 = getelementptr inbounds i64, i64* %45, i64 %27
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %15, align 8
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, %47
  %51 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %38, i64 0, i32 0
  %52 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %53 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %52, i64 0, i32 5, i64 0
  %54 = bitcast i8* %53 to i64*
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %38, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i64, i64* %54, i64 %57
  store i64 %50, i64* %58, align 8
  %59 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = zext i32 %61 to i64
  %63 = shl nuw nsw i64 %62, 3
  %64 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %59, i64 0, i32 5, i64 %63
  %65 = bitcast i8* %64 to %"struct.absl::cord_internal::CordRep"**
  %66 = load i32, i32* %55, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %65, i64 %67
  store %"struct.absl::cord_internal::CordRep"* %37, %"struct.absl::cord_internal::CordRep"** %68, align 8
  %69 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %70 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = shl nuw nsw i64 %72, 4
  %74 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %69, i64 0, i32 5, i64 %73
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %55, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %75, i64 %77
  store i32 %43, i32* %78, align 4
  %79 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %80 = load i32, i32* %55, align 4
  %81 = add i32 %80, 1
  %82 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %81, %83
  %85 = select i1 %84, i32 0, i32 %81
  store i32 %85, i32* %55, align 4
  %86 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 2 monotonic
  %88 = add nuw nsw i64 %27, 1
  %89 = icmp eq i64 %88, %17
  br i1 %89, label %18, label %26

90:                                               ; preds = %21, %90
  %91 = phi i64 [ 0, %21 ], [ %152, %90 ]
  %92 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %22, align 8
  %93 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %92, align 8
  %94 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = shl nuw nsw i64 %96, 3
  %98 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 5, i64 %97
  %99 = bitcast i8* %98 to %"struct.absl::cord_internal::CordRep"**
  %100 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %99, i64 %91
  %101 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %100, align 8
  %102 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %23, align 8
  %103 = shl nuw nsw i64 %96, 4
  %104 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 5, i64 %103
  %105 = bitcast i8* %104 to i32*
  %106 = getelementptr inbounds i32, i32* %105, i64 %91
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 5, i64 0
  %109 = bitcast i8* %108 to i64*
  %110 = getelementptr inbounds i64, i64* %109, i64 %91
  %111 = load i64, i64* %110, align 8
  %112 = load i64*, i64** %24, align 8
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, %111
  %115 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %102, i64 0, i32 0
  %116 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %117 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %116, i64 0, i32 5, i64 0
  %118 = bitcast i8* %117 to i64*
  %119 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %102, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i64, i64* %118, i64 %121
  store i64 %114, i64* %122, align 8
  %123 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %124 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %123, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = zext i32 %125 to i64
  %127 = shl nuw nsw i64 %126, 3
  %128 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %123, i64 0, i32 5, i64 %127
  %129 = bitcast i8* %128 to %"struct.absl::cord_internal::CordRep"**
  %130 = load i32, i32* %119, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %129, i64 %131
  store %"struct.absl::cord_internal::CordRep"* %101, %"struct.absl::cord_internal::CordRep"** %132, align 8
  %133 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %134 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %133, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = zext i32 %135 to i64
  %137 = shl nuw nsw i64 %136, 4
  %138 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %133, i64 0, i32 5, i64 %137
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %119, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i32, i32* %139, i64 %141
  store i32 %107, i32* %142, align 4
  %143 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %144 = load i32, i32* %119, align 4
  %145 = add i32 %144, 1
  %146 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %143, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %145, %147
  %149 = select i1 %148, i32 0, i32 %145
  store i32 %149, i32* %119, align 4
  %150 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 2 monotonic
  %152 = add nuw nsw i64 %91, 1
  %153 = icmp ult i64 %152, %25
  br i1 %153, label %90, label %154

154:                                              ; preds = %90, %18
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc nonnull dereferenceable(24) %struct.Entry* @"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10CreateSlowEPNS2_7CordRepEmE3$_0EEvNS3_9DirectionES7_OT_E5EntryLm40ENSt3__19allocatorISC_EEE15EmplaceBackSlowIJSC_EEERSC_DpOT_"(%"class.absl::inlined_vector_internal::Storage"*, %struct.Entry* nocapture readonly dereferenceable(24)) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !15
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %struct.Entry** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !15
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !15
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 768614336404564650
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 80, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = mul i64 %20, 24
  %24 = tail call i8* @_Znwm(i64 %23) #14
  %25 = bitcast i8* %24 to %struct.Entry*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 %22
  %28 = bitcast %struct.Entry* %27 to i8*
  %29 = bitcast %struct.Entry* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  %30 = icmp eq i64 %22, 0
  br i1 %30, label %85, label %31

31:                                               ; preds = %19
  %32 = inttoptr i64 %21 to %struct.Entry*
  %33 = inttoptr i64 %21 to i8*
  %34 = add nsw i64 %22, -1
  %35 = and i64 %22, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = sub nsw i64 %22, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %struct.Entry* [ %32, %37 ], [ %61, %39 ]
  %41 = phi i8* [ %33, %37 ], [ %63, %39 ]
  %42 = phi i64 [ 0, %37 ], [ %62, %39 ]
  %43 = phi i64 [ %38, %37 ], [ %64, %39 ]
  %44 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 %42
  %45 = bitcast %struct.Entry* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %41, i64 24, i1 false) #12
  %46 = getelementptr inbounds %struct.Entry, %struct.Entry* %40, i64 1
  %47 = or i64 %42, 1
  %48 = bitcast %struct.Entry* %46 to i8*
  %49 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 %47
  %50 = bitcast %struct.Entry* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %48, i64 24, i1 false) #12
  %51 = getelementptr inbounds %struct.Entry, %struct.Entry* %40, i64 2
  %52 = or i64 %42, 2
  %53 = bitcast %struct.Entry* %51 to i8*
  %54 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 %52
  %55 = bitcast %struct.Entry* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %53, i64 24, i1 false) #12
  %56 = getelementptr inbounds %struct.Entry, %struct.Entry* %40, i64 3
  %57 = or i64 %42, 3
  %58 = bitcast %struct.Entry* %56 to i8*
  %59 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 %57
  %60 = bitcast %struct.Entry* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %58, i64 24, i1 false) #12
  %61 = getelementptr inbounds %struct.Entry, %struct.Entry* %40, i64 4
  %62 = add nuw nsw i64 %42, 4
  %63 = bitcast %struct.Entry* %61 to i8*
  %64 = add i64 %43, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %39

66:                                               ; preds = %39
  %67 = bitcast %struct.Entry* %61 to i8*
  br label %68

68:                                               ; preds = %66, %31
  %69 = phi %struct.Entry* [ %32, %31 ], [ %61, %66 ]
  %70 = phi i8* [ %33, %31 ], [ %67, %66 ]
  %71 = phi i64 [ 0, %31 ], [ %62, %66 ]
  %72 = icmp eq i64 %35, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %73
  %74 = phi %struct.Entry* [ %80, %73 ], [ %69, %68 ]
  %75 = phi i8* [ %82, %73 ], [ %70, %68 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %68 ]
  %77 = phi i64 [ %83, %73 ], [ %35, %68 ]
  %78 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 %76
  %79 = bitcast %struct.Entry* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %75, i64 24, i1 false) #12
  %80 = getelementptr inbounds %struct.Entry, %struct.Entry* %74, i64 1
  %81 = add nuw nsw i64 %76, 1
  %82 = bitcast %struct.Entry* %80 to i8*
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !18

85:                                               ; preds = %68, %73, %19
  br i1 %6, label %91, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %88 = bitcast %struct.Entry** %87 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #14
  %90 = load i64, i64* %3, align 8
  br label %91

91:                                               ; preds = %86, %85
  %92 = phi i64 [ %90, %86 ], [ %4, %85 ]
  %93 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %94 = bitcast %struct.Entry** %93 to i64*
  store i64 %26, i64* %94, align 8
  %95 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %95, align 8
  %96 = or i64 %92, 1
  %97 = add i64 %96, 2
  store i64 %97, i64* %3, align 8
  ret %struct.Entry* %27
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc nonnull dereferenceable(24) %struct.Entry.34* @"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10AppendSlowEPS5_PNS2_7CordRepEE3$_1EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15EmplaceBackSlowIJSD_EEERSD_DpOT_"(%"class.absl::inlined_vector_internal::Storage.26"*, %struct.Entry.34* nocapture readonly dereferenceable(24)) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !20
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.32"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %struct.Entry.34** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !20
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !20
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 768614336404564650
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 80, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = mul i64 %20, 24
  %24 = tail call i8* @_Znwm(i64 %23) #14
  %25 = bitcast i8* %24 to %struct.Entry.34*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %25, i64 %22
  %28 = bitcast %struct.Entry.34* %27 to i8*
  %29 = bitcast %struct.Entry.34* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  %30 = icmp eq i64 %22, 0
  br i1 %30, label %85, label %31

31:                                               ; preds = %19
  %32 = inttoptr i64 %21 to %struct.Entry.34*
  %33 = inttoptr i64 %21 to i8*
  %34 = add nsw i64 %22, -1
  %35 = and i64 %22, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = sub nsw i64 %22, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %struct.Entry.34* [ %32, %37 ], [ %61, %39 ]
  %41 = phi i8* [ %33, %37 ], [ %63, %39 ]
  %42 = phi i64 [ 0, %37 ], [ %62, %39 ]
  %43 = phi i64 [ %38, %37 ], [ %64, %39 ]
  %44 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %25, i64 %42
  %45 = bitcast %struct.Entry.34* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %41, i64 24, i1 false) #12
  %46 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %40, i64 1
  %47 = or i64 %42, 1
  %48 = bitcast %struct.Entry.34* %46 to i8*
  %49 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %25, i64 %47
  %50 = bitcast %struct.Entry.34* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %48, i64 24, i1 false) #12
  %51 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %40, i64 2
  %52 = or i64 %42, 2
  %53 = bitcast %struct.Entry.34* %51 to i8*
  %54 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %25, i64 %52
  %55 = bitcast %struct.Entry.34* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %53, i64 24, i1 false) #12
  %56 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %40, i64 3
  %57 = or i64 %42, 3
  %58 = bitcast %struct.Entry.34* %56 to i8*
  %59 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %25, i64 %57
  %60 = bitcast %struct.Entry.34* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %58, i64 24, i1 false) #12
  %61 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %40, i64 4
  %62 = add nuw nsw i64 %42, 4
  %63 = bitcast %struct.Entry.34* %61 to i8*
  %64 = add i64 %43, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %39

66:                                               ; preds = %39
  %67 = bitcast %struct.Entry.34* %61 to i8*
  br label %68

68:                                               ; preds = %66, %31
  %69 = phi %struct.Entry.34* [ %32, %31 ], [ %61, %66 ]
  %70 = phi i8* [ %33, %31 ], [ %67, %66 ]
  %71 = phi i64 [ 0, %31 ], [ %62, %66 ]
  %72 = icmp eq i64 %35, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %73
  %74 = phi %struct.Entry.34* [ %80, %73 ], [ %69, %68 ]
  %75 = phi i8* [ %82, %73 ], [ %70, %68 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %68 ]
  %77 = phi i64 [ %83, %73 ], [ %35, %68 ]
  %78 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %25, i64 %76
  %79 = bitcast %struct.Entry.34* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %75, i64 24, i1 false) #12
  %80 = getelementptr inbounds %struct.Entry.34, %struct.Entry.34* %74, i64 1
  %81 = add nuw nsw i64 %76, 1
  %82 = bitcast %struct.Entry.34* %80 to i8*
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !23

85:                                               ; preds = %68, %73, %19
  br i1 %6, label %91, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 0
  %88 = bitcast %struct.Entry.34** %87 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #14
  %90 = load i64, i64* %3, align 8
  br label %91

91:                                               ; preds = %86, %85
  %92 = phi i64 [ %90, %86 ], [ %4, %85 ]
  %93 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 0
  %94 = bitcast %struct.Entry.34** %93 to i64*
  store i64 %26, i64* %94, align 8
  %95 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %95, align 8
  %96 = or i64 %92, 1
  %97 = add i64 %96, 2
  store i64 %97, i64* %3, align 8
  ret %struct.Entry.34* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE1EEEPS1_S5_S5_mmEUljE_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"*, i32, i32, %class.anon.47* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt i32 %2, %1
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32 [ %8, %6 ], [ %2, %4 ]
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.anon.47, %class.anon.47* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.anon.47, %class.anon.47* %3, i64 0, i32 1
  %15 = getelementptr inbounds %class.anon.47, %class.anon.47* %3, i64 0, i32 2
  %16 = zext i32 %1 to i64
  %17 = zext i32 %10 to i64
  br label %26

18:                                               ; preds = %26, %9
  %19 = icmp ne i32 %2, 0
  %20 = xor i1 %5, %19
  br i1 %20, label %21, label %154

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.anon.47, %class.anon.47* %3, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.47, %class.anon.47* %3, i64 0, i32 1
  %24 = getelementptr inbounds %class.anon.47, %class.anon.47* %3, i64 0, i32 2
  %25 = zext i32 %2 to i64
  br label %90

26:                                               ; preds = %26, %12
  %27 = phi i64 [ %16, %12 ], [ %88, %26 ]
  %28 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %13, align 8
  %29 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %14, align 8
  %30 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %29, align 8
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 5, i64 %34
  %36 = bitcast i8* %35 to %"struct.absl::cord_internal::CordRep"**
  %37 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %36, i64 %27
  %38 = bitcast %"struct.absl::cord_internal::CordRep"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = shl nuw nsw i64 %33, 4
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 5, i64 %40
  %42 = bitcast i8* %41 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %27
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %30, i64 0, i32 5, i64 0
  %46 = bitcast i8* %45 to i64*
  %47 = getelementptr inbounds i64, i64* %46, i64 %27
  %48 = load i64, i64* %47, align 8
  %49 = load i64*, i64** %15, align 8
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %48
  %52 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %28, i64 0, i32 0
  %53 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %54 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %53, i64 0, i32 5, i64 0
  %55 = bitcast i8* %54 to i64*
  %56 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %28, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i64, i64* %55, i64 %58
  store i64 %51, i64* %59, align 8
  %60 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %61 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = shl nuw nsw i64 %63, 3
  %65 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %60, i64 0, i32 5, i64 %64
  %66 = bitcast i8* %65 to %"struct.absl::cord_internal::CordRep"**
  %67 = load i32, i32* %56, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %66, i64 %68
  %70 = bitcast %"struct.absl::cord_internal::CordRep"** %69 to i64*
  store i64 %39, i64* %70, align 8
  %71 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %72 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %71, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = shl nuw nsw i64 %74, 4
  %76 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %71, i64 0, i32 5, i64 %75
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %56, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  store i32 %44, i32* %80, align 4
  %81 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %52, align 8
  %82 = load i32, i32* %56, align 4
  %83 = add i32 %82, 1
  %84 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %81, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %83, %85
  %87 = select i1 %86, i32 0, i32 %83
  store i32 %87, i32* %56, align 4
  %88 = add nuw nsw i64 %27, 1
  %89 = icmp eq i64 %88, %17
  br i1 %89, label %18, label %26

90:                                               ; preds = %21, %90
  %91 = phi i64 [ 0, %21 ], [ %152, %90 ]
  %92 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %22, align 8
  %93 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %23, align 8
  %94 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %93, align 8
  %95 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 3
  %99 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 5, i64 %98
  %100 = bitcast i8* %99 to %"struct.absl::cord_internal::CordRep"**
  %101 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %100, i64 %91
  %102 = bitcast %"struct.absl::cord_internal::CordRep"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = shl nuw nsw i64 %97, 4
  %105 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 5, i64 %104
  %106 = bitcast i8* %105 to i32*
  %107 = getelementptr inbounds i32, i32* %106, i64 %91
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %94, i64 0, i32 5, i64 0
  %110 = bitcast i8* %109 to i64*
  %111 = getelementptr inbounds i64, i64* %110, i64 %91
  %112 = load i64, i64* %111, align 8
  %113 = load i64*, i64** %24, align 8
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, %112
  %116 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %92, i64 0, i32 0
  %117 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %118 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 5, i64 0
  %119 = bitcast i8* %118 to i64*
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %92, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i64, i64* %119, i64 %122
  store i64 %115, i64* %123, align 8
  %124 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %125 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %124, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = zext i32 %126 to i64
  %128 = shl nuw nsw i64 %127, 3
  %129 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %124, i64 0, i32 5, i64 %128
  %130 = bitcast i8* %129 to %"struct.absl::cord_internal::CordRep"**
  %131 = load i32, i32* %120, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %130, i64 %132
  %134 = bitcast %"struct.absl::cord_internal::CordRep"** %133 to i64*
  store i64 %103, i64* %134, align 8
  %135 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %136 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %135, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = shl nuw nsw i64 %138, 4
  %140 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %135, i64 0, i32 5, i64 %139
  %141 = bitcast i8* %140 to i32*
  %142 = load i32, i32* %120, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i32, i32* %141, i64 %143
  store i32 %108, i32* %144, align 4
  %145 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %116, align 8
  %146 = load i32, i32* %120, align 4
  %147 = add i32 %146, 1
  %148 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %145, i64 0, i32 3
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %147, %149
  %151 = select i1 %150, i32 0, i32 %147
  store i32 %151, i32* %120, align 4
  %152 = add nuw nsw i64 %91, 1
  %153 = icmp ult i64 %152, %25
  br i1 %153, label %90, label %154

154:                                              ; preds = %90, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl13cord_internal11CordRepRing7ForEachIZNS1_7AddRingILNS1_7AddModeE1EEEPS1_S5_S5_mmEUljE0_EEvjjOT_(%"class.absl::cord_internal::CordRepRing"*, i32, i32, %class.anon.48* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt i32 %2, %1
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32 [ %8, %6 ], [ %2, %4 ]
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.anon.48, %class.anon.48* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.anon.48, %class.anon.48* %3, i64 0, i32 1
  %15 = getelementptr inbounds %class.anon.48, %class.anon.48* %3, i64 0, i32 2
  %16 = zext i32 %1 to i64
  %17 = zext i32 %10 to i64
  br label %26

18:                                               ; preds = %26, %9
  %19 = icmp ne i32 %2, 0
  %20 = xor i1 %5, %19
  br i1 %20, label %21, label %154

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.anon.48, %class.anon.48* %3, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.48, %class.anon.48* %3, i64 0, i32 1
  %24 = getelementptr inbounds %class.anon.48, %class.anon.48* %3, i64 0, i32 2
  %25 = zext i32 %2 to i64
  br label %90

26:                                               ; preds = %26, %12
  %27 = phi i64 [ %16, %12 ], [ %88, %26 ]
  %28 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %13, align 8
  %29 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %28, align 8
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 5, i64 %33
  %35 = bitcast i8* %34 to %"struct.absl::cord_internal::CordRep"**
  %36 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %35, i64 %27
  %37 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %36, align 8
  %38 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %14, align 8
  %39 = shl nuw nsw i64 %32, 4
  %40 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 5, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds i32, i32* %41, i64 %27
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %29, i64 0, i32 5, i64 0
  %45 = bitcast i8* %44 to i64*
  %46 = getelementptr inbounds i64, i64* %45, i64 %27
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %15, align 8
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, %47
  %51 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %38, i64 0, i32 0
  %52 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %53 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %52, i64 0, i32 5, i64 0
  %54 = bitcast i8* %53 to i64*
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %38, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i64, i64* %54, i64 %57
  store i64 %50, i64* %58, align 8
  %59 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = zext i32 %61 to i64
  %63 = shl nuw nsw i64 %62, 3
  %64 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %59, i64 0, i32 5, i64 %63
  %65 = bitcast i8* %64 to %"struct.absl::cord_internal::CordRep"**
  %66 = load i32, i32* %55, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %65, i64 %67
  store %"struct.absl::cord_internal::CordRep"* %37, %"struct.absl::cord_internal::CordRep"** %68, align 8
  %69 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %70 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = shl nuw nsw i64 %72, 4
  %74 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %69, i64 0, i32 5, i64 %73
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %55, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %75, i64 %77
  store i32 %43, i32* %78, align 4
  %79 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %51, align 8
  %80 = load i32, i32* %55, align 4
  %81 = add i32 %80, 1
  %82 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %81, %83
  %85 = select i1 %84, i32 0, i32 %81
  store i32 %85, i32* %55, align 4
  %86 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 2 monotonic
  %88 = add nuw nsw i64 %27, 1
  %89 = icmp eq i64 %88, %17
  br i1 %89, label %18, label %26

90:                                               ; preds = %21, %90
  %91 = phi i64 [ 0, %21 ], [ %152, %90 ]
  %92 = load %"class.absl::cord_internal::CordRepRing"**, %"class.absl::cord_internal::CordRepRing"*** %22, align 8
  %93 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %92, align 8
  %94 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = shl nuw nsw i64 %96, 3
  %98 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 5, i64 %97
  %99 = bitcast i8* %98 to %"struct.absl::cord_internal::CordRep"**
  %100 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %99, i64 %91
  %101 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %100, align 8
  %102 = load %"class.absl::cord_internal::CordRepRing::Filler"*, %"class.absl::cord_internal::CordRepRing::Filler"** %23, align 8
  %103 = shl nuw nsw i64 %96, 4
  %104 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 5, i64 %103
  %105 = bitcast i8* %104 to i32*
  %106 = getelementptr inbounds i32, i32* %105, i64 %91
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %93, i64 0, i32 5, i64 0
  %109 = bitcast i8* %108 to i64*
  %110 = getelementptr inbounds i64, i64* %109, i64 %91
  %111 = load i64, i64* %110, align 8
  %112 = load i64*, i64** %24, align 8
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, %111
  %115 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %102, i64 0, i32 0
  %116 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %117 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %116, i64 0, i32 5, i64 0
  %118 = bitcast i8* %117 to i64*
  %119 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing::Filler", %"class.absl::cord_internal::CordRepRing::Filler"* %102, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i64, i64* %118, i64 %121
  store i64 %114, i64* %122, align 8
  %123 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %124 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %123, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = zext i32 %125 to i64
  %127 = shl nuw nsw i64 %126, 3
  %128 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %123, i64 0, i32 5, i64 %127
  %129 = bitcast i8* %128 to %"struct.absl::cord_internal::CordRep"**
  %130 = load i32, i32* %119, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %129, i64 %131
  store %"struct.absl::cord_internal::CordRep"* %101, %"struct.absl::cord_internal::CordRep"** %132, align 8
  %133 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %134 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %133, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = zext i32 %135 to i64
  %137 = shl nuw nsw i64 %136, 4
  %138 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %133, i64 0, i32 5, i64 %137
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %119, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i32, i32* %139, i64 %141
  store i32 %107, i32* %142, align 4
  %143 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %115, align 8
  %144 = load i32, i32* %119, align 4
  %145 = add i32 %144, 1
  %146 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %143, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %145, %147
  %149 = select i1 %148, i32 0, i32 %145
  store i32 %149, i32* %119, align 4
  %150 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 2 monotonic
  %152 = add nuw nsw i64 %91, 1
  %153 = icmp ult i64 %152, %25
  br i1 %153, label %90, label %154

154:                                              ; preds = %90, %18
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc nonnull dereferenceable(24) %struct.Entry.58* @"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing11PrependSlowEPS5_PNS2_7CordRepEE3$_2EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15EmplaceBackSlowIJSD_EEERSD_DpOT_"(%"class.absl::inlined_vector_internal::Storage.50"*, %struct.Entry.58* nocapture readonly dereferenceable(24)) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !24
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<Entry, 40, std::__1::allocator<Entry> >::Data.56"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %struct.Entry.58** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !24
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !24
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 768614336404564650
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 80, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = mul i64 %20, 24
  %24 = tail call i8* @_Znwm(i64 %23) #14
  %25 = bitcast i8* %24 to %struct.Entry.58*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %25, i64 %22
  %28 = bitcast %struct.Entry.58* %27 to i8*
  %29 = bitcast %struct.Entry.58* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  %30 = icmp eq i64 %22, 0
  br i1 %30, label %85, label %31

31:                                               ; preds = %19
  %32 = inttoptr i64 %21 to %struct.Entry.58*
  %33 = inttoptr i64 %21 to i8*
  %34 = add nsw i64 %22, -1
  %35 = and i64 %22, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = sub nsw i64 %22, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %struct.Entry.58* [ %32, %37 ], [ %61, %39 ]
  %41 = phi i8* [ %33, %37 ], [ %63, %39 ]
  %42 = phi i64 [ 0, %37 ], [ %62, %39 ]
  %43 = phi i64 [ %38, %37 ], [ %64, %39 ]
  %44 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %25, i64 %42
  %45 = bitcast %struct.Entry.58* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %41, i64 24, i1 false) #12
  %46 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %40, i64 1
  %47 = or i64 %42, 1
  %48 = bitcast %struct.Entry.58* %46 to i8*
  %49 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %25, i64 %47
  %50 = bitcast %struct.Entry.58* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %48, i64 24, i1 false) #12
  %51 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %40, i64 2
  %52 = or i64 %42, 2
  %53 = bitcast %struct.Entry.58* %51 to i8*
  %54 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %25, i64 %52
  %55 = bitcast %struct.Entry.58* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %53, i64 24, i1 false) #12
  %56 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %40, i64 3
  %57 = or i64 %42, 3
  %58 = bitcast %struct.Entry.58* %56 to i8*
  %59 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %25, i64 %57
  %60 = bitcast %struct.Entry.58* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %58, i64 24, i1 false) #12
  %61 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %40, i64 4
  %62 = add nuw nsw i64 %42, 4
  %63 = bitcast %struct.Entry.58* %61 to i8*
  %64 = add i64 %43, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %39

66:                                               ; preds = %39
  %67 = bitcast %struct.Entry.58* %61 to i8*
  br label %68

68:                                               ; preds = %66, %31
  %69 = phi %struct.Entry.58* [ %32, %31 ], [ %61, %66 ]
  %70 = phi i8* [ %33, %31 ], [ %67, %66 ]
  %71 = phi i64 [ 0, %31 ], [ %62, %66 ]
  %72 = icmp eq i64 %35, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %73
  %74 = phi %struct.Entry.58* [ %80, %73 ], [ %69, %68 ]
  %75 = phi i8* [ %82, %73 ], [ %70, %68 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %68 ]
  %77 = phi i64 [ %83, %73 ], [ %35, %68 ]
  %78 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %25, i64 %76
  %79 = bitcast %struct.Entry.58* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %75, i64 24, i1 false) #12
  %80 = getelementptr inbounds %struct.Entry.58, %struct.Entry.58* %74, i64 1
  %81 = add nuw nsw i64 %76, 1
  %82 = bitcast %struct.Entry.58* %80 to i8*
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !27

85:                                               ; preds = %68, %73, %19
  br i1 %6, label %91, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 1, i32 0, i32 0
  %88 = bitcast %struct.Entry.58** %87 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #14
  %90 = load i64, i64* %3, align 8
  br label %91

91:                                               ; preds = %86, %85
  %92 = phi i64 [ %90, %86 ], [ %4, %85 ]
  %93 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 1, i32 0, i32 0
  %94 = bitcast %struct.Entry.58** %93 to i64*
  store i64 %26, i64* %94, align 8
  %95 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.50", %"class.absl::inlined_vector_internal::Storage.50"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %95, align 8
  %96 = or i64 %92, 1
  %97 = add i64 %96, 2
  store i64 %97, i64* %3, align 8
  ret %struct.Entry.58* %27
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1073205, i32 2146410443}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10CreateSlowEPNS2_7CordRepEmE3$_0EEvNS3_9DirectionES7_OT_E5EntryLm40ENSt3__19allocatorISC_EEE15MakeStorageViewEv: argument 0"}
!6 = distinct !{!6, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10CreateSlowEPNS2_7CordRepEmE3$_0EEvNS3_9DirectionES7_OT_E5EntryLm40ENSt3__19allocatorISC_EEE15MakeStorageViewEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10AppendSlowEPS5_PNS2_7CordRepEE3$_1EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv: argument 0"}
!9 = distinct !{!9, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10AppendSlowEPS5_PNS2_7CordRepEE3$_1EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing11PrependSlowEPS5_PNS2_7CordRepEE3$_2EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv: argument 0"}
!13 = distinct !{!13, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing11PrependSlowEPS5_PNS2_7CordRepEE3$_2EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10CreateSlowEPNS2_7CordRepEmE3$_0EEvNS3_9DirectionES7_OT_E5EntryLm40ENSt3__19allocatorISC_EEE15MakeStorageViewEv: argument 0"}
!17 = distinct !{!17, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10CreateSlowEPNS2_7CordRepEmE3$_0EEvNS3_9DirectionES7_OT_E5EntryLm40ENSt3__19allocatorISC_EEE15MakeStorageViewEv"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10AppendSlowEPS5_PNS2_7CordRepEE3$_1EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv: argument 0"}
!22 = distinct !{!22, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing10AppendSlowEPS5_PNS2_7CordRepEE3$_1EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv"}
!23 = distinct !{!23, !19}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing11PrependSlowEPS5_PNS2_7CordRepEE3$_2EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv: argument 0"}
!26 = distinct !{!26, !"_ZN4absl23inlined_vector_internal7StorageIZNS_13cord_internal12_GLOBAL__N_17ConsumeIZNS2_11CordRepRing11PrependSlowEPS5_PNS2_7CordRepEE3$_2EEvNS3_9DirectionES8_OT_E5EntryLm40ENSt3__19allocatorISD_EEE15MakeStorageViewEv"}
!27 = distinct !{!27, !19}
