; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/common/vp9_entropymode.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/common/vp9_entropymode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, {}*, {}*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%union.int_mv = type { i32 }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }

@vp9_kf_y_mode_prob = hidden local_unnamed_addr constant [10 x [10 x [9 x i8]]] [[10 x [9 x i8]] [[9 x i8] c"\89\1E*\94\97\CFF4[", [9 x i8] c"\5C-f\88t\B4JZd", [9 x i8] c"I \13\BB\DE\D7.\22d", [9 x i8] c"[\1E ty\BA]V^", [9 x i8] c"H#$\95D\CED?i", [9 x i8] c"I\1F\1C\8A9|7z\97", [9 x i8] c"C\17\15\8C~\C5(%\AB", [9 x i8] c"V\1B\1C\80\9A\D4-+5", [9 x i8] c"J \1BkV\A0?\86f", [9 x i8] c";C,\8C\A1\CANCw"], [10 x [9 x i8]] [[9 x i8] c"?$~\92{\9E<Z`", [9 x i8] c"+.\A8\86k\80E\8E\5C", [9 x i8] c",\1DD\9F\C9\B129M", [9 x i8] c":&Lra\ACN\85\5C", [9 x i8] c".)L\8C?\B8Ep9", [9 x i8] c"& U\8C.p6\97\85", [9 x i8] c"'\1B=\83n\AF,K\88", [9 x i8] c"4\1EJq\82\AF3@:", [9 x i8] c"/#PdJ\8F@\A3J", [9 x i8] c"$=tr\80\A2P}R"], [10 x [9 x i8]] [[9 x i8] c"R\1A\1A\AB\D0\CC, i", [9 x i8] c"7,D\A6\B3\C099l", [9 x i8] c"*\1A\0B\C7\F1\E4\17\0FU", [9 x i8] c"D*\13\83\A0\C774S", [9 x i8] c":2\19\8Bs\E8'4v", [9 x i8] c"2#!\99h\A2@;\83", [9 x i8] c",\18\10\96\B1\CA!\13\9C", [9 x i8] c"7\1B\0C\99\CB\DA\1A\1B1", [9 x i8] c"51\15nt\A8;PL", [9 x i8] c"&H\13\A8\CB\D422k"], [10 x [9 x i8]] [[9 x i8] c"g\1A$\81\84\C9SP]", [9 x i8] c";&Spg\A2b\88Z", [9 x i8] c">\1E\17\9E\C8\CF;92", [9 x i8] c"C\1E\1DTV\BFf[;", [9 x i8] c"< !pG\DC@Yh", [9 x i8] c"5\1A\22\828\95Txg", [9 x i8] c"5\15\17\85m\D28M\AC", [9 x i8] c"M\13\1Dp\8E\E47B$", [9 x i8] c"=\1D\1D]a\A5S\AF\A2", [9 x i8] c"//+r\89\B5dc_"], [10 x [9 x i8]] [[9 x i8] c"E\17\1D\80S\C7.,e", [9 x i8] c"5(7\8BE\B7=Pn", [9 x i8] c"(\1D\13\A1\B4\CF+\18[", [9 x i8] c"<\22\13i=\C65@Y", [9 x i8] c"4\1F\16\9E(\D1:>Y", [9 x i8] c",\1F\1D\93.\9E8f\C6", [9 x i8] c"#\13\0C\87W\D1)-\A7", [9 x i8] c"7\19\15v_\D7&'B", [9 x i8] c"3&\19q:\A4F]a", [9 x i8] c"/6\22\92l\CBHg\97"], [10 x [9 x i8]] [[9 x i8] c"@\13%\9CB\8A1_\85", [9 x i8] c".\1BP\967|7y\87", [9 x i8] c"$\17\1B\A5\95\A66@v", [9 x i8] c"5\15$\83?\A3<mQ", [9 x i8] c"(\1A#\9A(\B93a{", [9 x i8] c"#\13\22\B3\13a0\81|", [9 x i8] c"$\14\1A\88>\A4!M\9A", [9 x i8] c"-\12 \82Z\9D(O[", [9 x i8] c"-\1A\1C\81-\811\93{", [9 x i8] c"&,3\88J\A29ay"], [10 x [9 x i8]] [[9 x i8] c"K\11\16\88\8A\B9 \22\A6", [9 x i8] c"8':\85u\AD05\BB", [9 x i8] c"#\15\0C\A1\D4\CF\14\17\91", [9 x i8] c"8\1D\13um\B57Dp", [9 x i8] c"/\1D\11\99@\DC;3r", [9 x i8] c".\10\18\88L\93)@\AC", [9 x i8] c"\22\11\0Bl\98\BB\0D\0F\D1", [9 x i8] c"3\18\0Es\85\D1 \1Ah", [9 x i8] c"7\1E\12zO\B3,Xt", [9 x i8] c"%1\19\81\A8\A4)6\94"], [10 x [9 x i8]] [[9 x i8] c"R\16 \7F\8F\D5')F", [9 x i8] c">,={i\BD09@", [9 x i8] c"/\19\11\AF\DE\DC\18\1EV", [9 x i8] c"D$\11jf\CE;JJ", [9 x i8] c"9'\17\97D\D87?:", [9 x i8] c"1\1E#\8DF\A8R(s", [9 x i8] c"3\19\0F\88\81\CA&#\8B", [9 x i8] c"D\1A\10o\8D\D7\1D\1C\1C", [9 x i8] c";'\13rK\B4Mh*", [9 x i8] c"(=\1A~\98\CE=;]"], [10 x [9 x i8]] [[9 x i8] c"N\17'ou\AAJ|^", [9 x i8] c"0\22Ve\5C\92N\B3\86", [9 x i8] c"/\16\18\8A\BB\B2DE;", [9 x i8] c"8\19!ip\BB_\B1\81", [9 x i8] c"0\1F\1Br?\B7Rt8", [9 x i8] c"+\1C%y?{=\C0\A9", [9 x i8] c"*\11\18ma\B18Lz", [9 x i8] c":\12\1Ci\8B\B6F\5C?", [9 x i8] c".\17 JV\96C\B7X", [9 x i8] c"$&0\5Cz\A5X\89["], [10 x [9 x i8]] [[9 x i8] c"AF<\9B\9F\C7=<Q", [9 x i8] c",Ns\84w\ADGp]", [9 x i8] c"'&\15\B8\E3\CE* @", [9 x i8] c":/$|\89\C1PRN", [9 x i8] c"12#\90_\CD?N;", [9 x i8] c")54\94G\8EA\803", [9 x i8] c"($\1C\8F\8F\CA(7\89", [9 x i8] c"4\22\1D\81\B7\E3*#+", [9 x i8] c"*,,hi\A4@\82P", [9 x i8] c"+Q5\8C\A9\CCDTH"]], align 16
@vp9_kf_uv_mode_prob = hidden local_unnamed_addr constant [10 x [9 x i8]] [[9 x i8] c"\90\0B6\9D\C3\82.:l", [9 x i8] c"v\0F{\94\83e,]\83", [9 x i8] c"q\0C\17\BC\E2\8E\1A }", [9 x i8] c"x\0B2{\A3\87@Mg", [9 x i8] c"q\09$\9Bo\9D ,\A1", [9 x i8] c"t\097\B0L`%=\95", [9 x i8] c"s\09\1C\8D\A1\A7\15\19\C1", [9 x i8] c"x\0C \91\C3\8E &V", [9 x i8] c"t\0C@x\8C}1sy", [9 x i8] c"f\13B\A2\B6z#;\80"], align 16
@vp9_kf_partition_probs = hidden local_unnamed_addr constant [16 x [3 x i8]] [[3 x i8] c"\9Ea^", [3 x i8] c"]\18c", [3 x i8] c"Uw,", [3 x i8] c">;C", [3 x i8] c"\9555", [3 x i8] c"^\140", [3 x i8] c"S5\18", [3 x i8] c"4\12\12", [3 x i8] c"\96('", [3 x i8] c"N\0C\1A", [3 x i8] c"C!\0B", [3 x i8] c"\18\07\05", [3 x i8] c"\AE#1", [3 x i8] c"D\0B\1B", [3 x i8] c"9\0F\09", [3 x i8] c"\0C\03\03"], align 16
@vp9_intra_mode_tree = hidden constant [18 x i8] c"\00\02\F7\04\FF\06\08\0C\FE\0A\FC\FB\FD\0E\F8\10\FA\F9", align 16
@vp9_inter_mode_tree = hidden constant [6 x i8] c"\FE\02\00\04\FF\FD", align 1
@vp9_partition_tree = hidden constant [6 x i8] c"\00\02\FF\04\FE\FD", align 1
@vp9_switchable_interp_tree = hidden constant [4 x i8] c"\00\02\FF\FE", align 1
@count_to_update_factor = internal unnamed_addr constant [21 x i32] [i32 0, i32 6, i32 12, i32 19, i32 25, i32 32, i32 38, i32 44, i32 51, i32 57, i32 64, i32 70, i32 76, i32 83, i32 89, i32 96, i32 102, i32 108, i32 115, i32 121, i32 128], align 16
@default_if_uv_probs = internal unnamed_addr constant [10 x [9 x i8]] [[9 x i8] c"x\07L\B0\D0~\1C6g", [9 x i8] c"0\0C\9A\9B\8BZ\22uw", [9 x i8] c"C\06\19\CC\F3\9E\0D\15`", [9 x i8] c"a\05,\83\B0\8B0Da", [9 x i8] c"S\05*\9Co\98\1A1\98", [9 x i8] c"P\05:\B2JS!>\91", [9 x i8] c"V\05 \9A\C0\A8\0E\16\A3", [9 x i8] c"U\05 \9C\D8\94\13\1DI", [9 x i8] c"M\07@t\84z%~x", [9 x i8] c"e\15k\B5\C0g\13C}"], align 16
@default_if_y_probs = internal unnamed_addr constant [4 x [9 x i8]] [[9 x i8] c"A \12\90\A2\C2)3b", [9 x i8] c"\84D\12\A5\D9\C4-(N", [9 x i8] c"\ADP\13\B0\F0\C1@#.", [9 x i8] c"\DD\87&\C2\F8y`U\1D"], align 16
@default_partition_probs = internal unnamed_addr constant [16 x [3 x i8]] [[3 x i8] c"\C7z\8D", [3 x i8] c"\93?\9F", [3 x i8] c"\94\85v", [3 x i8] c"yhr", [3 x i8] c"\AEIW", [3 x i8] c"\5C)S", [3 x i8] c"Rc2", [3 x i8] c"5''", [3 x i8] c"\B1:;", [3 x i8] c"D\1A?", [3 x i8] c"4O\19", [3 x i8] c"\11\0E\0C", [3 x i8] c"\DE\22\1E", [3 x i8] c"H\10,", [3 x i8] c": \0C", [3 x i8] c"\0A\07\06"], align 16
@default_comp_inter_p = internal unnamed_addr constant [5 x i8] c"\EF\B7w`)", align 1
@default_comp_ref_p = internal unnamed_addr constant [5 x i8] c"2~{\DD\E2", align 1
@default_single_ref_p = internal unnamed_addr constant [5 x [2 x i8]] [[2 x i8] c"!\10", [2 x i8] c"MJ", [2 x i8] c"\8E\8E", [2 x i8] c"\AC\AA", [2 x i8] c"\EE\F7"], align 1
@default_tx_probs = internal unnamed_addr constant %struct.tx_probs { [2 x [3 x i8]] [[3 x i8] c"\03\88%", [3 x i8] c"\054\0D"], [2 x [2 x i8]] [[2 x i8] c"\14\98", [2 x i8] c"\0Fe"], [2 x [1 x i8]] [[1 x i8] c"d", [1 x i8] c"B"] }, align 1
@default_skip_probs = internal unnamed_addr constant [3 x i8] c"\C0\80@", align 1
@default_inter_mode_probs = internal unnamed_addr constant [7 x [3 x i8]] [[3 x i8] c"\02\AD\22", [3 x i8] c"\07\91U", [3 x i8] c"\07\A6?", [3 x i8] c"\07^B", [3 x i8] c"\08@.", [3 x i8] c"\11Q\1F", [3 x i8] c"\19\1D\1E"], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @tx_counts_to_branch_counts_32x32(i32* nocapture readonly, [2 x i32]* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %0, align 4
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 0, i64 0
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds i32, i32* %0, i64 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds i32, i32* %0, i64 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %6
  %10 = getelementptr inbounds i32, i32* %0, i64 3
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %9, %11
  %13 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 0, i64 1
  store i32 %12, i32* %13, align 4
  %14 = load i32, i32* %5, align 4
  %15 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 1, i64 0
  store i32 %14, i32* %15, align 4
  %16 = load i32, i32* %7, align 4
  %17 = load i32, i32* %10, align 4
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 1, i64 1
  store i32 %18, i32* %19, align 4
  %20 = load i32, i32* %7, align 4
  %21 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 2, i64 0
  store i32 %20, i32* %21, align 4
  %22 = load i32, i32* %10, align 4
  %23 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 2, i64 1
  store i32 %22, i32* %23, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @tx_counts_to_branch_counts_16x16(i32* nocapture readonly, [2 x i32]* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %0, align 4
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 0, i64 0
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds i32, i32* %0, i64 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds i32, i32* %0, i64 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %6
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 0, i64 1
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* %5, align 4
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 1, i64 0
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* %7, align 4
  %14 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 1, i64 1
  store i32 %13, i32* %14, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @tx_counts_to_branch_counts_8x8(i32* nocapture readonly, [2 x i32]* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %0, align 4
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 0, i64 0
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds i32, i32* %0, i64 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %1, i64 0, i64 1
  store i32 %6, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_adapt_mode_probs(%struct.VP9Common*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 73
  %3 = load %struct.frame_contexts*, %struct.frame_contexts** %2, align 8
  %4 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 74
  %5 = load %struct.frame_contexts*, %struct.frame_contexts** %4, align 16
  %6 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 75
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 6, i64 0
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 0, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, %12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %1
  %18 = icmp ult i32 %15, 20
  %19 = select i1 %18, i32 %15, i32 20
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %12 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = lshr i32 %15, 1
  %26 = zext i32 %25 to i64
  %27 = add nuw nsw i64 %24, %26
  %28 = zext i32 %15 to i64
  %29 = udiv i64 %27, %28
  %30 = trunc i64 %29 to i32
  %31 = sub nsw i32 255, %30
  %32 = lshr i32 %31, 23
  %33 = or i32 %32, %30
  %34 = icmp eq i32 %30, 0
  %35 = zext i1 %34 to i32
  %36 = zext i8 %10 to i32
  %37 = and i32 %33, 255
  %38 = or i32 %37, %35
  %39 = sub nsw i32 256, %22
  %40 = mul nsw i32 %39, %36
  %41 = mul nsw i32 %38, %22
  %42 = add i32 %40, 128
  %43 = add i32 %42, %41
  %44 = lshr i32 %43, 8
  %45 = trunc i32 %44 to i8
  br label %46

46:                                               ; preds = %1, %17
  %47 = phi i8 [ %45, %17 ], [ %10, %1 ]
  %48 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 6, i64 0
  store i8 %47, i8* %48, align 1
  %49 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 6, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 1, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 1, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, %52
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %1599, label %1570

57:                                               ; preds = %1679
  %58 = icmp ult i32 %1688, 20
  %59 = select i1 %58, i32 %1688, i32 20
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %1685 to i64
  %64 = shl nuw nsw i64 %63, 8
  %65 = lshr i32 %1688, 1
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %64, %66
  %68 = zext i32 %1688 to i64
  %69 = udiv i64 %67, %68
  %70 = trunc i64 %69 to i32
  %71 = sub nsw i32 255, %70
  %72 = lshr i32 %71, 23
  %73 = or i32 %72, %70
  %74 = icmp eq i32 %70, 0
  %75 = zext i1 %74 to i32
  %76 = zext i8 %1683 to i32
  %77 = and i32 %73, 255
  %78 = or i32 %77, %75
  %79 = sub nsw i32 256, %62
  %80 = mul nsw i32 %79, %76
  %81 = mul nsw i32 %78, %62
  %82 = add i32 %80, 128
  %83 = add i32 %82, %81
  %84 = lshr i32 %83, 8
  %85 = trunc i32 %84 to i8
  br label %86

86:                                               ; preds = %1679, %57
  %87 = phi i8 [ %85, %57 ], [ %1683, %1679 ]
  %88 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 7, i64 0
  store i8 %87, i8* %88, align 1
  %89 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 7, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 1, i64 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 1, i64 1
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, %92
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %1439, label %1410

97:                                               ; preds = %1559
  %98 = icmp ult i32 %1568, 20
  %99 = select i1 %98, i32 %1568, i32 20
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %1565 to i64
  %104 = shl nuw nsw i64 %103, 8
  %105 = lshr i32 %1568, 1
  %106 = zext i32 %105 to i64
  %107 = add nuw nsw i64 %104, %106
  %108 = zext i32 %1568 to i64
  %109 = udiv i64 %107, %108
  %110 = trunc i64 %109 to i32
  %111 = sub nsw i32 255, %110
  %112 = lshr i32 %111, 23
  %113 = or i32 %112, %110
  %114 = icmp eq i32 %110, 0
  %115 = zext i1 %114 to i32
  %116 = zext i8 %1563 to i32
  %117 = and i32 %113, 255
  %118 = or i32 %117, %115
  %119 = sub nsw i32 256, %102
  %120 = mul nsw i32 %119, %116
  %121 = mul nsw i32 %118, %102
  %122 = add i32 %120, 128
  %123 = add i32 %122, %121
  %124 = lshr i32 %123, 8
  %125 = trunc i32 %124 to i8
  br label %126

126:                                              ; preds = %1559, %97
  %127 = phi i8 [ %125, %97 ], [ %1563, %1559 ]
  %128 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 9, i64 0
  store i8 %127, i8* %128, align 1
  %129 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 9, i64 1
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 1, i64 0
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 1, i64 1
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, %132
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %1279, label %1250

137:                                              ; preds = %1399
  %138 = icmp ult i32 %1408, 20
  %139 = select i1 %138, i32 %1408, i32 20
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %1405 to i64
  %144 = shl nuw nsw i64 %143, 8
  %145 = lshr i32 %1408, 1
  %146 = zext i32 %145 to i64
  %147 = add nuw nsw i64 %144, %146
  %148 = zext i32 %1408 to i64
  %149 = udiv i64 %147, %148
  %150 = trunc i64 %149 to i32
  %151 = sub nsw i32 255, %150
  %152 = lshr i32 %151, 23
  %153 = or i32 %152, %150
  %154 = icmp eq i32 %150, 0
  %155 = zext i1 %154 to i32
  %156 = zext i8 %1403 to i32
  %157 = and i32 %153, 255
  %158 = or i32 %157, %155
  %159 = sub nsw i32 256, %142
  %160 = mul nsw i32 %159, %156
  %161 = mul nsw i32 %158, %142
  %162 = add i32 %160, 128
  %163 = add i32 %162, %161
  %164 = lshr i32 %163, 8
  %165 = trunc i32 %164 to i8
  br label %166

166:                                              ; preds = %1399, %137
  %167 = phi i8 [ %165, %137 ], [ %1403, %1399 ]
  %168 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 0, i64 0
  store i8 %167, i8* %168, align 1
  %169 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 0, i64 1
  %170 = load i8, i8* %169, align 1
  %171 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 0, i64 1, i64 0
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 0, i64 1, i64 1
  %174 = load i32, i32* %173, align 4
  %175 = add i32 %174, %172
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %813, label %784

177:                                              ; preds = %1133
  %178 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 4, i64 0, i64 0
  %179 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 5, i64 0, i64 0
  %180 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 4, i64 0, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @vp9_switchable_interp_tree, i64 0, i64 0), i8* %178, i32* %179, i8* %180) #4
  %181 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 4, i64 1, i64 0
  %182 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 5, i64 1, i64 0
  %183 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 4, i64 1, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @vp9_switchable_interp_tree, i64 0, i64 0), i8* %181, i32* %182, i8* %183) #4
  %184 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 4, i64 2, i64 0
  %185 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 5, i64 2, i64 0
  %186 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 4, i64 2, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @vp9_switchable_interp_tree, i64 0, i64 0), i8* %184, i32* %185, i8* %186) #4
  %187 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 4, i64 3, i64 0
  %188 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 5, i64 3, i64 0
  %189 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 4, i64 3, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @vp9_switchable_interp_tree, i64 0, i64 0), i8* %187, i32* %188, i8* %189) #4
  br label %190

190:                                              ; preds = %177, %1133
  %191 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 37
  %192 = load i32, i32* %191, align 16
  %193 = icmp eq i32 %192, 4
  br i1 %193, label %194, label %316

194:                                              ; preds = %190
  %195 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 2, i64 0, i64 0
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 2, i64 0, i64 1
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %198, %196
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 2, i64 0, i64 0
  %202 = load i8, i8* %201, align 1
  br i1 %200, label %232, label %203

203:                                              ; preds = %194
  %204 = zext i32 %199 to i64
  %205 = lshr i32 %199, 1
  %206 = zext i32 %205 to i64
  %207 = zext i32 %196 to i64
  %208 = shl nuw nsw i64 %207, 8
  %209 = add nuw nsw i64 %208, %206
  %210 = icmp ult i32 %199, 20
  %211 = select i1 %210, i32 %199, i32 20
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = udiv i64 %209, %204
  %216 = trunc i64 %215 to i32
  %217 = sub nsw i32 255, %216
  %218 = lshr i32 %217, 23
  %219 = or i32 %218, %216
  %220 = icmp eq i32 %216, 0
  %221 = zext i1 %220 to i32
  %222 = zext i8 %202 to i32
  %223 = and i32 %219, 255
  %224 = or i32 %223, %221
  %225 = sub nsw i32 256, %214
  %226 = mul nsw i32 %225, %222
  %227 = mul nsw i32 %224, %214
  %228 = add i32 %226, 128
  %229 = add i32 %228, %227
  %230 = lshr i32 %229, 8
  %231 = trunc i32 %230 to i8
  br label %232

232:                                              ; preds = %194, %203
  %233 = phi i8 [ %231, %203 ], [ %202, %194 ]
  %234 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 2, i64 0, i64 0
  store i8 %233, i8* %234, align 1
  %235 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 1, i64 0, i64 0
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 1, i64 0, i64 1
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 1, i64 0, i64 2
  %240 = load i32, i32* %239, align 4
  %241 = add i32 %240, %238
  %242 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 1, i64 0, i64 0
  %243 = load i8, i8* %242, align 1
  %244 = add i32 %241, %236
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %275, label %246

246:                                              ; preds = %232
  %247 = icmp ult i32 %244, 20
  %248 = select i1 %247, i32 %244, i32 20
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %236 to i64
  %253 = shl nuw nsw i64 %252, 8
  %254 = lshr i32 %244, 1
  %255 = zext i32 %254 to i64
  %256 = add nuw nsw i64 %253, %255
  %257 = zext i32 %244 to i64
  %258 = udiv i64 %256, %257
  %259 = trunc i64 %258 to i32
  %260 = sub nsw i32 255, %259
  %261 = lshr i32 %260, 23
  %262 = or i32 %261, %259
  %263 = icmp eq i32 %259, 0
  %264 = zext i1 %263 to i32
  %265 = zext i8 %243 to i32
  %266 = and i32 %262, 255
  %267 = or i32 %266, %264
  %268 = sub nsw i32 256, %251
  %269 = mul nsw i32 %268, %265
  %270 = mul nsw i32 %267, %251
  %271 = add i32 %269, 128
  %272 = add i32 %271, %270
  %273 = lshr i32 %272, 8
  %274 = trunc i32 %273 to i8
  br label %275

275:                                              ; preds = %232, %246
  %276 = phi i8 [ %274, %246 ], [ %243, %232 ]
  %277 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 1, i64 0, i64 0
  store i8 %276, i8* %277, align 1
  %278 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 1, i64 0, i64 1
  %279 = load i8, i8* %278, align 1
  %280 = icmp eq i32 %241, 0
  br i1 %280, label %466, label %437

281:                                              ; preds = %466
  %282 = icmp ult i32 %481, 20
  %283 = select i1 %282, i32 %481, i32 20
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = zext i32 %470 to i64
  %288 = shl nuw nsw i64 %287, 8
  %289 = lshr i32 %481, 1
  %290 = zext i32 %289 to i64
  %291 = add nuw nsw i64 %288, %290
  %292 = zext i32 %481 to i64
  %293 = udiv i64 %291, %292
  %294 = trunc i64 %293 to i32
  %295 = sub nsw i32 255, %294
  %296 = lshr i32 %295, 23
  %297 = or i32 %296, %294
  %298 = icmp eq i32 %294, 0
  %299 = zext i1 %298 to i32
  %300 = zext i8 %480 to i32
  %301 = and i32 %297, 255
  %302 = or i32 %301, %299
  %303 = sub nsw i32 256, %286
  %304 = mul nsw i32 %303, %300
  %305 = mul nsw i32 %302, %286
  %306 = add i32 %304, 128
  %307 = add i32 %306, %305
  %308 = lshr i32 %307, 8
  %309 = trunc i32 %308 to i8
  br label %310

310:                                              ; preds = %466, %281
  %311 = phi i8 [ %309, %281 ], [ %480, %466 ]
  %312 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 0, i64 0, i64 0
  store i8 %311, i8* %312, align 1
  %313 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 0, i64 0, i64 1
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i32 %478, 0
  br i1 %315, label %512, label %483

316:                                              ; preds = %781, %190
  %317 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 11, i64 0
  %318 = load i8, i8* %317, align 1
  %319 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 12, i64 0, i64 0
  %320 = load i32, i32* %319, align 4
  %321 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 12, i64 0, i64 1
  %322 = load i32, i32* %321, align 4
  %323 = add i32 %322, %320
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %354, label %325

325:                                              ; preds = %316
  %326 = icmp ult i32 %323, 20
  %327 = select i1 %326, i32 %323, i32 20
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %320 to i64
  %332 = shl nuw nsw i64 %331, 8
  %333 = lshr i32 %323, 1
  %334 = zext i32 %333 to i64
  %335 = add nuw nsw i64 %332, %334
  %336 = zext i32 %323 to i64
  %337 = udiv i64 %335, %336
  %338 = trunc i64 %337 to i32
  %339 = sub nsw i32 255, %338
  %340 = lshr i32 %339, 23
  %341 = or i32 %340, %338
  %342 = icmp eq i32 %338, 0
  %343 = zext i1 %342 to i32
  %344 = zext i8 %318 to i32
  %345 = and i32 %341, 255
  %346 = or i32 %345, %343
  %347 = sub nsw i32 256, %330
  %348 = mul nsw i32 %347, %344
  %349 = mul nsw i32 %346, %330
  %350 = add i32 %348, 128
  %351 = add i32 %350, %349
  %352 = lshr i32 %351, 8
  %353 = trunc i32 %352 to i8
  br label %354

354:                                              ; preds = %316, %325
  %355 = phi i8 [ %353, %325 ], [ %318, %316 ]
  %356 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 11, i64 0
  store i8 %355, i8* %356, align 1
  %357 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 11, i64 1
  %358 = load i8, i8* %357, align 1
  %359 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 12, i64 1, i64 0
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 12, i64 1, i64 1
  %362 = load i32, i32* %361, align 4
  %363 = add i32 %362, %360
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %394, label %365

365:                                              ; preds = %354
  %366 = icmp ult i32 %363, 20
  %367 = select i1 %366, i32 %363, i32 20
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %368
  %370 = load i32, i32* %369, align 4
  %371 = zext i32 %360 to i64
  %372 = shl nuw nsw i64 %371, 8
  %373 = lshr i32 %363, 1
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %372, %374
  %376 = zext i32 %363 to i64
  %377 = udiv i64 %375, %376
  %378 = trunc i64 %377 to i32
  %379 = sub nsw i32 255, %378
  %380 = lshr i32 %379, 23
  %381 = or i32 %380, %378
  %382 = icmp eq i32 %378, 0
  %383 = zext i1 %382 to i32
  %384 = zext i8 %358 to i32
  %385 = and i32 %381, 255
  %386 = or i32 %385, %383
  %387 = sub nsw i32 256, %370
  %388 = mul nsw i32 %387, %384
  %389 = mul nsw i32 %386, %370
  %390 = add i32 %388, 128
  %391 = add i32 %390, %389
  %392 = lshr i32 %391, 8
  %393 = trunc i32 %392 to i8
  br label %394

394:                                              ; preds = %365, %354
  %395 = phi i8 [ %393, %365 ], [ %358, %354 ]
  %396 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 11, i64 1
  store i8 %395, i8* %396, align 1
  %397 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 11, i64 2
  %398 = load i8, i8* %397, align 1
  %399 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 12, i64 2, i64 0
  %400 = load i32, i32* %399, align 4
  %401 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 12, i64 2, i64 1
  %402 = load i32, i32* %401, align 4
  %403 = add i32 %402, %400
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %434, label %405

405:                                              ; preds = %394
  %406 = icmp ult i32 %403, 20
  %407 = select i1 %406, i32 %403, i32 20
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %408
  %410 = load i32, i32* %409, align 4
  %411 = zext i32 %400 to i64
  %412 = shl nuw nsw i64 %411, 8
  %413 = lshr i32 %403, 1
  %414 = zext i32 %413 to i64
  %415 = add nuw nsw i64 %412, %414
  %416 = zext i32 %403 to i64
  %417 = udiv i64 %415, %416
  %418 = trunc i64 %417 to i32
  %419 = sub nsw i32 255, %418
  %420 = lshr i32 %419, 23
  %421 = or i32 %420, %418
  %422 = icmp eq i32 %418, 0
  %423 = zext i1 %422 to i32
  %424 = zext i8 %398 to i32
  %425 = and i32 %421, 255
  %426 = or i32 %425, %423
  %427 = sub nsw i32 256, %410
  %428 = mul nsw i32 %427, %424
  %429 = mul nsw i32 %426, %410
  %430 = add i32 %428, 128
  %431 = add i32 %430, %429
  %432 = lshr i32 %431, 8
  %433 = trunc i32 %432 to i8
  br label %434

434:                                              ; preds = %405, %394
  %435 = phi i8 [ %433, %405 ], [ %398, %394 ]
  %436 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 11, i64 2
  store i8 %435, i8* %436, align 1
  ret void

437:                                              ; preds = %275
  %438 = icmp ult i32 %241, 20
  %439 = select i1 %438, i32 %241, i32 20
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = zext i32 %238 to i64
  %444 = shl nuw nsw i64 %443, 8
  %445 = lshr i32 %241, 1
  %446 = zext i32 %445 to i64
  %447 = add nuw nsw i64 %444, %446
  %448 = zext i32 %241 to i64
  %449 = udiv i64 %447, %448
  %450 = trunc i64 %449 to i32
  %451 = sub nsw i32 255, %450
  %452 = lshr i32 %451, 23
  %453 = or i32 %452, %450
  %454 = icmp eq i32 %450, 0
  %455 = zext i1 %454 to i32
  %456 = zext i8 %279 to i32
  %457 = and i32 %453, 255
  %458 = or i32 %457, %455
  %459 = sub nsw i32 256, %442
  %460 = mul nsw i32 %459, %456
  %461 = mul nsw i32 %458, %442
  %462 = add i32 %460, 128
  %463 = add i32 %462, %461
  %464 = lshr i32 %463, 8
  %465 = trunc i32 %464 to i8
  br label %466

466:                                              ; preds = %437, %275
  %467 = phi i8 [ %465, %437 ], [ %279, %275 ]
  %468 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 1, i64 0, i64 1
  store i8 %467, i8* %468, align 1
  %469 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 0, i64 0
  %470 = load i32, i32* %469, align 4
  %471 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 0, i64 1
  %472 = load i32, i32* %471, align 4
  %473 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 0, i64 2
  %474 = load i32, i32* %473, align 4
  %475 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 0, i64 3
  %476 = load i32, i32* %475, align 4
  %477 = add i32 %476, %474
  %478 = add i32 %477, %472
  %479 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 0, i64 0, i64 0
  %480 = load i8, i8* %479, align 1
  %481 = add i32 %478, %470
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %310, label %281

483:                                              ; preds = %310
  %484 = icmp ult i32 %478, 20
  %485 = select i1 %484, i32 %478, i32 20
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = zext i32 %472 to i64
  %490 = shl nuw nsw i64 %489, 8
  %491 = lshr i32 %478, 1
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %490, %492
  %494 = zext i32 %478 to i64
  %495 = udiv i64 %493, %494
  %496 = trunc i64 %495 to i32
  %497 = sub nsw i32 255, %496
  %498 = lshr i32 %497, 23
  %499 = or i32 %498, %496
  %500 = icmp eq i32 %496, 0
  %501 = zext i1 %500 to i32
  %502 = zext i8 %314 to i32
  %503 = and i32 %499, 255
  %504 = or i32 %503, %501
  %505 = sub nsw i32 256, %488
  %506 = mul nsw i32 %505, %502
  %507 = mul nsw i32 %504, %488
  %508 = add i32 %506, 128
  %509 = add i32 %508, %507
  %510 = lshr i32 %509, 8
  %511 = trunc i32 %510 to i8
  br label %512

512:                                              ; preds = %483, %310
  %513 = phi i8 [ %511, %483 ], [ %314, %310 ]
  %514 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 0, i64 0, i64 1
  store i8 %513, i8* %514, align 1
  %515 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 0, i64 0, i64 2
  %516 = load i8, i8* %515, align 1
  %517 = icmp eq i32 %477, 0
  br i1 %517, label %547, label %518

518:                                              ; preds = %512
  %519 = icmp ult i32 %477, 20
  %520 = select i1 %519, i32 %477, i32 20
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = zext i32 %474 to i64
  %525 = shl nuw nsw i64 %524, 8
  %526 = lshr i32 %477, 1
  %527 = zext i32 %526 to i64
  %528 = add nuw nsw i64 %525, %527
  %529 = zext i32 %477 to i64
  %530 = udiv i64 %528, %529
  %531 = trunc i64 %530 to i32
  %532 = sub nsw i32 255, %531
  %533 = lshr i32 %532, 23
  %534 = or i32 %533, %531
  %535 = icmp eq i32 %531, 0
  %536 = zext i1 %535 to i32
  %537 = zext i8 %516 to i32
  %538 = and i32 %534, 255
  %539 = or i32 %538, %536
  %540 = sub nsw i32 256, %523
  %541 = mul nsw i32 %540, %537
  %542 = mul nsw i32 %539, %523
  %543 = add i32 %541, 128
  %544 = add i32 %543, %542
  %545 = lshr i32 %544, 8
  %546 = trunc i32 %545 to i8
  br label %547

547:                                              ; preds = %518, %512
  %548 = phi i8 [ %546, %518 ], [ %516, %512 ]
  %549 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 0, i64 0, i64 2
  store i8 %548, i8* %549, align 1
  %550 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 2, i64 1, i64 0
  %551 = load i32, i32* %550, align 4
  %552 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 2, i64 1, i64 1
  %553 = load i32, i32* %552, align 4
  %554 = add i32 %553, %551
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 2, i64 1, i64 0
  %557 = load i8, i8* %556, align 1
  br i1 %555, label %587, label %558

558:                                              ; preds = %547
  %559 = zext i32 %554 to i64
  %560 = lshr i32 %554, 1
  %561 = zext i32 %560 to i64
  %562 = zext i32 %551 to i64
  %563 = shl nuw nsw i64 %562, 8
  %564 = add nuw nsw i64 %563, %561
  %565 = icmp ult i32 %554, 20
  %566 = select i1 %565, i32 %554, i32 20
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = udiv i64 %564, %559
  %571 = trunc i64 %570 to i32
  %572 = sub nsw i32 255, %571
  %573 = lshr i32 %572, 23
  %574 = or i32 %573, %571
  %575 = icmp eq i32 %571, 0
  %576 = zext i1 %575 to i32
  %577 = zext i8 %557 to i32
  %578 = and i32 %574, 255
  %579 = or i32 %578, %576
  %580 = sub nsw i32 256, %569
  %581 = mul nsw i32 %580, %577
  %582 = mul nsw i32 %579, %569
  %583 = add i32 %581, 128
  %584 = add i32 %583, %582
  %585 = lshr i32 %584, 8
  %586 = trunc i32 %585 to i8
  br label %587

587:                                              ; preds = %558, %547
  %588 = phi i8 [ %586, %558 ], [ %557, %547 ]
  %589 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 2, i64 1, i64 0
  store i8 %588, i8* %589, align 1
  %590 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 1, i64 1, i64 0
  %591 = load i32, i32* %590, align 4
  %592 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 1, i64 1, i64 1
  %593 = load i32, i32* %592, align 4
  %594 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 1, i64 1, i64 2
  %595 = load i32, i32* %594, align 4
  %596 = add i32 %595, %593
  %597 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 1, i64 1, i64 0
  %598 = load i8, i8* %597, align 1
  %599 = add i32 %596, %591
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %630, label %601

601:                                              ; preds = %587
  %602 = icmp ult i32 %599, 20
  %603 = select i1 %602, i32 %599, i32 20
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %604
  %606 = load i32, i32* %605, align 4
  %607 = zext i32 %591 to i64
  %608 = shl nuw nsw i64 %607, 8
  %609 = lshr i32 %599, 1
  %610 = zext i32 %609 to i64
  %611 = add nuw nsw i64 %608, %610
  %612 = zext i32 %599 to i64
  %613 = udiv i64 %611, %612
  %614 = trunc i64 %613 to i32
  %615 = sub nsw i32 255, %614
  %616 = lshr i32 %615, 23
  %617 = or i32 %616, %614
  %618 = icmp eq i32 %614, 0
  %619 = zext i1 %618 to i32
  %620 = zext i8 %598 to i32
  %621 = and i32 %617, 255
  %622 = or i32 %621, %619
  %623 = sub nsw i32 256, %606
  %624 = mul nsw i32 %623, %620
  %625 = mul nsw i32 %622, %606
  %626 = add i32 %624, 128
  %627 = add i32 %626, %625
  %628 = lshr i32 %627, 8
  %629 = trunc i32 %628 to i8
  br label %630

630:                                              ; preds = %601, %587
  %631 = phi i8 [ %629, %601 ], [ %598, %587 ]
  %632 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 1, i64 1, i64 0
  store i8 %631, i8* %632, align 1
  %633 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 1, i64 1, i64 1
  %634 = load i8, i8* %633, align 1
  %635 = icmp eq i32 %596, 0
  br i1 %635, label %665, label %636

636:                                              ; preds = %630
  %637 = icmp ult i32 %596, 20
  %638 = select i1 %637, i32 %596, i32 20
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %639
  %641 = load i32, i32* %640, align 4
  %642 = zext i32 %593 to i64
  %643 = shl nuw nsw i64 %642, 8
  %644 = lshr i32 %596, 1
  %645 = zext i32 %644 to i64
  %646 = add nuw nsw i64 %643, %645
  %647 = zext i32 %596 to i64
  %648 = udiv i64 %646, %647
  %649 = trunc i64 %648 to i32
  %650 = sub nsw i32 255, %649
  %651 = lshr i32 %650, 23
  %652 = or i32 %651, %649
  %653 = icmp eq i32 %649, 0
  %654 = zext i1 %653 to i32
  %655 = zext i8 %634 to i32
  %656 = and i32 %652, 255
  %657 = or i32 %656, %654
  %658 = sub nsw i32 256, %641
  %659 = mul nsw i32 %658, %655
  %660 = mul nsw i32 %657, %641
  %661 = add i32 %659, 128
  %662 = add i32 %661, %660
  %663 = lshr i32 %662, 8
  %664 = trunc i32 %663 to i8
  br label %665

665:                                              ; preds = %636, %630
  %666 = phi i8 [ %664, %636 ], [ %634, %630 ]
  %667 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 1, i64 1, i64 1
  store i8 %666, i8* %667, align 1
  %668 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 1, i64 0
  %669 = load i32, i32* %668, align 4
  %670 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 1, i64 1
  %671 = load i32, i32* %670, align 4
  %672 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 1, i64 2
  %673 = load i32, i32* %672, align 4
  %674 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 11, i32 0, i64 1, i64 3
  %675 = load i32, i32* %674, align 4
  %676 = add i32 %675, %673
  %677 = add i32 %676, %671
  %678 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 0, i64 1, i64 0
  %679 = load i8, i8* %678, align 1
  %680 = add i32 %677, %669
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %711, label %682

682:                                              ; preds = %665
  %683 = icmp ult i32 %680, 20
  %684 = select i1 %683, i32 %680, i32 20
  %685 = zext i32 %684 to i64
  %686 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %685
  %687 = load i32, i32* %686, align 4
  %688 = zext i32 %669 to i64
  %689 = shl nuw nsw i64 %688, 8
  %690 = lshr i32 %680, 1
  %691 = zext i32 %690 to i64
  %692 = add nuw nsw i64 %689, %691
  %693 = zext i32 %680 to i64
  %694 = udiv i64 %692, %693
  %695 = trunc i64 %694 to i32
  %696 = sub nsw i32 255, %695
  %697 = lshr i32 %696, 23
  %698 = or i32 %697, %695
  %699 = icmp eq i32 %695, 0
  %700 = zext i1 %699 to i32
  %701 = zext i8 %679 to i32
  %702 = and i32 %698, 255
  %703 = or i32 %702, %700
  %704 = sub nsw i32 256, %687
  %705 = mul nsw i32 %704, %701
  %706 = mul nsw i32 %703, %687
  %707 = add i32 %705, 128
  %708 = add i32 %707, %706
  %709 = lshr i32 %708, 8
  %710 = trunc i32 %709 to i8
  br label %711

711:                                              ; preds = %682, %665
  %712 = phi i8 [ %710, %682 ], [ %679, %665 ]
  %713 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 0, i64 1, i64 0
  store i8 %712, i8* %713, align 1
  %714 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 0, i64 1, i64 1
  %715 = load i8, i8* %714, align 1
  %716 = icmp eq i32 %677, 0
  br i1 %716, label %746, label %717

717:                                              ; preds = %711
  %718 = icmp ult i32 %677, 20
  %719 = select i1 %718, i32 %677, i32 20
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %720
  %722 = load i32, i32* %721, align 4
  %723 = zext i32 %671 to i64
  %724 = shl nuw nsw i64 %723, 8
  %725 = lshr i32 %677, 1
  %726 = zext i32 %725 to i64
  %727 = add nuw nsw i64 %724, %726
  %728 = zext i32 %677 to i64
  %729 = udiv i64 %727, %728
  %730 = trunc i64 %729 to i32
  %731 = sub nsw i32 255, %730
  %732 = lshr i32 %731, 23
  %733 = or i32 %732, %730
  %734 = icmp eq i32 %730, 0
  %735 = zext i1 %734 to i32
  %736 = zext i8 %715 to i32
  %737 = and i32 %733, 255
  %738 = or i32 %737, %735
  %739 = sub nsw i32 256, %722
  %740 = mul nsw i32 %739, %736
  %741 = mul nsw i32 %738, %722
  %742 = add i32 %740, 128
  %743 = add i32 %742, %741
  %744 = lshr i32 %743, 8
  %745 = trunc i32 %744 to i8
  br label %746

746:                                              ; preds = %717, %711
  %747 = phi i8 [ %745, %717 ], [ %715, %711 ]
  %748 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 0, i64 1, i64 1
  store i8 %747, i8* %748, align 1
  %749 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 10, i32 0, i64 1, i64 2
  %750 = load i8, i8* %749, align 1
  %751 = icmp eq i32 %676, 0
  br i1 %751, label %781, label %752

752:                                              ; preds = %746
  %753 = icmp ult i32 %676, 20
  %754 = select i1 %753, i32 %676, i32 20
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %755
  %757 = load i32, i32* %756, align 4
  %758 = zext i32 %673 to i64
  %759 = shl nuw nsw i64 %758, 8
  %760 = lshr i32 %676, 1
  %761 = zext i32 %760 to i64
  %762 = add nuw nsw i64 %759, %761
  %763 = zext i32 %676 to i64
  %764 = udiv i64 %762, %763
  %765 = trunc i64 %764 to i32
  %766 = sub nsw i32 255, %765
  %767 = lshr i32 %766, 23
  %768 = or i32 %767, %765
  %769 = icmp eq i32 %765, 0
  %770 = zext i1 %769 to i32
  %771 = zext i8 %750 to i32
  %772 = and i32 %768, 255
  %773 = or i32 %772, %770
  %774 = sub nsw i32 256, %757
  %775 = mul nsw i32 %774, %771
  %776 = mul nsw i32 %773, %757
  %777 = add i32 %775, 128
  %778 = add i32 %777, %776
  %779 = lshr i32 %778, 8
  %780 = trunc i32 %779 to i8
  br label %781

781:                                              ; preds = %752, %746
  %782 = phi i8 [ %780, %752 ], [ %750, %746 ]
  %783 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 10, i32 0, i64 1, i64 2
  store i8 %782, i8* %783, align 1
  br label %316

784:                                              ; preds = %166
  %785 = icmp ult i32 %175, 20
  %786 = select i1 %785, i32 %175, i32 20
  %787 = zext i32 %786 to i64
  %788 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %787
  %789 = load i32, i32* %788, align 4
  %790 = zext i32 %172 to i64
  %791 = shl nuw nsw i64 %790, 8
  %792 = lshr i32 %175, 1
  %793 = zext i32 %792 to i64
  %794 = add nuw nsw i64 %791, %793
  %795 = zext i32 %175 to i64
  %796 = udiv i64 %794, %795
  %797 = trunc i64 %796 to i32
  %798 = sub nsw i32 255, %797
  %799 = lshr i32 %798, 23
  %800 = or i32 %799, %797
  %801 = icmp eq i32 %797, 0
  %802 = zext i1 %801 to i32
  %803 = zext i8 %170 to i32
  %804 = and i32 %800, 255
  %805 = or i32 %804, %802
  %806 = sub nsw i32 256, %789
  %807 = mul nsw i32 %806, %803
  %808 = mul nsw i32 %805, %789
  %809 = add i32 %807, 128
  %810 = add i32 %809, %808
  %811 = lshr i32 %810, 8
  %812 = trunc i32 %811 to i8
  br label %813

813:                                              ; preds = %784, %166
  %814 = phi i8 [ %812, %784 ], [ %170, %166 ]
  %815 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 0, i64 1
  store i8 %814, i8* %815, align 1
  %816 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 1, i64 0
  %817 = load i8, i8* %816, align 1
  %818 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 1, i64 0, i64 0
  %819 = load i32, i32* %818, align 4
  %820 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 1, i64 0, i64 1
  %821 = load i32, i32* %820, align 4
  %822 = add i32 %821, %819
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %853, label %824

824:                                              ; preds = %813
  %825 = icmp ult i32 %822, 20
  %826 = select i1 %825, i32 %822, i32 20
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %827
  %829 = load i32, i32* %828, align 4
  %830 = zext i32 %819 to i64
  %831 = shl nuw nsw i64 %830, 8
  %832 = lshr i32 %822, 1
  %833 = zext i32 %832 to i64
  %834 = add nuw nsw i64 %831, %833
  %835 = zext i32 %822 to i64
  %836 = udiv i64 %834, %835
  %837 = trunc i64 %836 to i32
  %838 = sub nsw i32 255, %837
  %839 = lshr i32 %838, 23
  %840 = or i32 %839, %837
  %841 = icmp eq i32 %837, 0
  %842 = zext i1 %841 to i32
  %843 = zext i8 %817 to i32
  %844 = and i32 %840, 255
  %845 = or i32 %844, %842
  %846 = sub nsw i32 256, %829
  %847 = mul nsw i32 %846, %843
  %848 = mul nsw i32 %845, %829
  %849 = add i32 %847, 128
  %850 = add i32 %849, %848
  %851 = lshr i32 %850, 8
  %852 = trunc i32 %851 to i8
  br label %853

853:                                              ; preds = %824, %813
  %854 = phi i8 [ %852, %824 ], [ %817, %813 ]
  %855 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 1, i64 0
  store i8 %854, i8* %855, align 1
  %856 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 1, i64 1
  %857 = load i8, i8* %856, align 1
  %858 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 1, i64 1, i64 0
  %859 = load i32, i32* %858, align 4
  %860 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 1, i64 1, i64 1
  %861 = load i32, i32* %860, align 4
  %862 = add i32 %861, %859
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %893, label %864

864:                                              ; preds = %853
  %865 = icmp ult i32 %862, 20
  %866 = select i1 %865, i32 %862, i32 20
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %867
  %869 = load i32, i32* %868, align 4
  %870 = zext i32 %859 to i64
  %871 = shl nuw nsw i64 %870, 8
  %872 = lshr i32 %862, 1
  %873 = zext i32 %872 to i64
  %874 = add nuw nsw i64 %871, %873
  %875 = zext i32 %862 to i64
  %876 = udiv i64 %874, %875
  %877 = trunc i64 %876 to i32
  %878 = sub nsw i32 255, %877
  %879 = lshr i32 %878, 23
  %880 = or i32 %879, %877
  %881 = icmp eq i32 %877, 0
  %882 = zext i1 %881 to i32
  %883 = zext i8 %857 to i32
  %884 = and i32 %880, 255
  %885 = or i32 %884, %882
  %886 = sub nsw i32 256, %869
  %887 = mul nsw i32 %886, %883
  %888 = mul nsw i32 %885, %869
  %889 = add i32 %887, 128
  %890 = add i32 %889, %888
  %891 = lshr i32 %890, 8
  %892 = trunc i32 %891 to i8
  br label %893

893:                                              ; preds = %864, %853
  %894 = phi i8 [ %892, %864 ], [ %857, %853 ]
  %895 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 1, i64 1
  store i8 %894, i8* %895, align 1
  %896 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 2, i64 0
  %897 = load i8, i8* %896, align 1
  %898 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 2, i64 0, i64 0
  %899 = load i32, i32* %898, align 4
  %900 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 2, i64 0, i64 1
  %901 = load i32, i32* %900, align 4
  %902 = add i32 %901, %899
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %933, label %904

904:                                              ; preds = %893
  %905 = icmp ult i32 %902, 20
  %906 = select i1 %905, i32 %902, i32 20
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %907
  %909 = load i32, i32* %908, align 4
  %910 = zext i32 %899 to i64
  %911 = shl nuw nsw i64 %910, 8
  %912 = lshr i32 %902, 1
  %913 = zext i32 %912 to i64
  %914 = add nuw nsw i64 %911, %913
  %915 = zext i32 %902 to i64
  %916 = udiv i64 %914, %915
  %917 = trunc i64 %916 to i32
  %918 = sub nsw i32 255, %917
  %919 = lshr i32 %918, 23
  %920 = or i32 %919, %917
  %921 = icmp eq i32 %917, 0
  %922 = zext i1 %921 to i32
  %923 = zext i8 %897 to i32
  %924 = and i32 %920, 255
  %925 = or i32 %924, %922
  %926 = sub nsw i32 256, %909
  %927 = mul nsw i32 %926, %923
  %928 = mul nsw i32 %925, %909
  %929 = add i32 %927, 128
  %930 = add i32 %929, %928
  %931 = lshr i32 %930, 8
  %932 = trunc i32 %931 to i8
  br label %933

933:                                              ; preds = %904, %893
  %934 = phi i8 [ %932, %904 ], [ %897, %893 ]
  %935 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 2, i64 0
  store i8 %934, i8* %935, align 1
  %936 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 2, i64 1
  %937 = load i8, i8* %936, align 1
  %938 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 2, i64 1, i64 0
  %939 = load i32, i32* %938, align 4
  %940 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 2, i64 1, i64 1
  %941 = load i32, i32* %940, align 4
  %942 = add i32 %941, %939
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %973, label %944

944:                                              ; preds = %933
  %945 = icmp ult i32 %942, 20
  %946 = select i1 %945, i32 %942, i32 20
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %947
  %949 = load i32, i32* %948, align 4
  %950 = zext i32 %939 to i64
  %951 = shl nuw nsw i64 %950, 8
  %952 = lshr i32 %942, 1
  %953 = zext i32 %952 to i64
  %954 = add nuw nsw i64 %951, %953
  %955 = zext i32 %942 to i64
  %956 = udiv i64 %954, %955
  %957 = trunc i64 %956 to i32
  %958 = sub nsw i32 255, %957
  %959 = lshr i32 %958, 23
  %960 = or i32 %959, %957
  %961 = icmp eq i32 %957, 0
  %962 = zext i1 %961 to i32
  %963 = zext i8 %937 to i32
  %964 = and i32 %960, 255
  %965 = or i32 %964, %962
  %966 = sub nsw i32 256, %949
  %967 = mul nsw i32 %966, %963
  %968 = mul nsw i32 %965, %949
  %969 = add i32 %967, 128
  %970 = add i32 %969, %968
  %971 = lshr i32 %970, 8
  %972 = trunc i32 %971 to i8
  br label %973

973:                                              ; preds = %944, %933
  %974 = phi i8 [ %972, %944 ], [ %937, %933 ]
  %975 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 2, i64 1
  store i8 %974, i8* %975, align 1
  %976 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 3, i64 0
  %977 = load i8, i8* %976, align 1
  %978 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 3, i64 0, i64 0
  %979 = load i32, i32* %978, align 4
  %980 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 3, i64 0, i64 1
  %981 = load i32, i32* %980, align 4
  %982 = add i32 %981, %979
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %1013, label %984

984:                                              ; preds = %973
  %985 = icmp ult i32 %982, 20
  %986 = select i1 %985, i32 %982, i32 20
  %987 = zext i32 %986 to i64
  %988 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %987
  %989 = load i32, i32* %988, align 4
  %990 = zext i32 %979 to i64
  %991 = shl nuw nsw i64 %990, 8
  %992 = lshr i32 %982, 1
  %993 = zext i32 %992 to i64
  %994 = add nuw nsw i64 %991, %993
  %995 = zext i32 %982 to i64
  %996 = udiv i64 %994, %995
  %997 = trunc i64 %996 to i32
  %998 = sub nsw i32 255, %997
  %999 = lshr i32 %998, 23
  %1000 = or i32 %999, %997
  %1001 = icmp eq i32 %997, 0
  %1002 = zext i1 %1001 to i32
  %1003 = zext i8 %977 to i32
  %1004 = and i32 %1000, 255
  %1005 = or i32 %1004, %1002
  %1006 = sub nsw i32 256, %989
  %1007 = mul nsw i32 %1006, %1003
  %1008 = mul nsw i32 %1005, %989
  %1009 = add i32 %1007, 128
  %1010 = add i32 %1009, %1008
  %1011 = lshr i32 %1010, 8
  %1012 = trunc i32 %1011 to i8
  br label %1013

1013:                                             ; preds = %984, %973
  %1014 = phi i8 [ %1012, %984 ], [ %977, %973 ]
  %1015 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 3, i64 0
  store i8 %1014, i8* %1015, align 1
  %1016 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 3, i64 1
  %1017 = load i8, i8* %1016, align 1
  %1018 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 3, i64 1, i64 0
  %1019 = load i32, i32* %1018, align 4
  %1020 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 3, i64 1, i64 1
  %1021 = load i32, i32* %1020, align 4
  %1022 = add i32 %1021, %1019
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1053, label %1024

1024:                                             ; preds = %1013
  %1025 = icmp ult i32 %1022, 20
  %1026 = select i1 %1025, i32 %1022, i32 20
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1027
  %1029 = load i32, i32* %1028, align 4
  %1030 = zext i32 %1019 to i64
  %1031 = shl nuw nsw i64 %1030, 8
  %1032 = lshr i32 %1022, 1
  %1033 = zext i32 %1032 to i64
  %1034 = add nuw nsw i64 %1031, %1033
  %1035 = zext i32 %1022 to i64
  %1036 = udiv i64 %1034, %1035
  %1037 = trunc i64 %1036 to i32
  %1038 = sub nsw i32 255, %1037
  %1039 = lshr i32 %1038, 23
  %1040 = or i32 %1039, %1037
  %1041 = icmp eq i32 %1037, 0
  %1042 = zext i1 %1041 to i32
  %1043 = zext i8 %1017 to i32
  %1044 = and i32 %1040, 255
  %1045 = or i32 %1044, %1042
  %1046 = sub nsw i32 256, %1029
  %1047 = mul nsw i32 %1046, %1043
  %1048 = mul nsw i32 %1045, %1029
  %1049 = add i32 %1047, 128
  %1050 = add i32 %1049, %1048
  %1051 = lshr i32 %1050, 8
  %1052 = trunc i32 %1051 to i8
  br label %1053

1053:                                             ; preds = %1024, %1013
  %1054 = phi i8 [ %1052, %1024 ], [ %1017, %1013 ]
  %1055 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 3, i64 1
  store i8 %1054, i8* %1055, align 1
  %1056 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 4, i64 0
  %1057 = load i8, i8* %1056, align 1
  %1058 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 4, i64 0, i64 0
  %1059 = load i32, i32* %1058, align 4
  %1060 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 4, i64 0, i64 1
  %1061 = load i32, i32* %1060, align 4
  %1062 = add i32 %1061, %1059
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1093, label %1064

1064:                                             ; preds = %1053
  %1065 = icmp ult i32 %1062, 20
  %1066 = select i1 %1065, i32 %1062, i32 20
  %1067 = zext i32 %1066 to i64
  %1068 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1067
  %1069 = load i32, i32* %1068, align 4
  %1070 = zext i32 %1059 to i64
  %1071 = shl nuw nsw i64 %1070, 8
  %1072 = lshr i32 %1062, 1
  %1073 = zext i32 %1072 to i64
  %1074 = add nuw nsw i64 %1071, %1073
  %1075 = zext i32 %1062 to i64
  %1076 = udiv i64 %1074, %1075
  %1077 = trunc i64 %1076 to i32
  %1078 = sub nsw i32 255, %1077
  %1079 = lshr i32 %1078, 23
  %1080 = or i32 %1079, %1077
  %1081 = icmp eq i32 %1077, 0
  %1082 = zext i1 %1081 to i32
  %1083 = zext i8 %1057 to i32
  %1084 = and i32 %1080, 255
  %1085 = or i32 %1084, %1082
  %1086 = sub nsw i32 256, %1069
  %1087 = mul nsw i32 %1086, %1083
  %1088 = mul nsw i32 %1085, %1069
  %1089 = add i32 %1087, 128
  %1090 = add i32 %1089, %1088
  %1091 = lshr i32 %1090, 8
  %1092 = trunc i32 %1091 to i8
  br label %1093

1093:                                             ; preds = %1064, %1053
  %1094 = phi i8 [ %1092, %1064 ], [ %1057, %1053 ]
  %1095 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 4, i64 0
  store i8 %1094, i8* %1095, align 1
  %1096 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 4, i64 1
  %1097 = load i8, i8* %1096, align 1
  %1098 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 4, i64 1, i64 0
  %1099 = load i32, i32* %1098, align 4
  %1100 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 4, i64 1, i64 1
  %1101 = load i32, i32* %1100, align 4
  %1102 = add i32 %1101, %1099
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1133, label %1104

1104:                                             ; preds = %1093
  %1105 = icmp ult i32 %1102, 20
  %1106 = select i1 %1105, i32 %1102, i32 20
  %1107 = zext i32 %1106 to i64
  %1108 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1107
  %1109 = load i32, i32* %1108, align 4
  %1110 = zext i32 %1099 to i64
  %1111 = shl nuw nsw i64 %1110, 8
  %1112 = lshr i32 %1102, 1
  %1113 = zext i32 %1112 to i64
  %1114 = add nuw nsw i64 %1111, %1113
  %1115 = zext i32 %1102 to i64
  %1116 = udiv i64 %1114, %1115
  %1117 = trunc i64 %1116 to i32
  %1118 = sub nsw i32 255, %1117
  %1119 = lshr i32 %1118, 23
  %1120 = or i32 %1119, %1117
  %1121 = icmp eq i32 %1117, 0
  %1122 = zext i1 %1121 to i32
  %1123 = zext i8 %1097 to i32
  %1124 = and i32 %1120, 255
  %1125 = or i32 %1124, %1122
  %1126 = sub nsw i32 256, %1109
  %1127 = mul nsw i32 %1126, %1123
  %1128 = mul nsw i32 %1125, %1109
  %1129 = add i32 %1127, 128
  %1130 = add i32 %1129, %1128
  %1131 = lshr i32 %1130, 8
  %1132 = trunc i32 %1131 to i8
  br label %1133

1133:                                             ; preds = %1104, %1093
  %1134 = phi i8 [ %1132, %1104 ], [ %1097, %1093 ]
  %1135 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 8, i64 4, i64 1
  store i8 %1134, i8* %1135, align 1
  %1136 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 0, i64 0
  %1137 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 0, i64 0
  %1138 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 0, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1136, i32* %1137, i8* %1138) #4
  %1139 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 1, i64 0
  %1140 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 1, i64 0
  %1141 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 1, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1139, i32* %1140, i8* %1141) #4
  %1142 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 2, i64 0
  %1143 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 2, i64 0
  %1144 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 2, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1142, i32* %1143, i8* %1144) #4
  %1145 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 3, i64 0
  %1146 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 3, i64 0
  %1147 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 3, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1145, i32* %1146, i8* %1147) #4
  %1148 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 4, i64 0
  %1149 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 4, i64 0
  %1150 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 4, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1148, i32* %1149, i8* %1150) #4
  %1151 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 5, i64 0
  %1152 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 5, i64 0
  %1153 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 5, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1151, i32* %1152, i8* %1153) #4
  %1154 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 5, i64 6, i64 0
  %1155 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 6, i64 6, i64 0
  %1156 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 5, i64 6, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_inter_mode_tree, i64 0, i64 0), i8* %1154, i32* %1155, i8* %1156) #4
  %1157 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 0, i64 0, i64 0
  %1158 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 0, i64 0, i64 0
  %1159 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 0, i64 0, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1157, i32* %1158, i8* %1159) #4
  %1160 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 0, i64 1, i64 0
  %1161 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 0, i64 1, i64 0
  %1162 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 0, i64 1, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1160, i32* %1161, i8* %1162) #4
  %1163 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 0, i64 2, i64 0
  %1164 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 0, i64 2, i64 0
  %1165 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 0, i64 2, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1163, i32* %1164, i8* %1165) #4
  %1166 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 0, i64 3, i64 0
  %1167 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 0, i64 3, i64 0
  %1168 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 0, i64 3, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1166, i32* %1167, i8* %1168) #4
  %1169 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 0, i64 0
  %1170 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 0, i64 0
  %1171 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 0, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1169, i32* %1170, i8* %1171) #4
  %1172 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 1, i64 0
  %1173 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 1, i64 0
  %1174 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 1, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1172, i32* %1173, i8* %1174) #4
  %1175 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 2, i64 0
  %1176 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 2, i64 0
  %1177 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 2, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1175, i32* %1176, i8* %1177) #4
  %1178 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 3, i64 0
  %1179 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 3, i64 0
  %1180 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 3, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1178, i32* %1179, i8* %1180) #4
  %1181 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 4, i64 0
  %1182 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 4, i64 0
  %1183 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 4, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1181, i32* %1182, i8* %1183) #4
  %1184 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 5, i64 0
  %1185 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 5, i64 0
  %1186 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 5, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1184, i32* %1185, i8* %1186) #4
  %1187 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 6, i64 0
  %1188 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 6, i64 0
  %1189 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 6, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1187, i32* %1188, i8* %1189) #4
  %1190 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 7, i64 0
  %1191 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 7, i64 0
  %1192 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 7, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1190, i32* %1191, i8* %1192) #4
  %1193 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 8, i64 0
  %1194 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 8, i64 0
  %1195 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 8, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1193, i32* %1194, i8* %1195) #4
  %1196 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 1, i64 9, i64 0
  %1197 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 1, i64 9, i64 0
  %1198 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 1, i64 9, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @vp9_intra_mode_tree, i64 0, i64 0), i8* %1196, i32* %1197, i8* %1198) #4
  %1199 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 0, i64 0
  %1200 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 0, i64 0
  %1201 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 0, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1199, i32* %1200, i8* %1201) #4
  %1202 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 1, i64 0
  %1203 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 1, i64 0
  %1204 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 1, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1202, i32* %1203, i8* %1204) #4
  %1205 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 2, i64 0
  %1206 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 2, i64 0
  %1207 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 2, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1205, i32* %1206, i8* %1207) #4
  %1208 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 3, i64 0
  %1209 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 3, i64 0
  %1210 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 3, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1208, i32* %1209, i8* %1210) #4
  %1211 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 4, i64 0
  %1212 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 4, i64 0
  %1213 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 4, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1211, i32* %1212, i8* %1213) #4
  %1214 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 5, i64 0
  %1215 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 5, i64 0
  %1216 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 5, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1214, i32* %1215, i8* %1216) #4
  %1217 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 6, i64 0
  %1218 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 6, i64 0
  %1219 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 6, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1217, i32* %1218, i8* %1219) #4
  %1220 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 7, i64 0
  %1221 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 7, i64 0
  %1222 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 7, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1220, i32* %1221, i8* %1222) #4
  %1223 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 8, i64 0
  %1224 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 8, i64 0
  %1225 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 8, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1223, i32* %1224, i8* %1225) #4
  %1226 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 9, i64 0
  %1227 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 9, i64 0
  %1228 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 9, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1226, i32* %1227, i8* %1228) #4
  %1229 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 10, i64 0
  %1230 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 10, i64 0
  %1231 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 10, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1229, i32* %1230, i8* %1231) #4
  %1232 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 11, i64 0
  %1233 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 11, i64 0
  %1234 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 11, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1232, i32* %1233, i8* %1234) #4
  %1235 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 12, i64 0
  %1236 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 12, i64 0
  %1237 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 12, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1235, i32* %1236, i8* %1237) #4
  %1238 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 13, i64 0
  %1239 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 13, i64 0
  %1240 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 13, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1238, i32* %1239, i8* %1240) #4
  %1241 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 14, i64 0
  %1242 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 14, i64 0
  %1243 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 14, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1241, i32* %1242, i8* %1243) #4
  %1244 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 2, i64 15, i64 0
  %1245 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 2, i64 15, i64 0
  %1246 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 2, i64 15, i64 0
  tail call void @vpx_tree_merge_probs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vp9_partition_tree, i64 0, i64 0), i8* %1244, i32* %1245, i8* %1246) #4
  %1247 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 63
  %1248 = load i8, i8* %1247, align 4
  %1249 = icmp eq i8 %1248, 4
  br i1 %1249, label %177, label %190

1250:                                             ; preds = %126
  %1251 = icmp ult i32 %135, 20
  %1252 = select i1 %1251, i32 %135, i32 20
  %1253 = zext i32 %1252 to i64
  %1254 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1253
  %1255 = load i32, i32* %1254, align 4
  %1256 = zext i32 %132 to i64
  %1257 = shl nuw nsw i64 %1256, 8
  %1258 = lshr i32 %135, 1
  %1259 = zext i32 %1258 to i64
  %1260 = add nuw nsw i64 %1257, %1259
  %1261 = zext i32 %135 to i64
  %1262 = udiv i64 %1260, %1261
  %1263 = trunc i64 %1262 to i32
  %1264 = sub nsw i32 255, %1263
  %1265 = lshr i32 %1264, 23
  %1266 = or i32 %1265, %1263
  %1267 = icmp eq i32 %1263, 0
  %1268 = zext i1 %1267 to i32
  %1269 = zext i8 %130 to i32
  %1270 = and i32 %1266, 255
  %1271 = or i32 %1270, %1268
  %1272 = sub nsw i32 256, %1255
  %1273 = mul nsw i32 %1272, %1269
  %1274 = mul nsw i32 %1271, %1255
  %1275 = add i32 %1273, 128
  %1276 = add i32 %1275, %1274
  %1277 = lshr i32 %1276, 8
  %1278 = trunc i32 %1277 to i8
  br label %1279

1279:                                             ; preds = %1250, %126
  %1280 = phi i8 [ %1278, %1250 ], [ %130, %126 ]
  %1281 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 9, i64 1
  store i8 %1280, i8* %1281, align 1
  %1282 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 9, i64 2
  %1283 = load i8, i8* %1282, align 1
  %1284 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 2, i64 0
  %1285 = load i32, i32* %1284, align 4
  %1286 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 2, i64 1
  %1287 = load i32, i32* %1286, align 4
  %1288 = add i32 %1287, %1285
  %1289 = icmp eq i32 %1288, 0
  br i1 %1289, label %1319, label %1290

1290:                                             ; preds = %1279
  %1291 = icmp ult i32 %1288, 20
  %1292 = select i1 %1291, i32 %1288, i32 20
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1293
  %1295 = load i32, i32* %1294, align 4
  %1296 = zext i32 %1285 to i64
  %1297 = shl nuw nsw i64 %1296, 8
  %1298 = lshr i32 %1288, 1
  %1299 = zext i32 %1298 to i64
  %1300 = add nuw nsw i64 %1297, %1299
  %1301 = zext i32 %1288 to i64
  %1302 = udiv i64 %1300, %1301
  %1303 = trunc i64 %1302 to i32
  %1304 = sub nsw i32 255, %1303
  %1305 = lshr i32 %1304, 23
  %1306 = or i32 %1305, %1303
  %1307 = icmp eq i32 %1303, 0
  %1308 = zext i1 %1307 to i32
  %1309 = zext i8 %1283 to i32
  %1310 = and i32 %1306, 255
  %1311 = or i32 %1310, %1308
  %1312 = sub nsw i32 256, %1295
  %1313 = mul nsw i32 %1312, %1309
  %1314 = mul nsw i32 %1311, %1295
  %1315 = add i32 %1313, 128
  %1316 = add i32 %1315, %1314
  %1317 = lshr i32 %1316, 8
  %1318 = trunc i32 %1317 to i8
  br label %1319

1319:                                             ; preds = %1290, %1279
  %1320 = phi i8 [ %1318, %1290 ], [ %1283, %1279 ]
  %1321 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 9, i64 2
  store i8 %1320, i8* %1321, align 1
  %1322 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 9, i64 3
  %1323 = load i8, i8* %1322, align 1
  %1324 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 3, i64 0
  %1325 = load i32, i32* %1324, align 4
  %1326 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 3, i64 1
  %1327 = load i32, i32* %1326, align 4
  %1328 = add i32 %1327, %1325
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1359, label %1330

1330:                                             ; preds = %1319
  %1331 = icmp ult i32 %1328, 20
  %1332 = select i1 %1331, i32 %1328, i32 20
  %1333 = zext i32 %1332 to i64
  %1334 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1333
  %1335 = load i32, i32* %1334, align 4
  %1336 = zext i32 %1325 to i64
  %1337 = shl nuw nsw i64 %1336, 8
  %1338 = lshr i32 %1328, 1
  %1339 = zext i32 %1338 to i64
  %1340 = add nuw nsw i64 %1337, %1339
  %1341 = zext i32 %1328 to i64
  %1342 = udiv i64 %1340, %1341
  %1343 = trunc i64 %1342 to i32
  %1344 = sub nsw i32 255, %1343
  %1345 = lshr i32 %1344, 23
  %1346 = or i32 %1345, %1343
  %1347 = icmp eq i32 %1343, 0
  %1348 = zext i1 %1347 to i32
  %1349 = zext i8 %1323 to i32
  %1350 = and i32 %1346, 255
  %1351 = or i32 %1350, %1348
  %1352 = sub nsw i32 256, %1335
  %1353 = mul nsw i32 %1352, %1349
  %1354 = mul nsw i32 %1351, %1335
  %1355 = add i32 %1353, 128
  %1356 = add i32 %1355, %1354
  %1357 = lshr i32 %1356, 8
  %1358 = trunc i32 %1357 to i8
  br label %1359

1359:                                             ; preds = %1330, %1319
  %1360 = phi i8 [ %1358, %1330 ], [ %1323, %1319 ]
  %1361 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 9, i64 3
  store i8 %1360, i8* %1361, align 1
  %1362 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 9, i64 4
  %1363 = load i8, i8* %1362, align 1
  %1364 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 4, i64 0
  %1365 = load i32, i32* %1364, align 4
  %1366 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 4, i64 1
  %1367 = load i32, i32* %1366, align 4
  %1368 = add i32 %1367, %1365
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1399, label %1370

1370:                                             ; preds = %1359
  %1371 = icmp ult i32 %1368, 20
  %1372 = select i1 %1371, i32 %1368, i32 20
  %1373 = zext i32 %1372 to i64
  %1374 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1373
  %1375 = load i32, i32* %1374, align 4
  %1376 = zext i32 %1365 to i64
  %1377 = shl nuw nsw i64 %1376, 8
  %1378 = lshr i32 %1368, 1
  %1379 = zext i32 %1378 to i64
  %1380 = add nuw nsw i64 %1377, %1379
  %1381 = zext i32 %1368 to i64
  %1382 = udiv i64 %1380, %1381
  %1383 = trunc i64 %1382 to i32
  %1384 = sub nsw i32 255, %1383
  %1385 = lshr i32 %1384, 23
  %1386 = or i32 %1385, %1383
  %1387 = icmp eq i32 %1383, 0
  %1388 = zext i1 %1387 to i32
  %1389 = zext i8 %1363 to i32
  %1390 = and i32 %1386, 255
  %1391 = or i32 %1390, %1388
  %1392 = sub nsw i32 256, %1375
  %1393 = mul nsw i32 %1392, %1389
  %1394 = mul nsw i32 %1391, %1375
  %1395 = add i32 %1393, 128
  %1396 = add i32 %1395, %1394
  %1397 = lshr i32 %1396, 8
  %1398 = trunc i32 %1397 to i8
  br label %1399

1399:                                             ; preds = %1370, %1359
  %1400 = phi i8 [ %1398, %1370 ], [ %1363, %1359 ]
  %1401 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 9, i64 4
  store i8 %1400, i8* %1401, align 1
  %1402 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 8, i64 0, i64 0
  %1403 = load i8, i8* %1402, align 1
  %1404 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 0, i64 0, i64 0
  %1405 = load i32, i32* %1404, align 4
  %1406 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 9, i64 0, i64 0, i64 1
  %1407 = load i32, i32* %1406, align 4
  %1408 = add i32 %1407, %1405
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %166, label %137

1410:                                             ; preds = %86
  %1411 = icmp ult i32 %95, 20
  %1412 = select i1 %1411, i32 %95, i32 20
  %1413 = zext i32 %1412 to i64
  %1414 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1413
  %1415 = load i32, i32* %1414, align 4
  %1416 = zext i32 %92 to i64
  %1417 = shl nuw nsw i64 %1416, 8
  %1418 = lshr i32 %95, 1
  %1419 = zext i32 %1418 to i64
  %1420 = add nuw nsw i64 %1417, %1419
  %1421 = zext i32 %95 to i64
  %1422 = udiv i64 %1420, %1421
  %1423 = trunc i64 %1422 to i32
  %1424 = sub nsw i32 255, %1423
  %1425 = lshr i32 %1424, 23
  %1426 = or i32 %1425, %1423
  %1427 = icmp eq i32 %1423, 0
  %1428 = zext i1 %1427 to i32
  %1429 = zext i8 %90 to i32
  %1430 = and i32 %1426, 255
  %1431 = or i32 %1430, %1428
  %1432 = sub nsw i32 256, %1415
  %1433 = mul nsw i32 %1432, %1429
  %1434 = mul nsw i32 %1431, %1415
  %1435 = add i32 %1433, 128
  %1436 = add i32 %1435, %1434
  %1437 = lshr i32 %1436, 8
  %1438 = trunc i32 %1437 to i8
  br label %1439

1439:                                             ; preds = %1410, %86
  %1440 = phi i8 [ %1438, %1410 ], [ %90, %86 ]
  %1441 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 7, i64 1
  store i8 %1440, i8* %1441, align 1
  %1442 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 7, i64 2
  %1443 = load i8, i8* %1442, align 1
  %1444 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 2, i64 0
  %1445 = load i32, i32* %1444, align 4
  %1446 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 2, i64 1
  %1447 = load i32, i32* %1446, align 4
  %1448 = add i32 %1447, %1445
  %1449 = icmp eq i32 %1448, 0
  br i1 %1449, label %1479, label %1450

1450:                                             ; preds = %1439
  %1451 = icmp ult i32 %1448, 20
  %1452 = select i1 %1451, i32 %1448, i32 20
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = zext i32 %1445 to i64
  %1457 = shl nuw nsw i64 %1456, 8
  %1458 = lshr i32 %1448, 1
  %1459 = zext i32 %1458 to i64
  %1460 = add nuw nsw i64 %1457, %1459
  %1461 = zext i32 %1448 to i64
  %1462 = udiv i64 %1460, %1461
  %1463 = trunc i64 %1462 to i32
  %1464 = sub nsw i32 255, %1463
  %1465 = lshr i32 %1464, 23
  %1466 = or i32 %1465, %1463
  %1467 = icmp eq i32 %1463, 0
  %1468 = zext i1 %1467 to i32
  %1469 = zext i8 %1443 to i32
  %1470 = and i32 %1466, 255
  %1471 = or i32 %1470, %1468
  %1472 = sub nsw i32 256, %1455
  %1473 = mul nsw i32 %1472, %1469
  %1474 = mul nsw i32 %1471, %1455
  %1475 = add i32 %1473, 128
  %1476 = add i32 %1475, %1474
  %1477 = lshr i32 %1476, 8
  %1478 = trunc i32 %1477 to i8
  br label %1479

1479:                                             ; preds = %1450, %1439
  %1480 = phi i8 [ %1478, %1450 ], [ %1443, %1439 ]
  %1481 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 7, i64 2
  store i8 %1480, i8* %1481, align 1
  %1482 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 7, i64 3
  %1483 = load i8, i8* %1482, align 1
  %1484 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 3, i64 0
  %1485 = load i32, i32* %1484, align 4
  %1486 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 3, i64 1
  %1487 = load i32, i32* %1486, align 4
  %1488 = add i32 %1487, %1485
  %1489 = icmp eq i32 %1488, 0
  br i1 %1489, label %1519, label %1490

1490:                                             ; preds = %1479
  %1491 = icmp ult i32 %1488, 20
  %1492 = select i1 %1491, i32 %1488, i32 20
  %1493 = zext i32 %1492 to i64
  %1494 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1493
  %1495 = load i32, i32* %1494, align 4
  %1496 = zext i32 %1485 to i64
  %1497 = shl nuw nsw i64 %1496, 8
  %1498 = lshr i32 %1488, 1
  %1499 = zext i32 %1498 to i64
  %1500 = add nuw nsw i64 %1497, %1499
  %1501 = zext i32 %1488 to i64
  %1502 = udiv i64 %1500, %1501
  %1503 = trunc i64 %1502 to i32
  %1504 = sub nsw i32 255, %1503
  %1505 = lshr i32 %1504, 23
  %1506 = or i32 %1505, %1503
  %1507 = icmp eq i32 %1503, 0
  %1508 = zext i1 %1507 to i32
  %1509 = zext i8 %1483 to i32
  %1510 = and i32 %1506, 255
  %1511 = or i32 %1510, %1508
  %1512 = sub nsw i32 256, %1495
  %1513 = mul nsw i32 %1512, %1509
  %1514 = mul nsw i32 %1511, %1495
  %1515 = add i32 %1513, 128
  %1516 = add i32 %1515, %1514
  %1517 = lshr i32 %1516, 8
  %1518 = trunc i32 %1517 to i8
  br label %1519

1519:                                             ; preds = %1490, %1479
  %1520 = phi i8 [ %1518, %1490 ], [ %1483, %1479 ]
  %1521 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 7, i64 3
  store i8 %1520, i8* %1521, align 1
  %1522 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 7, i64 4
  %1523 = load i8, i8* %1522, align 1
  %1524 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 4, i64 0
  %1525 = load i32, i32* %1524, align 4
  %1526 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 4, i64 1
  %1527 = load i32, i32* %1526, align 4
  %1528 = add i32 %1527, %1525
  %1529 = icmp eq i32 %1528, 0
  br i1 %1529, label %1559, label %1530

1530:                                             ; preds = %1519
  %1531 = icmp ult i32 %1528, 20
  %1532 = select i1 %1531, i32 %1528, i32 20
  %1533 = zext i32 %1532 to i64
  %1534 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1533
  %1535 = load i32, i32* %1534, align 4
  %1536 = zext i32 %1525 to i64
  %1537 = shl nuw nsw i64 %1536, 8
  %1538 = lshr i32 %1528, 1
  %1539 = zext i32 %1538 to i64
  %1540 = add nuw nsw i64 %1537, %1539
  %1541 = zext i32 %1528 to i64
  %1542 = udiv i64 %1540, %1541
  %1543 = trunc i64 %1542 to i32
  %1544 = sub nsw i32 255, %1543
  %1545 = lshr i32 %1544, 23
  %1546 = or i32 %1545, %1543
  %1547 = icmp eq i32 %1543, 0
  %1548 = zext i1 %1547 to i32
  %1549 = zext i8 %1523 to i32
  %1550 = and i32 %1546, 255
  %1551 = or i32 %1550, %1548
  %1552 = sub nsw i32 256, %1535
  %1553 = mul nsw i32 %1552, %1549
  %1554 = mul nsw i32 %1551, %1535
  %1555 = add i32 %1553, 128
  %1556 = add i32 %1555, %1554
  %1557 = lshr i32 %1556, 8
  %1558 = trunc i32 %1557 to i8
  br label %1559

1559:                                             ; preds = %1530, %1519
  %1560 = phi i8 [ %1558, %1530 ], [ %1523, %1519 ]
  %1561 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 7, i64 4
  store i8 %1560, i8* %1561, align 1
  %1562 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 9, i64 0
  %1563 = load i8, i8* %1562, align 1
  %1564 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 0, i64 0
  %1565 = load i32, i32* %1564, align 4
  %1566 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 10, i64 0, i64 1
  %1567 = load i32, i32* %1566, align 4
  %1568 = add i32 %1567, %1565
  %1569 = icmp eq i32 %1568, 0
  br i1 %1569, label %126, label %97

1570:                                             ; preds = %46
  %1571 = icmp ult i32 %55, 20
  %1572 = select i1 %1571, i32 %55, i32 20
  %1573 = zext i32 %1572 to i64
  %1574 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1573
  %1575 = load i32, i32* %1574, align 4
  %1576 = zext i32 %52 to i64
  %1577 = shl nuw nsw i64 %1576, 8
  %1578 = lshr i32 %55, 1
  %1579 = zext i32 %1578 to i64
  %1580 = add nuw nsw i64 %1577, %1579
  %1581 = zext i32 %55 to i64
  %1582 = udiv i64 %1580, %1581
  %1583 = trunc i64 %1582 to i32
  %1584 = sub nsw i32 255, %1583
  %1585 = lshr i32 %1584, 23
  %1586 = or i32 %1585, %1583
  %1587 = icmp eq i32 %1583, 0
  %1588 = zext i1 %1587 to i32
  %1589 = zext i8 %50 to i32
  %1590 = and i32 %1586, 255
  %1591 = or i32 %1590, %1588
  %1592 = sub nsw i32 256, %1575
  %1593 = mul nsw i32 %1592, %1589
  %1594 = mul nsw i32 %1591, %1575
  %1595 = add i32 %1593, 128
  %1596 = add i32 %1595, %1594
  %1597 = lshr i32 %1596, 8
  %1598 = trunc i32 %1597 to i8
  br label %1599

1599:                                             ; preds = %1570, %46
  %1600 = phi i8 [ %1598, %1570 ], [ %50, %46 ]
  %1601 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 6, i64 1
  store i8 %1600, i8* %1601, align 1
  %1602 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 6, i64 2
  %1603 = load i8, i8* %1602, align 1
  %1604 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 2, i64 0
  %1605 = load i32, i32* %1604, align 4
  %1606 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 2, i64 1
  %1607 = load i32, i32* %1606, align 4
  %1608 = add i32 %1607, %1605
  %1609 = icmp eq i32 %1608, 0
  br i1 %1609, label %1639, label %1610

1610:                                             ; preds = %1599
  %1611 = icmp ult i32 %1608, 20
  %1612 = select i1 %1611, i32 %1608, i32 20
  %1613 = zext i32 %1612 to i64
  %1614 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1613
  %1615 = load i32, i32* %1614, align 4
  %1616 = zext i32 %1605 to i64
  %1617 = shl nuw nsw i64 %1616, 8
  %1618 = lshr i32 %1608, 1
  %1619 = zext i32 %1618 to i64
  %1620 = add nuw nsw i64 %1617, %1619
  %1621 = zext i32 %1608 to i64
  %1622 = udiv i64 %1620, %1621
  %1623 = trunc i64 %1622 to i32
  %1624 = sub nsw i32 255, %1623
  %1625 = lshr i32 %1624, 23
  %1626 = or i32 %1625, %1623
  %1627 = icmp eq i32 %1623, 0
  %1628 = zext i1 %1627 to i32
  %1629 = zext i8 %1603 to i32
  %1630 = and i32 %1626, 255
  %1631 = or i32 %1630, %1628
  %1632 = sub nsw i32 256, %1615
  %1633 = mul nsw i32 %1632, %1629
  %1634 = mul nsw i32 %1631, %1615
  %1635 = add i32 %1633, 128
  %1636 = add i32 %1635, %1634
  %1637 = lshr i32 %1636, 8
  %1638 = trunc i32 %1637 to i8
  br label %1639

1639:                                             ; preds = %1610, %1599
  %1640 = phi i8 [ %1638, %1610 ], [ %1603, %1599 ]
  %1641 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 6, i64 2
  store i8 %1640, i8* %1641, align 1
  %1642 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 6, i64 3
  %1643 = load i8, i8* %1642, align 1
  %1644 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 3, i64 0
  %1645 = load i32, i32* %1644, align 4
  %1646 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 7, i64 3, i64 1
  %1647 = load i32, i32* %1646, align 4
  %1648 = add i32 %1647, %1645
  %1649 = icmp eq i32 %1648, 0
  br i1 %1649, label %1679, label %1650

1650:                                             ; preds = %1639
  %1651 = icmp ult i32 %1648, 20
  %1652 = select i1 %1651, i32 %1648, i32 20
  %1653 = zext i32 %1652 to i64
  %1654 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %1653
  %1655 = load i32, i32* %1654, align 4
  %1656 = zext i32 %1645 to i64
  %1657 = shl nuw nsw i64 %1656, 8
  %1658 = lshr i32 %1648, 1
  %1659 = zext i32 %1658 to i64
  %1660 = add nuw nsw i64 %1657, %1659
  %1661 = zext i32 %1648 to i64
  %1662 = udiv i64 %1660, %1661
  %1663 = trunc i64 %1662 to i32
  %1664 = sub nsw i32 255, %1663
  %1665 = lshr i32 %1664, 23
  %1666 = or i32 %1665, %1663
  %1667 = icmp eq i32 %1663, 0
  %1668 = zext i1 %1667 to i32
  %1669 = zext i8 %1643 to i32
  %1670 = and i32 %1666, 255
  %1671 = or i32 %1670, %1668
  %1672 = sub nsw i32 256, %1655
  %1673 = mul nsw i32 %1672, %1669
  %1674 = mul nsw i32 %1671, %1655
  %1675 = add i32 %1673, 128
  %1676 = add i32 %1675, %1674
  %1677 = lshr i32 %1676, 8
  %1678 = trunc i32 %1677 to i8
  br label %1679

1679:                                             ; preds = %1650, %1639
  %1680 = phi i8 [ %1678, %1650 ], [ %1643, %1639 ]
  %1681 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %3, i64 0, i32 6, i64 3
  store i8 %1680, i8* %1681, align 1
  %1682 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %5, i64 %8, i32 7, i64 0
  %1683 = load i8, i8* %1682, align 1
  %1684 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 0, i64 0
  %1685 = load i32, i32* %1684, align 4
  %1686 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 76, i32 8, i64 0, i64 1
  %1687 = load i32, i32* %1686, align 4
  %1688 = add i32 %1687, %1685
  %1689 = icmp eq i32 %1688, 0
  br i1 %1689, label %86, label %57
}

declare void @vpx_tree_merge_probs(i8*, i8*, i32*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_setup_past_independence(%struct.VP9Common*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 69
  tail call void @vp9_clearall_segfeatures(%struct.segmentation* %2) #4
  %3 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 69, i32 3
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 60
  %5 = load i8*, i8** %4, align 16
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 33
  %9 = load i32, i32* %8, align 16
  %10 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 35
  %11 = load i32, i32* %10, align 8
  %12 = mul nsw i32 %11, %9
  %13 = sext i32 %12 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 0, i64 %13, i1 false)
  br label %14

14:                                               ; preds = %1, %7
  %15 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 61
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 33
  %20 = load i32, i32* %19, align 16
  %21 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 35
  %22 = load i32, i32* %21, align 8
  %23 = mul nsw i32 %22, %20
  %24 = sext i32 %23 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %16, i8 0, i64 %24, i1 false)
  br label %25

25:                                               ; preds = %14, %18
  %26 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 7, i64 0
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 2
  %28 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 9, i64 0
  %29 = bitcast i8* %28 to i16*
  store i16 0, i16* %29, align 4
  %30 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 4
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 5
  store i8 1, i8* %31, align 1
  %32 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 6, i64 0
  store i8 1, i8* %32, align 2
  %33 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 6, i64 1
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 6, i64 2
  store i8 -1, i8* %34, align 2
  %35 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 6, i64 3
  store i8 -1, i8* %35, align 1
  %36 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 8, i64 0
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 8, i64 1
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 68, i32 3
  store i32 -1, i32* %38, align 4
  tail call void @vp9_default_coef_probs(%struct.VP9Common* %0) #4
  %39 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 73
  %40 = load %struct.frame_contexts*, %struct.frame_contexts** %39, align 8
  %41 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 1, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 16 getelementptr inbounds ([10 x [9 x i8]], [10 x [9 x i8]]* @default_if_uv_probs, i64 0, i64 0, i64 0), i64 90, i1 false) #4
  %42 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 0, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 16 getelementptr inbounds ([4 x [9 x i8]], [4 x [9 x i8]]* @default_if_y_probs, i64 0, i64 0, i64 0), i64 36, i1 false) #4
  %43 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 4, i64 0, i64 0
  %44 = bitcast i8* %43 to i64*
  store i64 -8028507311873678613, i64* %44, align 2
  %45 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 2, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %45, i8* align 16 getelementptr inbounds ([16 x [3 x i8]], [16 x [3 x i8]]* @default_partition_probs, i64 0, i64 0, i64 0), i64 48, i1 false) #4
  %46 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 6, i64 0
  %47 = bitcast i8* %46 to i32*
  store i32 -507812343, i32* %47, align 1
  %48 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 7, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @default_comp_inter_p, i64 0, i64 0), i64 5, i1 false) #4
  %49 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 9, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @default_comp_ref_p, i64 0, i64 0), i64 5, i1 false) #4
  %50 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 8, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 1 getelementptr inbounds ([5 x [2 x i8]], [5 x [2 x i8]]* @default_single_ref_p, i64 0, i64 0, i64 0), i64 10, i1 false) #4
  %51 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 10, i32 0, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 getelementptr inbounds (%struct.tx_probs, %struct.tx_probs* @default_tx_probs, i64 0, i32 0, i64 0, i64 0), i64 12, i1 false) #4
  %52 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 11, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @default_skip_probs, i64 0, i64 0), i64 3, i1 false) #4
  %53 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %40, i64 0, i32 5, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 getelementptr inbounds ([7 x [3 x i8]], [7 x [3 x i8]]* @default_inter_mode_probs, i64 0, i64 0, i64 0), i64 21, i1 false) #4
  tail call void @vp9_init_mv_probs(%struct.VP9Common* %0) #4
  %54 = load %struct.frame_contexts*, %struct.frame_contexts** %39, align 8
  %55 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %54, i64 0, i32 13
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 23
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %25
  %60 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 83
  %61 = load i32, i32* %60, align 16
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 30
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %92 [
    i32 3, label %66
    i32 2, label %80
  ]

66:                                               ; preds = %63, %59, %25
  %67 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 74
  %68 = bitcast %struct.frame_contexts** %39 to i8**
  %69 = load %struct.frame_contexts*, %struct.frame_contexts** %67, align 16
  %70 = load i8*, i8** %68, align 8
  %71 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %69, i64 0, i32 0, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %70, i64 2044, i1 false)
  %72 = load %struct.frame_contexts*, %struct.frame_contexts** %67, align 16
  %73 = load i8*, i8** %68, align 8
  %74 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %72, i64 1, i32 0, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %73, i64 2044, i1 false)
  %75 = load %struct.frame_contexts*, %struct.frame_contexts** %67, align 16
  %76 = load i8*, i8** %68, align 8
  %77 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %75, i64 2, i32 0, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %76, i64 2044, i1 false)
  %78 = load %struct.frame_contexts*, %struct.frame_contexts** %67, align 16
  %79 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %78, i64 3, i32 0, i64 0, i64 0
  br label %88

80:                                               ; preds = %63
  %81 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 74
  %82 = load %struct.frame_contexts*, %struct.frame_contexts** %81, align 16
  %83 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 75
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  %86 = bitcast %struct.frame_contexts** %39 to i8**
  %87 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %82, i64 %85, i32 0, i64 0, i64 0
  br label %88

88:                                               ; preds = %80, %66
  %89 = phi i8** [ %68, %66 ], [ %86, %80 ]
  %90 = phi i8* [ %79, %66 ], [ %87, %80 ]
  %91 = load i8*, i8** %89, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 2044, i1 false)
  br label %92

92:                                               ; preds = %88, %63
  %93 = load i32, i32* %56, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 27
  %97 = load i8, i8* %96, align 4
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %92, %95
  %100 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 47
  %101 = load %struct.MODE_INFO*, %struct.MODE_INFO** %100, align 8
  %102 = icmp eq %struct.MODE_INFO* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %101, i64 0, i32 0
  %105 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 36
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 33
  %108 = load i32, i32* %107, align 16
  %109 = add nsw i32 %108, 1
  %110 = mul nsw i32 %109, %106
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %111, 68
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %104, i8 0, i64 %112, i1 false)
  br label %113

113:                                              ; preds = %99, %95, %103
  %114 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67
  %115 = bitcast [4 x i32]* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %115, i8 0, i64 16, i1 false)
  %116 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 75
  store i32 0, i32* %116, align 8
  ret void
}

declare void @vp9_clearall_segfeatures(%struct.segmentation*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @vp9_default_coef_probs(%struct.VP9Common*) local_unnamed_addr #2

declare void @vp9_init_mv_probs(%struct.VP9Common*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
