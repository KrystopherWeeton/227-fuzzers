; ModuleID = '../../third_party/nasm/nasmlib/saa.c'
source_filename = "../../third_party/nasm/nasmlib/saa.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.SAA = type { i64, i64, i64, i64, i64, i64, i8**, i64, i64, i8**, i64, i64, i8** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [37 x i8] c"../../third_party/nasm/nasmlib/saa.c\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"(s->wpos % s->elem_len) == 0\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"s->wpos == s->blk_len\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"(s->rpos % s->elem_len) == 0\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"s->rptr + len <= s->datalen\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"posn + len <= s->datalen\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.SAA* @saa_init(i64) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @nasm_zalloc(i64 104) #9
  %3 = bitcast i8* %2 to %struct.SAA*
  %4 = icmp ugt i64 %0, 65535
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = trunc i64 %0 to i32
  %7 = urem i32 65536, %6
  %8 = zext i32 %7 to i64
  %9 = sub nuw nsw i64 65536, %8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i64 [ %9, %5 ], [ %0, %1 ]
  %12 = getelementptr inbounds i8, i8* %2, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i8* %2 to i64*
  store i64 %0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  store i64 %11, i64* %16, align 8
  %17 = tail call noalias i8* @nasm_malloc(i64 %11) #9
  %18 = getelementptr inbounds i8, i8* %2, i64 16
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %19, align 8
  %20 = tail call noalias i8* @nasm_malloc(i64 8) #9
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8, i8* %2, i64 96
  %23 = bitcast i8* %22 to i8**
  store i8* %20, i8** %23, align 8
  store i8* %17, i8** %21, align 8
  %24 = ptrtoint i8* %20 to i64
  %25 = getelementptr inbounds i8, i8* %2, i64 72
  %26 = bitcast i8* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8
  ret %struct.SAA* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_zalloc(i64) local_unnamed_addr #2

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_free(%struct.SAA*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %3 = load i8**, i8*** %2, align 8
  %4 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast i8** %3 to i8*
  br label %19

9:                                                ; preds = %1, %9
  %10 = phi i64 [ %14, %9 ], [ %5, %1 ]
  %11 = phi i8** [ %13, %9 ], [ %3, %1 ]
  %12 = load i8*, i8** %11, align 8
  tail call void @nasm_free(i8* %12) #10
  %13 = getelementptr inbounds i8*, i8** %11, i64 1
  %14 = add i64 %10, -1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %9

16:                                               ; preds = %9
  %17 = bitcast i8*** %2 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %7, %16
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  tail call void @nasm_free(i8* %20) #10
  %21 = bitcast %struct.SAA* %0 to i8*
  tail call void @nasm_free(i8* %21) #10
  ret void
}

declare void @nasm_free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @saa_wstruct(%struct.SAA* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = urem i64 %3, %5
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %1
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %1
  %10 = add i64 %5, %3
  %11 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 6
  %16 = load i8**, i8*** %15, align 8
  br label %72

17:                                               ; preds = %9
  %18 = icmp eq i64 %3, %12
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %17
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 105, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 8
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %5
  %24 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %23, %25
  br i1 %26, label %27, label %67

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %29, %32
  br i1 %33, label %57, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %36 = bitcast i8*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %39 = bitcast i8*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  %42 = ashr exact i64 %41, 3
  %43 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 6
  %44 = bitcast i8*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %40
  %47 = ashr exact i64 %46, 3
  %48 = shl i64 %32, 1
  store i64 %48, i64* %31, align 8
  %49 = bitcast i8*** %38 to i8**
  %50 = inttoptr i64 %40 to i8*
  %51 = shl i64 %32, 4
  %52 = tail call i8* @nasm_realloc(i8* %50, i64 %51) #12
  %53 = bitcast i8* %52 to i8**
  store i8* %52, i8** %49, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 %42
  store i8** %54, i8*** %35, align 8
  %55 = getelementptr inbounds i8*, i8** %53, i64 %47
  store i8** %55, i8*** %43, align 8
  %56 = load i64, i64* %11, align 8
  br label %57

57:                                               ; preds = %27, %34
  %58 = phi i64 [ %3, %27 ], [ %56, %34 ]
  %59 = tail call noalias i8* @nasm_malloc(i64 %58) #9
  %60 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %61 = load i8**, i8*** %60, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 %29
  store i8* %59, i8** %62, align 8
  %63 = load i64, i64* %11, align 8
  %64 = load i64, i64* %24, align 8
  %65 = add i64 %64, %63
  store i64 %65, i64* %24, align 8
  %66 = load i64, i64* %4, align 8
  br label %67

67:                                               ; preds = %57, %20
  %68 = phi i64 [ %66, %57 ], [ %5, %20 ]
  %69 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 6
  %70 = load i8**, i8*** %69, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 1
  store i8** %71, i8*** %69, align 8
  store i64 0, i64* %2, align 8
  br label %72

72:                                               ; preds = %14, %67
  %73 = phi i64 [ %5, %14 ], [ %68, %67 ]
  %74 = phi i64 [ %3, %14 ], [ 0, %67 ]
  %75 = phi i8** [ %16, %14 ], [ %71, %67 ]
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %74
  %78 = add i64 %73, %74
  store i64 %78, i64* %2, align 8
  %79 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 8
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, %73
  store i64 %81, i64* %79, align 8
  %82 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %83 = load i64, i64* %82, align 8
  %84 = icmp ugt i64 %81, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %72
  store i64 %81, i64* %82, align 8
  br label %86

86:                                               ; preds = %85, %72
  ret i8* %77
}

; Function Attrs: cold noreturn
declare void @nasm_assert_failed(i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_wbytes(%struct.SAA* nocapture, i8* readonly, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %93, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 6
  %9 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %11 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 4
  %12 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %15 = bitcast i8*** %14 to i64*
  %16 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %17 = bitcast i8*** %16 to i64*
  %18 = bitcast i8*** %8 to i64*
  %19 = bitcast i8*** %16 to i8**
  %20 = load i64, i64* %7, align 8
  %21 = bitcast i64* %7 to <2 x i64>*
  %22 = bitcast i64* %7 to <2 x i64>*
  br label %23

23:                                               ; preds = %5, %89
  %24 = phi i64 [ %20, %5 ], [ 0, %89 ]
  %25 = phi i8* [ %1, %5 ], [ %57, %89 ]
  %26 = phi i64 [ %2, %5 ], [ %58, %89 ]
  %27 = load i64, i64* %6, align 8
  %28 = sub i64 %27, %24
  %29 = icmp ugt i64 %28, %26
  %30 = select i1 %29, i64 %26, i64 %28
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = load i64, i64* %9, align 8
  br label %55

34:                                               ; preds = %23
  %35 = icmp eq i8* %25, null
  %36 = load i8**, i8*** %8, align 8
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %24
  br i1 %35, label %41, label %39

39:                                               ; preds = %34
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* nonnull align 1 %25, i64 %30, i1 false)
  %40 = getelementptr inbounds i8, i8* %25, i64 %30
  br label %42

41:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 0, i64 %30, i1 false)
  br label %42

42:                                               ; preds = %41, %39
  %43 = phi i8* [ %40, %39 ], [ null, %41 ]
  %44 = load <2 x i64>, <2 x i64>* %21, align 8
  %45 = insertelement <2 x i64> undef, i64 %30, i32 0
  %46 = shufflevector <2 x i64> %45, <2 x i64> undef, <2 x i32> zeroinitializer
  %47 = add <2 x i64> %44, %46
  store <2 x i64> %47, <2 x i64>* %22, align 8
  %48 = sub i64 %26, %30
  %49 = load i64, i64* %10, align 8
  %50 = extractelement <2 x i64> %47, i32 1
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %42
  store i64 %50, i64* %10, align 8
  br label %53

53:                                               ; preds = %42, %52
  %54 = icmp eq i64 %48, 0
  br i1 %54, label %93, label %55

55:                                               ; preds = %32, %53
  %56 = phi i64 [ %50, %53 ], [ %33, %32 ]
  %57 = phi i8* [ %43, %53 ], [ %25, %32 ]
  %58 = phi i64 [ %48, %53 ], [ %26, %32 ]
  %59 = load i64, i64* %11, align 8
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %89, label %61

61:                                               ; preds = %55
  %62 = load i64, i64* %12, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %12, align 8
  %64 = load i64, i64* %13, align 8
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %61
  %67 = load i64, i64* %15, align 8
  %68 = load i64, i64* %17, align 8
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = load i64, i64* %18, align 8
  %72 = sub i64 %71, %68
  %73 = ashr exact i64 %72, 3
  %74 = shl i64 %64, 1
  store i64 %74, i64* %13, align 8
  %75 = inttoptr i64 %68 to i8*
  %76 = shl i64 %64, 4
  %77 = tail call i8* @nasm_realloc(i8* %75, i64 %76) #12
  %78 = bitcast i8* %77 to i8**
  store i8* %77, i8** %19, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 %70
  store i8** %79, i8*** %14, align 8
  %80 = getelementptr inbounds i8*, i8** %78, i64 %73
  store i8** %80, i8*** %8, align 8
  br label %81

81:                                               ; preds = %61, %66
  %82 = load i64, i64* %6, align 8
  %83 = tail call noalias i8* @nasm_malloc(i64 %82) #9
  %84 = load i8**, i8*** %16, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 %62
  store i8* %83, i8** %85, align 8
  %86 = load i64, i64* %6, align 8
  %87 = load i64, i64* %11, align 8
  %88 = add i64 %87, %86
  store i64 %88, i64* %11, align 8
  br label %89

89:                                               ; preds = %81, %55
  %90 = load i8**, i8*** %8, align 8
  %91 = getelementptr inbounds i8*, i8** %90, i64 1
  store i8** %91, i8*** %8, align 8
  store i64 0, i64* %7, align 8
  %92 = icmp eq i64 %58, 0
  br i1 %92, label %93, label %23

93:                                               ; preds = %53, %89, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @saa_wcstring(%struct.SAA* nocapture, i8* readonly) local_unnamed_addr #0 {
  %3 = tail call i64 @strlen(i8* %1) #13
  %4 = add i64 %3, 1
  tail call void @saa_wbytes(%struct.SAA* %0, i8* %1, i64 %4)
  ret i64 %4
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @saa_rewind(%struct.SAA* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %3 = bitcast i8*** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %6 = bitcast i8*** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 10
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @saa_rstruct(%struct.SAA* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 11
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %3
  %7 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %31, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 10
  %12 = load i64, i64* %11, align 8
  %13 = urem i64 %12, %5
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %10
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 178, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

16:                                               ; preds = %10
  %17 = add i64 %12, %5
  %18 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %17, %19
  %21 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %22 = load i8**, i8*** %21, align 8
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8*, i8** %22, i64 1
  store i8** %24, i8*** %21, align 8
  store i64 0, i64* %11, align 8
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi i64 [ 0, %23 ], [ %12, %16 ]
  %27 = phi i8** [ %24, %23 ], [ %22, %16 ]
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  %30 = add i64 %26, %5
  store i64 %30, i64* %11, align 8
  store i64 %6, i64* %2, align 8
  br label %31

31:                                               ; preds = %1, %25
  %32 = phi i8* [ %29, %25 ], [ null, %1 ]
  ret i8* %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @saa_rbytes(%struct.SAA* nocapture, i64* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 11
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i64 0, i64* %1, align 8
  br label %39

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 10
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %17 = load i8**, i8*** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 1
  store i8** %18, i8*** %16, align 8
  store i64 0, i64* %10, align 8
  br label %19

19:                                               ; preds = %9, %15
  %20 = phi i64 [ %11, %9 ], [ 0, %15 ]
  %21 = load i64, i64* %1, align 8
  %22 = sub i64 %6, %4
  %23 = icmp ugt i64 %21, %22
  %24 = select i1 %23, i64 %22, i64 %21
  %25 = sub i64 %13, %20
  %26 = icmp ugt i64 %24, %25
  %27 = select i1 %26, i64 %25, i64 %24
  store i64 %27, i64* %1, align 8
  %28 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %29 = load i8**, i8*** %28, align 8
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast i64* %10 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = extractelement <2 x i64> %32, i32 0
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  %35 = insertelement <2 x i64> undef, i64 %27, i32 0
  %36 = shufflevector <2 x i64> %35, <2 x i64> undef, <2 x i32> zeroinitializer
  %37 = add <2 x i64> %32, %36
  %38 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 8
  br label %39

39:                                               ; preds = %19, %8
  %40 = phi i8* [ null, %8 ], [ %34, %19 ]
  ret i8* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_rnbytes(%struct.SAA* nocapture, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 11
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  %7 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %16, label %10, !prof !3

10:                                               ; preds = %3
  %11 = icmp eq i64 %2, 0
  br i1 %11, label %52, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 10
  %14 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %15 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  br label %17

16:                                               ; preds = %3
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 226, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #11
  unreachable

17:                                               ; preds = %48, %12
  %18 = phi i64 [ %8, %12 ], [ %51, %48 ]
  %19 = phi i64 [ %5, %12 ], [ %50, %48 ]
  %20 = phi i64 [ %2, %12 ], [ %46, %48 ]
  %21 = phi i8* [ %1, %12 ], [ %49, %48 ]
  %22 = icmp ugt i64 %18, %19
  br i1 %22, label %23, label %43

23:                                               ; preds = %17
  %24 = load i64, i64* %13, align 8
  %25 = load i64, i64* %14, align 8
  %26 = icmp ult i64 %24, %25
  %27 = load i8**, i8*** %15, align 8
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8*, i8** %27, i64 1
  store i8** %29, i8*** %15, align 8
  store i64 0, i64* %13, align 8
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi i8** [ %29, %28 ], [ %27, %23 ]
  %32 = phi i64 [ 0, %28 ], [ %24, %23 ]
  %33 = sub i64 %18, %19
  %34 = icmp ugt i64 %20, %33
  %35 = select i1 %34, i64 %33, i64 %20
  %36 = sub i64 %25, %32
  %37 = icmp ugt i64 %35, %36
  %38 = select i1 %37, i64 %36, i64 %35
  %39 = load i8*, i8** %31, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %32
  %41 = add i64 %32, %38
  store i64 %41, i64* %13, align 8
  %42 = add i64 %38, %19
  store i64 %42, i64* %4, align 8
  br label %43

43:                                               ; preds = %17, %30
  %44 = phi i64 [ %38, %30 ], [ 0, %17 ]
  %45 = phi i8* [ %40, %30 ], [ null, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %45, i64 %44, i1 false)
  %46 = sub i64 %20, %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds i8, i8* %21, i64 %44
  %50 = load i64, i64* %4, align 8
  %51 = load i64, i64* %7, align 8
  br label %17

52:                                               ; preds = %43, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_fread(%struct.SAA* nocapture, i64, i8* nocapture, i64) local_unnamed_addr #0 {
  %5 = add i64 %3, %1
  %6 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %10, !prof !3

9:                                                ; preds = %4
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 246, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 65536
  br i1 %13, label %14, label %17, !prof !2

14:                                               ; preds = %10
  %15 = lshr i64 %1, 16
  %16 = and i64 %1, 65535
  br label %20

17:                                               ; preds = %10
  %18 = udiv i64 %1, %12
  %19 = urem i64 %1, %12
  br label %20

20:                                               ; preds = %14, %17
  %21 = phi i64 [ %16, %14 ], [ %19, %17 ]
  %22 = phi i64 [ %15, %14 ], [ %18, %17 ]
  %23 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 10
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 11
  store i64 %1, i64* %24, align 8
  %25 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %26 = load i8**, i8*** %25, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 %22
  %28 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  store i8** %27, i8*** %28, align 8
  %29 = icmp eq i64 %3, 0
  br i1 %29, label %65, label %30

30:                                               ; preds = %20, %61
  %31 = phi i64 [ %64, %61 ], [ %7, %20 ]
  %32 = phi i64 [ %63, %61 ], [ %1, %20 ]
  %33 = phi i64 [ %59, %61 ], [ %3, %20 ]
  %34 = phi i8* [ %62, %61 ], [ %2, %20 ]
  %35 = icmp ugt i64 %31, %32
  br i1 %35, label %36, label %56

36:                                               ; preds = %30
  %37 = load i64, i64* %23, align 8
  %38 = load i64, i64* %11, align 8
  %39 = icmp ult i64 %37, %38
  %40 = load i8**, i8*** %28, align 8
  br i1 %39, label %43, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8*, i8** %40, i64 1
  store i8** %42, i8*** %28, align 8
  store i64 0, i64* %23, align 8
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8** [ %42, %41 ], [ %40, %36 ]
  %45 = phi i64 [ 0, %41 ], [ %37, %36 ]
  %46 = sub i64 %31, %32
  %47 = icmp ugt i64 %33, %46
  %48 = select i1 %47, i64 %46, i64 %33
  %49 = sub i64 %38, %45
  %50 = icmp ugt i64 %48, %49
  %51 = select i1 %50, i64 %49, i64 %48
  %52 = load i8*, i8** %44, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %45
  %54 = add i64 %51, %45
  store i64 %54, i64* %23, align 8
  %55 = add i64 %51, %32
  store i64 %55, i64* %24, align 8
  br label %56

56:                                               ; preds = %43, %30
  %57 = phi i64 [ %51, %43 ], [ 0, %30 ]
  %58 = phi i8* [ %53, %43 ], [ null, %30 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %58, i64 %57, i1 false) #10
  %59 = sub i64 %33, %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds i8, i8* %34, i64 %57
  %63 = load i64, i64* %24, align 8
  %64 = load i64, i64* %6, align 8
  br label %30

65:                                               ; preds = %56, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_fwrite(%struct.SAA* nocapture, i64, i8* readonly, i64) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  %8 = select i1 %7, i64 %6, i64 %1
  %9 = tail call i64 @llvm.usub.sat.i64(i64 %1, i64 %6)
  %10 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 65536
  br i1 %12, label %13, label %16, !prof !2

13:                                               ; preds = %4
  %14 = lshr i64 %8, 16
  %15 = and i64 %8, 65535
  br label %19

16:                                               ; preds = %4
  %17 = udiv i64 %8, %11
  %18 = urem i64 %8, %11
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi i64 [ %18, %16 ], [ %15, %13 ]
  %21 = phi i64 [ %17, %16 ], [ %14, %13 ]
  %22 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 7
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 8
  store i64 %8, i64* %23, align 8
  %24 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %25 = load i8**, i8*** %24, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 %21
  %27 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 6
  store i8** %26, i8*** %27, align 8
  %28 = icmp eq i64 %20, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  store i64 %11, i64* %22, align 8
  %30 = getelementptr inbounds i8*, i8** %26, i64 -1
  store i8** %30, i8*** %27, align 8
  br label %31

31:                                               ; preds = %19, %29
  %32 = icmp eq i64 %9, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @saa_wbytes(%struct.SAA* %0, i8* null, i64 %9)
  br label %34

34:                                               ; preds = %31, %33
  tail call void @saa_wbytes(%struct.SAA* %0, i8* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_fpwrite(%struct.SAA* nocapture, %struct._IO_FILE*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 12
  %4 = bitcast i8*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 9
  %7 = bitcast i8*** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 10
  %9 = bitcast i64* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10
  %10 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 11
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SAA, %struct.SAA* %0, i64 0, i32 1
  br label %16

16:                                               ; preds = %43, %14
  %17 = phi i64 [ 0, %14 ], [ %44, %43 ]
  %18 = phi i64 [ 0, %14 ], [ %41, %43 ]
  %19 = phi i64 [ %11, %14 ], [ %40, %43 ]
  %20 = load i64, i64* %15, align 8
  %21 = icmp ult i64 %17, %20
  %22 = load i8**, i8*** %6, align 8
  br i1 %21, label %25, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8*, i8** %22, i64 1
  store i8** %24, i8*** %6, align 8
  store i64 0, i64* %8, align 8
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi i8** [ %24, %23 ], [ %22, %16 ]
  %27 = phi i64 [ 0, %23 ], [ %17, %16 ]
  %28 = sub i64 %19, %18
  %29 = icmp ugt i64 %19, %28
  %30 = select i1 %29, i64 %28, i64 %19
  %31 = sub i64 %20, %27
  %32 = icmp ugt i64 %30, %31
  %33 = select i1 %32, i64 %31, i64 %30
  %34 = load i8*, i8** %26, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %27
  %36 = add i64 %27, %33
  store i64 %36, i64* %8, align 8
  %37 = add i64 %33, %18
  store i64 %37, i64* %12, align 8
  %38 = icmp eq i8* %35, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %25
  tail call void @nasm_write(i8* nonnull %35, i64 %33, %struct._IO_FILE* %1) #10
  %40 = load i64, i64* %10, align 8
  %41 = load i64, i64* %12, align 8
  %42 = icmp ugt i64 %40, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = load i64, i64* %8, align 8
  br label %16

45:                                               ; preds = %25, %39, %2
  ret void
}

declare void @nasm_write(i8*, i64, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_write8(%struct.SAA* nocapture, i8 zeroext) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %3, i64 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_write16(%struct.SAA* nocapture, i16 zeroext) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = bitcast i16* %3 to i8*
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %4, i64 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_write32(%struct.SAA* nocapture, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast i32* %3 to i8*
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %4, i64 4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_write64(%struct.SAA* nocapture, i64) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = bitcast i64* %3 to i8*
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %4, i64 8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_writeaddr(%struct.SAA* nocapture, i64, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  store i64 %1, i64* %4, align 8
  %5 = bitcast i64* %4 to i8*
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %5, i64 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_wleb128u(%struct.SAA* nocapture, i32) local_unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 64, i1 false)
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi i32 [ %1, %2 ], [ %11, %5 ]
  %7 = phi i8* [ %4, %2 ], [ %15, %5 ]
  %8 = phi i32 [ 0, %2 ], [ %16, %5 ]
  %9 = trunc i32 %6 to i8
  %10 = and i8 %9, 127
  %11 = ashr i32 %6, 7
  %12 = icmp ne i32 %11, 0
  %13 = or i8 %9, -128
  %14 = select i1 %12, i8 %13, i8 %10
  store i8 %14, i8* %7, align 1
  %15 = getelementptr inbounds i8, i8* %7, i64 1
  %16 = add nuw nsw i32 %8, 1
  br i1 %12, label %5, label %17

17:                                               ; preds = %5
  %18 = zext i32 %16 to i64
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %4, i64 %18)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @saa_wleb128s(%struct.SAA* nocapture, i32) local_unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 64, i1 false)
  %5 = icmp slt i32 %1, 0
  br label %6

6:                                                ; preds = %2, %21
  %7 = phi i32 [ 0, %2 ], [ %29, %21 ]
  %8 = phi i8 [ 1, %2 ], [ %27, %21 ]
  %9 = phi i8* [ %4, %2 ], [ %28, %21 ]
  %10 = phi i32 [ %1, %2 ], [ %15, %21 ]
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 127
  %13 = ashr i32 %10, 7
  %14 = or i32 %13, -33554432
  %15 = select i1 %5, i32 %14, i32 %13
  %16 = and i32 %10, 64
  %17 = or i32 %15, %16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  store i8 %12, i8* %9, align 1
  %20 = add nuw nsw i32 %7, 1
  br label %32

21:                                               ; preds = %6
  %22 = icmp eq i32 %16, 0
  %23 = icmp ne i32 %15, -1
  %24 = or i1 %22, %23
  %25 = or i8 %11, -128
  %26 = select i1 %24, i8 %25, i8 %12
  %27 = select i1 %24, i8 %8, i8 0
  store i8 %26, i8* %9, align 1
  %28 = getelementptr inbounds i8, i8* %9, i64 1
  %29 = add nuw nsw i32 %7, 1
  %30 = and i8 %27, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %6

32:                                               ; preds = %21, %19
  %33 = phi i32 [ %20, %19 ], [ %29, %21 ]
  %34 = zext i32 %33 to i64
  call void @saa_wbytes(%struct.SAA* %0, i8* nonnull %4, i64 %34)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #10
  ret void
}

; Function Attrs: allocsize(1)
declare i8* @nasm_realloc(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { nounwind }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind allocsize(1) }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
