; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLVarying.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLVarying.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList, %class.GrTBlockList.0, %class.GrTBlockList.0, %class.GrTBlockList.0, %class.GrTBlockList.0, %class.GrTBlockList.0, %class.GrTBlockList.0, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [80 x i8] }
%class.GrTBlockList.0 = type { %class.GrSBlockAllocator.1 }
%class.GrSBlockAllocator.1 = type { [88 x i8], [8 x i8] }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::vector", i32, %class.SkSTArray.108 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.4, [8 x i8], %class.GrTBlockList.0, %class.GrTBlockList.0, i32, [4 x i8], [2 x %class.SkSTArray.10], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.4 = type { %class.SkAlignedSTStorage.5, %class.SkTArray.6 }
%class.SkAlignedSTStorage.5 = type { [16 x i8] }
%class.SkTArray.6 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.SkSTArray.10 = type { %class.SkAlignedSTStorage.11, %class.SkTArray }
%class.SkAlignedSTStorage.11 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.12, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.12 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.13, i32, [4 x i8] }>
%class.SkSTArray.13 = type { %class.SkAlignedSTStorage.14, %class.SkTArray.15 }
%class.SkAlignedSTStorage.14 = type { [132 x i8] }
%class.SkTArray.15 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.16, i32, [4 x i8] }
%union.anon.16 = type { %struct.anon.17 }
%struct.anon.17 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.65, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.19, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.19 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.20, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.59" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.20 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.24 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.21, [4 x i8] }>
%union.anon.21 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.22, i8* }
%class.sk_sp.22 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.23, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.24 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.25, void (i8*)*, i8* }
%class.SkNVRefCnt.25 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.20, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.56, %class.sk_sp.58, %class.sk_sp.58 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.32, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.32 = type { %class.SkTHashTable.33 }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.41, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.41 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.47, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.47 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.48 }
%class.SkTHashTable.48 = type { i32, i32, %class.SkAutoTArray.49 }
%class.SkAutoTArray.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.56 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.57, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.57 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.58 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.64 }
%union.anon.64 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.65 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.66, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.66 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.67"*, [24 x i8] }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.70, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.70 = type { %class.SkAlignedSTStorage.71, %class.SkTArray.72 }
%class.SkAlignedSTStorage.71 = type { [8 x i8] }
%class.SkTArray.72 = type { %"class.std::__1::unique_ptr.73"*, i64 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.82, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.82 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.86 }
%class.SkTArray.86 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.96"*, %"class.std::__1::unique_ptr.96"*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.99 }
%class.SkTArray.99 = type { %"class.std::__1::unique_ptr.96"*, i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::unique_ptr.96"* }
%class.SkSTArray.108 = type { %class.SkAlignedSTStorage.109, %class.SkTArray.110 }
%class.SkAlignedSTStorage.109 = type { [160 x i8] }
%class.SkTArray.110 = type { %class.GrShaderVar*, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.4, [8 x i8], %class.GrTBlockList.0, %class.GrTBlockList.0, i32, [4 x i8], [2 x %class.SkSTArray.10], i32, i8, [3 x i8], i32, [12 x i8] }>
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE9push_backERKS0_ = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJRK8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_ = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJ8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_ = comdat any

@.str = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"noperspective\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"flat\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLVarying.cpp\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"Invalid interpolation\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* nocapture readonly dereferenceable(16), i8*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GrGLSLVarying, align 8
  %6 = bitcast %class.GrGLSLVarying* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #4
  %7 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 1
  %9 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 2
  %10 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 5
  %11 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %7, align 8
  %13 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %1, i64 0, i32 0
  %14 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 36, i1 false)
  %15 = load i8*, i8** %13, align 8
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %0, i8* %15, %class.GrGLSLVarying* nonnull %5, i32 %3)
  %16 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 9
  %17 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %16, align 16
  %18 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %17, i64 0, i32 2
  %19 = bitcast %class.GrGLSLVertexBuilder* %18 to %class.GrGLSLShaderBuilder*
  %20 = load i8*, i8** %9, align 8
  %21 = load i8*, i8** %13, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %20, i8* %21)
  %22 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %16, align 16
  %23 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %22, i64 0, i32 4
  %24 = bitcast %class.GrGLSLFragmentShaderBuilder* %23 to i8**
  %25 = load i8*, i8** %24, align 16
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %class.GrGLSLFragmentShaderBuilder* %23 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = bitcast i8* %30 to %class.GrGLSLShaderBuilder*
  %32 = load i8*, i8** %10, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %2, i8* %32)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 9
  %8 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %7, align 16
  %9 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %8, i64 0, i32 7
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %9, align 16
  %11 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %10, i64 0, i32 7
  %12 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %11, align 8
  %13 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 8
  %16 = icmp ne i32 %15, 0
  %17 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 2
  %18 = bitcast %class.GrTBlockList* %17 to %"class.GrBlockAllocator::Block"**
  %19 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %18, align 16, !noalias !2
  %20 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 4, !noalias !2
  %22 = add i32 %21, 7
  %23 = and i32 %22, -8
  %24 = add nsw i32 %23, 32
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %19, i64 0, i32 2
  %26 = load i32, i32* %25, align 8, !noalias !2
  %27 = icmp sgt i32 %24, %26
  br i1 %27, label %28, label %36

28:                                               ; preds = %4
  %29 = bitcast %class.GrTBlockList* %17 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %29, i32 64, i32 536870944) #4, !noalias !2
  %30 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %18, align 16, !noalias !2
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !2
  %33 = add i32 %32, 7
  %34 = and i32 %33, -8
  %35 = add nsw i32 %34, 32
  br label %36

36:                                               ; preds = %4, %28
  %37 = phi %"class.GrBlockAllocator::Block"* [ %30, %28 ], [ %19, %4 ]
  %38 = phi i32 [ %34, %28 ], [ %23, %4 ]
  %39 = phi i32 [ %35, %28 ], [ %24, %4 ]
  %40 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %37, i64 0, i32 3
  store i32 %39, i32* %40, align 4, !noalias !2
  %41 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %18, align 16, !noalias !2
  %42 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %41, i64 0, i32 4
  store i32 %38, i32* %42, align 8
  %43 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 44
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %44, align 4
  %47 = bitcast %"class.GrBlockAllocator::Block"* %41 to i8*
  %48 = sext i32 %38 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast i8* %50 to %class.SkString*
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %51) #4
  %52 = getelementptr inbounds i8, i8* %49, i64 16
  %53 = bitcast i8* %52 to %class.SkString*
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %53) #4
  %54 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %2, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = bitcast i8* %49 to i32*
  store i32 %55, i32* %56, align 8
  %57 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %7, align 16
  %58 = bitcast %class.GrGLSLProgramBuilder* %57 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %59 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %58, align 16
  %60 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %59, i64 2
  %61 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %60, align 8
  %62 = tail call %class.GrCaps* %61(%class.GrGLSLProgramBuilder* %57) #4
  switch i32 %3, label %73 [
    i32 0, label %74
    i32 1, label %63
    i32 2, label %72
  ]

63:                                               ; preds = %36
  %64 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %62, i64 0, i32 2, i32 0
  %65 = load %class.GrShaderCaps*, %class.GrShaderCaps** %64, align 8
  %66 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %65, i64 0, i32 2
  %67 = bitcast i56* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = lshr i64 %68, 11
  %70 = trunc i64 %69 to i8
  %71 = and i8 %70, 1
  br label %74

72:                                               ; preds = %36
  br label %74

73:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #6
  unreachable

74:                                               ; preds = %36, %63, %72
  %75 = phi i8 [ 1, %72 ], [ %71, %63 ], [ 0, %36 ]
  %76 = getelementptr inbounds i8, i8* %49, i64 4
  store i8 %75, i8* %76, align 4
  %77 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  %78 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %7, align 16
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %5, %class.GrGLSLProgramBuilder* %78, i8 signext 118, i8* %1, i1 zeroext true) #4
  %79 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %51, %class.SkString* nonnull dereferenceable(8) %5) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  %80 = getelementptr inbounds i8, i8* %49, i64 24
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %2, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 2
  br i1 %84, label %92, label %85

85:                                               ; preds = %74
  %86 = bitcast i8* %50 to %"struct.SkString::Rec"**
  %87 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %86, align 8
  %88 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %87, i64 0, i32 2
  %89 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %2, i64 0, i32 2
  store i8* %88, i8** %89, align 8
  %90 = load i32, i32* %81, align 4
  %91 = or i32 %90, 1
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %74, %85
  br i1 %16, label %93, label %107

93:                                               ; preds = %92
  %94 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #4
  %95 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %7, align 16
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %6, %class.GrGLSLProgramBuilder* %95, i8 signext 103, i8* %1, i1 zeroext true) #4
  %96 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %53, %class.SkString* nonnull dereferenceable(8) %6) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4
  %97 = bitcast i8* %50 to %"struct.SkString::Rec"**
  %98 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %97, align 8
  %99 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %98, i64 0, i32 2
  %100 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %2, i64 0, i32 3
  store i8* %99, i8** %100, align 8
  %101 = bitcast i8* %52 to %"struct.SkString::Rec"**
  %102 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %102, i64 0, i32 2
  %104 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %2, i64 0, i32 4
  store i8* %103, i8** %104, align 8
  %105 = load i32, i32* %81, align 4
  %106 = or i32 %105, 8
  store i32 %106, i32* %81, align 4
  br label %107

107:                                              ; preds = %93, %92
  %108 = load i32, i32* %82, align 4
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %118, label %110

110:                                              ; preds = %107
  %111 = select i1 %16, %class.SkString* %53, %class.SkString* %51
  %112 = getelementptr inbounds %class.SkString, %class.SkString* %111, i64 0, i32 0, i32 0
  %113 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %112, align 8
  %114 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %113, i64 0, i32 2
  %115 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %2, i64 0, i32 5
  store i8* %114, i8** %115, align 8
  %116 = load i32, i32* %81, align 4
  %117 = or i32 %116, 16
  store i32 %117, i32* %81, align 4
  br label %118

118:                                              ; preds = %107, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #4
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret, %class.GrGLSLProgramBuilder*, i8 signext, i8*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrShaderVar, align 8
  %6 = alloca %class.GrShaderVar, align 8
  %7 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %1, i64 0, i32 3, i32 0
  %8 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %7, align 8, !noalias !5
  %9 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %1, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4, !noalias !5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %8, i64 0, i32 2
  %14 = load i32, i32* %13, align 4, !noalias !5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %12, %16
  %17 = phi %"class.GrGeometryProcessor::Attribute"* [ %18, %16 ], [ %8, %12 ]
  %18 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %17, i64 1
  %19 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %17, i64 1, i32 2
  %20 = load i32, i32* %19, align 4, !noalias !5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %16, label %22

22:                                               ; preds = %16, %12
  %23 = phi %"class.GrGeometryProcessor::Attribute"* [ %8, %12 ], [ %18, %16 ]
  %24 = icmp eq %"class.GrGeometryProcessor::Attribute"* %23, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %22
  %26 = bitcast %class.GrShaderVar* %5 to i8*
  %27 = bitcast %class.SkString* %3 to i8*
  %28 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 0
  %29 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 1
  %30 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 2
  %31 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 3
  %32 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 4
  %33 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 5
  %34 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3
  %35 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %36 = bitcast i8* %35 to %"class.GrBlockAllocator::Block"**
  %37 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %38 = bitcast i8* %37 to i32*
  %39 = bitcast i8* %35 to %"class.GrBlockAllocator::Block"*
  br label %74

40:                                               ; preds = %144, %158, %2, %22
  %41 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %1, i64 0, i32 4, i32 0
  %42 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %41, align 8, !noalias !8
  %43 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %1, i64 0, i32 4, i32 2
  %44 = load i32, i32* %43, align 4, !noalias !8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %162, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %42, i64 0, i32 2
  %48 = load i32, i32* %47, align 4, !noalias !8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46, %50
  %51 = phi %"class.GrGeometryProcessor::Attribute"* [ %52, %50 ], [ %42, %46 ]
  %52 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %51, i64 1
  %53 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %51, i64 1, i32 2
  %54 = load i32, i32* %53, align 4, !noalias !8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %50, label %56

56:                                               ; preds = %50, %46
  %57 = phi %"class.GrGeometryProcessor::Attribute"* [ %42, %46 ], [ %52, %50 ]
  %58 = icmp eq %"class.GrGeometryProcessor::Attribute"* %57, null
  br i1 %58, label %162, label %59

59:                                               ; preds = %56
  %60 = bitcast %class.GrShaderVar* %6 to i8*
  %61 = bitcast %class.SkString* %4 to i8*
  %62 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 0
  %63 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 1
  %64 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 2
  %65 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 3
  %66 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 4
  %67 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 5
  %68 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3
  %69 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %70 = bitcast i8* %69 to %"class.GrBlockAllocator::Block"**
  %71 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %72 = bitcast i8* %71 to i32*
  %73 = bitcast i8* %69 to %"class.GrBlockAllocator::Block"*
  br label %163

74:                                               ; preds = %25, %158
  %75 = phi i32 [ %10, %25 ], [ %160, %158 ]
  %76 = phi %"class.GrGeometryProcessor::Attribute"* [ %23, %25 ], [ %159, %158 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #4
  %77 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %76, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8, !noalias !11
  %79 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %76, i64 0, i32 2
  %80 = load i32, i32* %79, align 4, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #4, !noalias !11
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %3, i8* %78) #4, !noalias !11
  store i32 %80, i32* %28, align 8, !alias.scope !11
  store i32 2, i32* %29, align 4, !alias.scope !11
  store i32 0, i32* %30, align 8, !alias.scope !11
  call void @_ZN8SkStringC1EOS_(%class.SkString* %31, %class.SkString* nonnull dereferenceable(8) %3) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* %32) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* %33) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #4, !noalias !11
  %81 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %36, align 8, !noalias !14
  %82 = load i32, i32* %38, align 8, !noalias !14
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %94

84:                                               ; preds = %74, %87
  %85 = phi %"class.GrBlockAllocator::Block"* [ %93, %87 ], [ %81, %74 ]
  %86 = icmp eq %"class.GrBlockAllocator::Block"* %85, null
  br i1 %86, label %140, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.GrBlockAllocator::Block"* %85 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !14
  %90 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %85, i64 0, i32 4
  %91 = load i32, i32* %90, align 8, !noalias !14
  %92 = icmp eq i32 %91, 0
  %93 = inttoptr i64 %89 to %"class.GrBlockAllocator::Block"*
  br i1 %92, label %84, label %96

94:                                               ; preds = %74
  %95 = ptrtoint %"class.GrBlockAllocator::Block"* %81 to i64
  br label %96

96:                                               ; preds = %87, %94
  %97 = phi i32 [ %82, %94 ], [ %91, %87 ]
  %98 = phi %"class.GrBlockAllocator::Block"* [ %39, %94 ], [ %85, %87 ]
  %99 = phi i64 [ %95, %94 ], [ %89, %87 ]
  br label %100

100:                                              ; preds = %96, %134
  %101 = phi i32 [ %138, %134 ], [ %97, %96 ]
  %102 = phi i32 [ %137, %134 ], [ 32, %96 ]
  %103 = phi %"class.GrBlockAllocator::Block"* [ %136, %134 ], [ %98, %96 ]
  %104 = phi i64 [ %135, %134 ], [ %99, %96 ]
  %105 = sext i32 %102 to i64
  %106 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %103, i64 0, i32 2
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 %105
  %109 = bitcast i8* %108 to %class.SkString*
  %110 = call zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString* %109, %class.SkString* dereferenceable(8) %31) #4
  br i1 %110, label %142, label %111

111:                                              ; preds = %100
  %112 = add i32 %102, 40
  %113 = icmp sgt i32 %112, %101
  br i1 %113, label %114, label %134

114:                                              ; preds = %111
  %115 = inttoptr i64 %104 to %"class.GrBlockAllocator::Block"*
  %116 = icmp eq i64 %104, 0
  br i1 %116, label %140, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %115, i64 0, i32 0
  %119 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %118, align 8
  %120 = ptrtoint %"class.GrBlockAllocator::Block"* %119 to i64
  %121 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %115, i64 0, i32 4
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %134

124:                                              ; preds = %117, %127
  %125 = phi %"class.GrBlockAllocator::Block"* [ %133, %127 ], [ %119, %117 ]
  %126 = icmp eq %"class.GrBlockAllocator::Block"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.GrBlockAllocator::Block"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %125, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  %133 = inttoptr i64 %129 to %"class.GrBlockAllocator::Block"*
  br i1 %132, label %124, label %134

134:                                              ; preds = %127, %117, %111
  %135 = phi i64 [ %104, %111 ], [ %120, %117 ], [ %129, %127 ]
  %136 = phi %"class.GrBlockAllocator::Block"* [ %103, %111 ], [ %115, %117 ], [ %125, %127 ]
  %137 = phi i32 [ %112, %111 ], [ 32, %117 ], [ 32, %127 ]
  %138 = phi i32 [ %101, %111 ], [ %122, %117 ], [ %131, %127 ]
  %139 = icmp eq %"class.GrBlockAllocator::Block"* %136, null
  br i1 %139, label %140, label %100

140:                                              ; preds = %84, %134, %114, %124
  %141 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE9push_backERKS0_(%class.GrTBlockList.0* %34, %class.GrShaderVar* nonnull dereferenceable(40) %5) #4
  br label %142

142:                                              ; preds = %100, %140
  call void @_ZN8SkStringD1Ev(%class.SkString* %33) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* %32) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* %31) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #4
  %143 = icmp eq i32 %75, 0
  br i1 %143, label %158, label %144

144:                                              ; preds = %142
  %145 = add nsw i32 %75, -1
  %146 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %76, i64 1
  %147 = icmp eq i32 %145, 0
  br i1 %147, label %40, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %76, i64 1, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %158

152:                                              ; preds = %148, %152
  %153 = phi %"class.GrGeometryProcessor::Attribute"* [ %154, %152 ], [ %146, %148 ]
  %154 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %153, i64 1
  %155 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %153, i64 1, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %152, label %158

158:                                              ; preds = %152, %142, %148
  %159 = phi %"class.GrGeometryProcessor::Attribute"* [ %76, %142 ], [ %146, %148 ], [ %154, %152 ]
  %160 = phi i32 [ 0, %142 ], [ %145, %148 ], [ %145, %152 ]
  %161 = icmp eq %"class.GrGeometryProcessor::Attribute"* %159, null
  br i1 %161, label %40, label %74

162:                                              ; preds = %233, %247, %40, %56
  ret void

163:                                              ; preds = %59, %247
  %164 = phi i32 [ %44, %59 ], [ %249, %247 ]
  %165 = phi %"class.GrGeometryProcessor::Attribute"* [ %57, %59 ], [ %248, %247 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #4
  %166 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %165, i64 0, i32 0
  %167 = load i8*, i8** %166, align 8, !noalias !17
  %168 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %165, i64 0, i32 2
  %169 = load i32, i32* %168, align 4, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #4, !noalias !17
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %167) #4, !noalias !17
  store i32 %169, i32* %62, align 8, !alias.scope !17
  store i32 2, i32* %63, align 4, !alias.scope !17
  store i32 0, i32* %64, align 8, !alias.scope !17
  call void @_ZN8SkStringC1EOS_(%class.SkString* %65, %class.SkString* nonnull dereferenceable(8) %4) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* %66) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* %67) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #4, !noalias !17
  %170 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %70, align 8, !noalias !20
  %171 = load i32, i32* %72, align 8, !noalias !20
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %183

173:                                              ; preds = %163, %176
  %174 = phi %"class.GrBlockAllocator::Block"* [ %182, %176 ], [ %170, %163 ]
  %175 = icmp eq %"class.GrBlockAllocator::Block"* %174, null
  br i1 %175, label %229, label %176

176:                                              ; preds = %173
  %177 = bitcast %"class.GrBlockAllocator::Block"* %174 to i64*
  %178 = load i64, i64* %177, align 8, !noalias !20
  %179 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %174, i64 0, i32 4
  %180 = load i32, i32* %179, align 8, !noalias !20
  %181 = icmp eq i32 %180, 0
  %182 = inttoptr i64 %178 to %"class.GrBlockAllocator::Block"*
  br i1 %181, label %173, label %185

183:                                              ; preds = %163
  %184 = ptrtoint %"class.GrBlockAllocator::Block"* %170 to i64
  br label %185

185:                                              ; preds = %176, %183
  %186 = phi i32 [ %171, %183 ], [ %180, %176 ]
  %187 = phi %"class.GrBlockAllocator::Block"* [ %73, %183 ], [ %174, %176 ]
  %188 = phi i64 [ %184, %183 ], [ %178, %176 ]
  br label %189

189:                                              ; preds = %185, %223
  %190 = phi i32 [ %227, %223 ], [ %186, %185 ]
  %191 = phi i32 [ %226, %223 ], [ 32, %185 ]
  %192 = phi %"class.GrBlockAllocator::Block"* [ %225, %223 ], [ %187, %185 ]
  %193 = phi i64 [ %224, %223 ], [ %188, %185 ]
  %194 = sext i32 %191 to i64
  %195 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %192, i64 0, i32 2
  %196 = bitcast i32* %195 to i8*
  %197 = getelementptr inbounds i8, i8* %196, i64 %194
  %198 = bitcast i8* %197 to %class.SkString*
  %199 = call zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString* %198, %class.SkString* dereferenceable(8) %65) #4
  br i1 %199, label %231, label %200

200:                                              ; preds = %189
  %201 = add i32 %191, 40
  %202 = icmp sgt i32 %201, %190
  br i1 %202, label %203, label %223

203:                                              ; preds = %200
  %204 = inttoptr i64 %193 to %"class.GrBlockAllocator::Block"*
  %205 = icmp eq i64 %193, 0
  br i1 %205, label %229, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %204, i64 0, i32 0
  %208 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %207, align 8
  %209 = ptrtoint %"class.GrBlockAllocator::Block"* %208 to i64
  %210 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %204, i64 0, i32 4
  %211 = load i32, i32* %210, align 8
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %223

213:                                              ; preds = %206, %216
  %214 = phi %"class.GrBlockAllocator::Block"* [ %222, %216 ], [ %208, %206 ]
  %215 = icmp eq %"class.GrBlockAllocator::Block"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %213
  %217 = bitcast %"class.GrBlockAllocator::Block"* %214 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %214, i64 0, i32 4
  %220 = load i32, i32* %219, align 8
  %221 = icmp eq i32 %220, 0
  %222 = inttoptr i64 %218 to %"class.GrBlockAllocator::Block"*
  br i1 %221, label %213, label %223

223:                                              ; preds = %216, %206, %200
  %224 = phi i64 [ %193, %200 ], [ %209, %206 ], [ %218, %216 ]
  %225 = phi %"class.GrBlockAllocator::Block"* [ %192, %200 ], [ %204, %206 ], [ %214, %216 ]
  %226 = phi i32 [ %201, %200 ], [ 32, %206 ], [ 32, %216 ]
  %227 = phi i32 [ %190, %200 ], [ %211, %206 ], [ %220, %216 ]
  %228 = icmp eq %"class.GrBlockAllocator::Block"* %225, null
  br i1 %228, label %229, label %189

229:                                              ; preds = %173, %223, %203, %213
  %230 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE9push_backERKS0_(%class.GrTBlockList.0* %68, %class.GrShaderVar* nonnull dereferenceable(40) %6) #4
  br label %231

231:                                              ; preds = %189, %229
  call void @_ZN8SkStringD1Ev(%class.SkString* %67) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* %66) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* %65) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #4
  %232 = icmp eq i32 %164, 0
  br i1 %232, label %247, label %233

233:                                              ; preds = %231
  %234 = add nsw i32 %164, -1
  %235 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %165, i64 1
  %236 = icmp eq i32 %234, 0
  br i1 %236, label %162, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %165, i64 1, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %247

241:                                              ; preds = %237, %241
  %242 = phi %"class.GrGeometryProcessor::Attribute"* [ %243, %241 ], [ %235, %237 ]
  %243 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %242, i64 1
  %244 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %242, i64 1, i32 2
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %241, label %247

247:                                              ; preds = %241, %231, %237
  %248 = phi %"class.GrGeometryProcessor::Attribute"* [ %165, %231 ], [ %235, %237 ], [ %243, %241 ]
  %249 = phi i32 [ 0, %231 ], [ %234, %237 ], [ %234, %241 ]
  %250 = icmp eq %"class.GrGeometryProcessor::Attribute"* %248, null
  br i1 %250, label %162, label %163
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLVaryingHandler12addAttributeERK11GrShaderVar(%class.GrGLSLVaryingHandler*, %class.GrShaderVar* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"**
  %6 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %5, align 8, !noalias !23
  %7 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8, !noalias !23
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %2, %14
  %12 = phi %"class.GrBlockAllocator::Block"* [ %20, %14 ], [ %6, %2 ]
  %13 = icmp eq %"class.GrBlockAllocator::Block"* %12, null
  br i1 %13, label %70, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.GrBlockAllocator::Block"* %12 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !23
  %17 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !23
  %19 = icmp eq i32 %18, 0
  %20 = inttoptr i64 %16 to %"class.GrBlockAllocator::Block"*
  br i1 %19, label %11, label %25

21:                                               ; preds = %2
  %22 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"*
  %23 = ptrtoint %"class.GrBlockAllocator::Block"* %6 to i64
  %24 = icmp eq i8* %4, null
  br i1 %24, label %70, label %25

25:                                               ; preds = %14, %21
  %26 = phi i32 [ %9, %21 ], [ %18, %14 ]
  %27 = phi %"class.GrBlockAllocator::Block"* [ %22, %21 ], [ %12, %14 ]
  %28 = phi i64 [ %23, %21 ], [ %16, %14 ]
  %29 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %1, i64 0, i32 3
  br label %30

30:                                               ; preds = %25, %64
  %31 = phi i32 [ %26, %25 ], [ %68, %64 ]
  %32 = phi i32 [ 32, %25 ], [ %67, %64 ]
  %33 = phi %"class.GrBlockAllocator::Block"* [ %27, %25 ], [ %66, %64 ]
  %34 = phi i64 [ %28, %25 ], [ %65, %64 ]
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %33, i64 0, i32 2
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %35
  %39 = bitcast i8* %38 to %class.SkString*
  %40 = tail call zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString* %39, %class.SkString* dereferenceable(8) %29) #4
  br i1 %40, label %72, label %41

41:                                               ; preds = %30
  %42 = add i32 %32, 40
  %43 = icmp sgt i32 %42, %31
  br i1 %43, label %44, label %64

44:                                               ; preds = %41
  %45 = inttoptr i64 %34 to %"class.GrBlockAllocator::Block"*
  %46 = icmp eq i64 %34, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %45, i64 0, i32 0
  %49 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %48, align 8
  %50 = ptrtoint %"class.GrBlockAllocator::Block"* %49 to i64
  %51 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %45, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %47, %57
  %55 = phi %"class.GrBlockAllocator::Block"* [ %63, %57 ], [ %49, %47 ]
  %56 = icmp eq %"class.GrBlockAllocator::Block"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.GrBlockAllocator::Block"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %55, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  %63 = inttoptr i64 %59 to %"class.GrBlockAllocator::Block"*
  br i1 %62, label %54, label %64

64:                                               ; preds = %57, %47, %41
  %65 = phi i64 [ %34, %41 ], [ %50, %47 ], [ %59, %57 ]
  %66 = phi %"class.GrBlockAllocator::Block"* [ %33, %41 ], [ %45, %47 ], [ %55, %57 ]
  %67 = phi i32 [ %42, %41 ], [ 32, %47 ], [ 32, %57 ]
  %68 = phi i32 [ %31, %41 ], [ %52, %47 ], [ %61, %57 ]
  %69 = icmp eq %"class.GrBlockAllocator::Block"* %66, null
  br i1 %69, label %70, label %30

70:                                               ; preds = %11, %44, %64, %54, %21
  %71 = tail call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE9push_backERKS0_(%class.GrTBlockList.0* %3, %class.GrShaderVar* dereferenceable(40) %1)
  br label %72

72:                                               ; preds = %30, %70
  ret void
}

declare zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE9push_backERKS0_(%class.GrTBlockList.0*, %class.GrShaderVar* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.GrTBlockList.0* %0 to %"class.GrBlockAllocator::Block"**
  %4 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !26
  %5 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !noalias !26
  %7 = add i32 %6, 7
  %8 = and i32 %7, -8
  %9 = add nsw i32 %8, 40
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 8, !noalias !26
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %2
  %14 = bitcast %class.GrTBlockList.0* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %14, i32 72, i32 536870944) #4, !noalias !26
  %15 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !26
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4, !noalias !26
  %18 = add i32 %17, 7
  %19 = and i32 %18, -8
  %20 = add nsw i32 %19, 40
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi %"class.GrBlockAllocator::Block"* [ %15, %13 ], [ %4, %2 ]
  %23 = phi i32 [ %19, %13 ], [ %8, %2 ]
  %24 = phi i32 [ %20, %13 ], [ %9, %2 ]
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %22, i64 0, i32 3
  store i32 %24, i32* %25, align 4, !noalias !26
  %26 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !26
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %26, i64 0, i32 4
  store i32 %23, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrTBlockList.0, %class.GrTBlockList.0* %0, i64 0, i32 0, i32 0, i64 44
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = bitcast %"class.GrBlockAllocator::Block"* %26 to i8*
  %33 = sext i32 %23 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to %class.GrShaderVar*
  %36 = bitcast %class.GrShaderVar* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %36, i64 12, i1 false) #4
  %37 = getelementptr inbounds i8, i8* %34, i64 16
  %38 = bitcast i8* %37 to %class.SkString*
  %39 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %1, i64 0, i32 3
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %38, %class.SkString* dereferenceable(8) %39) #4
  %40 = getelementptr inbounds i8, i8* %34, i64 24
  %41 = bitcast i8* %40 to %class.SkString*
  %42 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %1, i64 0, i32 4
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %41, %class.SkString* dereferenceable(8) %42) #4
  %43 = getelementptr inbounds i8, i8* %34, i64 32
  %44 = bitcast i8* %43 to %class.SkString*
  %45 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %1, i64 0, i32 5
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %44, %class.SkString* dereferenceable(8) %45) #4
  ret %class.GrShaderVar* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLVaryingHandler16setNoPerspectiveEv(%class.GrGLSLVaryingHandler* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 9
  %3 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 16
  %4 = bitcast %class.GrGLSLProgramBuilder* %3 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %5 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %4, align 16
  %6 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %5, i64 2
  %7 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %6, align 8
  %8 = tail call %class.GrCaps* %7(%class.GrGLSLProgramBuilder* %3) #4
  %9 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %8, i64 0, i32 2, i32 0
  %10 = load %class.GrShaderCaps*, %class.GrShaderCaps** %9, align 8
  %11 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %10, i64 0, i32 2
  %12 = bitcast i56* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 4096
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %53, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %10, i64 0, i32 11
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %51, label %20

20:                                               ; preds = %16
  %21 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 16
  %22 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %21, i64 0, i32 2
  %23 = bitcast %class.GrGLSLVertexBuilder* %22 to %class.GrGLSLShaderBuilder*
  %24 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %23, i32 16, i8* nonnull %18) #4
  %25 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 16
  %26 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %25, i64 0, i32 7
  %27 = load %class.GrProgramInfo*, %class.GrProgramInfo** %26, align 16
  %28 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %27, i64 0, i32 7
  %29 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %28, align 8
  %30 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %29, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %25, i64 0, i32 3
  %36 = bitcast %class.GrGLSLGeometryBuilder* %35 to %class.GrGLSLShaderBuilder*
  %37 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %36, i32 16, i8* nonnull %18) #4
  %38 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 16
  br label %39

39:                                               ; preds = %20, %34
  %40 = phi %class.GrGLSLProgramBuilder* [ %25, %20 ], [ %38, %34 ]
  %41 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %40, i64 0, i32 4
  %42 = bitcast %class.GrGLSLFragmentShaderBuilder* %41 to i8**
  %43 = load i8*, i8** %42, align 16
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.GrGLSLFragmentShaderBuilder* %41 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = bitcast i8* %48 to %class.GrGLSLShaderBuilder*
  %50 = tail call zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* %49, i32 16, i8* nonnull %18) #4
  br label %51

51:                                               ; preds = %16, %39
  %52 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 10
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8** %52, align 8
  br label %53

53:                                               ; preds = %1, %51
  ret void
}

declare zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLVaryingHandler8finalizeEv(%class.GrGLSLVaryingHandler*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.SkString, align 8
  %13 = alloca %class.SkString, align 8
  %14 = alloca %class.SkString, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %class.SkString, align 8
  %18 = alloca %class.SkString, align 8
  %19 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %20 = bitcast i8* %19 to %"class.GrBlockAllocator::Block"**
  %21 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %20, align 8, !noalias !29
  %22 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8, !noalias !29
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %1, %29
  %27 = phi %"class.GrBlockAllocator::Block"* [ %35, %29 ], [ %21, %1 ]
  %28 = icmp eq %"class.GrBlockAllocator::Block"* %27, null
  br i1 %28, label %66, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.GrBlockAllocator::Block"* %27 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !29
  %32 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %27, i64 0, i32 4
  %33 = load i32, i32* %32, align 8, !noalias !29
  %34 = icmp eq i32 %33, 0
  %35 = inttoptr i64 %31 to %"class.GrBlockAllocator::Block"*
  br i1 %34, label %26, label %40

36:                                               ; preds = %1
  %37 = bitcast i8* %19 to %"class.GrBlockAllocator::Block"*
  %38 = ptrtoint %"class.GrBlockAllocator::Block"* %21 to i64
  %39 = icmp eq i8* %19, null
  br i1 %39, label %66, label %40

40:                                               ; preds = %29, %36
  %41 = phi i32 [ %24, %36 ], [ %33, %29 ]
  %42 = phi %"class.GrBlockAllocator::Block"* [ %37, %36 ], [ %27, %29 ]
  %43 = phi i64 [ %38, %36 ], [ %31, %29 ]
  %44 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 10
  %45 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 4
  %46 = bitcast i32* %2 to i8*
  %47 = bitcast i32* %3 to i8*
  %48 = bitcast %class.SkString* %4 to i8*
  %49 = bitcast %class.SkString* %5 to i8*
  %50 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 5
  %51 = bitcast i32* %6 to i8*
  %52 = bitcast i32* %7 to i8*
  %53 = bitcast %class.SkString* %8 to i8*
  %54 = bitcast %class.SkString* %9 to i8*
  %55 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 6
  %56 = bitcast i32* %10 to i8*
  %57 = bitcast i32* %11 to i8*
  %58 = bitcast %class.SkString* %12 to i8*
  %59 = bitcast %class.SkString* %13 to i8*
  %60 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 7
  %61 = bitcast %class.SkString* %14 to i8*
  %62 = bitcast i32* %15 to i8*
  %63 = bitcast i32* %16 to i8*
  %64 = bitcast %class.SkString* %17 to i8*
  %65 = bitcast %class.SkString* %18 to i8*
  br label %71

66:                                               ; preds = %26, %127, %147, %137, %36
  %67 = bitcast %class.GrGLSLVaryingHandler* %0 to void (%class.GrGLSLVaryingHandler*)***
  %68 = load void (%class.GrGLSLVaryingHandler*)**, void (%class.GrGLSLVaryingHandler*)*** %67, align 16
  %69 = getelementptr inbounds void (%class.GrGLSLVaryingHandler*)*, void (%class.GrGLSLVaryingHandler*)** %68, i64 2
  %70 = load void (%class.GrGLSLVaryingHandler*)*, void (%class.GrGLSLVaryingHandler*)** %69, align 8
  call void %70(%class.GrGLSLVaryingHandler* %0) #4
  ret void

71:                                               ; preds = %40, %147
  %72 = phi i32 [ %41, %40 ], [ %151, %147 ]
  %73 = phi i32 [ 32, %40 ], [ %150, %147 ]
  %74 = phi %"class.GrBlockAllocator::Block"* [ %42, %40 ], [ %149, %147 ]
  %75 = phi i64 [ %43, %40 ], [ %148, %147 ]
  %76 = bitcast %"class.GrBlockAllocator::Block"* %74 to i8*
  %77 = sext i32 %73 to i64
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = getelementptr inbounds i8, i8* %78, i64 4
  %80 = load i8, i8* %79, align 4, !range !32
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %71
  %83 = load i8*, i8** %44, align 8
  br label %84

84:                                               ; preds = %71, %82
  %85 = phi i8* [ %83, %82 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %71 ]
  %86 = getelementptr inbounds i8, i8* %78, i64 24
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds i8, i8* %78, i64 8
  %93 = bitcast i8* %92 to %class.SkString*
  %94 = bitcast i8* %78 to i32*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #4
  store i32 1, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #4
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #4
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %85) #4
  %95 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJRK8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_(%class.GrTBlockList.0* %45, %class.SkString* dereferenceable(8) %93, i32* dereferenceable(4) %94, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %3, %class.SkString* nonnull dereferenceable(8) %4, %class.SkString* nonnull dereferenceable(8) %5)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #4
  %96 = load i32, i32* %87, align 8
  %97 = and i32 %96, 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #4
  store i32 2, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #4
  store i32 -1, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %8) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #4
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %9, i8* %85) #4
  %100 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJRK8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_(%class.GrTBlockList.0* %50, %class.SkString* dereferenceable(8) %93, i32* dereferenceable(4) %94, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, %class.SkString* nonnull dereferenceable(8) %8, %class.SkString* nonnull dereferenceable(8) %9)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #4
  %101 = load i32, i32* %87, align 8
  br label %102

102:                                              ; preds = %91, %84, %99
  %103 = phi i32 [ %96, %91 ], [ %88, %84 ], [ %101, %99 ]
  %104 = and i32 %103, 16
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %124, label %106

106:                                              ; preds = %102
  %107 = and i32 %103, 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, i8* %78, i64 8
  %111 = bitcast i8* %78 to i32*
  br label %117

112:                                              ; preds = %106
  %113 = getelementptr inbounds i8, i8* %78, i64 16
  %114 = bitcast i8* %113 to %class.SkString*
  %115 = bitcast i8* %78 to i32*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #4
  store i32 1, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #4
  store i32 0, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %12) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #4
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %13, i8* %85) #4
  %116 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJRK8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_(%class.GrTBlockList.0* %55, %class.SkString* dereferenceable(8) %114, i32* dereferenceable(4) %115, i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11, %class.SkString* nonnull dereferenceable(8) %12, %class.SkString* nonnull dereferenceable(8) %13)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #4
  br label %117

117:                                              ; preds = %109, %112
  %118 = phi i32* [ %111, %109 ], [ %115, %112 ]
  %119 = phi i8* [ %110, %109 ], [ %113, %112 ]
  %120 = bitcast i8* %119 to %"struct.SkString::Rec"**
  %121 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %120, align 8
  %122 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %121, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #4
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %14, i8* %122) #4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #4
  store i32 2, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #4
  store i32 0, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #4
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %17) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #4
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %18, i8* %85) #4
  %123 = call dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJ8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_(%class.GrTBlockList.0* %60, %class.SkString* nonnull dereferenceable(8) %14, i32* dereferenceable(4) %118, i32* nonnull dereferenceable(4) %15, i32* nonnull dereferenceable(4) %16, %class.SkString* nonnull dereferenceable(8) %17, %class.SkString* nonnull dereferenceable(8) %18)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #4
  br label %124

124:                                              ; preds = %102, %117
  %125 = add i32 %73, 32
  %126 = icmp sgt i32 %125, %72
  br i1 %126, label %127, label %147

127:                                              ; preds = %124
  %128 = inttoptr i64 %75 to %"class.GrBlockAllocator::Block"*
  %129 = icmp eq i64 %75, 0
  br i1 %129, label %66, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %128, i64 0, i32 0
  %132 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %131, align 8
  %133 = ptrtoint %"class.GrBlockAllocator::Block"* %132 to i64
  %134 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %128, i64 0, i32 4
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %147

137:                                              ; preds = %130, %140
  %138 = phi %"class.GrBlockAllocator::Block"* [ %146, %140 ], [ %132, %130 ]
  %139 = icmp eq %"class.GrBlockAllocator::Block"* %138, null
  br i1 %139, label %66, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.GrBlockAllocator::Block"* %138 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %138, i64 0, i32 4
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 0
  %146 = inttoptr i64 %142 to %"class.GrBlockAllocator::Block"*
  br i1 %145, label %137, label %147

147:                                              ; preds = %140, %130, %124
  %148 = phi i64 [ %75, %124 ], [ %133, %130 ], [ %142, %140 ]
  %149 = phi %"class.GrBlockAllocator::Block"* [ %74, %124 ], [ %128, %130 ], [ %138, %140 ]
  %150 = phi i32 [ %125, %124 ], [ 32, %130 ], [ 32, %140 ]
  %151 = phi i32 [ %72, %124 ], [ %135, %130 ], [ %144, %140 ]
  %152 = icmp eq %"class.GrBlockAllocator::Block"* %149, null
  br i1 %152, label %66, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJRK8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_(%class.GrTBlockList.0*, %class.SkString* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %class.SkString* dereferenceable(8), %class.SkString* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca %class.SkString, align 8
  %11 = bitcast %class.GrTBlockList.0* %0 to %"class.GrBlockAllocator::Block"**
  %12 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 16, !noalias !33
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 3
  %14 = load i32, i32* %13, align 4, !noalias !33
  %15 = add i32 %14, 7
  %16 = and i32 %15, -8
  %17 = add nsw i32 %16, 40
  %18 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 2
  %19 = load i32, i32* %18, align 8, !noalias !33
  %20 = icmp sgt i32 %17, %19
  br i1 %20, label %21, label %29

21:                                               ; preds = %7
  %22 = bitcast %class.GrTBlockList.0* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %22, i32 72, i32 536870944) #4, !noalias !33
  %23 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 16, !noalias !33
  %24 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 4, !noalias !33
  %26 = add i32 %25, 7
  %27 = and i32 %26, -8
  %28 = add nsw i32 %27, 40
  br label %29

29:                                               ; preds = %7, %21
  %30 = phi %"class.GrBlockAllocator::Block"* [ %23, %21 ], [ %12, %7 ]
  %31 = phi i32 [ %27, %21 ], [ %16, %7 ]
  %32 = phi i32 [ %28, %21 ], [ %17, %7 ]
  %33 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %30, i64 0, i32 3
  store i32 %32, i32* %33, align 4, !noalias !33
  %34 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 16, !noalias !33
  %35 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %34, i64 0, i32 4
  store i32 %31, i32* %35, align 8
  %36 = getelementptr inbounds %class.GrTBlockList.0, %class.GrTBlockList.0* %0, i64 0, i32 0, i32 0, i64 44
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = bitcast %"class.GrBlockAllocator::Block"* %34 to i8*
  %41 = sext i32 %31 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to %class.GrShaderVar*
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %8, %class.SkString* dereferenceable(8) %1) #4
  %44 = load i32, i32* %2, align 4
  %45 = load i32, i32* %3, align 4
  %46 = load i32, i32* %4, align 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %9, %class.SkString* dereferenceable(8) %5) #4
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %10, %class.SkString* dereferenceable(8) %6) #4
  %47 = bitcast i8* %42 to i32*
  store i32 %44, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 4
  %49 = bitcast i8* %48 to i32*
  store i32 %45, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %42, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 %46, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %42, i64 16
  %53 = bitcast i8* %52 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %53, %class.SkString* nonnull dereferenceable(8) %8) #4
  %54 = getelementptr inbounds i8, i8* %42, i64 24
  %55 = bitcast i8* %54 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %55, %class.SkString* nonnull dereferenceable(8) %9) #4
  %56 = getelementptr inbounds i8, i8* %42, i64 32
  %57 = bitcast i8* %56 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %57, %class.SkString* nonnull dereferenceable(8) %10) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #4
  ret %class.GrShaderVar* %43
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %class.GrShaderVar* @_ZN12GrTBlockListI11GrShaderVarLi1EE12emplace_backIJ8SkStringRK8GrSLTypeNS0_12TypeModifierENS0_Ut_ES3_S3_EEERS0_DpOT_(%class.GrTBlockList.0*, %class.SkString* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %class.SkString* dereferenceable(8), %class.SkString* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca %class.SkString, align 8
  %11 = bitcast %class.GrTBlockList.0* %0 to %"class.GrBlockAllocator::Block"**
  %12 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 16, !noalias !36
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 3
  %14 = load i32, i32* %13, align 4, !noalias !36
  %15 = add i32 %14, 7
  %16 = and i32 %15, -8
  %17 = add nsw i32 %16, 40
  %18 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 2
  %19 = load i32, i32* %18, align 8, !noalias !36
  %20 = icmp sgt i32 %17, %19
  br i1 %20, label %21, label %29

21:                                               ; preds = %7
  %22 = bitcast %class.GrTBlockList.0* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %22, i32 72, i32 536870944) #4, !noalias !36
  %23 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 16, !noalias !36
  %24 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 4, !noalias !36
  %26 = add i32 %25, 7
  %27 = and i32 %26, -8
  %28 = add nsw i32 %27, 40
  br label %29

29:                                               ; preds = %7, %21
  %30 = phi %"class.GrBlockAllocator::Block"* [ %23, %21 ], [ %12, %7 ]
  %31 = phi i32 [ %27, %21 ], [ %16, %7 ]
  %32 = phi i32 [ %28, %21 ], [ %17, %7 ]
  %33 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %30, i64 0, i32 3
  store i32 %32, i32* %33, align 4, !noalias !36
  %34 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %11, align 16, !noalias !36
  %35 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %34, i64 0, i32 4
  store i32 %31, i32* %35, align 8
  %36 = getelementptr inbounds %class.GrTBlockList.0, %class.GrTBlockList.0* %0, i64 0, i32 0, i32 0, i64 44
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = bitcast %"class.GrBlockAllocator::Block"* %34 to i8*
  %41 = sext i32 %31 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to %class.GrShaderVar*
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %8, %class.SkString* dereferenceable(8) %1) #4
  %44 = load i32, i32* %2, align 4
  %45 = load i32, i32* %3, align 4
  %46 = load i32, i32* %4, align 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %9, %class.SkString* dereferenceable(8) %5) #4
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %10, %class.SkString* dereferenceable(8) %6) #4
  %47 = bitcast i8* %42 to i32*
  store i32 %44, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 4
  %49 = bitcast i8* %48 to i32*
  store i32 %45, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %42, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 %46, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %42, i64 16
  %53 = bitcast i8* %52 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %53, %class.SkString* nonnull dereferenceable(8) %8) #4
  %54 = getelementptr inbounds i8, i8* %42, i64 24
  %55 = bitcast i8* %54 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %55, %class.SkString* nonnull dereferenceable(8) %9) #4
  %56 = getelementptr inbounds i8, i8* %42, i64 32
  %57 = bitcast i8* %56 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %57, %class.SkString* nonnull dereferenceable(8) %10) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #4
  ret %class.GrShaderVar* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* nocapture readonly, %class.GrTBlockList.0* dereferenceable(96), %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrTBlockList.0, %class.GrTBlockList.0* %1, i64 0, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"**
  %6 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %5, align 8, !noalias !39
  %7 = getelementptr inbounds %class.GrTBlockList.0, %class.GrTBlockList.0* %1, i64 0, i32 0, i32 0, i64 40
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8, !noalias !39
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %3, %14
  %12 = phi %"class.GrBlockAllocator::Block"* [ %20, %14 ], [ %6, %3 ]
  %13 = icmp eq %"class.GrBlockAllocator::Block"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.GrBlockAllocator::Block"* %12 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !39
  %17 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !39
  %19 = icmp eq i32 %18, 0
  %20 = inttoptr i64 %16 to %"class.GrBlockAllocator::Block"*
  br i1 %19, label %11, label %25

21:                                               ; preds = %3
  %22 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"*
  %23 = ptrtoint %"class.GrBlockAllocator::Block"* %6 to i64
  %24 = icmp eq i8* %4, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %14, %21
  %26 = phi i32 [ %9, %21 ], [ %18, %14 ]
  %27 = phi %"class.GrBlockAllocator::Block"* [ %22, %21 ], [ %12, %14 ]
  %28 = phi i64 [ %23, %21 ], [ %16, %14 ]
  %29 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 9
  br label %31

30:                                               ; preds = %11, %50, %70, %60, %21
  ret void

31:                                               ; preds = %25, %70
  %32 = phi i32 [ %26, %25 ], [ %74, %70 ]
  %33 = phi i32 [ 32, %25 ], [ %73, %70 ]
  %34 = phi %"class.GrBlockAllocator::Block"* [ %27, %25 ], [ %72, %70 ]
  %35 = phi i64 [ %28, %25 ], [ %71, %70 ]
  %36 = bitcast %"class.GrBlockAllocator::Block"* %34 to i8*
  %37 = sext i32 %33 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to %class.GrShaderVar*
  %40 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %29, align 16
  %41 = bitcast %class.GrGLSLProgramBuilder* %40 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %42 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %41, align 16
  %43 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %42, i64 2
  %44 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %43, align 8
  %45 = tail call %class.GrCaps* %44(%class.GrGLSLProgramBuilder* %40) #4
  %46 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %45, i64 0, i32 2, i32 0
  %47 = load %class.GrShaderCaps*, %class.GrShaderCaps** %46, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %39, %class.GrShaderCaps* %47, %class.SkString* %2) #4
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #4
  %48 = add i32 %33, 40
  %49 = icmp sgt i32 %48, %32
  br i1 %49, label %50, label %70

50:                                               ; preds = %31
  %51 = inttoptr i64 %35 to %"class.GrBlockAllocator::Block"*
  %52 = icmp eq i64 %35, 0
  br i1 %52, label %30, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %51, i64 0, i32 0
  %55 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %54, align 8
  %56 = ptrtoint %"class.GrBlockAllocator::Block"* %55 to i64
  %57 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %51, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %53, %63
  %61 = phi %"class.GrBlockAllocator::Block"* [ %69, %63 ], [ %55, %53 ]
  %62 = icmp eq %"class.GrBlockAllocator::Block"* %61, null
  br i1 %62, label %30, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.GrBlockAllocator::Block"* %61 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %61, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  %69 = inttoptr i64 %65 to %"class.GrBlockAllocator::Block"*
  br i1 %68, label %60, label %70

70:                                               ; preds = %63, %53, %31
  %71 = phi i64 [ %35, %31 ], [ %56, %53 ], [ %65, %63 ]
  %72 = phi %"class.GrBlockAllocator::Block"* [ %34, %31 ], [ %51, %53 ], [ %61, %63 ]
  %73 = phi i32 [ %48, %31 ], [ 32, %53 ], [ 32, %63 ]
  %74 = phi i32 [ %32, %31 ], [ %58, %53 ], [ %67, %63 ]
  %75 = icmp eq %"class.GrBlockAllocator::Block"* %72, null
  br i1 %75, label %30, label %31
}

declare void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar*, %class.GrShaderCaps*, %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrGLSLVaryingHandler14getVertexDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler*, %class.SkString*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3
  tail call void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* %0, %class.GrTBlockList.0* dereferenceable(96) %4, %class.SkString* %1)
  %5 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 4
  tail call void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* %0, %class.GrTBlockList.0* dereferenceable(96) %5, %class.SkString* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrGLSLVaryingHandler12getGeomDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler*, %class.SkString*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 5
  tail call void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* %0, %class.GrTBlockList.0* dereferenceable(96) %4, %class.SkString* %1)
  %5 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 6
  tail call void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* %0, %class.GrTBlockList.0* dereferenceable(96) %5, %class.SkString* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrGLSLVaryingHandler12getFragDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler*, %class.SkString*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 7
  tail call void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* %0, %class.GrTBlockList.0* dereferenceable(96) %4, %class.SkString* %1)
  %5 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 8
  tail call void @_ZNK20GrGLSLVaryingHandler11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLVaryingHandler* %0, %class.GrTBlockList.0* dereferenceable(96) %5, %class.SkString* %2)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator*, i32, i32) local_unnamed_addr #2

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!4 = distinct !{!4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!13 = distinct !{!13, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb1ELb0EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_4LastES7_EEXadL_ZNS3_9IncrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb1ELb0EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_4LastES7_EEXadL_ZNS3_9IncrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!19 = distinct !{!19, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb1ELb0EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_4LastES7_EEXadL_ZNS3_9IncrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb1ELb0EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_4LastES7_EEXadL_ZNS3_9IncrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb1ELb0EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_4LastES7_EEXadL_ZNS3_9IncrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb1ELb0EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_4LastES7_EEXadL_ZNS3_9IncrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!28 = distinct !{!28, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK18BlockIndexIteratorIRN20GrGLSLVaryingHandler11VaryingInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK18BlockIndexIteratorIRN20GrGLSLVaryingHandler11VaryingInfoELb1ELb0EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
!32 = !{i8 0, i8 2}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!35 = distinct !{!35, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!38 = distinct !{!38, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK18BlockIndexIteratorIRK11GrShaderVarLb1ELb1EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemES8_iEEE5beginEv: argument 0"}
!41 = distinct !{!41, !"_ZNK18BlockIndexIteratorIRK11GrShaderVarLb1ELb1EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemES8_iEEE5beginEv"}
