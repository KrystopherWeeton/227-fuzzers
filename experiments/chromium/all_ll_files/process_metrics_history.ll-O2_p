; ModuleID = '../../chrome/browser/performance_monitor/process_metrics_history.cc'
source_filename = "../../chrome/browser/performance_monitor/process_metrics_history.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.performance_monitor::ProcessMetricsHistory" = type <{ %"struct.performance_monitor::ProcessMetadata", [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"struct.performance_monitor::ProcessMetadata" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ProcessMetrics"* }
%"class.base::ProcessMetrics" = type { i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZN19performance_monitor21ProcessMetricsHistoryC1Ev = hidden unnamed_addr alias void (%"class.performance_monitor::ProcessMetricsHistory"*), void (%"class.performance_monitor::ProcessMetricsHistory"*)* @_ZN19performance_monitor21ProcessMetricsHistoryC2Ev
@_ZN19performance_monitor21ProcessMetricsHistoryD1Ev = hidden unnamed_addr alias void (%"class.performance_monitor::ProcessMetricsHistory"*), void (%"class.performance_monitor::ProcessMetricsHistory"*)* @_ZN19performance_monitor21ProcessMetricsHistoryD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN19performance_monitor21ProcessMetricsHistoryC2Ev(%"class.performance_monitor::ProcessMetricsHistory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor21ProcessMetricsHistoryD2Ev(%"class.performance_monitor::ProcessMetricsHistory"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::ProcessMetrics"*, %"class.base::ProcessMetrics"** %2, align 8
  store %"class.base::ProcessMetrics"* null, %"class.base::ProcessMetrics"** %2, align 8
  %4 = icmp eq %"class.base::ProcessMetrics"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"* nonnull %3) #6
  %6 = bitcast %"class.base::ProcessMetrics"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor21ProcessMetricsHistory10InitializeERKNS_15ProcessMetadataEi(%"class.performance_monitor::ProcessMetricsHistory"* nocapture, %"struct.performance_monitor::ProcessMetadata"* nocapture readonly dereferenceable(12), i32) local_unnamed_addr #1 align 2 {
  %4 = bitcast %"class.performance_monitor::ProcessMetricsHistory"* %0 to i8*
  %5 = bitcast %"struct.performance_monitor::ProcessMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 12, i1 false)
  %6 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 3
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = tail call %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics20CreateProcessMetricsEi(i32 %8) #6
  %10 = ptrtoint %"class.base::ProcessMetrics"* %9 to i64
  %11 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::ProcessMetrics"*, %"class.base::ProcessMetrics"** %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %"class.base::ProcessMetrics"* %13, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  tail call void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"* nonnull %13) #6
  %17 = bitcast %"class.base::ProcessMetrics"* %13 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %16, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics20CreateProcessMetricsEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { double, i32 } @_ZN19performance_monitor21ProcessMetricsHistory13SampleMetricsEv(%"class.performance_monitor::ProcessMetricsHistory"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsHistory", %"class.performance_monitor::ProcessMetricsHistory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::ProcessMetrics"*, %"class.base::ProcessMetrics"** %2, align 8
  %4 = tail call double @_ZN4base14ProcessMetrics30GetPlatformIndependentCPUUsageEv(%"class.base::ProcessMetrics"* %3) #6
  %5 = load %"class.base::ProcessMetrics"*, %"class.base::ProcessMetrics"** %2, align 8
  %6 = tail call i32 @_ZN4base14ProcessMetrics23GetIdleWakeupsPerSecondEv(%"class.base::ProcessMetrics"* %5) #6
  %7 = insertvalue { double, i32 } undef, double %4, 0
  %8 = insertvalue { double, i32 } %7, i32 %6, 1
  ret { double, i32 } %8
}

declare double @_ZN4base14ProcessMetrics30GetPlatformIndependentCPUUsageEv(%"class.base::ProcessMetrics"*) local_unnamed_addr #3

declare i32 @_ZN4base14ProcessMetrics23GetIdleWakeupsPerSecondEv(%"class.base::ProcessMetrics"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
