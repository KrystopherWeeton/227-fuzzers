; ModuleID = '../../third_party/skia/src/pathops/SkPathOpsAsWinding.cpp'
source_filename = "../../third_party/skia/src/pathops/SkPathOpsAsWinding.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }
%struct.SkDQuad = type { [3 x %struct.SkDPoint] }
%struct.SkDPoint = type { double, double }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.Contour*, %struct.Contour*, %"class.std::__1::__compressed_pair.16" }
%struct.Contour = type <{ %"class.std::__1::vector.13", %struct.SkRect, %struct.SkPoint, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %struct.Contour**, %struct.Contour**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.Contour** }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.Contour* }
%class.OpAsWinding = type { %class.SkPath* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.SkDConic = type { %struct.SkDQuad, float }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%struct.SkDLine = type { [2 x %struct.SkDPoint] }

$_ZN11OpAsWinding13contourBoundsEPNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE = comdat any

$_ZN11OpAsWinding8inParentER7ContourS1_ = comdat any

$_ZN11OpAsWinding8nextEdgeER7ContourNS_4EdgeE = comdat any

$_ZN11OpAsWinding22checkContainerChildrenEP7ContourS1_ = comdat any

$_ZN11OpAsWinding11markReverseEP7ContourS1_ = comdat any

$_ZN11OpAsWinding21reverseMarkedContoursERNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE14SkPathFillType = comdat any

$_ZNSt3__16vectorI7ContourNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJR6SkRectRiS8_EEEvDpOT_ = comdat any

@_ZL8kPtIndex = internal unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 0], align 16
@_ZL8kPtCount = internal unnamed_addr constant [6 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 0], align 16
@_ZL14CurveIntercept = internal unnamed_addr constant [10 x i32 (%struct.SkPoint*, float, float, double*)*] [i32 (%struct.SkPoint*, float, float, double*)* null, i32 (%struct.SkPoint*, float, float, double*)* null, i32 (%struct.SkPoint*, float, float, double*)* @_ZL16line_intercept_hPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL16line_intercept_vPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL16quad_intercept_hPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL16quad_intercept_vPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL17conic_intercept_hPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL17conic_intercept_vPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL17cubic_intercept_hPK7SkPointffPd, i32 (%struct.SkPoint*, float, float, double*)* @_ZL17cubic_intercept_vPK7SkPointffPd], align 16
@_ZL13CurvePointAtT = internal unnamed_addr constant [5 x <2 x float> (%struct.SkPoint*, float, double)*] [<2 x float> (%struct.SkPoint*, float, double)* null, <2 x float> (%struct.SkPoint*, float, double)* @_ZL13fline_xy_at_tPK7SkPointfd, <2 x float> (%struct.SkPoint*, float, double)* @_ZL13fquad_xy_at_tPK7SkPointfd, <2 x float> (%struct.SkPoint*, float, double)* @_ZL14fconic_xy_at_tPK7SkPointfd, <2 x float> (%struct.SkPoint*, float, double)* @_ZL14fcubic_xy_at_tPK7SkPointfd], align 16
@_ZL13CurveSlopeAtT = internal unnamed_addr constant [5 x <2 x float> (%struct.SkPoint*, float, double)*] [<2 x float> (%struct.SkPoint*, float, double)* null, <2 x float> (%struct.SkPoint*, float, double)* @_ZL15fline_dxdy_at_tPK7SkPointfd, <2 x float> (%struct.SkPoint*, float, double)* @_ZL15fquad_dxdy_at_tPK7SkPointfd, <2 x float> (%struct.SkPoint*, float, double)* @_ZL16fconic_dxdy_at_tPK7SkPointfd, <2 x float> (%struct.SkPoint*, float, double)* @_ZL16fcubic_dxdy_at_tPK7SkPointfd], align 16
@__const._ZL9left_edgeP7SkPointN6SkPath4VerbEfPN7Contour9DirectionE.conic = private unnamed_addr constant { %struct.SkDQuad, float, [4 x i8] } { %struct.SkDQuad { [3 x %struct.SkDPoint] [%struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, %struct.SkDPoint { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }] }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@__const._ZN11OpAsWinding21reverseMarkedContoursERNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE14SkPathFillType.reverse = private unnamed_addr constant { %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 } { %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.1 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.2 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@switch.table._ZN11OpAsWinding13contourBoundsEPNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE = private unnamed_addr constant [6 x i64] [i64 1, i64 1, i64 2, i64 2, i64 3, i64 0], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z9AsWindingRK6SkPathPS_(%class.SkPath* dereferenceable(16), %class.SkPath*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %class.OpAsWinding, align 8
  %5 = alloca %struct.Contour, align 8
  %6 = alloca %class.SkPath, align 8
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %8 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 9
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 10
  %14 = load i8, i8* %13, align 1, !range !2
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 1
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 3, i32 0
  %18 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 3, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %16, %struct.SkPoint* %18, i32 %20) #12
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 10
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 1
  store i8 0, i8* %9, align 8
  br label %24

24:                                               ; preds = %12, %15
  %25 = phi i8 [ %14, %12 ], [ %23, %15 ]
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %179, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %29 = load i8, i8* %28, align 2
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = and i8 %29, 3
  %34 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %0) #12
  %35 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 2
  %37 = and i8 %36, -4
  %38 = or i8 %37, %33
  store i8 %38, i8* %35, align 2
  br label %179

39:                                               ; preds = %27
  %40 = and i8 %29, 2
  %41 = zext i8 %40 to i32
  %42 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 4, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = tail call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #12
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %46, %39
  %50 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %0) #12
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %52 = load i8, i8* %51, align 2
  %53 = and i8 %52, -4
  %54 = or i8 %53, %40
  store i8 %54, i8* %51, align 2
  br label %179

55:                                               ; preds = %46
  %56 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #12
  %59 = bitcast %class.OpAsWinding* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  %60 = getelementptr inbounds %class.OpAsWinding, %class.OpAsWinding* %4, i64 0, i32 0
  store %class.SkPath* %0, %class.SkPath** %60, align 8
  call void @_ZN11OpAsWinding13contourBoundsEPNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE(%class.OpAsWinding* nonnull %4, %"class.std::__1::vector"* nonnull %3)
  %61 = bitcast %struct.Contour** %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector"* %3 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 6
  %67 = icmp ult i64 %66, 2
  %68 = inttoptr i64 %64 to %struct.Contour*
  %69 = inttoptr i64 %62 to %struct.Contour*
  br i1 %67, label %70, label %76

70:                                               ; preds = %55
  %71 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %0) #12
  %72 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %73 = load i8, i8* %72, align 2
  %74 = and i8 %73, -4
  %75 = or i8 %74, %40
  store i8 %75, i8* %72, align 2
  br label %152

76:                                               ; preds = %55
  %77 = bitcast %struct.Contour* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #12
  %78 = getelementptr inbounds %struct.Contour, %struct.Contour* %5, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %struct.Contour, %struct.Contour* %5, i64 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %struct.Contour, %struct.Contour* %5, i64 0, i32 2, i32 0
  %81 = getelementptr inbounds %struct.Contour, %struct.Contour* %5, i64 0, i32 2, i32 1
  %82 = getelementptr inbounds %struct.Contour, %struct.Contour* %5, i64 0, i32 3
  %83 = bitcast i32* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 -86, i64 16, i1 false)
  %84 = bitcast %struct.Contour* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 40, i1 false)
  store float 0x47EFFFFFE0000000, float* %80, align 8
  store float 0x47EFFFFFE0000000, float* %81, align 4
  %85 = bitcast i32* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 14, i1 false)
  %86 = icmp eq %struct.Contour* %68, %69
  br i1 %86, label %107, label %103

87:                                               ; preds = %103
  %88 = load %struct.Contour**, %struct.Contour*** %78, align 8
  %89 = load %struct.Contour**, %struct.Contour*** %79, align 8
  %90 = icmp eq %struct.Contour** %88, %89
  br i1 %90, label %107, label %93

91:                                               ; preds = %93
  %92 = icmp eq %struct.Contour** %102, %89
  br i1 %92, label %107, label %93

93:                                               ; preds = %87, %91
  %94 = phi %struct.Contour** [ %102, %91 ], [ %88, %87 ]
  %95 = load %struct.Contour*, %struct.Contour** %94, align 8
  %96 = getelementptr inbounds %struct.Contour, %struct.Contour* %95, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast %struct.Contour*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %struct.Contour* %95 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %98, %100
  %102 = getelementptr inbounds %struct.Contour*, %struct.Contour** %94, i64 1
  br i1 %101, label %91, label %115

103:                                              ; preds = %76, %103
  %104 = phi %struct.Contour* [ %105, %103 ], [ %68, %76 ]
  call void @_ZN11OpAsWinding8inParentER7ContourS1_(%class.OpAsWinding* nonnull %4, %struct.Contour* dereferenceable(64) %104, %struct.Contour* nonnull dereferenceable(64) %5)
  %105 = getelementptr inbounds %struct.Contour, %struct.Contour* %104, i64 1
  %106 = icmp eq %struct.Contour* %105, %69
  br i1 %106, label %87, label %103

107:                                              ; preds = %91, %76, %87
  %108 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %0) #12
  %109 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %110 = load i8, i8* %109, align 2
  %111 = and i8 %110, -4
  %112 = or i8 %111, %40
  store i8 %112, i8* %109, align 2
  br label %143

113:                                              ; preds = %115
  %114 = icmp eq %struct.Contour** %120, %89
  br i1 %114, label %121, label %115

115:                                              ; preds = %93, %113
  %116 = phi %struct.Contour** [ %120, %113 ], [ %88, %93 ]
  %117 = load %struct.Contour*, %struct.Contour** %116, align 8
  %118 = call i32 @_ZN11OpAsWinding8nextEdgeER7ContourNS_4EdgeE(%class.OpAsWinding* nonnull %4, %struct.Contour* dereferenceable(64) %117, i32 0)
  %119 = call zeroext i1 @_ZN11OpAsWinding22checkContainerChildrenEP7ContourS1_(%class.OpAsWinding* nonnull %4, %struct.Contour* null, %struct.Contour* %117)
  %120 = getelementptr inbounds %struct.Contour*, %struct.Contour** %116, i64 1
  br i1 %119, label %113, label %143

121:                                              ; preds = %113
  %122 = load %struct.Contour**, %struct.Contour*** %78, align 8
  %123 = load %struct.Contour**, %struct.Contour*** %79, align 8
  %124 = icmp eq %struct.Contour** %122, %123
  br i1 %124, label %134, label %126

125:                                              ; preds = %126
  br i1 %131, label %140, label %134

126:                                              ; preds = %121, %126
  %127 = phi i1 [ %131, %126 ], [ false, %121 ]
  %128 = phi %struct.Contour** [ %132, %126 ], [ %122, %121 ]
  %129 = load %struct.Contour*, %struct.Contour** %128, align 8
  %130 = call zeroext i1 @_ZN11OpAsWinding11markReverseEP7ContourS1_(%class.OpAsWinding* nonnull %4, %struct.Contour* null, %struct.Contour* %129)
  %131 = or i1 %127, %130
  %132 = getelementptr inbounds %struct.Contour*, %struct.Contour** %128, i64 1
  %133 = icmp eq %struct.Contour** %132, %123
  br i1 %133, label %125, label %126

134:                                              ; preds = %121, %125
  %135 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %0) #12
  %136 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %137 = load i8, i8* %136, align 2
  %138 = and i8 %137, -4
  %139 = or i8 %138, %40
  store i8 %139, i8* %136, align 2
  br label %143

140:                                              ; preds = %125
  %141 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #12
  call void @_ZN11OpAsWinding21reverseMarkedContoursERNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE14SkPathFillType(%class.SkPath* nonnull sret %6, %class.OpAsWinding* nonnull %4, %"class.std::__1::vector"* nonnull dereferenceable(24) %3, i32 %41)
  %142 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* nonnull dereferenceable(16) %6) #12
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #12
  br label %143

143:                                              ; preds = %115, %134, %140, %107
  %144 = phi i1 [ true, %107 ], [ true, %140 ], [ true, %134 ], [ false, %115 ]
  %145 = load %struct.Contour**, %struct.Contour*** %78, align 8
  %146 = icmp eq %struct.Contour** %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %143
  %148 = ptrtoint %struct.Contour** %145 to i64
  %149 = bitcast %struct.Contour*** %79 to i64*
  store i64 %148, i64* %149, align 8
  %150 = bitcast %struct.Contour** %145 to i8*
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %143, %147
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %77) #12
  br label %152

152:                                              ; preds = %151, %70
  %153 = phi i1 [ true, %70 ], [ %144, %151 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  %154 = load %struct.Contour*, %struct.Contour** %57, align 8
  %155 = icmp eq %struct.Contour* %154, null
  br i1 %155, label %178, label %156

156:                                              ; preds = %152
  %157 = bitcast %struct.Contour* %154 to i8*
  %158 = load %struct.Contour*, %struct.Contour** %58, align 8
  %159 = icmp eq %struct.Contour* %158, %154
  br i1 %159, label %176, label %160

160:                                              ; preds = %156, %171
  %161 = phi %struct.Contour* [ %162, %171 ], [ %158, %156 ]
  %162 = getelementptr inbounds %struct.Contour, %struct.Contour* %161, i64 -1
  %163 = getelementptr inbounds %struct.Contour, %struct.Contour* %162, i64 0, i32 0, i32 0, i32 0
  %164 = load %struct.Contour**, %struct.Contour*** %163, align 8
  %165 = icmp eq %struct.Contour** %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %160
  %167 = ptrtoint %struct.Contour** %164 to i64
  %168 = getelementptr inbounds %struct.Contour, %struct.Contour* %161, i64 -1, i32 0, i32 0, i32 1
  %169 = bitcast %struct.Contour*** %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = bitcast %struct.Contour** %164 to i8*
  call void @_ZdlPv(i8* %170) #13
  br label %171

171:                                              ; preds = %166, %160
  %172 = icmp eq %struct.Contour* %162, %154
  br i1 %172, label %173, label %160

173:                                              ; preds = %171
  %174 = bitcast %"class.std::__1::vector"* %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %173, %156
  %177 = phi i8* [ %175, %173 ], [ %157, %156 ]
  store %struct.Contour* %154, %struct.Contour** %58, align 8
  call void @_ZdlPv(i8* %177) #13
  br label %178

178:                                              ; preds = %152, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  br label %179

179:                                              ; preds = %24, %32, %49, %178
  %180 = phi i1 [ false, %24 ], [ true, %32 ], [ true, %49 ], [ %153, %178 ]
  ret i1 %180
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11OpAsWinding13contourBoundsEPNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE(%class.OpAsWinding*, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.SkRect, align 4
  %11 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 0
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 2
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 16, i1 false) #12
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #12
  store i32 0, i32* %8, align 4
  %17 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #12
  store i32 0, i32* %9, align 4
  %18 = getelementptr inbounds %class.OpAsWinding, %class.OpAsWinding* %0, i64 0, i32 0
  %19 = load %class.SkPath*, %class.SkPath** %18, align 8
  %20 = getelementptr inbounds %class.SkPath, %class.SkPath* %19, i64 0, i32 0, i32 0
  %21 = load %class.SkPathRef*, %class.SkPathRef** %20, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 4, i32 0
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 9
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2
  %29 = inttoptr i64 %24 to i8*
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 10
  %31 = load i8, i8* %30, align 1, !range !2
  br label %44

32:                                               ; preds = %2
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 1
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 3, i32 0
  %35 = load %struct.SkPoint*, %struct.SkPoint** %34, align 8
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 3, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %33, %struct.SkPoint* %35, i32 %37) #12
  %39 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 10
  %40 = zext i1 %38 to i8
  store i8 %40, i8* %39, align 1
  store i8 0, i8* %25, align 8
  %41 = load %class.SkPathRef*, %class.SkPathRef** %20, align 8
  %42 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %41, i64 0, i32 4, i32 0
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %32, %28
  %45 = phi i8* [ %29, %28 ], [ %43, %32 ]
  %46 = phi %class.SkPathRef* [ %21, %28 ], [ %41, %32 ]
  %47 = phi i8 [ %31, %28 ], [ %40, %32 ]
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %44
  %50 = icmp eq i8* %45, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 4, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %45, i64 %54
  br label %56

56:                                               ; preds = %44, %49, %51
  %57 = phi i8* [ %55, %51 ], [ null, %49 ], [ %45, %44 ]
  %58 = inttoptr i64 %24 to i8*
  %59 = icmp eq i8* %57, %58
  br i1 %59, label %203, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 3, i32 0
  %62 = bitcast %struct.SkPoint** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %struct.SkRect* %10 to i8*
  %65 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  %66 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %67 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %68 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %69 = bitcast float* %3 to i8*
  %70 = bitcast %struct.SkRect* %7 to i32*
  %71 = bitcast float* %4 to i8*
  %72 = bitcast float* %13 to i32*
  %73 = bitcast float* %5 to i8*
  %74 = bitcast float* %14 to i32*
  %75 = bitcast float* %6 to i8*
  %76 = bitcast float* %15 to i32*
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %struct.Contour** %77 to i64*
  %80 = bitcast %struct.SkRect* %10 to i8*
  br label %90

81:                                               ; preds = %174
  %82 = load float, float* %12, align 4
  %83 = load float, float* %14, align 4
  %84 = add i32 %168, 2
  %85 = fcmp olt float %82, %83
  br i1 %85, label %86, label %203

86:                                               ; preds = %81
  %87 = load float, float* %13, align 4
  %88 = load float, float* %15, align 4
  %89 = fcmp uge float %87, %88
  br i1 %89, label %203, label %181

90:                                               ; preds = %60, %174
  %91 = phi i32 [ 0, %60 ], [ %169, %174 ]
  %92 = phi i8* [ %58, %60 ], [ %170, %174 ]
  %93 = phi i64 [ %63, %60 ], [ %179, %174 ]
  %94 = load i8, i8* %92, align 1, !noalias !3
  switch i8 %94, label %97 [
    i8 0, label %98
    i8 1, label %131
    i8 2, label %131
    i8 3, label %131
    i8 4, label %131
    i8 5, label %95
  ]

95:                                               ; preds = %90
  %96 = inttoptr i64 %93 to %struct.SkPoint*
  br label %166

97:                                               ; preds = %90
  call void @llvm.trap() #12, !noalias !3
  unreachable

98:                                               ; preds = %90
  %99 = inttoptr i64 %93 to %struct.SkPoint*
  %100 = load float, float* %12, align 4
  %101 = load float, float* %14, align 4
  %102 = fcmp olt float %100, %101
  br i1 %102, label %103, label %129

103:                                              ; preds = %98
  %104 = load float, float* %13, align 4
  %105 = load float, float* %15, align 4
  %106 = fcmp uge float %104, %105
  br i1 %106, label %129, label %107

107:                                              ; preds = %103
  %108 = load %struct.Contour*, %struct.Contour** %77, align 8
  %109 = load %struct.Contour*, %struct.Contour** %78, align 8
  %110 = icmp ult %struct.Contour* %108, %109
  br i1 %110, label %111, label %125

111:                                              ; preds = %107
  %112 = load i32, i32* %8, align 4
  %113 = bitcast %struct.Contour* %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #12
  %114 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 1
  %115 = bitcast %struct.SkRect* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 4 %11, i64 16, i1 false) #12
  %116 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 2, i32 0
  store float 0x47EFFFFFE0000000, float* %116, align 8
  %117 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 2, i32 1
  store float 0x47EFFFFFE0000000, float* %117, align 4
  %118 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 3
  store i32 %112, i32* %118, align 8
  %119 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 4
  store i32 %91, i32* %119, align 4
  %120 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 5
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 6
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 0, i32 7
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %struct.Contour, %struct.Contour* %108, i64 1
  %124 = ptrtoint %struct.Contour* %123 to i64
  store i64 %124, i64* %79, align 8
  br label %127

125:                                              ; preds = %107
  call void @_ZNSt3__16vectorI7ContourNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJR6SkRectRiS8_EEEvDpOT_(%"class.std::__1::vector"* %1, %struct.SkRect* nonnull dereferenceable(16) %7, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9) #12
  %126 = load i32, i32* %9, align 4
  br label %127

127:                                              ; preds = %111, %125
  %128 = phi i32 [ %91, %111 ], [ %126, %125 ]
  store i32 %128, i32* %8, align 4
  br label %129

129:                                              ; preds = %103, %127, %98
  %130 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %7, %struct.SkPoint* %99, i32 1) #12
  br label %166

131:                                              ; preds = %90, %90, %90, %90
  %132 = inttoptr i64 %93 to %struct.SkPoint*
  %133 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %132, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #12
  %134 = zext i8 %94 to i64
  %135 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZL8kPtIndex, i64 0, i64 %134
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %80, i8 -1, i64 16, i1 false)
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %133, i64 %137
  %139 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZL8kPtCount, i64 0, i64 %134
  %140 = load i32, i32* %139, align 4
  %141 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %10, %struct.SkPoint* %138, i32 %140) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  %142 = load float, float* %65, align 4
  store float %142, float* %3, align 4
  %143 = load float, float* %12, align 4
  %144 = fcmp olt float %142, %143
  %145 = select i1 %144, float* %3, float* %12
  %146 = bitcast float* %145 to i32*
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %70, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71)
  %148 = load float, float* %66, align 4
  store float %148, float* %4, align 4
  %149 = load float, float* %13, align 4
  %150 = fcmp olt float %148, %149
  %151 = select i1 %150, float* %4, float* %13
  %152 = bitcast float* %151 to i32*
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %72, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73)
  %154 = load float, float* %67, align 4
  store float %154, float* %5, align 4
  %155 = load float, float* %14, align 4
  %156 = fcmp olt float %155, %154
  %157 = select i1 %156, float* %5, float* %14
  %158 = bitcast float* %157 to i32*
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %74, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75)
  %160 = load float, float* %68, align 4
  store float %160, float* %6, align 4
  %161 = load float, float* %15, align 4
  %162 = fcmp olt float %161, %160
  %163 = select i1 %162, float* %6, float* %15
  %164 = bitcast float* %163 to i32*
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %76, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #12
  br label %166

166:                                              ; preds = %95, %129, %131
  %167 = phi %struct.SkPoint* [ %99, %129 ], [ %132, %131 ], [ %96, %95 ]
  %168 = load i32, i32* %9, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %9, align 4
  %170 = getelementptr inbounds i8, i8* %92, i64 1
  %171 = load i8, i8* %92, align 1
  %172 = icmp ult i8 %171, 6
  br i1 %172, label %174, label %173

173:                                              ; preds = %166
  call void @llvm.trap() #12
  unreachable

174:                                              ; preds = %166
  %175 = sext i8 %171 to i64
  %176 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN11OpAsWinding13contourBoundsEPNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE, i64 0, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %167, i64 %177
  %179 = ptrtoint %struct.SkPoint* %178 to i64
  %180 = icmp eq i8* %57, %170
  br i1 %180, label %81, label %90

181:                                              ; preds = %86
  store i32 %84, i32* %9, align 4
  %182 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %183 = load %struct.Contour*, %struct.Contour** %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %185 = load %struct.Contour*, %struct.Contour** %184, align 8
  %186 = icmp ult %struct.Contour* %183, %185
  br i1 %186, label %187, label %202

187:                                              ; preds = %181
  %188 = load i32, i32* %8, align 4
  %189 = bitcast %struct.Contour* %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #12
  %190 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 1
  %191 = bitcast %struct.SkRect* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* nonnull align 4 %11, i64 16, i1 false) #12
  %192 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 2, i32 0
  store float 0x47EFFFFFE0000000, float* %192, align 8
  %193 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 2, i32 1
  store float 0x47EFFFFFE0000000, float* %193, align 4
  %194 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 3
  store i32 %188, i32* %194, align 8
  %195 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 4
  store i32 %84, i32* %195, align 4
  %196 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 5
  store i32 0, i32* %196, align 8
  %197 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 6
  store i8 0, i8* %197, align 4
  %198 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 0, i32 7
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds %struct.Contour, %struct.Contour* %183, i64 1
  %200 = ptrtoint %struct.Contour* %199 to i64
  %201 = bitcast %struct.Contour** %182 to i64*
  store i64 %200, i64* %201, align 8
  br label %203

202:                                              ; preds = %181
  call void @_ZNSt3__16vectorI7ContourNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJR6SkRectRiS8_EEEvDpOT_(%"class.std::__1::vector"* %1, %struct.SkRect* nonnull dereferenceable(16) %7, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9) #12
  br label %203

203:                                              ; preds = %56, %81, %202, %187, %86
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11OpAsWinding8inParentER7ContourS1_(%class.OpAsWinding*, %struct.Contour* dereferenceable(64), %struct.Contour* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %struct.Contour**, %struct.Contour*** %4, align 8
  %6 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 0, i32 0, i32 1
  %7 = load %struct.Contour**, %struct.Contour*** %6, align 8
  %8 = icmp eq %struct.Contour** %5, %7
  br i1 %8, label %59, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 2
  %13 = load float, float* %12, align 4
  %14 = fcmp olt float %11, %13
  %15 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 3
  br label %23

17:                                               ; preds = %50
  %18 = getelementptr inbounds %struct.Contour, %struct.Contour* %31, i64 0, i32 0, i32 0, i32 0
  %19 = load %struct.Contour**, %struct.Contour*** %18, align 8
  %20 = getelementptr inbounds %struct.Contour, %struct.Contour* %31, i64 0, i32 0, i32 0, i32 1
  %21 = load %struct.Contour**, %struct.Contour*** %20, align 8
  %22 = icmp eq %struct.Contour** %19, %21
  br i1 %22, label %59, label %23

23:                                               ; preds = %9, %17
  %24 = phi %struct.Contour** [ %7, %9 ], [ %21, %17 ]
  %25 = phi %struct.Contour*** [ %6, %9 ], [ %20, %17 ]
  %26 = phi %struct.Contour** [ %5, %9 ], [ %19, %17 ]
  %27 = phi %struct.Contour*** [ %4, %9 ], [ %18, %17 ]
  %28 = phi %struct.Contour* [ %2, %9 ], [ %31, %17 ]
  br label %29

29:                                               ; preds = %23, %56
  %30 = phi %struct.Contour** [ %26, %23 ], [ %57, %56 ]
  %31 = load %struct.Contour*, %struct.Contour** %30, align 8
  br i1 %14, label %32, label %56

32:                                               ; preds = %29
  %33 = load float, float* %15, align 4
  %34 = load float, float* %16, align 4
  %35 = fcmp uge float %33, %34
  br i1 %35, label %56, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.Contour, %struct.Contour* %31, i64 0, i32 1, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.Contour, %struct.Contour* %31, i64 0, i32 1, i32 2
  %40 = load float, float* %39, align 4
  %41 = fcmp olt float %38, %40
  br i1 %41, label %42, label %56

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.Contour, %struct.Contour* %31, i64 0, i32 1, i32 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %struct.Contour, %struct.Contour* %31, i64 0, i32 1, i32 3
  %46 = load float, float* %45, align 4
  %47 = fcmp uge float %44, %46
  %48 = fcmp ugt float %38, %11
  %49 = or i1 %48, %47
  br i1 %49, label %56, label %50

50:                                               ; preds = %42
  %51 = fcmp ole float %44, %33
  %52 = fcmp oge float %40, %13
  %53 = fcmp oge float %46, %34
  %54 = and i1 %52, %51
  %55 = and i1 %53, %54
  br i1 %55, label %17, label %56

56:                                               ; preds = %29, %32, %36, %42, %50
  %57 = getelementptr inbounds %struct.Contour*, %struct.Contour** %30, i64 1
  %58 = icmp eq %struct.Contour** %57, %24
  br i1 %58, label %59, label %29

59:                                               ; preds = %17, %56, %3
  %60 = phi %struct.Contour** [ %5, %3 ], [ %24, %56 ], [ %19, %17 ]
  %61 = phi %struct.Contour* [ %2, %3 ], [ %28, %56 ], [ %31, %17 ]
  %62 = phi %struct.Contour*** [ %4, %3 ], [ %27, %56 ], [ %18, %17 ]
  %63 = phi %struct.Contour*** [ %6, %3 ], [ %25, %56 ], [ %20, %17 ]
  %64 = bitcast %struct.Contour* %61 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = inttoptr i64 %65 to %struct.Contour**
  %67 = icmp eq %struct.Contour** %60, %66
  br i1 %67, label %95, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 2
  %71 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 1
  %72 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 1, i32 3
  %73 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %struct.Contour*** %73 to i64*
  %76 = bitcast %struct.Contour* %1 to i64*
  %77 = bitcast %struct.Contour*** %74 to i64*
  %78 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %struct.Contour*** %63 to i64*
  br label %80

80:                                               ; preds = %68, %267
  %81 = phi %struct.Contour** [ %60, %68 ], [ %268, %267 ]
  %82 = phi %struct.Contour** [ %66, %68 ], [ %85, %267 ]
  %83 = phi i64 [ %65, %68 ], [ %86, %267 ]
  %84 = inttoptr i64 %83 to i64*
  %85 = getelementptr inbounds %struct.Contour*, %struct.Contour** %82, i64 1
  %86 = ptrtoint %struct.Contour** %85 to i64
  %87 = inttoptr i64 %83 to i8*
  %88 = bitcast %struct.Contour** %85 to i8*
  %89 = load %struct.Contour*, %struct.Contour** %82, align 8
  %90 = getelementptr inbounds %struct.Contour, %struct.Contour* %89, i64 0, i32 1, i32 0
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %struct.Contour, %struct.Contour* %89, i64 0, i32 1, i32 2
  %93 = load float, float* %92, align 4
  %94 = fcmp olt float %91, %93
  br i1 %94, label %162, label %267

95:                                               ; preds = %267, %257, %59
  %96 = phi %struct.Contour** [ %60, %59 ], [ %258, %257 ], [ %85, %267 ]
  %97 = ptrtoint %struct.Contour* %1 to i64
  %98 = getelementptr inbounds %struct.Contour, %struct.Contour* %61, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %99 = load %struct.Contour**, %struct.Contour*** %98, align 8
  %100 = icmp ult %struct.Contour** %96, %99
  %101 = ptrtoint %struct.Contour** %99 to i64
  br i1 %100, label %102, label %107

102:                                              ; preds = %95
  %103 = bitcast %struct.Contour** %96 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds %struct.Contour*, %struct.Contour** %96, i64 1
  %105 = ptrtoint %struct.Contour** %104 to i64
  %106 = bitcast %struct.Contour*** %63 to i64*
  store i64 %105, i64* %106, align 8
  br label %270

107:                                              ; preds = %95
  %108 = ptrtoint %struct.Contour** %96 to i64
  %109 = bitcast %struct.Contour*** %63 to i64*
  %110 = load i64, i64* %64, align 8
  %111 = sub i64 %108, %110
  %112 = ashr exact i64 %111, 3
  %113 = add nsw i64 %112, 1
  %114 = icmp ugt i64 %113, 2305843009213693951
  br i1 %114, label %115, label %117

115:                                              ; preds = %107
  %116 = bitcast %struct.Contour* %61 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #14
  unreachable

117:                                              ; preds = %107
  %118 = bitcast %struct.Contour*** %98 to i64*
  %119 = sub i64 %101, %110
  %120 = ashr exact i64 %119, 3
  %121 = icmp ult i64 %120, 1152921504606846975
  br i1 %121, label %122, label %130

122:                                              ; preds = %117
  %123 = ashr exact i64 %119, 2
  %124 = icmp ult i64 %123, %113
  %125 = select i1 %124, i64 %113, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122
  %128 = icmp ugt i64 %125, 2305843009213693951
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  tail call void @abort() #14
  unreachable

130:                                              ; preds = %127, %117
  %131 = phi i64 [ %125, %127 ], [ 2305843009213693951, %117 ]
  %132 = shl i64 %131, 3
  %133 = tail call i8* @_Znwm(i64 %132) #13
  %134 = bitcast i8* %133 to %struct.Contour**
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i64 [ %131, %130 ], [ 0, %122 ]
  %137 = phi %struct.Contour** [ %134, %130 ], [ null, %122 ]
  %138 = getelementptr inbounds %struct.Contour*, %struct.Contour** %137, i64 %112
  %139 = getelementptr inbounds %struct.Contour*, %struct.Contour** %137, i64 %136
  %140 = ptrtoint %struct.Contour** %139 to i64
  %141 = bitcast %struct.Contour** %138 to i64*
  store i64 %97, i64* %141, align 8
  %142 = getelementptr inbounds %struct.Contour*, %struct.Contour** %138, i64 1
  %143 = ptrtoint %struct.Contour** %142 to i64
  %144 = load %struct.Contour**, %struct.Contour*** %62, align 8
  %145 = load i64, i64* %109, align 8
  %146 = ptrtoint %struct.Contour** %144 to i64
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %struct.Contour*, %struct.Contour** %138, i64 %149
  %151 = ptrtoint %struct.Contour** %150 to i64
  %152 = icmp sgt i64 %147, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %135
  %154 = bitcast %struct.Contour** %150 to i8*
  %155 = bitcast %struct.Contour** %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 %147, i1 false) #12
  %156 = load %struct.Contour**, %struct.Contour*** %62, align 8
  br label %157

157:                                              ; preds = %153, %135
  %158 = phi %struct.Contour** [ %144, %135 ], [ %156, %153 ]
  store i64 %151, i64* %64, align 8
  store i64 %143, i64* %109, align 8
  store i64 %140, i64* %118, align 8
  %159 = icmp eq %struct.Contour** %158, null
  br i1 %159, label %270, label %160

160:                                              ; preds = %157
  %161 = bitcast %struct.Contour** %158 to i8*
  tail call void @_ZdlPv(i8* %161) #13
  br label %270

162:                                              ; preds = %80, %259
  %163 = phi float [ %265, %259 ], [ %93, %80 ]
  %164 = phi float [ %263, %259 ], [ %91, %80 ]
  %165 = phi %struct.Contour* [ %261, %259 ], [ %89, %80 ]
  %166 = phi %struct.Contour** [ %260, %259 ], [ %81, %80 ]
  %167 = getelementptr inbounds %struct.Contour, %struct.Contour* %165, i64 0, i32 1, i32 1
  %168 = load float, float* %167, align 4
  %169 = getelementptr inbounds %struct.Contour, %struct.Contour* %165, i64 0, i32 1, i32 3
  %170 = load float, float* %169, align 4
  %171 = fcmp uge float %168, %170
  br i1 %171, label %267, label %172

172:                                              ; preds = %162
  %173 = load float, float* %69, align 4
  %174 = load float, float* %70, align 4
  %175 = fcmp olt float %173, %174
  br i1 %175, label %176, label %267

176:                                              ; preds = %172
  %177 = load float, float* %71, align 4
  %178 = load float, float* %72, align 4
  %179 = fcmp uge float %177, %178
  %180 = fcmp ugt float %173, %164
  %181 = or i1 %180, %179
  br i1 %181, label %267, label %182

182:                                              ; preds = %176
  %183 = fcmp ole float %177, %168
  %184 = fcmp oge float %174, %163
  %185 = fcmp oge float %178, %170
  %186 = and i1 %184, %183
  %187 = and i1 %185, %186
  br i1 %187, label %188, label %267

188:                                              ; preds = %182
  %189 = load %struct.Contour**, %struct.Contour*** %73, align 8
  %190 = load %struct.Contour**, %struct.Contour*** %74, align 8
  %191 = icmp eq %struct.Contour** %189, %190
  %192 = ptrtoint %struct.Contour** %190 to i64
  br i1 %191, label %198, label %193

193:                                              ; preds = %188
  %194 = load i64, i64* %84, align 8
  %195 = bitcast %struct.Contour** %189 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %struct.Contour*, %struct.Contour** %189, i64 1
  %197 = ptrtoint %struct.Contour** %196 to i64
  store i64 %197, i64* %75, align 8
  br label %252

198:                                              ; preds = %188
  %199 = ptrtoint %struct.Contour** %189 to i64
  %200 = load i64, i64* %76, align 8
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 3
  %203 = add nsw i64 %202, 1
  %204 = icmp ugt i64 %203, 2305843009213693951
  br i1 %204, label %205, label %207

205:                                              ; preds = %198
  %206 = bitcast %struct.Contour* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %206) #14
  unreachable

207:                                              ; preds = %198
  %208 = sub i64 %192, %200
  %209 = ashr exact i64 %208, 3
  %210 = icmp ult i64 %209, 1152921504606846975
  br i1 %210, label %211, label %219

211:                                              ; preds = %207
  %212 = ashr exact i64 %208, 2
  %213 = icmp ult i64 %212, %203
  %214 = select i1 %213, i64 %203, i64 %212
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %224, label %216

216:                                              ; preds = %211
  %217 = icmp ugt i64 %214, 2305843009213693951
  br i1 %217, label %218, label %219

218:                                              ; preds = %216
  tail call void @abort() #14
  unreachable

219:                                              ; preds = %216, %207
  %220 = phi i64 [ %214, %216 ], [ 2305843009213693951, %207 ]
  %221 = shl i64 %220, 3
  %222 = tail call i8* @_Znwm(i64 %221) #13
  %223 = bitcast i8* %222 to %struct.Contour**
  br label %224

224:                                              ; preds = %219, %211
  %225 = phi i64 [ %220, %219 ], [ 0, %211 ]
  %226 = phi %struct.Contour** [ %223, %219 ], [ null, %211 ]
  %227 = getelementptr inbounds %struct.Contour*, %struct.Contour** %226, i64 %202
  %228 = getelementptr inbounds %struct.Contour*, %struct.Contour** %226, i64 %225
  %229 = ptrtoint %struct.Contour** %228 to i64
  %230 = load i64, i64* %84, align 8
  %231 = bitcast %struct.Contour** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %struct.Contour*, %struct.Contour** %227, i64 1
  %233 = ptrtoint %struct.Contour** %232 to i64
  %234 = load %struct.Contour**, %struct.Contour*** %78, align 8
  %235 = load i64, i64* %75, align 8
  %236 = ptrtoint %struct.Contour** %234 to i64
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = sub nsw i64 0, %238
  %240 = getelementptr inbounds %struct.Contour*, %struct.Contour** %227, i64 %239
  %241 = ptrtoint %struct.Contour** %240 to i64
  %242 = icmp sgt i64 %237, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %224
  %244 = bitcast %struct.Contour** %240 to i8*
  %245 = bitcast %struct.Contour** %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 %237, i1 false) #12
  %246 = load %struct.Contour**, %struct.Contour*** %78, align 8
  br label %247

247:                                              ; preds = %243, %224
  %248 = phi %struct.Contour** [ %234, %224 ], [ %246, %243 ]
  store i64 %241, i64* %76, align 8
  store i64 %233, i64* %75, align 8
  store i64 %229, i64* %77, align 8
  %249 = icmp eq %struct.Contour** %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = bitcast %struct.Contour** %248 to i8*
  tail call void @_ZdlPv(i8* %251) #13
  br label %252

252:                                              ; preds = %193, %247, %250
  %253 = load i64, i64* %79, align 8
  %254 = sub i64 %253, %86
  %255 = ashr exact i64 %254, 3
  %256 = icmp eq i64 %254, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %252
  %258 = getelementptr inbounds %struct.Contour*, %struct.Contour** %82, i64 %255
  store %struct.Contour** %258, %struct.Contour*** %63, align 8
  br label %95

259:                                              ; preds = %252
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 %254, i1 false) #12
  %260 = getelementptr inbounds %struct.Contour*, %struct.Contour** %82, i64 %255
  store %struct.Contour** %260, %struct.Contour*** %63, align 8
  %261 = load %struct.Contour*, %struct.Contour** %82, align 8
  %262 = getelementptr inbounds %struct.Contour, %struct.Contour* %261, i64 0, i32 1, i32 0
  %263 = load float, float* %262, align 4
  %264 = getelementptr inbounds %struct.Contour, %struct.Contour* %261, i64 0, i32 1, i32 2
  %265 = load float, float* %264, align 4
  %266 = fcmp olt float %263, %265
  br i1 %266, label %162, label %267

267:                                              ; preds = %182, %176, %172, %162, %259, %80
  %268 = phi %struct.Contour** [ %81, %80 ], [ %166, %182 ], [ %166, %176 ], [ %166, %172 ], [ %166, %162 ], [ %260, %259 ]
  %269 = icmp eq %struct.Contour** %268, %85
  br i1 %269, label %95, label %80

270:                                              ; preds = %160, %157, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11OpAsWinding8nextEdgeER7ContourNS_4EdgeE(%class.OpAsWinding*, %struct.Contour* dereferenceable(64), i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca [3 x double], align 16
  %6 = alloca [3 x i32], align 4
  %7 = alloca double, align 8
  %8 = alloca %struct.SkDQuad, align 16
  %9 = alloca %struct.SkDConic, align 16
  %10 = alloca %struct.SkDCubic, align 16
  %11 = alloca [2 x double], align 16
  %12 = alloca %"class.SkPath::Iter", align 8
  %13 = alloca [4 x %struct.SkPoint], align 16
  %14 = bitcast %"class.SkPath::Iter"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %12, i64 0, i32 3
  %16 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %12, i64 0, i32 4, i32 0
  %17 = bitcast %"class.SkPath::Iter"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %12, i64 0, i32 6
  %19 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -1, i64 16, i1 false)
  %20 = getelementptr inbounds %class.OpAsWinding, %class.OpAsWinding* %0, i64 0, i32 0
  %21 = bitcast i8* %18 to i64*
  store i64 -6148914691236517206, i64* %21, align 8
  %22 = load %class.SkPath*, %class.SkPath** %20, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %12, %class.SkPath* dereferenceable(16) %22, i1 zeroext true) #12
  %23 = bitcast [4 x %struct.SkPoint]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #12
  %24 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0
  %25 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0, i32 0
  %26 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1, i32 0
  %28 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1, i32 1
  %29 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 2, i32 0
  %30 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 3, i32 0
  %31 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 3
  %32 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 4
  %33 = icmp eq i32 %2, 1
  %34 = bitcast double* %7 to i8*
  %35 = bitcast %struct.SkDQuad* %8 to i8*
  %36 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %8, i64 0, i32 0, i64 0, i32 0
  %37 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %8, i64 0, i32 0, i64 1, i32 0
  %38 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %8, i64 0, i32 0, i64 2, i32 0
  %39 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 2
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %39, i64 0, i32 0
  %41 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %41, i64 0, i32 0
  %43 = bitcast %struct.SkDCubic* %10 to i8*
  %44 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %10, i64 0, i32 0, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %10, i64 0, i32 0, i64 1, i32 0
  %46 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %10, i64 0, i32 0, i64 2, i32 0
  %47 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %10, i64 0, i32 0, i64 3, i32 0
  %48 = bitcast [2 x double]* %11 to i8*
  %49 = getelementptr inbounds [2 x double], [2 x double]* %11, i64 0, i64 0
  %50 = bitcast double* %7 to i64*
  %51 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 3
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %51, i64 0, i32 0
  %53 = bitcast %struct.SkDConic* %9 to i8*
  %54 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %9, i64 0, i32 0, i32 0, i64 0, i32 0
  %55 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %9, i64 0, i32 0, i32 0, i64 1, i32 0
  %56 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %9, i64 0, i32 0, i32 0, i64 2, i32 0
  %57 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %9, i64 0, i32 1
  %58 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %9, i64 0, i32 0
  %59 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 2, i32 0
  %60 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 2, i32 1
  %61 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 5
  %62 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 2
  %63 = bitcast %struct.SkPoint* %62 to <2 x float>*
  %64 = bitcast %struct.SkRect* %4 to i8*
  %65 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %66 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %67 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %68 = bitcast [3 x double]* %5 to i8*
  %69 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %70 = bitcast [3 x i32]* %6 to i8*
  %71 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  %72 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %73 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  %74 = bitcast [4 x %struct.SkPoint]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %74, i8 -1, i64 32, i1 false)
  %75 = bitcast %struct.SkDQuad* %8 to <2 x double>*
  %76 = bitcast float* %27 to <2 x float>*
  %77 = bitcast double* %37 to <2 x double>*
  %78 = bitcast float* %29 to <2 x float>*
  %79 = bitcast double* %38 to <2 x double>*
  %80 = bitcast %struct.SkDCubic* %10 to <2 x double>*
  %81 = bitcast float* %27 to <2 x float>*
  %82 = bitcast double* %45 to <2 x double>*
  %83 = bitcast float* %29 to <2 x float>*
  %84 = bitcast double* %46 to <2 x double>*
  %85 = bitcast float* %30 to <2 x float>*
  %86 = bitcast double* %47 to <2 x double>*
  %87 = bitcast %struct.SkDConic* %9 to <2 x double>*
  %88 = bitcast float* %27 to <2 x float>*
  %89 = bitcast double* %55 to <2 x double>*
  %90 = bitcast float* %29 to <2 x float>*
  %91 = bitcast double* %56 to <2 x double>*
  br label %92

92:                                               ; preds = %442, %3
  %93 = phi i32 [ -1, %3 ], [ %96, %442 ]
  %94 = phi i32 [ 0, %3 ], [ %443, %442 ]
  %95 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %12, %struct.SkPoint* nonnull %24) #12
  %96 = add nsw i32 %93, 1
  %97 = load i32, i32* %31, align 8
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %442, label %99

99:                                               ; preds = %92
  %100 = load i32, i32* %32, align 4
  %101 = icmp sge i32 %96, %100
  %102 = add i32 %95, -1
  %103 = icmp ugt i32 %102, 3
  %104 = or i1 %103, %101
  br i1 %104, label %442, label %105

105:                                              ; preds = %99
  %106 = zext i32 %95 to i64
  %107 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZL8kPtCount, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = load float, float* %26, align 4
  %110 = sext i32 %108 to i64
  br label %114

111:                                              ; preds = %114
  %112 = add nuw nsw i64 %115, 1
  %113 = icmp slt i64 %115, %110
  br i1 %113, label %114, label %442

114:                                              ; preds = %111, %105
  %115 = phi i64 [ %112, %111 ], [ 1, %105 ]
  %116 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 %115, i32 1
  %117 = load float, float* %116, align 4
  %118 = fcmp une float %109, %117
  br i1 %118, label %119, label %111

119:                                              ; preds = %114
  %120 = icmp eq i32 %95, 3
  br i1 %33, label %121, label %267

121:                                              ; preds = %119
  br i1 %120, label %122, label %125

122:                                              ; preds = %121
  %123 = load float*, float** %15, align 8
  %124 = load float, float* %123, align 4
  br label %125

125:                                              ; preds = %121, %122
  %126 = phi float [ %124, %122 ], [ 1.000000e+00, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 -1, i64 16, i1 false) #12
  %127 = add nsw i32 %108, 1
  %128 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %4, %struct.SkPoint* nonnull %24, i32 %127) #12
  %129 = load float, float* %65, align 4
  %130 = load float, float* %60, align 4
  %131 = fcmp ule float %129, %130
  %132 = load float, float* %66, align 4
  %133 = fcmp ugt float %132, %130
  %134 = and i1 %131, %133
  br i1 %134, label %135, label %264

135:                                              ; preds = %125
  %136 = load float, float* %67, align 4
  %137 = load float, float* %59, align 4
  %138 = fcmp ult float %136, %137
  br i1 %138, label %139, label %264

139:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 -1, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %70) #12
  store i32 -1431655766, i32* %71, align 4
  store i32 -1431655766, i32* %72, align 4
  store i32 -1431655766, i32* %73, align 4
  %140 = shl nsw i32 %95, 1
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [10 x i32 (%struct.SkPoint*, float, float, double*)*], [10 x i32 (%struct.SkPoint*, float, float, double*)*]* @_ZL14CurveIntercept, i64 0, i64 %141
  %143 = load i32 (%struct.SkPoint*, float, float, double*)*, i32 (%struct.SkPoint*, float, float, double*)** %142, align 16
  %144 = call i32 %143(%struct.SkPoint* nonnull %24, float %126, float %130, double* nonnull %69) #12
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %232

146:                                              ; preds = %139
  %147 = getelementptr inbounds [5 x <2 x float> (%struct.SkPoint*, float, double)*], [5 x <2 x float> (%struct.SkPoint*, float, double)*]* @_ZL13CurvePointAtT, i64 0, i64 %106
  %148 = load <2 x float> (%struct.SkPoint*, float, double)*, <2 x float> (%struct.SkPoint*, float, double)** %147, align 8
  %149 = sext i32 %108 to i64
  %150 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 %149, i32 0
  br label %157

151:                                              ; preds = %193
  %152 = icmp sgt i32 %194, 0
  br i1 %152, label %153, label %232

153:                                              ; preds = %151
  %154 = getelementptr inbounds [5 x <2 x float> (%struct.SkPoint*, float, double)*], [5 x <2 x float> (%struct.SkPoint*, float, double)*]* @_ZL13CurveSlopeAtT, i64 0, i64 %106
  %155 = load <2 x float> (%struct.SkPoint*, float, double)*, <2 x float> (%struct.SkPoint*, float, double)** %154, align 8
  %156 = zext i32 %194 to i64
  br label %197

157:                                              ; preds = %193, %146
  %158 = phi i32 [ 0, %146 ], [ %195, %193 ]
  %159 = phi i32 [ %144, %146 ], [ %194, %193 ]
  %160 = sext i32 %158 to i64
  %161 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %160
  %162 = load double, double* %161, align 8
  %163 = call <2 x float> %148(%struct.SkPoint* nonnull %24, float %126, double %162) #12
  %164 = extractelement <2 x float> %163, i32 0
  %165 = load float, float* %59, align 4
  %166 = fcmp olt float %164, %165
  br i1 %166, label %167, label %169

167:                                              ; preds = %157
  %168 = add nsw i32 %158, 1
  br label %193

169:                                              ; preds = %157
  %170 = fcmp ogt float %164, %165
  br i1 %170, label %171, label %178

171:                                              ; preds = %169
  %172 = add nsw i32 %159, -1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %173
  %175 = bitcast double* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast double* %161 to i64*
  store i64 %176, i64* %177, align 8
  br label %193

178:                                              ; preds = %169
  %179 = load float, float* %25, align 16
  %180 = fcmp olt float %179, %165
  br i1 %180, label %181, label %186

181:                                              ; preds = %178
  %182 = load float, float* %150, align 8
  %183 = fcmp olt float %182, %165
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = add nsw i32 %158, 1
  br label %193

186:                                              ; preds = %181, %178
  %187 = add nsw i32 %159, -1
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %188
  %190 = bitcast double* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast double* %161 to i64*
  store i64 %191, i64* %192, align 8
  br label %193

193:                                              ; preds = %186, %184, %171, %167
  %194 = phi i32 [ %159, %167 ], [ %172, %171 ], [ %159, %184 ], [ %187, %186 ]
  %195 = phi i32 [ %168, %167 ], [ %158, %171 ], [ %185, %184 ], [ %158, %186 ]
  %196 = icmp slt i32 %195, %194
  br i1 %196, label %157, label %151

197:                                              ; preds = %197, %153
  %198 = phi i64 [ 0, %153 ], [ %208, %197 ]
  %199 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %198
  %200 = load double, double* %199, align 8
  %201 = call <2 x float> %155(%struct.SkPoint* nonnull %24, float %126, double %200) #12
  %202 = extractelement <2 x float> %201, i32 1
  %203 = fcmp ogt float %202, 0.000000e+00
  %204 = fcmp olt float %202, 0.000000e+00
  %205 = zext i1 %204 to i32
  %206 = select i1 %203, i32 -1, i32 %205
  %207 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 %198
  store i32 %206, i32* %207, align 4
  %208 = add nuw nsw i64 %198, 1
  %209 = icmp eq i64 %208, %156
  br i1 %209, label %210, label %197

210:                                              ; preds = %197
  %211 = and i64 %156, 1
  %212 = icmp eq i32 %194, 1
  br i1 %212, label %215, label %213

213:                                              ; preds = %210
  %214 = sub nsw i64 %156, %211
  br label %234

215:                                              ; preds = %234, %210
  %216 = phi i32 [ undef, %210 ], [ %260, %234 ]
  %217 = phi i64 [ 0, %210 ], [ %261, %234 ]
  %218 = phi i32 [ 0, %210 ], [ %260, %234 ]
  %219 = icmp eq i64 %211, 0
  br i1 %219, label %232, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %217
  %222 = load double, double* %221, align 8
  %223 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 %217
  %224 = load i32, i32* %223, align 4
  %225 = fcmp une double %222, 1.000000e+00
  %226 = fcmp une double %222, 0.000000e+00
  %227 = and i1 %225, %226
  %228 = icmp eq i32 %224, -1
  %229 = or i1 %227, %228
  %230 = select i1 %229, i32 %224, i32 0
  %231 = add nsw i32 %230, %218
  br label %232

232:                                              ; preds = %220, %215, %151, %139
  %233 = phi i32 [ 0, %139 ], [ 0, %151 ], [ %216, %215 ], [ %231, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  br label %264

234:                                              ; preds = %234, %213
  %235 = phi i64 [ 0, %213 ], [ %261, %234 ]
  %236 = phi i32 [ 0, %213 ], [ %260, %234 ]
  %237 = phi i64 [ %214, %213 ], [ %262, %234 ]
  %238 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %235
  %239 = load double, double* %238, align 16
  %240 = fcmp une double %239, 0.000000e+00
  %241 = fcmp une double %239, 1.000000e+00
  %242 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 %235
  %243 = load i32, i32* %242, align 4
  %244 = and i1 %241, %240
  %245 = icmp eq i32 %243, -1
  %246 = or i1 %244, %245
  %247 = select i1 %246, i32 %243, i32 0
  %248 = add nsw i32 %247, %236
  %249 = or i64 %235, 1
  %250 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 %249
  %251 = load double, double* %250, align 8
  %252 = fcmp une double %251, 0.000000e+00
  %253 = fcmp une double %251, 1.000000e+00
  %254 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 %249
  %255 = load i32, i32* %254, align 4
  %256 = and i1 %253, %252
  %257 = icmp eq i32 %255, -1
  %258 = or i1 %256, %257
  %259 = select i1 %258, i32 %255, i32 0
  %260 = add nsw i32 %259, %248
  %261 = add nuw nsw i64 %235, 2
  %262 = add i64 %237, -2
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %215, label %234

264:                                              ; preds = %125, %135, %232
  %265 = phi i32 [ %233, %232 ], [ 0, %125 ], [ 0, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #12
  %266 = add nsw i32 %265, %94
  br label %442

267:                                              ; preds = %119
  br i1 %120, label %268, label %280

268:                                              ; preds = %267
  %269 = load float*, float** %15, align 8
  %270 = load float, float* %269, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store double 0.000000e+00, double* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %53, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL9left_edgeP7SkPointN6SkPath4VerbEfPN7Contour9DirectionE.conic to i8*), i64 56, i1 false) #12
  %271 = load float, float* %25, align 16
  %272 = insertelement <2 x float> undef, float %271, i32 0
  %273 = insertelement <2 x float> %272, float %109, i32 1
  %274 = fpext <2 x float> %273 to <2 x double>
  store <2 x double> %274, <2 x double>* %87, align 16
  %275 = load <2 x float>, <2 x float>* %88, align 8
  %276 = fpext <2 x float> %275 to <2 x double>
  store <2 x double> %276, <2 x double>* %89, align 16
  %277 = load <2 x float>, <2 x float>* %90, align 16
  %278 = fpext <2 x float> %277 to <2 x double>
  store <2 x double> %278, <2 x double>* %91, align 16
  store float %270, float* %57, align 16
  %279 = call zeroext i1 @_ZNK7SkDQuad12monotonicInXEv(%struct.SkDQuad* nonnull %58) #12
  br i1 %279, label %341, label %328

280:                                              ; preds = %267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store double 0.000000e+00, double* %7, align 8
  switch i32 %95, label %355 [
    i32 1, label %281
    i32 2, label %291
  ]

281:                                              ; preds = %280
  %282 = load float, float* %25, align 16
  %283 = load float, float* %42, align 8
  %284 = fcmp olt float %282, %283
  %285 = select i1 %284, %struct.SkPoint* %24, %struct.SkPoint* %41
  %286 = bitcast %struct.SkPoint* %285 to <2 x float>*
  %287 = load <2 x float>, <2 x float>* %286, align 8
  %288 = load float, float* %28, align 4
  %289 = fsub float %288, %109
  %290 = fpext float %289 to double
  br label %421

291:                                              ; preds = %280
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %35) #12
  %292 = load float, float* %25, align 16
  %293 = insertelement <2 x float> undef, float %292, i32 0
  %294 = insertelement <2 x float> %293, float %109, i32 1
  %295 = fpext <2 x float> %294 to <2 x double>
  store <2 x double> %295, <2 x double>* %75, align 16
  %296 = load <2 x float>, <2 x float>* %76, align 8
  %297 = fpext <2 x float> %296 to <2 x double>
  store <2 x double> %297, <2 x double>* %77, align 16
  %298 = load <2 x float>, <2 x float>* %78, align 16
  %299 = fpext <2 x float> %298 to <2 x double>
  store <2 x double> %299, <2 x double>* %79, align 16
  %300 = call zeroext i1 @_ZNK7SkDQuad12monotonicInXEv(%struct.SkDQuad* nonnull %8) #12
  br i1 %300, label %314, label %301

301:                                              ; preds = %291
  %302 = call i32 @_ZN7SkDQuad11FindExtremaEPKdPd(double* nonnull %36, double* nonnull %7) #12
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %314, label %304

304:                                              ; preds = %301
  %305 = load double, double* %7, align 8
  %306 = call { double, double } @_ZNK7SkDQuad5ptAtTEd(%struct.SkDQuad* nonnull %8, double %305) #12
  %307 = extractvalue { double, double } %306, 0
  %308 = extractvalue { double, double } %306, 1
  %309 = fptrunc double %307 to float
  %310 = insertelement <2 x float> undef, float %309, i32 0
  %311 = fptrunc double %308 to float
  %312 = insertelement <2 x float> %310, float %311, i32 1
  %313 = load double, double* %7, align 8
  br label %323

314:                                              ; preds = %301, %291
  %315 = load float, float* %25, align 16
  %316 = load float, float* %40, align 16
  %317 = fcmp olt float %315, %316
  %318 = select i1 %317, %struct.SkPoint* %24, %struct.SkPoint* %39
  %319 = bitcast %struct.SkPoint* %318 to <2 x float>*
  %320 = load <2 x float>, <2 x float>* %319, align 16
  %321 = xor i1 %317, true
  %322 = uitofp i1 %321 to double
  store double %322, double* %7, align 8
  br label %323

323:                                              ; preds = %314, %304
  %324 = phi double [ %313, %304 ], [ %322, %314 ]
  %325 = phi <2 x float> [ %312, %304 ], [ %320, %314 ]
  %326 = call { double, double } @_ZNK7SkDQuad7dxdyAtTEd(%struct.SkDQuad* nonnull %8, double %324) #12
  %327 = extractvalue { double, double } %326, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %35) #12
  br label %421

328:                                              ; preds = %268
  %329 = call i32 @_ZN8SkDConic11FindExtremaEPKdfPd(double* nonnull %54, float %270, double* nonnull %7) #12
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %341, label %331

331:                                              ; preds = %328
  %332 = load double, double* %7, align 8
  %333 = call { double, double } @_ZNK8SkDConic5ptAtTEd(%struct.SkDConic* nonnull %9, double %332) #12
  %334 = extractvalue { double, double } %333, 0
  %335 = extractvalue { double, double } %333, 1
  %336 = fptrunc double %334 to float
  %337 = insertelement <2 x float> undef, float %336, i32 0
  %338 = fptrunc double %335 to float
  %339 = insertelement <2 x float> %337, float %338, i32 1
  %340 = load double, double* %7, align 8
  br label %350

341:                                              ; preds = %328, %268
  %342 = load float, float* %25, align 16
  %343 = load float, float* %40, align 16
  %344 = fcmp olt float %342, %343
  %345 = select i1 %344, %struct.SkPoint* %24, %struct.SkPoint* %39
  %346 = bitcast %struct.SkPoint* %345 to <2 x float>*
  %347 = load <2 x float>, <2 x float>* %346, align 16
  %348 = xor i1 %344, true
  %349 = uitofp i1 %348 to double
  store double %349, double* %7, align 8
  br label %350

350:                                              ; preds = %341, %331
  %351 = phi double [ %340, %331 ], [ %349, %341 ]
  %352 = phi <2 x float> [ %339, %331 ], [ %347, %341 ]
  %353 = call { double, double } @_ZNK8SkDConic7dxdyAtTEd(%struct.SkDConic* nonnull %9, double %351) #12
  %354 = extractvalue { double, double } %353, 1
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #12
  br label %421

355:                                              ; preds = %280
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #12
  %356 = load float, float* %25, align 16
  %357 = insertelement <2 x float> undef, float %356, i32 0
  %358 = insertelement <2 x float> %357, float %109, i32 1
  %359 = fpext <2 x float> %358 to <2 x double>
  store <2 x double> %359, <2 x double>* %80, align 16
  %360 = load <2 x float>, <2 x float>* %81, align 8
  %361 = fpext <2 x float> %360 to <2 x double>
  store <2 x double> %361, <2 x double>* %82, align 16
  %362 = load <2 x float>, <2 x float>* %83, align 16
  %363 = fpext <2 x float> %362 to <2 x double>
  store <2 x double> %363, <2 x double>* %84, align 16
  %364 = load <2 x float>, <2 x float>* %85, align 8
  %365 = fpext <2 x float> %364 to <2 x double>
  store <2 x double> %365, <2 x double>* %86, align 16
  %366 = call zeroext i1 @_ZNK8SkDCubic12monotonicInXEv(%struct.SkDCubic* nonnull %10) #12
  br i1 %366, label %407, label %367

367:                                              ; preds = %355
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -1, i64 16, i1 false) #12
  %368 = call i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double* nonnull %44, double* nonnull %49) #12
  %369 = icmp sgt i32 %368, 0
  br i1 %369, label %370, label %372

370:                                              ; preds = %367
  %371 = zext i32 %368 to i64
  br label %374

372:                                              ; preds = %393, %367
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  %373 = icmp eq i32 %368, 0
  br i1 %373, label %407, label %397

374:                                              ; preds = %393, %370
  %375 = phi i64 [ 0, %370 ], [ %395, %393 ]
  %376 = phi <2 x float> [ <float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000>, %370 ], [ %394, %393 ]
  %377 = getelementptr inbounds [2 x double], [2 x double]* %11, i64 0, i64 %375
  %378 = load double, double* %377, align 8
  %379 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* nonnull %10, double %378) #12
  %380 = extractvalue { double, double } %379, 0
  %381 = fptrunc double %380 to float
  %382 = icmp eq i64 %375, 0
  %383 = extractelement <2 x float> %376, i32 0
  %384 = fcmp ogt float %383, %381
  %385 = or i1 %382, %384
  br i1 %385, label %386, label %393

386:                                              ; preds = %374
  %387 = insertelement <2 x float> undef, float %381, i32 0
  %388 = extractvalue { double, double } %379, 1
  %389 = fptrunc double %388 to float
  %390 = insertelement <2 x float> %387, float %389, i32 1
  %391 = bitcast double* %377 to i64*
  %392 = load i64, i64* %391, align 8
  store i64 %392, i64* %50, align 8
  br label %393

393:                                              ; preds = %386, %374
  %394 = phi <2 x float> [ %390, %386 ], [ %376, %374 ]
  %395 = add nuw nsw i64 %375, 1
  %396 = icmp eq i64 %395, %371
  br i1 %396, label %372, label %374

397:                                              ; preds = %372
  %398 = load double, double* %7, align 8
  %399 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* nonnull %10, double %398) #12
  %400 = extractvalue { double, double } %399, 0
  %401 = extractvalue { double, double } %399, 1
  %402 = fptrunc double %400 to float
  %403 = insertelement <2 x float> undef, float %402, i32 0
  %404 = fptrunc double %401 to float
  %405 = insertelement <2 x float> %403, float %404, i32 1
  %406 = load double, double* %7, align 8
  br label %416

407:                                              ; preds = %372, %355
  %408 = load float, float* %25, align 16
  %409 = load float, float* %52, align 8
  %410 = fcmp olt float %408, %409
  %411 = select i1 %410, %struct.SkPoint* %24, %struct.SkPoint* %51
  %412 = bitcast %struct.SkPoint* %411 to <2 x float>*
  %413 = load <2 x float>, <2 x float>* %412, align 8
  %414 = xor i1 %410, true
  %415 = uitofp i1 %414 to double
  store double %415, double* %7, align 8
  br label %416

416:                                              ; preds = %407, %397
  %417 = phi double [ %406, %397 ], [ %415, %407 ]
  %418 = phi <2 x float> [ %405, %397 ], [ %413, %407 ]
  %419 = call { double, double } @_ZNK8SkDCubic7dxdyAtTEd(%struct.SkDCubic* nonnull %10, double %417) #12
  %420 = extractvalue { double, double } %419, 1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %43) #12
  br label %421

421:                                              ; preds = %281, %323, %350, %416
  %422 = phi double [ %290, %281 ], [ %327, %323 ], [ %354, %350 ], [ %420, %416 ]
  %423 = phi <2 x float> [ %287, %281 ], [ %325, %323 ], [ %352, %350 ], [ %418, %416 ]
  %424 = fptrunc double %422 to float
  %425 = fcmp ogt float %424, 0.000000e+00
  %426 = fcmp olt float %424, 0.000000e+00
  %427 = zext i1 %426 to i32
  %428 = select i1 %425, i32 -1, i32 %427
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  %429 = extractelement <2 x float> %423, i32 0
  %430 = load float, float* %59, align 8
  %431 = fcmp ogt float %429, %430
  br i1 %431, label %442, label %432

432:                                              ; preds = %421
  %433 = fcmp oeq float %429, %430
  br i1 %433, label %434, label %441

434:                                              ; preds = %432
  %435 = extractelement <2 x float> %423, i32 1
  %436 = load float, float* %60, align 4
  %437 = fcmp une float %435, %436
  br i1 %437, label %442, label %438

438:                                              ; preds = %434
  %439 = load i32, i32* %61, align 8
  %440 = icmp eq i32 %428, %439
  br i1 %440, label %442, label %441

441:                                              ; preds = %438, %432
  store <2 x float> %423, <2 x float>* %63, align 8
  store i32 %428, i32* %61, align 8
  br label %442

442:                                              ; preds = %111, %441, %421, %434, %438, %264, %99, %92
  %443 = phi i32 [ %94, %92 ], [ %94, %99 ], [ %266, %264 ], [ %94, %438 ], [ %94, %434 ], [ %94, %421 ], [ %94, %441 ], [ %94, %111 ]
  %444 = icmp eq i32 %95, 6
  br i1 %444, label %445, label %92

445:                                              ; preds = %442
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #12
  ret i32 %443
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11OpAsWinding22checkContainerChildrenEP7ContourS1_(%class.OpAsWinding*, %struct.Contour*, %struct.Contour*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %struct.Contour**, %struct.Contour*** %4, align 8
  %6 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 0, i32 0, i32 1
  %7 = load %struct.Contour**, %struct.Contour*** %6, align 8
  %8 = icmp eq %struct.Contour** %5, %7
  br i1 %8, label %16, label %11

9:                                                ; preds = %11
  %10 = icmp eq %struct.Contour** %15, %7
  br i1 %10, label %16, label %11

11:                                               ; preds = %3, %9
  %12 = phi %struct.Contour** [ %15, %9 ], [ %5, %3 ]
  %13 = load %struct.Contour*, %struct.Contour** %12, align 8
  %14 = tail call zeroext i1 @_ZN11OpAsWinding22checkContainerChildrenEP7ContourS1_(%class.OpAsWinding* %0, %struct.Contour* %2, %struct.Contour* %13)
  %15 = getelementptr inbounds %struct.Contour*, %struct.Contour** %12, i64 1
  br i1 %14, label %9, label %37

16:                                               ; preds = %9, %3
  %17 = icmp eq %struct.Contour* %1, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 2
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 0, i32 0
  %21 = load float, float* %20, align 8
  %22 = fcmp oeq float %21, 0x47EFFFFFE0000000
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = tail call i32 @_ZN11OpAsWinding8nextEdgeER7ContourNS_4EdgeE(%class.OpAsWinding* %0, %struct.Contour* dereferenceable(64) %2, i32 0) #12
  br label %25

25:                                               ; preds = %18, %23
  %26 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 2
  %27 = bitcast %struct.SkPoint* %19 to i64*
  %28 = bitcast %struct.SkPoint* %26 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 8
  %30 = tail call i32 @_ZN11OpAsWinding8nextEdgeER7ContourNS_4EdgeE(%class.OpAsWinding* %0, %struct.Contour* nonnull dereferenceable(64) %1, i32 1) #12
  %31 = icmp ne i32 %30, 0
  %32 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 6
  %33 = zext i1 %31 to i8
  store i8 %33, i8* %32, align 4
  %34 = add i32 %30, 1
  %35 = icmp ult i32 %34, 3
  br i1 %35, label %36, label %37

36:                                               ; preds = %16, %25
  br label %37

37:                                               ; preds = %11, %25, %36
  %38 = phi i1 [ true, %36 ], [ false, %25 ], [ false, %11 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11OpAsWinding11markReverseEP7ContourS1_(%class.OpAsWinding*, %struct.Contour*, %struct.Contour*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %struct.Contour**, %struct.Contour*** %4, align 8
  %6 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 0, i32 0, i32 1
  %7 = load %struct.Contour**, %struct.Contour*** %6, align 8
  %8 = icmp eq %struct.Contour** %5, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %12, %3
  %10 = phi i1 [ false, %3 ], [ %21, %12 ]
  %11 = icmp eq %struct.Contour* %1, null
  br i1 %11, label %33, label %24

12:                                               ; preds = %3, %12
  %13 = phi i1 [ %21, %12 ], [ false, %3 ]
  %14 = phi %struct.Contour** [ %22, %12 ], [ %5, %3 ]
  %15 = load %struct.Contour*, %struct.Contour** %14, align 8
  %16 = getelementptr inbounds %struct.Contour, %struct.Contour* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, %struct.Contour* %1, %struct.Contour* %2
  %20 = tail call zeroext i1 @_ZN11OpAsWinding11markReverseEP7ContourS1_(%class.OpAsWinding* %0, %struct.Contour* %19, %struct.Contour* %15)
  %21 = or i1 %13, %20
  %22 = getelementptr inbounds %struct.Contour*, %struct.Contour** %14, i64 1
  %23 = icmp eq %struct.Contour** %22, %7
  br i1 %23, label %9, label %12

24:                                               ; preds = %9
  %25 = getelementptr inbounds %struct.Contour, %struct.Contour* %1, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.Contour, %struct.Contour* %2, i64 0, i32 7
  store i8 1, i8* %31, align 1
  %32 = sub nsw i32 0, %26
  store i32 %32, i32* %27, align 8
  br label %33

33:                                               ; preds = %24, %9, %30
  %34 = phi i1 [ true, %30 ], [ %10, %9 ], [ %10, %24 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11OpAsWinding21reverseMarkedContoursERNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE14SkPathFillType(%class.SkPath* noalias sret, %class.OpAsWinding*, %"class.std::__1::vector"* dereferenceable(24), i32) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %class.SkPathBuilder, align 8
  %6 = alloca %class.SkPathBuilder, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = getelementptr inbounds %class.OpAsWinding, %class.OpAsWinding* %1, i64 0, i32 0
  %9 = load %class.SkPath*, %class.SkPath** %8, align 8
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %9, i64 0, i32 0, i32 0
  %11 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 4, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 9
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %4
  %19 = inttoptr i64 %14 to i8*
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 10
  %21 = load i8, i8* %20, align 1, !range !2
  br label %34

22:                                               ; preds = %4
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 1
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 0
  %25 = load %struct.SkPoint*, %struct.SkPoint** %24, align 8
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %23, %struct.SkPoint* %25, i32 %27) #12
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 10
  %30 = zext i1 %28 to i8
  store i8 %30, i8* %29, align 1
  store i8 0, i8* %15, align 8
  %31 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %31, i64 0, i32 4, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %22, %18
  %35 = phi i8* [ %19, %18 ], [ %33, %22 ]
  %36 = phi %class.SkPathRef* [ %11, %18 ], [ %31, %22 ]
  %37 = phi i8 [ %21, %18 ], [ %30, %22 ]
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp eq i8* %35, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 4, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %35, i64 %44
  br label %46

46:                                               ; preds = %34, %39, %41
  %47 = phi i8* [ %45, %41 ], [ null, %39 ], [ %35, %34 ]
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 3, i32 0
  %49 = bitcast %struct.SkPoint** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 5, i32 0
  %52 = bitcast float** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %class.SkPathBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %54) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZN11OpAsWinding21reverseMarkedContoursERNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE14SkPathFillType.reverse to i8*), i64 88, i1 false)
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %5) #12
  %55 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %5, i64 0, i32 3
  store i32 %3, i32* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %57 = load %struct.Contour*, %struct.Contour** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %59 = load %struct.Contour*, %struct.Contour** %58, align 8
  %60 = icmp eq %struct.Contour* %57, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %46
  %62 = bitcast %class.SkPathBuilder* %6 to i8*
  %63 = bitcast %class.SkPath* %7 to i8*
  %64 = ptrtoint i8* %47 to i64
  br label %66

65:                                               ; preds = %176, %46
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* nonnull %5) #12
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %54) #12
  ret void

66:                                               ; preds = %61, %176
  %67 = phi i32 [ 0, %61 ], [ %172, %176 ]
  %68 = phi %struct.Contour* [ %57, %61 ], [ %177, %176 ]
  %69 = phi i64 [ %14, %61 ], [ %171, %176 ]
  %70 = phi i64 [ %50, %61 ], [ %170, %176 ]
  %71 = phi i64 [ %53, %61 ], [ %169, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %62) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZN11OpAsWinding21reverseMarkedContoursERNSt3__16vectorI7ContourNS0_9allocatorIS2_EEEE14SkPathFillType.reverse to i8*), i64 88, i1 false)
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %6) #12
  %72 = getelementptr inbounds %struct.Contour, %struct.Contour* %68, i64 0, i32 7
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %74, %class.SkPathBuilder* %5, %class.SkPathBuilder* %6
  %76 = inttoptr i64 %69 to i8*
  %77 = icmp eq i8* %47, %76
  br i1 %77, label %167, label %78

78:                                               ; preds = %66
  %79 = getelementptr inbounds %struct.Contour, %struct.Contour* %68, i64 0, i32 4
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %67, %80
  br i1 %81, label %85, label %161

82:                                               ; preds = %150
  %83 = load i32, i32* %79, align 4
  %84 = icmp slt i32 %154, %83
  br i1 %84, label %85, label %158

85:                                               ; preds = %78, %82
  %86 = phi i64 [ %151, %82 ], [ %71, %78 ]
  %87 = phi i64 [ %153, %82 ], [ %70, %78 ]
  %88 = phi i32 [ %154, %82 ], [ %67, %78 ]
  %89 = phi i8* [ %136, %82 ], [ %76, %78 ]
  %90 = load i8, i8* %89, align 1, !noalias !6
  switch i8 %90, label %91 [
    i8 0, label %92
    i8 1, label %97
    i8 2, label %102
    i8 3, label %110
    i8 4, label %120
    i8 5, label %131
  ]

91:                                               ; preds = %85
  call void @llvm.trap() #12, !noalias !6
  unreachable

92:                                               ; preds = %85
  %93 = inttoptr i64 %87 to %struct.SkPoint*
  %94 = inttoptr i64 %87 to <2 x float>*
  %95 = load <2 x float>, <2 x float>* %94, align 4
  %96 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* nonnull %75, <2 x float> %95) #12
  br label %134

97:                                               ; preds = %85
  %98 = inttoptr i64 %87 to %struct.SkPoint*
  %99 = inttoptr i64 %87 to <2 x float>*
  %100 = load <2 x float>, <2 x float>* %99, align 4
  %101 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %75, <2 x float> %100) #12
  br label %134

102:                                              ; preds = %85
  %103 = inttoptr i64 %87 to %struct.SkPoint*
  %104 = inttoptr i64 %87 to <2 x float>*
  %105 = load <2 x float>, <2 x float>* %104, align 4
  %106 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %103, i64 1
  %107 = bitcast %struct.SkPoint* %106 to <2 x float>*
  %108 = load <2 x float>, <2 x float>* %107, align 4
  %109 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* nonnull %75, <2 x float> %105, <2 x float> %108) #12
  br label %134

110:                                              ; preds = %85
  %111 = inttoptr i64 %87 to %struct.SkPoint*
  %112 = inttoptr i64 %87 to <2 x float>*
  %113 = load <2 x float>, <2 x float>* %112, align 4
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %111, i64 1
  %115 = bitcast %struct.SkPoint* %114 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 4
  %117 = inttoptr i64 %86 to float*
  %118 = load float, float* %117, align 4
  %119 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* nonnull %75, <2 x float> %113, <2 x float> %116, float %118) #12
  br label %134

120:                                              ; preds = %85
  %121 = inttoptr i64 %87 to %struct.SkPoint*
  %122 = inttoptr i64 %87 to <2 x float>*
  %123 = load <2 x float>, <2 x float>* %122, align 4
  %124 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %121, i64 1
  %125 = bitcast %struct.SkPoint* %124 to <2 x float>*
  %126 = load <2 x float>, <2 x float>* %125, align 4
  %127 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %121, i64 2
  %128 = bitcast %struct.SkPoint* %127 to <2 x float>*
  %129 = load <2 x float>, <2 x float>* %128, align 4
  %130 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* nonnull %75, <2 x float> %123, <2 x float> %126, <2 x float> %129) #12
  br label %134

131:                                              ; preds = %85
  %132 = inttoptr i64 %87 to %struct.SkPoint*
  %133 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* nonnull %75) #12
  br label %134

134:                                              ; preds = %131, %120, %110, %102, %97, %92
  %135 = phi %struct.SkPoint* [ %132, %131 ], [ %121, %120 ], [ %111, %110 ], [ %103, %102 ], [ %98, %97 ], [ %93, %92 ]
  %136 = getelementptr inbounds i8, i8* %89, i64 1
  %137 = load i8, i8* %89, align 1
  switch i8 %137, label %141 [
    i8 0, label %142
    i8 1, label %142
    i8 2, label %138
    i8 3, label %145
    i8 4, label %139
    i8 5, label %140
  ]

138:                                              ; preds = %134
  br label %142

139:                                              ; preds = %134
  br label %142

140:                                              ; preds = %134
  br label %142

141:                                              ; preds = %134
  call void @llvm.trap() #12
  unreachable

142:                                              ; preds = %140, %139, %138, %134, %134
  %143 = phi i64 [ 1, %134 ], [ 1, %134 ], [ 2, %138 ], [ 3, %139 ], [ 0, %140 ]
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %135, i64 %143
  br label %150

145:                                              ; preds = %134
  %146 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %135, i64 2
  %147 = inttoptr i64 %86 to float*
  %148 = getelementptr inbounds float, float* %147, i64 1
  %149 = ptrtoint float* %148 to i64
  br label %150

150:                                              ; preds = %142, %145
  %151 = phi i64 [ %86, %142 ], [ %149, %145 ]
  %152 = phi %struct.SkPoint* [ %144, %142 ], [ %146, %145 ]
  %153 = ptrtoint %struct.SkPoint* %152 to i64
  %154 = add nsw i32 %88, 1
  %155 = icmp eq i8* %47, %136
  br i1 %155, label %156, label %82

156:                                              ; preds = %150
  %157 = ptrtoint %struct.SkPoint* %152 to i64
  br label %161

158:                                              ; preds = %82
  %159 = ptrtoint i8* %136 to i64
  %160 = ptrtoint %struct.SkPoint* %152 to i64
  br label %161

161:                                              ; preds = %158, %78, %156
  %162 = phi i64 [ %151, %156 ], [ %71, %78 ], [ %151, %158 ]
  %163 = phi i64 [ %157, %156 ], [ %70, %78 ], [ %160, %158 ]
  %164 = phi i64 [ %64, %156 ], [ %69, %78 ], [ %159, %158 ]
  %165 = phi i32 [ %154, %156 ], [ %67, %78 ], [ %154, %158 ]
  %166 = load i8, i8* %72, align 1
  br label %167

167:                                              ; preds = %161, %66
  %168 = phi i8 [ %166, %161 ], [ %73, %66 ]
  %169 = phi i64 [ %162, %161 ], [ %71, %66 ]
  %170 = phi i64 [ %163, %161 ], [ %70, %66 ]
  %171 = phi i64 [ %164, %161 ], [ %69, %66 ]
  %172 = phi i32 [ %165, %161 ], [ %67, %66 ]
  %173 = icmp eq i8 %168, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %167
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #12
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %7, %class.SkPathBuilder* nonnull %6) #12
  %175 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder21privateReverseAddPathERK6SkPath(%class.SkPathBuilder* nonnull %5, %class.SkPath* nonnull dereferenceable(16) %7) #12
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #12
  br label %176

176:                                              ; preds = %167, %174
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %62) #12
  %177 = getelementptr inbounds %struct.Contour, %struct.Contour* %68, i64 1
  %178 = icmp eq %struct.Contour* %177, %59
  br i1 %178, label %65, label %66
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI7ContourNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJR6SkRectRiS8_EEEvDpOT_(%"class.std::__1::vector"*, %struct.SkRect* dereferenceable(16), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %struct.Contour** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 6
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 288230376151711743
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #14
  unreachable

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %struct.Contour** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = ashr exact i64 %20, 6
  %22 = icmp ult i64 %21, 144115188075855871
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  %24 = ashr exact i64 %20, 5
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = icmp ugt i64 %26, 288230376151711743
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %16, %28
  %32 = phi i64 [ %26, %28 ], [ 288230376151711743, %16 ]
  %33 = shl i64 %32, 6
  %34 = tail call i8* @_Znwm(i64 %33) #13
  %35 = bitcast i8* %34 to %struct.Contour*
  br label %36

36:                                               ; preds = %23, %31
  %37 = phi i64 [ %32, %31 ], [ 0, %23 ]
  %38 = phi %struct.Contour* [ %35, %31 ], [ null, %23 ]
  %39 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11
  %40 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %37
  %41 = ptrtoint %struct.Contour* %40 to i64
  %42 = load i32, i32* %2, align 4
  %43 = load i32, i32* %3, align 4
  %44 = bitcast %struct.Contour* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #12
  %45 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 1
  %46 = bitcast %struct.SkRect* %45 to i8*
  %47 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 4 %47, i64 16, i1 false) #12
  %48 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 2, i32 0
  store float 0x47EFFFFFE0000000, float* %48, align 8
  %49 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 2, i32 1
  store float 0x47EFFFFFE0000000, float* %49, align 4
  %50 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 3
  store i32 %42, i32* %50, align 8
  %51 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 4
  store i32 %43, i32* %51, align 4
  %52 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 5
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 6
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %struct.Contour, %struct.Contour* %38, i64 %11, i32 7
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %struct.Contour, %struct.Contour* %39, i64 1
  %56 = ptrtoint %struct.Contour* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %58 = load %struct.Contour*, %struct.Contour** %57, align 8
  %59 = ptrtoint %struct.Contour* %58 to i64
  %60 = load %struct.Contour*, %struct.Contour** %5, align 8
  %61 = icmp eq %struct.Contour* %60, %58
  br i1 %61, label %145, label %62

62:                                               ; preds = %36
  %63 = getelementptr %struct.Contour, %struct.Contour* %60, i64 -1, i32 0, i32 0, i32 0
  %64 = ptrtoint %struct.Contour*** %63 to i64
  %65 = sub i64 %64, %59
  %66 = and i64 %65, 64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %90

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.Contour, %struct.Contour* %39, i64 -1
  %70 = getelementptr inbounds %struct.Contour, %struct.Contour* %60, i64 -1
  %71 = bitcast %struct.Contour* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #12
  %72 = bitcast %struct.Contour* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %struct.Contour* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %struct.Contour, %struct.Contour* %60, i64 -1, i32 0, i32 0, i32 1
  %76 = bitcast %struct.Contour*** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %struct.Contour, %struct.Contour* %39, i64 -1, i32 0, i32 0, i32 1
  %79 = bitcast %struct.Contour*** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %struct.Contour, %struct.Contour* %60, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %struct.Contour*** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %struct.Contour, %struct.Contour* %39, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %struct.Contour*** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast %struct.Contour* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #12
  %86 = getelementptr inbounds %struct.Contour, %struct.Contour* %39, i64 -1, i32 1
  %87 = getelementptr inbounds %struct.Contour, %struct.Contour* %60, i64 -1, i32 1
  %88 = bitcast %struct.SkRect* %86 to i8*
  %89 = bitcast %struct.SkRect* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 38, i1 false) #12
  br label %90

90:                                               ; preds = %68, %62
  %91 = phi %struct.Contour* [ undef, %62 ], [ %69, %68 ]
  %92 = phi %struct.Contour* [ %39, %62 ], [ %69, %68 ]
  %93 = phi %struct.Contour* [ %60, %62 ], [ %70, %68 ]
  %94 = icmp ult i64 %65, 64
  br i1 %94, label %141, label %95

95:                                               ; preds = %90, %95
  %96 = phi %struct.Contour* [ %119, %95 ], [ %92, %90 ]
  %97 = phi %struct.Contour* [ %120, %95 ], [ %93, %90 ]
  %98 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -1
  %99 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -1
  %100 = bitcast %struct.Contour* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #12
  %101 = bitcast %struct.Contour* %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %struct.Contour* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -1, i32 0, i32 0, i32 1
  %105 = bitcast %struct.Contour*** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -1, i32 0, i32 0, i32 1
  %108 = bitcast %struct.Contour*** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast %struct.Contour*** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast %struct.Contour*** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = bitcast %struct.Contour* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #12
  %115 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -1, i32 1
  %116 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -1, i32 1
  %117 = bitcast %struct.SkRect* %115 to i8*
  %118 = bitcast %struct.SkRect* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 38, i1 false) #12
  %119 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -2
  %120 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -2
  %121 = bitcast %struct.Contour* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #12
  %122 = bitcast %struct.Contour* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %struct.Contour* %119 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -2, i32 0, i32 0, i32 1
  %126 = bitcast %struct.Contour*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -2, i32 0, i32 0, i32 1
  %129 = bitcast %struct.Contour*** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast %struct.Contour*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = bitcast %struct.Contour*** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = bitcast %struct.Contour* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #12
  %136 = getelementptr inbounds %struct.Contour, %struct.Contour* %96, i64 -2, i32 1
  %137 = getelementptr inbounds %struct.Contour, %struct.Contour* %97, i64 -2, i32 1
  %138 = bitcast %struct.SkRect* %136 to i8*
  %139 = bitcast %struct.SkRect* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 38, i1 false) #12
  %140 = icmp eq %struct.Contour* %120, %58
  br i1 %140, label %141, label %95

141:                                              ; preds = %95, %90
  %142 = phi %struct.Contour* [ %91, %90 ], [ %119, %95 ]
  %143 = load i64, i64* %8, align 8
  %144 = load %struct.Contour*, %struct.Contour** %5, align 8
  br label %145

145:                                              ; preds = %36, %141
  %146 = phi %struct.Contour* [ %144, %141 ], [ %58, %36 ]
  %147 = phi %struct.Contour* [ %142, %141 ], [ %39, %36 ]
  %148 = phi i64 [ %143, %141 ], [ %59, %36 ]
  %149 = ptrtoint %struct.Contour* %147 to i64
  store i64 %149, i64* %8, align 8
  store i64 %56, i64* %6, align 8
  store i64 %41, i64* %18, align 8
  %150 = inttoptr i64 %148 to %struct.Contour*
  %151 = icmp eq %struct.Contour* %146, %150
  br i1 %151, label %165, label %152

152:                                              ; preds = %145, %163
  %153 = phi %struct.Contour* [ %154, %163 ], [ %146, %145 ]
  %154 = getelementptr inbounds %struct.Contour, %struct.Contour* %153, i64 -1
  %155 = getelementptr inbounds %struct.Contour, %struct.Contour* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %struct.Contour**, %struct.Contour*** %155, align 8
  %157 = icmp eq %struct.Contour** %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %152
  %159 = ptrtoint %struct.Contour** %156 to i64
  %160 = getelementptr inbounds %struct.Contour, %struct.Contour* %153, i64 -1, i32 0, i32 0, i32 1
  %161 = bitcast %struct.Contour*** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast %struct.Contour** %156 to i8*
  tail call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %158, %152
  %164 = icmp eq %struct.Contour* %154, %150
  br i1 %164, label %165, label %152

165:                                              ; preds = %163, %145
  %166 = icmp eq i64 %148, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %148 to i8*
  tail call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %165, %167
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL16line_intercept_hPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double* nocapture) #0 {
  %5 = alloca %struct.SkDLine, align 16
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp oeq float %7, %9
  br i1 %10, label %33, label %11

11:                                               ; preds = %4
  %12 = bitcast %struct.SkDLine* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  %13 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %5, i64 0, i32 0, i64 1, i32 0
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = insertelement <2 x float> undef, float %15, i32 0
  %17 = insertelement <2 x float> %16, float %7, i32 1
  %18 = fpext <2 x float> %17 to <2 x double>
  %19 = bitcast %struct.SkDLine* %5 to <2 x double>*
  store <2 x double> %18, <2 x double>* %19, align 16
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %21 = load float, float* %20, align 4
  %22 = insertelement <2 x float> undef, float %21, i32 0
  %23 = insertelement <2 x float> %22, float %9, i32 1
  %24 = fpext <2 x float> %23 to <2 x double>
  %25 = bitcast double* %13 to <2 x double>*
  store <2 x double> %24, <2 x double>* %25, align 16
  %26 = fpext float %2 to double
  %27 = call double @_ZN15SkIntersections19HorizontalInterceptERK7SkDLined(%struct.SkDLine* nonnull dereferenceable(32) %5, double %26) #12
  store double %27, double* %3, align 8
  %28 = fsub double 0.000000e+00, %27
  %29 = fsub double 1.000000e+00, %27
  %30 = fmul double %28, %29
  %31 = fcmp ole double %30, 0.000000e+00
  %32 = zext i1 %31 to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %33

33:                                               ; preds = %4, %11
  %34 = phi i32 [ %32, %11 ], [ 0, %4 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL16line_intercept_vPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double* nocapture) #0 {
  %5 = alloca %struct.SkDLine, align 16
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp oeq float %7, %9
  br i1 %10, label %33, label %11

11:                                               ; preds = %4
  %12 = bitcast %struct.SkDLine* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  %13 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %5, i64 0, i32 0, i64 1, i32 0
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = insertelement <2 x float> undef, float %7, i32 0
  %17 = insertelement <2 x float> %16, float %15, i32 1
  %18 = fpext <2 x float> %17 to <2 x double>
  %19 = bitcast %struct.SkDLine* %5 to <2 x double>*
  store <2 x double> %18, <2 x double>* %19, align 16
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 1
  %21 = load float, float* %20, align 4
  %22 = insertelement <2 x float> undef, float %9, i32 0
  %23 = insertelement <2 x float> %22, float %21, i32 1
  %24 = fpext <2 x float> %23 to <2 x double>
  %25 = bitcast double* %13 to <2 x double>*
  store <2 x double> %24, <2 x double>* %25, align 16
  %26 = fpext float %2 to double
  %27 = call double @_ZN15SkIntersections17VerticalInterceptERK7SkDLined(%struct.SkDLine* nonnull dereferenceable(32) %5, double %26) #12
  store double %27, double* %3, align 8
  %28 = fsub double 0.000000e+00, %27
  %29 = fsub double 1.000000e+00, %27
  %30 = fmul double %28, %29
  %31 = fcmp ole double %30, 0.000000e+00
  %32 = zext i1 %31 to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %33

33:                                               ; preds = %4, %11
  %34 = phi i32 [ %32, %11 ], [ 0, %4 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL16quad_intercept_hPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double*) #0 {
  %5 = alloca %struct.SkDQuad, align 16
  %6 = bitcast %struct.SkDQuad* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #12
  %7 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %5, i64 0, i32 0, i64 1, i32 0
  %8 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %5, i64 0, i32 0, i64 2, i32 0
  %9 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fpext <2 x float> %10 to <2 x double>
  %12 = bitcast %struct.SkDQuad* %5 to <2 x double>*
  store <2 x double> %11, <2 x double>* %12, align 16
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %14 = bitcast float* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = fpext <2 x float> %15 to <2 x double>
  %17 = bitcast double* %7 to <2 x double>*
  store <2 x double> %16, <2 x double>* %17, align 16
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %8 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = call i32 @_ZN15SkIntersections19HorizontalInterceptERK7SkDQuadfPd(%struct.SkDQuad* nonnull dereferenceable(48) %5, float %2, double* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #12
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL16quad_intercept_vPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double*) #0 {
  %5 = alloca %struct.SkDQuad, align 16
  %6 = bitcast %struct.SkDQuad* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #12
  %7 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %5, i64 0, i32 0, i64 1, i32 0
  %8 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %5, i64 0, i32 0, i64 2, i32 0
  %9 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fpext <2 x float> %10 to <2 x double>
  %12 = bitcast %struct.SkDQuad* %5 to <2 x double>*
  store <2 x double> %11, <2 x double>* %12, align 16
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %14 = bitcast float* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = fpext <2 x float> %15 to <2 x double>
  %17 = bitcast double* %7 to <2 x double>*
  store <2 x double> %16, <2 x double>* %17, align 16
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %8 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = call i32 @_ZN15SkIntersections17VerticalInterceptERK7SkDQuadfPd(%struct.SkDQuad* nonnull dereferenceable(48) %5, float %2, double* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #12
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL17conic_intercept_hPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double*) #0 {
  %5 = alloca %struct.SkDConic, align 16
  %6 = bitcast %struct.SkDConic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL9left_edgeP7SkPointN6SkPath4VerbEfPN7Contour9DirectionE.conic to i8*), i64 56, i1 false)
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDConic* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 0, i32 0, i64 1, i32 0
  %13 = bitcast float* %11 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %12 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %17 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %18 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 1
  store float %1, float* %23, align 16
  %24 = call i32 @_ZN15SkIntersections19HorizontalInterceptERK8SkDConicfPd(%struct.SkDConic* nonnull dereferenceable(56) %5, float %2, double* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #12
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL17conic_intercept_vPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double*) #0 {
  %5 = alloca %struct.SkDConic, align 16
  %6 = bitcast %struct.SkDConic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL9left_edgeP7SkPointN6SkPath4VerbEfPN7Contour9DirectionE.conic to i8*), i64 56, i1 false)
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDConic* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 0, i32 0, i64 1, i32 0
  %13 = bitcast float* %11 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %12 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %17 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %18 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %5, i64 0, i32 1
  store float %1, float* %23, align 16
  %24 = call i32 @_ZN15SkIntersections17VerticalInterceptERK8SkDConicfPd(%struct.SkDConic* nonnull dereferenceable(56) %5, float %2, double* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #12
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL17cubic_intercept_hPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double*) #0 {
  %5 = alloca %struct.SkDCubic, align 16
  %6 = bitcast %struct.SkDCubic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #12
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDCubic* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 1, i32 0
  %13 = bitcast float* %11 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %12 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %17 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %18 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %24 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 3, i32 0
  %25 = bitcast float* %23 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = bitcast double* %24 to <2 x double>*
  store <2 x double> %27, <2 x double>* %28, align 16
  %29 = fpext float %2 to double
  %30 = call i32 @_ZNK8SkDCubic19horizontalIntersectEdPd(%struct.SkDCubic* nonnull %5, double %29, double* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #12
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL17cubic_intercept_vPK7SkPointffPd(%struct.SkPoint* nocapture readonly, float, float, double*) #0 {
  %5 = alloca %struct.SkDCubic, align 16
  %6 = bitcast %struct.SkDCubic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #12
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDCubic* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 1, i32 0
  %13 = bitcast float* %11 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %12 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %17 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = bitcast double* %18 to <2 x double>*
  store <2 x double> %21, <2 x double>* %22, align 16
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %24 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %5, i64 0, i32 0, i64 3, i32 0
  %25 = bitcast float* %23 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = bitcast double* %24 to <2 x double>*
  store <2 x double> %27, <2 x double>* %28, align 16
  %29 = fpext float %2 to double
  %30 = call i32 @_ZNK8SkDCubic17verticalIntersectEdPd(%struct.SkDCubic* nonnull %5, double %29, double* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #12
  ret i32 %30
}

declare double @_ZN15SkIntersections19HorizontalInterceptERK7SkDLined(%struct.SkDLine* dereferenceable(32), double) local_unnamed_addr #3

declare double @_ZN15SkIntersections17VerticalInterceptERK7SkDLined(%struct.SkDLine* dereferenceable(32), double) local_unnamed_addr #3

declare i32 @_ZN15SkIntersections19HorizontalInterceptERK7SkDQuadfPd(%struct.SkDQuad* dereferenceable(48), float, double*) local_unnamed_addr #3

declare i32 @_ZN15SkIntersections17VerticalInterceptERK7SkDQuadfPd(%struct.SkDQuad* dereferenceable(48), float, double*) local_unnamed_addr #3

declare i32 @_ZN15SkIntersections19HorizontalInterceptERK8SkDConicfPd(%struct.SkDConic* dereferenceable(56), float, double*) local_unnamed_addr #3

declare i32 @_ZN15SkIntersections17VerticalInterceptERK8SkDConicfPd(%struct.SkDConic* dereferenceable(56), float, double*) local_unnamed_addr #3

declare i32 @_ZNK8SkDCubic19horizontalIntersectEdPd(%struct.SkDCubic*, double, double*) local_unnamed_addr #3

declare i32 @_ZNK8SkDCubic17verticalIntersectEdPd(%struct.SkDCubic*, double, double*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL13fline_xy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDLine, align 16
  %5 = bitcast %struct.SkDLine* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %4, i64 0, i32 0, i64 1, i32 0
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fpext <2 x float> %8 to <2 x double>
  %10 = bitcast %struct.SkDLine* %4 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 16
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %6 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = call { double, double } @_ZNK7SkDLine5ptAtTEd(%struct.SkDLine* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  %17 = extractvalue { double, double } %16, 0
  %18 = extractvalue { double, double } %16, 1
  %19 = fptrunc double %17 to float
  %20 = insertelement <2 x float> undef, float %19, i32 0
  %21 = fptrunc double %18 to float
  %22 = insertelement <2 x float> %20, float %21, i32 1
  ret <2 x float> %22
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL13fquad_xy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDQuad, align 16
  %5 = bitcast %struct.SkDQuad* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #12
  %6 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %4, i64 0, i32 0, i64 1, i32 0
  %7 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %4, i64 0, i32 0, i64 2, i32 0
  %8 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fpext <2 x float> %9 to <2 x double>
  %11 = bitcast %struct.SkDQuad* %4 to <2 x double>*
  store <2 x double> %10, <2 x double>* %11, align 16
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %6 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %7 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = call { double, double } @_ZNK7SkDQuad5ptAtTEd(%struct.SkDQuad* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #12
  %23 = extractvalue { double, double } %22, 0
  %24 = extractvalue { double, double } %22, 1
  %25 = fptrunc double %23 to float
  %26 = insertelement <2 x float> undef, float %25, i32 0
  %27 = fptrunc double %24 to float
  %28 = insertelement <2 x float> %26, float %27, i32 1
  ret <2 x float> %28
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL14fconic_xy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDConic, align 16
  %5 = bitcast %struct.SkDConic* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL9left_edgeP7SkPointN6SkPath4VerbEfPN7Contour9DirectionE.conic to i8*), i64 56, i1 false) #12
  %6 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = bitcast %struct.SkDConic* %4 to <2 x double>*
  store <2 x double> %8, <2 x double>* %9, align 16
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %11 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 0, i32 0, i64 1, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %11 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 0, i32 0, i64 2, i32 0
  %18 = bitcast float* %16 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %17 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 1
  store float %1, float* %22, align 16
  %23 = call { double, double } @_ZNK8SkDConic5ptAtTEd(%struct.SkDConic* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #12
  %24 = extractvalue { double, double } %23, 0
  %25 = extractvalue { double, double } %23, 1
  %26 = fptrunc double %24 to float
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = fptrunc double %25 to float
  %29 = insertelement <2 x float> %27, float %28, i32 1
  ret <2 x float> %29
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL14fcubic_xy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDCubic, align 16
  %5 = bitcast %struct.SkDCubic* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #12
  %6 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = bitcast %struct.SkDCubic* %4 to <2 x double>*
  store <2 x double> %8, <2 x double>* %9, align 16
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %11 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 1, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %11 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 2, i32 0
  %18 = bitcast float* %16 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %17 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %23 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 3, i32 0
  %24 = bitcast float* %22 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = fpext <2 x float> %25 to <2 x double>
  %27 = bitcast double* %23 to <2 x double>*
  store <2 x double> %26, <2 x double>* %27, align 16
  %28 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #12
  %29 = extractvalue { double, double } %28, 0
  %30 = extractvalue { double, double } %28, 1
  %31 = fptrunc double %29 to float
  %32 = insertelement <2 x float> undef, float %31, i32 0
  %33 = fptrunc double %30 to float
  %34 = insertelement <2 x float> %32, float %33, i32 1
  ret <2 x float> %34
}

declare { double, double } @_ZNK7SkDLine5ptAtTEd(%struct.SkDLine*, double) local_unnamed_addr #3

declare { double, double } @_ZNK7SkDQuad5ptAtTEd(%struct.SkDQuad*, double) local_unnamed_addr #3

declare { double, double } @_ZNK8SkDConic5ptAtTEd(%struct.SkDConic*, double) local_unnamed_addr #3

declare { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic*, double) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal <2 x float> @_ZL15fline_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #11 {
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %5 = bitcast float* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fsub <2 x float> %6, %8
  ret <2 x float> %9
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL15fquad_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDQuad, align 16
  %5 = bitcast %struct.SkDQuad* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #12
  %6 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %4, i64 0, i32 0, i64 1, i32 0
  %7 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %4, i64 0, i32 0, i64 2, i32 0
  %8 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fpext <2 x float> %9 to <2 x double>
  %11 = bitcast %struct.SkDQuad* %4 to <2 x double>*
  store <2 x double> %10, <2 x double>* %11, align 16
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = bitcast double* %6 to <2 x double>*
  store <2 x double> %15, <2 x double>* %16, align 16
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %7 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = call { double, double } @_ZNK7SkDQuad7dxdyAtTEd(%struct.SkDQuad* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #12
  %23 = extractvalue { double, double } %22, 0
  %24 = extractvalue { double, double } %22, 1
  %25 = fptrunc double %23 to float
  %26 = insertelement <2 x float> undef, float %25, i32 0
  %27 = fptrunc double %24 to float
  %28 = insertelement <2 x float> %26, float %27, i32 1
  ret <2 x float> %28
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL16fconic_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDConic, align 16
  %5 = bitcast %struct.SkDConic* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 8 bitcast ({ %struct.SkDQuad, float, [4 x i8] }* @__const._ZL9left_edgeP7SkPointN6SkPath4VerbEfPN7Contour9DirectionE.conic to i8*), i64 56, i1 false) #12
  %6 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = bitcast %struct.SkDConic* %4 to <2 x double>*
  store <2 x double> %8, <2 x double>* %9, align 16
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %11 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 0, i32 0, i64 1, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %11 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 0, i32 0, i64 2, i32 0
  %18 = bitcast float* %16 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %17 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %4, i64 0, i32 1
  store float %1, float* %22, align 16
  %23 = call { double, double } @_ZNK8SkDConic7dxdyAtTEd(%struct.SkDConic* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #12
  %24 = extractvalue { double, double } %23, 0
  %25 = extractvalue { double, double } %23, 1
  %26 = fptrunc double %24 to float
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = fptrunc double %25 to float
  %29 = insertelement <2 x float> %27, float %28, i32 1
  ret <2 x float> %29
}

; Function Attrs: nounwind ssp uwtable
define internal <2 x float> @_ZL16fcubic_dxdy_at_tPK7SkPointfd(%struct.SkPoint* nocapture readonly, float, double) #2 {
  %4 = alloca %struct.SkDCubic, align 16
  %5 = bitcast %struct.SkDCubic* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #12
  %6 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fpext <2 x float> %7 to <2 x double>
  %9 = bitcast %struct.SkDCubic* %4 to <2 x double>*
  store <2 x double> %8, <2 x double>* %9, align 16
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %11 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 1, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fpext <2 x float> %13 to <2 x double>
  %15 = bitcast double* %11 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 16
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 2, i32 0
  %18 = bitcast float* %16 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fpext <2 x float> %19 to <2 x double>
  %21 = bitcast double* %17 to <2 x double>*
  store <2 x double> %20, <2 x double>* %21, align 16
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %23 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %4, i64 0, i32 0, i64 3, i32 0
  %24 = bitcast float* %22 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = fpext <2 x float> %25 to <2 x double>
  %27 = bitcast double* %23 to <2 x double>*
  store <2 x double> %26, <2 x double>* %27, align 16
  %28 = call { double, double } @_ZNK8SkDCubic7dxdyAtTEd(%struct.SkDCubic* nonnull %4, double %2) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #12
  %29 = extractvalue { double, double } %28, 0
  %30 = extractvalue { double, double } %28, 1
  %31 = fptrunc double %29 to float
  %32 = insertelement <2 x float> undef, float %31, i32 0
  %33 = fptrunc double %30 to float
  %34 = insertelement <2 x float> %32, float %33, i32 1
  ret <2 x float> %34
}

declare { double, double } @_ZNK7SkDQuad7dxdyAtTEd(%struct.SkDQuad*, double) local_unnamed_addr #3

declare { double, double } @_ZNK8SkDConic7dxdyAtTEd(%struct.SkDConic*, double) local_unnamed_addr #3

declare { double, double } @_ZNK8SkDCubic7dxdyAtTEd(%struct.SkDCubic*, double) local_unnamed_addr #3

declare zeroext i1 @_ZNK7SkDQuad12monotonicInXEv(%struct.SkDQuad*) local_unnamed_addr #3

declare i32 @_ZN7SkDQuad11FindExtremaEPKdPd(double*, double*) local_unnamed_addr #3

declare i32 @_ZN8SkDConic11FindExtremaEPKdfPd(double*, float, double*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkDCubic12monotonicInXEv(%struct.SkDCubic*) local_unnamed_addr #3

declare i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double*, double*) local_unnamed_addr #3

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #3

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #3

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #3

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder*, <2 x float>, <2 x float>) local_unnamed_addr #3

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder*, <2 x float>, <2 x float>, float) local_unnamed_addr #3

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder*, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #3

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder*) local_unnamed_addr #3

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #4

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder21privateReverseAddPathERK6SkPath(%class.SkPathBuilder*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!5 = distinct !{!5, !"_ZNK6SkPath9RangeIterdeEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!8 = distinct !{!8, !"_ZNK6SkPath9RangeIterdeEv"}
