; ModuleID = '../../native_client/src/trusted/service_runtime/nacl_text.c'
source_filename = "../../native_client/src/trusted/service_runtime/nacl_text.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescEffector = type { %struct.NaClDescEffectorVtbl* }
%struct.NaClDescEffectorVtbl = type { void (%struct.NaClDescEffector*, i64, i64)* }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClThread = type { i64 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDynamicRegion = type { i64, i64, i32, i32 }
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClDescImcShm = type { %struct.NaClDesc, i32, i64 }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.nacl_abi_stat = type opaque
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClPerfCounter = type { [128 x i8], i32, [16 x %struct.nacl_abi_timeval], [16 x [20 x i8]] }
%struct.nacl_abi_timeval = type { i64, i32 }

@.str = private unnamed_addr constant [51 x i8] c"NaClMakeDynamicTextShared: shm_vaddr_base = %08lx\0A\00", align 1
@.str.1 = private unnamed_addr constant [75 x i8] c"NaClMakeDynamicTextShared:  rodata / data segments not allocation aligned\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c" not using shm for text\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"shm_upper_bound = %08lx\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"NaClMakeDynamicTextShared: dynamic_text_size = %lx\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Empty JITtable region\0A\00", align 1
@.str.6 = private unnamed_addr constant [86 x i8] c"NaClMakeDynamicTextShared: Map(,,0x%lx,size = 0x%x, prot=0x%x, flags=0x%x, offset=0)\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"Could not map in shm for dynamic text region\0A\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"NaClMakeDynamicTextShared: BitmapAllocate() failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"NaClDynamicRegionCreate: realloc failed\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.11 = private unnamed_addr constant [60 x i8] c"../../native_client/src/trusted/service_runtime/nacl_text.c\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"natp->dynamic_delete_generation <= generation\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"NaClTextDyncodeCreate\00", align 1
@.str.14 = private unnamed_addr constant [52 x i8] c"NaClTextDyncodeCreate: Dynamic loading not enabled\0A\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"NaClTextDyncodeCreate: Non-bundle-aligned address or size\0A\00", align 1
@.str.16 = private unnamed_addr constant [50 x i8] c"NaClTextDyncodeCreate: Dest address out of range\0A\00", align 1
@.str.17 = private unnamed_addr constant [48 x i8] c"NaClTextDyncodeCreate: Below dynamic code area\0A\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"NaClTextDyncodeCreate: Above dynamic code area\0A\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"VALIDATION SKIPPED.\0A\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"*DynRegionValidate\00", align 1
@.str.21 = private unnamed_addr constant [69 x i8] c"VALIDATION FAILED for dynamically-loaded code: continuing anyway...\0A\00", align 1
@.str.22 = private unnamed_addr constant [58 x i8] c"NaClTextDyncodeCreate: Validation of dynamic code failed\0A\00", align 1
@.str.23 = private unnamed_addr constant [53 x i8] c"NaClTextDyncodeCreate: Code range already allocated\0A\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"NaClSysDyncodeCreate: Dynamic code syscalls are disabled\0A\00", align 1
@.str.25 = private unnamed_addr constant [51 x i8] c"NaClSysDyncodeCreate: Source address out of range\0A\00", align 1
@.str.26 = private unnamed_addr constant [66 x i8] c"NaClSysDyncodeModify: Dynamic code modification is not supported\0A\00", align 1
@.str.27 = private unnamed_addr constant [58 x i8] c"NaClSysDyncodeModify: Dynamic code syscalls are disabled\0A\00", align 1
@.str.28 = private unnamed_addr constant [51 x i8] c"NaClSysDyncodeModify: Dynamic loading not enabled\0A\00", align 1
@.str.29 = private unnamed_addr constant [44 x i8] c"NaClSysDyncodeModify: Address out of range\0A\00", align 1
@.str.30 = private unnamed_addr constant [51 x i8] c"NaClSysDyncodeModify: Can't find region to modify\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"endbundle-beginbundle < UINT32_MAX\00", align 1
@.str.32 = private unnamed_addr constant [57 x i8] c"NaClSysDyncodeModify: Validation of dynamic code failed\0A\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"NaClSysDyncodeModify: Copying of replacement code failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [58 x i8] c"NaClSysDyncodeDelete: Dynamic code syscalls are disabled\0A\00", align 1
@.str.35 = private unnamed_addr constant [51 x i8] c"NaClSysDyncodeDelete: Dynamic loading not enabled\0A\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"NaClSysDyncodeDelete: Address out of range\0A\00", align 1
@.str.37 = private unnamed_addr constant [51 x i8] c"NaClSysDyncodeDelete: Can't find region to delete\0A\00", align 1
@.str.38 = private unnamed_addr constant [66 x i8] c"NaClSysDyncodeDelete:Overflow, can only delete INT32_MAX regions\0A\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"shm\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"NaClMakeDynamicTextShared: shm alloc ctor for text failed\0A\00", align 1
@.str.41 = private unnamed_addr constant [50 x i8] c"NaClUserToSys: uaddr 0x%08lx, addr space %d bits\0A\00", align 1
@NaClDescEffectorTrustedMemStruct = external constant %struct.NaClDescEffector, align 8
@.str.42 = private unnamed_addr constant [49 x i8] c"!BitmapIsBitSet(nap->dynamic_page_bitmap, index)\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"*writable_addr == 0\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"MakeDynamicCodePageVisible: NaClMprotect() failed\0A\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"0 == ((uintptr_t) dest & 3)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClMakeDynamicTextShared(%struct.NaClApp* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i64 %3) #6
  %4 = add i64 %3, 65535
  %5 = and i64 %4, -65536
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i64 %5) #6
  %6 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 8
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 9
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 27
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0)) #6
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %75

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 10
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 11
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, -65536
  br label %20

20:                                               ; preds = %16, %12
  %21 = phi i64 [ %19, %16 ], [ %14, %12 ]
  %22 = icmp eq i64 %21, 0
  %23 = select i1 %22, i64 %5, i64 %21
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i64 %23) #6
  %24 = sub i64 %23, %5
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0), i64 %24) #6
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %75

27:                                               ; preds = %20
  %28 = tail call noalias i8* @malloc(i64 96) #6
  %29 = bitcast i8* %28 to %struct.NaClDescImcShm*
  %30 = icmp eq i8* %28, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0)) #6
  br label %32

32:                                               ; preds = %31, %27
  %33 = tail call i32 @NaClDescImcShmAllocCtor(%struct.NaClDescImcShm* %29, i64 %24, i32 1) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @free(i8* %28) #6
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i64 0, i64 0)) #6
  br label %75

36:                                               ; preds = %32
  %37 = bitcast i8* %28 to %struct.NaClDesc*
  br i1 %30, label %75, label %38

38:                                               ; preds = %36
  %39 = icmp eq i64 %5, 0
  %40 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %41 = load i8, i8* %40, align 8
  br i1 %39, label %46, label %42

42:                                               ; preds = %38
  %43 = zext i8 %41 to i64
  %44 = lshr i64 %5, %43
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42, %38
  %47 = zext i8 %41 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.41, i64 0, i64 0), i64 %5, i32 %47) #6
  br label %48

48:                                               ; preds = %42, %46
  %49 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %5
  %52 = trunc i64 %24 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6, i64 0, i64 0), i64 %51, i32 %52, i32 0, i32 17) #6
  %53 = bitcast i8* %28 to %struct.NaClDescVtbl**
  %54 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %53, align 8
  %55 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %54, i64 0, i32 1
  %56 = load i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)** %55, align 8
  %57 = inttoptr i64 %51 to i8*
  %58 = tail call i64 %56(%struct.NaClDesc* nonnull %37, %struct.NaClDescEffector* nonnull @NaClDescEffectorTrustedMemStruct, i8* %57, i64 %24, i32 0, i32 17, i64 0) #6
  %59 = icmp eq i64 %51, %58
  br i1 %59, label %61, label %60

60:                                               ; preds = %48
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %61

61:                                               ; preds = %48, %60
  %62 = lshr i64 %24, 16
  %63 = add nuw nsw i64 %62, 7
  %64 = lshr i64 %63, 3
  %65 = and i64 %64, 536870911
  %66 = tail call noalias i8* @malloc(i64 %65) #6
  %67 = icmp eq i8* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %66, i8 0, i64 %65, i1 false) #6
  %69 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 30
  store i8* %66, i8** %69, align 8
  br label %72

70:                                               ; preds = %61
  %71 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 30
  store i8* null, i8** %71, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %72

72:                                               ; preds = %68, %70
  store i64 %5, i64* %6, align 8
  store i64 %23, i64* %7, align 8
  %73 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 28
  %74 = bitcast %struct.NaClDesc** %73 to i8**
  store i8* %28, i8** %74, align 8
  br label %75

75:                                               ; preds = %35, %36, %72, %26, %11
  %76 = phi i32 [ 0, %26 ], [ 0, %72 ], [ 0, %11 ], [ 64, %36 ], [ 64, %35 ]
  ret i32 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.NaClDynamicRegion* @NaClDynamicRegionFindClosestLEQ(%struct.NaClApp* nocapture readonly, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 32
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %8 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %7, align 8
  %9 = add nsw i32 %4, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %8, i64 %10, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %1
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = sext i32 %4 to i64
  %16 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %8, i64 %15
  %17 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %16, i64 -1
  br label %56

18:                                               ; preds = %6
  %19 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %8, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, %1
  br i1 %21, label %56, label %22

22:                                               ; preds = %18
  %23 = icmp sgt i32 %4, 17
  br i1 %23, label %30, label %26

24:                                               ; preds = %30
  %25 = sext i32 %40 to i64
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ 0, %22 ], [ %25, %24 ]
  %28 = phi i32 [ %4, %22 ], [ %41, %24 ]
  %29 = sext i32 %28 to i64
  br label %44

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %41, %30 ], [ %4, %22 ]
  %32 = phi i32 [ %40, %30 ], [ 0, %22 ]
  %33 = sub nsw i32 %31, %32
  %34 = sdiv i32 %33, 2
  %35 = add nsw i32 %34, %32
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %8, i64 %36, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %1
  %40 = select i1 %39, i32 %32, i32 %35
  %41 = select i1 %39, i32 %35, i32 %31
  %42 = add nsw i32 %40, 17
  %43 = icmp slt i32 %42, %41
  br i1 %43, label %30, label %24

44:                                               ; preds = %26, %48
  %45 = phi i64 [ %27, %26 ], [ %46, %48 ]
  %46 = add nsw i64 %45, 1
  %47 = icmp slt i64 %46, %29
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %8, i64 %46, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %50, %1
  br i1 %51, label %52, label %44

52:                                               ; preds = %48, %44
  %53 = shl i64 %45, 32
  %54 = ashr exact i64 %53, 32
  %55 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %8, i64 %54
  br label %56

56:                                               ; preds = %18, %2, %52, %14
  %57 = phi %struct.NaClDynamicRegion* [ %17, %14 ], [ %55, %52 ], [ null, %2 ], [ null, %18 ]
  ret %struct.NaClDynamicRegion* %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.NaClDynamicRegion* @NaClDynamicRegionFind(%struct.NaClApp* nocapture readonly, i64, i64) local_unnamed_addr #3 {
  %4 = add i64 %1, -1
  %5 = add i64 %4, %2
  %6 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 32
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %11 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %10, align 8
  %12 = add nsw i32 %7, -1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %11, i64 %13, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %5
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = sext i32 %7 to i64
  %19 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %11, i64 %18
  %20 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %19, i64 -1
  br label %59

21:                                               ; preds = %9
  %22 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %11, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %23, %5
  br i1 %24, label %70, label %25

25:                                               ; preds = %21
  %26 = icmp sgt i32 %7, 17
  br i1 %26, label %33, label %29

27:                                               ; preds = %33
  %28 = sext i32 %43 to i64
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i64 [ 0, %25 ], [ %28, %27 ]
  %31 = phi i32 [ %7, %25 ], [ %44, %27 ]
  %32 = sext i32 %31 to i64
  br label %47

33:                                               ; preds = %25, %33
  %34 = phi i32 [ %44, %33 ], [ %7, %25 ]
  %35 = phi i32 [ %43, %33 ], [ 0, %25 ]
  %36 = sub nsw i32 %34, %35
  %37 = sdiv i32 %36, 2
  %38 = add nsw i32 %37, %35
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %11, i64 %39, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, %5
  %43 = select i1 %42, i32 %35, i32 %38
  %44 = select i1 %42, i32 %38, i32 %34
  %45 = add nsw i32 %43, 17
  %46 = icmp slt i32 %45, %44
  br i1 %46, label %33, label %27

47:                                               ; preds = %51, %29
  %48 = phi i64 [ %30, %29 ], [ %49, %51 ]
  %49 = add nsw i64 %48, 1
  %50 = icmp slt i64 %49, %32
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %11, i64 %49, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp ugt i64 %53, %5
  br i1 %54, label %55, label %47

55:                                               ; preds = %51, %47
  %56 = shl i64 %48, 32
  %57 = ashr exact i64 %56, 32
  %58 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %11, i64 %57
  br label %59

59:                                               ; preds = %17, %55
  %60 = phi %struct.NaClDynamicRegion* [ %20, %17 ], [ %58, %55 ]
  %61 = icmp eq %struct.NaClDynamicRegion* %60, null
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %60, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %60, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %64
  %68 = icmp ugt i64 %67, %1
  %69 = select i1 %68, %struct.NaClDynamicRegion* %60, %struct.NaClDynamicRegion* null
  br label %70

70:                                               ; preds = %21, %3, %59, %62
  %71 = phi %struct.NaClDynamicRegion* [ null, %59 ], [ %69, %62 ], [ null, %3 ], [ null, %21 ]
  ret %struct.NaClDynamicRegion* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDynamicRegionCreate(%struct.NaClApp* nocapture, i64, i64, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 33
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 32
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %24

10:                                               ; preds = %4
  %11 = shl nsw i32 %6, 1
  %12 = icmp slt i32 %6, 16
  %13 = select i1 %12, i32 32, i32 %11
  store i32 %13, i32* %5, align 4
  %14 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %15 = bitcast %struct.NaClDynamicRegion** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %13 to i64
  %18 = mul nsw i64 %17, 24
  %19 = tail call i8* @realloc(i8* %16, i64 %18) #6
  store i8* %19, i8** %15, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %10
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %144

22:                                               ; preds = %10
  %23 = load i32, i32* %7, align 8
  br label %24

24:                                               ; preds = %22, %4
  %25 = phi i32 [ %23, %22 ], [ %8, %4 ]
  %26 = add i64 %1, -1
  %27 = add i64 %26, %2
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %92, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %31 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %30, align 8
  %32 = add nsw i32 %25, -1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %31, i64 %33, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %35, %27
  br i1 %36, label %41, label %37

37:                                               ; preds = %29
  %38 = sext i32 %25 to i64
  %39 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %31, i64 %38
  %40 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %39, i64 -1
  br label %79

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %31, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp ugt i64 %43, %27
  br i1 %44, label %92, label %45

45:                                               ; preds = %41
  %46 = icmp sgt i32 %25, 17
  br i1 %46, label %53, label %49

47:                                               ; preds = %53
  %48 = sext i32 %63 to i64
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ 0, %45 ], [ %48, %47 ]
  %51 = phi i32 [ %25, %45 ], [ %64, %47 ]
  %52 = sext i32 %51 to i64
  br label %67

53:                                               ; preds = %45, %53
  %54 = phi i32 [ %64, %53 ], [ %25, %45 ]
  %55 = phi i32 [ %63, %53 ], [ 0, %45 ]
  %56 = sub nsw i32 %54, %55
  %57 = sdiv i32 %56, 2
  %58 = add nsw i32 %57, %55
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %31, i64 %59, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp ugt i64 %61, %27
  %63 = select i1 %62, i32 %55, i32 %58
  %64 = select i1 %62, i32 %58, i32 %54
  %65 = add nsw i32 %63, 17
  %66 = icmp slt i32 %65, %64
  br i1 %66, label %53, label %47

67:                                               ; preds = %71, %49
  %68 = phi i64 [ %50, %49 ], [ %69, %71 ]
  %69 = add nsw i64 %68, 1
  %70 = icmp slt i64 %69, %52
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %31, i64 %69, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp ugt i64 %73, %27
  br i1 %74, label %75, label %67

75:                                               ; preds = %71, %67
  %76 = shl i64 %68, 32
  %77 = ashr exact i64 %76, 32
  %78 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %31, i64 %77
  br label %79

79:                                               ; preds = %37, %75
  %80 = phi %struct.NaClDynamicRegion* [ %40, %37 ], [ %78, %75 ]
  %81 = icmp eq %struct.NaClDynamicRegion* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %80, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %80, i64 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %84
  %88 = icmp ugt i64 %87, %1
  br i1 %88, label %144, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %91 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %90, align 8
  br label %95

92:                                               ; preds = %41, %24, %79
  %93 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %94 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %93, align 8
  br label %95

95:                                               ; preds = %89, %92
  %96 = phi %struct.NaClDynamicRegion* [ %94, %92 ], [ %91, %89 ]
  %97 = phi %struct.NaClDynamicRegion* [ %94, %92 ], [ %80, %89 ]
  %98 = sext i32 %25 to i64
  %99 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %96, i64 %98
  %100 = icmp eq %struct.NaClDynamicRegion* %97, %99
  br i1 %100, label %111, label %101

101:                                              ; preds = %95, %106
  %102 = phi %struct.NaClDynamicRegion* [ %107, %106 ], [ %97, %95 ]
  %103 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %102, i64 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp ult i64 %104, %1
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %102, i64 1
  %108 = icmp eq %struct.NaClDynamicRegion* %107, %99
  br i1 %108, label %109, label %101

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %99, i64 0, i32 0
  br label %133

111:                                              ; preds = %101, %95
  %112 = phi %struct.NaClDynamicRegion* [ %97, %95 ], [ %102, %101 ]
  %113 = icmp eq %struct.NaClDynamicRegion* %112, %99
  %114 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %112, i64 0, i32 0
  br i1 %113, label %133, label %115

115:                                              ; preds = %111, %115
  %116 = phi i64* [ %130, %115 ], [ %114, %111 ]
  %117 = phi i32 [ %129, %115 ], [ %3, %111 ]
  %118 = phi i32 [ %127, %115 ], [ -1, %111 ]
  %119 = phi i64 [ %124, %115 ], [ %2, %111 ]
  %120 = phi i64 [ %122, %115 ], [ %1, %111 ]
  %121 = bitcast i64* %116 to %struct.NaClDynamicRegion*
  %122 = load i64, i64* %116, align 8
  %123 = getelementptr inbounds i64, i64* %116, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds i64, i64* %116, i64 2
  %126 = bitcast i64* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %121, i64 0, i32 3
  %129 = load i32, i32* %128, align 4
  store i64 %120, i64* %116, align 8
  store i64 %119, i64* %123, align 8
  store i32 %118, i32* %126, align 8
  store i32 %117, i32* %128, align 4
  %130 = getelementptr inbounds i64, i64* %116, i64 3
  %131 = bitcast i64* %130 to %struct.NaClDynamicRegion*
  %132 = icmp eq %struct.NaClDynamicRegion* %99, %131
  br i1 %132, label %133, label %115

133:                                              ; preds = %115, %109, %111
  %134 = phi i64 [ %1, %111 ], [ %1, %109 ], [ %122, %115 ]
  %135 = phi i64 [ %2, %111 ], [ %2, %109 ], [ %124, %115 ]
  %136 = phi i32 [ -1, %111 ], [ -1, %109 ], [ %127, %115 ]
  %137 = phi i32 [ %3, %111 ], [ %3, %109 ], [ %129, %115 ]
  %138 = phi i64* [ %114, %111 ], [ %110, %109 ], [ %130, %115 ]
  store i64 %134, i64* %138, align 8
  %139 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %96, i64 %98, i32 1
  store i64 %135, i64* %139, align 8
  %140 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %96, i64 %98, i32 2
  store i32 %136, i32* %140, align 8
  %141 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %96, i64 %98, i32 3
  store i32 %137, i32* %141, align 4
  %142 = load i32, i32* %7, align 8
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %7, align 8
  br label %144

144:                                              ; preds = %82, %133, %21
  %145 = phi i32 [ 0, %21 ], [ 1, %133 ], [ 0, %82 ]
  ret i32 %145
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClDynamicRegionDelete(%struct.NaClApp* nocapture, %struct.NaClDynamicRegion*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  %4 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %3, align 8
  %5 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 32
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %4, i64 %7
  %9 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %1, i64 1
  %10 = icmp ult %struct.NaClDynamicRegion* %9, %8
  br i1 %10, label %11, label %20

11:                                               ; preds = %2, %11
  %12 = phi %struct.NaClDynamicRegion* [ %16, %11 ], [ %9, %2 ]
  %13 = phi %struct.NaClDynamicRegion* [ %12, %11 ], [ %1, %2 ]
  %14 = bitcast %struct.NaClDynamicRegion* %13 to i8*
  %15 = bitcast %struct.NaClDynamicRegion* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  %16 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %12, i64 1
  %17 = icmp ult %struct.NaClDynamicRegion* %16, %8
  br i1 %17, label %11, label %18

18:                                               ; preds = %11
  %19 = load i32, i32* %5, align 8
  br label %20

20:                                               ; preds = %18, %2
  %21 = phi i32 [ %19, %18 ], [ %6, %2 ]
  %22 = add nsw i32 %21, -1
  store i32 %22, i32* %5, align 8
  %23 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 33
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 33
  %26 = sdiv i32 %24, 4
  %27 = icmp slt i32 %26, %21
  %28 = or i1 %25, %27
  br i1 %28, label %38, label %29

29:                                               ; preds = %20
  %30 = lshr i32 %24, 1
  store i32 %30, i32* %23, align 4
  %31 = bitcast %struct.NaClDynamicRegion** %3 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = zext i32 %30 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = tail call i8* @realloc(i8* %32, i64 %34) #6
  store i8* %35, i8** %31, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %29
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %38

38:                                               ; preds = %29, %20, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClSetThreadGeneration(%struct.NaClAppThread*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %7) #6
  %8 = load i32, i32* %3, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 353, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %11

11:                                               ; preds = %6, %10
  store i32 %1, i32* %3, align 8
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %7) #6
  br label %12

12:                                               ; preds = %2, %11
  ret void
}

declare void @NaClXMutexLock(%struct.NaClMutex*) local_unnamed_addr #2

declare void @NaClXMutexUnlock(%struct.NaClMutex*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClMinimumThreadGeneration(%struct.NaClApp*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 48
  tail call void @NaClXMutexLock(%struct.NaClMutex* %2) #6
  %3 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 49, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %1, %18
  %7 = phi i32 [ %19, %18 ], [ 2147483647, %1 ]
  %8 = phi i64 [ %20, %18 ], [ 0, %1 ]
  %9 = trunc i64 %8 to i32
  %10 = tail call %struct.NaClAppThread* @NaClGetThreadMu(%struct.NaClApp* %0, i32 %9) #6
  %11 = icmp eq %struct.NaClAppThread* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %10, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %13) #6
  %14 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %10, i64 0, i32 14
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %7, %15
  %17 = select i1 %16, i32 %15, i32 %7
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %13) #6
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i32 [ %17, %12 ], [ %7, %6 ]
  %20 = add nuw i64 %8, 1
  %21 = load i64, i64* %3, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %6, label %23

23:                                               ; preds = %18, %1
  %24 = phi i32 [ 2147483647, %1 ], [ %19, %18 ]
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %2) #6
  ret i32 %24
}

declare %struct.NaClAppThread* @NaClGetThreadMu(%struct.NaClApp*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClTextDyncodeCreate(%struct.NaClApp*, i32, i8*, i32, %struct.NaClValidationMetadata*) local_unnamed_addr #0 {
  %6 = alloca %struct.NaClPerfCounter, align 8
  %7 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 712, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 712, i1 false)
  call void @NaClPerfCounterCtor(%struct.NaClPerfCounter* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #6
  %8 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 28
  %9 = load %struct.NaClDesc*, %struct.NaClDesc** %8, align 8
  %10 = icmp eq %struct.NaClDesc* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14, i64 0, i64 0)) #6
  br label %158

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 15
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, -1
  %16 = or i32 %3, %1
  %17 = and i32 %15, %16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %12
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0)) #6
  br label %158

20:                                               ; preds = %12
  %21 = zext i32 %1 to i64
  %22 = zext i32 %3 to i64
  %23 = icmp eq i32 %1, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = add nuw nsw i64 %22, %21
  %26 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i64
  %29 = shl i64 1, %28
  %30 = icmp ult i64 %29, %25
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %21
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %36, label %37

36:                                               ; preds = %24, %20, %31
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %158

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 8
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %21
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %158

42:                                               ; preds = %37
  %43 = add i32 %3, %1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 9
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, -32
  %48 = icmp ult i64 %47, %44
  br i1 %48, label %49, label %50

49:                                               ; preds = %42
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %158

50:                                               ; preds = %42
  %51 = icmp eq i32 %3, 0
  br i1 %51, label %158, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 29
  call void @NaClXMutexLock(%struct.NaClMutex* %53) #6
  %54 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 43
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = call i32 @NaClValidateCode(%struct.NaClApp* %0, i64 %21, i8* %2, i64 %22, %struct.NaClValidationMetadata* %4) #6
  %59 = icmp eq i32 %58, 0
  %60 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)) #6
  %61 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %6) #6
  br i1 %59, label %71, label %65

62:                                               ; preds = %52
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0)) #6
  %63 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)) #6
  %64 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %6) #6
  br label %71

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 42
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.21, i64 0, i64 0)) #6
  br label %71

70:                                               ; preds = %65
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.22, i64 0, i64 0)) #6
  br label %156

71:                                               ; preds = %62, %69, %57
  %72 = call i32 @NaClDynamicRegionCreate(%struct.NaClApp* %0, i64 %34, i64 %22, i32 0)
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %156

75:                                               ; preds = %71
  %76 = load i64, i64* %38, align 8
  %77 = trunc i64 %76 to i32
  %78 = sub i32 %1, %77
  %79 = and i32 %78, -65536
  %80 = add i32 %3, 65535
  %81 = add i32 %78, %80
  %82 = and i32 %81, -65536
  %83 = sub i32 %82, %79
  %84 = call fastcc i64 @CachedMapWritableText(%struct.NaClApp* %0, i32 %79, i32 %83) #6
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %156, label %86

86:                                               ; preds = %75
  %87 = and i32 %78, 65535
  %88 = inttoptr i64 %84 to i8*
  %89 = zext i32 %87 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = load i32, i32* %13, align 8
  %92 = add nsw i32 %91, -1
  %93 = ptrtoint i8* %90 to i64
  %94 = and i64 %93, 3
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %86
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 391, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0)) #6
  br label %97

97:                                               ; preds = %96, %86
  %98 = sext i32 %3 to i64
  %99 = getelementptr inbounds i8, i8* %90, i64 %98
  %100 = bitcast i8* %99 to i32*
  %101 = icmp sgt i32 %3, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %97
  %103 = bitcast i8* %90 to i32*
  %104 = bitcast i8* %2 to i32*
  %105 = sext i32 %92 to i64
  br label %106

106:                                              ; preds = %114, %102
  %107 = phi i32* [ %103, %102 ], [ %115, %114 ]
  %108 = phi i32* [ %104, %102 ], [ %116, %114 ]
  %109 = ptrtoint i32* %107 to i64
  %110 = and i64 %109, %105
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  %113 = load i32, i32* %108, align 4
  store i32 %113, i32* %107, align 4
  br label %114

114:                                              ; preds = %112, %106
  %115 = getelementptr inbounds i32, i32* %107, i64 1
  %116 = getelementptr inbounds i32, i32* %108, i64 1
  %117 = icmp ult i32* %115, %100
  br i1 %117, label %106, label %118

118:                                              ; preds = %114, %97
  call void asm sideeffect "sfence", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !2
  br i1 %95, label %120, label %119

119:                                              ; preds = %118
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 415, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0)) #6
  br label %120

120:                                              ; preds = %118, %119
  %121 = getelementptr inbounds i8, i8* %90, i64 %22
  %122 = sext i32 %91 to i64
  br label %123

123:                                              ; preds = %123, %120
  %124 = phi i8* [ %90, %120 ], [ %129, %123 ]
  %125 = phi i8* [ %2, %120 ], [ %130, %123 ]
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = bitcast i8* %124 to i32*
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds i8, i8* %124, i64 %122
  %130 = getelementptr inbounds i8, i8* %125, i64 %122
  %131 = icmp ult i8* %129, %121
  br i1 %131, label %123, label %132

132:                                              ; preds = %123
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  %133 = load i64, i64* %38, align 8
  %134 = trunc i64 %133 to i32
  %135 = sub i32 %1, %134
  %136 = and i32 %135, -65536
  %137 = add i32 %135, %80
  %138 = and i32 %137, -65536
  %139 = sub i32 %138, %136
  %140 = icmp ugt i32 %139, 65536
  br i1 %140, label %141, label %156

141:                                              ; preds = %132
  %142 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 34
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 35
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  %147 = or i32 %145, %143
  %148 = icmp eq i32 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %156, label %150

150:                                              ; preds = %141
  %151 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 36
  %152 = bitcast i64* %151 to i8**
  %153 = load i8*, i8** %152, align 8
  %154 = zext i32 %145 to i64
  call void @NaClHostDescUnmapUnsafe(i8* %153, i64 %154) #6
  %155 = bitcast i32* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 16, i1 false) #6
  br label %156

156:                                              ; preds = %75, %150, %141, %132, %74, %70
  %157 = phi i32 [ -22, %70 ], [ -22, %74 ], [ 0, %132 ], [ 0, %141 ], [ 0, %150 ], [ -12, %75 ]
  call void @NaClXMutexUnlock(%struct.NaClMutex* %53) #6
  br label %158

158:                                              ; preds = %50, %156, %49, %41, %36, %19, %11
  %159 = phi i32 [ -22, %11 ], [ -22, %19 ], [ -14, %36 ], [ -14, %41 ], [ -14, %49 ], [ %157, %156 ], [ 0, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %7) #6
  ret i32 %159
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @NaClPerfCounterCtor(%struct.NaClPerfCounter*, i8*) local_unnamed_addr #2

declare i32 @NaClValidateCode(%struct.NaClApp*, i64, i8*, i64, %struct.NaClValidationMetadata*) local_unnamed_addr #2

declare i32 @NaClPerfCounterMark(%struct.NaClPerfCounter*, i8*) local_unnamed_addr #2

declare i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysDyncodeCreate(%struct.NaClAppThread* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %6 = load %struct.NaClApp*, %struct.NaClApp** %5, align 8
  %7 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 26
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %34

11:                                               ; preds = %4
  %12 = zext i32 %2 to i64
  %13 = zext i32 %3 to i64
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = add nuw nsw i64 %13, %12
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = zext i8 %18 to i64
  %20 = shl i64 1, %19
  %21 = icmp ult i64 %20, %16
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %12
  %26 = icmp eq i64 %25, -1
  br i1 %26, label %27, label %28

27:                                               ; preds = %15, %11, %22
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.25, i64 0, i64 0)) #6
  br label %34

28:                                               ; preds = %22
  %29 = tail call noalias i8* @malloc(i64 %13) #6
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = inttoptr i64 %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 %32, i64 %13, i1 false)
  %33 = tail call i32 @NaClTextDyncodeCreate(%struct.NaClApp* %6, i32 %1, i8* nonnull %29, i32 %3, %struct.NaClValidationMetadata* null)
  tail call void @free(i8* nonnull %29) #6
  br label %34

34:                                               ; preds = %28, %31, %27, %10
  %35 = phi i32 [ -14, %27 ], [ %33, %31 ], [ -38, %10 ], [ -12, %28 ]
  ret i32 %35
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysDyncodeModify(%struct.NaClAppThread* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %5 = alloca [32 x i8], align 16
  %6 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %7 = load %struct.NaClApp*, %struct.NaClApp** %6, align 8
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 32, i1 false)
  %10 = load %struct.NaClValidatorInterface*, %struct.NaClValidatorInterface** %9, align 8
  %11 = getelementptr inbounds %struct.NaClValidatorInterface, %struct.NaClValidatorInterface* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %4
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.26, i64 0, i64 0)) #6
  br label %232

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 26
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0)) #6
  br label %232

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 28
  %22 = load %struct.NaClDesc*, %struct.NaClDesc** %21, align 8
  %23 = icmp eq %struct.NaClDesc* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.28, i64 0, i64 0)) #6
  br label %232

25:                                               ; preds = %20
  %26 = icmp eq i32 %3, 0
  br i1 %26, label %232, label %27

27:                                               ; preds = %25
  %28 = zext i32 %1 to i64
  %29 = zext i32 %3 to i64
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %29, %28
  %33 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = zext i8 %34 to i64
  %36 = shl i64 1, %35
  %37 = icmp ult i64 %36, %32
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %28
  br label %42

42:                                               ; preds = %27, %31, %38
  %43 = phi i64 [ %41, %38 ], [ -1, %27 ], [ -1, %31 ]
  %44 = zext i32 %2 to i64
  %45 = icmp eq i32 %2, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %29, %44
  %48 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 0
  %49 = load i8, i8* %48, align 8
  %50 = zext i8 %49 to i64
  %51 = shl i64 1, %50
  %52 = icmp ult i64 %51, %47
  br i1 %52, label %60, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, %44
  %57 = icmp eq i64 %56, -1
  %58 = icmp eq i64 %43, -1
  %59 = or i1 %58, %57
  br i1 %59, label %60, label %61

60:                                               ; preds = %46, %42, %53
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29, i64 0, i64 0)) #6
  br label %232

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 29
  tail call void @NaClXMutexLock(%struct.NaClMutex* %62) #6
  %63 = add i64 %43, %29
  %64 = add i64 %63, -1
  %65 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 32
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %136, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 31
  %70 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %69, align 8
  %71 = add nsw i32 %66, -1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %70, i64 %72, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %74, %64
  br i1 %75, label %80, label %76

76:                                               ; preds = %68
  %77 = sext i32 %66 to i64
  %78 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %70, i64 %77
  %79 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %78, i64 -1
  br label %118

80:                                               ; preds = %68
  %81 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %70, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp ugt i64 %82, %64
  br i1 %83, label %136, label %84

84:                                               ; preds = %80
  %85 = icmp sgt i32 %66, 17
  br i1 %85, label %92, label %88

86:                                               ; preds = %92
  %87 = sext i32 %102 to i64
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi i64 [ 0, %84 ], [ %87, %86 ]
  %90 = phi i32 [ %66, %84 ], [ %103, %86 ]
  %91 = sext i32 %90 to i64
  br label %106

92:                                               ; preds = %84, %92
  %93 = phi i32 [ %103, %92 ], [ %66, %84 ]
  %94 = phi i32 [ %102, %92 ], [ 0, %84 ]
  %95 = sub nsw i32 %93, %94
  %96 = sdiv i32 %95, 2
  %97 = add nsw i32 %96, %94
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %70, i64 %98, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp ugt i64 %100, %64
  %102 = select i1 %101, i32 %94, i32 %97
  %103 = select i1 %101, i32 %97, i32 %93
  %104 = add nsw i32 %102, 17
  %105 = icmp slt i32 %104, %103
  br i1 %105, label %92, label %86

106:                                              ; preds = %110, %88
  %107 = phi i64 [ %89, %88 ], [ %108, %110 ]
  %108 = add nsw i64 %107, 1
  %109 = icmp slt i64 %108, %91
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %70, i64 %108, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %112, %64
  br i1 %113, label %114, label %106

114:                                              ; preds = %110, %106
  %115 = shl i64 %107, 32
  %116 = ashr exact i64 %115, 32
  %117 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %70, i64 %116
  br label %118

118:                                              ; preds = %114, %76
  %119 = phi %struct.NaClDynamicRegion* [ %79, %76 ], [ %117, %114 ]
  %120 = icmp eq %struct.NaClDynamicRegion* %119, null
  br i1 %120, label %136, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %119, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %119, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, %123
  %127 = icmp ule i64 %126, %43
  %128 = icmp ugt i64 %123, %43
  %129 = or i1 %127, %128
  %130 = icmp ult i64 %126, %63
  %131 = or i1 %129, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %121
  %133 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %119, i64 0, i32 3
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %121, %80, %61, %118, %132
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.30, i64 0, i64 0)) #6
  br label %224

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 15
  %139 = load i32, i32* %138, align 8
  %140 = add nsw i32 %139, -1
  %141 = sub i32 0, %139
  %142 = sext i32 %141 to i64
  %143 = and i64 %43, %142
  %144 = sext i32 %139 to i64
  %145 = add i64 %64, %144
  %146 = and i64 %145, %142
  %147 = sext i32 %140 to i64
  %148 = and i64 %43, %147
  %149 = sub i64 %146, %143
  %150 = icmp ult i64 %149, 33
  br i1 %150, label %154, label %151

151:                                              ; preds = %137
  %152 = tail call noalias i8* @malloc(i64 %149) #6
  %153 = icmp eq i8* %152, null
  br i1 %153, label %224, label %154

154:                                              ; preds = %137, %151
  %155 = phi i8* [ %152, %151 ], [ %8, %137 ]
  %156 = inttoptr i64 %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %155, i8* align 1 %156, i64 %149, i1 false)
  %157 = getelementptr inbounds i8, i8* %155, i64 %148
  %158 = inttoptr i64 %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %158, i64 %29, i1 false)
  %159 = load i32, i32* %138, align 8
  %160 = sub i32 0, %159
  %161 = and i32 %160, %1
  %162 = sext i32 %159 to i64
  %163 = sub nsw i64 0, %162
  %164 = and i64 %43, %163
  %165 = icmp ult i64 %149, 4294967295
  br i1 %165, label %167, label %166

166:                                              ; preds = %154
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0)) #6
  br label %167

167:                                              ; preds = %166, %154
  %168 = trunc i64 %149 to i32
  %169 = zext i32 %161 to i64
  %170 = inttoptr i64 %164 to i8*
  %171 = and i64 %149, 4294967295
  %172 = call i32 @NaClValidateCodeReplacement(%struct.NaClApp* %7, i64 %169, i8* %170, i8* %155, i64 %171) #6
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 42
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %174
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.21, i64 0, i64 0)) #6
  br label %180

179:                                              ; preds = %174
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.32, i64 0, i64 0)) #6
  br label %226

180:                                              ; preds = %178, %167
  %181 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 8
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = sub i32 %161, %183
  %185 = and i32 %184, -65536
  %186 = add i32 %168, 65535
  %187 = add i32 %184, %186
  %188 = and i32 %187, -65536
  %189 = sub i32 %188, %185
  %190 = call fastcc i64 @CachedMapWritableText(%struct.NaClApp* %7, i32 %185, i32 %189) #6
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %226, label %192

192:                                              ; preds = %180
  %193 = and i32 %184, 65535
  %194 = inttoptr i64 %190 to i8*
  %195 = zext i32 %193 to i64
  %196 = getelementptr inbounds i8, i8* %194, i64 %195
  %197 = call i32 @NaClCopyCode(%struct.NaClApp* %7, i64 %169, i8* %196, i8* %155, i64 %171) #6
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %200, label %199

199:                                              ; preds = %192
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #6
  br label %226

200:                                              ; preds = %192
  %201 = load i64, i64* %181, align 8
  %202 = trunc i64 %201 to i32
  %203 = sub i32 %161, %202
  %204 = and i32 %203, -65536
  %205 = add i32 %203, %186
  %206 = and i32 %205, -65536
  %207 = sub i32 %206, %204
  %208 = icmp ugt i32 %207, 65536
  br i1 %208, label %209, label %226

209:                                              ; preds = %200
  %210 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 34
  %211 = load i32, i32* %210, align 8
  %212 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 35
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  %215 = or i32 %213, %211
  %216 = icmp eq i32 %215, 0
  %217 = or i1 %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %209
  %219 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 36
  %220 = bitcast i64* %219 to i8**
  %221 = load i8*, i8** %220, align 8
  %222 = zext i32 %213 to i64
  call void @NaClHostDescUnmapUnsafe(i8* %221, i64 %222) #6
  %223 = bitcast i32* %210 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 0, i64 16, i1 false) #6
  br label %226

224:                                              ; preds = %136, %151
  %225 = phi i32 [ -12, %151 ], [ -14, %136 ]
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %62) #6
  br label %229

226:                                              ; preds = %180, %218, %209, %200, %199, %179
  %227 = phi i32 [ -22, %179 ], [ -22, %199 ], [ 0, %200 ], [ 0, %209 ], [ 0, %218 ], [ -12, %180 ]
  call void @NaClXMutexUnlock(%struct.NaClMutex* %62) #6
  %228 = icmp eq i8* %155, %8
  br i1 %228, label %232, label %229

229:                                              ; preds = %224, %226
  %230 = phi i32 [ %225, %224 ], [ %227, %226 ]
  %231 = phi i8* [ null, %224 ], [ %155, %226 ]
  call void @free(i8* %231) #6
  br label %232

232:                                              ; preds = %229, %226, %25, %60, %24, %19, %14
  %233 = phi i32 [ -22, %24 ], [ -14, %60 ], [ -38, %19 ], [ -38, %14 ], [ 0, %25 ], [ %227, %226 ], [ %230, %229 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret i32 %233
}

declare i32 @NaClValidateCodeReplacement(%struct.NaClApp*, i64, i8*, i8*, i64) local_unnamed_addr #2

declare i32 @NaClCopyCode(%struct.NaClApp*, i64, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysDyncodeDelete(%struct.NaClAppThread*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %5 = load %struct.NaClApp*, %struct.NaClApp** %4, align 8
  %6 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 26
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %263

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 28
  %12 = load %struct.NaClDesc*, %struct.NaClDesc** %11, align 8
  %13 = icmp eq %struct.NaClDesc* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.35, i64 0, i64 0)) #6
  br label %263

15:                                               ; preds = %10
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 29
  tail call void @NaClXMutexLock(%struct.NaClMutex* %18) #6
  %19 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 37
  %20 = load i32, i32* %19, align 8
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %18) #6
  %21 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 14
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %20
  br i1 %23, label %263, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %25) #6
  %26 = load i32, i32* %21, align 8
  %27 = icmp sgt i32 %26, %20
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 353, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %29

29:                                               ; preds = %28, %24
  store i32 %20, i32* %21, align 8
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %25) #6
  br label %263

30:                                               ; preds = %15
  %31 = zext i32 %1 to i64
  %32 = zext i32 %2 to i64
  %33 = icmp eq i32 %1, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = add nuw nsw i64 %32, %31
  %36 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 0
  %37 = load i8, i8* %36, align 8
  %38 = zext i8 %37 to i64
  %39 = shl i64 1, %38
  %40 = icmp ult i64 %39, %35
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %31
  %45 = icmp eq i64 %44, -1
  br i1 %45, label %46, label %47

46:                                               ; preds = %34, %30, %41
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0)) #6
  br label %263

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 29
  tail call void @NaClXMutexLock(%struct.NaClMutex* %48) #6
  %49 = add nsw i64 %32, -1
  %50 = add i64 %49, %44
  %51 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 32
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %122, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 31
  %56 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %55, align 8
  %57 = add nsw i32 %52, -1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %56, i64 %58, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp ugt i64 %60, %50
  br i1 %61, label %66, label %62

62:                                               ; preds = %54
  %63 = sext i32 %52 to i64
  %64 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %56, i64 %63
  %65 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %64, i64 -1
  br label %104

66:                                               ; preds = %54
  %67 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %56, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ugt i64 %68, %50
  br i1 %69, label %122, label %70

70:                                               ; preds = %66
  %71 = icmp sgt i32 %52, 17
  br i1 %71, label %78, label %74

72:                                               ; preds = %78
  %73 = sext i32 %88 to i64
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ 0, %70 ], [ %73, %72 ]
  %76 = phi i32 [ %52, %70 ], [ %89, %72 ]
  %77 = sext i32 %76 to i64
  br label %92

78:                                               ; preds = %70, %78
  %79 = phi i32 [ %89, %78 ], [ %52, %70 ]
  %80 = phi i32 [ %88, %78 ], [ 0, %70 ]
  %81 = sub nsw i32 %79, %80
  %82 = sdiv i32 %81, 2
  %83 = add nsw i32 %82, %80
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %56, i64 %84, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp ugt i64 %86, %50
  %88 = select i1 %87, i32 %80, i32 %83
  %89 = select i1 %87, i32 %83, i32 %79
  %90 = add nsw i32 %88, 17
  %91 = icmp slt i32 %90, %89
  br i1 %91, label %78, label %72

92:                                               ; preds = %96, %74
  %93 = phi i64 [ %75, %74 ], [ %94, %96 ]
  %94 = add nsw i64 %93, 1
  %95 = icmp slt i64 %94, %77
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %56, i64 %94, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, %50
  br i1 %99, label %100, label %92

100:                                              ; preds = %96, %92
  %101 = shl i64 %93, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %56, i64 %102
  br label %104

104:                                              ; preds = %100, %62
  %105 = phi %struct.NaClDynamicRegion* [ %65, %62 ], [ %103, %100 ]
  %106 = icmp eq %struct.NaClDynamicRegion* %105, null
  br i1 %106, label %122, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %105, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %105, i64 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, %109
  %113 = icmp ugt i64 %112, %44
  %114 = icmp eq i64 %109, %44
  %115 = and i1 %113, %114
  %116 = icmp eq i64 %111, %32
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %107
  %119 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %105, i64 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %66, %47, %107, %104, %118
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.37, i64 0, i64 0)) #6
  br label %261

123:                                              ; preds = %118
  %124 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %105, i64 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %127, label %187

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 37
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 2147483647
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.38, i64 0, i64 0)) #6
  br label %261

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 8
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = sub i32 %1, %135
  %137 = and i32 %136, -65536
  %138 = add i32 %2, 65535
  %139 = add i32 %136, %138
  %140 = and i32 %139, -65536
  %141 = sub i32 %140, %137
  %142 = tail call fastcc i64 @CachedMapWritableText(%struct.NaClApp* %5, i32 %137, i32 %141) #6
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %261, label %144

144:                                              ; preds = %132
  %145 = and i32 %136, 65535
  %146 = inttoptr i64 %142 to i8*
  %147 = zext i32 %145 to i64
  %148 = getelementptr inbounds i8, i8* %146, i64 %147
  %149 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 15
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds i8, i8* %148, i64 %32
  %152 = bitcast i8* %151 to i32*
  %153 = bitcast i8* %148 to i32*
  %154 = sext i32 %150 to i64
  %155 = lshr i64 %154, 2
  br label %156

156:                                              ; preds = %156, %144
  %157 = phi i32* [ %153, %144 ], [ %158, %156 ]
  store i32 -185273100, i32* %157, align 4
  %158 = getelementptr inbounds i32, i32* %157, i64 %155
  %159 = icmp ult i32* %158, %152
  br i1 %159, label %156, label %160

160:                                              ; preds = %156
  tail call void asm sideeffect "sfence", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !2
  tail call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  %161 = load i64, i64* %133, align 8
  %162 = trunc i64 %161 to i32
  %163 = sub i32 %1, %162
  %164 = and i32 %163, -65536
  %165 = add i32 %163, %138
  %166 = and i32 %165, -65536
  %167 = sub i32 %166, %164
  %168 = icmp ugt i32 %167, 65536
  br i1 %168, label %169, label %184

169:                                              ; preds = %160
  %170 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 34
  %171 = load i32, i32* %170, align 8
  %172 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 35
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  %175 = or i32 %173, %171
  %176 = icmp eq i32 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %184, label %178

178:                                              ; preds = %169
  %179 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 36
  %180 = bitcast i64* %179 to i8**
  %181 = load i8*, i8** %180, align 8
  %182 = zext i32 %173 to i64
  tail call void @NaClHostDescUnmapUnsafe(i8* %181, i64 %182) #6
  %183 = bitcast i32* %170 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 16, i1 false) #6
  br label %184

184:                                              ; preds = %160, %169, %178
  %185 = load i32, i32* %128, align 8
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %128, align 8
  store i32 %186, i32* %124, align 8
  br label %187

187:                                              ; preds = %184, %123
  %188 = phi i32 [ %186, %184 ], [ %125, %123 ]
  %189 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 37
  %190 = load i32, i32* %189, align 8
  %191 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 14
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %192, %190
  br i1 %193, label %201, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %195) #6
  %196 = load i32, i32* %191, align 8
  %197 = icmp sgt i32 %196, %190
  br i1 %197, label %198, label %199

198:                                              ; preds = %194
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 353, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %199

199:                                              ; preds = %198, %194
  store i32 %190, i32* %191, align 8
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %195) #6
  %200 = load i32, i32* %124, align 8
  br label %201

201:                                              ; preds = %187, %199
  %202 = phi i32 [ %188, %187 ], [ %200, %199 ]
  %203 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 48
  tail call void @NaClXMutexLock(%struct.NaClMutex* %203) #6
  %204 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 49, i32 0
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %201
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %203) #6
  br label %227

208:                                              ; preds = %201, %220
  %209 = phi i32 [ %221, %220 ], [ 2147483647, %201 ]
  %210 = phi i64 [ %222, %220 ], [ 0, %201 ]
  %211 = trunc i64 %210 to i32
  %212 = tail call %struct.NaClAppThread* @NaClGetThreadMu(%struct.NaClApp* %5, i32 %211) #6
  %213 = icmp eq %struct.NaClAppThread* %212, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %212, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %215) #6
  %216 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %212, i64 0, i32 14
  %217 = load i32, i32* %216, align 8
  %218 = icmp sgt i32 %209, %217
  %219 = select i1 %218, i32 %217, i32 %209
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %215) #6
  br label %220

220:                                              ; preds = %214, %208
  %221 = phi i32 [ %219, %214 ], [ %209, %208 ]
  %222 = add nuw i64 %210, 1
  %223 = load i64, i64* %204, align 8
  %224 = icmp ult i64 %222, %223
  br i1 %224, label %208, label %225

225:                                              ; preds = %220
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %203) #6
  %226 = icmp sgt i32 %202, %221
  br i1 %226, label %261, label %227

227:                                              ; preds = %207, %225
  %228 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %55, align 8
  %229 = load i32, i32* %51, align 8
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %228, i64 %230
  %232 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %105, i64 1
  %233 = icmp ult %struct.NaClDynamicRegion* %232, %231
  br i1 %233, label %234, label %243

234:                                              ; preds = %227, %234
  %235 = phi %struct.NaClDynamicRegion* [ %239, %234 ], [ %232, %227 ]
  %236 = phi %struct.NaClDynamicRegion* [ %235, %234 ], [ %105, %227 ]
  %237 = bitcast %struct.NaClDynamicRegion* %236 to i8*
  %238 = bitcast %struct.NaClDynamicRegion* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %238, i64 24, i1 false) #6
  %239 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %235, i64 1
  %240 = icmp ult %struct.NaClDynamicRegion* %239, %231
  br i1 %240, label %234, label %241

241:                                              ; preds = %234
  %242 = load i32, i32* %51, align 8
  br label %243

243:                                              ; preds = %241, %227
  %244 = phi i32 [ %242, %241 ], [ %229, %227 ]
  %245 = add nsw i32 %244, -1
  store i32 %245, i32* %51, align 8
  %246 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %5, i64 0, i32 33
  %247 = load i32, i32* %246, align 4
  %248 = icmp slt i32 %247, 33
  %249 = sdiv i32 %247, 4
  %250 = icmp slt i32 %249, %244
  %251 = or i1 %248, %250
  br i1 %251, label %261, label %252

252:                                              ; preds = %243
  %253 = lshr i32 %247, 1
  store i32 %253, i32* %246, align 4
  %254 = bitcast %struct.NaClDynamicRegion** %55 to i8**
  %255 = load i8*, i8** %254, align 8
  %256 = zext i32 %253 to i64
  %257 = mul nuw nsw i64 %256, 24
  %258 = tail call i8* @realloc(i8* %255, i64 %257) #6
  store i8* %258, i8** %254, align 8
  %259 = icmp eq i8* %258, null
  br i1 %259, label %260, label %261

260:                                              ; preds = %252
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %261

261:                                              ; preds = %132, %260, %252, %243, %225, %131, %122
  %262 = phi i32 [ -14, %122 ], [ -14, %131 ], [ -11, %225 ], [ 0, %243 ], [ 0, %252 ], [ 0, %260 ], [ -12, %132 ]
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %48) #6
  br label %263

263:                                              ; preds = %29, %17, %261, %46, %14, %9
  %264 = phi i32 [ -22, %14 ], [ -14, %46 ], [ %262, %261 ], [ -38, %9 ], [ 0, %17 ], [ 0, %29 ]
  ret i32 %264
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClDyncodeVisit(%struct.NaClApp*, void (i8*, %struct.NaClDynamicRegion*)* nocapture, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 29
  tail call void @NaClXMutexLock(%struct.NaClMutex* %4) #6
  %5 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 32
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 31
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i64 [ 0, %8 ], [ %14, %10 ]
  %12 = load %struct.NaClDynamicRegion*, %struct.NaClDynamicRegion** %9, align 8
  %13 = getelementptr inbounds %struct.NaClDynamicRegion, %struct.NaClDynamicRegion* %12, i64 %11
  tail call void %1(i8* %2, %struct.NaClDynamicRegion* %13) #6
  %14 = add nuw nsw i64 %11, 1
  %15 = load i32, i32* %5, align 8
  %16 = sext i32 %15 to i64
  %17 = icmp slt i64 %14, %16
  br i1 %17, label %10, label %18

18:                                               ; preds = %10, %3
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %4) #6
  ret void
}

declare i32 @NaClDescImcShmAllocCtor(%struct.NaClDescImcShm*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @CachedMapWritableText(%struct.NaClApp* nocapture, i32, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 28
  %5 = load %struct.NaClDesc*, %struct.NaClDesc** %4, align 8
  %6 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 34
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %1
  %9 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 35
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %2
  %12 = and i1 %8, %11
  br i1 %12, label %127, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 35
  %15 = icmp eq i32 %10, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 36
  %18 = bitcast i64* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = zext i32 %10 to i64
  tail call void @NaClHostDescUnmapUnsafe(i8* %19, i64 %20) #6
  %21 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  br label %22

22:                                               ; preds = %13, %16
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %127, label %24

24:                                               ; preds = %22
  %25 = bitcast %struct.NaClDesc* %5 to %struct.NaClDescVtbl**
  %26 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %25, align 8
  %27 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %26, i64 0, i32 1
  %28 = load i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)** %27, align 8
  %29 = zext i32 %2 to i64
  %30 = zext i32 %1 to i64
  %31 = tail call i64 %28(%struct.NaClDesc* %5, %struct.NaClDescEffector* nonnull @NaClDescEffectorTrustedMemStruct, i8* null, i64 %29, i32 3, i32 1, i64 %30) #6
  %32 = icmp ult i64 %31, -65536
  br i1 %32, label %33, label %130

33:                                               ; preds = %24
  %34 = lshr i32 %1, 16
  %35 = add i32 %2, %1
  %36 = lshr i32 %35, 16
  %37 = icmp ult i32 %34, %36
  br i1 %37, label %38, label %125

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 30
  %40 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 8
  %41 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %42 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  br label %43

43:                                               ; preds = %38, %121
  %44 = phi i32 [ %34, %38 ], [ %123, %121 ]
  %45 = icmp ult i32 %44, %36
  br i1 %45, label %46, label %121

46:                                               ; preds = %43
  %47 = load i8*, i8** %39, align 8
  br label %48

48:                                               ; preds = %59, %46
  %49 = phi i32 [ %44, %46 ], [ %60, %59 ]
  %50 = lshr i32 %49, 3
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = and i32 %49, 7
  %56 = shl i32 1, %55
  %57 = and i32 %56, %54
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %48
  %60 = add nsw i32 %49, 1
  %61 = icmp eq i32 %60, %36
  br i1 %61, label %62, label %48

62:                                               ; preds = %48, %59
  %63 = phi i32 [ %49, %48 ], [ %36, %59 ]
  %64 = icmp ugt i32 %63, %44
  br i1 %64, label %65, label %121

65:                                               ; preds = %62
  %66 = shl i32 %44, 16
  %67 = sub i32 %66, %1
  %68 = zext i32 %67 to i64
  %69 = add i64 %31, %68
  %70 = sub i32 %63, %44
  %71 = shl i32 %70, 16
  br label %72

72:                                               ; preds = %88, %65
  %73 = phi i32 [ %44, %65 ], [ %94, %88 ]
  %74 = load i8*, i8** %39, align 8
  %75 = lshr i32 %73, 3
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = and i32 %73, 7
  %81 = shl i32 1, %80
  %82 = and i32 %81, %79
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %72
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 463, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.42, i64 0, i64 0)) #6
  %85 = load i8*, i8** %39, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 %76
  %87 = load i8, i8* %86, align 1
  br label %88

88:                                               ; preds = %84, %72
  %89 = phi i8 [ %78, %72 ], [ %87, %84 ]
  %90 = phi i8* [ %74, %72 ], [ %85, %84 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 %76
  %92 = trunc i32 %81 to i8
  %93 = or i8 %89, %92
  store i8 %93, i8* %91, align 1
  %94 = add i32 %73, 1
  %95 = icmp eq i32 %94, %63
  br i1 %95, label %96, label %72

96:                                               ; preds = %88
  %97 = inttoptr i64 %69 to i8*
  %98 = zext i32 %71 to i64
  %99 = load i64, i64* %40, align 8
  %100 = zext i32 %66 to i64
  %101 = add i64 %99, %100
  %102 = icmp eq i64 %101, 0
  %103 = load i8, i8* %41, align 8
  br i1 %102, label %108, label %104

104:                                              ; preds = %96
  %105 = zext i8 %103 to i64
  %106 = lshr i64 %101, %105
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104, %96
  %109 = zext i8 %103 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.41, i64 0, i64 0), i64 %101, i32 %109) #6
  br label %110

110:                                              ; preds = %108, %104
  %111 = load i64, i64* %42, align 8
  %112 = add i64 %111, %101
  %113 = inttoptr i64 %112 to i8*
  %114 = load i8, i8* %97, align 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %110
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0)) #6
  br label %117

117:                                              ; preds = %116, %110
  tail call void @NaClFillMemoryRegionWithHalt(i8* %97, i64 %98) #6
  %118 = tail call i32 @NaClMprotect(i8* %113, i64 %98, i32 5) #6
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #6
  br label %121

121:                                              ; preds = %43, %120, %117, %62
  %122 = phi i32 [ %63, %120 ], [ %63, %117 ], [ %63, %62 ], [ %44, %43 ]
  %123 = add i32 %122, 1
  %124 = icmp ult i32 %123, %36
  br i1 %124, label %43, label %125

125:                                              ; preds = %121, %33
  store i32 %1, i32* %6, align 8
  store i32 %2, i32* %14, align 4
  %126 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 36
  store i64 %31, i64* %126, align 8
  br label %127

127:                                              ; preds = %3, %125, %22
  %128 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 36
  %129 = load i64, i64* %128, align 8
  br label %130

130:                                              ; preds = %24, %127
  %131 = phi i64 [ %129, %127 ], [ 0, %24 ]
  ret i64 %131
}

declare void @NaClHostDescUnmapUnsafe(i8*, i64) local_unnamed_addr #2

declare void @NaClFillMemoryRegionWithHalt(i8*, i64) local_unnamed_addr #2

declare i32 @NaClMprotect(i8*, i64, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 152847}
!3 = !{i32 154174}
